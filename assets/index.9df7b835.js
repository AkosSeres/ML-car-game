var QR=Object.defineProperty;var tD=(s,t,e)=>t in s?QR(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var jt=(s,t,e)=>(tD(s,typeof t!="symbol"?t+"":t,e),e);function eD(s,t){for(var e=0;e<t.length;e++){const n=t[e];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in s)){const r=Object.getOwnPropertyDescriptor(n,i);r&&Object.defineProperty(s,i,r.get?r:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();function qe(){}const nD=s=>s;function Ji(s,t){for(const e in t)s[e]=t[e];return s}function jT(s){return s()}function h1(){return Object.create(null)}function ei(s){s.forEach(jT)}function Sr(s){return typeof s=="function"}function Yn(s,t){return s!=s?t==t:s!==t||s&&typeof s=="object"||typeof s=="function"}function sD(s){return Object.keys(s).length===0}function lm(s,t,e,n){if(s){const i=XT(s,t,e,n);return s[0](i)}}function XT(s,t,e,n){return s[1]&&n?Ji(e.ctx.slice(),s[1](n(t))):e.ctx}function cm(s,t,e,n){if(s[2]&&n){const i=s[2](n(e));if(t.dirty===void 0)return i;if(typeof i=="object"){const r=[],o=Math.max(t.dirty.length,i.length);for(let a=0;a<o;a+=1)r[a]=t.dirty[a]|i[a];return r}return t.dirty|i}return t.dirty}function um(s,t,e,n,i,r){if(i){const o=XT(t,e,n,r);s.p(o,i)}}function hm(s){if(s.ctx.length>32){const t=[],e=s.ctx.length/32;for(let n=0;n<e;n++)t[n]=-1;return t}return-1}function yc(s){const t={};for(const e in s)e[0]!=="$"&&(t[e]=s[e]);return t}function wc(s,t){const e={};t=new Set(t);for(const n in s)!t.has(n)&&n[0]!=="$"&&(e[n]=s[n]);return e}function KT(s){return s&&Sr(s.destroy)?s.destroy:qe}const YT=typeof window<"u";let iD=YT?()=>window.performance.now():()=>Date.now(),Pv=YT?s=>requestAnimationFrame(s):qe;const uc=new Set;function ZT(s){uc.forEach(t=>{t.c(s)||(uc.delete(t),t.f())}),uc.size!==0&&Pv(ZT)}function rD(s){let t;return uc.size===0&&Pv(ZT),{promise:new Promise(e=>{uc.add(t={c:s,f:e})}),abort(){uc.delete(t)}}}function Et(s,t){s.appendChild(t)}function JT(s){if(!s)return document;const t=s.getRootNode?s.getRootNode():s.ownerDocument;return t&&t.host?t:s.ownerDocument}function oD(s){const t=Dt("style");return aD(JT(s),t),t.sheet}function aD(s,t){return Et(s.head||s,t),t.sheet}function It(s,t,e){s.insertBefore(t,e||null)}function Tt(s){s.parentNode.removeChild(s)}function QT(s,t){for(let e=0;e<s.length;e+=1)s[e]&&s[e].d(t)}function Dt(s){return document.createElement(s)}function fe(s){return document.createTextNode(s)}function Jt(){return fe(" ")}function Pr(){return fe("")}function xe(s,t,e,n){return s.addEventListener(t,e,n),()=>s.removeEventListener(t,e,n)}function st(s,t,e){e==null?s.removeAttribute(t):s.getAttribute(t)!==e&&s.setAttribute(t,e)}function bp(s,t){const e=Object.getOwnPropertyDescriptors(s.__proto__);for(const n in t)t[n]==null?s.removeAttribute(n):n==="style"?s.style.cssText=t[n]:n==="__value"?s.value=s[n]=t[n]:e[n]&&e[n].set?s[n]=t[n]:st(s,n,t[n])}function yp(s,t){Object.keys(t).forEach(e=>{lD(s,e,t[e])})}function lD(s,t,e){t in s?s[t]=typeof s[t]=="boolean"&&e===""?!0:e:st(s,t,e)}function bs(s){return s===""?null:+s}function cD(s){return Array.from(s.childNodes)}function wn(s,t){t=""+t,s.wholeText!==t&&(s.data=t)}function an(s,t){s.value=t==null?"":t}function kr(s,t,e,n){e===null?s.style.removeProperty(t):s.style.setProperty(t,e,n?"important":"")}function uD(s,t,{bubbles:e=!1,cancelable:n=!1}={}){const i=document.createEvent("CustomEvent");return i.initCustomEvent(s,e,n,t),i}function d1(s,t){return new s(t)}const wp=new Map;let _p=0;function hD(s){let t=5381,e=s.length;for(;e--;)t=(t<<5)-t^s.charCodeAt(e);return t>>>0}function dD(s,t){const e={stylesheet:oD(t),rules:{}};return wp.set(s,e),e}function f1(s,t,e,n,i,r,o,a=0){const l=16.666/n;let c=`{
`;for(let m=0;m<=1;m+=l){const x=t+(e-t)*r(m);c+=m*100+`%{${o(x,1-x)}}
`}const u=c+`100% {${o(e,1-e)}}
}`,h=`__svelte_${hD(u)}_${a}`,d=JT(s),{stylesheet:f,rules:p}=wp.get(d)||dD(d,s);p[h]||(p[h]=!0,f.insertRule(`@keyframes ${h} ${u}`,f.cssRules.length));const g=s.style.animation||"";return s.style.animation=`${g?`${g}, `:""}${h} ${n}ms linear ${i}ms 1 both`,_p+=1,h}function fD(s,t){const e=(s.style.animation||"").split(", "),n=e.filter(t?r=>r.indexOf(t)<0:r=>r.indexOf("__svelte")===-1),i=e.length-n.length;i&&(s.style.animation=n.join(", "),_p-=i,_p||pD())}function pD(){Pv(()=>{_p||(wp.forEach(s=>{const{ownerNode:t}=s.stylesheet;t&&Tt(t)}),wp.clear())})}let Qu;function Wu(s){Qu=s}function Ov(){if(!Qu)throw new Error("Function called outside component initialization");return Qu}function t2(s){Ov().$$.on_mount.push(s)}function p1(s,t){return Ov().$$.context.set(s,t),t}function es(s,t){const e=s.$$.callbacks[t.type];e&&e.slice().forEach(n=>n.call(this,t))}const Ru=[],_c=[],op=[],m1=[],mD=Promise.resolve();let Tx=!1;function gD(){Tx||(Tx=!0,mD.then(e2))}function th(s){op.push(s)}const a0=new Set;let ef=0;function e2(){const s=Qu;do{for(;ef<Ru.length;){const t=Ru[ef];ef++,Wu(t),xD(t.$$)}for(Wu(null),Ru.length=0,ef=0;_c.length;)_c.pop()();for(let t=0;t<op.length;t+=1){const e=op[t];a0.has(e)||(a0.add(e),e())}op.length=0}while(Ru.length);for(;m1.length;)m1.pop()();Tx=!1,a0.clear(),Wu(s)}function xD(s){if(s.fragment!==null){s.update(),ei(s.before_update);const t=s.dirty;s.dirty=[-1],s.fragment&&s.fragment.p(s.ctx,t),s.after_update.forEach(th)}}let gu;function vD(){return gu||(gu=Promise.resolve(),gu.then(()=>{gu=null})),gu}function l0(s,t,e){s.dispatchEvent(uD(`${t?"intro":"outro"}${e}`))}const ap=new Set;let no;function Ho(){no={r:0,c:[],p:no}}function qo(){no.r||ei(no.c),no=no.p}function Te(s,t){s&&s.i&&(ap.delete(s),s.i(t))}function De(s,t,e,n){if(s&&s.o){if(ap.has(s))return;ap.add(s),no.c.push(()=>{ap.delete(s),n&&(e&&s.d(1),n())}),s.o(t)}else n&&n()}const bD={duration:0};function g1(s,t,e,n){let i=t(s,e),r=n?0:1,o=null,a=null,l=null;function c(){l&&fD(s,l)}function u(d,f){const p=d.b-r;return f*=Math.abs(p),{a:r,b:d.b,d:p,duration:f,start:d.start,end:d.start+f,group:d.group}}function h(d){const{delay:f=0,duration:p=300,easing:g=nD,tick:m=qe,css:x}=i||bD,v={start:iD()+f,b:d};d||(v.group=no,no.r+=1),o||a?a=v:(x&&(c(),l=f1(s,r,d,p,f,g,x)),d&&m(0,1),o=u(v,p),th(()=>l0(s,d,"start")),rD(y=>{if(a&&y>a.start&&(o=u(a,p),a=null,l0(s,o.b,"start"),x&&(c(),l=f1(s,r,o.b,o.duration,0,g,i.css))),o){if(y>=o.end)m(r=o.b,1-r),l0(s,o.b,"end"),a||(o.b?c():--o.group.r||ei(o.group.c)),o=null;else if(y>=o.start){const b=y-o.start;r=o.a+o.d*g(b/o.duration),m(r,1-r)}}return!!(o||a)}))}return{run(d){Sr(i)?vD().then(()=>{i=i(),h(d)}):h(d)},end(){c(),o=a=null}}}function dm(s,t){const e={},n={},i={$$scope:1};let r=s.length;for(;r--;){const o=s[r],a=t[r];if(a){for(const l in o)l in a||(n[l]=1);for(const l in a)i[l]||(e[l]=a[l],i[l]=1);s[r]=a}else for(const l in o)i[l]=1}for(const o in n)o in e||(e[o]=void 0);return e}function n2(s){return typeof s=="object"&&s!==null?s:{}}function Fs(s){s&&s.c()}function Ss(s,t,e,n){const{fragment:i,after_update:r}=s.$$;i&&i.m(t,e),n||th(()=>{const o=s.$$.on_mount.map(jT).filter(Sr);s.$$.on_destroy?s.$$.on_destroy.push(...o):ei(o),s.$$.on_mount=[]}),r.forEach(th)}function Cs(s,t){const e=s.$$;e.fragment!==null&&(ei(e.on_destroy),e.fragment&&e.fragment.d(t),e.on_destroy=e.fragment=null,e.ctx=[])}function yD(s,t){s.$$.dirty[0]===-1&&(Ru.push(s),gD(),s.$$.dirty.fill(0)),s.$$.dirty[t/31|0]|=1<<t%31}function ni(s,t,e,n,i,r,o,a=[-1]){const l=Qu;Wu(s);const c=s.$$={fragment:null,ctx:[],props:r,update:qe,not_equal:i,bound:h1(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(l?l.$$.context:[])),callbacks:h1(),dirty:a,skip_bound:!1,root:t.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=e?e(s,t.props||{},(h,d,...f)=>{const p=f.length?f[0]:d;return c.ctx&&i(c.ctx[h],c.ctx[h]=p)&&(!c.skip_bound&&c.bound[h]&&c.bound[h](p),u&&yD(s,h)),d}):[],c.update(),u=!0,ei(c.before_update),c.fragment=n?n(c.ctx):!1,t.target){if(t.hydrate){const h=cD(t.target);c.fragment&&c.fragment.l(h),h.forEach(Tt)}else c.fragment&&c.fragment.c();t.intro&&Te(s.$$.fragment),Ss(s,t.target,t.anchor,t.customElement),e2()}Wu(l)}class si{$destroy(){Cs(this,1),this.$destroy=qe}$on(t,e){if(!Sr(e))return qe;const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const i=n.indexOf(e);i!==-1&&n.splice(i,1)}}$set(t){this.$$set&&!sD(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const zv="146",El={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ml={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},wD=0,x1=1,_D=2,s2=1,i2=2,Du=3,Oo=0,Zs=1,Ds=2,Ao=0,hc=1,v1=2,b1=3,y1=4,SD=5,Jl=100,CD=101,TD=102,w1=103,_1=104,ID=200,ED=201,MD=202,kD=203,r2=204,o2=205,AD=206,ND=207,RD=208,DD=209,$D=210,LD=0,FD=1,PD=2,Ix=3,OD=4,zD=5,BD=6,UD=7,fm=0,VD=1,WD=2,io=0,GD=1,HD=2,qD=3,jD=4,XD=5,a2=300,Sc=301,Cc=302,Ex=303,Mx=304,pm=306,kx=1e3,Hi=1001,Ax=1002,As=1003,S1=1004,C1=1005,pi=1006,KD=1007,mm=1008,za=1009,YD=1010,ZD=1011,l2=1012,JD=1013,Ca=1014,Ta=1015,eh=1016,QD=1017,t$=1018,dc=1020,e$=1021,n$=1022,qi=1023,s$=1024,i$=1025,Ra=1026,Tc=1027,r$=1028,o$=1029,a$=1030,l$=1031,c$=1033,c0=33776,u0=33777,h0=33778,d0=33779,T1=35840,I1=35841,E1=35842,M1=35843,u$=36196,k1=37492,A1=37496,N1=37808,R1=37809,D1=37810,$1=37811,L1=37812,F1=37813,P1=37814,O1=37815,z1=37816,B1=37817,U1=37818,V1=37819,W1=37820,G1=37821,H1=36492,Ba=3e3,pn=3001,h$=3200,d$=3201,gm=0,f$=1,Jr="srgb",Ia="srgb-linear",f0=7680,p$=519,q1=35044,j1="300 es",Nx=1035;class al{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const cs=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],p0=Math.PI/180,X1=180/Math.PI;function Kc(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(cs[s&255]+cs[s>>8&255]+cs[s>>16&255]+cs[s>>24&255]+"-"+cs[t&255]+cs[t>>8&255]+"-"+cs[t>>16&15|64]+cs[t>>24&255]+"-"+cs[e&63|128]+cs[e>>8&255]+"-"+cs[e>>16&255]+cs[e>>24&255]+cs[n&255]+cs[n>>8&255]+cs[n>>16&255]+cs[n>>24&255]).toLowerCase()}function ns(s,t,e){return Math.max(t,Math.min(e,s))}function m$(s,t){return(s%t+t)%t}function m0(s,t,e){return(1-e)*s+e*t}function K1(s){return(s&s-1)===0&&s!==0}function Rx(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function nf(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function qs(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class kt{constructor(t=0,e=0){kt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class vi{constructor(){vi.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=r,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],x=i[6],v=i[1],y=i[4],b=i[7],w=i[2],_=i[5],C=i[8];return r[0]=o*g+a*v+l*w,r[3]=o*m+a*y+l*_,r[6]=o*x+a*b+l*C,r[1]=c*g+u*v+h*w,r[4]=c*m+u*y+h*_,r[7]=c*x+u*b+h*C,r[2]=d*g+f*v+p*w,r[5]=d*m+f*y+p*_,r[8]=d*x+f*b+p*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*r*u+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*r,f=c*r-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return t[0]=h*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=d*g,t[4]=(u*e-i*l)*g,t[5]=(i*r-a*e)*g,t[6]=f*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=e*r+n*l,i[3]=e*o+n*c,i[6]=e*a+n*u,i[1]=-n*r+e*l,i[4]=-n*o+e*c,i[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function c2(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Sp(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Da(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function lp(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const g0={[Jr]:{[Ia]:Da},[Ia]:{[Jr]:lp}},Fi={legacyMode:!0,get workingColorSpace(){return Ia},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.legacyMode||t===e||!t||!e)return s;if(g0[t]&&g0[t][e]!==void 0){const n=g0[t][e];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}},u2={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Dn={r:0,g:0,b:0},Pi={h:0,s:0,l:0},sf={h:0,s:0,l:0};function x0(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function rf(s,t){return t.r=s.r,t.g=s.g,t.b=s.b,t}class Ue{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Jr){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Fi.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Ia){return this.r=t,this.g=e,this.b=n,Fi.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Ia){if(t=m$(t,1),e=ns(e,0,1),n=ns(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=x0(o,r,t+1/3),this.g=x0(o,r,t),this.b=x0(o,r,t-1/3)}return Fi.toWorkingColorSpace(this,i),this}setStyle(t,e=Jr){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Fi.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Fi.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,u,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Fi.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Fi.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=Jr){const n=u2[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Da(t.r),this.g=Da(t.g),this.b=Da(t.b),this}copyLinearToSRGB(t){return this.r=lp(t.r),this.g=lp(t.g),this.b=lp(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Jr){return Fi.fromWorkingColorSpace(rf(this,Dn),t),ns(Dn.r*255,0,255)<<16^ns(Dn.g*255,0,255)<<8^ns(Dn.b*255,0,255)<<0}getHexString(t=Jr){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ia){Fi.fromWorkingColorSpace(rf(this,Dn),e);const n=Dn.r,i=Dn.g,r=Dn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=Ia){return Fi.fromWorkingColorSpace(rf(this,Dn),e),t.r=Dn.r,t.g=Dn.g,t.b=Dn.b,t}getStyle(t=Jr){return Fi.fromWorkingColorSpace(rf(this,Dn),t),t!==Jr?`color(${t} ${Dn.r} ${Dn.g} ${Dn.b})`:`rgb(${Dn.r*255|0},${Dn.g*255|0},${Dn.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(Pi),Pi.h+=t,Pi.s+=e,Pi.l+=n,this.setHSL(Pi.h,Pi.s,Pi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Pi),t.getHSL(sf);const n=m0(Pi.h,sf.h,e),i=m0(Pi.s,sf.s,e),r=m0(Pi.l,sf.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ue.NAMES=u2;let kl;class h2{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{kl===void 0&&(kl=Sp("canvas")),kl.width=t.width,kl.height=t.height;const n=kl.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=kl}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Sp("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Da(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Da(e[n]/255)*255):e[n]=Da(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class d2{constructor(t=null){this.isSource=!0,this.uuid=Kc(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(v0(i[o].image)):r.push(v0(i[o]))}else r=v0(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function v0(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?h2.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let g$=0;class Qi extends al{constructor(t=Qi.DEFAULT_IMAGE,e=Qi.DEFAULT_MAPPING,n=Hi,i=Hi,r=pi,o=mm,a=qi,l=za,c=1,u=Ba){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:g$++}),this.uuid=Kc(),this.name="",this.source=new d2(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new kt(0,0),this.repeat=new kt(1,1),this.center=new kt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==a2)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case kx:t.x=t.x-Math.floor(t.x);break;case Hi:t.x=t.x<0?0:1;break;case Ax:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case kx:t.y=t.y-Math.floor(t.y);break;case Hi:t.y=t.y<0?0:1;break;case Ax:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Qi.DEFAULT_IMAGE=null;Qi.DEFAULT_MAPPING=a2;class jn{constructor(t=0,e=0,n=0,i=1){jn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+x-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const y=(c+1)/2,b=(f+1)/2,w=(x+1)/2,_=(u+d)/4,C=(h+g)/4,S=(p+m)/4;return y>b&&y>w?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=_/n,r=C/n):b>w?b<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(b),n=_/i,r=S/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=C/r,i=S/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-g)/v,this.z=(d-u)/v,this.w=Math.acos((c+f+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ua extends al{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new jn(0,0,t,e),this.scissorTest=!1,this.viewport=new jn(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new Qi(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:pi,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new d2(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class f2 extends Qi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=As,this.minFilter=As,this.wrapR=Hi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class x$ extends Qi{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=As,this.minFilter=As,this.wrapR=Hi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Va{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],g=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=g;return}if(h!==g||l!==d||c!==f||u!==p){let m=1-a;const x=l*d+c*f+u*p+h*g,v=x>=0?1:-1,y=1-x*x;if(y>Number.EPSILON){const w=Math.sqrt(y),_=Math.atan2(w,x*v);m=Math.sin(m*_)/w,a=Math.sin(a*_)/w}const b=a*v;if(l=l*m+d*b,c=c*m+f*b,u=u*m+p*b,h=h*m+g*b,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ns(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-n*c,this._z=r*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class H{constructor(t=0,e=0,n=0){H.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Y1.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Y1.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-r*i,h=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+u*-a-h*-o,this.y=u*l+d*-o+h*-r-c*-a,this.z=h*l+d*-a+c*-o-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return b0.copy(this).projectOnVector(t),this.sub(b0)}reflect(t){return this.sub(b0.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ns(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const b0=new H,Y1=new Va;class ir{constructor(t=new H(1/0,1/0,1/0),e=new H(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],h=t[l+1],d=t[l+2];u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),h=t.getY(l),d=t.getZ(l);u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ca.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)ca.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(ca)}else n.boundingBox===null&&n.computeBoundingBox(),y0.copy(n.boundingBox),y0.applyMatrix4(t.matrixWorld),this.union(y0);const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ca),ca.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(xu),of.subVectors(this.max,xu),Al.subVectors(t.a,xu),Nl.subVectors(t.b,xu),Rl.subVectors(t.c,xu),xo.subVectors(Nl,Al),vo.subVectors(Rl,Nl),ua.subVectors(Al,Rl);let e=[0,-xo.z,xo.y,0,-vo.z,vo.y,0,-ua.z,ua.y,xo.z,0,-xo.x,vo.z,0,-vo.x,ua.z,0,-ua.x,-xo.y,xo.x,0,-vo.y,vo.x,0,-ua.y,ua.x,0];return!w0(e,Al,Nl,Rl,of)||(e=[1,0,0,0,1,0,0,0,1],!w0(e,Al,Nl,Rl,of))?!1:(af.crossVectors(xo,vo),e=[af.x,af.y,af.z],w0(e,Al,Nl,Rl,of))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return ca.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(ca).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Br[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Br[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Br[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Br[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Br[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Br[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Br[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Br[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Br),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Br=[new H,new H,new H,new H,new H,new H,new H,new H],ca=new H,y0=new ir,Al=new H,Nl=new H,Rl=new H,xo=new H,vo=new H,ua=new H,xu=new H,of=new H,af=new H,ha=new H;function w0(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){ha.fromArray(s,r);const a=i.x*Math.abs(ha.x)+i.y*Math.abs(ha.y)+i.z*Math.abs(ha.z),l=t.dot(ha),c=e.dot(ha),u=n.dot(ha);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const v$=new ir,vu=new H,_0=new H;class Th{constructor(t=new H,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):v$.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;vu.subVectors(t,this.center);const e=vu.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(vu,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(_0.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(vu.copy(t.center).add(_0)),this.expandByPoint(vu.copy(t.center).sub(_0))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ur=new H,S0=new H,lf=new H,bo=new H,C0=new H,cf=new H,T0=new H;class xm{constructor(t=new H,e=new H(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ur)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ur.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ur.copy(this.direction).multiplyScalar(e).add(this.origin),Ur.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){S0.copy(t).add(e).multiplyScalar(.5),lf.copy(e).sub(t).normalize(),bo.copy(this.origin).sub(S0);const r=t.distanceTo(e)*.5,o=-this.direction.dot(lf),a=bo.dot(this.direction),l=-bo.dot(lf),c=bo.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=r*u,h>=0)if(d>=-p)if(d<=p){const g=1/u;h*=g,d*=g,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(lf).multiplyScalar(d).add(S0),f}intersectSphere(t,e){Ur.subVectors(t.center,this.origin);const n=Ur.dot(this.direction),i=Ur.dot(Ur)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),u>=0?(r=(t.min.y-d.y)*u,o=(t.max.y-d.y)*u):(r=(t.max.y-d.y)*u,o=(t.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-d.z)*h,l=(t.max.z-d.z)*h):(a=(t.max.z-d.z)*h,l=(t.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ur)!==null}intersectTriangle(t,e,n,i,r){C0.subVectors(e,t),cf.subVectors(n,t),T0.crossVectors(C0,cf);let o=this.direction.dot(T0),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;bo.subVectors(this.origin,t);const l=a*this.direction.dot(cf.crossVectors(bo,cf));if(l<0)return null;const c=a*this.direction.dot(C0.cross(bo));if(c<0||l+c>o)return null;const u=-a*bo.dot(T0);return u<0?null:this.at(u/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Je{constructor(){Je.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m){const x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=o,x[9]=a,x[13]=l,x[2]=c,x[6]=u,x[10]=h,x[14]=d,x[3]=f,x[7]=p,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Je().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Dl.setFromMatrixColumn(t,0).length(),r=1/Dl.setFromMatrixColumn(t,1).length(),o=1/Dl.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-g*c,e[9]=-a*l,e[2]=g-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d+g*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=g+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d-g*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=g-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+g,e[1]=l*h,e[5]=g*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=g-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-g*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+g,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=g*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(b$,t,y$)}lookAt(t,e,n){const i=this.elements;return js.subVectors(t,e),js.lengthSq()===0&&(js.z=1),js.normalize(),yo.crossVectors(n,js),yo.lengthSq()===0&&(Math.abs(n.z)===1?js.x+=1e-4:js.z+=1e-4,js.normalize(),yo.crossVectors(n,js)),yo.normalize(),uf.crossVectors(js,yo),i[0]=yo.x,i[4]=uf.x,i[8]=js.x,i[1]=yo.y,i[5]=uf.y,i[9]=js.y,i[2]=yo.z,i[6]=uf.z,i[10]=js.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],x=n[14],v=n[3],y=n[7],b=n[11],w=n[15],_=i[0],C=i[4],S=i[8],T=i[12],I=i[1],A=i[5],D=i[9],M=i[13],E=i[2],k=i[6],N=i[10],z=i[14],L=i[3],$=i[7],W=i[11],q=i[15];return r[0]=o*_+a*I+l*E+c*L,r[4]=o*C+a*A+l*k+c*$,r[8]=o*S+a*D+l*N+c*W,r[12]=o*T+a*M+l*z+c*q,r[1]=u*_+h*I+d*E+f*L,r[5]=u*C+h*A+d*k+f*$,r[9]=u*S+h*D+d*N+f*W,r[13]=u*T+h*M+d*z+f*q,r[2]=p*_+g*I+m*E+x*L,r[6]=p*C+g*A+m*k+x*$,r[10]=p*S+g*D+m*N+x*W,r[14]=p*T+g*M+m*z+x*q,r[3]=v*_+y*I+b*E+w*L,r[7]=v*C+y*A+b*k+w*$,r[11]=v*S+y*D+b*N+w*W,r[15]=v*T+y*M+b*z+w*q,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],g=t[7],m=t[11],x=t[15];return p*(+r*l*h-i*c*h-r*a*d+n*c*d+i*a*f-n*l*f)+g*(+e*l*f-e*c*d+r*o*d-i*o*f+i*c*u-r*l*u)+m*(+e*c*h-e*a*f-r*o*h+n*o*f+r*a*u-n*c*u)+x*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],g=t[13],m=t[14],x=t[15],v=h*m*c-g*d*c+g*l*f-a*m*f-h*l*x+a*d*x,y=p*d*c-u*m*c-p*l*f+o*m*f+u*l*x-o*d*x,b=u*g*c-p*h*c+p*a*f-o*g*f-u*a*x+o*h*x,w=p*h*l-u*g*l-p*a*d+o*g*d+u*a*m-o*h*m,_=e*v+n*y+i*b+r*w;if(_===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/_;return t[0]=v*C,t[1]=(g*d*r-h*m*r-g*i*f+n*m*f+h*i*x-n*d*x)*C,t[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*x+n*l*x)*C,t[3]=(h*l*r-a*d*r-h*i*c+n*d*c+a*i*f-n*l*f)*C,t[4]=y*C,t[5]=(u*m*r-p*d*r+p*i*f-e*m*f-u*i*x+e*d*x)*C,t[6]=(p*l*r-o*m*r-p*i*c+e*m*c+o*i*x-e*l*x)*C,t[7]=(o*d*r-u*l*r+u*i*c-e*d*c-o*i*f+e*l*f)*C,t[8]=b*C,t[9]=(p*h*r-u*g*r-p*n*f+e*g*f+u*n*x-e*h*x)*C,t[10]=(o*g*r-p*a*r+p*n*c-e*g*c-o*n*x+e*a*x)*C,t[11]=(u*a*r-o*h*r-u*n*c+e*h*c+o*n*f-e*a*f)*C,t[12]=w*C,t[13]=(u*g*i-p*h*i+p*n*d-e*g*d-u*n*m+e*h*m)*C,t[14]=(p*a*i-o*g*i-p*n*l+e*g*l+o*n*m-e*a*m)*C,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*C,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,u=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,u=o+o,h=a+a,d=r*c,f=r*u,p=r*h,g=o*u,m=o*h,x=a*h,v=l*c,y=l*u,b=l*h,w=n.x,_=n.y,C=n.z;return i[0]=(1-(g+x))*w,i[1]=(f+b)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(f-b)*_,i[5]=(1-(d+x))*_,i[6]=(m+v)*_,i[7]=0,i[8]=(p+y)*C,i[9]=(m-v)*C,i[10]=(1-(d+g))*C,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Dl.set(i[0],i[1],i[2]).length();const o=Dl.set(i[4],i[5],i[6]).length(),a=Dl.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Oi.copy(this);const c=1/r,u=1/o,h=1/a;return Oi.elements[0]*=c,Oi.elements[1]*=c,Oi.elements[2]*=c,Oi.elements[4]*=u,Oi.elements[5]*=u,Oi.elements[6]*=u,Oi.elements[8]*=h,Oi.elements[9]*=h,Oi.elements[10]*=h,e.setFromRotationMatrix(Oi),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-i),u=(e+t)/(e-t),h=(n+i)/(n-i),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,o){const a=this.elements,l=1/(e-t),c=1/(n-i),u=1/(o-r),h=(e+t)*l,d=(n+i)*c,f=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Dl=new H,Oi=new Je,b$=new H(0,0,0),y$=new H(1,1,1),yo=new H,uf=new H,js=new H,Z1=new Je,J1=new Va;class Ih{constructor(t=0,e=0,n=0,i=Ih.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(ns(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ns(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ns(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-ns(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ns(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ns(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Z1.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Z1,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return J1.setFromEuler(this),this.setFromQuaternion(J1,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Ih.DefaultOrder="XYZ";Ih.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Bv{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let w$=0;const Q1=new H,$l=new Va,Vr=new Je,hf=new H,bu=new H,_$=new H,S$=new Va,t_=new H(1,0,0),e_=new H(0,1,0),n_=new H(0,0,1),C$={type:"added"},s_={type:"removed"};class Xn extends al{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:w$++}),this.uuid=Kc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xn.DefaultUp.clone();const t=new H,e=new Ih,n=new Va,i=new H(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Je},normalMatrix:{value:new vi}}),this.matrix=new Je,this.matrixWorld=new Je,this.matrixAutoUpdate=Xn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Xn.DefaultMatrixWorldAutoUpdate,this.layers=new Bv,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return $l.setFromAxisAngle(t,e),this.quaternion.multiply($l),this}rotateOnWorldAxis(t,e){return $l.setFromAxisAngle(t,e),this.quaternion.premultiply($l),this}rotateX(t){return this.rotateOnAxis(t_,t)}rotateY(t){return this.rotateOnAxis(e_,t)}rotateZ(t){return this.rotateOnAxis(n_,t)}translateOnAxis(t,e){return Q1.copy(t).applyQuaternion(this.quaternion),this.position.add(Q1.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(t_,t)}translateY(t){return this.translateOnAxis(e_,t)}translateZ(t){return this.translateOnAxis(n_,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Vr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?hf.copy(t):hf.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),bu.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Vr.lookAt(bu,hf,this.up):Vr.lookAt(hf,bu,this.up),this.quaternion.setFromRotationMatrix(Vr),i&&(Vr.extractRotation(i.matrixWorld),$l.setFromRotationMatrix(Vr),this.quaternion.premultiply($l.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(C$)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(s_)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(s_)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Vr.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Vr.multiply(t.parent.matrixWorld)),t.applyMatrix4(Vr),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bu,t,_$),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bu,S$,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(t.shapes,h)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Xn.DefaultUp=new H(0,1,0);Xn.DefaultMatrixAutoUpdate=!0;Xn.DefaultMatrixWorldAutoUpdate=!0;const zi=new H,Wr=new H,I0=new H,Gr=new H,Ll=new H,Fl=new H,i_=new H,E0=new H,M0=new H,k0=new H;class gi{constructor(t=new H,e=new H,n=new H){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),zi.subVectors(t,e),i.cross(zi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){zi.subVectors(i,e),Wr.subVectors(n,e),I0.subVectors(t,e);const o=zi.dot(zi),a=zi.dot(Wr),l=zi.dot(I0),c=Wr.dot(Wr),u=Wr.dot(I0),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Gr),Gr.x>=0&&Gr.y>=0&&Gr.x+Gr.y<=1}static getUV(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,Gr),l.set(0,0),l.addScaledVector(r,Gr.x),l.addScaledVector(o,Gr.y),l.addScaledVector(a,Gr.z),l}static isFrontFacing(t,e,n,i){return zi.subVectors(n,e),Wr.subVectors(t,e),zi.cross(Wr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return zi.subVectors(this.c,this.b),Wr.subVectors(this.a,this.b),zi.cross(Wr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return gi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return gi.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return gi.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return gi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return gi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;Ll.subVectors(i,n),Fl.subVectors(r,n),E0.subVectors(t,n);const l=Ll.dot(E0),c=Fl.dot(E0);if(l<=0&&c<=0)return e.copy(n);M0.subVectors(t,i);const u=Ll.dot(M0),h=Fl.dot(M0);if(u>=0&&h<=u)return e.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(Ll,o);k0.subVectors(t,r);const f=Ll.dot(k0),p=Fl.dot(k0);if(p>=0&&f<=p)return e.copy(r);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),e.copy(n).addScaledVector(Fl,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return i_.subVectors(r,i),a=(h-u)/(h-u+(f-p)),e.copy(i).addScaledVector(i_,a);const x=1/(m+g+d);return o=g*x,a=d*x,e.copy(n).addScaledVector(Ll,o).addScaledVector(Fl,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let T$=0;class jo extends al{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:T$++}),this.uuid=Kc(),this.name="",this.type="Material",this.blending=hc,this.side=Oo,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=r2,this.blendDst=o2,this.blendEquation=Jl,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ix,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=p$,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=f0,this.stencilZFail=f0,this.stencilZPass=f0,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==hc&&(n.blending=this.blending),this.side!==Oo&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ll extends jo{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=fm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const In=new H,df=new kt;class Js{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=q1,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)df.fromBufferAttribute(this,e),df.applyMatrix3(t),this.setXY(e,df.x,df.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.applyMatrix3(t),this.setXYZ(e,In.x,In.y,In.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.applyMatrix4(t),this.setXYZ(e,In.x,In.y,In.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.applyNormalMatrix(t),this.setXYZ(e,In.x,In.y,In.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.transformDirection(t),this.setXYZ(e,In.x,In.y,In.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=nf(e,this.array)),e}setX(t,e){return this.normalized&&(e=qs(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=nf(e,this.array)),e}setY(t,e){return this.normalized&&(e=qs(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=nf(e,this.array)),e}setZ(t,e){return this.normalized&&(e=qs(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=nf(e,this.array)),e}setW(t,e){return this.normalized&&(e=qs(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=qs(e,this.array),n=qs(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=qs(e,this.array),n=qs(n,this.array),i=qs(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=qs(e,this.array),n=qs(n,this.array),i=qs(i,this.array),r=qs(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==q1&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class p2 extends Js{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class m2 extends Js{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class dn extends Js{constructor(t,e,n){super(new Float32Array(t),e,n)}}let I$=0;const ci=new Je,A0=new Xn,Pl=new H,Xs=new ir,yu=new ir,Hn=new H;class os extends al{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:I$++}),this.uuid=Kc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(c2(t)?m2:p2)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new vi().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return ci.makeRotationFromQuaternion(t),this.applyMatrix4(ci),this}rotateX(t){return ci.makeRotationX(t),this.applyMatrix4(ci),this}rotateY(t){return ci.makeRotationY(t),this.applyMatrix4(ci),this}rotateZ(t){return ci.makeRotationZ(t),this.applyMatrix4(ci),this}translate(t,e,n){return ci.makeTranslation(t,e,n),this.applyMatrix4(ci),this}scale(t,e,n){return ci.makeScale(t,e,n),this.applyMatrix4(ci),this}lookAt(t){return A0.lookAt(t),A0.updateMatrix(),this.applyMatrix4(A0.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Pl).negate(),this.translate(Pl.x,Pl.y,Pl.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new dn(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ir);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new H(-1/0,-1/0,-1/0),new H(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Xs.setFromBufferAttribute(r),this.morphTargetsRelative?(Hn.addVectors(this.boundingBox.min,Xs.min),this.boundingBox.expandByPoint(Hn),Hn.addVectors(this.boundingBox.max,Xs.max),this.boundingBox.expandByPoint(Hn)):(this.boundingBox.expandByPoint(Xs.min),this.boundingBox.expandByPoint(Xs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Th);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new H,1/0);return}if(t){const n=this.boundingSphere.center;if(Xs.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];yu.setFromBufferAttribute(a),this.morphTargetsRelative?(Hn.addVectors(Xs.min,yu.min),Xs.expandByPoint(Hn),Hn.addVectors(Xs.max,yu.max),Xs.expandByPoint(Hn)):(Xs.expandByPoint(yu.min),Xs.expandByPoint(yu.max))}Xs.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Hn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Hn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Hn.fromBufferAttribute(a,c),l&&(Pl.fromBufferAttribute(t,c),Hn.add(Pl)),i=Math.max(i,n.distanceToSquared(Hn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Js(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let I=0;I<a;I++)c[I]=new H,u[I]=new H;const h=new H,d=new H,f=new H,p=new kt,g=new kt,m=new kt,x=new H,v=new H;function y(I,A,D){h.fromArray(i,I*3),d.fromArray(i,A*3),f.fromArray(i,D*3),p.fromArray(o,I*2),g.fromArray(o,A*2),m.fromArray(o,D*2),d.sub(h),f.sub(h),g.sub(p),m.sub(p);const M=1/(g.x*m.y-m.x*g.y);!isFinite(M)||(x.copy(d).multiplyScalar(m.y).addScaledVector(f,-g.y).multiplyScalar(M),v.copy(f).multiplyScalar(g.x).addScaledVector(d,-m.x).multiplyScalar(M),c[I].add(x),c[A].add(x),c[D].add(x),u[I].add(v),u[A].add(v),u[D].add(v))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let I=0,A=b.length;I<A;++I){const D=b[I],M=D.start,E=D.count;for(let k=M,N=M+E;k<N;k+=3)y(n[k+0],n[k+1],n[k+2])}const w=new H,_=new H,C=new H,S=new H;function T(I){C.fromArray(r,I*3),S.copy(C);const A=c[I];w.copy(A),w.sub(C.multiplyScalar(C.dot(A))).normalize(),_.crossVectors(S,A);const M=_.dot(u[I])<0?-1:1;l[I*4]=w.x,l[I*4+1]=w.y,l[I*4+2]=w.z,l[I*4+3]=M}for(let I=0,A=b.length;I<A;++I){const D=b[I],M=D.start,E=D.count;for(let k=M,N=M+E;k<N;k+=3)T(n[k+0]),T(n[k+1]),T(n[k+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Js(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new H,r=new H,o=new H,a=new H,l=new H,c=new H,u=new H,h=new H;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),g=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,g),o.fromBufferAttribute(e,m),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Hn.fromBufferAttribute(t,e),Hn.normalize(),t.setXYZ(e,Hn.x,Hn.y,Hn.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*u;for(let x=0;x<u;x++)d[p++]=c[f++]}return new Js(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new os,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(t.data))}u.length>0&&(i[l]=u,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const r=t.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const r_=new Je,Ol=new xm,N0=new Th,wo=new H,_o=new H,So=new H,R0=new H,D0=new H,$0=new H,ff=new H,pf=new H,mf=new H,gf=new kt,xf=new kt,vf=new kt,L0=new H,bf=new H;class nn extends Xn{constructor(t=new os,e=new ll){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),N0.copy(n.boundingSphere),N0.applyMatrix4(r),t.ray.intersectsSphere(N0)===!1)||(r_.copy(r).invert(),Ol.copy(t.ray).applyMatrix4(r_),n.boundingBox!==null&&Ol.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],v=i[x.materialIndex],y=Math.max(x.start,p.start),b=Math.min(a.count,Math.min(x.start+x.count,p.start+p.count));for(let w=y,_=b;w<_;w+=3){const C=a.getX(w),S=a.getX(w+1),T=a.getX(w+2);o=yf(this,v,t,Ol,l,c,u,h,d,C,S,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let x=g,v=m;x<v;x+=3){const y=a.getX(x),b=a.getX(x+1),w=a.getX(x+2);o=yf(this,i,t,Ol,l,c,u,h,d,y,b,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],v=i[x.materialIndex],y=Math.max(x.start,p.start),b=Math.min(l.count,Math.min(x.start+x.count,p.start+p.count));for(let w=y,_=b;w<_;w+=3){const C=w,S=w+1,T=w+2;o=yf(this,v,t,Ol,l,c,u,h,d,C,S,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let x=g,v=m;x<v;x+=3){const y=x,b=x+1,w=x+2;o=yf(this,i,t,Ol,l,c,u,h,d,y,b,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}}}function E$(s,t,e,n,i,r,o,a){let l;if(t.side===Zs?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,t.side!==Ds,a),l===null)return null;bf.copy(a),bf.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(bf);return c<e.near||c>e.far?null:{distance:c,point:bf.clone(),object:s}}function yf(s,t,e,n,i,r,o,a,l,c,u,h){wo.fromBufferAttribute(i,c),_o.fromBufferAttribute(i,u),So.fromBufferAttribute(i,h);const d=s.morphTargetInfluences;if(r&&d){ff.set(0,0,0),pf.set(0,0,0),mf.set(0,0,0);for(let p=0,g=r.length;p<g;p++){const m=d[p],x=r[p];m!==0&&(R0.fromBufferAttribute(x,c),D0.fromBufferAttribute(x,u),$0.fromBufferAttribute(x,h),o?(ff.addScaledVector(R0,m),pf.addScaledVector(D0,m),mf.addScaledVector($0,m)):(ff.addScaledVector(R0.sub(wo),m),pf.addScaledVector(D0.sub(_o),m),mf.addScaledVector($0.sub(So),m)))}wo.add(ff),_o.add(pf),So.add(mf)}s.isSkinnedMesh&&(s.boneTransform(c,wo),s.boneTransform(u,_o),s.boneTransform(h,So));const f=E$(s,t,e,n,wo,_o,So,L0);if(f){a&&(gf.fromBufferAttribute(a,c),xf.fromBufferAttribute(a,u),vf.fromBufferAttribute(a,h),f.uv=gi.getUV(L0,wo,_o,So,gf,xf,vf,new kt)),l&&(gf.fromBufferAttribute(l,c),xf.fromBufferAttribute(l,u),vf.fromBufferAttribute(l,h),f.uv2=gi.getUV(L0,wo,_o,So,gf,xf,vf,new kt));const p={a:c,b:u,c:h,normal:new H,materialIndex:0};gi.getNormal(wo,_o,So,p.normal),f.face=p}return f}class cl extends os{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new dn(c,3)),this.setAttribute("normal",new dn(u,3)),this.setAttribute("uv",new dn(h,2));function p(g,m,x,v,y,b,w,_,C,S,T){const I=b/C,A=w/S,D=b/2,M=w/2,E=_/2,k=C+1,N=S+1;let z=0,L=0;const $=new H;for(let W=0;W<N;W++){const q=W*A-M;for(let G=0;G<k;G++){const j=G*I-D;$[g]=j*v,$[m]=q*y,$[x]=E,c.push($.x,$.y,$.z),$[g]=0,$[m]=0,$[x]=_>0?1:-1,u.push($.x,$.y,$.z),h.push(G/C),h.push(1-W/S),z+=1}}for(let W=0;W<S;W++)for(let q=0;q<C;q++){const G=d+q+k*W,j=d+q+k*(W+1),rt=d+(q+1)+k*(W+1),lt=d+(q+1)+k*W;l.push(G,j,lt),l.push(j,rt,lt),L+=6}a.addGroup(f,L,T),f+=L,d+=z}}static fromJSON(t){return new cl(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Ic(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function xs(s){const t={};for(let e=0;e<s.length;e++){const n=Ic(s[e]);for(const i in n)t[i]=n[i]}return t}function M$(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}const k$={clone:Ic,merge:xs};var A$=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,N$=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Wa extends jo{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=A$,this.fragmentShader=N$,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ic(t.uniforms),this.uniformsGroups=M$(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class g2 extends Xn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Je,this.projectionMatrix=new Je,this.projectionMatrixInverse=new Je}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class mi extends g2{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=X1*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(p0*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return X1*2*Math.atan(Math.tan(p0*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(p0*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const zl=90,Bl=1;class R$ extends Xn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new mi(zl,Bl,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new H(1,0,0)),this.add(i);const r=new mi(zl,Bl,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new H(-1,0,0)),this.add(r);const o=new mi(zl,Bl,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new H(0,1,0)),this.add(o);const a=new mi(zl,Bl,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new H(0,-1,0)),this.add(a);const l=new mi(zl,Bl,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new H(0,0,1)),this.add(l);const c=new mi(zl,Bl,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new H(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,u=t.getRenderTarget(),h=t.toneMapping,d=t.xr.enabled;t.toneMapping=io,t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.toneMapping=h,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class x2 extends Qi{constructor(t,e,n,i,r,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:Sc,super(t,e,n,i,r,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class D$ extends Ua{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new x2(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:pi}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new cl(5,5,5),r=new Wa({name:"CubemapFromEquirect",uniforms:Ic(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Zs,blending:Ao});r.uniforms.tEquirect.value=e;const o=new nn(i,r),a=e.minFilter;return e.minFilter===mm&&(e.minFilter=pi),new R$(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const F0=new H,$$=new H,L$=new vi;class Qr{constructor(t=new H(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=F0.subVectors(n,e).cross($$.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(F0),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||L$.getNormalMatrix(t),i=this.coplanarPoint(F0).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ul=new Th,wf=new H;class Uv{constructor(t=new Qr,e=new Qr,n=new Qr,i=new Qr,r=new Qr,o=new Qr){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],p=n[10],g=n[11],m=n[12],x=n[13],v=n[14],y=n[15];return e[0].setComponents(a-i,h-l,g-d,y-m).normalize(),e[1].setComponents(a+i,h+l,g+d,y+m).normalize(),e[2].setComponents(a+r,h+c,g+f,y+x).normalize(),e[3].setComponents(a-r,h-c,g-f,y-x).normalize(),e[4].setComponents(a-o,h-u,g-p,y-v).normalize(),e[5].setComponents(a+o,h+u,g+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Ul.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ul)}intersectsSprite(t){return Ul.center.set(0,0,0),Ul.radius=.7071067811865476,Ul.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ul)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(wf.x=i.normal.x>0?t.max.x:t.min.x,wf.y=i.normal.y>0?t.max.y:t.min.y,wf.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(wf)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function v2(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function F$(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,d=c.usage,f=s.createBuffer();s.bindBuffer(u,f),s.bufferData(u,h,d),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,f=u.updateRange;s.bindBuffer(h,c),f.count===-1?s.bufferSubData(h,0,d):(e?s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class vm extends os{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,d=e/l,f=[],p=[],g=[],m=[];for(let x=0;x<u;x++){const v=x*d-o;for(let y=0;y<c;y++){const b=y*h-r;p.push(b,-v,0),g.push(0,0,1),m.push(y/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let v=0;v<a;v++){const y=v+c*x,b=v+c*(x+1),w=v+1+c*(x+1),_=v+1+c*x;f.push(y,b,_),f.push(b,w,_)}this.setIndex(f),this.setAttribute("position",new dn(p,3)),this.setAttribute("normal",new dn(g,3)),this.setAttribute("uv",new dn(m,2))}static fromJSON(t){return new vm(t.width,t.height,t.widthSegments,t.heightSegments)}}var P$=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,O$=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,z$=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,B$=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,U$=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,V$=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,W$="vec3 transformed = vec3( position );",G$=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,H$=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,q$=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,j$=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,X$=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,K$=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Y$=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Z$=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,J$=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Q$=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,t3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,e3=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,n3=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,s3=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,i3=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,r3=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,o3=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,a3=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,l3=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,c3="gl_FragColor = linearToOutputTexel( gl_FragColor );",u3=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,h3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,d3=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,f3=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,p3=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,m3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,g3=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,x3=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,v3=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,b3=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,y3=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,w3=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,_3=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,S3=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,C3=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,T3=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,I3=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,E3=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,M3=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,k3=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,A3=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,N3=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,R3=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,D3=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,$3=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,L3=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,F3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,P3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,O3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,z3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,B3=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,U3=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,V3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,W3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,G3=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,H3=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,q3=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,j3=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,X3=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,K3=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Y3=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Z3=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,J3=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Q3=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,tL=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,eL=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,nL=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,sL=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,iL=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,rL=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,oL=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,aL=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,lL=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,cL=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,uL=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,hL=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,dL=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,fL=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,pL=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,mL=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,gL=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,xL=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,vL=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,bL=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,yL=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,wL=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,_L=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,SL=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,CL=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,TL=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,IL=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,EL=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,ML=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,kL=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,AL=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,NL=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,RL=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,DL=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,$L=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const LL=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,FL=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,PL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,OL=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,BL=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,UL=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,VL=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,WL=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,GL=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,HL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,qL=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,jL=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XL=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,KL=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,YL=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZL=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,JL=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QL=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,tF=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eF=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,nF=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,sF=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iF=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rF=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,oF=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aF=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lF=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cF=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uF=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,hF=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dF=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,fF=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,pF=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,we={alphamap_fragment:P$,alphamap_pars_fragment:O$,alphatest_fragment:z$,alphatest_pars_fragment:B$,aomap_fragment:U$,aomap_pars_fragment:V$,begin_vertex:W$,beginnormal_vertex:G$,bsdfs:H$,iridescence_fragment:q$,bumpmap_pars_fragment:j$,clipping_planes_fragment:X$,clipping_planes_pars_fragment:K$,clipping_planes_pars_vertex:Y$,clipping_planes_vertex:Z$,color_fragment:J$,color_pars_fragment:Q$,color_pars_vertex:t3,color_vertex:e3,common:n3,cube_uv_reflection_fragment:s3,defaultnormal_vertex:i3,displacementmap_pars_vertex:r3,displacementmap_vertex:o3,emissivemap_fragment:a3,emissivemap_pars_fragment:l3,encodings_fragment:c3,encodings_pars_fragment:u3,envmap_fragment:h3,envmap_common_pars_fragment:d3,envmap_pars_fragment:f3,envmap_pars_vertex:p3,envmap_physical_pars_fragment:I3,envmap_vertex:m3,fog_vertex:g3,fog_pars_vertex:x3,fog_fragment:v3,fog_pars_fragment:b3,gradientmap_pars_fragment:y3,lightmap_fragment:w3,lightmap_pars_fragment:_3,lights_lambert_fragment:S3,lights_lambert_pars_fragment:C3,lights_pars_begin:T3,lights_toon_fragment:E3,lights_toon_pars_fragment:M3,lights_phong_fragment:k3,lights_phong_pars_fragment:A3,lights_physical_fragment:N3,lights_physical_pars_fragment:R3,lights_fragment_begin:D3,lights_fragment_maps:$3,lights_fragment_end:L3,logdepthbuf_fragment:F3,logdepthbuf_pars_fragment:P3,logdepthbuf_pars_vertex:O3,logdepthbuf_vertex:z3,map_fragment:B3,map_pars_fragment:U3,map_particle_fragment:V3,map_particle_pars_fragment:W3,metalnessmap_fragment:G3,metalnessmap_pars_fragment:H3,morphcolor_vertex:q3,morphnormal_vertex:j3,morphtarget_pars_vertex:X3,morphtarget_vertex:K3,normal_fragment_begin:Y3,normal_fragment_maps:Z3,normal_pars_fragment:J3,normal_pars_vertex:Q3,normal_vertex:tL,normalmap_pars_fragment:eL,clearcoat_normal_fragment_begin:nL,clearcoat_normal_fragment_maps:sL,clearcoat_pars_fragment:iL,iridescence_pars_fragment:rL,output_fragment:oL,packing:aL,premultiplied_alpha_fragment:lL,project_vertex:cL,dithering_fragment:uL,dithering_pars_fragment:hL,roughnessmap_fragment:dL,roughnessmap_pars_fragment:fL,shadowmap_pars_fragment:pL,shadowmap_pars_vertex:mL,shadowmap_vertex:gL,shadowmask_pars_fragment:xL,skinbase_vertex:vL,skinning_pars_vertex:bL,skinning_vertex:yL,skinnormal_vertex:wL,specularmap_fragment:_L,specularmap_pars_fragment:SL,tonemapping_fragment:CL,tonemapping_pars_fragment:TL,transmission_fragment:IL,transmission_pars_fragment:EL,uv_pars_fragment:ML,uv_pars_vertex:kL,uv_vertex:AL,uv2_pars_fragment:NL,uv2_pars_vertex:RL,uv2_vertex:DL,worldpos_vertex:$L,background_vert:LL,background_frag:FL,backgroundCube_vert:PL,backgroundCube_frag:OL,cube_vert:zL,cube_frag:BL,depth_vert:UL,depth_frag:VL,distanceRGBA_vert:WL,distanceRGBA_frag:GL,equirect_vert:HL,equirect_frag:qL,linedashed_vert:jL,linedashed_frag:XL,meshbasic_vert:KL,meshbasic_frag:YL,meshlambert_vert:ZL,meshlambert_frag:JL,meshmatcap_vert:QL,meshmatcap_frag:tF,meshnormal_vert:eF,meshnormal_frag:nF,meshphong_vert:sF,meshphong_frag:iF,meshphysical_vert:rF,meshphysical_frag:oF,meshtoon_vert:aF,meshtoon_frag:lF,points_vert:cF,points_frag:uF,shadow_vert:hF,shadow_frag:dF,sprite_vert:fF,sprite_frag:pF},zt={common:{diffuse:{value:new Ue(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new vi},uv2Transform:{value:new vi},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new kt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ue(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new vi}},sprite:{diffuse:{value:new Ue(16777215)},opacity:{value:1},center:{value:new kt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new vi}}},xr={basic:{uniforms:xs([zt.common,zt.specularmap,zt.envmap,zt.aomap,zt.lightmap,zt.fog]),vertexShader:we.meshbasic_vert,fragmentShader:we.meshbasic_frag},lambert:{uniforms:xs([zt.common,zt.specularmap,zt.envmap,zt.aomap,zt.lightmap,zt.emissivemap,zt.bumpmap,zt.normalmap,zt.displacementmap,zt.fog,zt.lights,{emissive:{value:new Ue(0)}}]),vertexShader:we.meshlambert_vert,fragmentShader:we.meshlambert_frag},phong:{uniforms:xs([zt.common,zt.specularmap,zt.envmap,zt.aomap,zt.lightmap,zt.emissivemap,zt.bumpmap,zt.normalmap,zt.displacementmap,zt.fog,zt.lights,{emissive:{value:new Ue(0)},specular:{value:new Ue(1118481)},shininess:{value:30}}]),vertexShader:we.meshphong_vert,fragmentShader:we.meshphong_frag},standard:{uniforms:xs([zt.common,zt.envmap,zt.aomap,zt.lightmap,zt.emissivemap,zt.bumpmap,zt.normalmap,zt.displacementmap,zt.roughnessmap,zt.metalnessmap,zt.fog,zt.lights,{emissive:{value:new Ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:we.meshphysical_vert,fragmentShader:we.meshphysical_frag},toon:{uniforms:xs([zt.common,zt.aomap,zt.lightmap,zt.emissivemap,zt.bumpmap,zt.normalmap,zt.displacementmap,zt.gradientmap,zt.fog,zt.lights,{emissive:{value:new Ue(0)}}]),vertexShader:we.meshtoon_vert,fragmentShader:we.meshtoon_frag},matcap:{uniforms:xs([zt.common,zt.bumpmap,zt.normalmap,zt.displacementmap,zt.fog,{matcap:{value:null}}]),vertexShader:we.meshmatcap_vert,fragmentShader:we.meshmatcap_frag},points:{uniforms:xs([zt.points,zt.fog]),vertexShader:we.points_vert,fragmentShader:we.points_frag},dashed:{uniforms:xs([zt.common,zt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:we.linedashed_vert,fragmentShader:we.linedashed_frag},depth:{uniforms:xs([zt.common,zt.displacementmap]),vertexShader:we.depth_vert,fragmentShader:we.depth_frag},normal:{uniforms:xs([zt.common,zt.bumpmap,zt.normalmap,zt.displacementmap,{opacity:{value:1}}]),vertexShader:we.meshnormal_vert,fragmentShader:we.meshnormal_frag},sprite:{uniforms:xs([zt.sprite,zt.fog]),vertexShader:we.sprite_vert,fragmentShader:we.sprite_frag},background:{uniforms:{uvTransform:{value:new vi},t2D:{value:null}},vertexShader:we.background_vert,fragmentShader:we.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:we.backgroundCube_vert,fragmentShader:we.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:we.cube_vert,fragmentShader:we.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:we.equirect_vert,fragmentShader:we.equirect_frag},distanceRGBA:{uniforms:xs([zt.common,zt.displacementmap,{referencePosition:{value:new H},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:we.distanceRGBA_vert,fragmentShader:we.distanceRGBA_frag},shadow:{uniforms:xs([zt.lights,zt.fog,{color:{value:new Ue(0)},opacity:{value:1}}]),vertexShader:we.shadow_vert,fragmentShader:we.shadow_frag}};xr.physical={uniforms:xs([xr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new kt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ue(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new kt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ue(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ue(1,1,1)},specularColorMap:{value:null}}]),vertexShader:we.meshphysical_vert,fragmentShader:we.meshphysical_frag};function mF(s,t,e,n,i,r,o){const a=new Ue(0);let l=r===!0?0:1,c,u,h=null,d=0,f=null;function p(m,x){let v=!1,y=x.isScene===!0?x.background:null;y&&y.isTexture&&(y=(x.backgroundBlurriness>0?e:t).get(y));const b=s.xr,w=b.getSession&&b.getSession();w&&w.environmentBlendMode==="additive"&&(y=null),y===null?g(a,l):y&&y.isColor&&(g(y,1),v=!0),(s.autoClear||v)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),y&&(y.isCubeTexture||y.mapping===pm)?(u===void 0&&(u=new nn(new cl(1,1,1),new Wa({name:"BackgroundCubeMaterial",uniforms:Ic(xr.backgroundCube.uniforms),vertexShader:xr.backgroundCube.vertexShader,fragmentShader:xr.backgroundCube.fragmentShader,side:Zs,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(_,C,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,(h!==y||d!==y.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=y,d=y.version,f=s.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(c===void 0&&(c=new nn(new vm(2,2),new Wa({name:"BackgroundMaterial",uniforms:Ic(xr.background.uniforms),vertexShader:xr.background.vertexShader,fragmentShader:xr.background.fragmentShader,side:Oo,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),c.material.uniforms.uvTransform.value.copy(y.matrix),(h!==y||d!==y.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,h=y,d=y.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function g(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(m,x=1){a.set(m),l=x,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:p}}function gF(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,u=!1;function h(E,k,N,z,L){let $=!1;if(o){const W=g(z,N,k);c!==W&&(c=W,f(c.object)),$=x(E,z,N,L),$&&v(E,z,N,L)}else{const W=k.wireframe===!0;(c.geometry!==z.id||c.program!==N.id||c.wireframe!==W)&&(c.geometry=z.id,c.program=N.id,c.wireframe=W,$=!0)}L!==null&&e.update(L,34963),($||u)&&(u=!1,S(E,k,N,z),L!==null&&s.bindBuffer(34963,e.get(L).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(E){return n.isWebGL2?s.bindVertexArray(E):r.bindVertexArrayOES(E)}function p(E){return n.isWebGL2?s.deleteVertexArray(E):r.deleteVertexArrayOES(E)}function g(E,k,N){const z=N.wireframe===!0;let L=a[E.id];L===void 0&&(L={},a[E.id]=L);let $=L[k.id];$===void 0&&($={},L[k.id]=$);let W=$[z];return W===void 0&&(W=m(d()),$[z]=W),W}function m(E){const k=[],N=[],z=[];for(let L=0;L<i;L++)k[L]=0,N[L]=0,z[L]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:N,attributeDivisors:z,object:E,attributes:{},index:null}}function x(E,k,N,z){const L=c.attributes,$=k.attributes;let W=0;const q=N.getAttributes();for(const G in q)if(q[G].location>=0){const rt=L[G];let lt=$[G];if(lt===void 0&&(G==="instanceMatrix"&&E.instanceMatrix&&(lt=E.instanceMatrix),G==="instanceColor"&&E.instanceColor&&(lt=E.instanceColor)),rt===void 0||rt.attribute!==lt||lt&&rt.data!==lt.data)return!0;W++}return c.attributesNum!==W||c.index!==z}function v(E,k,N,z){const L={},$=k.attributes;let W=0;const q=N.getAttributes();for(const G in q)if(q[G].location>=0){let rt=$[G];rt===void 0&&(G==="instanceMatrix"&&E.instanceMatrix&&(rt=E.instanceMatrix),G==="instanceColor"&&E.instanceColor&&(rt=E.instanceColor));const lt={};lt.attribute=rt,rt&&rt.data&&(lt.data=rt.data),L[G]=lt,W++}c.attributes=L,c.attributesNum=W,c.index=z}function y(){const E=c.newAttributes;for(let k=0,N=E.length;k<N;k++)E[k]=0}function b(E){w(E,0)}function w(E,k){const N=c.newAttributes,z=c.enabledAttributes,L=c.attributeDivisors;N[E]=1,z[E]===0&&(s.enableVertexAttribArray(E),z[E]=1),L[E]!==k&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](E,k),L[E]=k)}function _(){const E=c.newAttributes,k=c.enabledAttributes;for(let N=0,z=k.length;N<z;N++)k[N]!==E[N]&&(s.disableVertexAttribArray(N),k[N]=0)}function C(E,k,N,z,L,$){n.isWebGL2===!0&&(N===5124||N===5125)?s.vertexAttribIPointer(E,k,N,L,$):s.vertexAttribPointer(E,k,N,z,L,$)}function S(E,k,N,z){if(n.isWebGL2===!1&&(E.isInstancedMesh||z.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;y();const L=z.attributes,$=N.getAttributes(),W=k.defaultAttributeValues;for(const q in $){const G=$[q];if(G.location>=0){let j=L[q];if(j===void 0&&(q==="instanceMatrix"&&E.instanceMatrix&&(j=E.instanceMatrix),q==="instanceColor"&&E.instanceColor&&(j=E.instanceColor)),j!==void 0){const rt=j.normalized,lt=j.itemSize,Y=e.get(j);if(Y===void 0)continue;const vt=Y.buffer,xt=Y.type,mt=Y.bytesPerElement;if(j.isInterleavedBufferAttribute){const ft=j.data,it=ft.stride,tt=j.offset;if(ft.isInstancedInterleavedBuffer){for(let ut=0;ut<G.locationSize;ut++)w(G.location+ut,ft.meshPerAttribute);E.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=ft.meshPerAttribute*ft.count)}else for(let ut=0;ut<G.locationSize;ut++)b(G.location+ut);s.bindBuffer(34962,vt);for(let ut=0;ut<G.locationSize;ut++)C(G.location+ut,lt/G.locationSize,xt,rt,it*mt,(tt+lt/G.locationSize*ut)*mt)}else{if(j.isInstancedBufferAttribute){for(let ft=0;ft<G.locationSize;ft++)w(G.location+ft,j.meshPerAttribute);E.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=j.meshPerAttribute*j.count)}else for(let ft=0;ft<G.locationSize;ft++)b(G.location+ft);s.bindBuffer(34962,vt);for(let ft=0;ft<G.locationSize;ft++)C(G.location+ft,lt/G.locationSize,xt,rt,lt*mt,lt/G.locationSize*ft*mt)}}else if(W!==void 0){const rt=W[q];if(rt!==void 0)switch(rt.length){case 2:s.vertexAttrib2fv(G.location,rt);break;case 3:s.vertexAttrib3fv(G.location,rt);break;case 4:s.vertexAttrib4fv(G.location,rt);break;default:s.vertexAttrib1fv(G.location,rt)}}}}_()}function T(){D();for(const E in a){const k=a[E];for(const N in k){const z=k[N];for(const L in z)p(z[L].object),delete z[L];delete k[N]}delete a[E]}}function I(E){if(a[E.id]===void 0)return;const k=a[E.id];for(const N in k){const z=k[N];for(const L in z)p(z[L].object),delete z[L];delete k[N]}delete a[E.id]}function A(E){for(const k in a){const N=a[k];if(N[E.id]===void 0)continue;const z=N[E.id];for(const L in z)p(z[L].object),delete z[L];delete N[E.id]}}function D(){M(),u=!0,c!==l&&(c=l,f(c.object))}function M(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:D,resetDefaultState:M,dispose:T,releaseStatesOfGeometry:I,releaseStatesOfProgram:A,initAttributes:y,enableAttribute:b,disableUnusedAttributes:_}}function xF(s,t,e,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,u){s.drawArrays(r,c,u),e.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,f;if(i)d=s,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,c,u,h),e.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function vF(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const C=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(C){if(C==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=s.getParameter(34930),d=s.getParameter(35660),f=s.getParameter(3379),p=s.getParameter(34076),g=s.getParameter(34921),m=s.getParameter(36347),x=s.getParameter(36348),v=s.getParameter(36349),y=d>0,b=o||t.has("OES_texture_float"),w=y&&b,_=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:b,floatVertexTextures:w,maxSamples:_}}function bF(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new Qr,a=new vi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const p=h.length!==0||d||n!==0||i;return i=d,e=u(h,f,0),n=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,d,f){const p=h.clippingPlanes,g=h.clipIntersection,m=h.clipShadows,x=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?u(null):c();else{const v=r?0:n,y=v*4;let b=x.clippingState||null;l.value=b,b=u(p,d,y,f);for(let w=0;w!==y;++w)b[w]=e[w];x.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,d,f,p){const g=h!==null?h.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const x=f+g*4,v=d.matrixWorldInverse;a.getNormalMatrix(v),(m===null||m.length<x)&&(m=new Float32Array(x));for(let y=0,b=f;y!==g;++y,b+=4)o.copy(h[y]).applyMatrix4(v,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,m}}function yF(s){let t=new WeakMap;function e(o,a){return a===Ex?o.mapping=Sc:a===Mx&&(o.mapping=Cc),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Ex||a===Mx)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new D$(l.height/2);return c.fromEquirectangularTexture(s,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class b2 extends g2{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const sc=4,o_=[.125,.215,.35,.446,.526,.582],ba=20,P0=new b2,a_=new Ue;let O0=null;const xa=(1+Math.sqrt(5))/2,Vl=1/xa,l_=[new H(1,1,1),new H(-1,1,1),new H(1,1,-1),new H(-1,1,-1),new H(0,xa,Vl),new H(0,xa,-Vl),new H(Vl,0,xa),new H(-Vl,0,xa),new H(xa,Vl,0),new H(-xa,Vl,0)];class c_{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){O0=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=d_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=h_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(O0),t.scissorTest=!1,_f(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Sc||t.mapping===Cc?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),O0=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:pi,minFilter:pi,generateMipmaps:!1,type:eh,format:qi,encoding:Ba,depthBuffer:!1},i=u_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=u_(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=wF(r)),this._blurMaterial=_F(r,t,e)}return i}_compileMaterial(t){const e=new nn(this._lodPlanes[0],t);this._renderer.compile(e,P0)}_sceneToCubeUV(t,e,n,i){const a=new mi(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(a_),u.toneMapping=io,u.autoClear=!1;const f=new ll({name:"PMREM.Background",side:Zs,depthWrite:!1,depthTest:!1}),p=new nn(new cl,f);let g=!1;const m=t.background;m?m.isColor&&(f.color.copy(m),t.background=null,g=!0):(f.color.copy(a_),g=!0);for(let x=0;x<6;x++){const v=x%3;v===0?(a.up.set(0,l[x],0),a.lookAt(c[x],0,0)):v===1?(a.up.set(0,0,l[x]),a.lookAt(0,c[x],0)):(a.up.set(0,l[x],0),a.lookAt(0,0,c[x]));const y=this._cubeSize;_f(i,v*y,x>2?y:0,y,y),u.setRenderTarget(i),g&&u.render(p,a),u.render(t,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=d,u.autoClear=h,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Sc||t.mapping===Cc;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=d_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=h_());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new nn(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;_f(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,P0)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=l_[(i-1)%l_.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new nn(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*ba-1),g=r/p,m=isFinite(r)?1+Math.floor(u*g):ba;m>ba&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${ba}`);const x=[];let v=0;for(let C=0;C<ba;++C){const S=C/g,T=Math.exp(-S*S/2);x.push(T),C===0?v+=T:C<m&&(v+=2*T)}for(let C=0;C<x.length;C++)x[C]=x[C]/v;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=x,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const b=this._sizeLods[i],w=3*b*(i>y-sc?i-y+sc:0),_=4*(this._cubeSize-b);_f(e,w,_,3*b,2*b),l.setRenderTarget(e),l.render(h,P0)}}function wF(s){const t=[],e=[],n=[];let i=s;const r=s-sc+1+o_.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>s-sc?l=o_[o-s+sc-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,g=3,m=2,x=1,v=new Float32Array(g*p*f),y=new Float32Array(m*p*f),b=new Float32Array(x*p*f);for(let _=0;_<f;_++){const C=_%3*2/3-1,S=_>2?0:-1,T=[C,S,0,C+2/3,S,0,C+2/3,S+1,0,C,S,0,C+2/3,S+1,0,C,S+1,0];v.set(T,g*p*_),y.set(d,m*p*_);const I=[_,_,_,_,_,_];b.set(I,x*p*_)}const w=new os;w.setAttribute("position",new Js(v,g)),w.setAttribute("uv",new Js(y,m)),w.setAttribute("faceIndex",new Js(b,x)),t.push(w),i>sc&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function u_(s,t,e){const n=new Ua(s,t,e);return n.texture.mapping=pm,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function _f(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function _F(s,t,e){const n=new Float32Array(ba),i=new H(0,1,0);return new Wa({name:"SphericalGaussianBlur",defines:{n:ba,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Vv(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ao,depthTest:!1,depthWrite:!1})}function h_(){return new Wa({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Vv(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ao,depthTest:!1,depthWrite:!1})}function d_(){return new Wa({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Vv(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ao,depthTest:!1,depthWrite:!1})}function Vv(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function SF(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ex||l===Mx,u=l===Sc||l===Cc;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=t.get(a);return e===null&&(e=new c_(s)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),t.set(a,h),h.texture}else{if(t.has(a))return t.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){e===null&&(e=new c_(s));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function CF(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function TF(s,t,e,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(h){const d=h.attributes;for(const p in d)t.update(d[p],34962);const f=h.morphAttributes;for(const p in f){const g=f[p];for(let m=0,x=g.length;m<x;m++)t.update(g[m],34962)}}function c(h){const d=[],f=h.index,p=h.attributes.position;let g=0;if(f!==null){const v=f.array;g=f.version;for(let y=0,b=v.length;y<b;y+=3){const w=v[y+0],_=v[y+1],C=v[y+2];d.push(w,_,_,C,C,w)}}else{const v=p.array;g=p.version;for(let y=0,b=v.length/3-1;y<b;y+=3){const w=y+0,_=y+1,C=y+2;d.push(w,_,_,C,C,w)}}const m=new(c2(d)?m2:p2)(d,1);m.version=g;const x=r.get(h);x&&t.remove(x),r.set(h,m)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function IF(s,t,e,n){const i=n.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,f){s.drawElements(r,f,a,d*l),e.update(f,r,1)}function h(d,f,p){if(p===0)return;let g,m;if(i)g=s,m="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](r,f,a,d*l,p),e.update(f,r,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function EF(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function MF(s,t){return s[0]-t[0]}function kF(s,t){return Math.abs(t[1])-Math.abs(s[1])}function AF(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new jn,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,d){const f=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=g!==void 0?g.length:0;let x=r.get(u);if(x===void 0||x.count!==m){let N=function(){E.dispose(),r.delete(u),u.removeEventListener("dispose",N)};var p=N;x!==void 0&&x.texture.dispose();const b=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,_=u.morphAttributes.color!==void 0,C=u.morphAttributes.position||[],S=u.morphAttributes.normal||[],T=u.morphAttributes.color||[];let I=0;b===!0&&(I=1),w===!0&&(I=2),_===!0&&(I=3);let A=u.attributes.position.count*I,D=1;A>t.maxTextureSize&&(D=Math.ceil(A/t.maxTextureSize),A=t.maxTextureSize);const M=new Float32Array(A*D*4*m),E=new f2(M,A,D,m);E.type=Ta,E.needsUpdate=!0;const k=I*4;for(let z=0;z<m;z++){const L=C[z],$=S[z],W=T[z],q=A*D*4*z;for(let G=0;G<L.count;G++){const j=G*k;b===!0&&(o.fromBufferAttribute(L,G),M[q+j+0]=o.x,M[q+j+1]=o.y,M[q+j+2]=o.z,M[q+j+3]=0),w===!0&&(o.fromBufferAttribute($,G),M[q+j+4]=o.x,M[q+j+5]=o.y,M[q+j+6]=o.z,M[q+j+7]=0),_===!0&&(o.fromBufferAttribute(W,G),M[q+j+8]=o.x,M[q+j+9]=o.y,M[q+j+10]=o.z,M[q+j+11]=W.itemSize===4?o.w:1)}}x={count:m,texture:E,size:new kt(A,D)},r.set(u,x),u.addEventListener("dispose",N)}let v=0;for(let b=0;b<f.length;b++)v+=f[b];const y=u.morphTargetsRelative?1:1-v;d.getUniforms().setValue(s,"morphTargetBaseInfluence",y),d.getUniforms().setValue(s,"morphTargetInfluences",f),d.getUniforms().setValue(s,"morphTargetsTexture",x.texture,e),d.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const g=f===void 0?0:f.length;let m=n[u.id];if(m===void 0||m.length!==g){m=[];for(let w=0;w<g;w++)m[w]=[w,0];n[u.id]=m}for(let w=0;w<g;w++){const _=m[w];_[0]=w,_[1]=f[w]}m.sort(kF);for(let w=0;w<8;w++)w<g&&m[w][1]?(a[w][0]=m[w][0],a[w][1]=m[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(MF);const x=u.morphAttributes.position,v=u.morphAttributes.normal;let y=0;for(let w=0;w<8;w++){const _=a[w],C=_[0],S=_[1];C!==Number.MAX_SAFE_INTEGER&&S?(x&&u.getAttribute("morphTarget"+w)!==x[C]&&u.setAttribute("morphTarget"+w,x[C]),v&&u.getAttribute("morphNormal"+w)!==v[C]&&u.setAttribute("morphNormal"+w,v[C]),i[w]=S,y+=S):(x&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),v&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),i[w]=0)}const b=u.morphTargetsRelative?1:1-y;d.getUniforms().setValue(s,"morphTargetBaseInfluence",b),d.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function NF(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);return i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const y2=new Qi,w2=new f2,_2=new x$,S2=new x2,f_=[],p_=[],m_=new Float32Array(16),g_=new Float32Array(9),x_=new Float32Array(4);function Yc(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=f_[i];if(r===void 0&&(r=new Float32Array(i),f_[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Bn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Un(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function bm(s,t){let e=p_[t];e===void 0&&(e=new Int32Array(t),p_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function RF(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function DF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Bn(e,t))return;s.uniform2fv(this.addr,t),Un(e,t)}}function $F(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Bn(e,t))return;s.uniform3fv(this.addr,t),Un(e,t)}}function LF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Bn(e,t))return;s.uniform4fv(this.addr,t),Un(e,t)}}function FF(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Bn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Un(e,t)}else{if(Bn(e,n))return;x_.set(n),s.uniformMatrix2fv(this.addr,!1,x_),Un(e,n)}}function PF(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Bn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Un(e,t)}else{if(Bn(e,n))return;g_.set(n),s.uniformMatrix3fv(this.addr,!1,g_),Un(e,n)}}function OF(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Bn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Un(e,t)}else{if(Bn(e,n))return;m_.set(n),s.uniformMatrix4fv(this.addr,!1,m_),Un(e,n)}}function zF(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function BF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Bn(e,t))return;s.uniform2iv(this.addr,t),Un(e,t)}}function UF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Bn(e,t))return;s.uniform3iv(this.addr,t),Un(e,t)}}function VF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Bn(e,t))return;s.uniform4iv(this.addr,t),Un(e,t)}}function WF(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function GF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Bn(e,t))return;s.uniform2uiv(this.addr,t),Un(e,t)}}function HF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Bn(e,t))return;s.uniform3uiv(this.addr,t),Un(e,t)}}function qF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Bn(e,t))return;s.uniform4uiv(this.addr,t),Un(e,t)}}function jF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||y2,i)}function XF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||_2,i)}function KF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||S2,i)}function YF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||w2,i)}function ZF(s){switch(s){case 5126:return RF;case 35664:return DF;case 35665:return $F;case 35666:return LF;case 35674:return FF;case 35675:return PF;case 35676:return OF;case 5124:case 35670:return zF;case 35667:case 35671:return BF;case 35668:case 35672:return UF;case 35669:case 35673:return VF;case 5125:return WF;case 36294:return GF;case 36295:return HF;case 36296:return qF;case 35678:case 36198:case 36298:case 36306:case 35682:return jF;case 35679:case 36299:case 36307:return XF;case 35680:case 36300:case 36308:case 36293:return KF;case 36289:case 36303:case 36311:case 36292:return YF}}function JF(s,t){s.uniform1fv(this.addr,t)}function QF(s,t){const e=Yc(t,this.size,2);s.uniform2fv(this.addr,e)}function tP(s,t){const e=Yc(t,this.size,3);s.uniform3fv(this.addr,e)}function eP(s,t){const e=Yc(t,this.size,4);s.uniform4fv(this.addr,e)}function nP(s,t){const e=Yc(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function sP(s,t){const e=Yc(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function iP(s,t){const e=Yc(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function rP(s,t){s.uniform1iv(this.addr,t)}function oP(s,t){s.uniform2iv(this.addr,t)}function aP(s,t){s.uniform3iv(this.addr,t)}function lP(s,t){s.uniform4iv(this.addr,t)}function cP(s,t){s.uniform1uiv(this.addr,t)}function uP(s,t){s.uniform2uiv(this.addr,t)}function hP(s,t){s.uniform3uiv(this.addr,t)}function dP(s,t){s.uniform4uiv(this.addr,t)}function fP(s,t,e){const n=this.cache,i=t.length,r=bm(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||y2,r[o])}function pP(s,t,e){const n=this.cache,i=t.length,r=bm(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||_2,r[o])}function mP(s,t,e){const n=this.cache,i=t.length,r=bm(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||S2,r[o])}function gP(s,t,e){const n=this.cache,i=t.length,r=bm(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||w2,r[o])}function xP(s){switch(s){case 5126:return JF;case 35664:return QF;case 35665:return tP;case 35666:return eP;case 35674:return nP;case 35675:return sP;case 35676:return iP;case 5124:case 35670:return rP;case 35667:case 35671:return oP;case 35668:case 35672:return aP;case 35669:case 35673:return lP;case 5125:return cP;case 36294:return uP;case 36295:return hP;case 36296:return dP;case 35678:case 36198:case 36298:case 36306:case 35682:return fP;case 35679:case 36299:case 36307:return pP;case 35680:case 36300:case 36308:case 36293:return mP;case 36289:case 36303:case 36311:case 36292:return gP}}class vP{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=ZF(e.type)}}class bP{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=xP(e.type)}}class yP{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const z0=/(\w+)(\])?(\[|\.)?/g;function v_(s,t){s.seq.push(t),s.map[t.id]=t}function wP(s,t,e){const n=s.name,i=n.length;for(z0.lastIndex=0;;){const r=z0.exec(n),o=z0.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){v_(e,c===void 0?new vP(a,s,t):new bP(a,s,t));break}else{let h=e.map[a];h===void 0&&(h=new yP(a),v_(e,h)),e=h}}}class cp{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);wP(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function b_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let _P=0;function SP(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function CP(s){switch(s){case Ba:return["Linear","( value )"];case pn:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function y_(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+SP(s.getShaderSource(t),o)}else return i}function TP(s,t){const e=CP(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function IP(s,t){let e;switch(t){case GD:e="Linear";break;case HD:e="Reinhard";break;case qD:e="OptimizedCineon";break;case jD:e="ACESFilmic";break;case XD:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function EP(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($u).join(`
`)}function MP(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function kP(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function $u(s){return s!==""}function w_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function __(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const AP=/^[ \t]*#include +<([\w\d./]+)>/gm;function Dx(s){return s.replace(AP,NP)}function NP(s,t){const e=we[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return Dx(e)}const RP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function S_(s){return s.replace(RP,DP)}function DP(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function C_(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function $P(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===s2?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===i2?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Du&&(t="SHADOWMAP_TYPE_VSM"),t}function LP(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Sc:case Cc:t="ENVMAP_TYPE_CUBE";break;case pm:t="ENVMAP_TYPE_CUBE_UV";break}return t}function FP(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Cc:t="ENVMAP_MODE_REFRACTION";break}return t}function PP(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case fm:t="ENVMAP_BLENDING_MULTIPLY";break;case VD:t="ENVMAP_BLENDING_MIX";break;case WD:t="ENVMAP_BLENDING_ADD";break}return t}function OP(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function zP(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=$P(e),c=LP(e),u=FP(e),h=PP(e),d=OP(e),f=e.isWebGL2?"":EP(e),p=MP(r),g=i.createProgram();let m,x,v=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[p].filter($u).join(`
`),m.length>0&&(m+=`
`),x=[f,p].filter($u).join(`
`),x.length>0&&(x+=`
`)):(m=[C_(e),"#define SHADER_NAME "+e.shaderName,p,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($u).join(`
`),x=[f,C_(e),"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==io?"#define TONE_MAPPING":"",e.toneMapping!==io?we.tonemapping_pars_fragment:"",e.toneMapping!==io?IP("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",we.encodings_pars_fragment,TP("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter($u).join(`
`)),o=Dx(o),o=w_(o,e),o=__(o,e),a=Dx(a),a=w_(a,e),a=__(a,e),o=S_(o),a=S_(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",e.glslVersion===j1?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===j1?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const y=v+m+o,b=v+x+a,w=b_(i,35633,y),_=b_(i,35632,b);if(i.attachShader(g,w),i.attachShader(g,_),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const T=i.getProgramInfoLog(g).trim(),I=i.getShaderInfoLog(w).trim(),A=i.getShaderInfoLog(_).trim();let D=!0,M=!0;if(i.getProgramParameter(g,35714)===!1){D=!1;const E=y_(i,w,"vertex"),k=y_(i,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+T+`
`+E+`
`+k)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(I===""||A==="")&&(M=!1);M&&(this.diagnostics={runnable:D,programLog:T,vertexShader:{log:I,prefix:m},fragmentShader:{log:A,prefix:x}})}i.deleteShader(w),i.deleteShader(_);let C;this.getUniforms=function(){return C===void 0&&(C=new cp(i,g)),C};let S;return this.getAttributes=function(){return S===void 0&&(S=kP(i,g)),S},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=_P++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=_,this}let BP=0;class UP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new VP(t),e.set(t,n)),n}}class VP{constructor(t){this.id=BP++,this.code=t,this.usedTimes=0}}function WP(s,t,e,n,i,r,o){const a=new Bv,l=new UP,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(S,T,I,A,D){const M=A.fog,E=D.geometry,k=S.isMeshStandardMaterial?A.environment:null,N=(S.isMeshStandardMaterial?e:t).get(S.envMap||k),z=!!N&&N.mapping===pm?N.image.height:null,L=p[S.type];S.precision!==null&&(f=i.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const $=E.morphAttributes.position||E.morphAttributes.normal||E.morphAttributes.color,W=$!==void 0?$.length:0;let q=0;E.morphAttributes.position!==void 0&&(q=1),E.morphAttributes.normal!==void 0&&(q=2),E.morphAttributes.color!==void 0&&(q=3);let G,j,rt,lt;if(L){const it=xr[L];G=it.vertexShader,j=it.fragmentShader}else G=S.vertexShader,j=S.fragmentShader,l.update(S),rt=l.getVertexShaderID(S),lt=l.getFragmentShaderID(S);const Y=s.getRenderTarget(),vt=S.alphaTest>0,xt=S.clearcoat>0,mt=S.iridescence>0;return{isWebGL2:u,shaderID:L,shaderName:S.type,vertexShader:G,fragmentShader:j,defines:S.defines,customVertexShaderID:rt,customFragmentShaderID:lt,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,instancing:D.isInstancedMesh===!0,instancingColor:D.isInstancedMesh===!0&&D.instanceColor!==null,supportsVertexTextures:d,outputEncoding:Y===null?s.outputEncoding:Y.isXRRenderTarget===!0?Y.texture.encoding:Ba,map:!!S.map,matcap:!!S.matcap,envMap:!!N,envMapMode:N&&N.mapping,envMapCubeUVHeight:z,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===f$,tangentSpaceNormalMap:S.normalMapType===gm,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===pn,clearcoat:xt,clearcoatMap:xt&&!!S.clearcoatMap,clearcoatRoughnessMap:xt&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:xt&&!!S.clearcoatNormalMap,iridescence:mt,iridescenceMap:mt&&!!S.iridescenceMap,iridescenceThicknessMap:mt&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:S.transparent===!1&&S.blending===hc,alphaMap:!!S.alphaMap,alphaTest:vt,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!E.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!E.attributes.color&&E.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||S.transmission>0||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||S.sheen>0||!!S.sheenColorMap||!!S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!M,useFog:S.fog===!0,fogExp2:M&&M.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:h,skinning:D.isSkinnedMesh===!0,morphTargets:E.morphAttributes.position!==void 0,morphNormals:E.morphAttributes.normal!==void 0,morphColors:E.morphAttributes.color!==void 0,morphTargetsCount:W,morphTextureStride:q,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:S.toneMapped?s.toneMapping:io,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===Ds,flipSided:S.side===Zs,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function m(S){const T=[];if(S.shaderID?T.push(S.shaderID):(T.push(S.customVertexShaderID),T.push(S.customFragmentShaderID)),S.defines!==void 0)for(const I in S.defines)T.push(I),T.push(S.defines[I]);return S.isRawShaderMaterial===!1&&(x(T,S),v(T,S),T.push(s.outputEncoding)),T.push(S.customProgramCacheKey),T.join()}function x(S,T){S.push(T.precision),S.push(T.outputEncoding),S.push(T.envMapMode),S.push(T.envMapCubeUVHeight),S.push(T.combine),S.push(T.vertexUvs),S.push(T.fogExp2),S.push(T.sizeAttenuation),S.push(T.morphTargetsCount),S.push(T.morphAttributeCount),S.push(T.numDirLights),S.push(T.numPointLights),S.push(T.numSpotLights),S.push(T.numSpotLightMaps),S.push(T.numHemiLights),S.push(T.numRectAreaLights),S.push(T.numDirLightShadows),S.push(T.numPointLightShadows),S.push(T.numSpotLightShadows),S.push(T.numSpotLightShadowsWithMaps),S.push(T.shadowMapType),S.push(T.toneMapping),S.push(T.numClippingPlanes),S.push(T.numClipIntersection),S.push(T.depthPacking)}function v(S,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.map&&a.enable(4),T.matcap&&a.enable(5),T.envMap&&a.enable(6),T.lightMap&&a.enable(7),T.aoMap&&a.enable(8),T.emissiveMap&&a.enable(9),T.bumpMap&&a.enable(10),T.normalMap&&a.enable(11),T.objectSpaceNormalMap&&a.enable(12),T.tangentSpaceNormalMap&&a.enable(13),T.clearcoat&&a.enable(14),T.clearcoatMap&&a.enable(15),T.clearcoatRoughnessMap&&a.enable(16),T.clearcoatNormalMap&&a.enable(17),T.iridescence&&a.enable(18),T.iridescenceMap&&a.enable(19),T.iridescenceThicknessMap&&a.enable(20),T.displacementMap&&a.enable(21),T.specularMap&&a.enable(22),T.roughnessMap&&a.enable(23),T.metalnessMap&&a.enable(24),T.gradientMap&&a.enable(25),T.alphaMap&&a.enable(26),T.alphaTest&&a.enable(27),T.vertexColors&&a.enable(28),T.vertexAlphas&&a.enable(29),T.vertexUvs&&a.enable(30),T.vertexTangents&&a.enable(31),T.uvsVertexOnly&&a.enable(32),S.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.skinning&&a.enable(4),T.morphTargets&&a.enable(5),T.morphNormals&&a.enable(6),T.morphColors&&a.enable(7),T.premultipliedAlpha&&a.enable(8),T.shadowMapEnabled&&a.enable(9),T.physicallyCorrectLights&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.specularIntensityMap&&a.enable(15),T.specularColorMap&&a.enable(16),T.transmission&&a.enable(17),T.transmissionMap&&a.enable(18),T.thicknessMap&&a.enable(19),T.sheen&&a.enable(20),T.sheenColorMap&&a.enable(21),T.sheenRoughnessMap&&a.enable(22),T.decodeVideoTexture&&a.enable(23),T.opaque&&a.enable(24),S.push(a.mask)}function y(S){const T=p[S.type];let I;if(T){const A=xr[T];I=k$.clone(A.uniforms)}else I=S.uniforms;return I}function b(S,T){let I;for(let A=0,D=c.length;A<D;A++){const M=c[A];if(M.cacheKey===T){I=M,++I.usedTimes;break}}return I===void 0&&(I=new zP(s,T,S,r),c.push(I)),I}function w(S){if(--S.usedTimes===0){const T=c.indexOf(S);c[T]=c[c.length-1],c.pop(),S.destroy()}}function _(S){l.remove(S)}function C(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:y,acquireProgram:b,releaseProgram:w,releaseShaderCache:_,programs:c,dispose:C}}function GP(){let s=new WeakMap;function t(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function e(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function HP(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function T_(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function I_(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(h,d,f,p,g,m){let x=s[t];return x===void 0?(x={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:g,group:m},s[t]=x):(x.id=h.id,x.object=h,x.geometry=d,x.material=f,x.groupOrder=p,x.renderOrder=h.renderOrder,x.z=g,x.group=m),t++,x}function a(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.push(x):f.transparent===!0?i.push(x):e.push(x)}function l(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.unshift(x):f.transparent===!0?i.unshift(x):e.unshift(x)}function c(h,d){e.length>1&&e.sort(h||HP),n.length>1&&n.sort(d||T_),i.length>1&&i.sort(d||T_)}function u(){for(let h=t,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function qP(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new I_,s.set(n,[o])):i>=r.length?(o=new I_,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function jP(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new H,color:new Ue};break;case"SpotLight":e={position:new H,direction:new H,color:new Ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new H,color:new Ue,distance:0,decay:0};break;case"HemisphereLight":e={direction:new H,skyColor:new Ue,groundColor:new Ue};break;case"RectAreaLight":e={color:new Ue,position:new H,halfWidth:new H,halfHeight:new H};break}return s[t.id]=e,e}}}function XP(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new kt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new kt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new kt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let KP=0;function YP(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function ZP(s,t){const e=new jP,n=XP(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new H);const r=new H,o=new Je,a=new Je;function l(u,h){let d=0,f=0,p=0;for(let A=0;A<9;A++)i.probe[A].set(0,0,0);let g=0,m=0,x=0,v=0,y=0,b=0,w=0,_=0,C=0,S=0;u.sort(YP);const T=h!==!0?Math.PI:1;for(let A=0,D=u.length;A<D;A++){const M=u[A],E=M.color,k=M.intensity,N=M.distance,z=M.shadow&&M.shadow.map?M.shadow.map.texture:null;if(M.isAmbientLight)d+=E.r*k*T,f+=E.g*k*T,p+=E.b*k*T;else if(M.isLightProbe)for(let L=0;L<9;L++)i.probe[L].addScaledVector(M.sh.coefficients[L],k);else if(M.isDirectionalLight){const L=e.get(M);if(L.color.copy(M.color).multiplyScalar(M.intensity*T),M.castShadow){const $=M.shadow,W=n.get(M);W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,i.directionalShadow[g]=W,i.directionalShadowMap[g]=z,i.directionalShadowMatrix[g]=M.shadow.matrix,b++}i.directional[g]=L,g++}else if(M.isSpotLight){const L=e.get(M);L.position.setFromMatrixPosition(M.matrixWorld),L.color.copy(E).multiplyScalar(k*T),L.distance=N,L.coneCos=Math.cos(M.angle),L.penumbraCos=Math.cos(M.angle*(1-M.penumbra)),L.decay=M.decay,i.spot[x]=L;const $=M.shadow;if(M.map&&(i.spotLightMap[C]=M.map,C++,$.updateMatrices(M),M.castShadow&&S++),i.spotLightMatrix[x]=$.matrix,M.castShadow){const W=n.get(M);W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,i.spotShadow[x]=W,i.spotShadowMap[x]=z,_++}x++}else if(M.isRectAreaLight){const L=e.get(M);L.color.copy(E).multiplyScalar(k),L.halfWidth.set(M.width*.5,0,0),L.halfHeight.set(0,M.height*.5,0),i.rectArea[v]=L,v++}else if(M.isPointLight){const L=e.get(M);if(L.color.copy(M.color).multiplyScalar(M.intensity*T),L.distance=M.distance,L.decay=M.decay,M.castShadow){const $=M.shadow,W=n.get(M);W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,W.shadowCameraNear=$.camera.near,W.shadowCameraFar=$.camera.far,i.pointShadow[m]=W,i.pointShadowMap[m]=z,i.pointShadowMatrix[m]=M.shadow.matrix,w++}i.point[m]=L,m++}else if(M.isHemisphereLight){const L=e.get(M);L.skyColor.copy(M.color).multiplyScalar(k*T),L.groundColor.copy(M.groundColor).multiplyScalar(k*T),i.hemi[y]=L,y++}}v>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=zt.LTC_FLOAT_1,i.rectAreaLTC2=zt.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=zt.LTC_HALF_1,i.rectAreaLTC2=zt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const I=i.hash;(I.directionalLength!==g||I.pointLength!==m||I.spotLength!==x||I.rectAreaLength!==v||I.hemiLength!==y||I.numDirectionalShadows!==b||I.numPointShadows!==w||I.numSpotShadows!==_||I.numSpotMaps!==C)&&(i.directional.length=g,i.spot.length=x,i.rectArea.length=v,i.point.length=m,i.hemi.length=y,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=_+C-S,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=S,I.directionalLength=g,I.pointLength=m,I.spotLength=x,I.rectAreaLength=v,I.hemiLength=y,I.numDirectionalShadows=b,I.numPointShadows=w,I.numSpotShadows=_,I.numSpotMaps=C,i.version=KP++)}function c(u,h){let d=0,f=0,p=0,g=0,m=0;const x=h.matrixWorldInverse;for(let v=0,y=u.length;v<y;v++){const b=u[v];if(b.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),d++}else if(b.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),p++}else if(b.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),a.identity(),o.copy(b.matrixWorld),o.premultiply(x),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(b.isPointLight){const w=i.point[f];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),f++}else if(b.isHemisphereLight){const w=i.hemi[m];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(x),m++}}}return{setup:l,setupView:c,state:i}}function E_(s,t){const e=new ZP(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function JP(s,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new E_(s,t),e.set(r,[l])):o>=a.length?(l=new E_(s,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class QP extends jo{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=h$,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class tO extends jo{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new H,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const eO=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nO=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function sO(s,t,e){let n=new Uv;const i=new kt,r=new kt,o=new jn,a=new QP({depthPacking:d$}),l=new tO,c={},u=e.maxTextureSize,h={0:Zs,1:Oo,2:Ds},d=new Wa({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new kt},radius:{value:4}},vertexShader:eO,fragmentShader:nO}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new os;p.setAttribute("position",new Js(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new nn(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=s2,this.render=function(b,w,_){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const C=s.getRenderTarget(),S=s.getActiveCubeFace(),T=s.getActiveMipmapLevel(),I=s.state;I.setBlending(Ao),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let A=0,D=b.length;A<D;A++){const M=b[A],E=M.shadow;if(E===void 0){console.warn("THREE.WebGLShadowMap:",M,"has no shadow.");continue}if(E.autoUpdate===!1&&E.needsUpdate===!1)continue;i.copy(E.mapSize);const k=E.getFrameExtents();if(i.multiply(k),r.copy(E.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/k.x),i.x=r.x*k.x,E.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/k.y),i.y=r.y*k.y,E.mapSize.y=r.y)),E.map===null){const z=this.type!==Du?{minFilter:As,magFilter:As}:{};E.map=new Ua(i.x,i.y,z),E.map.texture.name=M.name+".shadowMap",E.camera.updateProjectionMatrix()}s.setRenderTarget(E.map),s.clear();const N=E.getViewportCount();for(let z=0;z<N;z++){const L=E.getViewport(z);o.set(r.x*L.x,r.y*L.y,r.x*L.z,r.y*L.w),I.viewport(o),E.updateMatrices(M,z),n=E.getFrustum(),y(w,_,E.camera,M,this.type)}E.isPointLightShadow!==!0&&this.type===Du&&x(E,_),E.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(C,S,T)};function x(b,w){const _=t.update(g);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,f.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Ua(i.x,i.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,s.setRenderTarget(b.mapPass),s.clear(),s.renderBufferDirect(w,null,_,d,g,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,s.setRenderTarget(b.map),s.clear(),s.renderBufferDirect(w,null,_,f,g,null)}function v(b,w,_,C,S,T){let I=null;const A=_.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(A!==void 0?I=A:I=_.isPointLight===!0?l:a,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const D=I.uuid,M=w.uuid;let E=c[D];E===void 0&&(E={},c[D]=E);let k=E[M];k===void 0&&(k=I.clone(),E[M]=k),I=k}return I.visible=w.visible,I.wireframe=w.wireframe,T===Du?I.side=w.shadowSide!==null?w.shadowSide:w.side:I.side=w.shadowSide!==null?w.shadowSide:h[w.side],I.alphaMap=w.alphaMap,I.alphaTest=w.alphaTest,I.clipShadows=w.clipShadows,I.clippingPlanes=w.clippingPlanes,I.clipIntersection=w.clipIntersection,I.displacementMap=w.displacementMap,I.displacementScale=w.displacementScale,I.displacementBias=w.displacementBias,I.wireframeLinewidth=w.wireframeLinewidth,I.linewidth=w.linewidth,_.isPointLight===!0&&I.isMeshDistanceMaterial===!0&&(I.referencePosition.setFromMatrixPosition(_.matrixWorld),I.nearDistance=C,I.farDistance=S),I}function y(b,w,_,C,S){if(b.visible===!1)return;if(b.layers.test(w.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&S===Du)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,b.matrixWorld);const A=t.update(b),D=b.material;if(Array.isArray(D)){const M=A.groups;for(let E=0,k=M.length;E<k;E++){const N=M[E],z=D[N.materialIndex];if(z&&z.visible){const L=v(b,z,C,_.near,_.far,S);s.renderBufferDirect(_,null,A,L,b,N)}}}else if(D.visible){const M=v(b,D,C,_.near,_.far,S);s.renderBufferDirect(_,null,A,M,b,null)}}const I=b.children;for(let A=0,D=I.length;A<D;A++)y(I[A],w,_,C,S)}}function iO(s,t,e){const n=e.isWebGL2;function i(){let nt=!1;const wt=new jn;let $t=null;const Kt=new jn(0,0,0,0);return{setMask:function(ce){$t!==ce&&!nt&&(s.colorMask(ce,ce,ce,ce),$t=ce)},setLocked:function(ce){nt=ce},setClear:function(ce,Oe,Gn,ls,oa){oa===!0&&(ce*=ls,Oe*=ls,Gn*=ls),wt.set(ce,Oe,Gn,ls),Kt.equals(wt)===!1&&(s.clearColor(ce,Oe,Gn,ls),Kt.copy(wt))},reset:function(){nt=!1,$t=null,Kt.set(-1,0,0,0)}}}function r(){let nt=!1,wt=null,$t=null,Kt=null;return{setTest:function(ce){ce?vt(2929):xt(2929)},setMask:function(ce){wt!==ce&&!nt&&(s.depthMask(ce),wt=ce)},setFunc:function(ce){if($t!==ce){switch(ce){case LD:s.depthFunc(512);break;case FD:s.depthFunc(519);break;case PD:s.depthFunc(513);break;case Ix:s.depthFunc(515);break;case OD:s.depthFunc(514);break;case zD:s.depthFunc(518);break;case BD:s.depthFunc(516);break;case UD:s.depthFunc(517);break;default:s.depthFunc(515)}$t=ce}},setLocked:function(ce){nt=ce},setClear:function(ce){Kt!==ce&&(s.clearDepth(ce),Kt=ce)},reset:function(){nt=!1,wt=null,$t=null,Kt=null}}}function o(){let nt=!1,wt=null,$t=null,Kt=null,ce=null,Oe=null,Gn=null,ls=null,oa=null;return{setTest:function(on){nt||(on?vt(2960):xt(2960))},setMask:function(on){wt!==on&&!nt&&(s.stencilMask(on),wt=on)},setFunc:function(on,zr,ai){($t!==on||Kt!==zr||ce!==ai)&&(s.stencilFunc(on,zr,ai),$t=on,Kt=zr,ce=ai)},setOp:function(on,zr,ai){(Oe!==on||Gn!==zr||ls!==ai)&&(s.stencilOp(on,zr,ai),Oe=on,Gn=zr,ls=ai)},setLocked:function(on){nt=on},setClear:function(on){oa!==on&&(s.clearStencil(on),oa=on)},reset:function(){nt=!1,wt=null,$t=null,Kt=null,ce=null,Oe=null,Gn=null,ls=null,oa=null}}}const a=new i,l=new r,c=new o,u=new WeakMap,h=new WeakMap;let d={},f={},p=new WeakMap,g=[],m=null,x=!1,v=null,y=null,b=null,w=null,_=null,C=null,S=null,T=!1,I=null,A=null,D=null,M=null,E=null;const k=s.getParameter(35661);let N=!1,z=0;const L=s.getParameter(7938);L.indexOf("WebGL")!==-1?(z=parseFloat(/^WebGL (\d)/.exec(L)[1]),N=z>=1):L.indexOf("OpenGL ES")!==-1&&(z=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),N=z>=2);let $=null,W={};const q=s.getParameter(3088),G=s.getParameter(2978),j=new jn().fromArray(q),rt=new jn().fromArray(G);function lt(nt,wt,$t){const Kt=new Uint8Array(4),ce=s.createTexture();s.bindTexture(nt,ce),s.texParameteri(nt,10241,9728),s.texParameteri(nt,10240,9728);for(let Oe=0;Oe<$t;Oe++)s.texImage2D(wt+Oe,0,6408,1,1,0,6408,5121,Kt);return ce}const Y={};Y[3553]=lt(3553,3553,1),Y[34067]=lt(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),vt(2929),l.setFunc(Ix),Ct(!1),Ut(x1),vt(2884),bt(Ao);function vt(nt){d[nt]!==!0&&(s.enable(nt),d[nt]=!0)}function xt(nt){d[nt]!==!1&&(s.disable(nt),d[nt]=!1)}function mt(nt,wt){return f[nt]!==wt?(s.bindFramebuffer(nt,wt),f[nt]=wt,n&&(nt===36009&&(f[36160]=wt),nt===36160&&(f[36009]=wt)),!0):!1}function ft(nt,wt){let $t=g,Kt=!1;if(nt)if($t=p.get(wt),$t===void 0&&($t=[],p.set(wt,$t)),nt.isWebGLMultipleRenderTargets){const ce=nt.texture;if($t.length!==ce.length||$t[0]!==36064){for(let Oe=0,Gn=ce.length;Oe<Gn;Oe++)$t[Oe]=36064+Oe;$t.length=ce.length,Kt=!0}}else $t[0]!==36064&&($t[0]=36064,Kt=!0);else $t[0]!==1029&&($t[0]=1029,Kt=!0);Kt&&(e.isWebGL2?s.drawBuffers($t):t.get("WEBGL_draw_buffers").drawBuffersWEBGL($t))}function it(nt){return m!==nt?(s.useProgram(nt),m=nt,!0):!1}const tt={[Jl]:32774,[CD]:32778,[TD]:32779};if(n)tt[w1]=32775,tt[_1]=32776;else{const nt=t.get("EXT_blend_minmax");nt!==null&&(tt[w1]=nt.MIN_EXT,tt[_1]=nt.MAX_EXT)}const ut={[ID]:0,[ED]:1,[MD]:768,[r2]:770,[$D]:776,[RD]:774,[AD]:772,[kD]:769,[o2]:771,[DD]:775,[ND]:773};function bt(nt,wt,$t,Kt,ce,Oe,Gn,ls){if(nt===Ao){x===!0&&(xt(3042),x=!1);return}if(x===!1&&(vt(3042),x=!0),nt!==SD){if(nt!==v||ls!==T){if((y!==Jl||_!==Jl)&&(s.blendEquation(32774),y=Jl,_=Jl),ls)switch(nt){case hc:s.blendFuncSeparate(1,771,1,771);break;case v1:s.blendFunc(1,1);break;case b1:s.blendFuncSeparate(0,769,0,1);break;case y1:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",nt);break}else switch(nt){case hc:s.blendFuncSeparate(770,771,1,771);break;case v1:s.blendFunc(770,1);break;case b1:s.blendFuncSeparate(0,769,0,1);break;case y1:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",nt);break}b=null,w=null,C=null,S=null,v=nt,T=ls}return}ce=ce||wt,Oe=Oe||$t,Gn=Gn||Kt,(wt!==y||ce!==_)&&(s.blendEquationSeparate(tt[wt],tt[ce]),y=wt,_=ce),($t!==b||Kt!==w||Oe!==C||Gn!==S)&&(s.blendFuncSeparate(ut[$t],ut[Kt],ut[Oe],ut[Gn]),b=$t,w=Kt,C=Oe,S=Gn),v=nt,T=null}function Rt(nt,wt){nt.side===Ds?xt(2884):vt(2884);let $t=nt.side===Zs;wt&&($t=!$t),Ct($t),nt.blending===hc&&nt.transparent===!1?bt(Ao):bt(nt.blending,nt.blendEquation,nt.blendSrc,nt.blendDst,nt.blendEquationAlpha,nt.blendSrcAlpha,nt.blendDstAlpha,nt.premultipliedAlpha),l.setFunc(nt.depthFunc),l.setTest(nt.depthTest),l.setMask(nt.depthWrite),a.setMask(nt.colorWrite);const Kt=nt.stencilWrite;c.setTest(Kt),Kt&&(c.setMask(nt.stencilWriteMask),c.setFunc(nt.stencilFunc,nt.stencilRef,nt.stencilFuncMask),c.setOp(nt.stencilFail,nt.stencilZFail,nt.stencilZPass)),Ht(nt.polygonOffset,nt.polygonOffsetFactor,nt.polygonOffsetUnits),nt.alphaToCoverage===!0?vt(32926):xt(32926)}function Ct(nt){I!==nt&&(nt?s.frontFace(2304):s.frontFace(2305),I=nt)}function Ut(nt){nt!==wD?(vt(2884),nt!==A&&(nt===x1?s.cullFace(1029):nt===_D?s.cullFace(1028):s.cullFace(1032))):xt(2884),A=nt}function Ot(nt){nt!==D&&(N&&s.lineWidth(nt),D=nt)}function Ht(nt,wt,$t){nt?(vt(32823),(M!==wt||E!==$t)&&(s.polygonOffset(wt,$t),M=wt,E=$t)):xt(32823)}function se(nt){nt?vt(3089):xt(3089)}function re(nt){nt===void 0&&(nt=33984+k-1),$!==nt&&(s.activeTexture(nt),$=nt)}function V(nt,wt,$t){$t===void 0&&($===null?$t=33984+k-1:$t=$);let Kt=W[$t];Kt===void 0&&(Kt={type:void 0,texture:void 0},W[$t]=Kt),(Kt.type!==nt||Kt.texture!==wt)&&($!==$t&&(s.activeTexture($t),$=$t),s.bindTexture(nt,wt||Y[nt]),Kt.type=nt,Kt.texture=wt)}function F(){const nt=W[$];nt!==void 0&&nt.type!==void 0&&(s.bindTexture(nt.type,null),nt.type=void 0,nt.texture=void 0)}function ct(){try{s.compressedTexImage2D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function _t(){try{s.compressedTexImage3D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function At(){try{s.texSubImage2D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function Lt(){try{s.texSubImage3D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function Gt(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function O(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function X(){try{s.texStorage2D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function Pt(){try{s.texStorage3D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function Xt(){try{s.texImage2D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function Wt(){try{s.texImage3D.apply(s,arguments)}catch(nt){console.error("THREE.WebGLState:",nt)}}function oe(nt){j.equals(nt)===!1&&(s.scissor(nt.x,nt.y,nt.z,nt.w),j.copy(nt))}function ie(nt){rt.equals(nt)===!1&&(s.viewport(nt.x,nt.y,nt.z,nt.w),rt.copy(nt))}function Me(nt,wt){let $t=h.get(wt);$t===void 0&&($t=new WeakMap,h.set(wt,$t));let Kt=$t.get(nt);Kt===void 0&&(Kt=s.getUniformBlockIndex(wt,nt.name),$t.set(nt,Kt))}function Ne(nt,wt){const Kt=h.get(wt).get(nt);u.get(nt)!==Kt&&(s.uniformBlockBinding(wt,Kt,nt.__bindingPointIndex),u.set(nt,Kt))}function Ge(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},$=null,W={},f={},p=new WeakMap,g=[],m=null,x=!1,v=null,y=null,b=null,w=null,_=null,C=null,S=null,T=!1,I=null,A=null,D=null,M=null,E=null,j.set(0,0,s.canvas.width,s.canvas.height),rt.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:vt,disable:xt,bindFramebuffer:mt,drawBuffers:ft,useProgram:it,setBlending:bt,setMaterial:Rt,setFlipSided:Ct,setCullFace:Ut,setLineWidth:Ot,setPolygonOffset:Ht,setScissorTest:se,activeTexture:re,bindTexture:V,unbindTexture:F,compressedTexImage2D:ct,compressedTexImage3D:_t,texImage2D:Xt,texImage3D:Wt,updateUBOMapping:Me,uniformBlockBinding:Ne,texStorage2D:X,texStorage3D:Pt,texSubImage2D:At,texSubImage3D:Lt,compressedTexSubImage2D:Gt,compressedTexSubImage3D:O,scissor:oe,viewport:ie,reset:Ge}}function rO(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(typeof navigator>"u"?"":navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(V,F){return x?new OffscreenCanvas(V,F):Sp("canvas")}function y(V,F,ct,_t){let At=1;if((V.width>_t||V.height>_t)&&(At=_t/Math.max(V.width,V.height)),At<1||F===!0)if(typeof HTMLImageElement<"u"&&V instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&V instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&V instanceof ImageBitmap){const Lt=F?Rx:Math.floor,Gt=Lt(At*V.width),O=Lt(At*V.height);g===void 0&&(g=v(Gt,O));const X=ct?v(Gt,O):g;return X.width=Gt,X.height=O,X.getContext("2d").drawImage(V,0,0,Gt,O),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+V.width+"x"+V.height+") to ("+Gt+"x"+O+")."),X}else return"data"in V&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+V.width+"x"+V.height+")."),V;return V}function b(V){return K1(V.width)&&K1(V.height)}function w(V){return a?!1:V.wrapS!==Hi||V.wrapT!==Hi||V.minFilter!==As&&V.minFilter!==pi}function _(V,F){return V.generateMipmaps&&F&&V.minFilter!==As&&V.minFilter!==pi}function C(V){s.generateMipmap(V)}function S(V,F,ct,_t,At=!1){if(a===!1)return F;if(V!==null){if(s[V]!==void 0)return s[V];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+V+"'")}let Lt=F;return F===6403&&(ct===5126&&(Lt=33326),ct===5131&&(Lt=33325),ct===5121&&(Lt=33321)),F===33319&&(ct===5126&&(Lt=33328),ct===5131&&(Lt=33327),ct===5121&&(Lt=33323)),F===6408&&(ct===5126&&(Lt=34836),ct===5131&&(Lt=34842),ct===5121&&(Lt=_t===pn&&At===!1?35907:32856),ct===32819&&(Lt=32854),ct===32820&&(Lt=32855)),(Lt===33325||Lt===33326||Lt===33327||Lt===33328||Lt===34842||Lt===34836)&&t.get("EXT_color_buffer_float"),Lt}function T(V,F,ct){return _(V,ct)===!0||V.isFramebufferTexture&&V.minFilter!==As&&V.minFilter!==pi?Math.log2(Math.max(F.width,F.height))+1:V.mipmaps!==void 0&&V.mipmaps.length>0?V.mipmaps.length:V.isCompressedTexture&&Array.isArray(V.image)?F.mipmaps.length:1}function I(V){return V===As||V===S1||V===C1?9728:9729}function A(V){const F=V.target;F.removeEventListener("dispose",A),M(F),F.isVideoTexture&&p.delete(F)}function D(V){const F=V.target;F.removeEventListener("dispose",D),k(F)}function M(V){const F=n.get(V);if(F.__webglInit===void 0)return;const ct=V.source,_t=m.get(ct);if(_t){const At=_t[F.__cacheKey];At.usedTimes--,At.usedTimes===0&&E(V),Object.keys(_t).length===0&&m.delete(ct)}n.remove(V)}function E(V){const F=n.get(V);s.deleteTexture(F.__webglTexture);const ct=V.source,_t=m.get(ct);delete _t[F.__cacheKey],o.memory.textures--}function k(V){const F=V.texture,ct=n.get(V),_t=n.get(F);if(_t.__webglTexture!==void 0&&(s.deleteTexture(_t.__webglTexture),o.memory.textures--),V.depthTexture&&V.depthTexture.dispose(),V.isWebGLCubeRenderTarget)for(let At=0;At<6;At++)s.deleteFramebuffer(ct.__webglFramebuffer[At]),ct.__webglDepthbuffer&&s.deleteRenderbuffer(ct.__webglDepthbuffer[At]);else{if(s.deleteFramebuffer(ct.__webglFramebuffer),ct.__webglDepthbuffer&&s.deleteRenderbuffer(ct.__webglDepthbuffer),ct.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ct.__webglMultisampledFramebuffer),ct.__webglColorRenderbuffer)for(let At=0;At<ct.__webglColorRenderbuffer.length;At++)ct.__webglColorRenderbuffer[At]&&s.deleteRenderbuffer(ct.__webglColorRenderbuffer[At]);ct.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ct.__webglDepthRenderbuffer)}if(V.isWebGLMultipleRenderTargets)for(let At=0,Lt=F.length;At<Lt;At++){const Gt=n.get(F[At]);Gt.__webglTexture&&(s.deleteTexture(Gt.__webglTexture),o.memory.textures--),n.remove(F[At])}n.remove(F),n.remove(V)}let N=0;function z(){N=0}function L(){const V=N;return V>=l&&console.warn("THREE.WebGLTextures: Trying to use "+V+" texture units while this GPU supports only "+l),N+=1,V}function $(V){const F=[];return F.push(V.wrapS),F.push(V.wrapT),F.push(V.wrapR||0),F.push(V.magFilter),F.push(V.minFilter),F.push(V.anisotropy),F.push(V.internalFormat),F.push(V.format),F.push(V.type),F.push(V.generateMipmaps),F.push(V.premultiplyAlpha),F.push(V.flipY),F.push(V.unpackAlignment),F.push(V.encoding),F.join()}function W(V,F){const ct=n.get(V);if(V.isVideoTexture&&se(V),V.isRenderTargetTexture===!1&&V.version>0&&ct.__version!==V.version){const _t=V.image;if(_t===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(_t.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{xt(ct,V,F);return}}e.bindTexture(3553,ct.__webglTexture,33984+F)}function q(V,F){const ct=n.get(V);if(V.version>0&&ct.__version!==V.version){xt(ct,V,F);return}e.bindTexture(35866,ct.__webglTexture,33984+F)}function G(V,F){const ct=n.get(V);if(V.version>0&&ct.__version!==V.version){xt(ct,V,F);return}e.bindTexture(32879,ct.__webglTexture,33984+F)}function j(V,F){const ct=n.get(V);if(V.version>0&&ct.__version!==V.version){mt(ct,V,F);return}e.bindTexture(34067,ct.__webglTexture,33984+F)}const rt={[kx]:10497,[Hi]:33071,[Ax]:33648},lt={[As]:9728,[S1]:9984,[C1]:9986,[pi]:9729,[KD]:9985,[mm]:9987};function Y(V,F,ct){if(ct?(s.texParameteri(V,10242,rt[F.wrapS]),s.texParameteri(V,10243,rt[F.wrapT]),(V===32879||V===35866)&&s.texParameteri(V,32882,rt[F.wrapR]),s.texParameteri(V,10240,lt[F.magFilter]),s.texParameteri(V,10241,lt[F.minFilter])):(s.texParameteri(V,10242,33071),s.texParameteri(V,10243,33071),(V===32879||V===35866)&&s.texParameteri(V,32882,33071),(F.wrapS!==Hi||F.wrapT!==Hi)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(V,10240,I(F.magFilter)),s.texParameteri(V,10241,I(F.minFilter)),F.minFilter!==As&&F.minFilter!==pi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const _t=t.get("EXT_texture_filter_anisotropic");if(F.type===Ta&&t.has("OES_texture_float_linear")===!1||a===!1&&F.type===eh&&t.has("OES_texture_half_float_linear")===!1)return;(F.anisotropy>1||n.get(F).__currentAnisotropy)&&(s.texParameterf(V,_t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(F.anisotropy,i.getMaxAnisotropy())),n.get(F).__currentAnisotropy=F.anisotropy)}}function vt(V,F){let ct=!1;V.__webglInit===void 0&&(V.__webglInit=!0,F.addEventListener("dispose",A));const _t=F.source;let At=m.get(_t);At===void 0&&(At={},m.set(_t,At));const Lt=$(F);if(Lt!==V.__cacheKey){At[Lt]===void 0&&(At[Lt]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ct=!0),At[Lt].usedTimes++;const Gt=At[V.__cacheKey];Gt!==void 0&&(At[V.__cacheKey].usedTimes--,Gt.usedTimes===0&&E(F)),V.__cacheKey=Lt,V.__webglTexture=At[Lt].texture}return ct}function xt(V,F,ct){let _t=3553;(F.isDataArrayTexture||F.isCompressedArrayTexture)&&(_t=35866),F.isData3DTexture&&(_t=32879);const At=vt(V,F),Lt=F.source;e.bindTexture(_t,V.__webglTexture,33984+ct);const Gt=n.get(Lt);if(Lt.version!==Gt.__version||At===!0){e.activeTexture(33984+ct),s.pixelStorei(37440,F.flipY),s.pixelStorei(37441,F.premultiplyAlpha),s.pixelStorei(3317,F.unpackAlignment),s.pixelStorei(37443,0);const O=w(F)&&b(F.image)===!1;let X=y(F.image,O,!1,u);X=re(F,X);const Pt=b(X)||a,Xt=r.convert(F.format,F.encoding);let Wt=r.convert(F.type),oe=S(F.internalFormat,Xt,Wt,F.encoding,F.isVideoTexture);Y(_t,F,Pt);let ie;const Me=F.mipmaps,Ne=a&&F.isVideoTexture!==!0,Ge=Gt.__version===void 0||At===!0,nt=T(F,X,Pt);if(F.isDepthTexture)oe=6402,a?F.type===Ta?oe=36012:F.type===Ca?oe=33190:F.type===dc?oe=35056:oe=33189:F.type===Ta&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),F.format===Ra&&oe===6402&&F.type!==l2&&F.type!==Ca&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),F.type=Ca,Wt=r.convert(F.type)),F.format===Tc&&oe===6402&&(oe=34041,F.type!==dc&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),F.type=dc,Wt=r.convert(F.type))),Ge&&(Ne?e.texStorage2D(3553,1,oe,X.width,X.height):e.texImage2D(3553,0,oe,X.width,X.height,0,Xt,Wt,null));else if(F.isDataTexture)if(Me.length>0&&Pt){Ne&&Ge&&e.texStorage2D(3553,nt,oe,Me[0].width,Me[0].height);for(let wt=0,$t=Me.length;wt<$t;wt++)ie=Me[wt],Ne?e.texSubImage2D(3553,wt,0,0,ie.width,ie.height,Xt,Wt,ie.data):e.texImage2D(3553,wt,oe,ie.width,ie.height,0,Xt,Wt,ie.data);F.generateMipmaps=!1}else Ne?(Ge&&e.texStorage2D(3553,nt,oe,X.width,X.height),e.texSubImage2D(3553,0,0,0,X.width,X.height,Xt,Wt,X.data)):e.texImage2D(3553,0,oe,X.width,X.height,0,Xt,Wt,X.data);else if(F.isCompressedTexture)if(F.isCompressedArrayTexture){Ne&&Ge&&e.texStorage3D(35866,nt,oe,Me[0].width,Me[0].height,X.depth);for(let wt=0,$t=Me.length;wt<$t;wt++)ie=Me[wt],F.format!==qi?Xt!==null?Ne?e.compressedTexSubImage3D(35866,wt,0,0,0,ie.width,ie.height,X.depth,Xt,ie.data,0,0):e.compressedTexImage3D(35866,wt,oe,ie.width,ie.height,X.depth,0,ie.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ne?e.texSubImage3D(35866,wt,0,0,0,ie.width,ie.height,X.depth,Xt,Wt,ie.data):e.texImage3D(35866,wt,oe,ie.width,ie.height,X.depth,0,Xt,Wt,ie.data)}else{Ne&&Ge&&e.texStorage2D(3553,nt,oe,Me[0].width,Me[0].height);for(let wt=0,$t=Me.length;wt<$t;wt++)ie=Me[wt],F.format!==qi?Xt!==null?Ne?e.compressedTexSubImage2D(3553,wt,0,0,ie.width,ie.height,Xt,ie.data):e.compressedTexImage2D(3553,wt,oe,ie.width,ie.height,0,ie.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ne?e.texSubImage2D(3553,wt,0,0,ie.width,ie.height,Xt,Wt,ie.data):e.texImage2D(3553,wt,oe,ie.width,ie.height,0,Xt,Wt,ie.data)}else if(F.isDataArrayTexture)Ne?(Ge&&e.texStorage3D(35866,nt,oe,X.width,X.height,X.depth),e.texSubImage3D(35866,0,0,0,0,X.width,X.height,X.depth,Xt,Wt,X.data)):e.texImage3D(35866,0,oe,X.width,X.height,X.depth,0,Xt,Wt,X.data);else if(F.isData3DTexture)Ne?(Ge&&e.texStorage3D(32879,nt,oe,X.width,X.height,X.depth),e.texSubImage3D(32879,0,0,0,0,X.width,X.height,X.depth,Xt,Wt,X.data)):e.texImage3D(32879,0,oe,X.width,X.height,X.depth,0,Xt,Wt,X.data);else if(F.isFramebufferTexture){if(Ge)if(Ne)e.texStorage2D(3553,nt,oe,X.width,X.height);else{let wt=X.width,$t=X.height;for(let Kt=0;Kt<nt;Kt++)e.texImage2D(3553,Kt,oe,wt,$t,0,Xt,Wt,null),wt>>=1,$t>>=1}}else if(Me.length>0&&Pt){Ne&&Ge&&e.texStorage2D(3553,nt,oe,Me[0].width,Me[0].height);for(let wt=0,$t=Me.length;wt<$t;wt++)ie=Me[wt],Ne?e.texSubImage2D(3553,wt,0,0,Xt,Wt,ie):e.texImage2D(3553,wt,oe,Xt,Wt,ie);F.generateMipmaps=!1}else Ne?(Ge&&e.texStorage2D(3553,nt,oe,X.width,X.height),e.texSubImage2D(3553,0,0,0,Xt,Wt,X)):e.texImage2D(3553,0,oe,Xt,Wt,X);_(F,Pt)&&C(_t),Gt.__version=Lt.version,F.onUpdate&&F.onUpdate(F)}V.__version=F.version}function mt(V,F,ct){if(F.image.length!==6)return;const _t=vt(V,F),At=F.source;e.bindTexture(34067,V.__webglTexture,33984+ct);const Lt=n.get(At);if(At.version!==Lt.__version||_t===!0){e.activeTexture(33984+ct),s.pixelStorei(37440,F.flipY),s.pixelStorei(37441,F.premultiplyAlpha),s.pixelStorei(3317,F.unpackAlignment),s.pixelStorei(37443,0);const Gt=F.isCompressedTexture||F.image[0].isCompressedTexture,O=F.image[0]&&F.image[0].isDataTexture,X=[];for(let wt=0;wt<6;wt++)!Gt&&!O?X[wt]=y(F.image[wt],!1,!0,c):X[wt]=O?F.image[wt].image:F.image[wt],X[wt]=re(F,X[wt]);const Pt=X[0],Xt=b(Pt)||a,Wt=r.convert(F.format,F.encoding),oe=r.convert(F.type),ie=S(F.internalFormat,Wt,oe,F.encoding),Me=a&&F.isVideoTexture!==!0,Ne=Lt.__version===void 0||_t===!0;let Ge=T(F,Pt,Xt);Y(34067,F,Xt);let nt;if(Gt){Me&&Ne&&e.texStorage2D(34067,Ge,ie,Pt.width,Pt.height);for(let wt=0;wt<6;wt++){nt=X[wt].mipmaps;for(let $t=0;$t<nt.length;$t++){const Kt=nt[$t];F.format!==qi?Wt!==null?Me?e.compressedTexSubImage2D(34069+wt,$t,0,0,Kt.width,Kt.height,Wt,Kt.data):e.compressedTexImage2D(34069+wt,$t,ie,Kt.width,Kt.height,0,Kt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Me?e.texSubImage2D(34069+wt,$t,0,0,Kt.width,Kt.height,Wt,oe,Kt.data):e.texImage2D(34069+wt,$t,ie,Kt.width,Kt.height,0,Wt,oe,Kt.data)}}}else{nt=F.mipmaps,Me&&Ne&&(nt.length>0&&Ge++,e.texStorage2D(34067,Ge,ie,X[0].width,X[0].height));for(let wt=0;wt<6;wt++)if(O){Me?e.texSubImage2D(34069+wt,0,0,0,X[wt].width,X[wt].height,Wt,oe,X[wt].data):e.texImage2D(34069+wt,0,ie,X[wt].width,X[wt].height,0,Wt,oe,X[wt].data);for(let $t=0;$t<nt.length;$t++){const ce=nt[$t].image[wt].image;Me?e.texSubImage2D(34069+wt,$t+1,0,0,ce.width,ce.height,Wt,oe,ce.data):e.texImage2D(34069+wt,$t+1,ie,ce.width,ce.height,0,Wt,oe,ce.data)}}else{Me?e.texSubImage2D(34069+wt,0,0,0,Wt,oe,X[wt]):e.texImage2D(34069+wt,0,ie,Wt,oe,X[wt]);for(let $t=0;$t<nt.length;$t++){const Kt=nt[$t];Me?e.texSubImage2D(34069+wt,$t+1,0,0,Wt,oe,Kt.image[wt]):e.texImage2D(34069+wt,$t+1,ie,Wt,oe,Kt.image[wt])}}}_(F,Xt)&&C(34067),Lt.__version=At.version,F.onUpdate&&F.onUpdate(F)}V.__version=F.version}function ft(V,F,ct,_t,At){const Lt=r.convert(ct.format,ct.encoding),Gt=r.convert(ct.type),O=S(ct.internalFormat,Lt,Gt,ct.encoding);n.get(F).__hasExternalTextures||(At===32879||At===35866?e.texImage3D(At,0,O,F.width,F.height,F.depth,0,Lt,Gt,null):e.texImage2D(At,0,O,F.width,F.height,0,Lt,Gt,null)),e.bindFramebuffer(36160,V),Ht(F)?d.framebufferTexture2DMultisampleEXT(36160,_t,At,n.get(ct).__webglTexture,0,Ot(F)):(At===3553||At>=34069&&At<=34074)&&s.framebufferTexture2D(36160,_t,At,n.get(ct).__webglTexture,0),e.bindFramebuffer(36160,null)}function it(V,F,ct){if(s.bindRenderbuffer(36161,V),F.depthBuffer&&!F.stencilBuffer){let _t=33189;if(ct||Ht(F)){const At=F.depthTexture;At&&At.isDepthTexture&&(At.type===Ta?_t=36012:At.type===Ca&&(_t=33190));const Lt=Ot(F);Ht(F)?d.renderbufferStorageMultisampleEXT(36161,Lt,_t,F.width,F.height):s.renderbufferStorageMultisample(36161,Lt,_t,F.width,F.height)}else s.renderbufferStorage(36161,_t,F.width,F.height);s.framebufferRenderbuffer(36160,36096,36161,V)}else if(F.depthBuffer&&F.stencilBuffer){const _t=Ot(F);ct&&Ht(F)===!1?s.renderbufferStorageMultisample(36161,_t,35056,F.width,F.height):Ht(F)?d.renderbufferStorageMultisampleEXT(36161,_t,35056,F.width,F.height):s.renderbufferStorage(36161,34041,F.width,F.height),s.framebufferRenderbuffer(36160,33306,36161,V)}else{const _t=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let At=0;At<_t.length;At++){const Lt=_t[At],Gt=r.convert(Lt.format,Lt.encoding),O=r.convert(Lt.type),X=S(Lt.internalFormat,Gt,O,Lt.encoding),Pt=Ot(F);ct&&Ht(F)===!1?s.renderbufferStorageMultisample(36161,Pt,X,F.width,F.height):Ht(F)?d.renderbufferStorageMultisampleEXT(36161,Pt,X,F.width,F.height):s.renderbufferStorage(36161,X,F.width,F.height)}}s.bindRenderbuffer(36161,null)}function tt(V,F){if(F&&F.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,V),!(F.depthTexture&&F.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(F.depthTexture).__webglTexture||F.depthTexture.image.width!==F.width||F.depthTexture.image.height!==F.height)&&(F.depthTexture.image.width=F.width,F.depthTexture.image.height=F.height,F.depthTexture.needsUpdate=!0),W(F.depthTexture,0);const _t=n.get(F.depthTexture).__webglTexture,At=Ot(F);if(F.depthTexture.format===Ra)Ht(F)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,_t,0,At):s.framebufferTexture2D(36160,36096,3553,_t,0);else if(F.depthTexture.format===Tc)Ht(F)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,_t,0,At):s.framebufferTexture2D(36160,33306,3553,_t,0);else throw new Error("Unknown depthTexture format")}function ut(V){const F=n.get(V),ct=V.isWebGLCubeRenderTarget===!0;if(V.depthTexture&&!F.__autoAllocateDepthBuffer){if(ct)throw new Error("target.depthTexture not supported in Cube render targets");tt(F.__webglFramebuffer,V)}else if(ct){F.__webglDepthbuffer=[];for(let _t=0;_t<6;_t++)e.bindFramebuffer(36160,F.__webglFramebuffer[_t]),F.__webglDepthbuffer[_t]=s.createRenderbuffer(),it(F.__webglDepthbuffer[_t],V,!1)}else e.bindFramebuffer(36160,F.__webglFramebuffer),F.__webglDepthbuffer=s.createRenderbuffer(),it(F.__webglDepthbuffer,V,!1);e.bindFramebuffer(36160,null)}function bt(V,F,ct){const _t=n.get(V);F!==void 0&&ft(_t.__webglFramebuffer,V,V.texture,36064,3553),ct!==void 0&&ut(V)}function Rt(V){const F=V.texture,ct=n.get(V),_t=n.get(F);V.addEventListener("dispose",D),V.isWebGLMultipleRenderTargets!==!0&&(_t.__webglTexture===void 0&&(_t.__webglTexture=s.createTexture()),_t.__version=F.version,o.memory.textures++);const At=V.isWebGLCubeRenderTarget===!0,Lt=V.isWebGLMultipleRenderTargets===!0,Gt=b(V)||a;if(At){ct.__webglFramebuffer=[];for(let O=0;O<6;O++)ct.__webglFramebuffer[O]=s.createFramebuffer()}else{if(ct.__webglFramebuffer=s.createFramebuffer(),Lt)if(i.drawBuffers){const O=V.texture;for(let X=0,Pt=O.length;X<Pt;X++){const Xt=n.get(O[X]);Xt.__webglTexture===void 0&&(Xt.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&V.samples>0&&Ht(V)===!1){const O=Lt?F:[F];ct.__webglMultisampledFramebuffer=s.createFramebuffer(),ct.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,ct.__webglMultisampledFramebuffer);for(let X=0;X<O.length;X++){const Pt=O[X];ct.__webglColorRenderbuffer[X]=s.createRenderbuffer(),s.bindRenderbuffer(36161,ct.__webglColorRenderbuffer[X]);const Xt=r.convert(Pt.format,Pt.encoding),Wt=r.convert(Pt.type),oe=S(Pt.internalFormat,Xt,Wt,Pt.encoding,V.isXRRenderTarget===!0),ie=Ot(V);s.renderbufferStorageMultisample(36161,ie,oe,V.width,V.height),s.framebufferRenderbuffer(36160,36064+X,36161,ct.__webglColorRenderbuffer[X])}s.bindRenderbuffer(36161,null),V.depthBuffer&&(ct.__webglDepthRenderbuffer=s.createRenderbuffer(),it(ct.__webglDepthRenderbuffer,V,!0)),e.bindFramebuffer(36160,null)}}if(At){e.bindTexture(34067,_t.__webglTexture),Y(34067,F,Gt);for(let O=0;O<6;O++)ft(ct.__webglFramebuffer[O],V,F,36064,34069+O);_(F,Gt)&&C(34067),e.unbindTexture()}else if(Lt){const O=V.texture;for(let X=0,Pt=O.length;X<Pt;X++){const Xt=O[X],Wt=n.get(Xt);e.bindTexture(3553,Wt.__webglTexture),Y(3553,Xt,Gt),ft(ct.__webglFramebuffer,V,Xt,36064+X,3553),_(Xt,Gt)&&C(3553)}e.unbindTexture()}else{let O=3553;(V.isWebGL3DRenderTarget||V.isWebGLArrayRenderTarget)&&(a?O=V.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(O,_t.__webglTexture),Y(O,F,Gt),ft(ct.__webglFramebuffer,V,F,36064,O),_(F,Gt)&&C(O),e.unbindTexture()}V.depthBuffer&&ut(V)}function Ct(V){const F=b(V)||a,ct=V.isWebGLMultipleRenderTargets===!0?V.texture:[V.texture];for(let _t=0,At=ct.length;_t<At;_t++){const Lt=ct[_t];if(_(Lt,F)){const Gt=V.isWebGLCubeRenderTarget?34067:3553,O=n.get(Lt).__webglTexture;e.bindTexture(Gt,O),C(Gt),e.unbindTexture()}}}function Ut(V){if(a&&V.samples>0&&Ht(V)===!1){const F=V.isWebGLMultipleRenderTargets?V.texture:[V.texture],ct=V.width,_t=V.height;let At=16384;const Lt=[],Gt=V.stencilBuffer?33306:36096,O=n.get(V),X=V.isWebGLMultipleRenderTargets===!0;if(X)for(let Pt=0;Pt<F.length;Pt++)e.bindFramebuffer(36160,O.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Pt,36161,null),e.bindFramebuffer(36160,O.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Pt,3553,null,0);e.bindFramebuffer(36008,O.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,O.__webglFramebuffer);for(let Pt=0;Pt<F.length;Pt++){Lt.push(36064+Pt),V.depthBuffer&&Lt.push(Gt);const Xt=O.__ignoreDepthValues!==void 0?O.__ignoreDepthValues:!1;if(Xt===!1&&(V.depthBuffer&&(At|=256),V.stencilBuffer&&(At|=1024)),X&&s.framebufferRenderbuffer(36008,36064,36161,O.__webglColorRenderbuffer[Pt]),Xt===!0&&(s.invalidateFramebuffer(36008,[Gt]),s.invalidateFramebuffer(36009,[Gt])),X){const Wt=n.get(F[Pt]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Wt,0)}s.blitFramebuffer(0,0,ct,_t,0,0,ct,_t,At,9728),f&&s.invalidateFramebuffer(36008,Lt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),X)for(let Pt=0;Pt<F.length;Pt++){e.bindFramebuffer(36160,O.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Pt,36161,O.__webglColorRenderbuffer[Pt]);const Xt=n.get(F[Pt]).__webglTexture;e.bindFramebuffer(36160,O.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Pt,3553,Xt,0)}e.bindFramebuffer(36009,O.__webglMultisampledFramebuffer)}}function Ot(V){return Math.min(h,V.samples)}function Ht(V){const F=n.get(V);return a&&V.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&F.__useRenderToTexture!==!1}function se(V){const F=o.render.frame;p.get(V)!==F&&(p.set(V,F),V.update())}function re(V,F){const ct=V.encoding,_t=V.format,At=V.type;return V.isCompressedTexture===!0||V.isVideoTexture===!0||V.format===Nx||ct!==Ba&&(ct===pn?a===!1?t.has("EXT_sRGB")===!0&&_t===qi?(V.format=Nx,V.minFilter=pi,V.generateMipmaps=!1):F=h2.sRGBToLinear(F):(_t!==qi||At!==za)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ct)),F}this.allocateTextureUnit=L,this.resetTextureUnits=z,this.setTexture2D=W,this.setTexture2DArray=q,this.setTexture3D=G,this.setTextureCube=j,this.rebindTextures=bt,this.setupRenderTarget=Rt,this.updateRenderTargetMipmap=Ct,this.updateMultisampleRenderTarget=Ut,this.setupDepthRenderbuffer=ut,this.setupFrameBufferTexture=ft,this.useMultisampledRTT=Ht}function oO(s,t,e){const n=e.isWebGL2;function i(r,o=null){let a;if(r===za)return 5121;if(r===QD)return 32819;if(r===t$)return 32820;if(r===YD)return 5120;if(r===ZD)return 5122;if(r===l2)return 5123;if(r===JD)return 5124;if(r===Ca)return 5125;if(r===Ta)return 5126;if(r===eh)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===e$)return 6406;if(r===qi)return 6408;if(r===s$)return 6409;if(r===i$)return 6410;if(r===Ra)return 6402;if(r===Tc)return 34041;if(r===r$)return 6403;if(r===n$)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===Nx)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===o$)return 36244;if(r===a$)return 33319;if(r===l$)return 33320;if(r===c$)return 36249;if(r===c0||r===u0||r===h0||r===d0)if(o===pn)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===c0)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===u0)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===h0)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===d0)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===c0)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===u0)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===h0)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===d0)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===T1||r===I1||r===E1||r===M1)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===T1)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===I1)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===E1)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===M1)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===u$)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===k1||r===A1)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===k1)return o===pn?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===A1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===N1||r===R1||r===D1||r===$1||r===L1||r===F1||r===P1||r===O1||r===z1||r===B1||r===U1||r===V1||r===W1||r===G1)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===N1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===R1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===D1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===$1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===L1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===F1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===P1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===O1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===z1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===B1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===U1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===V1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===W1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===G1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===H1)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===H1)return o===pn?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===dc?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class aO extends mi{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Sf extends Xn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const lO={type:"move"};class B0{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Sf,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Sf,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new H,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new H),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Sf,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new H,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new H),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const m=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const v=new Sf;v.matrixAutoUpdate=!1,v.visible=!1,c.joints[g.jointName]=v,c.add(v)}const x=c.joints[g.jointName];m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=m.radius),x.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(lO)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class cO extends Qi{constructor(t,e,n,i,r,o,a,l,c,u){if(u=u!==void 0?u:Ra,u!==Ra&&u!==Tc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Ra&&(n=Ca),n===void 0&&u===Tc&&(n=dc),super(null,i,r,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:As,this.minFilter=l!==void 0?l:As,this.flipY=!1,this.generateMipmaps=!1}}class uO extends al{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,d=null,f=null;const p=e.getContextAttributes();let g=null,m=null;const x=[],v=[],y=new mi;y.layers.enable(1),y.viewport=new jn;const b=new mi;b.layers.enable(2),b.viewport=new jn;const w=[y,b],_=new aO;_.layers.enable(1),_.layers.enable(2);let C=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let W=x[$];return W===void 0&&(W=new B0,x[$]=W),W.getTargetRaySpace()},this.getControllerGrip=function($){let W=x[$];return W===void 0&&(W=new B0,x[$]=W),W.getGripSpace()},this.getHand=function($){let W=x[$];return W===void 0&&(W=new B0,x[$]=W),W.getHandSpace()};function T($){const W=v.indexOf($.inputSource);if(W===-1)return;const q=x[W];q!==void 0&&q.dispatchEvent({type:$.type,data:$.inputSource})}function I(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",I),i.removeEventListener("inputsourceschange",A);for(let $=0;$<x.length;$++){const W=v[$];W!==null&&(v[$]=null,x[$].disconnect(W))}C=null,S=null,t.setRenderTarget(g),d=null,h=null,u=null,i=null,m=null,L.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){r=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function($){l=$},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function($){if(i=$,i!==null){if(g=t.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",I),i.addEventListener("inputsourceschange",A),p.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const W={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,W),i.updateRenderState({baseLayer:d}),m=new Ua(d.framebufferWidth,d.framebufferHeight,{format:qi,type:za,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let W=null,q=null,G=null;p.depth&&(G=p.stencil?35056:33190,W=p.stencil?Tc:Ra,q=p.stencil?dc:Ca);const j={colorFormat:32856,depthFormat:G,scaleFactor:r};u=new XRWebGLBinding(i,e),h=u.createProjectionLayer(j),i.updateRenderState({layers:[h]}),m=new Ua(h.textureWidth,h.textureHeight,{format:qi,type:za,depthTexture:new cO(h.textureWidth,h.textureHeight,q,void 0,void 0,void 0,void 0,void 0,void 0,W),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const rt=t.properties.get(m);rt.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),L.setContext(i),L.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function A($){for(let W=0;W<$.removed.length;W++){const q=$.removed[W],G=v.indexOf(q);G>=0&&(v[G]=null,x[G].dispatchEvent({type:"disconnected",data:q}))}for(let W=0;W<$.added.length;W++){const q=$.added[W];let G=v.indexOf(q);if(G===-1){for(let rt=0;rt<x.length;rt++)if(rt>=v.length){v.push(q),G=rt;break}else if(v[rt]===null){v[rt]=q,G=rt;break}if(G===-1)break}const j=x[G];j&&j.dispatchEvent({type:"connected",data:q})}}const D=new H,M=new H;function E($,W,q){D.setFromMatrixPosition(W.matrixWorld),M.setFromMatrixPosition(q.matrixWorld);const G=D.distanceTo(M),j=W.projectionMatrix.elements,rt=q.projectionMatrix.elements,lt=j[14]/(j[10]-1),Y=j[14]/(j[10]+1),vt=(j[9]+1)/j[5],xt=(j[9]-1)/j[5],mt=(j[8]-1)/j[0],ft=(rt[8]+1)/rt[0],it=lt*mt,tt=lt*ft,ut=G/(-mt+ft),bt=ut*-mt;W.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(bt),$.translateZ(ut),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const Rt=lt+ut,Ct=Y+ut,Ut=it-bt,Ot=tt+(G-bt),Ht=vt*Y/Ct*Rt,se=xt*Y/Ct*Rt;$.projectionMatrix.makePerspective(Ut,Ot,Ht,se,Rt,Ct)}function k($,W){W===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(W.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(i===null)return;_.near=b.near=y.near=$.near,_.far=b.far=y.far=$.far,(C!==_.near||S!==_.far)&&(i.updateRenderState({depthNear:_.near,depthFar:_.far}),C=_.near,S=_.far);const W=$.parent,q=_.cameras;k(_,W);for(let j=0;j<q.length;j++)k(q[j],W);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),$.matrix.copy(_.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const G=$.children;for(let j=0,rt=G.length;j<rt;j++)G[j].updateMatrixWorld(!0);q.length===2?E(_,y,b):_.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function($){h!==null&&(h.fixedFoveation=$),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=$)};let N=null;function z($,W){if(c=W.getViewerPose(l||o),f=W,c!==null){const q=c.views;d!==null&&(t.setRenderTargetFramebuffer(m,d.framebuffer),t.setRenderTarget(m));let G=!1;q.length!==_.cameras.length&&(_.cameras.length=0,G=!0);for(let j=0;j<q.length;j++){const rt=q[j];let lt=null;if(d!==null)lt=d.getViewport(rt);else{const vt=u.getViewSubImage(h,rt);lt=vt.viewport,j===0&&(t.setRenderTargetTextures(m,vt.colorTexture,h.ignoreDepthValues?void 0:vt.depthStencilTexture),t.setRenderTarget(m))}let Y=w[j];Y===void 0&&(Y=new mi,Y.layers.enable(j),Y.viewport=new jn,w[j]=Y),Y.matrix.fromArray(rt.transform.matrix),Y.projectionMatrix.fromArray(rt.projectionMatrix),Y.viewport.set(lt.x,lt.y,lt.width,lt.height),j===0&&_.matrix.copy(Y.matrix),G===!0&&_.cameras.push(Y)}}for(let q=0;q<x.length;q++){const G=v[q],j=x[q];G!==null&&j!==void 0&&j.update(G,W,l||o)}N&&N($,W),f=null}const L=new v2;L.setAnimationLoop(z),this.setAnimationLoop=function($){N=$},this.dispose=function(){}}}function hO(s,t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,v,y){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),h(g,m),m.isMeshPhysicalMaterial&&d(g,m,y)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),p(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,x,v):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Zs&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Zs&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const b=s.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*b}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let v;m.map?v=m.map:m.specularMap?v=m.specularMap:m.displacementMap?v=m.displacementMap:m.normalMap?v=m.normalMap:m.bumpMap?v=m.bumpMap:m.roughnessMap?v=m.roughnessMap:m.metalnessMap?v=m.metalnessMap:m.alphaMap?v=m.alphaMap:m.emissiveMap?v=m.emissiveMap:m.clearcoatMap?v=m.clearcoatMap:m.clearcoatNormalMap?v=m.clearcoatNormalMap:m.clearcoatRoughnessMap?v=m.clearcoatRoughnessMap:m.iridescenceMap?v=m.iridescenceMap:m.iridescenceThicknessMap?v=m.iridescenceThicknessMap:m.specularIntensityMap?v=m.specularIntensityMap:m.specularColorMap?v=m.specularColorMap:m.transmissionMap?v=m.transmissionMap:m.thicknessMap?v=m.thicknessMap:m.sheenColorMap?v=m.sheenColorMap:m.sheenRoughnessMap&&(v=m.sheenRoughnessMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix));let y;m.aoMap?y=m.aoMap:m.lightMap&&(y=m.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),g.uv2Transform.value.copy(y.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,x,v){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=v*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let y;m.map?y=m.map:m.alphaMap&&(y=m.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),g.uvTransform.value.copy(y.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===Zs&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function dO(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(35375):0;function l(v,y){const b=y.program;n.uniformBlockBinding(v,b)}function c(v,y){let b=i[v.id];b===void 0&&(p(v),b=u(v),i[v.id]=b,v.addEventListener("dispose",m));const w=y.program;n.updateUBOMapping(v,w);const _=t.render.frame;r[v.id]!==_&&(d(v),r[v.id]=_)}function u(v){const y=h();v.__bindingPointIndex=y;const b=s.createBuffer(),w=v.__size,_=v.usage;return s.bindBuffer(35345,b),s.bufferData(35345,w,_),s.bindBuffer(35345,null),s.bindBufferBase(35345,y,b),b}function h(){for(let v=0;v<a;v++)if(o.indexOf(v)===-1)return o.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(v){const y=i[v.id],b=v.uniforms,w=v.__cache;s.bindBuffer(35345,y);for(let _=0,C=b.length;_<C;_++){const S=b[_];if(f(S,_,w)===!0){const T=S.value,I=S.__offset;typeof T=="number"?(S.__data[0]=T,s.bufferSubData(35345,I,S.__data)):(S.value.isMatrix3?(S.__data[0]=S.value.elements[0],S.__data[1]=S.value.elements[1],S.__data[2]=S.value.elements[2],S.__data[3]=S.value.elements[0],S.__data[4]=S.value.elements[3],S.__data[5]=S.value.elements[4],S.__data[6]=S.value.elements[5],S.__data[7]=S.value.elements[0],S.__data[8]=S.value.elements[6],S.__data[9]=S.value.elements[7],S.__data[10]=S.value.elements[8],S.__data[11]=S.value.elements[0]):T.toArray(S.__data),s.bufferSubData(35345,I,S.__data))}}s.bindBuffer(35345,null)}function f(v,y,b){const w=v.value;if(b[y]===void 0)return typeof w=="number"?b[y]=w:b[y]=w.clone(),!0;if(typeof w=="number"){if(b[y]!==w)return b[y]=w,!0}else{const _=b[y];if(_.equals(w)===!1)return _.copy(w),!0}return!1}function p(v){const y=v.uniforms;let b=0;const w=16;let _=0;for(let C=0,S=y.length;C<S;C++){const T=y[C],I=g(T);if(T.__data=new Float32Array(I.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=b,C>0){_=b%w;const A=w-_;_!==0&&A-I.boundary<0&&(b+=w-_,T.__offset=b)}b+=I.storage}return _=b%w,_>0&&(b+=w-_),v.__size=b,v.__cache={},this}function g(v){const y=v.value,b={boundary:0,storage:0};return typeof y=="number"?(b.boundary=4,b.storage=4):y.isVector2?(b.boundary=8,b.storage=8):y.isVector3||y.isColor?(b.boundary=16,b.storage=12):y.isVector4?(b.boundary=16,b.storage=16):y.isMatrix3?(b.boundary=48,b.storage=48):y.isMatrix4?(b.boundary=64,b.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),b}function m(v){const y=v.target;y.removeEventListener("dispose",m);const b=o.indexOf(y.__bindingPointIndex);o.splice(b,1),s.deleteBuffer(i[y.id]),delete i[y.id],delete r[y.id]}function x(){for(const v in i)s.deleteBuffer(i[v]);o=[],i={},r={}}return{bind:l,update:c,dispose:x}}function fO(){const s=Sp("canvas");return s.style.display="block",s}function C2(s={}){this.isWebGLRenderer=!0;const t=s.canvas!==void 0?s.canvas:fO(),e=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;e!==null?u=e.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let h=null,d=null;const f=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ba,this.physicallyCorrectLights=!1,this.toneMapping=io,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,x=0,v=0,y=null,b=-1,w=null;const _=new jn,C=new jn;let S=null,T=t.width,I=t.height,A=1,D=null,M=null;const E=new jn(0,0,T,I),k=new jn(0,0,T,I);let N=!1;const z=new Uv;let L=!1,$=!1,W=null;const q=new Je,G=new kt,j=new H,rt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function lt(){return y===null?A:1}let Y=e;function vt(U,ht){for(let yt=0;yt<U.length;yt++){const ot=U[yt],St=t.getContext(ot,ht);if(St!==null)return St}return null}try{const U={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${zv}`),t.addEventListener("webglcontextlost",oe,!1),t.addEventListener("webglcontextrestored",ie,!1),t.addEventListener("webglcontextcreationerror",Me,!1),Y===null){const ht=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&ht.shift(),Y=vt(ht,U),Y===null)throw vt(ht)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Y.getShaderPrecisionFormat===void 0&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let xt,mt,ft,it,tt,ut,bt,Rt,Ct,Ut,Ot,Ht,se,re,V,F,ct,_t,At,Lt,Gt,O,X,Pt;function Xt(){xt=new CF(Y),mt=new vF(Y,xt,s),xt.init(mt),O=new oO(Y,xt,mt),ft=new iO(Y,xt,mt),it=new EF,tt=new GP,ut=new rO(Y,xt,ft,tt,mt,O,it),bt=new yF(g),Rt=new SF(g),Ct=new F$(Y,mt),X=new gF(Y,xt,Ct,mt),Ut=new TF(Y,Ct,it,X),Ot=new NF(Y,Ut,Ct,it),At=new AF(Y,mt,ut),F=new bF(tt),Ht=new WP(g,bt,Rt,xt,mt,X,F),se=new hO(g,tt),re=new qP,V=new JP(xt,mt),_t=new mF(g,bt,Rt,ft,Ot,u,o),ct=new sO(g,Ot,mt),Pt=new dO(Y,it,mt,ft),Lt=new xF(Y,xt,it,mt),Gt=new IF(Y,xt,it,mt),it.programs=Ht.programs,g.capabilities=mt,g.extensions=xt,g.properties=tt,g.renderLists=re,g.shadowMap=ct,g.state=ft,g.info=it}Xt();const Wt=new uO(g,Y);this.xr=Wt,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){const U=xt.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=xt.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(U){U!==void 0&&(A=U,this.setSize(T,I,!1))},this.getSize=function(U){return U.set(T,I)},this.setSize=function(U,ht,yt){if(Wt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=U,I=ht,t.width=Math.floor(U*A),t.height=Math.floor(ht*A),yt!==!1&&(t.style.width=U+"px",t.style.height=ht+"px"),this.setViewport(0,0,U,ht)},this.getDrawingBufferSize=function(U){return U.set(T*A,I*A).floor()},this.setDrawingBufferSize=function(U,ht,yt){T=U,I=ht,A=yt,t.width=Math.floor(U*yt),t.height=Math.floor(ht*yt),this.setViewport(0,0,U,ht)},this.getCurrentViewport=function(U){return U.copy(_)},this.getViewport=function(U){return U.copy(E)},this.setViewport=function(U,ht,yt,ot){U.isVector4?E.set(U.x,U.y,U.z,U.w):E.set(U,ht,yt,ot),ft.viewport(_.copy(E).multiplyScalar(A).floor())},this.getScissor=function(U){return U.copy(k)},this.setScissor=function(U,ht,yt,ot){U.isVector4?k.set(U.x,U.y,U.z,U.w):k.set(U,ht,yt,ot),ft.scissor(C.copy(k).multiplyScalar(A).floor())},this.getScissorTest=function(){return N},this.setScissorTest=function(U){ft.setScissorTest(N=U)},this.setOpaqueSort=function(U){D=U},this.setTransparentSort=function(U){M=U},this.getClearColor=function(U){return U.copy(_t.getClearColor())},this.setClearColor=function(){_t.setClearColor.apply(_t,arguments)},this.getClearAlpha=function(){return _t.getClearAlpha()},this.setClearAlpha=function(){_t.setClearAlpha.apply(_t,arguments)},this.clear=function(U=!0,ht=!0,yt=!0){let ot=0;U&&(ot|=16384),ht&&(ot|=256),yt&&(ot|=1024),Y.clear(ot)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",oe,!1),t.removeEventListener("webglcontextrestored",ie,!1),t.removeEventListener("webglcontextcreationerror",Me,!1),re.dispose(),V.dispose(),tt.dispose(),bt.dispose(),Rt.dispose(),Ot.dispose(),X.dispose(),Pt.dispose(),Ht.dispose(),Wt.dispose(),Wt.removeEventListener("sessionstart",Kt),Wt.removeEventListener("sessionend",ce),W&&(W.dispose(),W=null),Oe.stop()};function oe(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function ie(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const U=it.autoReset,ht=ct.enabled,yt=ct.autoUpdate,ot=ct.needsUpdate,St=ct.type;Xt(),it.autoReset=U,ct.enabled=ht,ct.autoUpdate=yt,ct.needsUpdate=ot,ct.type=St}function Me(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function Ne(U){const ht=U.target;ht.removeEventListener("dispose",Ne),Ge(ht)}function Ge(U){nt(U),tt.remove(U)}function nt(U){const ht=tt.get(U).programs;ht!==void 0&&(ht.forEach(function(yt){Ht.releaseProgram(yt)}),U.isShaderMaterial&&Ht.releaseShaderCache(U))}this.renderBufferDirect=function(U,ht,yt,ot,St,ue){ht===null&&(ht=rt);const ge=St.isMesh&&St.matrixWorld.determinant()<0,Se=KR(U,ht,yt,ot,St);ft.setMaterial(ot,ge);let ye=yt.index;const ze=yt.attributes.position;if(ye===null){if(ze===void 0||ze.count===0)return}else if(ye.count===0)return;let Ie=1;ot.wireframe===!0&&(ye=Ut.getWireframeAttribute(yt),Ie=2),X.setup(St,ot,Se,yt,ye);let Re,fn=Lt;ye!==null&&(Re=Ct.get(ye),fn=Gt,fn.setIndex(Re));const aa=ye!==null?ye.count:ze.count,Cl=yt.drawRange.start*Ie,Tl=yt.drawRange.count*Ie,lr=ue!==null?ue.start*Ie:0,Be=ue!==null?ue.count*Ie:1/0,Il=Math.max(Cl,lr),Tn=Math.min(aa,Cl+Tl,lr+Be)-1,li=Math.max(0,Tn-Il+1);if(li!==0){if(St.isMesh)ot.wireframe===!0?(ft.setLineWidth(ot.wireframeLinewidth*lt()),fn.setMode(1)):fn.setMode(4);else if(St.isLine){let go=ot.linewidth;go===void 0&&(go=1),ft.setLineWidth(go*lt()),St.isLineSegments?fn.setMode(1):St.isLineLoop?fn.setMode(2):fn.setMode(3)}else St.isPoints?fn.setMode(0):St.isSprite&&fn.setMode(4);if(St.isInstancedMesh)fn.renderInstances(Il,li,St.count);else if(yt.isInstancedBufferGeometry){const go=Math.min(yt.instanceCount,yt._maxInstanceCount);fn.renderInstances(Il,li,go)}else fn.render(Il,li)}},this.compile=function(U,ht){function yt(ot,St,ue){ot.transparent===!0&&ot.side===Ds?(ot.side=Zs,ot.needsUpdate=!0,ai(ot,St,ue),ot.side=Oo,ot.needsUpdate=!0,ai(ot,St,ue),ot.side=Ds):ai(ot,St,ue)}d=V.get(U),d.init(),p.push(d),U.traverseVisible(function(ot){ot.isLight&&ot.layers.test(ht.layers)&&(d.pushLight(ot),ot.castShadow&&d.pushShadow(ot))}),d.setupLights(g.physicallyCorrectLights),U.traverse(function(ot){const St=ot.material;if(St)if(Array.isArray(St))for(let ue=0;ue<St.length;ue++){const ge=St[ue];yt(ge,U,ot)}else yt(St,U,ot)}),p.pop(),d=null};let wt=null;function $t(U){wt&&wt(U)}function Kt(){Oe.stop()}function ce(){Oe.start()}const Oe=new v2;Oe.setAnimationLoop($t),typeof self<"u"&&Oe.setContext(self),this.setAnimationLoop=function(U){wt=U,Wt.setAnimationLoop(U),U===null?Oe.stop():Oe.start()},Wt.addEventListener("sessionstart",Kt),Wt.addEventListener("sessionend",ce),this.render=function(U,ht){if(ht!==void 0&&ht.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),ht.parent===null&&ht.matrixWorldAutoUpdate===!0&&ht.updateMatrixWorld(),Wt.enabled===!0&&Wt.isPresenting===!0&&(Wt.cameraAutoUpdate===!0&&Wt.updateCamera(ht),ht=Wt.getCamera()),U.isScene===!0&&U.onBeforeRender(g,U,ht,y),d=V.get(U,p.length),d.init(),p.push(d),q.multiplyMatrices(ht.projectionMatrix,ht.matrixWorldInverse),z.setFromProjectionMatrix(q),$=this.localClippingEnabled,L=F.init(this.clippingPlanes,$,ht),h=re.get(U,f.length),h.init(),f.push(h),Gn(U,ht,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(D,M),L===!0&&F.beginShadows();const yt=d.state.shadowsArray;if(ct.render(yt,U,ht),L===!0&&F.endShadows(),this.info.autoReset===!0&&this.info.reset(),_t.render(h,U),d.setupLights(g.physicallyCorrectLights),ht.isArrayCamera){const ot=ht.cameras;for(let St=0,ue=ot.length;St<ue;St++){const ge=ot[St];ls(h,U,ge,ge.viewport)}}else ls(h,U,ht);y!==null&&(ut.updateMultisampleRenderTarget(y),ut.updateRenderTargetMipmap(y)),U.isScene===!0&&U.onAfterRender(g,U,ht),X.resetDefaultState(),b=-1,w=null,p.pop(),p.length>0?d=p[p.length-1]:d=null,f.pop(),f.length>0?h=f[f.length-1]:h=null};function Gn(U,ht,yt,ot){if(U.visible===!1)return;if(U.layers.test(ht.layers)){if(U.isGroup)yt=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(ht);else if(U.isLight)d.pushLight(U),U.castShadow&&d.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||z.intersectsSprite(U)){ot&&j.setFromMatrixPosition(U.matrixWorld).applyMatrix4(q);const ge=Ot.update(U),Se=U.material;Se.visible&&h.push(U,ge,Se,yt,j.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(U.isSkinnedMesh&&U.skeleton.frame!==it.render.frame&&(U.skeleton.update(),U.skeleton.frame=it.render.frame),!U.frustumCulled||z.intersectsObject(U))){ot&&j.setFromMatrixPosition(U.matrixWorld).applyMatrix4(q);const ge=Ot.update(U),Se=U.material;if(Array.isArray(Se)){const ye=ge.groups;for(let ze=0,Ie=ye.length;ze<Ie;ze++){const Re=ye[ze],fn=Se[Re.materialIndex];fn&&fn.visible&&h.push(U,ge,fn,yt,j.z,Re)}}else Se.visible&&h.push(U,ge,Se,yt,j.z,null)}}const ue=U.children;for(let ge=0,Se=ue.length;ge<Se;ge++)Gn(ue[ge],ht,yt,ot)}function ls(U,ht,yt,ot){const St=U.opaque,ue=U.transmissive,ge=U.transparent;d.setupLightsView(yt),ue.length>0&&oa(St,ht,yt),ot&&ft.viewport(_.copy(ot)),St.length>0&&on(St,ht,yt),ue.length>0&&on(ue,ht,yt),ge.length>0&&on(ge,ht,yt),ft.buffers.depth.setTest(!0),ft.buffers.depth.setMask(!0),ft.buffers.color.setMask(!0),ft.setPolygonOffset(!1)}function oa(U,ht,yt){const ot=mt.isWebGL2;W===null&&(W=new Ua(1,1,{generateMipmaps:!0,type:xt.has("EXT_color_buffer_half_float")?eh:za,minFilter:mm,samples:ot&&r===!0?4:0})),g.getDrawingBufferSize(G),ot?W.setSize(G.x,G.y):W.setSize(Rx(G.x),Rx(G.y));const St=g.getRenderTarget();g.setRenderTarget(W),g.clear();const ue=g.toneMapping;g.toneMapping=io,on(U,ht,yt),g.toneMapping=ue,ut.updateMultisampleRenderTarget(W),ut.updateRenderTargetMipmap(W),g.setRenderTarget(St)}function on(U,ht,yt){const ot=ht.isScene===!0?ht.overrideMaterial:null;for(let St=0,ue=U.length;St<ue;St++){const ge=U[St],Se=ge.object,ye=ge.geometry,ze=ot===null?ge.material:ot,Ie=ge.group;Se.layers.test(yt.layers)&&zr(Se,ht,yt,ye,ze,Ie)}}function zr(U,ht,yt,ot,St,ue){U.onBeforeRender(g,ht,yt,ot,St,ue),U.modelViewMatrix.multiplyMatrices(yt.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),St.onBeforeRender(g,ht,yt,ot,U,ue),St.transparent===!0&&St.side===Ds?(St.side=Zs,St.needsUpdate=!0,g.renderBufferDirect(yt,ht,ot,St,U,ue),St.side=Oo,St.needsUpdate=!0,g.renderBufferDirect(yt,ht,ot,St,U,ue),St.side=Ds):g.renderBufferDirect(yt,ht,ot,St,U,ue),U.onAfterRender(g,ht,yt,ot,St,ue)}function ai(U,ht,yt){ht.isScene!==!0&&(ht=rt);const ot=tt.get(U),St=d.state.lights,ue=d.state.shadowsArray,ge=St.state.version,Se=Ht.getParameters(U,St.state,ue,ht,yt),ye=Ht.getProgramCacheKey(Se);let ze=ot.programs;ot.environment=U.isMeshStandardMaterial?ht.environment:null,ot.fog=ht.fog,ot.envMap=(U.isMeshStandardMaterial?Rt:bt).get(U.envMap||ot.environment),ze===void 0&&(U.addEventListener("dispose",Ne),ze=new Map,ot.programs=ze);let Ie=ze.get(ye);if(Ie!==void 0){if(ot.currentProgram===Ie&&ot.lightsStateVersion===ge)return c1(U,Se),Ie}else Se.uniforms=Ht.getUniforms(U),U.onBuild(yt,Se,g),U.onBeforeCompile(Se,g),Ie=Ht.acquireProgram(Se,ye),ze.set(ye,Ie),ot.uniforms=Se.uniforms;const Re=ot.uniforms;(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(Re.clippingPlanes=F.uniform),c1(U,Se),ot.needsLights=ZR(U),ot.lightsStateVersion=ge,ot.needsLights&&(Re.ambientLightColor.value=St.state.ambient,Re.lightProbe.value=St.state.probe,Re.directionalLights.value=St.state.directional,Re.directionalLightShadows.value=St.state.directionalShadow,Re.spotLights.value=St.state.spot,Re.spotLightShadows.value=St.state.spotShadow,Re.rectAreaLights.value=St.state.rectArea,Re.ltc_1.value=St.state.rectAreaLTC1,Re.ltc_2.value=St.state.rectAreaLTC2,Re.pointLights.value=St.state.point,Re.pointLightShadows.value=St.state.pointShadow,Re.hemisphereLights.value=St.state.hemi,Re.directionalShadowMap.value=St.state.directionalShadowMap,Re.directionalShadowMatrix.value=St.state.directionalShadowMatrix,Re.spotShadowMap.value=St.state.spotShadowMap,Re.spotLightMatrix.value=St.state.spotLightMatrix,Re.spotLightMap.value=St.state.spotLightMap,Re.pointShadowMap.value=St.state.pointShadowMap,Re.pointShadowMatrix.value=St.state.pointShadowMatrix);const fn=Ie.getUniforms(),aa=cp.seqWithValue(fn.seq,Re);return ot.currentProgram=Ie,ot.uniformsList=aa,Ie}function c1(U,ht){const yt=tt.get(U);yt.outputEncoding=ht.outputEncoding,yt.instancing=ht.instancing,yt.skinning=ht.skinning,yt.morphTargets=ht.morphTargets,yt.morphNormals=ht.morphNormals,yt.morphColors=ht.morphColors,yt.morphTargetsCount=ht.morphTargetsCount,yt.numClippingPlanes=ht.numClippingPlanes,yt.numIntersection=ht.numClipIntersection,yt.vertexAlphas=ht.vertexAlphas,yt.vertexTangents=ht.vertexTangents,yt.toneMapping=ht.toneMapping}function KR(U,ht,yt,ot,St){ht.isScene!==!0&&(ht=rt),ut.resetTextureUnits();const ue=ht.fog,ge=ot.isMeshStandardMaterial?ht.environment:null,Se=y===null?g.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:Ba,ye=(ot.isMeshStandardMaterial?Rt:bt).get(ot.envMap||ge),ze=ot.vertexColors===!0&&!!yt.attributes.color&&yt.attributes.color.itemSize===4,Ie=!!ot.normalMap&&!!yt.attributes.tangent,Re=!!yt.morphAttributes.position,fn=!!yt.morphAttributes.normal,aa=!!yt.morphAttributes.color,Cl=ot.toneMapped?g.toneMapping:io,Tl=yt.morphAttributes.position||yt.morphAttributes.normal||yt.morphAttributes.color,lr=Tl!==void 0?Tl.length:0,Be=tt.get(ot),Il=d.state.lights;if(L===!0&&($===!0||U!==w)){const Hs=U===w&&ot.id===b;F.setState(ot,U,Hs)}let Tn=!1;ot.version===Be.__version?(Be.needsLights&&Be.lightsStateVersion!==Il.state.version||Be.outputEncoding!==Se||St.isInstancedMesh&&Be.instancing===!1||!St.isInstancedMesh&&Be.instancing===!0||St.isSkinnedMesh&&Be.skinning===!1||!St.isSkinnedMesh&&Be.skinning===!0||Be.envMap!==ye||ot.fog===!0&&Be.fog!==ue||Be.numClippingPlanes!==void 0&&(Be.numClippingPlanes!==F.numPlanes||Be.numIntersection!==F.numIntersection)||Be.vertexAlphas!==ze||Be.vertexTangents!==Ie||Be.morphTargets!==Re||Be.morphNormals!==fn||Be.morphColors!==aa||Be.toneMapping!==Cl||mt.isWebGL2===!0&&Be.morphTargetsCount!==lr)&&(Tn=!0):(Tn=!0,Be.__version=ot.version);let li=Be.currentProgram;Tn===!0&&(li=ai(ot,ht,St));let go=!1,mu=!1,i0=!1;const gs=li.getUniforms(),la=Be.uniforms;if(ft.useProgram(li.program)&&(go=!0,mu=!0,i0=!0),ot.id!==b&&(b=ot.id,mu=!0),go||w!==U){if(gs.setValue(Y,"projectionMatrix",U.projectionMatrix),mt.logarithmicDepthBuffer&&gs.setValue(Y,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),w!==U&&(w=U,mu=!0,i0=!0),ot.isShaderMaterial||ot.isMeshPhongMaterial||ot.isMeshToonMaterial||ot.isMeshStandardMaterial||ot.envMap){const Hs=gs.map.cameraPosition;Hs!==void 0&&Hs.setValue(Y,j.setFromMatrixPosition(U.matrixWorld))}(ot.isMeshPhongMaterial||ot.isMeshToonMaterial||ot.isMeshLambertMaterial||ot.isMeshBasicMaterial||ot.isMeshStandardMaterial||ot.isShaderMaterial)&&gs.setValue(Y,"isOrthographic",U.isOrthographicCamera===!0),(ot.isMeshPhongMaterial||ot.isMeshToonMaterial||ot.isMeshLambertMaterial||ot.isMeshBasicMaterial||ot.isMeshStandardMaterial||ot.isShaderMaterial||ot.isShadowMaterial||St.isSkinnedMesh)&&gs.setValue(Y,"viewMatrix",U.matrixWorldInverse)}if(St.isSkinnedMesh){gs.setOptional(Y,St,"bindMatrix"),gs.setOptional(Y,St,"bindMatrixInverse");const Hs=St.skeleton;Hs&&(mt.floatVertexTextures?(Hs.boneTexture===null&&Hs.computeBoneTexture(),gs.setValue(Y,"boneTexture",Hs.boneTexture,ut),gs.setValue(Y,"boneTextureSize",Hs.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const r0=yt.morphAttributes;if((r0.position!==void 0||r0.normal!==void 0||r0.color!==void 0&&mt.isWebGL2===!0)&&At.update(St,yt,ot,li),(mu||Be.receiveShadow!==St.receiveShadow)&&(Be.receiveShadow=St.receiveShadow,gs.setValue(Y,"receiveShadow",St.receiveShadow)),ot.isMeshGouraudMaterial&&ot.envMap!==null&&(la.envMap.value=ye,la.flipEnvMap.value=ye.isCubeTexture&&ye.isRenderTargetTexture===!1?-1:1),mu&&(gs.setValue(Y,"toneMappingExposure",g.toneMappingExposure),Be.needsLights&&YR(la,i0),ue&&ot.fog===!0&&se.refreshFogUniforms(la,ue),se.refreshMaterialUniforms(la,ot,A,I,W),cp.upload(Y,Be.uniformsList,la,ut)),ot.isShaderMaterial&&ot.uniformsNeedUpdate===!0&&(cp.upload(Y,Be.uniformsList,la,ut),ot.uniformsNeedUpdate=!1),ot.isSpriteMaterial&&gs.setValue(Y,"center",St.center),gs.setValue(Y,"modelViewMatrix",St.modelViewMatrix),gs.setValue(Y,"normalMatrix",St.normalMatrix),gs.setValue(Y,"modelMatrix",St.matrixWorld),ot.isShaderMaterial||ot.isRawShaderMaterial){const Hs=ot.uniformsGroups;for(let o0=0,JR=Hs.length;o0<JR;o0++)if(mt.isWebGL2){const u1=Hs[o0];Pt.update(u1,li),Pt.bind(u1,li)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return li}function YR(U,ht){U.ambientLightColor.needsUpdate=ht,U.lightProbe.needsUpdate=ht,U.directionalLights.needsUpdate=ht,U.directionalLightShadows.needsUpdate=ht,U.pointLights.needsUpdate=ht,U.pointLightShadows.needsUpdate=ht,U.spotLights.needsUpdate=ht,U.spotLightShadows.needsUpdate=ht,U.rectAreaLights.needsUpdate=ht,U.hemisphereLights.needsUpdate=ht}function ZR(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(U,ht,yt){tt.get(U.texture).__webglTexture=ht,tt.get(U.depthTexture).__webglTexture=yt;const ot=tt.get(U);ot.__hasExternalTextures=!0,ot.__hasExternalTextures&&(ot.__autoAllocateDepthBuffer=yt===void 0,ot.__autoAllocateDepthBuffer||xt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ot.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(U,ht){const yt=tt.get(U);yt.__webglFramebuffer=ht,yt.__useDefaultFramebuffer=ht===void 0},this.setRenderTarget=function(U,ht=0,yt=0){y=U,x=ht,v=yt;let ot=!0,St=null,ue=!1,ge=!1;if(U){const ye=tt.get(U);ye.__useDefaultFramebuffer!==void 0?(ft.bindFramebuffer(36160,null),ot=!1):ye.__webglFramebuffer===void 0?ut.setupRenderTarget(U):ye.__hasExternalTextures&&ut.rebindTextures(U,tt.get(U.texture).__webglTexture,tt.get(U.depthTexture).__webglTexture);const ze=U.texture;(ze.isData3DTexture||ze.isDataArrayTexture||ze.isCompressedArrayTexture)&&(ge=!0);const Ie=tt.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(St=Ie[ht],ue=!0):mt.isWebGL2&&U.samples>0&&ut.useMultisampledRTT(U)===!1?St=tt.get(U).__webglMultisampledFramebuffer:St=Ie,_.copy(U.viewport),C.copy(U.scissor),S=U.scissorTest}else _.copy(E).multiplyScalar(A).floor(),C.copy(k).multiplyScalar(A).floor(),S=N;if(ft.bindFramebuffer(36160,St)&&mt.drawBuffers&&ot&&ft.drawBuffers(U,St),ft.viewport(_),ft.scissor(C),ft.setScissorTest(S),ue){const ye=tt.get(U.texture);Y.framebufferTexture2D(36160,36064,34069+ht,ye.__webglTexture,yt)}else if(ge){const ye=tt.get(U.texture),ze=ht||0;Y.framebufferTextureLayer(36160,36064,ye.__webglTexture,yt||0,ze)}b=-1},this.readRenderTargetPixels=function(U,ht,yt,ot,St,ue,ge){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Se=tt.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&ge!==void 0&&(Se=Se[ge]),Se){ft.bindFramebuffer(36160,Se);try{const ye=U.texture,ze=ye.format,Ie=ye.type;if(ze!==qi&&O.convert(ze)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Re=Ie===eh&&(xt.has("EXT_color_buffer_half_float")||mt.isWebGL2&&xt.has("EXT_color_buffer_float"));if(Ie!==za&&O.convert(Ie)!==Y.getParameter(35738)&&!(Ie===Ta&&(mt.isWebGL2||xt.has("OES_texture_float")||xt.has("WEBGL_color_buffer_float")))&&!Re){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ht>=0&&ht<=U.width-ot&&yt>=0&&yt<=U.height-St&&Y.readPixels(ht,yt,ot,St,O.convert(ze),O.convert(Ie),ue)}finally{const ye=y!==null?tt.get(y).__webglFramebuffer:null;ft.bindFramebuffer(36160,ye)}}},this.copyFramebufferToTexture=function(U,ht,yt=0){const ot=Math.pow(2,-yt),St=Math.floor(ht.image.width*ot),ue=Math.floor(ht.image.height*ot);ut.setTexture2D(ht,0),Y.copyTexSubImage2D(3553,yt,0,0,U.x,U.y,St,ue),ft.unbindTexture()},this.copyTextureToTexture=function(U,ht,yt,ot=0){const St=ht.image.width,ue=ht.image.height,ge=O.convert(yt.format),Se=O.convert(yt.type);ut.setTexture2D(yt,0),Y.pixelStorei(37440,yt.flipY),Y.pixelStorei(37441,yt.premultiplyAlpha),Y.pixelStorei(3317,yt.unpackAlignment),ht.isDataTexture?Y.texSubImage2D(3553,ot,U.x,U.y,St,ue,ge,Se,ht.image.data):ht.isCompressedTexture?Y.compressedTexSubImage2D(3553,ot,U.x,U.y,ht.mipmaps[0].width,ht.mipmaps[0].height,ge,ht.mipmaps[0].data):Y.texSubImage2D(3553,ot,U.x,U.y,ge,Se,ht.image),ot===0&&yt.generateMipmaps&&Y.generateMipmap(3553),ft.unbindTexture()},this.copyTextureToTexture3D=function(U,ht,yt,ot,St=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ue=U.max.x-U.min.x+1,ge=U.max.y-U.min.y+1,Se=U.max.z-U.min.z+1,ye=O.convert(ot.format),ze=O.convert(ot.type);let Ie;if(ot.isData3DTexture)ut.setTexture3D(ot,0),Ie=32879;else if(ot.isDataArrayTexture)ut.setTexture2DArray(ot,0),Ie=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Y.pixelStorei(37440,ot.flipY),Y.pixelStorei(37441,ot.premultiplyAlpha),Y.pixelStorei(3317,ot.unpackAlignment);const Re=Y.getParameter(3314),fn=Y.getParameter(32878),aa=Y.getParameter(3316),Cl=Y.getParameter(3315),Tl=Y.getParameter(32877),lr=yt.isCompressedTexture?yt.mipmaps[0]:yt.image;Y.pixelStorei(3314,lr.width),Y.pixelStorei(32878,lr.height),Y.pixelStorei(3316,U.min.x),Y.pixelStorei(3315,U.min.y),Y.pixelStorei(32877,U.min.z),yt.isDataTexture||yt.isData3DTexture?Y.texSubImage3D(Ie,St,ht.x,ht.y,ht.z,ue,ge,Se,ye,ze,lr.data):yt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Y.compressedTexSubImage3D(Ie,St,ht.x,ht.y,ht.z,ue,ge,Se,ye,lr.data)):Y.texSubImage3D(Ie,St,ht.x,ht.y,ht.z,ue,ge,Se,ye,ze,lr),Y.pixelStorei(3314,Re),Y.pixelStorei(32878,fn),Y.pixelStorei(3316,aa),Y.pixelStorei(3315,Cl),Y.pixelStorei(32877,Tl),St===0&&ot.generateMipmaps&&Y.generateMipmap(Ie),ft.unbindTexture()},this.initTexture=function(U){U.isCubeTexture?ut.setTextureCube(U,0):U.isData3DTexture?ut.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?ut.setTexture2DArray(U,0):ut.setTexture2D(U,0),ft.unbindTexture()},this.resetState=function(){x=0,v=0,y=null,ft.reset(),X.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class pO extends C2{}pO.prototype.isWebGL1Renderer=!0;class mO extends Xn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class T2 extends jo{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ue(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const M_=new H,k_=new H,A_=new Je,U0=new xm,Cf=new Th;class gO extends Xn{constructor(t=new os,e=new T2){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)M_.fromBufferAttribute(e,i-1),k_.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=M_.distanceTo(k_);t.setAttribute("lineDistance",new dn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Cf.copy(n.boundingSphere),Cf.applyMatrix4(i),Cf.radius+=r,t.ray.intersectsSphere(Cf)===!1)return;A_.copy(i).invert(),U0.copy(t.ray).applyMatrix4(A_);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new H,u=new H,h=new H,d=new H,f=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(p!==null){const x=Math.max(0,o.start),v=Math.min(p.count,o.start+o.count);for(let y=x,b=v-1;y<b;y+=f){const w=p.getX(y),_=p.getX(y+1);if(c.fromBufferAttribute(m,w),u.fromBufferAttribute(m,_),U0.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const S=t.ray.origin.distanceTo(d);S<t.near||S>t.far||e.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),v=Math.min(m.count,o.start+o.count);for(let y=x,b=v-1;y<b;y+=f){if(c.fromBufferAttribute(m,y),u.fromBufferAttribute(m,y+1),U0.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const _=t.ray.origin.distanceTo(d);_<t.near||_>t.far||e.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class Or{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=e||(o.isVector2?new kt:new H);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new H,i=[],r=[],o=[],a=new H,l=new Je;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new H)}r[0]=new H,o[0]=new H;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ns(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(ns(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(f=-f);for(let p=1;p<=t;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Wv extends Or{constructor(t=0,e=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new kt,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class xO extends Wv{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Gv(){let s=0,t=0,e=0,n=0;function i(r,o,a,l){s=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let d=(o-r)/c-(a-r)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+t*r+e*o+n*a}}}const Tf=new H,V0=new Gv,W0=new Gv,G0=new Gv;class $x extends Or{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new H){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(Tf.subVectors(i[0],i[1]).add(i[0]),c=Tf);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(Tf.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=Tf),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),V0.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,g,m),W0.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,g,m),G0.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,g,m)}else this.curveType==="catmullrom"&&(V0.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),W0.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),G0.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(V0.calc(l),W0.calc(l),G0.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new H().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function N_(s,t,e,n,i){const r=(n-t)*.5,o=(i-e)*.5,a=s*s,l=s*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*s+e}function vO(s,t){const e=1-s;return e*e*t}function bO(s,t){return 2*(1-s)*s*t}function yO(s,t){return s*s*t}function Gu(s,t,e,n){return vO(s,t)+bO(s,e)+yO(s,n)}function wO(s,t){const e=1-s;return e*e*e*t}function _O(s,t){const e=1-s;return 3*e*e*s*t}function SO(s,t){return 3*(1-s)*s*s*t}function CO(s,t){return s*s*s*t}function Hu(s,t,e,n,i){return wO(s,t)+_O(s,e)+SO(s,n)+CO(s,i)}class I2 extends Or{constructor(t=new kt,e=new kt,n=new kt,i=new kt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new kt){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Hu(t,i.x,r.x,o.x,a.x),Hu(t,i.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class TO extends Or{constructor(t=new H,e=new H,n=new H,i=new H){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new H){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Hu(t,i.x,r.x,o.x,a.x),Hu(t,i.y,r.y,o.y,a.y),Hu(t,i.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Hv extends Or{constructor(t=new kt,e=new kt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new kt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new kt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class IO extends Or{constructor(t=new H,e=new H){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new H){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class E2 extends Or{constructor(t=new kt,e=new kt,n=new kt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new kt){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Gu(t,i.x,r.x,o.x),Gu(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class EO extends Or{constructor(t=new H,e=new H,n=new H){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new H){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Gu(t,i.x,r.x,o.x),Gu(t,i.y,r.y,o.y),Gu(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class M2 extends Or{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new kt){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(N_(a,l.x,c.x,u.x,h.x),N_(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new kt().fromArray(i))}return this}}var k2=Object.freeze({__proto__:null,ArcCurve:xO,CatmullRomCurve3:$x,CubicBezierCurve:I2,CubicBezierCurve3:TO,EllipseCurve:Wv,LineCurve:Hv,LineCurve3:IO,QuadraticBezierCurve:E2,QuadraticBezierCurve3:EO,SplineCurve:M2});class MO extends Or{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Hv(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new k2[i.type]().fromJSON(i))}return this}}class Lx extends MO{constructor(t){super(),this.type="Path",this.currentPoint=new kt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Hv(this.currentPoint.clone(),new kt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new E2(this.currentPoint.clone(),new kt(t,e),new kt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,o){const a=new I2(this.currentPoint.clone(),new kt(t,e),new kt(n,i),new kt(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new M2(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,r,o),this}absarc(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this}ellipse(t,e,n,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,r,o,a,l),this}absellipse(t,e,n,i,r,o,a,l){const c=new Wv(t,e,n,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class qv extends os{constructor(t=1,e=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new H,u=new kt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=e;h++,d+=3){const f=n+h/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[d]/t+1)/2,u.y=(o[d+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new dn(o,3)),this.setAttribute("normal",new dn(a,3)),this.setAttribute("uv",new dn(l,2))}static fromJSON(t){return new qv(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ea extends os{constructor(t=1,e=1,n=1,i=8,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const g=[],m=n/2;let x=0;v(),o===!1&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new dn(h,3)),this.setAttribute("normal",new dn(d,3)),this.setAttribute("uv",new dn(f,2));function v(){const b=new H,w=new H;let _=0;const C=(e-t)/n;for(let S=0;S<=r;S++){const T=[],I=S/r,A=I*(e-t)+t;for(let D=0;D<=i;D++){const M=D/i,E=M*l+a,k=Math.sin(E),N=Math.cos(E);w.x=A*k,w.y=-I*n+m,w.z=A*N,h.push(w.x,w.y,w.z),b.set(k,C,N).normalize(),d.push(b.x,b.y,b.z),f.push(M,1-I),T.push(p++)}g.push(T)}for(let S=0;S<i;S++)for(let T=0;T<r;T++){const I=g[T][S],A=g[T+1][S],D=g[T+1][S+1],M=g[T][S+1];u.push(I,A,M),u.push(A,D,M),_+=6}c.addGroup(x,_,0),x+=_}function y(b){const w=p,_=new kt,C=new H;let S=0;const T=b===!0?t:e,I=b===!0?1:-1;for(let D=1;D<=i;D++)h.push(0,m*I,0),d.push(0,I,0),f.push(.5,.5),p++;const A=p;for(let D=0;D<=i;D++){const E=D/i*l+a,k=Math.cos(E),N=Math.sin(E);C.x=T*N,C.y=m*I,C.z=T*k,h.push(C.x,C.y,C.z),d.push(0,I,0),_.x=k*.5+.5,_.y=N*.5*I+.5,f.push(_.x,_.y),p++}for(let D=0;D<i;D++){const M=w+D,E=A+D;b===!0?u.push(E,E+1,M):u.push(E+1,E,M),S+=3}c.addGroup(x,S,b===!0?1:2),x+=S}}static fromJSON(t){return new Ea(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Cp extends Lx{constructor(t){super(t),this.uuid=Kc(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Lx().fromJSON(i))}return this}}const kO={triangulate:function(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=A2(s,0,i,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,d,f;if(n&&(r=$O(s,t,r,e)),s.length>80*e){a=c=s[0],l=u=s[1];for(let p=e;p<i;p+=e)h=s[p],d=s[p+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=f!==0?32767/f:0}return nh(r,o,e,a,l,f,0),o}};function A2(s,t,e,n,i){let r,o;if(i===HO(s,t,e,n)>0)for(r=t;r<e;r+=n)o=R_(r,s[r],s[r+1],o);else for(r=e-n;r>=t;r-=n)o=R_(r,s[r],s[r+1],o);return o&&ym(o,o.next)&&(ih(o),o=o.next),o}function Ga(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(ym(e,e.next)||hn(e.prev,e,e.next)===0)){if(ih(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function nh(s,t,e,n,i,r,o){if(!s)return;!o&&r&&zO(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?NO(s,n,i,r):AO(s)){t.push(l.i/e|0),t.push(s.i/e|0),t.push(c.i/e|0),ih(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=RO(Ga(s),t,e),nh(s,t,e,n,i,r,2)):o===2&&DO(s,t,e,n,i,r):nh(Ga(s),t,e,n,i,r,1);break}}}function AO(s){const t=s.prev,e=s,n=s.next;if(hn(t,e,n)>=0)return!1;const i=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<r?i<o?i:o:r<o?r:o,h=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==t;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&ic(i,a,r,l,o,c,p.x,p.y)&&hn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function NO(s,t,e,n){const i=s.prev,r=s,o=s.next;if(hn(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,u=i.y,h=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=u<h?u<d?u:d:h<d?h:d,g=a>l?a>c?a:c:l>c?l:c,m=u>h?u>d?u:d:h>d?h:d,x=Fx(f,p,t,e,n),v=Fx(g,m,t,e,n);let y=s.prevZ,b=s.nextZ;for(;y&&y.z>=x&&b&&b.z<=v;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&ic(a,u,l,h,c,d,y.x,y.y)&&hn(y.prev,y,y.next)>=0||(y=y.prevZ,b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&ic(a,u,l,h,c,d,b.x,b.y)&&hn(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;y&&y.z>=x;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&ic(a,u,l,h,c,d,y.x,y.y)&&hn(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=v;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&ic(a,u,l,h,c,d,b.x,b.y)&&hn(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function RO(s,t,e){let n=s;do{const i=n.prev,r=n.next.next;!ym(i,r)&&N2(i,n,n.next,r)&&sh(i,r)&&sh(r,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),ih(n),ih(n.next),n=s=r),n=n.next}while(n!==s);return Ga(n)}function DO(s,t,e,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&VO(o,a)){let l=R2(o,a);o=Ga(o,o.next),l=Ga(l,l.next),nh(o,t,e,n,i,r,0),nh(l,t,e,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function $O(s,t,e,n){const i=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:s.length,c=A2(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(UO(c));for(i.sort(LO),r=0;r<i.length;r++)e=FO(i[r],e);return e}function LO(s,t){return s.x-t.x}function FO(s,t){const e=PO(s,t);if(!e)return t;const n=R2(e,s);return Ga(n,n.next),Ga(e,e.next)}function PO(s,t){let e=t,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=r&&d>n&&(n=d,i=e.x<e.next.x?e:e.next,d===r))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,h;e=i;do r>=e.x&&e.x>=l&&r!==e.x&&ic(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(h=Math.abs(o-e.y)/(r-e.x),sh(e,s)&&(h<u||h===u&&(e.x>i.x||e.x===i.x&&OO(i,e)))&&(i=e,u=h)),e=e.next;while(e!==a);return i}function OO(s,t){return hn(s.prev,s,t.prev)<0&&hn(t.next,s,s.next)<0}function zO(s,t,e,n){let i=s;do i.z===0&&(i.z=Fx(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,BO(i)}function BO(s){let t,e,n,i,r,o,a,l,c=1;do{for(e=s,s=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;e=n}r.nextZ=null,c*=2}while(o>1);return s}function Fx(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function UO(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function ic(s,t,e,n,i,r,o,a){return(i-o)*(t-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(i-o)*(n-a)}function VO(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!WO(s,t)&&(sh(s,t)&&sh(t,s)&&GO(s,t)&&(hn(s.prev,s,t.prev)||hn(s,t.prev,t))||ym(s,t)&&hn(s.prev,s,s.next)>0&&hn(t.prev,t,t.next)>0)}function hn(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function ym(s,t){return s.x===t.x&&s.y===t.y}function N2(s,t,e,n){const i=Ef(hn(s,t,e)),r=Ef(hn(s,t,n)),o=Ef(hn(e,n,s)),a=Ef(hn(e,n,t));return!!(i!==r&&o!==a||i===0&&If(s,e,t)||r===0&&If(s,n,t)||o===0&&If(e,s,n)||a===0&&If(e,t,n))}function If(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Ef(s){return s>0?1:s<0?-1:0}function WO(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&N2(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function sh(s,t){return hn(s.prev,s,s.next)<0?hn(s,t,s.next)>=0&&hn(s,s.prev,t)>=0:hn(s,t,s.prev)<0||hn(s,s.next,t)<0}function GO(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function R2(s,t){const e=new Px(s.i,s.x,s.y),n=new Px(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function R_(s,t,e,n){const i=new Px(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ih(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Px(s,t,e){this.i=s,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function HO(s,t,e,n){let i=0;for(let r=t,o=e-n;r<e;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class No{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return No.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];D_(t),$_(n,t);let o=t.length;e.forEach(D_);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,$_(n,e[l]);const a=kO.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function D_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function $_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class jv extends os{constructor(t=new Cp([new kt(.5,.5),new kt(-.5,.5),new kt(-.5,-.5),new kt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new dn(i,3)),this.setAttribute("uv",new dn(r,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1,h=e.depth!==void 0?e.depth:1;let d=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.bevelThickness!==void 0?e.bevelThickness:.2,p=e.bevelSize!==void 0?e.bevelSize:f-.1,g=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const x=e.extrudePath,v=e.UVGenerator!==void 0?e.UVGenerator:qO;let y,b=!1,w,_,C,S;x&&(y=x.getSpacedPoints(u),b=!0,d=!1,w=x.computeFrenetFrames(u,!1),_=new H,C=new H,S=new H),d||(m=0,f=0,p=0,g=0);const T=a.extractPoints(c);let I=T.shape;const A=T.holes;if(!No.isClockWise(I)){I=I.reverse();for(let tt=0,ut=A.length;tt<ut;tt++){const bt=A[tt];No.isClockWise(bt)&&(A[tt]=bt.reverse())}}const M=No.triangulateShape(I,A),E=I;for(let tt=0,ut=A.length;tt<ut;tt++){const bt=A[tt];I=I.concat(bt)}function k(tt,ut,bt){return ut||console.error("THREE.ExtrudeGeometry: vec does not exist"),ut.clone().multiplyScalar(bt).add(tt)}const N=I.length,z=M.length;function L(tt,ut,bt){let Rt,Ct,Ut;const Ot=tt.x-ut.x,Ht=tt.y-ut.y,se=bt.x-tt.x,re=bt.y-tt.y,V=Ot*Ot+Ht*Ht,F=Ot*re-Ht*se;if(Math.abs(F)>Number.EPSILON){const ct=Math.sqrt(V),_t=Math.sqrt(se*se+re*re),At=ut.x-Ht/ct,Lt=ut.y+Ot/ct,Gt=bt.x-re/_t,O=bt.y+se/_t,X=((Gt-At)*re-(O-Lt)*se)/(Ot*re-Ht*se);Rt=At+Ot*X-tt.x,Ct=Lt+Ht*X-tt.y;const Pt=Rt*Rt+Ct*Ct;if(Pt<=2)return new kt(Rt,Ct);Ut=Math.sqrt(Pt/2)}else{let ct=!1;Ot>Number.EPSILON?se>Number.EPSILON&&(ct=!0):Ot<-Number.EPSILON?se<-Number.EPSILON&&(ct=!0):Math.sign(Ht)===Math.sign(re)&&(ct=!0),ct?(Rt=-Ht,Ct=Ot,Ut=Math.sqrt(V)):(Rt=Ot,Ct=Ht,Ut=Math.sqrt(V/2))}return new kt(Rt/Ut,Ct/Ut)}const $=[];for(let tt=0,ut=E.length,bt=ut-1,Rt=tt+1;tt<ut;tt++,bt++,Rt++)bt===ut&&(bt=0),Rt===ut&&(Rt=0),$[tt]=L(E[tt],E[bt],E[Rt]);const W=[];let q,G=$.concat();for(let tt=0,ut=A.length;tt<ut;tt++){const bt=A[tt];q=[];for(let Rt=0,Ct=bt.length,Ut=Ct-1,Ot=Rt+1;Rt<Ct;Rt++,Ut++,Ot++)Ut===Ct&&(Ut=0),Ot===Ct&&(Ot=0),q[Rt]=L(bt[Rt],bt[Ut],bt[Ot]);W.push(q),G=G.concat(q)}for(let tt=0;tt<m;tt++){const ut=tt/m,bt=f*Math.cos(ut*Math.PI/2),Rt=p*Math.sin(ut*Math.PI/2)+g;for(let Ct=0,Ut=E.length;Ct<Ut;Ct++){const Ot=k(E[Ct],$[Ct],Rt);vt(Ot.x,Ot.y,-bt)}for(let Ct=0,Ut=A.length;Ct<Ut;Ct++){const Ot=A[Ct];q=W[Ct];for(let Ht=0,se=Ot.length;Ht<se;Ht++){const re=k(Ot[Ht],q[Ht],Rt);vt(re.x,re.y,-bt)}}}const j=p+g;for(let tt=0;tt<N;tt++){const ut=d?k(I[tt],G[tt],j):I[tt];b?(C.copy(w.normals[0]).multiplyScalar(ut.x),_.copy(w.binormals[0]).multiplyScalar(ut.y),S.copy(y[0]).add(C).add(_),vt(S.x,S.y,S.z)):vt(ut.x,ut.y,0)}for(let tt=1;tt<=u;tt++)for(let ut=0;ut<N;ut++){const bt=d?k(I[ut],G[ut],j):I[ut];b?(C.copy(w.normals[tt]).multiplyScalar(bt.x),_.copy(w.binormals[tt]).multiplyScalar(bt.y),S.copy(y[tt]).add(C).add(_),vt(S.x,S.y,S.z)):vt(bt.x,bt.y,h/u*tt)}for(let tt=m-1;tt>=0;tt--){const ut=tt/m,bt=f*Math.cos(ut*Math.PI/2),Rt=p*Math.sin(ut*Math.PI/2)+g;for(let Ct=0,Ut=E.length;Ct<Ut;Ct++){const Ot=k(E[Ct],$[Ct],Rt);vt(Ot.x,Ot.y,h+bt)}for(let Ct=0,Ut=A.length;Ct<Ut;Ct++){const Ot=A[Ct];q=W[Ct];for(let Ht=0,se=Ot.length;Ht<se;Ht++){const re=k(Ot[Ht],q[Ht],Rt);b?vt(re.x,re.y+y[u-1].y,y[u-1].x+bt):vt(re.x,re.y,h+bt)}}}rt(),lt();function rt(){const tt=i.length/3;if(d){let ut=0,bt=N*ut;for(let Rt=0;Rt<z;Rt++){const Ct=M[Rt];xt(Ct[2]+bt,Ct[1]+bt,Ct[0]+bt)}ut=u+m*2,bt=N*ut;for(let Rt=0;Rt<z;Rt++){const Ct=M[Rt];xt(Ct[0]+bt,Ct[1]+bt,Ct[2]+bt)}}else{for(let ut=0;ut<z;ut++){const bt=M[ut];xt(bt[2],bt[1],bt[0])}for(let ut=0;ut<z;ut++){const bt=M[ut];xt(bt[0]+N*u,bt[1]+N*u,bt[2]+N*u)}}n.addGroup(tt,i.length/3-tt,0)}function lt(){const tt=i.length/3;let ut=0;Y(E,ut),ut+=E.length;for(let bt=0,Rt=A.length;bt<Rt;bt++){const Ct=A[bt];Y(Ct,ut),ut+=Ct.length}n.addGroup(tt,i.length/3-tt,1)}function Y(tt,ut){let bt=tt.length;for(;--bt>=0;){const Rt=bt;let Ct=bt-1;Ct<0&&(Ct=tt.length-1);for(let Ut=0,Ot=u+m*2;Ut<Ot;Ut++){const Ht=N*Ut,se=N*(Ut+1),re=ut+Rt+Ht,V=ut+Ct+Ht,F=ut+Ct+se,ct=ut+Rt+se;mt(re,V,F,ct)}}}function vt(tt,ut,bt){l.push(tt),l.push(ut),l.push(bt)}function xt(tt,ut,bt){ft(tt),ft(ut),ft(bt);const Rt=i.length/3,Ct=v.generateTopUV(n,i,Rt-3,Rt-2,Rt-1);it(Ct[0]),it(Ct[1]),it(Ct[2])}function mt(tt,ut,bt,Rt){ft(tt),ft(ut),ft(Rt),ft(ut),ft(bt),ft(Rt);const Ct=i.length/3,Ut=v.generateSideWallUV(n,i,Ct-6,Ct-3,Ct-2,Ct-1);it(Ut[0]),it(Ut[1]),it(Ut[3]),it(Ut[1]),it(Ut[2]),it(Ut[3])}function ft(tt){i.push(l[tt*3+0]),i.push(l[tt*3+1]),i.push(l[tt*3+2])}function it(tt){r.push(tt.x),r.push(tt.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return jO(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,o=t.shapes.length;r<o;r++){const a=e[t.shapes[r]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new k2[i.type]().fromJSON(i)),new jv(n,t.options)}}const qO={generateTopUV:function(s,t,e,n,i){const r=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new kt(r,o),new kt(a,l),new kt(c,u)]},generateSideWallUV:function(s,t,e,n,i,r){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],h=t[n*3+2],d=t[i*3],f=t[i*3+1],p=t[i*3+2],g=t[r*3],m=t[r*3+1],x=t[r*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new kt(o,1-l),new kt(c,1-h),new kt(d,1-p),new kt(g,1-x)]:[new kt(a,1-l),new kt(u,1-h),new kt(f,1-p),new kt(m,1-x)]}};function jO(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];e.shapes.push(r.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Xv extends os{constructor(t=.5,e=1,n=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=t;const d=(e-t)/i,f=new H,p=new kt;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const x=r+m/n*o;f.x=h*Math.cos(x),f.y=h*Math.sin(x),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,u.push(p.x,p.y)}h+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let x=0;x<n;x++){const v=x+m,y=v,b=v+n+1,w=v+n+2,_=v+1;a.push(y,b,_),a.push(b,w,_)}}this.setIndex(a),this.setAttribute("position",new dn(l,3)),this.setAttribute("normal",new dn(c,3)),this.setAttribute("uv",new dn(u,2))}static fromJSON(t){return new Xv(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Kv extends os{constructor(t=new Cp([new kt(0,.5),new kt(-.5,-.5),new kt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new dn(i,3)),this.setAttribute("normal",new dn(r,3)),this.setAttribute("uv",new dn(o,2));function c(u){const h=i.length/3,d=u.extractPoints(e);let f=d.shape;const p=d.holes;No.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,x=p.length;m<x;m++){const v=p[m];No.isClockWise(v)===!0&&(p[m]=v.reverse())}const g=No.triangulateShape(f,p);for(let m=0,x=p.length;m<x;m++){const v=p[m];f=f.concat(v)}for(let m=0,x=f.length;m<x;m++){const v=f[m];i.push(v.x,v.y,0),r.push(0,0,1),o.push(v.x,v.y)}for(let m=0,x=g.length;m<x;m++){const v=g[m],y=v[0]+h,b=v[1]+h,w=v[2]+h;n.push(y,b,w),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return XO(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const o=e[t.shapes[i]];n.push(o)}return new Kv(n,t.curveSegments)}}function XO(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class ul extends jo{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ue(16777215),this.specular=new Ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gm,this.normalScale=new kt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=fm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class D2 extends jo{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gm,this.normalScale=new kt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class KO extends jo{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gm,this.normalScale=new kt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=fm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class $2 extends Xn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Ue(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const H0=new Je,L_=new H,F_=new H;class YO{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new kt(512,512),this.map=null,this.mapPass=null,this.matrix=new Je,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Uv,this._frameExtents=new kt(1,1),this._viewportCount=1,this._viewports=[new jn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;L_.setFromMatrixPosition(t.matrixWorld),e.position.copy(L_),F_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(F_),e.updateMatrixWorld(),H0.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(H0),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(H0)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class ZO extends YO{constructor(){super(new b2(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class JO extends $2{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Xn.DefaultUp),this.updateMatrix(),this.target=new Xn,this.shadow=new ZO}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class QO extends $2{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class tz{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=P_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=P_();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function P_(){return(typeof performance>"u"?Date:performance).now()}class L2{constructor(t,e,n=0,i=1/0){this.ray=new xm(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Bv,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Ox(t,this,n,e),n.sort(O_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Ox(t[i],this,n,e);return n.sort(O_),n}}function O_(s,t){return s.distance-t.distance}function Ox(s,t,e,n){if(s.layers.test(t.layers)&&s.raycast(t,e),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)Ox(i[r],t,e,!0)}}class z_{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ns(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const B_=new H,Mf=new H;class ro{constructor(t=new H,e=new H){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){B_.subVectors(t,this.start),Mf.subVectors(this.end,this.start);const n=Mf.dot(Mf);let r=Mf.dot(B_)/n;return e&&(r=ns(r,0,1)),r}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const U_=new H;let kf,q0;class ez extends Xn{constructor(t=new H(0,0,1),e=new H(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",kf===void 0&&(kf=new os,kf.setAttribute("position",new dn([0,0,0,0,1,0],3)),q0=new Ea(0,.5,1,5,1),q0.translate(0,-.5,0)),this.position.copy(e),this.line=new gO(kf,new T2({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nn(q0,new ll({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{U_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(U_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:zv}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=zv);class ji{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new R);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new R);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new ji);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],u=n[4],h=n[5],d=n[6],f=n[7],p=n[8],g=i[0],m=i[1],x=i[2],v=i[3],y=i[4],b=i[5],w=i[6],_=i[7],C=i[8];return r[0]=o*g+a*v+l*w,r[1]=o*m+a*y+l*_,r[2]=o*x+a*b+l*C,r[3]=c*g+u*v+h*w,r[4]=c*m+u*y+h*_,r[5]=c*x+u*b+h*C,r[6]=d*g+f*v+p*w,r[7]=d*m+f*y+p*_,r[8]=d*x+f*b+p*C,e}scale(t,e){e===void 0&&(e=new ji);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new R);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=t.x,r[3+4*1]=t.y,r[3+4*2]=t.z;let l=3;const c=l;let u;const h=4;let d;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){u=h;do d=h-u,r[d+i*o]+=r[d+i*a];while(--u);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const f=r[o+i*a]/r[o+i*o];u=h;do d=h-u,r[d+i*a]=d<=o?0:r[d+i*a]-r[d+i*o]*f;while(--u)}}while(--l);if(e.z=r[2*i+3]/r[2*i+2],e.y=(r[1*i+3]-r[1*i+2]*e.z)/r[1*i+1],e.x=(r[0*i+3]-r[0*i+2]*e.z-r[0*i+1]*e.y)/r[0*i+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new ji);const e=3,n=6,i=nz;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const u=n;let h;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=u;do h=u-c,i[h+n*r]+=i[h+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const d=i[r+n*o]/i[r+n*r];c=u;do h=u-c,i[h+n*o]=h<=r?0:i[h+n*o]-i[h+n*r]*d;while(--c)}}while(--a);r=2;do{o=r-1;do{const d=i[r+n*o]/i[r+n*r];c=n;do h=n-c,i[h+n*o]=i[h+n*o]-i[h+n*r]*d;while(--c)}while(o--)}while(--r);r=2;do{const d=1/i[r+n*r];c=n;do h=n-c,i[h+n*r]=i[h+n*r]*d;while(--c)}while(r--);r=2;do{o=2;do{if(h=i[e+o+n*r],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(r,o,h)}while(o--)}while(r--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,u=e*a,h=e*l,d=n*a,f=n*l,p=i*l,g=r*o,m=r*a,x=r*l,v=this.elements;return v[3*0+0]=1-(d+p),v[3*0+1]=u-x,v[3*0+2]=h+m,v[3*1+0]=u+x,v[3*1+1]=1-(c+p),v[3*1+2]=f-g,v[3*2+0]=h-m,v[3*2+1]=f+g,v[3*2+2]=1-(c+d),this}transpose(t){t===void 0&&(t=new ji);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const nz=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class R{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new R);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new R(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new R(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new ji([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new R);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new R);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new R),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new R),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new R),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=sz,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=iz;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(V_),V_.almostEquals(t,e)}clone(){return new R(this.x,this.y,this.z)}}R.ZERO=new R(0,0,0);R.UNIT_X=new R(1,0,0);R.UNIT_Y=new R(0,1,0);R.UNIT_Z=new R(0,0,1);const sz=new R,iz=new R,V_=new R;class ii{constructor(t){t===void 0&&(t={}),this.lowerBound=new R,this.upperBound=new R,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,W_),c=W_),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new ii().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,u=this.upperBound;t.copy(c),e.set(u.x,c.y,c.z),n.set(u.x,u.y,c.z),i.set(c.x,u.y,u.z),r.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(t,e){const n=G_,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=G_,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,u=(this.upperBound.y-n.y)*r,h=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,f=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(h,d)),p=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(h,d));return!(p<0||f>p)}}const W_=new R,G_=[new R,new R,new R,new R,new R,new R,new R,new R];class H_{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class F2{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,t)}return this}}class mn{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new R),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=rz,i=oz;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new mn);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,u=t.w;return e.x=n*u+o*a+i*c-r*l,e.y=i*u+o*l+r*a-n*c,e.z=r*u+o*c+n*l-i*a,e.w=o*u-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new mn);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new mn),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new R);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*n+a*r-l*i,h=c*i+l*n-o*r,d=c*r+o*i-a*n,f=-o*n-a*i-l*r;return e.x=u*c+f*-o+h*-l-d*-a,e.y=h*c+f*-a+d*-o-u*-l,e.z=d*c+f*-l+u*-a-h*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(e){case"YZX":const u=o*a+l*c;if(u>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),u<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const h=o*o,d=a*a,f=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*f),i=Math.asin(2*u),r=Math.atan2(2*o*c-2*a*l,1-2*h-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),u=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="YXZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="ZXY"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="ZYX"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="YZX"?(this.x=l*o*a+r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a-l*c*u):i==="XZY"&&(this.x=l*o*a-r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a+l*c*u),this}clone(){return new mn(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new mn);const i=this.x,r=this.y,o=this.z,a=this.w;let l=t.x,c=t.y,u=t.z,h=t.w,d,f,p,g,m;return f=i*l+r*c+o*u+a*h,f<0&&(f=-f,l=-l,c=-c,u=-u,h=-h),1-f>1e-6?(d=Math.acos(f),p=Math.sin(d),g=Math.sin((1-e)*d)/p,m=Math.sin(e*d)/p):(g=1-e,m=e),n.x=g*i+m*l,n.y=g*r+m*c,n.z=g*o+m*u,n.w=g*a+m*h,n}integrate(t,e,n,i){i===void 0&&(i=new mn);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,u=this.z,h=this.w,d=e*.5;return i.x+=d*(r*h+o*u-a*c),i.y+=d*(o*h+a*l-r*u),i.z+=d*(a*h+r*c-o*l),i.w+=d*(-r*l-o*c-a*u),i}}const rz=new R,oz=new R,az={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Yt{constructor(t){t===void 0&&(t={}),this.id=Yt.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Yt.idCounter=0;Yt.types=az;class Pe{constructor(t){t===void 0&&(t={}),this.position=new R,this.quaternion=new mn,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return Pe.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return Pe.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new R),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new R),n.vsub(t,i),e.conjugate(q_),q_.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new R),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new R),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new R),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const q_=new mn;class qu extends Yt{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:Yt.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new R;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let u=!1;for(let h=0;h!==n.length;h++)if(n[h].almostEquals(i)||n[h].almostEquals(i)){u=!0;break}u||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new R;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[t].length;i++)console.warn(`.vertices[${this.faces[t][i]}] = Vec3(${this.vertices[this.faces[t][i]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];qu.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new R,o=new R;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const u=new R;let h=-1,d=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),r.vmult(u,u);const g=u.dot(o);g>d&&(d=g,h=p)}const f=[];for(let p=0;p<n.faces[h].length;p++){const g=n.vertices[n.faces[h][p]],m=new R;m.copy(g),r.vmult(m,m),i.vadd(m,m),f.push(m)}h>=0&&this.clipFaceAgainstHull(o,t,e,f,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new R,u=new R,h=new R,d=new R,f=new R,p=new R;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let x=0;x!==m.uniqueAxes.length;x++){n.vmult(m.uniqueAxes[x],c);const v=m.testSepAxis(c,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(c))}else{const x=a?a.length:m.faces.length;for(let v=0;v<x;v++){const y=a?a[v]:v;c.copy(m.faceNormals[y]),n.vmult(c,c);const b=m.testSepAxis(c,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(c))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){r.vmult(t.uniqueAxes[x],u);const v=m.testSepAxis(u,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(u))}else{const x=l?l.length:t.faces.length;for(let v=0;v<x;v++){const y=l?l[v]:v;u.copy(t.faceNormals[y]),r.vmult(u,u);const b=m.testSepAxis(u,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(u))}}for(let x=0;x!==m.uniqueEdges.length;x++){n.vmult(m.uniqueEdges[x],d);for(let v=0;v!==t.uniqueEdges.length;v++)if(r.vmult(t.uniqueEdges[v],f),d.cross(f,p),!p.almostZero()){p.normalize();const y=m.testSepAxis(p,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(p))}}return i.vsub(e,h),h.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){const a=this;qu.project(a,t,n,i,j0),qu.project(e,t,r,o,X0);const l=j0[0],c=j0[1],u=X0[0],h=X0[1];if(l<h||u<c)return!1;const d=l-h,f=u-c;return d<f?d:f}calculateLocalInertia(t,e){const n=new R,i=new R;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new R,c=new R,u=new R,h=new R,d=new R,f=new R,p=new R,g=new R,m=this,x=[],v=i,y=x;let b=-1,w=Number.MAX_VALUE;for(let I=0;I<m.faces.length;I++){l.copy(m.faceNormals[I]),n.vmult(l,l);const A=l.dot(t);A<w&&(w=A,b=I)}if(b<0)return;const _=m.faces[b];_.connectedFaces=[];for(let I=0;I<m.faces.length;I++)for(let A=0;A<m.faces[I].length;A++)_.indexOf(m.faces[I][A])!==-1&&I!==b&&_.connectedFaces.indexOf(I)===-1&&_.connectedFaces.push(I);const C=_.length;for(let I=0;I<C;I++){const A=m.vertices[_[I]],D=m.vertices[_[(I+1)%C]];A.vsub(D,c),u.copy(c),n.vmult(u,u),e.vadd(u,u),h.copy(this.faceNormals[b]),n.vmult(h,h),e.vadd(h,h),u.cross(h,d),d.negate(d),f.copy(A),n.vmult(f,f),e.vadd(f,f);const M=_.connectedFaces[I];p.copy(this.faceNormals[M]);const E=this.getPlaneConstantOfFace(M);g.copy(p),n.vmult(g,g);const k=E-g.dot(e);for(this.clipFaceAgainstPlane(v,y,g,k);v.length;)v.shift();for(;y.length;)v.push(y.shift())}p.copy(this.faceNormals[b]);const S=this.getPlaneConstantOfFace(b);g.copy(p),n.vmult(g,g);const T=S-g.dot(e);for(let I=0;I<v.length;I++){let A=g.dot(v[I])+T;if(A<=r&&(console.log(`clamped: depth=${A} to minDist=${r}`),A=r),A<=o){const D=v[I];if(A<=1e-6){const M={point:D,normal:g,depth:A};a.push(M)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let u=0;u<a;u++){if(c=t[u],o=n.dot(c)+i,r<0)if(o<0){const h=new R;h.copy(c),e.push(h)}else{const h=new R;l.lerp(c,r/(r-o),h),e.push(h)}else if(o<0){const h=new R;l.lerp(c,r/(r-o),h),e.push(h),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new R);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new R);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,u,h,d=new R;for(let f=0;f<r.length;f++){d.copy(r[f]),e.vmult(d,d),t.vadd(d,d);const p=d;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(a===void 0||p.y<a)&&(a=p.y),(u===void 0||p.y>u)&&(u=p.y),(l===void 0||p.z<l)&&(l=p.z),(h===void 0||p.z>h)&&(h=p.z)}n.set(o,a,l),i.set(c,u,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new R);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new R;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=e[n[a][0]],u=new R;t.vsub(c,u);const h=l.dot(u),d=new R;o.vsub(c,d);const f=l.dot(d);if(h<0&&f>0||h>0&&f<0)return!1}return r?1:-1}static project(t,e,n,i,r){const o=t.vertices.length,a=lz;let l=0,c=0;const u=cz,h=t.vertices;u.setZero(),Pe.vectorToLocalFrame(n,i,e,a),Pe.pointToLocalFrame(n,i,u,u);const d=u.dot(a);c=l=h[0].dot(a);for(let f=1;f<o;f++){const p=h[f].dot(a);p>l&&(l=p),p<c&&(c=p)}if(c-=d,l-=d,c>l){const f=c;c=l,l=f}r[0]=l,r[1]=c}}const j0=[],X0=[];new R;const lz=new R,cz=new R;class Eh extends Yt{constructor(t){super({type:Yt.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=R,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new qu({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new R),Eh.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)Co.set(r[o][0],r[o][1],r[o][2]),e.vmult(Co,Co),t.vadd(Co,Co),n(Co.x,Co.y,Co.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;cr[0].set(r.x,r.y,r.z),cr[1].set(-r.x,r.y,r.z),cr[2].set(-r.x,-r.y,r.z),cr[3].set(-r.x,-r.y,-r.z),cr[4].set(r.x,-r.y,-r.z),cr[5].set(r.x,r.y,-r.z),cr[6].set(-r.x,r.y,-r.z),cr[7].set(r.x,-r.y,r.z);const o=cr[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=cr[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,u=l.y,h=l.z;c>i.x&&(i.x=c),u>i.y&&(i.y=u),h>i.z&&(i.z=h),c<n.x&&(n.x=c),u<n.y&&(n.y=u),h<n.z&&(n.z=h)}}}const Co=new R,cr=[new R,new R,new R,new R,new R,new R,new R,new R],Yv={DYNAMIC:1,STATIC:2,KINEMATIC:4},Zv={AWAKE:0,SLEEPY:1,SLEEPING:2};class qt extends F2{constructor(t){t===void 0&&(t={}),super(),this.id=qt.idCounter++,this.index=-1,this.world=null,this.vlambda=new R,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new R,this.previousPosition=new R,this.interpolatedPosition=new R,this.initPosition=new R,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new R,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new R,this.force=new R;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?qt.STATIC:qt.DYNAMIC,typeof t.type==typeof qt.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=qt.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new R,this.quaternion=new mn,this.initQuaternion=new mn,this.previousQuaternion=new mn,this.interpolatedQuaternion=new mn,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new R,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new R,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new R,this.invInertia=new R,this.invInertiaWorld=new ji,this.invMassSolve=0,this.invInertiaSolve=new R,this.invInertiaWorldSolve=new ji,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new R(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new R(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new ii,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new R,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=qt.AWAKE,this.wakeUpAfterNarrowphase=!1,t===qt.SLEEPING&&this.dispatchEvent(qt.wakeupEvent)}sleep(){this.sleepState=qt.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===qt.AWAKE&&n<i?(this.sleepState=qt.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(qt.sleepyEvent)):e===qt.SLEEPY&&n>i?this.wakeUp():e===qt.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(qt.sleepEvent))}}updateSolveMassProperties(){this.sleepState===qt.SLEEPING||this.type===qt.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new R),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new R),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new R),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new R),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new R,r=new mn;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=uz,o=hz,a=this.quaternion,l=this.aabb,c=dz;for(let u=0;u!==i;u++){const h=t[u];a.vmult(e[u],r),r.vadd(this.position,r),a.mult(n[u],o),h.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=fz,i=pz;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new R),this.type!==qt.DYNAMIC)return;this.sleepState===qt.SLEEPING&&this.wakeUp();const n=gz;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new R),this.type!==qt.DYNAMIC)return;const n=xz,i=vz;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===qt.DYNAMIC&&(this.sleepState===qt.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new R),this.type!==qt.DYNAMIC)return;this.sleepState===qt.SLEEPING&&this.wakeUp();const n=e,i=bz;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=yz;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new R),this.type!==qt.DYNAMIC)return;const n=wz,i=_z;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=Sz;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Eh.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new R;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===qt.DYNAMIC||this.type===qt.KINEMATIC)||this.sleepState===qt.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,h=this.invInertiaWorld,d=this.linearFactor,f=u*t;i.x+=a.x*f*d.x,i.y+=a.y*f*d.y,i.z+=a.z*f*d.z;const p=h.elements,g=this.angularFactor,m=l.x*g.x,x=l.y*g.y,v=l.z*g.z;r.x+=t*(p[0]*m+p[1]*x+p[2]*v),r.y+=t*(p[3]*m+p[4]*x+p[5]*v),r.z+=t*(p[6]*m+p[7]*x+p[8]*v),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}qt.idCounter=0;qt.COLLIDE_EVENT_NAME="collide";qt.DYNAMIC=Yv.DYNAMIC;qt.STATIC=Yv.STATIC;qt.KINEMATIC=Yv.KINEMATIC;qt.AWAKE=Zv.AWAKE;qt.SLEEPY=Zv.SLEEPY;qt.SLEEPING=Zv.SLEEPING;qt.wakeupEvent={type:"wakeup"};qt.sleepyEvent={type:"sleepy"};qt.sleepEvent={type:"sleep"};const uz=new R,hz=new mn,dz=new ii,fz=new ji,pz=new ji,mz=new ji,gz=new R,xz=new R,vz=new R,bz=new R,yz=new R,wz=new R,_z=new R,Sz=new R;class P2{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&qt.STATIC)!==0||t.sleepState===qt.SLEEPING)&&((e.type&qt.STATIC)!==0||e.sleepState===qt.SLEEPING))}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=Cz;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=Tz,i=Iz,r=Ez,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,u=l<c?`${l},${c}`:`${c},${l}`;n[u]=a,n.keys.push(u)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new R;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Cz=new R;new R;new mn;new R;const Tz={keys:[]},Iz=[],Ez=[];new R;new R;new R;class Mz extends P2{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class Tp{constructor(){this.rayFromWorld=new R,this.rayToWorld=new R,this.hitNormalWorld=new R,this.hitPointWorld=new R,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let O2,z2,B2,U2,V2,W2,G2;const Jv={CLOSEST:1,ANY:2,ALL:4};O2=Yt.types.SPHERE;z2=Yt.types.PLANE;B2=Yt.types.BOX;U2=Yt.types.CYLINDER;V2=Yt.types.CONVEXPOLYHEDRON;W2=Yt.types.HEIGHTFIELD;G2=Yt.types.TRIMESH;class En{get[O2](){return this._intersectSphere}get[z2](){return this._intersectPlane}get[B2](){return this._intersectBox}get[U2](){return this._intersectConvex}get[V2](){return this._intersectConvex}get[W2](){return this._intersectHeightfield}get[G2](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new R),e===void 0&&(e=new R),this.from=t.clone(),this.to=e.clone(),this.direction=new R,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=En.ANY,this.result=new Tp,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||En.ANY,this.result=e.result||new Tp,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(j_),K0.length=0,t.broadphase.aabbQuery(t,j_,K0),this.intersectBodies(K0),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const i=kz,r=Az;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if(!(n&&!l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){const r=this.from;if(Gz(r,this.direction,n)>t.boundingSphereRadius)return;const a=this[t.type];a&&a.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new R(0,0,1);e.vmult(c,c);const u=new R;o.vsub(n,u);const h=u.dot(c);a.vsub(n,u);const d=u.dot(c);if(h*d>0||o.distanceTo(a)<h)return;const f=c.dot(l);if(Math.abs(f)<this.precision)return;const p=new R,g=new R,m=new R;o.vsub(n,p);const x=-c.dot(p)/f;l.scale(x,g),o.vadd(g,m),this.reportIntersection(c,m,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){t.data,t.elementSize;const o=Nz;o.from.copy(this.from),o.to.copy(this.to),Pe.pointToLocalFrame(n,e,o.from,o.from),Pe.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=Rz;let l,c,u,h;l=c=0,u=h=t.data.length-1;const d=new ii;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),u=Math.min(u,a[0]+1),h=Math.min(h,a[1]+1);for(let f=l;f<u;f++)for(let p=c;p<h;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),Pe.pointToWorldFrame(n,e,t.pillarOffset,Af),this._intersectConvex(t.pillarConvex,e,Af,i,r,X_),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),Pe.pointToWorldFrame(n,e,t.pillarOffset,Af),this._intersectConvex(t.pillarConvex,e,Af,i,r,X_)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),h=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,d=u**2-4*c*h,f=Dz,p=$z;if(!(d<0))if(d===0)o.lerp(a,d,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1);else{const g=(-u-Math.sqrt(d))/(2*c),m=(-u+Math.sqrt(d))/(2*c);if(g>=0&&g<=1&&(o.lerp(a,g,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=Lz,l=K_,c=o&&o.faceList||null,u=t.faces,h=t.vertices,d=t.faceNormals,f=this.direction,p=this.from,g=this.to,m=p.distanceTo(g),x=c?c.length:u.length,v=this.result;for(let y=0;!v.shouldStop&&y<x;y++){const b=c?c[y]:y,w=u[b],_=d[b],C=e,S=n;l.copy(h[w[0]]),C.vmult(l,l),l.vadd(S,l),l.vsub(p,l),C.vmult(_,a);const T=f.dot(a);if(Math.abs(T)<this.precision)continue;const I=a.dot(l)/T;if(!(I<0)){f.scale(I,Ms),Ms.vadd(p,Ms),Bi.copy(h[w[0]]),C.vmult(Bi,Bi),S.vadd(Bi,Bi);for(let A=1;!v.shouldStop&&A<w.length-1;A++){ur.copy(h[w[A]]),hr.copy(h[w[A+1]]),C.vmult(ur,ur),C.vmult(hr,hr),S.vadd(ur,ur),S.vadd(hr,hr);const D=Ms.distanceTo(p);!(En.pointInTriangle(Ms,Bi,ur,hr)||En.pointInTriangle(Ms,ur,Bi,hr))||D>m||this.reportIntersection(a,Ms,r,i,b)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=Fz,l=Vz,c=Wz,u=K_,h=Pz,d=Oz,f=zz,p=Uz,g=Bz,m=t.indices;t.vertices;const x=this.from,v=this.to,y=this.direction;c.position.copy(n),c.quaternion.copy(e),Pe.vectorToLocalFrame(n,e,y,h),Pe.pointToLocalFrame(n,e,x,d),Pe.pointToLocalFrame(n,e,v,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,h),h.normalize();const b=d.distanceSquared(f);t.tree.rayQuery(this,c,l);for(let w=0,_=l.length;!this.result.shouldStop&&w!==_;w++){const C=l[w];t.getNormal(C,a),t.getVertex(m[C*3],Bi),Bi.vsub(d,u);const S=h.dot(a),T=a.dot(u)/S;if(T<0)continue;h.scale(T,Ms),Ms.vadd(d,Ms),t.getVertex(m[C*3+1],ur),t.getVertex(m[C*3+2],hr);const I=Ms.distanceSquared(d);!(En.pointInTriangle(Ms,ur,Bi,hr)||En.pointInTriangle(Ms,Bi,ur,hr))||I>b||(Pe.vectorToWorldFrame(e,a,g),Pe.pointToWorldFrame(n,e,Ms,p),this.reportIntersection(g,p,r,i,C))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r<"u"?r:-1,this.mode){case En.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case En.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case En.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(t,e,n,i){i.vsub(e,ya),n.vsub(e,wu),t.vsub(e,Y0);const r=ya.dot(ya),o=ya.dot(wu),a=ya.dot(Y0),l=wu.dot(wu),c=wu.dot(Y0);let u,h;return(u=l*a-o*c)>=0&&(h=r*c-o*a)>=0&&u+h<r*l-o*o}}En.CLOSEST=Jv.CLOSEST;En.ANY=Jv.ANY;En.ALL=Jv.ALL;const j_=new ii,K0=[],wu=new R,Y0=new R,kz=new R,Az=new mn,Ms=new R,Bi=new R,ur=new R,hr=new R;new R;new Tp;const X_={faceList:[0]},Af=new R,Nz=new En,Rz=[],Dz=new R,$z=new R,Lz=new R;new R;new R;const K_=new R,Fz=new R,Pz=new R,Oz=new R,zz=new R,Bz=new R,Uz=new R;new ii;const Vz=[],Wz=new Pe,ya=new R,Nf=new R;function Gz(s,t,e){e.vsub(s,ya);const n=ya.dot(t);return t.scale(n,Nf),Nf.vadd(s,Nf),e.distanceTo(Nf)}class rc extends P2{static checkBounds(t,e,n){let i,r;n===0?(i=t.position.x,r=e.position.x):n===1?(i=t.position.y,r=e.position.y):n===2&&(i=t.position.z,r=e.position.z);const o=t.boundingRadius,a=e.boundingRadius,l=i+o;return r-a<l}static insertionSortX(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.x<=i.aabb.lowerBound.x);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortY(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.y<=i.aabb.lowerBound.y);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortZ(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.z<=i.aabb.lowerBound.z);r--)t[r+1]=t[r];t[r+1]=i}return t}constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=n=>{e.push(n.body)},this._removeBodyHandler=n=>{const i=e.indexOf(n.body);i!==-1&&e.splice(i,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,n){const i=this.axisList,r=i.length,o=this.axisIndex;let a,l;for(this.dirty&&(this.sortList(),this.dirty=!1),a=0;a!==r;a++){const c=i[a];for(l=a+1;l<r;l++){const u=i[l];if(!!this.needBroadphaseCollision(c,u)){if(!rc.checkBounds(c,u,o))break;this.intersectionTest(c,u,e,n)}}}}sortList(){const t=this.axisList,e=this.axisIndex,n=t.length;for(let i=0;i!==n;i++){const r=t[i];r.aabbNeedsUpdate&&r.updateAABB()}e===0?rc.insertionSortX(t):e===1?rc.insertionSortY(t):e===2&&rc.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,n=0,i=0,r=0,o=0;const a=this.axisList,l=a.length,c=1/l;for(let f=0;f!==l;f++){const p=a[f],g=p.position.x;t+=g,e+=g*g;const m=p.position.y;n+=m,i+=m*m;const x=p.position.z;r+=x,o+=x*x}const u=e-t*t*c,h=i-n*n*c,d=o-r*r*c;u>h?u>d?this.axisIndex=0:this.axisIndex=2:h>d?this.axisIndex=1:this.axisIndex=2}aabbQuery(t,e,n){n===void 0&&(n=[]),this.dirty&&(this.sortList(),this.dirty=!1);const i=this.axisIndex;let r="x";i===1&&(r="y"),i===2&&(r="z");const o=this.axisList;e.lowerBound[r],e.upperBound[r];for(let a=0;a<o.length;a++){const l=o[a];l.aabbNeedsUpdate&&l.updateAABB(),l.aabb.overlaps(e)&&n.push(l)}return n}}class H2{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class wm{constructor(t,e,n){n===void 0&&(n={}),n=H2.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=wm.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}wm.idCounter=0;class Y_{constructor(){this.spatial=new R,this.rotational=new R}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class hl{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=hl.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Y_,this.jacobianElementB=new Y_,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*t-i*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,u=i.invMassSolve;return r.scale(c,Z_),a.scale(u,J_),n.invInertiaWorldSolve.vmult(o,Q_),i.invInertiaWorldSolve.vmult(l,tS),t.multiplyVectors(Z_,Q_)+e.multiplyVectors(J_,tS)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,Rf),c+=Rf.dot(t.rotational),l.vmult(e.rotational,Rf),c+=Rf.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=Hz;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}hl.idCounter=0;const Z_=new R,J_=new R,Q_=new R,tS=new R,Rf=new R,Hz=new R;class up extends hl{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new R,this.rj=new R,this.ni=new R}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=qz,c=jz,u=i.velocity,h=i.angularVelocity;i.force,i.torque;const d=r.velocity,f=r.angularVelocity;r.force,r.torque;const p=Xz,g=this.jacobianElementA,m=this.jacobianElementB,x=this.ni;o.cross(x,l),a.cross(x,c),x.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(x),m.rotational.copy(c),p.copy(r.position),p.vadd(a,p),p.vsub(i.position,p),p.vsub(o,p);const v=x.dot(p),y=this.restitution+1,b=y*d.dot(x)-y*u.dot(x)+f.dot(c)-h.dot(l),w=this.computeGiMf();return-v*e-b*n-t*w}getImpactVelocityAlongNormal(){const t=Kz,e=Yz,n=Zz,i=Jz,r=Qz;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const qz=new R,jz=new R,Xz=new R,Kz=new R,Yz=new R,Zz=new R,Jz=new R,Qz=new R;class tB extends wm{constructor(t,e,n,i,r){e===void 0&&(e=new R),i===void 0&&(i=new R),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new up(t,n),a=this.equationY=new up(t,n),l=this.equationZ=new up(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}new R;new R;class eS extends hl{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new R(1,0,0),this.axisB=n.axisB?n.axisB.clone():new R(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=eB,a=nB,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.maxAngle)-i.dot(r),h=this.computeGW(),d=this.computeGiMf();return-u*e-h*n-t*d}}const eB=new R,nB=new R;new R;new R;new R;new R;class sB extends hl{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new R,this.axisB=new R,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*e-t*l}}class Df extends tB{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new R,o=n.pivotB?n.pivotB.clone():new R;super(t,r,e,o,i),(this.axisA=n.axisA?n.axisA.clone():new R(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new R(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new eS(t,e,n),u=this.rotationalEquation2=new eS(t,e,n),h=this.motorEquation=new sB(t,e,i);h.enabled=!1,this.equations.push(c,u,h)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=iB,a=rB,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const iB=new R,rB=new R;class nS extends hl{constructor(t,e,n){super(t,e,-n,n),this.ri=new R,this.rj=new R,this.t=new R}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=oB,o=aB,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),h=this.computeGiMf();return-u*e-t*h}}const oB=new R,aB=new R;class _m{constructor(t,e,n){n=H2.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=_m.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}_m.idCounter=0;class dl{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=dl.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}dl.idCounter=0;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new En;new R;new R;new R;new R(1,0,0),new R(0,1,0),new R(0,0,1);new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;class $f extends Yt{constructor(t){if(super({type:Yt.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new R);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}new R;new R;new R;new R;new R;new R;new R;new R;new R;class lB extends Yt{constructor(){super({type:Yt.types.PLANE}),this.worldNormal=new R,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new R),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,i){Hr.set(0,0,1),e.vmult(Hr,Hr);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),Hr.x===1?i.x=t.x:Hr.x===-1&&(n.x=t.x),Hr.y===1?i.y=t.y:Hr.y===-1&&(n.y=t.y),Hr.z===1?i.z=t.z:Hr.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const Hr=new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new ii;new R;new ii;new R;new R;new R;new R;new R;new R;new R;new ii;new R;new Pe;new ii;class cB{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class uB extends cB{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,u=t;let h,d,f,p,g,m;if(a!==0)for(let b=0;b!==c;b++)l[b].updateSolveMassProperties();const x=dB,v=fB,y=hB;x.length=a,v.length=a,y.length=a;for(let b=0;b!==a;b++){const w=o[b];y[b]=0,v[b]=w.computeB(u),x[b]=1/w.computeC()}if(a!==0){for(let _=0;_!==c;_++){const C=l[_],S=C.vlambda,T=C.wlambda;S.set(0,0,0),T.set(0,0,0)}for(n=0;n!==i;n++){p=0;for(let _=0;_!==a;_++){const C=o[_];h=v[_],d=x[_],m=y[_],g=C.computeGWlambda(),f=d*(h-g-C.eps*m),m+f<C.minForce?f=C.minForce-m:m+f>C.maxForce&&(f=C.maxForce-m),y[_]+=f,p+=f>0?f:-f,C.addToWlambda(f)}if(p*p<r)break}for(let _=0;_!==c;_++){const C=l[_],S=C.velocity,T=C.angularVelocity;C.vlambda.vmul(C.linearFactor,C.vlambda),S.vadd(C.vlambda,S),C.wlambda.vmul(C.angularFactor,C.wlambda),T.vadd(C.wlambda,T)}let b=o.length;const w=1/u;for(;b--;)o[b].multiplier=y[b]*w}return n}}const hB=[],dB=[],fB=[];qt.STATIC;class pB{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class mB extends pB{constructor(){super(...arguments),this.type=R}constructObject(){return new R}}const en={sphereSphere:Yt.types.SPHERE,spherePlane:Yt.types.SPHERE|Yt.types.PLANE,boxBox:Yt.types.BOX|Yt.types.BOX,sphereBox:Yt.types.SPHERE|Yt.types.BOX,planeBox:Yt.types.PLANE|Yt.types.BOX,convexConvex:Yt.types.CONVEXPOLYHEDRON,sphereConvex:Yt.types.SPHERE|Yt.types.CONVEXPOLYHEDRON,planeConvex:Yt.types.PLANE|Yt.types.CONVEXPOLYHEDRON,boxConvex:Yt.types.BOX|Yt.types.CONVEXPOLYHEDRON,sphereHeightfield:Yt.types.SPHERE|Yt.types.HEIGHTFIELD,boxHeightfield:Yt.types.BOX|Yt.types.HEIGHTFIELD,convexHeightfield:Yt.types.CONVEXPOLYHEDRON|Yt.types.HEIGHTFIELD,sphereParticle:Yt.types.PARTICLE|Yt.types.SPHERE,planeParticle:Yt.types.PLANE|Yt.types.PARTICLE,boxParticle:Yt.types.BOX|Yt.types.PARTICLE,convexParticle:Yt.types.PARTICLE|Yt.types.CONVEXPOLYHEDRON,cylinderCylinder:Yt.types.CYLINDER,sphereCylinder:Yt.types.SPHERE|Yt.types.CYLINDER,planeCylinder:Yt.types.PLANE|Yt.types.CYLINDER,boxCylinder:Yt.types.BOX|Yt.types.CYLINDER,convexCylinder:Yt.types.CONVEXPOLYHEDRON|Yt.types.CYLINDER,heightfieldCylinder:Yt.types.HEIGHTFIELD|Yt.types.CYLINDER,particleCylinder:Yt.types.PARTICLE|Yt.types.CYLINDER,sphereTrimesh:Yt.types.SPHERE|Yt.types.TRIMESH,planeTrimesh:Yt.types.PLANE|Yt.types.TRIMESH};class gB{get[en.sphereSphere](){return this.sphereSphere}get[en.spherePlane](){return this.spherePlane}get[en.boxBox](){return this.boxBox}get[en.sphereBox](){return this.sphereBox}get[en.planeBox](){return this.planeBox}get[en.convexConvex](){return this.convexConvex}get[en.sphereConvex](){return this.sphereConvex}get[en.planeConvex](){return this.planeConvex}get[en.boxConvex](){return this.boxConvex}get[en.sphereHeightfield](){return this.sphereHeightfield}get[en.boxHeightfield](){return this.boxHeightfield}get[en.convexHeightfield](){return this.convexHeightfield}get[en.sphereParticle](){return this.sphereParticle}get[en.planeParticle](){return this.planeParticle}get[en.boxParticle](){return this.boxParticle}get[en.convexParticle](){return this.convexParticle}get[en.cylinderCylinder](){return this.convexConvex}get[en.sphereCylinder](){return this.sphereConvex}get[en.planeCylinder](){return this.planeConvex}get[en.boxCylinder](){return this.boxConvex}get[en.convexCylinder](){return this.convexConvex}get[en.heightfieldCylinder](){return this.heightfieldCylinder}get[en.particleCylinder](){return this.particleCylinder}get[en.sphereTrimesh](){return this.sphereTrimesh}get[en.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new mB,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new up(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,u=i.material||e.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=r.material||n.material,h=o.material||i.material;if(u&&h&&u.friction>=0&&h.friction>=0&&(c=u.friction*h.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let f=n.invMass+i.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,g=p.length?p.pop():new nS(n,i,d*f),m=p.length?p.pop():new nS(n,i,d*f);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-d*f,g.maxForce=m.maxForce=d*f,g.ri.copy(t.ri),g.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=t.enabled,e.push(g,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];da.setZero(),Wl.setZero(),Gl.setZero();const r=e.bi;e.bj;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?(da.vadd(e.ni,da),Wl.vadd(e.ri,Wl),Gl.vadd(e.rj,Gl)):(da.vsub(e.ni,da),Wl.vadd(e.rj,Wl),Gl.vadd(e.ri,Gl));const o=1/t;Wl.scale(o,n.ri),Gl.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),da.normalize(),da.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=bB,c=yB,u=xB,h=vB;for(let d=0,f=t.length;d!==f;d++){const p=t[d],g=e[d];let m=null;p.material&&g.material&&(m=n.getContactMaterial(p.material,g.material)||null);const x=p.type&qt.KINEMATIC&&g.type&qt.STATIC||p.type&qt.STATIC&&g.type&qt.KINEMATIC||p.type&qt.KINEMATIC&&g.type&qt.KINEMATIC;for(let v=0;v<p.shapes.length;v++){p.quaternion.mult(p.shapeOrientations[v],l),p.quaternion.vmult(p.shapeOffsets[v],u),u.vadd(p.position,u);const y=p.shapes[v];for(let b=0;b<g.shapes.length;b++){g.quaternion.mult(g.shapeOrientations[b],c),g.quaternion.vmult(g.shapeOffsets[b],h),h.vadd(g.position,h);const w=g.shapes[b];if(!(y.collisionFilterMask&w.collisionFilterGroup&&w.collisionFilterMask&y.collisionFilterGroup)||u.distanceTo(h)>y.boundingSphereRadius+w.boundingSphereRadius)continue;let _=null;y.material&&w.material&&(_=n.getContactMaterial(y.material,w.material)||null),this.currentContactMaterial=_||m||n.defaultContactMaterial;const C=y.type|w.type,S=this[C];if(S){let T=!1;y.type<w.type?T=S.call(this,y,w,u,h,l,c,p,g,y,w,x):T=S.call(this,w,y,h,u,c,l,g,p,y,w,x),T&&x&&(n.shapeOverlapKeeper.set(y.id,w.id),n.bodyOverlapKeeper.set(p.id,g.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,u,h){if(h)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,u);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,u,h){const d=this.createContactEquation(a,l,t,e,c,u);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,Lf),d.ni.scale(d.ni.dot(Lf),sS),Lf.vsub(sS,d.rj),-Lf.dot(d.ni)<=t.radius){if(h)return!0;const f=d.ri,p=d.rj;f.vadd(n,f),f.vsub(a.position,f),p.vadd(i,p),p.vsub(l.position,p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}sphereBox(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool,f=qB;n.vsub(i,Ff),e.getSideNormals(f,o);const p=t.radius;let g=!1;const m=XB,x=KB,v=YB;let y=null,b=0,w=0,_=0,C=null;for(let N=0,z=f.length;N!==z&&g===!1;N++){const L=WB;L.copy(f[N]);const $=L.length();L.normalize();const W=Ff.dot(L);if(W<$+p&&W>0){const q=GB,G=HB;q.copy(f[(N+1)%3]),G.copy(f[(N+2)%3]);const j=q.length(),rt=G.length();q.normalize(),G.normalize();const lt=Ff.dot(q),Y=Ff.dot(G);if(lt<j&&lt>-j&&Y<rt&&Y>-rt){const vt=Math.abs(W-$-p);if((C===null||vt<C)&&(C=vt,w=lt,_=Y,y=$,m.copy(L),x.copy(q),v.copy(G),b++,h))return!0}}}if(b){g=!0;const N=this.createContactEquation(a,l,t,e,c,u);m.scale(-p,N.ri),N.ni.copy(m),N.ni.negate(N.ni),m.scale(y,m),x.scale(w,x),m.vadd(x,m),v.scale(_,v),m.vadd(v,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(a.position,N.ri),N.rj.vadd(i,N.rj),N.rj.vsub(l.position,N.rj),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult)}let S=d.get();const T=jB;for(let N=0;N!==2&&!g;N++)for(let z=0;z!==2&&!g;z++)for(let L=0;L!==2&&!g;L++)if(S.set(0,0,0),N?S.vadd(f[0],S):S.vsub(f[0],S),z?S.vadd(f[1],S):S.vsub(f[1],S),L?S.vadd(f[2],S):S.vsub(f[2],S),i.vadd(S,T),T.vsub(n,T),T.lengthSquared()<p*p){if(h)return!0;g=!0;const $=this.createContactEquation(a,l,t,e,c,u);$.ri.copy(T),$.ri.normalize(),$.ni.copy($.ri),$.ri.scale(p,$.ri),$.rj.copy(S),$.ri.vadd(n,$.ri),$.ri.vsub(a.position,$.ri),$.rj.vadd(i,$.rj),$.rj.vsub(l.position,$.rj),this.result.push($),this.createFrictionEquationsFromContact($,this.frictionResult)}d.release(S),S=null;const I=d.get(),A=d.get(),D=d.get(),M=d.get(),E=d.get(),k=f.length;for(let N=0;N!==k&&!g;N++)for(let z=0;z!==k&&!g;z++)if(N%3!==z%3){f[z].cross(f[N],I),I.normalize(),f[N].vadd(f[z],A),D.copy(n),D.vsub(A,D),D.vsub(i,D);const L=D.dot(I);I.scale(L,M);let $=0;for(;$===N%3||$===z%3;)$++;E.copy(n),E.vsub(M,E),E.vsub(A,E),E.vsub(i,E);const W=Math.abs(L),q=E.length();if(W<f[$].length()&&q<p){if(h)return!0;g=!0;const G=this.createContactEquation(a,l,t,e,c,u);A.vadd(M,G.rj),G.rj.copy(G.rj),E.negate(G.ni),G.ni.normalize(),G.ri.copy(G.rj),G.ri.vadd(i,G.ri),G.ri.vsub(n,G.ri),G.ri.normalize(),G.ri.scale(p,G.ri),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult)}}d.release(I,A,D,M,E)}planeBox(t,e,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}convexConvex(t,e,n,i,r,o,a,l,c,u,h,d,f){const p=h4;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,p,d,f)){const g=[],m=d4;t.clipAgainstHull(n,r,e,i,o,p,-100,100,g);let x=0;for(let v=0;v!==g.length;v++){if(h)return!0;const y=this.createContactEquation(a,l,t,e,c,u),b=y.ri,w=y.rj;p.negate(y.ni),g[v].normal.negate(m),m.scale(g[v].depth,m),g[v].point.vadd(m,b),w.copy(g[v].point),b.vsub(n,b),w.vsub(i,w),b.vadd(n,b),b.vsub(a.position,b),w.vadd(i,w),w.vsub(l.position,w),this.result.push(y),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(y,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool;n.vsub(i,ZB);const f=e.faceNormals,p=e.faces,g=e.vertices,m=t.radius;let x=!1;for(let v=0;v!==g.length;v++){const y=g[v],b=e4;o.vmult(y,b),i.vadd(b,b);const w=t4;if(b.vsub(n,w),w.lengthSquared()<m*m){if(h)return!0;x=!0;const _=this.createContactEquation(a,l,t,e,c,u);_.ri.copy(w),_.ri.normalize(),_.ni.copy(_.ri),_.ri.scale(m,_.ri),b.vsub(i,_.rj),_.ri.vadd(n,_.ri),_.ri.vsub(a.position,_.ri),_.rj.vadd(i,_.rj),_.rj.vsub(l.position,_.rj),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult);return}}for(let v=0,y=p.length;v!==y&&x===!1;v++){const b=f[v],w=p[v],_=n4;o.vmult(b,_);const C=s4;o.vmult(g[w[0]],C),C.vadd(i,C);const S=i4;_.scale(-m,S),n.vadd(S,S);const T=r4;S.vsub(C,T);const I=T.dot(_),A=o4;if(n.vsub(C,A),I<0&&A.dot(_)>0){const D=[];for(let M=0,E=w.length;M!==E;M++){const k=d.get();o.vmult(g[w[M]],k),i.vadd(k,k),D.push(k)}if(VB(D,_,n)){if(h)return!0;x=!0;const M=this.createContactEquation(a,l,t,e,c,u);_.scale(-m,M.ri),_.negate(M.ni);const E=d.get();_.scale(-I,E);const k=d.get();_.scale(-m,k),n.vsub(i,M.rj),M.rj.vadd(k,M.rj),M.rj.vadd(E,M.rj),M.rj.vadd(i,M.rj),M.rj.vsub(l.position,M.rj),M.ri.vadd(n,M.ri),M.ri.vsub(a.position,M.ri),d.release(E),d.release(k),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult);for(let N=0,z=D.length;N!==z;N++)d.release(D[N]);return}else for(let M=0;M!==w.length;M++){const E=d.get(),k=d.get();o.vmult(g[w[(M+1)%w.length]],E),o.vmult(g[w[(M+2)%w.length]],k),i.vadd(E,E),i.vadd(k,k);const N=JB;k.vsub(E,N);const z=QB;N.unit(z);const L=d.get(),$=d.get();n.vsub(E,$);const W=$.dot(z);z.scale(W,L),L.vadd(E,L);const q=d.get();if(L.vsub(n,q),W>0&&W*W<N.lengthSquared()&&q.lengthSquared()<m*m){if(h)return!0;const G=this.createContactEquation(a,l,t,e,c,u);L.vsub(i,G.rj),L.vsub(n,G.ni),G.ni.normalize(),G.ni.scale(m,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult);for(let j=0,rt=D.length;j!==rt;j++)d.release(D[j]);d.release(E),d.release(k),d.release(L),d.release(q),d.release($);return}d.release(E),d.release(k),d.release(L),d.release(q),d.release($)}for(let M=0,E=D.length;M!==E;M++)d.release(D[M])}}}planeConvex(t,e,n,i,r,o,a,l,c,u,h){const d=a4,f=l4;f.set(0,0,1),r.vmult(f,f);let p=0;const g=c4;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,g),f.dot(g)<=0){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u),y=u4;f.scale(f.dot(g),y),d.vsub(y,y),y.vsub(n,v.ri),v.ni.copy(f),d.vsub(i,v.rj),v.ri.vadd(n,v.ri),v.ri.vsub(a.position,v.ri),v.rj.vadd(i,v.rj),v.rj.vsub(l.position,v.rj),this.result.push(v),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}sphereHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=t.radius,p=e.elementSize,g=C4,m=S4;Pe.pointToLocalFrame(i,o,n,m);let x=Math.floor((m.x-f)/p)-1,v=Math.ceil((m.x+f)/p)+1,y=Math.floor((m.y-f)/p)-1,b=Math.ceil((m.y+f)/p)+1;if(v<0||b<0||x>d.length||y>d[0].length)return;x<0&&(x=0),v<0&&(v=0),y<0&&(y=0),b<0&&(b=0),x>=d.length&&(x=d.length-1),v>=d.length&&(v=d.length-1),b>=d[0].length&&(b=d[0].length-1),y>=d[0].length&&(y=d[0].length-1);const w=[];e.getRectMinMax(x,y,v,b,w);const _=w[0],C=w[1];if(m.z-f>C||m.z+f<_)return;const S=this.result;for(let T=x;T<v;T++)for(let I=y;I<b;I++){const A=S.length;let D=!1;if(e.getConvexTrianglePillar(T,I,!1),Pe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(D=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&D||(e.getConvexTrianglePillar(T,I,!0),Pe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(D=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&D))return!0;if(S.length-A>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=e.elementSize,p=t.boundingSphereRadius,g=w4,m=_4,x=y4;Pe.pointToLocalFrame(i,o,n,x);let v=Math.floor((x.x-p)/f)-1,y=Math.ceil((x.x+p)/f)+1,b=Math.floor((x.y-p)/f)-1,w=Math.ceil((x.y+p)/f)+1;if(y<0||w<0||v>d.length||b>d[0].length)return;v<0&&(v=0),y<0&&(y=0),b<0&&(b=0),w<0&&(w=0),v>=d.length&&(v=d.length-1),y>=d.length&&(y=d.length-1),w>=d[0].length&&(w=d[0].length-1),b>=d[0].length&&(b=d[0].length-1);const _=[];e.getRectMinMax(v,b,y,w,_);const C=_[0],S=_[1];if(!(x.z-p>S||x.z+p<C))for(let T=v;T<y;T++)for(let I=b;I<w;I++){let A=!1;if(e.getConvexTrianglePillar(T,I,!1),Pe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(A=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&A||(e.getConvexTrianglePillar(T,I,!0),Pe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(A=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&A))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,u,h){const d=g4;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(h)return!0;const p=this.createContactEquation(l,a,e,t,c,u);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,u,h){const d=f4;d.set(0,0,1),a.quaternion.vmult(d,d);const f=p4;if(i.vsub(a.position,f),d.dot(f)<=0){if(h)return!0;const g=this.createContactEquation(l,a,e,t,c,u);g.ni.copy(d),g.ni.negate(g.ni),g.ri.set(0,0,0);const m=m4;d.scale(d.dot(i),m),i.vsub(m,m),g.rj.copy(m),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexParticle(t,e,n,i,r,o,a,l,c,u,h){let d=-1;const f=v4,p=b4;let g=null;const m=x4;if(m.copy(i),m.vsub(n,m),r.conjugate(iS),iS.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let x=0,v=t.faces.length;x!==v;x++){const y=[t.worldVertices[t.faces[x][0]]],b=t.worldFaceNormals[x];i.vsub(y[0],rS);const w=-b.dot(rS);if(g===null||Math.abs(w)<Math.abs(g)){if(h)return!0;g=w,d=x,f.copy(b)}}if(d!==-1){const x=this.createContactEquation(l,a,e,t,c,u);f.scale(g,p),p.vadd(i,p),p.vsub(n,p),x.rj.copy(p),f.negate(x.ni),x.ri.set(0,0,0);const v=x.ri,y=x.rj;v.vadd(i,v),v.vsub(l.position,v),y.vadd(n,y),y.vsub(a.position,y),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,u,h)}particleCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexParticle(e,t,i,n,o,r,l,a,c,u,h)}sphereTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=MB,f=kB,p=AB,g=NB,m=RB,x=DB,v=PB,y=EB,b=TB,w=OB;Pe.pointToLocalFrame(i,o,n,m);const _=t.radius;v.lowerBound.set(m.x-_,m.y-_,m.z-_),v.upperBound.set(m.x+_,m.y+_,m.z+_),e.getTrianglesInAABB(v,w);const C=IB,S=t.radius*t.radius;for(let M=0;M<w.length;M++)for(let E=0;E<3;E++)if(e.getVertex(e.indices[w[M]*3+E],C),C.vsub(m,b),b.lengthSquared()<=S){if(y.copy(C),Pe.pointToWorldFrame(i,o,y,C),C.vsub(n,b),h)return!0;let k=this.createContactEquation(a,l,t,e,c,u);k.ni.copy(b),k.ni.normalize(),k.ri.copy(k.ni),k.ri.scale(t.radius,k.ri),k.ri.vadd(n,k.ri),k.ri.vsub(a.position,k.ri),k.rj.copy(C),k.rj.vsub(l.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}for(let M=0;M<w.length;M++)for(let E=0;E<3;E++){e.getVertex(e.indices[w[M]*3+E],d),e.getVertex(e.indices[w[M]*3+(E+1)%3],f),f.vsub(d,p),m.vsub(f,x);const k=x.dot(p);m.vsub(d,x);let N=x.dot(p);if(N>0&&k<0&&(m.vsub(d,x),g.copy(p),g.normalize(),N=x.dot(g),g.scale(N,x),x.vadd(d,x),x.distanceTo(m)<t.radius)){if(h)return!0;const L=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,L.ni),L.ni.normalize(),L.ni.scale(t.radius,L.ri),L.ri.vadd(n,L.ri),L.ri.vsub(a.position,L.ri),Pe.pointToWorldFrame(i,o,x,x),x.vsub(l.position,L.rj),Pe.vectorToWorldFrame(o,L.ni,L.ni),Pe.vectorToWorldFrame(o,L.ri,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}const T=$B,I=LB,A=FB,D=CB;for(let M=0,E=w.length;M!==E;M++){e.getTriangleVertices(w[M],T,I,A),e.getNormal(w[M],D),m.vsub(T,x);let k=x.dot(D);if(D.scale(k,x),m.vsub(x,x),k=x.distanceTo(m),En.pointInTriangle(x,T,I,A)&&k<t.radius){if(h)return!0;let N=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,N.ni),N.ni.normalize(),N.ni.scale(t.radius,N.ri),N.ri.vadd(n,N.ri),N.ri.vsub(a.position,N.ri),Pe.pointToWorldFrame(i,o,x,x),x.vsub(l.position,N.rj),Pe.vectorToWorldFrame(o,N.ni,N.ni),Pe.vectorToWorldFrame(o,N.ri,N.ri),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult)}}w.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=new R,f=wB;f.set(0,0,1),r.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,d);const g=new R;g.copy(d),Pe.pointToWorldFrame(i,o,g,d);const m=_B;if(d.vsub(n,m),f.dot(m)<=0){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u);v.ni.copy(f);const y=SB;f.scale(m.dot(f),y),d.vsub(y,y),v.ri.copy(y),v.ri.vsub(a.position,v.ri),v.rj.copy(d),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const da=new R,Wl=new R,Gl=new R,xB=new R,vB=new R,bB=new mn,yB=new mn,wB=new R,_B=new R,SB=new R,CB=new R,TB=new R;new R;const IB=new R,EB=new R,MB=new R,kB=new R,AB=new R,NB=new R,RB=new R,DB=new R,$B=new R,LB=new R,FB=new R,PB=new ii,OB=[],Lf=new R,sS=new R,zB=new R,BB=new R,UB=new R;function VB(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=zB;s[(r+1)%i].vsub(o,a);const l=BB;a.cross(t,l);const c=UB;e.vsub(o,c);const u=l.dot(c);if(n===null||u>0&&n===!0||u<=0&&n===!1){n===null&&(n=u>0);continue}else return!1}return!0}const Ff=new R,WB=new R,GB=new R,HB=new R,qB=[new R,new R,new R,new R,new R,new R],jB=new R,XB=new R,KB=new R,YB=new R,ZB=new R,JB=new R,QB=new R,t4=new R,e4=new R,n4=new R,s4=new R,i4=new R,r4=new R,o4=new R;new R;new R;const a4=new R,l4=new R,c4=new R,u4=new R,h4=new R,d4=new R,f4=new R,p4=new R,m4=new R,g4=new R,iS=new mn,x4=new R;new R;const v4=new R,rS=new R,b4=new R,y4=new R,w4=new R,_4=[0],S4=new R,C4=new R;class oS{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const u=n[l];for(;u>i[a];)a++;c=u===i[a],c||aS(t,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=i[l];for(;u>n[a];)a++;c=n[a]===u,c||aS(e,u)}}}function aS(s,t){s.push((t&4294901760)>>16,t&65535)}const Z0=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class T4{constructor(){this.data={keys:[]}}get(t,e){const n=Z0(t,e);return this.data[n]}set(t,e,n){const i=Z0(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=Z0(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class I4 extends F2{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new R,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new R,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new Mz,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new uB,this.constraints=[],this.narrowphase=new gB(this),this.collisionMatrix=new H_,this.collisionMatrixPrevious=new H_,this.bodyOverlapKeeper=new oS,this.shapeOverlapKeeper=new oS,this.contactmaterials=[],this.contactMaterialTable=new T4,this.defaultMaterial=new dl("default"),this.defaultContactMaterial=new _m(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Tp?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=En.ALL,n.from=t,n.to=e,n.callback=i,J0.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=En.ANY,n.from=t,n.to=e,n.result=i,J0.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=En.CLOSEST,n.from=t,n.to=e,n.result=i,J0.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof qt&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=$n.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const i=n-this.lastCallTime;this.step(t,i,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=$n.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!($n.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=N4,i=R4,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,h=qt.DYNAMIC;let d=-1/0;const f=this.constraints,p=A4;l.length();const g=l.x,m=l.y,x=l.z;let v=0;for(c&&(d=$n.now()),v=0;v!==r;v++){const M=o[v];if(M.type===h){const E=M.force,k=M.mass;E.x+=k*g,E.y+=k*m,E.z+=k*x}}for(let M=0,E=this.subsystems.length;M!==E;M++)this.subsystems[M].update();c&&(d=$n.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(u.broadphase=$n.now()-d);let y=f.length;for(v=0;v!==y;v++){const M=f[v];if(!M.collideConnected)for(let E=n.length-1;E>=0;E-=1)(M.bodyA===n[E]&&M.bodyB===i[E]||M.bodyB===n[E]&&M.bodyA===i[E])&&(n.splice(E,1),i.splice(E,1))}this.collisionMatrixTick(),c&&(d=$n.now());const b=k4,w=e.length;for(v=0;v!==w;v++)b.push(e[v]);e.length=0;const _=this.frictionEquations.length;for(v=0;v!==_;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,b,this.frictionEquations,p),c&&(u.narrowphase=$n.now()-d),c&&(d=$n.now()),v=0;v<this.frictionEquations.length;v++)a.addEquation(this.frictionEquations[v]);const C=e.length;for(let M=0;M!==C;M++){const E=e[M],k=E.bi,N=E.bj,z=E.si,L=E.sj;let $;if(k.material&&N.material?$=this.getContactMaterial(k.material,N.material)||this.defaultContactMaterial:$=this.defaultContactMaterial,$.friction,k.material&&N.material&&(k.material.friction>=0&&N.material.friction>=0&&k.material.friction*N.material.friction,k.material.restitution>=0&&N.material.restitution>=0&&(E.restitution=k.material.restitution*N.material.restitution)),a.addEquation(E),k.allowSleep&&k.type===qt.DYNAMIC&&k.sleepState===qt.SLEEPING&&N.sleepState===qt.AWAKE&&N.type!==qt.STATIC){const W=N.velocity.lengthSquared()+N.angularVelocity.lengthSquared(),q=N.sleepSpeedLimit**2;W>=q*2&&(k.wakeUpAfterNarrowphase=!0)}if(N.allowSleep&&N.type===qt.DYNAMIC&&N.sleepState===qt.SLEEPING&&k.sleepState===qt.AWAKE&&k.type!==qt.STATIC){const W=k.velocity.lengthSquared()+k.angularVelocity.lengthSquared(),q=k.sleepSpeedLimit**2;W>=q*2&&(N.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(k,N,!0),this.collisionMatrixPrevious.get(k,N)||(_u.body=N,_u.contact=E,k.dispatchEvent(_u),_u.body=k,N.dispatchEvent(_u)),this.bodyOverlapKeeper.set(k.id,N.id),this.shapeOverlapKeeper.set(z.id,L.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=$n.now()-d,d=$n.now()),v=0;v!==r;v++){const M=o[v];M.wakeUpAfterNarrowphase&&(M.wakeUp(),M.wakeUpAfterNarrowphase=!1)}for(y=f.length,v=0;v!==y;v++){const M=f[v];M.update();for(let E=0,k=M.equations.length;E!==k;E++){const N=M.equations[E];a.addEquation(N)}}a.solve(t,this),c&&(u.solve=$n.now()-d),a.removeAllEquations();const S=Math.pow;for(v=0;v!==r;v++){const M=o[v];if(M.type&h){const E=S(1-M.linearDamping,t),k=M.velocity;k.scale(E,k);const N=M.angularVelocity;if(N){const z=S(1-M.angularDamping,t);N.scale(z,N)}}}this.dispatchEvent(M4),c&&(d=$n.now());const I=this.stepnumber%(this.quatNormalizeSkip+1)===0,A=this.quatNormalizeFast;for(v=0;v!==r;v++)o[v].integrate(t,I,A);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=$n.now()-d),this.stepnumber+=1,this.dispatchEvent(E4);let D=!0;if(this.allowSleep)for(D=!1,v=0;v!==r;v++){const M=o[v];M.sleepTick(this.time),M.sleepState!==qt.SLEEPING&&(D=!0)}this.hasActiveBodies=D}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(qr,jr),t){for(let r=0,o=qr.length;r<o;r+=2)Su.bodyA=this.getBodyById(qr[r]),Su.bodyB=this.getBodyById(qr[r+1]),this.dispatchEvent(Su);Su.bodyA=Su.bodyB=null}if(e){for(let r=0,o=jr.length;r<o;r+=2)Cu.bodyA=this.getBodyById(jr[r]),Cu.bodyB=this.getBodyById(jr[r+1]),this.dispatchEvent(Cu);Cu.bodyA=Cu.bodyB=null}qr.length=jr.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(qr,jr),n){for(let r=0,o=qr.length;r<o;r+=2){const a=this.getShapeById(qr[r]),l=this.getShapeById(qr[r+1]);Xr.shapeA=a,Xr.shapeB=l,a&&(Xr.bodyA=a.body),l&&(Xr.bodyB=l.body),this.dispatchEvent(Xr)}Xr.bodyA=Xr.bodyB=Xr.shapeA=Xr.shapeB=null}if(i){for(let r=0,o=jr.length;r<o;r+=2){const a=this.getShapeById(jr[r]),l=this.getShapeById(jr[r+1]);Kr.shapeA=a,Kr.shapeB=l,a&&(Kr.bodyA=a.body),l&&(Kr.bodyB=l.body),this.dispatchEvent(Kr)}Kr.bodyA=Kr.bodyB=Kr.shapeA=Kr.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new ii;const J0=new En,$n=globalThis.performance||{};if(!$n.now){let s=Date.now();$n.timing&&$n.timing.navigationStart&&(s=$n.timing.navigationStart),$n.now=()=>Date.now()-s}new R;const E4={type:"postStep"},M4={type:"preStep"},_u={type:qt.COLLIDE_EVENT_NAME,body:null,contact:null},k4=[],A4=[],N4=[],R4=[],qr=[],jr=[],Su={type:"beginContact",bodyA:null,bodyB:null},Cu={type:"endContact",bodyA:null,bodyB:null},Xr={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Kr={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},lS={type:"change"},Q0={type:"start"},cS={type:"end"};class D4 extends al{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new H,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:El.ROTATE,MIDDLE:El.DOLLY,RIGHT:El.PAN},this.touches={ONE:Ml.ROTATE,TWO:Ml.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(O){O.addEventListener("keydown",re),this._domElementKeyEvents=O},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(lS),n.update(),r=i.NONE},this.update=function(){const O=new H,X=new Va().setFromUnitVectors(t.up,new H(0,1,0)),Pt=X.clone().invert(),Xt=new H,Wt=new Va,oe=2*Math.PI;return function(){const Me=n.object.position;O.copy(Me).sub(n.target),O.applyQuaternion(X),a.setFromVector3(O),n.autoRotate&&r===i.NONE&&T(C()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Ne=n.minAzimuthAngle,Ge=n.maxAzimuthAngle;return isFinite(Ne)&&isFinite(Ge)&&(Ne<-Math.PI?Ne+=oe:Ne>Math.PI&&(Ne-=oe),Ge<-Math.PI?Ge+=oe:Ge>Math.PI&&(Ge-=oe),Ne<=Ge?a.theta=Math.max(Ne,Math.min(Ge,a.theta)):a.theta=a.theta>(Ne+Ge)/2?Math.max(Ne,a.theta):Math.min(Ge,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),O.setFromSpherical(a),O.applyQuaternion(Pt),Me.copy(n.target).add(O),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||Xt.distanceToSquared(n.object.position)>o||8*(1-Wt.dot(n.object.quaternion))>o?(n.dispatchEvent(lS),Xt.copy(n.object.position),Wt.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ct),n.domElement.removeEventListener("pointerdown",bt),n.domElement.removeEventListener("pointercancel",Ut),n.domElement.removeEventListener("wheel",se),n.domElement.removeEventListener("pointermove",Rt),n.domElement.removeEventListener("pointerup",Ct),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",re)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new z_,l=new z_;let c=1;const u=new H;let h=!1;const d=new kt,f=new kt,p=new kt,g=new kt,m=new kt,x=new kt,v=new kt,y=new kt,b=new kt,w=[],_={};function C(){return 2*Math.PI/60/60*n.autoRotateSpeed}function S(){return Math.pow(.95,n.zoomSpeed)}function T(O){l.theta-=O}function I(O){l.phi-=O}const A=function(){const O=new H;return function(Pt,Xt){O.setFromMatrixColumn(Xt,0),O.multiplyScalar(-Pt),u.add(O)}}(),D=function(){const O=new H;return function(Pt,Xt){n.screenSpacePanning===!0?O.setFromMatrixColumn(Xt,1):(O.setFromMatrixColumn(Xt,0),O.crossVectors(n.object.up,O)),O.multiplyScalar(Pt),u.add(O)}}(),M=function(){const O=new H;return function(Pt,Xt){const Wt=n.domElement;if(n.object.isPerspectiveCamera){const oe=n.object.position;O.copy(oe).sub(n.target);let ie=O.length();ie*=Math.tan(n.object.fov/2*Math.PI/180),A(2*Pt*ie/Wt.clientHeight,n.object.matrix),D(2*Xt*ie/Wt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(A(Pt*(n.object.right-n.object.left)/n.object.zoom/Wt.clientWidth,n.object.matrix),D(Xt*(n.object.top-n.object.bottom)/n.object.zoom/Wt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function E(O){n.object.isPerspectiveCamera?c/=O:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*O)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(O){n.object.isPerspectiveCamera?c*=O:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/O)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function N(O){d.set(O.clientX,O.clientY)}function z(O){v.set(O.clientX,O.clientY)}function L(O){g.set(O.clientX,O.clientY)}function $(O){f.set(O.clientX,O.clientY),p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const X=n.domElement;T(2*Math.PI*p.x/X.clientHeight),I(2*Math.PI*p.y/X.clientHeight),d.copy(f),n.update()}function W(O){y.set(O.clientX,O.clientY),b.subVectors(y,v),b.y>0?E(S()):b.y<0&&k(S()),v.copy(y),n.update()}function q(O){m.set(O.clientX,O.clientY),x.subVectors(m,g).multiplyScalar(n.panSpeed),M(x.x,x.y),g.copy(m),n.update()}function G(O){O.deltaY<0?k(S()):O.deltaY>0&&E(S()),n.update()}function j(O){let X=!1;switch(O.code){case n.keys.UP:M(0,n.keyPanSpeed),X=!0;break;case n.keys.BOTTOM:M(0,-n.keyPanSpeed),X=!0;break;case n.keys.LEFT:M(n.keyPanSpeed,0),X=!0;break;case n.keys.RIGHT:M(-n.keyPanSpeed,0),X=!0;break}X&&(O.preventDefault(),n.update())}function rt(){if(w.length===1)d.set(w[0].pageX,w[0].pageY);else{const O=.5*(w[0].pageX+w[1].pageX),X=.5*(w[0].pageY+w[1].pageY);d.set(O,X)}}function lt(){if(w.length===1)g.set(w[0].pageX,w[0].pageY);else{const O=.5*(w[0].pageX+w[1].pageX),X=.5*(w[0].pageY+w[1].pageY);g.set(O,X)}}function Y(){const O=w[0].pageX-w[1].pageX,X=w[0].pageY-w[1].pageY,Pt=Math.sqrt(O*O+X*X);v.set(0,Pt)}function vt(){n.enableZoom&&Y(),n.enablePan&&lt()}function xt(){n.enableZoom&&Y(),n.enableRotate&&rt()}function mt(O){if(w.length==1)f.set(O.pageX,O.pageY);else{const Pt=Gt(O),Xt=.5*(O.pageX+Pt.x),Wt=.5*(O.pageY+Pt.y);f.set(Xt,Wt)}p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const X=n.domElement;T(2*Math.PI*p.x/X.clientHeight),I(2*Math.PI*p.y/X.clientHeight),d.copy(f)}function ft(O){if(w.length===1)m.set(O.pageX,O.pageY);else{const X=Gt(O),Pt=.5*(O.pageX+X.x),Xt=.5*(O.pageY+X.y);m.set(Pt,Xt)}x.subVectors(m,g).multiplyScalar(n.panSpeed),M(x.x,x.y),g.copy(m)}function it(O){const X=Gt(O),Pt=O.pageX-X.x,Xt=O.pageY-X.y,Wt=Math.sqrt(Pt*Pt+Xt*Xt);y.set(0,Wt),b.set(0,Math.pow(y.y/v.y,n.zoomSpeed)),E(b.y),v.copy(y)}function tt(O){n.enableZoom&&it(O),n.enablePan&&ft(O)}function ut(O){n.enableZoom&&it(O),n.enableRotate&&mt(O)}function bt(O){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(O.pointerId),n.domElement.addEventListener("pointermove",Rt),n.domElement.addEventListener("pointerup",Ct)),_t(O),O.pointerType==="touch"?V(O):Ot(O))}function Rt(O){n.enabled!==!1&&(O.pointerType==="touch"?F(O):Ht(O))}function Ct(O){At(O),w.length===0&&(n.domElement.releasePointerCapture(O.pointerId),n.domElement.removeEventListener("pointermove",Rt),n.domElement.removeEventListener("pointerup",Ct)),n.dispatchEvent(cS),r=i.NONE}function Ut(O){At(O)}function Ot(O){let X;switch(O.button){case 0:X=n.mouseButtons.LEFT;break;case 1:X=n.mouseButtons.MIDDLE;break;case 2:X=n.mouseButtons.RIGHT;break;default:X=-1}switch(X){case El.DOLLY:if(n.enableZoom===!1)return;z(O),r=i.DOLLY;break;case El.ROTATE:if(O.ctrlKey||O.metaKey||O.shiftKey){if(n.enablePan===!1)return;L(O),r=i.PAN}else{if(n.enableRotate===!1)return;N(O),r=i.ROTATE}break;case El.PAN:if(O.ctrlKey||O.metaKey||O.shiftKey){if(n.enableRotate===!1)return;N(O),r=i.ROTATE}else{if(n.enablePan===!1)return;L(O),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(Q0)}function Ht(O){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;$(O);break;case i.DOLLY:if(n.enableZoom===!1)return;W(O);break;case i.PAN:if(n.enablePan===!1)return;q(O);break}}function se(O){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(O.preventDefault(),n.dispatchEvent(Q0),G(O),n.dispatchEvent(cS))}function re(O){n.enabled===!1||n.enablePan===!1||j(O)}function V(O){switch(Lt(O),w.length){case 1:switch(n.touches.ONE){case Ml.ROTATE:if(n.enableRotate===!1)return;rt(),r=i.TOUCH_ROTATE;break;case Ml.PAN:if(n.enablePan===!1)return;lt(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case Ml.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;vt(),r=i.TOUCH_DOLLY_PAN;break;case Ml.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;xt(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(Q0)}function F(O){switch(Lt(O),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;mt(O),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;ft(O),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;tt(O),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ut(O),n.update();break;default:r=i.NONE}}function ct(O){n.enabled!==!1&&O.preventDefault()}function _t(O){w.push(O)}function At(O){delete _[O.pointerId];for(let X=0;X<w.length;X++)if(w[X].pointerId==O.pointerId){w.splice(X,1);return}}function Lt(O){let X=_[O.pointerId];X===void 0&&(X=new kt,_[O.pointerId]=X),X.set(O.pageX,O.pageY)}function Gt(O){const X=O.pointerId===w[0].pointerId?w[1]:w[0];return _[X.pointerId]}n.domElement.addEventListener("contextmenu",ct),n.domElement.addEventListener("pointerdown",bt),n.domElement.addEventListener("pointercancel",Ut),n.domElement.addEventListener("wheel",se,{passive:!1}),this.update()}}class Qv{constructor(){this.meshes=[],this.bodies=[],this.constraints=[]}syncMeshesToBodies(){this.meshes.forEach((t,e)=>{t.position.x=this.bodies[e].position.x,t.position.y=this.bodies[e].position.y,t.position.z=this.bodies[e].position.z,t.quaternion.x=this.bodies[e].quaternion.x,t.quaternion.y=this.bodies[e].quaternion.y,t.quaternion.z=this.bodies[e].quaternion.z,t.quaternion.w=this.bodies[e].quaternion.w})}}var fl=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function $4(s){var t=s.default;if(typeof t=="function"){var e=function(){return t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),e}function tr(s,t){this.current=s,this.next=t,this._inNormal=this.inwardsNormal(),this._outNormal=this.outwardsNormal()}tr.prototype.outwardsNormal=function(){var s=this.inwardsNormal();return[-s[0],-s[1]]};tr.prototype.inwardsNormal=function(){var s=this.next[0]-this.current[0],t=this.next[1]-this.current[1],e=Math.sqrt(s*s+t*t);if(e===0)throw new Error("Vertices overlap");return[-t/e,s/e]};tr.prototype.offset=function(s,t){return tr.offsetEdge(this.current,this.next,s,t)};tr.prototype.inverseOffset=function(s,t){return tr.offsetEdge(this.next,this.current,s,t)};tr.offsetEdge=function(s,t,e,n){return new tr([s[0]+e,s[1]+n],[t[0]+e,t[1]+n])};tr.prototype.inverse=function(){return new tr(this.next,this.current)};var L4=tr,q2={exports:{}},Ai={exports:{}},j2={NORMAL:0,NON_CONTRIBUTING:1,SAME_TRANSITION:2,DIFFERENT_TRANSITION:3},tb={exports:{}};tb.exports=rh;tb.exports.default=rh;function rh(s,t){if(!(this instanceof rh))return new rh(s,t);if(this.data=s||[],this.length=this.data.length,this.compare=t||F4,this.length>0)for(var e=(this.length>>1)-1;e>=0;e--)this._down(e)}function F4(s,t){return s<t?-1:s>t?1:0}rh.prototype={push:function(s){this.data.push(s),this.length++,this._up(this.length-1)},pop:function(){if(this.length!==0){var s=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),s}},peek:function(){return this.data[0]},_up:function(s){for(var t=this.data,e=this.compare,n=t[s];s>0;){var i=s-1>>1,r=t[i];if(e(n,r)>=0)break;t[s]=r,s=i}t[s]=n},_down:function(s){for(var t=this.data,e=this.compare,n=this.length>>1,i=t[s];s<n;){var r=(s<<1)+1,o=r+1,a=t[r];if(o<this.length&&e(t[o],a)<0&&(r=o,a=t[o]),e(a,i)>=0)break;t[s]=a,s=r}t[s]=i}};function rr(){}rr.prototype.clear=function(){this._root=null,this.size=0};rr.prototype.find=function(s){for(var t=this._root;t!==null;){var e=this._comparator(s,t.data);if(e===0)return t.data;t=t.get_child(e>0)}return null};rr.prototype.findIter=function(s){for(var t=this._root,e=this.iterator();t!==null;){var n=this._comparator(s,t.data);if(n===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(n>0)}return null};rr.prototype.lowerBound=function(s){for(var t=this._root,e=this.iterator(),n=this._comparator;t!==null;){var i=n(s,t.data);if(i===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(i>0)}for(var r=e._ancestors.length-1;r>=0;--r)if(t=e._ancestors[r],n(s,t.data)<0)return e._cursor=t,e._ancestors.length=r,e;return e._ancestors.length=0,e};rr.prototype.upperBound=function(s){for(var t=this.lowerBound(s),e=this._comparator;t.data()!==null&&e(t.data(),s)===0;)t.next();return t};rr.prototype.min=function(){var s=this._root;if(s===null)return null;for(;s.left!==null;)s=s.left;return s.data};rr.prototype.max=function(){var s=this._root;if(s===null)return null;for(;s.right!==null;)s=s.right;return s.data};rr.prototype.iterator=function(){return new Zc(this)};rr.prototype.each=function(s){for(var t=this.iterator(),e;(e=t.next())!==null;)if(s(e)===!1)return};rr.prototype.reach=function(s){for(var t=this.iterator(),e;(e=t.prev())!==null;)if(s(e)===!1)return};function Zc(s){this._tree=s,this._ancestors=[],this._cursor=null}Zc.prototype.data=function(){return this._cursor!==null?this._cursor.data:null};Zc.prototype.next=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._minNode(s)}else if(this._cursor.right===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.right===t)}else this._ancestors.push(this._cursor),this._minNode(this._cursor.right);return this._cursor!==null?this._cursor.data:null};Zc.prototype.prev=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._maxNode(s)}else if(this._cursor.left===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.left===t)}else this._ancestors.push(this._cursor),this._maxNode(this._cursor.left);return this._cursor!==null?this._cursor.data:null};Zc.prototype._minNode=function(s){for(;s.left!==null;)this._ancestors.push(s),s=s.left;this._cursor=s};Zc.prototype._maxNode=function(s){for(;s.right!==null;)this._ancestors.push(s),s=s.right;this._cursor=s};var X2=rr,P4=X2;function fc(s){this.data=s,this.left=null,this.right=null,this.red=!0}fc.prototype.get_child=function(s){return s?this.right:this.left};fc.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Sm(s){this._root=null,this._comparator=s,this.size=0}Sm.prototype=new P4;Sm.prototype.insert=function(s){var t=!1;if(this._root===null)this._root=new fc(s),t=!0,this.size++;else{var e=new fc(void 0),n=0,i=0,r=null,o=e,a=null,l=this._root;for(o.right=this._root;;){if(l===null?(l=new fc(s),a.set_child(n,l),t=!0,this.size++):fi(l.left)&&fi(l.right)&&(l.red=!0,l.left.red=!1,l.right.red=!1),fi(l)&&fi(a)){var c=o.right===r;l===a.get_child(i)?o.set_child(c,oh(r,!i)):o.set_child(c,K2(r,!i))}var u=this._comparator(l.data,s);if(u===0)break;i=n,n=u<0,r!==null&&(o=r),r=a,a=l,l=l.get_child(n)}this._root=e.right}return this._root.red=!1,t};Sm.prototype.remove=function(s){if(this._root===null)return!1;var t=new fc(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=null,o=1;e.get_child(o)!==null;){var a=o;i=n,n=e,e=e.get_child(o);var l=this._comparator(s,e.data);if(o=l>0,l===0&&(r=e),!fi(e)&&!fi(e.get_child(o))){if(fi(e.get_child(!o))){var c=oh(e,o);n.set_child(a,c),n=c}else if(!fi(e.get_child(!o))){var u=n.get_child(!a);if(u!==null)if(!fi(u.get_child(!a))&&!fi(u.get_child(a)))n.red=!1,u.red=!0,e.red=!0;else{var h=i.right===n;fi(u.get_child(a))?i.set_child(h,K2(n,a)):fi(u.get_child(!a))&&i.set_child(h,oh(n,a));var d=i.get_child(h);d.red=!0,e.red=!0,d.left.red=!1,d.right.red=!1}}}}return r!==null&&(r.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this.size--),this._root=t.right,this._root!==null&&(this._root.red=!1),r!==null};function fi(s){return s!==null&&s.red}function oh(s,t){var e=s.get_child(!t);return s.set_child(!t,e.get_child(t)),e.set_child(t,s),s.red=!0,e.red=!1,e}function K2(s,t){return s.set_child(!t,oh(s.get_child(!t),!t)),oh(s,t)}var O4=Sm,z4=X2;function ah(s){this.data=s,this.left=null,this.right=null}ah.prototype.get_child=function(s){return s?this.right:this.left};ah.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Cm(s){this._root=null,this._comparator=s,this.size=0}Cm.prototype=new z4;Cm.prototype.insert=function(s){if(this._root===null)return this._root=new ah(s),this.size++,!0;for(var t=0,e=null,n=this._root;;){if(n===null)return n=new ah(s),e.set_child(t,n),ret=!0,this.size++,!0;if(this._comparator(n.data,s)===0)return!1;t=this._comparator(n.data,s)<0,e=n,n=n.get_child(t)}};Cm.prototype.remove=function(s){if(this._root===null)return!1;var t=new ah(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=1;e.get_child(r)!==null;){n=e,e=e.get_child(r);var o=this._comparator(s,e.data);r=o>0,o===0&&(i=e)}return i!==null?(i.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this._root=t.right,this.size--,!0):!1};var B4=Cm,U4={RBTree:O4,BinTree:B4},eb=function(t,e,n){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])},uS=eb,V4=j2;function Y2(s,t,e,n,i){this.left=t,this.point=s,this.otherEvent=e,this.isSubject=n,this.type=i||V4.NORMAL,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.inResult=!1,this.resultInOut=!1}Y2.prototype={isBelow:function(s){return this.left?uS(this.point,this.otherEvent.point,s)>0:uS(this.otherEvent.point,this.point,s)>0},isAbove:function(s){return!this.isBelow(s)},isVertical:function(){return this.point[0]===this.otherEvent.point[0]}};var W4=Y2,G4=eb,Z2=function(t,e){var n=t.point,i=e.point;return n[0]>i[0]?1:n[0]<i[0]?-1:n[1]!==i[1]?n[1]>i[1]?1:-1:H4(t,e,n)};function H4(s,t,e,n){return s.left!==t.left?s.left?1:-1:G4(e,s.otherEvent.point,t.otherEvent.point)!==0?s.isBelow(t.otherEvent.point)?-1:1:!s.isSubject&&t.isSubject?1:-1}var J2=function(t,e){return t[0]===e[0]&&t[1]===e[1]},hS=eb,dS=Z2,tx=J2,q4=function(t,e){if(t===e)return 0;if(hS(t.point,t.otherEvent.point,e.point)!==0||hS(t.point,t.otherEvent.point,e.otherEvent.point)!==0)return tx(t.point,e.point)?t.isBelow(e.otherEvent.point)?-1:1:t.point[0]===e.point[0]?t.point[1]<e.point[1]?-1:1:dS(t,e)===1?e.isAbove(t.point)?-1:1:t.isBelow(e.point)?-1:1;if(t.isSubject===e.isSubject){if(tx(t.point,e.point))return tx(t.otherEvent.point,e.otherEvent.point)?0:t.contourId>e.contourId?1:-1}else return t.isSubject?-1:1;return dS(t,e)===1?1:-1},fS=1e-9;function Pf(s,t){return s[0]*t[1]-s[1]*t[0]}function Tu(s,t){return s[0]*t[0]+s[1]*t[1]}var j4=function(s,t,e,n,i){var r=[t[0]-s[0],t[1]-s[1]],o=[n[0]-e[0],n[1]-e[1]];function a(b,w,_){return[b[0]+w*_[0],b[1]+w*_[1]]}var l=[e[0]-s[0],e[1]-s[1]],c=Pf(r,o),u=c*c,h=Tu(r,r),d=Tu(o,o);if(u>fS*h*d){var f=Pf(l,o)/c;if(f<0||f>1)return null;var p=Pf(l,r)/c;return p<0||p>1||i?null:[a(s,f,r)]}var g=Tu(l,l);if(c=Pf(l,r),u=c*c,u>fS*h*g)return null;var m=Tu(r,l)/h,x=m+Tu(r,o)/h,v=Math.min(m,x),y=Math.max(m,x);return v<=1&&y>=0?v===1?i?null:[a(s,v>0?v:0,r)]:y===0?i?null:[a(s,y<1?y:1,r)]:i&&v===0&&y===1?null:[a(s,v>0?v:0,r),a(s,y<1?y:1,r)]:null},Ha=0,Ec=1,qa=2,Mh=3,Ip=[],Ma=j2,X4=tb.exports,K4=U4.RBTree,Ep=W4,Mc=Z2,Y4=q4,Z4=j4,pr=J2,pS=Math.max,zx=Math.min;function J4(s,t,e,n,i,r){var o=new Ep(s,!1,void 0,e),a=new Ep(t,!1,o,e);o.otherEvent=a,o.contourId=a.contourId=n,Mc(o,a)>0?a.left=!0:o.left=!0,r[0]=zx(r[0],s[0]),r[1]=zx(r[1],s[1]),r[2]=pS(r[2],s[0]),r[3]=pS(r[3],s[1]),i.push(o),i.push(a)}var Bx=0;function Ux(s,t,e,n,i){var r,o;if(typeof s[0][0]=="number")for(r=0,o=s.length-1;r<o;r++)J4(s[r],s[r+1],t,e+1,n,i);else for(r=0,o=s.length;r<o;r++)Bx++,Ux(s[r],t,Bx,n,i)}function Q2(s,t,e,n){var i=new X4(null,Mc);return Bx=0,Ux(s,!0,0,i,e),Ux(t,!1,0,i,n),i}function Ql(s,t,e,n){t===null?(s.inOut=!1,s.otherInOut=!0):s.isSubject===t.isSubject?(s.inOut=!t.inOut,s.otherInOut=t.otherInOut):(s.inOut=!t.otherInOut,s.otherInOut=t.isVertical()?!t.inOut:t.inOut),t&&(s.prevInResult=!mS(t,n)||t.isVertical()?t.prevInResult:t),s.inResult=mS(s,n)}function mS(s,t){switch(s.type){case Ma.NORMAL:switch(t){case Ha:return!s.otherInOut;case Ec:return s.otherInOut;case qa:return s.isSubject&&s.otherInOut||!s.isSubject&&!s.otherInOut;case Mh:return!0}case Ma.SAME_TRANSITION:return t===Ha||t===Ec;case Ma.DIFFERENT_TRANSITION:return t===qa;case Ma.NON_CONTRIBUTING:return!1}return!1}function hp(s,t,e){var n=Z4(s.point,s.otherEvent.point,t.point,t.otherEvent.point),i=n?n.length:0;if(i===0||i===1&&(pr(s.point,t.point)||pr(s.otherEvent.point,t.otherEvent.point)))return 0;if(i===2&&s.isSubject===t.isSubject)return s.contourId===t.contourId&&console.warn("Edges of the same polygon overlap",s.point,s.otherEvent.point,t.point,t.otherEvent.point),0;if(i===1)return!pr(s.point,n[0])&&!pr(s.otherEvent.point,n[0])&&Yr(s,n[0],e),!pr(t.point,n[0])&&!pr(t.otherEvent.point,n[0])&&Yr(t,n[0],e),1;var r=[],o=!1,a=!1;return pr(s.point,t.point)?o=!0:Mc(s,t)===1?r.push(t,s):r.push(s,t),pr(s.otherEvent.point,t.otherEvent.point)?a=!0:Mc(s.otherEvent,t.otherEvent)===1?r.push(t.otherEvent,s.otherEvent):r.push(s.otherEvent,t.otherEvent),o&&a||o?(s.type=Ma.NON_CONTRIBUTING,t.type=s.inOut===t.inOut?Ma.SAME_TRANSITION:Ma.DIFFERENT_TRANSITION,o&&!a&&Yr(r[0].otherEvent,r[1].point,e),2):a?(Yr(r[0],r[1].point,e),3):r[0]!==r[3].otherEvent?(Yr(r[0],r[1].point,e),Yr(r[1],r[2].point,e),3):(Yr(r[0],r[1].point,e),Yr(r[3].otherEvent,r[2].point,e),3)}function Yr(s,t,e){var n=new Ep(t,!1,s,s.isSubject),i=new Ep(t,!0,s.otherEvent,s.isSubject);return pr(s.point,s.otherEvent.point)&&console.warn("what is that?",s),n.contourId=i.contourId=s.contourId,Mc(i,s.otherEvent)>0&&(s.otherEvent.left=!0,i.left=!1),s.otherEvent.otherEvent=i,s.otherEvent=n,e.push(i),e.push(n),e}function tI(s,t,e,n,i,r){for(var a=[],c,u,o=new K4(Y4),a=[],l=zx(n[2],i[2]),c,u;s.length;){var h=s.pop();if(a.push(h),r===Ha&&h.point[0]>l||r===qa&&h.point[0]>n[2])break;if(h.left){if(o.insert(h),u=o.findIter(h),c=o.findIter(h),h.iterator=o.findIter(h),!c||!u){console.log("brute");var d=Q4(o);c=d[0],u=d[1]}if(c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),Ql(h,c.data(),o,r),u.data()&&hp(h,u.data(),s)===2&&(Ql(h,c.data(),o,r),Ql(h,u.data(),o,r)),c.data()&&hp(c.data(),h,s)===2){var f=o.findIter(c.data());f.data()!==o.min()?f.prev():(f=o.findIter(o.max()),f.next()),Ql(c.data(),f.data(),o,r),Ql(h,c.data(),o,r)}}else{if(h=h.otherEvent,u=o.findIter(h),c=o.findIter(h),!(c&&u))continue;c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),o.remove(h),u.data()&&c.data()&&hp(c.data(),u.data(),s)}}return a}function Q4(s,t){for(var e=s.iterator(),n=s.iterator(),i=s.iterator(),r;(r=i.next())!==null&&(e.next(),n.next(),r!==event););return[e,n]}function tU(s,t,e){var n=s[t];s[t]=s[e],s[e]=n}function eU(s){return s.reverse()}function gS(s){return Object.prototype.toString.call(s)==="[object Array]"}function xS(s,t){return gS(s[0])&&!gS(s[0][0])&&(s=[s]),s[t]=[],s}function nU(s){var t,e,n,i=[];for(e=0,n=s.length;e<n;e++)t=s[e],(t.left&&t.inResult||!t.left&&t.otherEvent.inResult)&&i.push(t);for(var r=!1;!r;)for(r=!0,e=0,n=i.length;e<n;e++)e+1<n&&Mc(i[e],i[e+1])===1&&(tU(i,e,e+1),r=!1);for(e=0,n=i.length;e<n;e++)i[e].pos=e;for(e=0,n=i.length;e<n;e++)if(!i[e].left){var o=i[e].pos;i[e].pos=i[e].otherEvent.pos,i[e].otherEvent.pos=o}return i}function sU(s){var t,e,n=nU(s),i=Array(n.length),r=[],o=[],a=[],l={};for(t=0,e=n.length;t<e;t++)if(!i[t]){var c=[];r.push(c);var u=r.length-1;if(o.push(0),a.push(-1),n[t].prevInResult){var h=n[t].prevInResult.contourId;n[t].prevInResult.resultInOut?l[h]&&(xS(r[a[h]],u),a[u]=a[h],o[u]=o[h],l[u]=!0):(xS(r[h],u),a[u]=h,o[u]=o[h]+1,l[u]=!0)}var d=t,f=n[t].point;for(c.push(f);d>=t;)i[d]=!0,n[d].left?(n[d].resultInOut=!1,n[d].contourId=u):(n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u),d=n[d].pos,i[d]=!0,c.push(n[d].point),d=iU(d,n,i);d=d===-1?t:d,i[d]=i[n[d].pos]=!0,n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u,o[u]&1&&eU(c)}return r}function iU(s,t,e){for(var n=s+1,i=t.length;n<i&&pr(t[n].point,t[s].point);)if(e[n])n=n+1;else return n;for(n=s-1;e[n];)n=n-1;return n}function rU(s,t,e){var n=null;return s.length*t.length===0&&(e===Ha?n=Ip:e===qa?n=s:(e===Ec||e===Mh)&&(n=s.length===0?t:s)),n}function oU(s,t,e,n,i){var r=null;return(e[0]>n[2]||n[0]>e[2]||e[1]>n[3]||n[1]>e[3])&&(i===Ha?r=Ip:i===qa?r=s:(i===Ec||i===Mh)&&(r=s.concat(t))),r}function kh(s,t,e){var n=rU(s,t,e);if(n)return n===Ip?null:n;var i=[1/0,1/0,-1/0,-1/0],r=[1/0,1/0,-1/0,-1/0],o=Q2(s,t,i,r);if(n=oU(s,t,i,r,e),n)return n===Ip?null:n;var a=tI(o,s,t,i,r,e);return sU(a)}Ai.exports=kh;Ai.exports.union=function(s,t){return kh(s,t,Ec)};Ai.exports.diff=function(s,t){return kh(s,t,qa)};Ai.exports.xor=function(s,t){return kh(s,t,Mh)};Ai.exports.intersection=function(s,t){return kh(s,t,Ha)};Ai.exports.operations={INTERSECTION:Ha,DIFFERENCE:qa,UNION:Ec,XOR:Mh};Ai.exports.fillQueue=Q2;Ai.exports.computeFields=Ql;Ai.exports.subdivideSegments=tI;Ai.exports.divideSegment=Yr;Ai.exports.possibleIntersection=hp;(function(s){s.exports=Ai.exports})(q2);var Ah={},aU=Ah.isArray=Array.isArray||function(s){return Object.prototype.toString.call(s)==="[object Array]"},ex=Ah.isNonEmptyArray=function(s){return aU(s)&&s.length};Ah.equals=function(t,e){return t[0]===e[0]&&t[1]===e[1]};Ah.orientRings=function s(t,e,n){e=e||0;var i,r;if(ex(t)&&typeof t[0][0]=="number"){var o=0,a=t;for(i=0,r=a.length;i<r;i++){var l=a[i],c=a[(i+1)%r];o+=l[0]*c[1],o-=c[0]*l[1]}(!n&&o>0||n&&o<0)&&a.reverse()}else for(i=0,r=t.length;i<r;i++)s(t[i],e+1,i>0);if(e===0&&ex(t)&&ex(t[0])&&typeof t[0][0][0]=="number"){var u=t[0].slice(0,1)[0];t[0].pop(),t[0].push([u[0],u[1]])}return t};var lU=L4,lh=q2.exports,nb=Ah,ch=nb.isArray,eI=nb.equals,Jc=nb.orientRings;function Zn(s,t){this.vertices=null,this.edges=null,this._closed=!1,this._distance=0,s&&this.data(s),this._arcSegments=t!==void 0?t:5}Zn.prototype.data=function(s){if(this._edges=[],!ch(s))throw new Error("Offset requires at least one coodinate to work with");return ch(s)&&typeof s[0]=="number"?this.vertices=s:(this.vertices=Jc(s),this._processContour(this.vertices,this._edges)),this};Zn.prototype._processContour=function(s,t){var e,n;if(ch(s[0])&&typeof s[0][0]=="number")for(n=s.length,eI(s[0],s[n-1])&&(n-=1),e=0;e<n;e++)t.push(new lU(s[e],s[(e+1)%n]));else for(e=0,n=s.length;e<n;e++)t.push([]),this._processContour(s[e],t[t.length-1])};Zn.prototype.arcSegments=function(s){return this._arcSegments=s,this};Zn.prototype.validate=function(s){var t=s.length;return typeof s[0]=="number"?[s]:(s[0][0]===s[t-1][0]&&s[0][1]===s[t-1][1]&&t>1&&(s=s.slice(0,t-1),this._closed=!0),s)};Zn.prototype.createArc=function(s,t,e,n,i,r,o){var a=Math.PI*2,l=Math.atan2(n[1]-t[1],n[0]-t[0]),c=Math.atan2(i[1]-t[1],i[0]-t[0]);r%2===0&&(r-=1),l<0&&(l+=a),c<0&&(c+=a);var u=l>c?l-c:l+a-c,h=(o?-u:a-u)/r;s.push(n);for(var d=1;d<r;++d)u=l+h*d,s.push([t[0]+Math.cos(u)*e,t[1]+Math.sin(u)*e]);return s.push(i),s};Zn.prototype.distance=function(s,t){return this._distance=s||0,this};Zn.degreesToUnits=function(s,t){switch(t){case"miles":s=s/69.047;break;case"feet":s=s/364568;break;case"kilometers":s=s/111.12;break;case"meters":case"metres":s=s/111120;break}return s};Zn.prototype.ensureLastPoint=function(s){return eI(s[0],s[s.length-1])||s.push([s[0][0],s[0][1]]),s};Zn.prototype.offset=function(s){return this.distance(s),this._distance===0?this.vertices:this._distance>0?this.margin(this._distance):this.padding(-this._distance)};Zn.prototype._offsetSegment=function(s,t,e,n){for(var i=[],r=[e.offset(e._inNormal[0]*n,e._inNormal[1]*n),e.inverseOffset(e._outNormal[0]*n,e._outNormal[1]*n)],o=0,a=2;o<a;o++){var l=r[o],c=r[(o+a-1)%a];this.createArc(i,o===0?s:t,n,c.next,l.current,this._arcSegments,!0)}return i};Zn.prototype.margin=function(s){if(this.distance(s),typeof this.vertices[0]=="number")return this.offsetPoint(this._distance);if(s===0)return this.vertices;var t=this.offsetLines(this._distance);return t=lh.union(this.vertices,t),Jc(t)};Zn.prototype.padding=function(s){if(this.distance(s),this._distance===0)return this.ensureLastPoint(this.vertices);if(this.vertices.length===2&&typeof this.vertices[0]=="number")return this.vertices;var t=this.offsetLines(this._distance),e=lh.diff(this.vertices,t);return Jc(e)};Zn.prototype.offsetLine=function(s){return s===0?this.vertices:Jc(this.offsetLines(s))};Zn.prototype.offsetLines=function(s){if(s<0)throw new Error("Cannot apply negative margin to the line");var t;if(this.distance(s),ch(this.vertices[0])&&typeof this.vertices[0][0]!="number")for(var e=0,n=this._edges.length;e<n;e++)t=e===0?this.offsetContour(this.vertices[e],this._edges[e]):lh.union(t,this.offsetContour(this.vertices[e],this._edges[e]));else t=this.vertices.length===1?this.offsetPoint():this.offsetContour(this.vertices,this._edges);return t};Zn.prototype.offsetContour=function(s,t){var e,n,i;if(ch(s[0])&&typeof s[0][0]=="number")for(n=0,i=s.length-1;n<i;n++){var r=this.ensureLastPoint(this._offsetSegment(s[n],s[n+1],t[n],this._distance));e=n===0?[this.ensureLastPoint(r)]:lh.union(e,this.ensureLastPoint(r))}else for(n=0,i=t.length;n<i;n++)e=n===0?this.offsetContour(s[n],t[n]):lh.union(e,this.offsetContour(s[n],t[n]));return e};Zn.prototype.offsetPoint=function(s){this.distance(s);var t=this._arcSegments*2,e=[],n=this.vertices,i=this._distance,r=0;t%2===0&&t++;for(var o=0;o<t;o++)r+=2*Math.PI/t,e.push([n[0]+i*Math.cos(r),n[1]+i*Math.sin(r)]);return Jc([this.ensureLastPoint(e)])};Zn.orientRings=Jc;var cU=Zn;function uU(s,t=!1){const e=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new os;let c=0;for(let u=0;u<s.length;++u){const h=s[u];let d=0;if(e!==(h.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in h.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(h.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in h.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(h.morphAttributes[f])}if(t){let f;if(e)f=h.index.count;else if(h.attributes.position!==void 0)f=h.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,u),c+=f}}if(e){let u=0;const h=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)h.push(f.getX(p)+u);u+=s[d].attributes.position.count}l.setIndex(h)}for(const u in r){const h=vS(r[u]);if(!h)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+u+" attribute."),null;l.setAttribute(u,h)}for(const u in o){const h=o[u][0].length;if(h===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[u]=[];for(let d=0;d<h;++d){const f=[];for(let g=0;g<o[u].length;++g)f.push(o[u][g][d]);const p=vS(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+u+" morphAttribute."),null;l.morphAttributes[u].push(p)}}return l}function vS(s){let t,e,n,i=0;for(let a=0;a<s.length;++a){const l=s[a];if(l.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(t===void 0&&(t=l.array.constructor),t!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=l.itemSize),e!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=l.normalized),n!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;i+=l.array.length}const r=new t(i);let o=0;for(let a=0;a<s.length;++a)r.set(s[a].array,o),o+=s[a].array.length;return new Js(r,e,n)}const nI=0,hU=1,dU=2,bS=2,nx=1.25,yS=1,dp=6*4+4+4,Vx=65535,fU=Math.pow(2,-24);class Of{constructor(){}}function _r(s,t,e){return e.min.x=t[s],e.min.y=t[s+1],e.min.z=t[s+2],e.max.x=t[s+3],e.max.y=t[s+4],e.max.z=t[s+5],e}function wS(s){let t=-1,e=-1/0;for(let n=0;n<3;n++){const i=s[n+3]-s[n];i>e&&(e=i,t=n)}return t}function _S(s,t){t.set(s)}function SS(s,t,e){let n,i;for(let r=0;r<3;r++){const o=r+3;n=s[r],i=t[r],e[r]=n<i?n:i,n=s[o],i=t[o],e[o]=n>i?n:i}}function zf(s,t,e){for(let n=0;n<3;n++){const i=t[s+2*n],r=t[s+2*n+1],o=i-r,a=i+r;o<e[n]&&(e[n]=o),a>e[n+3]&&(e[n+3]=a)}}function Iu(s){const t=s[3]-s[0],e=s[4]-s[1],n=s[5]-s[2];return 2*(t*e+e*n+n*t)}function pU(s,t){if(!s.index){const e=s.attributes.position.count,n=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;let i;e>65535?i=new Uint32Array(new n(4*e)):i=new Uint16Array(new n(2*e)),s.setIndex(new Js(i,1));for(let r=0;r<e;r++)i[r]=r}}function mU(s){if(!s.groups||!s.groups.length)return[{offset:0,count:s.index.count/3}];const t=[],e=new Set;for(const i of s.groups)e.add(i.start),e.add(i.start+i.count);const n=Array.from(e.values()).sort((i,r)=>i-r);for(let i=0;i<n.length-1;i++){const r=n[i],o=n[i+1];t.push({offset:r/3,count:(o-r)/3})}return t}function sx(s,t,e,n,i=null){let r=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,u=-1/0,h=1/0,d=1/0,f=1/0,p=-1/0,g=-1/0,m=-1/0;const x=i!==null;for(let v=t*6,y=(t+e)*6;v<y;v+=6){const b=s[v+0],w=s[v+1],_=b-w,C=b+w;_<r&&(r=_),C>l&&(l=C),x&&b<h&&(h=b),x&&b>p&&(p=b);const S=s[v+2],T=s[v+3],I=S-T,A=S+T;I<o&&(o=I),A>c&&(c=A),x&&S<d&&(d=S),x&&S>g&&(g=S);const D=s[v+4],M=s[v+5],E=D-M,k=D+M;E<a&&(a=E),k>u&&(u=k),x&&D<f&&(f=D),x&&D>m&&(m=D)}n[0]=r,n[1]=o,n[2]=a,n[3]=l,n[4]=c,n[5]=u,x&&(i[0]=h,i[1]=d,i[2]=f,i[3]=p,i[4]=g,i[5]=m)}function gU(s,t,e,n){let i=1/0,r=1/0,o=1/0,a=-1/0,l=-1/0,c=-1/0;for(let u=t*6,h=(t+e)*6;u<h;u+=6){const d=s[u+0];d<i&&(i=d),d>a&&(a=d);const f=s[u+2];f<r&&(r=f),f>l&&(l=f);const p=s[u+4];p<o&&(o=p),p>c&&(c=p)}n[0]=i,n[1]=r,n[2]=o,n[3]=a,n[4]=l,n[5]=c}function xU(s,t,e,n,i){let r=e,o=e+n-1;const a=i.pos,l=i.axis*2;for(;;){for(;r<=o&&t[r*6+l]<a;)r++;for(;r<=o&&t[o*6+l]>=a;)o--;if(r<o){for(let c=0;c<3;c++){let u=s[r*3+c];s[r*3+c]=s[o*3+c],s[o*3+c]=u;let h=t[r*6+c*2+0];t[r*6+c*2+0]=t[o*6+c*2+0],t[o*6+c*2+0]=h;let d=t[r*6+c*2+1];t[r*6+c*2+1]=t[o*6+c*2+1],t[o*6+c*2+1]=d}r++,o--}else return r}}const Zr=32,vU=(s,t)=>s.candidate-t.candidate,To=new Array(Zr).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Bf=new Float32Array(6);function bU(s,t,e,n,i,r){let o=-1,a=0;if(r===nI)o=wS(t),o!==-1&&(a=(t[o]+t[o+3])/2);else if(r===hU)o=wS(s),o!==-1&&(a=yU(e,n,i,o));else if(r===dU){const l=Iu(s);let c=nx*i;const u=n*6,h=(n+i)*6;for(let d=0;d<3;d++){const f=t[d],m=(t[d+3]-f)/Zr;if(i<Zr/4){const x=[...To];x.length=i;let v=0;for(let b=u;b<h;b+=6,v++){const w=x[v];w.candidate=e[b+2*d],w.count=0;const{bounds:_,leftCacheBounds:C,rightCacheBounds:S}=w;for(let T=0;T<3;T++)S[T]=1/0,S[T+3]=-1/0,C[T]=1/0,C[T+3]=-1/0,_[T]=1/0,_[T+3]=-1/0;zf(b,e,_)}x.sort(vU);let y=i;for(let b=0;b<y;b++){const w=x[b];for(;b+1<y&&x[b+1].candidate===w.candidate;)x.splice(b+1,1),y--}for(let b=u;b<h;b+=6){const w=e[b+2*d];for(let _=0;_<y;_++){const C=x[_];w>=C.candidate?zf(b,e,C.rightCacheBounds):(zf(b,e,C.leftCacheBounds),C.count++)}}for(let b=0;b<y;b++){const w=x[b],_=w.count,C=i-w.count,S=w.leftCacheBounds,T=w.rightCacheBounds;let I=0;_!==0&&(I=Iu(S)/l);let A=0;C!==0&&(A=Iu(T)/l);const D=yS+nx*(I*_+A*C);D<c&&(o=d,c=D,a=w.candidate)}}else{for(let y=0;y<Zr;y++){const b=To[y];b.count=0,b.candidate=f+m+y*m;const w=b.bounds;for(let _=0;_<3;_++)w[_]=1/0,w[_+3]=-1/0}for(let y=u;y<h;y+=6){let _=~~((e[y+2*d]-f)/m);_>=Zr&&(_=Zr-1);const C=To[_];C.count++,zf(y,e,C.bounds)}const x=To[Zr-1];_S(x.bounds,x.rightCacheBounds);for(let y=Zr-2;y>=0;y--){const b=To[y],w=To[y+1];SS(b.bounds,w.rightCacheBounds,b.rightCacheBounds)}let v=0;for(let y=0;y<Zr-1;y++){const b=To[y],w=b.count,_=b.bounds,S=To[y+1].rightCacheBounds;w!==0&&(v===0?_S(_,Bf):SS(_,Bf,Bf)),v+=w;let T=0,I=0;v!==0&&(T=Iu(Bf)/l);const A=i-v;A!==0&&(I=Iu(S)/l);const D=yS+nx*(T*v+I*A);D<c&&(o=d,c=D,a=b.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${r} used.`);return{axis:o,pos:a}}function yU(s,t,e,n){let i=0;for(let r=t,o=t+e;r<o;r++)i+=s[r*6+n*2];return i/e}function wU(s,t){const e=s.attributes.position,n=s.index.array,i=n.length/3,r=new Float32Array(i*6),o=e.normalized,a=e.array,l=e.offset||0;let c=3;e.isInterleavedBufferAttribute&&(c=e.data.stride);const u=["getX","getY","getZ"];for(let h=0;h<i;h++){const d=h*3,f=h*6;let p,g,m;o?(p=n[d+0],g=n[d+1],m=n[d+2]):(p=n[d+0]*c+l,g=n[d+1]*c+l,m=n[d+2]*c+l);for(let x=0;x<3;x++){let v,y,b;o?(v=e[u[x]](p),y=e[u[x]](g),b=e[u[x]](m)):(v=a[p+x],y=a[g+x],b=a[m+x]);let w=v;y<w&&(w=y),b<w&&(w=b);let _=v;y>_&&(_=y),b>_&&(_=b);const C=(_-w)/2,S=x*2;r[f+S+0]=w+C,r[f+S+1]=C+(Math.abs(w)+C)*fU,w<t[x]&&(t[x]=w),_>t[x+3]&&(t[x+3]=_)}}return r}function _U(s,t){function e(x){d&&d(x/f)}function n(x,v,y,b=null,w=0){if(!p&&w>=l&&(p=!0,c&&(console.warn(`MeshBVH: Max depth of ${l} reached when generating BVH. Consider increasing maxDepth.`),console.warn(s))),y<=u||w>=l)return e(v+y),x.offset=v,x.count=y,x;const _=bU(x.boundingData,b,o,v,y,h);if(_.axis===-1)return e(v+y),x.offset=v,x.count=y,x;const C=xU(a,o,v,y,_);if(C===v||C===v+y)e(v+y),x.offset=v,x.count=y;else{x.splitAxis=_.axis;const S=new Of,T=v,I=C-v;x.left=S,S.boundingData=new Float32Array(6),sx(o,T,I,S.boundingData,r),n(S,T,I,r,w+1);const A=new Of,D=C,M=y-I;x.right=A,A.boundingData=new Float32Array(6),sx(o,D,M,A.boundingData,r),n(A,D,M,r,w+1)}return x}pU(s,t);const i=new Float32Array(6),r=new Float32Array(6),o=wU(s,i),a=s.index.array,l=t.maxDepth,c=t.verbose,u=t.maxLeafTris,h=t.strategy,d=t.onProgress,f=s.index.count/3;let p=!1;const g=[],m=mU(s);if(m.length===1){const x=m[0],v=new Of;v.boundingData=i,gU(o,x.offset,x.count,r),n(v,x.offset,x.count,r),g.push(v)}else for(let x of m){const v=new Of;v.boundingData=new Float32Array(6),sx(o,x.offset,x.count,v.boundingData,r),n(v,x.offset,x.count,r),g.push(v)}return g}function SU(s,t){const e=_U(s,t);let n,i,r;const o=[],a=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let u=0;u<e.length;u++){const h=e[u];let d=l(h);const f=new a(dp*d);n=new Float32Array(f),i=new Uint32Array(f),r=new Uint16Array(f),c(0,h),o.push(f)}return o;function l(u){return u.count?1:1+l(u.left)+l(u.right)}function c(u,h){const d=u/4,f=u/2,p=!!h.count,g=h.boundingData;for(let m=0;m<6;m++)n[d+m]=g[m];if(p){const m=h.offset,x=h.count;return i[d+6]=m,r[f+14]=x,r[f+15]=Vx,u+dp}else{const m=h.left,x=h.right,v=h.splitAxis;let y;if(y=c(u+dp,m),y/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return i[d+6]=y/4,y=c(y,x),i[d+7]=v,y}}}class Ar{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let n=1/0,i=-1/0;for(let r=0,o=t.length;r<o;r++){const l=t[r][e];n=l<n?l:n,i=l>i?l:i}this.min=n,this.max=i}setFromPoints(t,e){let n=1/0,i=-1/0;for(let r=0,o=e.length;r<o;r++){const a=e[r],l=t.dot(a);n=l<n?l:n,i=l>i?l:i}this.min=n,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}Ar.prototype.setFromBox=function(){const s=new H;return function(e,n){const i=n.min,r=n.max;let o=1/0,a=-1/0;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let u=0;u<=1;u++){s.x=i.x*l+r.x*(1-l),s.y=i.y*c+r.y*(1-c),s.z=i.z*u+r.z*(1-u);const h=e.dot(s);o=Math.min(h,o),a=Math.max(h,a)}this.min=o,this.max=a}}();(function(){const s=new Ar;return function(e,n){const i=e.points,r=e.satAxes,o=e.satBounds,a=n.points,l=n.satAxes,c=n.satBounds;for(let u=0;u<3;u++){const h=o[u],d=r[u];if(s.setFromPoints(d,a),h.isSeparated(s))return!1}for(let u=0;u<3;u++){const h=c[u],d=l[u];if(s.setFromPoints(d,i),h.isSeparated(s))return!1}}})();const CU=function(){const s=new H,t=new H,e=new H;return function(i,r,o){const a=i.start,l=s,c=r.start,u=t;e.subVectors(a,c),s.subVectors(i.end,i.start),t.subVectors(r.end,r.start);const h=e.dot(u),d=u.dot(l),f=u.dot(u),p=e.dot(l),m=l.dot(l)*f-d*d;let x,v;m!==0?x=(h*d-p*f)/m:x=0,v=(h+x*d)/f,o.x=x,o.y=v}}(),sb=function(){const s=new kt,t=new H,e=new H;return function(i,r,o,a){CU(i,r,s);let l=s.x,c=s.y;if(l>=0&&l<=1&&c>=0&&c<=1){i.at(l,o),r.at(c,a);return}else if(l>=0&&l<=1){c<0?r.at(0,a):r.at(1,a),i.closestPointToPoint(a,!0,o);return}else if(c>=0&&c<=1){l<0?i.at(0,o):i.at(1,o),r.closestPointToPoint(o,!0,a);return}else{let u;l<0?u=i.start:u=i.end;let h;c<0?h=r.start:h=r.end;const d=t,f=e;if(i.closestPointToPoint(h,!0,t),r.closestPointToPoint(u,!0,e),d.distanceToSquared(h)<=f.distanceToSquared(u)){o.copy(d),a.copy(h);return}else{o.copy(u),a.copy(f);return}}}}(),TU=function(){const s=new H,t=new H,e=new Qr,n=new ro;return function(r,o){const{radius:a,center:l}=r,{a:c,b:u,c:h}=o;if(n.start=c,n.end=u,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a||(n.start=c,n.end=h,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a)||(n.start=u,n.end=h,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a))return!0;const g=o.getPlane(e);if(Math.abs(g.distanceToPoint(l))<=a){const x=g.projectPoint(l,t);if(o.containsPoint(x))return!0}return!1}}(),IU=1e-15;function Hl(s){return Math.abs(s)<IU}class ao extends gi{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new H),this.satBounds=new Array(4).fill().map(()=>new Ar),this.points=[this.a,this.b,this.c],this.sphere=new Th,this.plane=new Qr,this.needsUpdate=!0}intersectsSphere(t){return TU(t,this)}update(){const t=this.a,e=this.b,n=this.c,i=this.points,r=this.satAxes,o=this.satBounds,a=r[0],l=o[0];this.getNormal(a),l.setFromPoints(a,i);const c=r[1],u=o[1];c.subVectors(t,e),u.setFromPoints(c,i);const h=r[2],d=o[2];h.subVectors(e,n),d.setFromPoints(h,i);const f=r[3],p=o[3];f.subVectors(n,t),p.setFromPoints(f,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}ao.prototype.closestPointToSegment=function(){const s=new H,t=new H,e=new ro;return function(i,r=null,o=null){const{start:a,end:l}=i,c=this.points;let u,h=1/0;for(let d=0;d<3;d++){const f=(d+1)%3;e.start.copy(c[d]),e.end.copy(c[f]),sb(e,i,s,t),u=s.distanceToSquared(t),u<h&&(h=u,r&&r.copy(s),o&&o.copy(t))}return this.closestPointToPoint(a,s),u=a.distanceToSquared(s),u<h&&(h=u,r&&r.copy(s),o&&o.copy(a)),this.closestPointToPoint(l,s),u=l.distanceToSquared(s),u<h&&(h=u,r&&r.copy(s),o&&o.copy(l)),Math.sqrt(h)}}();ao.prototype.intersectsTriangle=function(){const s=new ao,t=new Array(3),e=new Array(3),n=new Ar,i=new Ar,r=new H,o=new H,a=new H,l=new H,c=new ro,u=new ro,h=new ro;return function(f,p=null){this.needsUpdate&&this.update(),f.isExtendedTriangle?f.needsUpdate&&f.update():(s.copy(f),s.update(),f=s);const g=this.plane,m=f.plane;if(Math.abs(g.normal.dot(m.normal))>1-1e-10){const x=this.satBounds,v=this.satAxes;e[0]=f.a,e[1]=f.b,e[2]=f.c;for(let w=0;w<4;w++){const _=x[w],C=v[w];if(n.setFromPoints(C,e),_.isSeparated(n))return!1}const y=f.satBounds,b=f.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let w=0;w<4;w++){const _=y[w],C=b[w];if(n.setFromPoints(C,t),_.isSeparated(n))return!1}for(let w=0;w<4;w++){const _=v[w];for(let C=0;C<4;C++){const S=b[C];if(r.crossVectors(_,S),n.setFromPoints(r,t),i.setFromPoints(r,e),n.isSeparated(i))return!1}}return p&&(console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),p.start.set(0,0,0),p.end.set(0,0,0)),!0}else{const x=this.points;let v=!1,y=0;for(let M=0;M<3;M++){const E=x[M],k=x[(M+1)%3];c.start.copy(E),c.end.copy(k),c.delta(o);const N=v?u.start:u.end,z=Hl(m.distanceToPoint(E));if(Hl(m.normal.dot(o))&&z){u.copy(c),y=2;break}if((m.intersectLine(c,N)||z)&&!Hl(N.distanceTo(k))){if(y++,v)break;v=!0}}if(y===1&&this.containsPoint(u.end))return p&&(p.start.copy(u.end),p.end.copy(u.end)),!0;if(y!==2)return!1;const b=f.points;let w=!1,_=0;for(let M=0;M<3;M++){const E=b[M],k=b[(M+1)%3];c.start.copy(E),c.end.copy(k),c.delta(a);const N=w?h.start:h.end,z=Hl(g.distanceToPoint(E));if(Hl(g.normal.dot(a))&&z){h.copy(c),_=2;break}if((g.intersectLine(c,N)||z)&&!Hl(N.distanceTo(k))){if(_++,w)break;w=!0}}if(_===1&&this.containsPoint(h.end))return p&&(p.start.copy(h.end),p.end.copy(h.end)),!0;if(_!==2)return!1;if(u.delta(o),h.delta(a),o.dot(a)<0){let M=h.start;h.start=h.end,h.end=M}const C=u.start.dot(o),S=u.end.dot(o),T=h.start.dot(o),I=h.end.dot(o),A=S<T,D=C<I;return C!==I&&T!==S&&A===D?!1:(p&&(l.subVectors(u.start,h.start),l.dot(o)>0?p.start.copy(u.start):p.start.copy(h.start),l.subVectors(u.end,h.end),l.dot(o)<0?p.end.copy(u.end):p.end.copy(h.end)),!0)}}}();ao.prototype.distanceToPoint=function(){const s=new H;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();ao.prototype.distanceToTriangle=function(){const s=new H,t=new H,e=["a","b","c"],n=new ro,i=new ro;return function(o,a=null,l=null){const c=a||l?n:null;if(this.intersectsTriangle(o,c))return(a||l)&&(a&&c.getCenter(a),l&&c.getCenter(l)),0;let u=1/0;for(let h=0;h<3;h++){let d;const f=e[h],p=o[f];this.closestPointToPoint(p,s),d=p.distanceToSquared(s),d<u&&(u=d,a&&a.copy(s),l&&l.copy(p));const g=this[f];o.closestPointToPoint(g,s),d=g.distanceToSquared(s),d<u&&(u=d,a&&a.copy(g),l&&l.copy(s))}for(let h=0;h<3;h++){const d=e[h],f=e[(h+1)%3];n.set(this[d],this[f]);for(let p=0;p<3;p++){const g=e[p],m=e[(p+1)%3];i.set(o[g],o[m]),sb(n,i,s,t);const x=s.distanceToSquared(t);x<u&&(u=x,a&&a.copy(s),l&&l.copy(t))}}return Math.sqrt(u)}}();class Nr{constructor(t,e,n){this.isOrientedBox=!0,this.min=new H,this.max=new H,this.matrix=new Je,this.invMatrix=new Je,this.points=new Array(8).fill().map(()=>new H),this.satAxes=new Array(3).fill().map(()=>new H),this.satBounds=new Array(3).fill().map(()=>new Ar),this.alignedSatBounds=new Array(3).fill().map(()=>new Ar),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),n&&this.matrix.copy(n)}set(t,e,n){this.min.copy(t),this.max.copy(e),this.matrix.copy(n),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}Nr.prototype.update=function(){return function(){const t=this.matrix,e=this.min,n=this.max,i=this.points;for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)for(let h=0;h<=1;h++){const d=1*c|2*u|4*h,f=i[d];f.x=c?n.x:e.x,f.y=u?n.y:e.y,f.z=h?n.z:e.z,f.applyMatrix4(t)}const r=this.satBounds,o=this.satAxes,a=i[0];for(let c=0;c<3;c++){const u=o[c],h=r[c],d=1<<c,f=i[d];u.subVectors(a,f),h.setFromPoints(u,i)}const l=this.alignedSatBounds;l[0].setFromPointsField(i,"x"),l[1].setFromPointsField(i,"y"),l[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();Nr.prototype.intersectsBox=function(){const s=new Ar;return function(e){this.needsUpdate&&this.update();const n=e.min,i=e.max,r=this.satBounds,o=this.satAxes,a=this.alignedSatBounds;if(s.min=n.x,s.max=i.x,a[0].isSeparated(s)||(s.min=n.y,s.max=i.y,a[1].isSeparated(s))||(s.min=n.z,s.max=i.z,a[2].isSeparated(s)))return!1;for(let l=0;l<3;l++){const c=o[l],u=r[l];if(s.setFromBox(c,e),u.isSeparated(s))return!1}return!0}}();Nr.prototype.intersectsTriangle=function(){const s=new ao,t=new Array(3),e=new Ar,n=new Ar,i=new H;return function(o){this.needsUpdate&&this.update(),o.isExtendedTriangle?o.needsUpdate&&o.update():(s.copy(o),s.update(),o=s);const a=this.satBounds,l=this.satAxes;t[0]=o.a,t[1]=o.b,t[2]=o.c;for(let d=0;d<3;d++){const f=a[d],p=l[d];if(e.setFromPoints(p,t),f.isSeparated(e))return!1}const c=o.satBounds,u=o.satAxes,h=this.points;for(let d=0;d<3;d++){const f=c[d],p=u[d];if(e.setFromPoints(p,h),f.isSeparated(e))return!1}for(let d=0;d<3;d++){const f=l[d];for(let p=0;p<4;p++){const g=u[p];if(i.crossVectors(f,g),e.setFromPoints(i,t),n.setFromPoints(i,h),e.isSeparated(n))return!1}}return!0}}();Nr.prototype.closestPointToPoint=function(){return function(t,e){return this.needsUpdate&&this.update(),e.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e}}();Nr.prototype.distanceToPoint=function(){const s=new H;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();Nr.prototype.distanceToBox=function(){const s=["x","y","z"],t=new Array(12).fill().map(()=>new ro),e=new Array(12).fill().map(()=>new ro),n=new H,i=new H;return function(o,a=0,l=null,c=null){if(this.needsUpdate&&this.update(),this.intersectsBox(o))return(l||c)&&(o.getCenter(i),this.closestPointToPoint(i,n),o.closestPointToPoint(n,i),l&&l.copy(n),c&&c.copy(i)),0;const u=a*a,h=o.min,d=o.max,f=this.points;let p=1/0;for(let m=0;m<8;m++){const x=f[m];i.copy(x).clamp(h,d);const v=x.distanceToSquared(i);if(v<p&&(p=v,l&&l.copy(x),c&&c.copy(i),v<u))return Math.sqrt(v)}let g=0;for(let m=0;m<3;m++)for(let x=0;x<=1;x++)for(let v=0;v<=1;v++){const y=(m+1)%3,b=(m+2)%3,w=x<<y|v<<b,_=1<<m|x<<y|v<<b,C=f[w],S=f[_];t[g].set(C,S);const I=s[m],A=s[y],D=s[b],M=e[g],E=M.start,k=M.end;E[I]=h[I],E[A]=x?h[A]:d[A],E[D]=v?h[D]:d[A],k[I]=d[I],k[A]=x?h[A]:d[A],k[D]=v?h[D]:d[A],g++}for(let m=0;m<=1;m++)for(let x=0;x<=1;x++)for(let v=0;v<=1;v++){i.x=m?d.x:h.x,i.y=x?d.y:h.y,i.z=v?d.z:h.z,this.closestPointToPoint(i,n);const y=i.distanceToSquared(n);if(y<p&&(p=y,l&&l.copy(n),c&&c.copy(i),y<u))return Math.sqrt(y)}for(let m=0;m<12;m++){const x=t[m];for(let v=0;v<12;v++){const y=e[v];sb(x,y,n,i);const b=n.distanceToSquared(i);if(b<p&&(p=b,l&&l.copy(n),c&&c.copy(i),b<u))return Math.sqrt(b)}}return Math.sqrt(p)}}();const Uf=new H,Vf=new H,Wf=new H,CS=new kt,TS=new kt,IS=new kt,ES=new H;function EU(s,t,e,n,i,r){let o;return r===Zs?o=s.intersectTriangle(n,e,t,!0,i):o=s.intersectTriangle(t,e,n,r!==Ds,i),o===null?null:{distance:s.origin.distanceTo(i),point:i.clone()}}function MU(s,t,e,n,i,r,o){Uf.fromBufferAttribute(t,n),Vf.fromBufferAttribute(t,i),Wf.fromBufferAttribute(t,r);const a=EU(s,Uf,Vf,Wf,ES,o);if(a){e&&(CS.fromBufferAttribute(e,n),TS.fromBufferAttribute(e,i),IS.fromBufferAttribute(e,r),a.uv=gi.getUV(ES,Uf,Vf,Wf,CS,TS,IS,new kt));const l={a:n,b:i,c:r,normal:new H,materialIndex:0};gi.getNormal(Uf,Vf,Wf,l.normal),a.face=l,a.faceIndex=n}return a}function sI(s,t,e,n,i){const r=n*3,o=s.index.getX(r),a=s.index.getX(r+1),l=s.index.getX(r+2),c=MU(e,s.attributes.position,s.attributes.uv,o,a,l,t);return c?(c.faceIndex=n,i&&i.push(c),c):null}function kU(s,t,e,n,i,r){for(let o=n,a=n+i;o<a;o++)sI(s,t,e,o,r)}function AU(s,t,e,n,i){let r=1/0,o=null;for(let a=n,l=n+i;a<l;a++){const c=sI(s,t,e,a);c&&c.distance<r&&(o=c,r=c.distance)}return o}function MS(s,t,e){return s===null||(s.point.applyMatrix4(t.matrixWorld),s.distance=s.point.distanceTo(e.ray.origin),s.object=t,s.distance<e.near||s.distance>e.far)?null:s}function vr(s,t,e,n){const i=s.a,r=s.b,o=s.c;let a=t,l=t+1,c=t+2;e&&(a=e.getX(t),l=e.getX(t+1),c=e.getX(t+2)),i.x=n.getX(a),i.y=n.getY(a),i.z=n.getZ(a),r.x=n.getX(l),r.y=n.getY(l),r.z=n.getZ(l),o.x=n.getX(c),o.y=n.getY(c),o.z=n.getZ(c)}function kS(s,t,e,n,i,r,o){const a=e.index,l=e.attributes.position;for(let c=s,u=t+s;c<u;c++)if(vr(o,c*3,a,l),o.needsUpdate=!0,n(o,c,i,r))return!0;return!1}class iI{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}function Eo(s,t){return t[s+15]===65535}function pc(s,t){return t[s+6]}function uh(s,t){return t[s+14]}function hh(s){return s+8}function dh(s,t){return t[s+6]}function NU(s,t){return t[s+7]}const oc=new ir,Mp=new H,RU=["x","y","z"];function Wx(s,t,e,n,i){let r=s*2,o=Qc,a=Ro,l=Do;if(Eo(r,a)){const u=pc(s,l),h=uh(r,a);kU(t,e,n,u,h,i)}else{const u=hh(s);kp(u,o,n,Mp)&&Wx(u,t,e,n,i);const h=dh(s,l);kp(h,o,n,Mp)&&Wx(h,t,e,n,i)}}function Gx(s,t,e,n){let i=s*2,r=Qc,o=Ro,a=Do;if(Eo(i,o)){const c=pc(s,a),u=uh(i,o);return AU(t,e,n,c,u)}else{const c=NU(s,a),u=RU[c],d=n.direction[u]>=0;let f,p;d?(f=hh(s),p=dh(s,a)):(f=dh(s,a),p=hh(s));const m=kp(f,r,n,Mp)?Gx(f,t,e,n):null;if(m){const y=m.point[u];if(d?y<=r[p+c]:y>=r[p+c+3])return m}const v=kp(p,r,n,Mp)?Gx(p,t,e,n):null;return m&&v?m.distance<=v.distance?m:v:m||v||null}}const DU=function(){let s,t;const e=[],n=new iI(()=>new ir);return function(...o){s=n.getPrimitive(),t=n.getPrimitive(),e.push(s,t);const a=i(...o);n.releasePrimitive(s),n.releasePrimitive(t),e.pop(),e.pop();const l=e.length;return l>0&&(t=e[l-1],s=e[l-2]),a};function i(r,o,a,l,c=null,u=0,h=0){function d(y){let b=y*2,w=Ro,_=Do;for(;!Eo(b,w);)y=hh(y),b=y*2;return pc(y,_)}function f(y){let b=y*2,w=Ro,_=Do;for(;!Eo(b,w);)y=dh(y,_),b=y*2;return pc(y,_)+uh(b,w)}let p=r*2,g=Qc,m=Ro,x=Do;if(Eo(p,m)){const y=pc(r,x),b=uh(p,m);return _r(r,g,s),l(y,b,!1,h,u+r,s)}else{const y=hh(r),b=dh(r,x);let w=y,_=b,C,S,T,I;if(c&&(T=s,I=t,_r(w,g,T),_r(_,g,I),C=c(T),S=c(I),S<C)){w=b,_=y;const z=C;C=S,S=z,T=I}T||(T=s,_r(w,g,T));const A=Eo(w*2,m),D=a(T,A,C,h+1,u+w);let M;if(D===bS){const z=d(w),$=f(w)-z;M=l(z,$,!0,h+1,u+w,T)}else M=D&&i(w,o,a,l,c,u,h+1);if(M)return!0;I=t,_r(_,g,I);const E=Eo(_*2,m),k=a(I,E,S,h+1,u+_);let N;if(k===bS){const z=d(_),$=f(_)-z;N=l(z,$,!0,h+1,u+_,I)}else N=k&&i(_,o,a,l,c,u,h+1);return!!N}}}(),$U=function(){const s=new ao,t=new ao,e=new Je,n=new Nr,i=new Nr;return function r(o,a,l,c,u=null){let h=o*2,d=Qc,f=Ro,p=Do;if(u===null&&(l.boundingBox||l.computeBoundingBox(),n.set(l.boundingBox.min,l.boundingBox.max,c),u=n),Eo(h,f)){const m=a,x=m.index,v=m.attributes.position,y=l.index,b=l.attributes.position,w=pc(o,p),_=uh(h,f);if(e.copy(c).invert(),l.boundsTree)return _r(o,d,i),i.matrix.copy(e),i.needsUpdate=!0,l.boundsTree.shapecast({intersectsBounds:S=>i.intersectsBox(S),intersectsTriangle:S=>{S.a.applyMatrix4(c),S.b.applyMatrix4(c),S.c.applyMatrix4(c),S.needsUpdate=!0;for(let T=w*3,I=(_+w)*3;T<I;T+=3)if(vr(t,T,x,v),t.needsUpdate=!0,S.intersectsTriangle(t))return!0;return!1}});for(let C=w*3,S=_+w*3;C<S;C+=3){vr(s,C,x,v),s.a.applyMatrix4(e),s.b.applyMatrix4(e),s.c.applyMatrix4(e),s.needsUpdate=!0;for(let T=0,I=y.count;T<I;T+=3)if(vr(t,T,y,b),t.needsUpdate=!0,s.intersectsTriangle(t))return!0}}else{const m=o+8,x=p[o+6];return _r(m,d,oc),!!(u.intersectsBox(oc)&&r(m,a,l,c,u)||(_r(x,d,oc),u.intersectsBox(oc)&&r(x,a,l,c,u)))}}}();function kp(s,t,e,n){return _r(s,t,oc),e.intersectBox(oc,n)}const Hx=[];let fp,Qc,Ro,Do;function Lu(s){fp&&Hx.push(fp),fp=s,Qc=new Float32Array(s),Ro=new Uint16Array(s),Do=new Uint32Array(s)}function Gf(){fp=null,Qc=null,Ro=null,Do=null,Hx.length&&Lu(Hx.pop())}const ix=Symbol("skip tree generation"),rx=new ir,ox=new ir,ql=new Je,fa=new Nr,Eu=new Nr,Mu=new H,Hf=new H,LU=new H,FU=new H,PU=new H,AS=new ir,dr=new iI(()=>new ao);class ju{static serialize(t,e={}){if(e.isBufferGeometry)return console.warn("MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature."),ju.serialize(arguments[0],{cloneBuffers:arguments[2]===void 0?!0:arguments[2]});e={cloneBuffers:!0,...e};const n=t.geometry,i=t._roots,r=n.getIndex();let o;return e.cloneBuffers?o={roots:i.map(a=>a.slice()),index:r.array.slice()}:o={roots:i,index:r.array},o}static deserialize(t,e,n={}){if(typeof n=="boolean")return console.warn("MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature."),ju.deserialize(arguments[0],arguments[1],{setIndex:arguments[2]===void 0?!0:arguments[2]});n={setIndex:!0,...n};const{index:i,roots:r}=t,o=new ju(e,{...n,[ix]:!0});if(o._roots=r,n.setIndex){const a=e.getIndex();if(a===null){const l=new Js(t.index,1,!1);e.setIndex(l)}else a.array!==i&&(a.array.set(i),a.needsUpdate=!0)}return o}constructor(t,e={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(e=Object.assign({strategy:nI,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,[ix]:!1},e),e.useSharedArrayBuffer&&typeof SharedArrayBuffer>"u")throw new Error("MeshBVH: SharedArrayBuffer is not available.");this._roots=null,e[ix]||(this._roots=SU(t,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new ir))),this.geometry=t}refit(t=null){t&&Array.isArray(t)&&(t=new Set(t));const e=this.geometry,n=e.index.array,i=e.attributes.position;let r,o,a,l,c=0;const u=this._roots;for(let d=0,f=u.length;d<f;d++)r=u[d],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),h(0,c),c+=r.byteLength;function h(d,f,p=!1){const g=d*2;if(a[g+15]===Vx){const x=o[d+6],v=a[g+14];let y=1/0,b=1/0,w=1/0,_=-1/0,C=-1/0,S=-1/0;for(let T=3*x,I=3*(x+v);T<I;T++){const A=n[T],D=i.getX(A),M=i.getY(A),E=i.getZ(A);D<y&&(y=D),D>_&&(_=D),M<b&&(b=M),M>C&&(C=M),E<w&&(w=E),E>S&&(S=E)}return l[d+0]!==y||l[d+1]!==b||l[d+2]!==w||l[d+3]!==_||l[d+4]!==C||l[d+5]!==S?(l[d+0]=y,l[d+1]=b,l[d+2]=w,l[d+3]=_,l[d+4]=C,l[d+5]=S,!0):!1}else{const x=d+8,v=o[d+6],y=x+f,b=v+f;let w=p,_=!1,C=!1;t?w||(_=t.has(y),C=t.has(b),w=!_&&!C):(_=!0,C=!0);const S=w||_,T=w||C;let I=!1;S&&(I=h(x,f,w));let A=!1;T&&(A=h(v,f,w));const D=I||A;if(D)for(let M=0;M<3;M++){const E=x+M,k=v+M,N=l[E],z=l[E+3],L=l[k],$=l[k+3];l[d+M]=N<L?N:L,l[d+M+3]=z>$?z:$}return D}}}traverse(t,e=0){const n=this._roots[e],i=new Uint32Array(n),r=new Uint16Array(n);o(0);function o(a,l=0){const c=a*2,u=r[c+15]===Vx;if(u){const h=i[a+6],d=r[c+14];t(l,u,new Float32Array(n,a*4,6),h,d)}else{const h=a+dp/4,d=i[a+6],f=i[a+7];t(l,u,new Float32Array(n,a*4,6),f)||(o(h,l+1),o(d,l+1))}}}raycast(t,e=Oo){const n=this._roots,i=this.geometry,r=[],o=e.isMaterial,a=Array.isArray(e),l=i.groups,c=o?e.side:e;for(let u=0,h=n.length;u<h;u++){const d=a?e[l[u].materialIndex].side:c,f=r.length;if(Lu(n[u]),Wx(0,i,d,t,r),Gf(),a){const p=l[u].materialIndex;for(let g=f,m=r.length;g<m;g++)r[g].face.materialIndex=p}}return r}raycastFirst(t,e=Oo){const n=this._roots,i=this.geometry,r=e.isMaterial,o=Array.isArray(e);let a=null;const l=i.groups,c=r?e.side:e;for(let u=0,h=n.length;u<h;u++){const d=o?e[l[u].materialIndex].side:c;Lu(n[u]);const f=Gx(0,i,d,t);Gf(),f!=null&&(a==null||f.distance<a.distance)&&(a=f,o&&(f.face.materialIndex=l[u].materialIndex))}return a}intersectsGeometry(t,e){const n=this.geometry;let i=!1;for(const r of this._roots)if(Lu(r),i=$U(0,n,t,e),Gf(),i)break;return i}shapecast(t,e,n){const i=this.geometry;if(t instanceof Function){if(e){const d=e;e=(f,p,g,m)=>{const x=p*3;return d(f,x,x+1,x+2,g,m)}}t={boundsTraverseOrder:n,intersectsBounds:t,intersectsTriangle:e,intersectsRange:null},console.warn("MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.")}const r=dr.getPrimitive();let{boundsTraverseOrder:o,intersectsBounds:a,intersectsRange:l,intersectsTriangle:c}=t;if(l&&c){const d=l;l=(f,p,g,m,x)=>d(f,p,g,m,x)?!0:kS(f,p,i,c,g,m,r)}else l||(c?l=(d,f,p,g)=>kS(d,f,i,c,p,g,r):l=(d,f,p)=>p);let u=!1,h=0;for(const d of this._roots){if(Lu(d),u=DU(0,i,a,l,o,h),Gf(),u)break;h+=d.byteLength}return dr.releasePrimitive(r),u}bvhcast(t,e,n){let{intersectsRanges:i,intersectsTriangles:r}=n;const o=this.geometry.index,a=this.geometry.attributes.position,l=t.geometry.index,c=t.geometry.attributes.position;ql.copy(e).invert();const u=dr.getPrimitive(),h=dr.getPrimitive();if(r){let p=function(g,m,x,v,y,b,w,_){for(let C=x,S=x+v;C<S;C++){vr(h,C*3,l,c),h.a.applyMatrix4(e),h.b.applyMatrix4(e),h.c.applyMatrix4(e),h.needsUpdate=!0;for(let T=g,I=g+m;T<I;T++)if(vr(u,T*3,o,a),u.needsUpdate=!0,r(u,h,T,C,y,b,w,_))return!0}return!1};var f=p;if(i){const g=i;i=function(m,x,v,y,b,w,_,C){return g(m,x,v,y,b,w,_,C)?!0:p(m,x,v,y,b,w,_,C)}}else i=p}t.getBoundingBox(ox),ox.applyMatrix4(e);const d=this.shapecast({intersectsBounds:p=>ox.intersectsBox(p),intersectsRange:(p,g,m,x,v,y)=>(rx.copy(y),rx.applyMatrix4(ql),t.shapecast({intersectsBounds:b=>rx.intersectsBox(b),intersectsRange:(b,w,_,C,S)=>i(p,g,b,w,x,v,C,S)}))});return dr.releasePrimitive(u),dr.releasePrimitive(h),d}intersectsBox(t,e){return fa.set(t.min,t.max,e),fa.needsUpdate=!0,this.shapecast({intersectsBounds:n=>fa.intersectsBox(n),intersectsTriangle:n=>fa.intersectsTriangle(n)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,n={},i={},r=0,o=1/0){t.boundingBox||t.computeBoundingBox(),fa.set(t.boundingBox.min,t.boundingBox.max,e),fa.needsUpdate=!0;const a=this.geometry,l=a.attributes.position,c=a.index,u=t.attributes.position,h=t.index,d=dr.getPrimitive(),f=dr.getPrimitive();let p=Hf,g=LU,m=null,x=null;i&&(m=FU,x=PU);let v=1/0,y=null,b=null;return ql.copy(e).invert(),Eu.matrix.copy(ql),this.shapecast({boundsTraverseOrder:w=>fa.distanceToBox(w),intersectsBounds:(w,_,C)=>C<v&&C<o?(_&&(Eu.min.copy(w.min),Eu.max.copy(w.max),Eu.needsUpdate=!0),!0):!1,intersectsRange:(w,_)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:C=>Eu.distanceToBox(C),intersectsBounds:(C,S,T)=>T<v&&T<o,intersectsRange:(C,S)=>{for(let T=C*3,I=(C+S)*3;T<I;T+=3){vr(f,T,h,u),f.a.applyMatrix4(e),f.b.applyMatrix4(e),f.c.applyMatrix4(e),f.needsUpdate=!0;for(let A=w*3,D=(w+_)*3;A<D;A+=3){vr(d,A,c,l),d.needsUpdate=!0;const M=d.distanceToTriangle(f,p,m);if(M<v&&(g.copy(p),x&&x.copy(m),v=M,y=A/3,b=T/3),M<r)return!0}}}});{const C=h?h.count:u.count;for(let S=0,T=C;S<T;S+=3){vr(f,S,h,u),f.a.applyMatrix4(e),f.b.applyMatrix4(e),f.c.applyMatrix4(e),f.needsUpdate=!0;for(let I=w*3,A=(w+_)*3;I<A;I+=3){vr(d,I,c,l),d.needsUpdate=!0;const D=d.distanceToTriangle(f,p,m);if(D<v&&(g.copy(p),x&&x.copy(m),v=D,y=I/3,b=S/3),D<r)return!0}}}}}),dr.releasePrimitive(d),dr.releasePrimitive(f),v===1/0?null:(n.point?n.point.copy(g):n.point=g.clone(),n.distance=v,n.faceIndex=y,i&&(i.point?i.point.copy(x):i.point=x.clone(),i.point.applyMatrix4(ql),g.applyMatrix4(ql),i.distance=g.sub(i.point).length(),i.faceIndex=b),n)}closestPointToPoint(t,e={},n=0,i=1/0){const r=n*n,o=i*i;let a=1/0,l=null;if(this.shapecast({boundsTraverseOrder:u=>(Mu.copy(t).clamp(u.min,u.max),Mu.distanceToSquared(t)),intersectsBounds:(u,h,d)=>d<a&&d<o,intersectsTriangle:(u,h)=>{u.closestPointToPoint(t,Mu);const d=t.distanceToSquared(Mu);return d<a&&(Hf.copy(Mu),a=d,l=h),d<r}}),a===1/0)return null;const c=Math.sqrt(a);return e.point?e.point.copy(Hf):e.point=Hf.clone(),e.distance=c,e.faceIndex=l,e}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(n=>{_r(0,new Float32Array(n),AS),t.union(AS)}),t}}const ax=new xm,NS=new Je,OU=nn.prototype.raycast;function zU(s,t){if(this.geometry.boundsTree){if(this.material===void 0)return;NS.copy(this.matrixWorld).invert(),ax.copy(s.ray).applyMatrix4(NS);const e=this.geometry.boundsTree;if(s.firstHitOnly===!0){const n=MS(e.raycastFirst(ax,this.material),this,s);n&&t.push(n)}else{const n=e.raycast(ax,this.material);for(let i=0,r=n.length;i<r;i++){const o=MS(n[i],this,s);o&&t.push(o)}}}else OU.call(this,s,t)}function BU(s){return this.boundsTree=new ju(this,s),this.boundsTree}function UU(){this.boundsTree=null}os.prototype.computeBoundsTree=BU;os.prototype.disposeBoundsTree=UU;nn.prototype.raycast=zU;const ib=4,RS=16,rI=.19,VU=new cl(.04,.04,rI),qx=new qv(.5,32);qx.rotateX(-Math.PI/2);const WU=new ul({color:16777215}),GU=new KO({color:5329233,wireframe:!1}),HU=new ul({color:16771584,wireframe:!1,side:Ds}),qU=new ul({color:16753920}),jU=new ul({color:65280});class DS extends Qv{constructor(t,e=1,n=.15){super(),this.roadSpline=new $x(t,!1,"catmullrom",.5),this.roadWidth=e,this.roadLength=this.roadSpline.getLength();let i=new cU;const r=this.roadSpline.getSpacedPoints(Math.floor(this.roadLength/n));this.pointsIn2D=r.map(b=>new kt(b.x,b.z));const o=i.data(r.map(b=>[b.x,b.z])).arcSegments(20).offsetLine(e/2).map(b=>b.map(w=>new H(w[0],0,w[1]))),a=o.map(b=>new $x(b,!0,"catmullrom",.05)),l=new Cp(a[0].getSpacedPoints(Math.floor(a[0].getLength()/n)).map(b=>new kt(b.x,b.z)));for(let b=0;b<o.length;b++){const w=a[b],_=w.getSpacedPoints(Math.floor(w.getLength()/n));b>0&&l.holes.push(new Lx(_.map(C=>new kt(C.x,C.z))));for(let C=1;C<_.length;C++){let S=_[C].clone().sub(_[C-1]),T=_[C].clone().add(_[C-1]).divideScalar(2);const I=new qt({mass:0,material:new dl({friction:.15,restitution:.25}),shape:new Eh(new R(S.length()/2,.2/2,.01/2)),position:new R(T.x,T.y+.1,T.z),quaternion:new mn().setFromAxisAngle(new R(0,1,0),Math.atan2(-S.z,S.x))});I.collisionFilterGroup=RS,I.collisionFilterMask=~RS,this.bodies.push(I)}}const c=new Cp([new kt(.2,.005),new kt(-.2,.005),new kt(-.2,-.005),new kt(.2,-.005),new kt(.2,.005)]),u=a.map(b=>new jv(c,{steps:Math.floor(b.getLength()/n),extrudePath:b})),h=uU(u,!1);h.computeBoundsTree();const d=new nn(h,HU);this.barrierMesh=d,d.castShadow=!1,d.receiveShadow=!1,d.layers.enable(ib),this.meshes.push(d);let f=new Kv(l),p=new nn(f,GU);this.roadMesh=p,p.rotateX(Math.PI/2),p.scale.setZ(-1),p.translateZ(-.01),p.receiveShadow=!0,this.meshes.push(p);let g=this.roadSpline.getLength(),m=Math.floor(g/rI/2);for(let b=1;b<m;b+=2){let w=b/m,_=this.roadSpline.getPointAt(w),C=this.roadSpline.getTangentAt(w),S=new nn(VU,WU);S.receiveShadow=!0,S.castShadow=!1,S.position.x=_.x,S.position.y=_.y,S.position.z=_.z,S.rotateY(Math.atan2(C.x,C.z)),this.meshes.push(S)}const x=new nn(qx,qU);x.scale.set(e,1,e),x.position.set(t[0].x,.025,t[0].z),this.meshes.push(x),this.finishX=t[t.length-1].x,this.finishZ=t[t.length-1].z;const v=new nn(qx,jU);v.scale.set(e,1,e),v.position.set(this.finishX,.025,this.finishZ),this.meshes.push(v),this.startX=t[0].x,this.startZ=t[0].z;const y=this.roadSpline.getTangentAt(0);this.startRotation=-Math.atan2(-y.z,y.x)+Math.PI/2,this.endX=t[t.length-1].x,this.endZ=t[t.length-1].z}isFinished(t,e){return(this.finishX-t)**2+(this.finishZ-e)**2<this.roadWidth**2}closestPointIdx(t,e){const n=new kt(t,e),i=this.pointsIn2D.map(r=>r.distanceToSquared(n));return i.indexOf(Math.min(...i))}closestPointTangentAndCompleted(t,e){const n=this.closestPointIdx(t,e),i=this.roadSpline.getTangentAt(n/(this.pointsIn2D.length-1)),r=n/(this.pointsIn2D.length-1);return{tangent:i,completed:r}}amountCompleted(t,e){return this.closestPointIdx(t,e)/(this.pointsIn2D.length-1)}get barrrierFriction(){return this.bodies[0].material.friction}set barrrierFriction(t){this.bodies.forEach(e=>e.material.friction=t)}dispose(){this.barrierMesh.geometry.disposeBoundsTree(),this.barrierMesh.geometry.dispose(),this.roadMesh.geometry.dispose()}syncMeshesToBodies(){}}const XU=new ul({color:16777215});class KU extends Qv{constructor(t=0,e=100,n=100){super(),this.ylevel=t;const i=new vm(e,n),r=new nn(i,XU);r.rotation.x=-Math.PI/2,r.position.y=t,r.layers.enable(ib),this.mesh=r,this.meshes.push(r);const o=new lB,a=new qt({mass:0,material:new dl({friction:.12,restitution:.5})});a.addShape(o),a.quaternion.setFromAxisAngle(new R(1,0,0),-Math.PI/2),a.position.y=t,this.body=a,this.bodies.push(a)}syncMeshesToBodies(){}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU=1e-7,ZU=1e-4;class oI{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class rb{refCount(t){return ks("refCount")}incRef(t){return ks("incRef")}timerAvailable(){return!0}time(t){return ks("time")}read(t){return ks("read")}readSync(t){return ks("readSync")}readToGPU(t,e){return ks("readToGPU")}numDataIds(){return ks("numDataIds")}disposeData(t,e){return ks("disposeData")}write(t,e,n){return ks("write")}move(t,e,n,i,r){return ks("move")}createTensorFromTexture(t,e,n){return ks("createTensorFromTexture")}memory(){return ks("memory")}floatPrecision(){return ks("floatPrecision")}epsilon(){return this.floatPrecision()===32?YU:ZU}dispose(){return ks("dispose")}}function ks(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(s){let t=s.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,tc(s,t,e)}function ja(s,t,e){return Math.max(s,Math.min(t,e))}function ob(s){return s%2===0?s:s+1}function tc(s,t,e){const n=s[t];s[t]=s[e],s[e]=n}function QU(s){let t=0;for(let e=0;e<s.length;e++)t+=s[e];return t}function P(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function Ni(s,t,e=""){P(Le(s,t),()=>e+` Shapes ${s} and ${t} must match`)}function aI(s){P(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function kc(s,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(s)||Rr(s)&&!e)for(let n=0;n<s.length;++n)kc(s[n],t,e);else t.push(s);return t}function gt(s){if(s.length===0)return 1;let t=s[0];for(let e=1;e<s.length;e++)t*=s[e];return t}function Le(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let e=0;e<s.length;e++)if(s[e]!==t[e])return!1;return!0}function Ac(s){return s%1===0}function jx(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function mc(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function $S(s,t=i=>0,e,n){return new Promise((i,r)=>{let o=0;const a=()=>{if(s()){i();return}o++;const l=t(o);if(e!=null&&o>=e){r();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function lI(s,t){let e=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)e*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(e===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const i=s.slice();return i[n]=t/e,i}function be(s,t){const e=t.length;return s=s==null?t.map((n,i)=>i):[].concat(s),P(s.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${s}`),P(s.every(n=>Ac(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?e+n:n)}function Xo(s,t){const e=[],n=[],i=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||i?null:be(t,s).sort();let o=0;for(let a=0;a<s.length;++a){if(r!=null){if(r[o]===a&&s[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${s[a]}' is not 1`);(r[o]==null||r[o]>a)&&s[a]===1&&(e.push(s[a]),n.push(a)),r[o]<=a&&o++}s[a]!==1&&(e.push(s[a]),n.push(a))}return{newShape:e,keptDims:n}}function Kn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return e}function Sn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else if(s==="string")e=new Array(t);else throw new Error(`Unknown data type ${s}`);return e}function tV(s,t){for(let e=0;e<s.length;e++){const n=s[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function eV(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function cI(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function Rr(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}function Xx(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function nV(s){if(s==null)return 0;let t=0;return s.forEach(e=>t+=e.length),t}function Nh(s){return typeof s=="string"||s instanceof String}function sV(s){return typeof s=="boolean"}function Kx(s){return typeof s=="number"}function Rh(s){return Array.isArray(s)?Rh(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":Kx(s)?"float32":Nh(s)?"string":sV(s)?"bool":"float32"}function Yx(s){return!!(s&&s.constructor&&s.call&&s.apply)}function Zx(s,t){for(let e=t;e<s;++e)if(s%e===0)return e;return s}function le(s){const t=s.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=s[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*s[n+1];return e}function uI(s,t,e,n=!1){const i=new Array;if(t.length===1){const r=t[0]*(n?2:1);for(let o=0;o<r;o++)i[o]=e[s+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((l,c)=>l*c)*(n?2:1);for(let l=0;l<r;l++)i[l]=uI(s+l*a,o,e,n)}return i}function Ki(s,t,e=!1){if(s.length===0)return t[0];const n=s.reduce((i,r)=>i*r)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return uI(0,s,t,e)}function ab(s,t){const e=rs(s,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function rs(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function hI(s,t){const e=s.reduce((n,i)=>n*i,1);if(t==null||t==="float32")return Ki(s,new Float32Array(e));if(t==="int32")return Ki(s,new Int32Array(e));if(t==="bool")return Ki(s,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function dI(s){s.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function Tr(s,t,e){if(t===0)return 0;if(t===1)return s[0];let n=s[s.length-1];for(let i=0;i<s.length-1;++i)n+=e[i]*s[i];return n}function tu(s,t,e){if(t===0)return[];if(t===1)return[s];const n=new Array(t);for(let i=0;i<n.length-1;++i)n[i]=Math.floor(s/e[i]),s-=n[i]*e[i];return n[n.length-1]=s,n}function fI(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS="tfjsflags";class iV{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=rV,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){const i=this.urlFlags[t];dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${i}.`),this.set(t,i)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(fI(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);LS in t&&t[LS].split(",").forEach(n=>{const[i,r]=n.split(":");this.urlFlags[i]=aV(i,r)})}}function rV(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(oV(t,n[0],n[1]),n.join("="))),t}function oV(s,t,e){s[decodeURIComponent(t)]=decodeURIComponent(e||"")}function aV(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function dt(){return pI}let pI=null;function lV(s){pI=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lx;function mI(){if(lx==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");lx=s}return lx}function cV(){const s=mI();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function lb(s,t){const e=cV();if(e.has(s))return e.get(s);{const n=t();return e.set(s,n),e.get(s)}}const Tm="Abs",Dh="Acos",$h="Acosh",eu="Add",cb="AddN",ub="All",hb="Any",Im="ArgMax",Em="ArgMin",Lh="Asin",Fh="Asinh",Ph="Atan",Oh="Atanh",zh="Atan2",Mm="AvgPool",db="AvgPoolGrad",km="AvgPool3D",fb="AvgPool3DGrad",Am="BatchMatMul",Nm="BatchToSpaceND",pb="Bincount",uV="BroadcastTo",gI="BroadcastArgs",Bh="Cast",Uh="Ceil",Vh="ClipByValue",mb="Complex",Rm="ComplexAbs",Dm="Concat",$m="Conv2D",gb="Conv2DBackpropFilter",Lm="Conv2DBackpropInput",Fm="Conv3D",xb="Conv3DBackpropFilterV2",vb="Conv3DBackpropInputV2",Wh="Cos",Gh="Cosh",bb="Cumprod",Pm="Cumsum",yb="CropAndResize",wb="DenseBincount",_b="DepthToSpace",Om="DepthwiseConv2dNative",Sb="DepthwiseConv2dNativeBackpropFilter",Cb="DepthwiseConv2dNativeBackpropInput",xI="Diag",zm="Dilation2D",Jx="Dilation2DBackpropInput",Qx="Dilation2DBackpropFilter",Hh="RealDiv",vI="Einsum",qh="Elu",Tb="EluGrad",jh="Erf",Bm="Equal",Xh="Exp",Um="ExpandDims",Kh="Expm1",Ib="FFT",Eb="Fill",Mb="FlipLeftRight",Yh="Floor",Zh="FloorDiv",Vm="FusedBatchNorm",Wm="GatherV2",bI="GatherNd",Gm="Greater",Jh="GreaterEqual",Qh="Identity",kb="IFFT",Ab="Imag",td="IsFinite",ed="IsInf",nd="IsNan",Hm="LeakyRelu",qm="Less",jm="LessEqual",yI="LinSpace",sd="Log",id="Log1p",Xm="LogicalAnd",Km="LogicalNot",Ym="LogicalOr",hV="LogSoftmax",Zm="LRN",Nb="LRNGrad",Jm="Max",rd="Maximum",Qm="MaxPool",Rb="MaxPoolGrad",tg="MaxPool3D",Db="MaxPool3DGrad",wI="MaxPoolWithArgmax",eg="Mean",ng="Min",od="Minimum",sg="MirrorPad",ad="Mod",_I="Multinomial",ld="Multiply",ig="Neg",rg="NotEqual",$b="NonMaxSuppressionV3",Lb="NonMaxSuppressionV4",Fb="NonMaxSuppressionV5",og="OnesLike",ag="OneHot",lg="Pack",cg="PadV2",cd="Pow",ug="Prelu",hg="Prod",SI="RaggedGather",CI="RaggedRange",TI="RaggedTensorToTensor",Pb="Range",Ob="Real",ud="Reciprocal",hd="Relu",dg="Reshape",fg="ResizeNearestNeighbor",zb="ResizeNearestNeighborGrad",pg="ResizeBilinear",Bb="ResizeBilinearGrad",dd="Relu6",mg="Reverse",fd="Round",pd="Rsqrt",II="ScatterNd",EI="SearchSorted",gg="Select",md="Selu",xg="Slice",gd="Sin",xd="Sinh",vd="Sign",bd="Sigmoid",yd="Softplus",wd="Sqrt",vg="Sum",bg="SpaceToBatchND",yg="SplitV",wg="Softmax",Ub="SparseFillEmptyRows",Vb="SparseReshape",Wb="SparseSegmentMean",Gb="SparseSegmentSum",MI="SparseToDense",_d="SquaredDifference",Hb="Square",qb="StridedSlice",jb="StringNGrams",Xb="StringSplit",Kb="StringToHashBucketFast",Sd="Sub",Cd="Tan",Td="Tanh",Id="Tile",Yb="TopK",Zb="Transform",gc="Transpose",Jb="Unique",_g="Unpack",Sg="UnsortedSegmentSum",Cg="ZerosLike",Ed="Step",dV="FromPixels",Qb="RotateWithOffset",Ap="_FusedMatMul",Np="FusedConv2D",kI="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(...s){dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(...s)}function fV(...s){dt().getBool("IS_TEST")||dt().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rp=lb("kernelRegistry",()=>new Map),tv=lb("gradRegistry",()=>new Map);function FS(s,t){const e=NI(s,t);return Rp.get(e)}function PS(s){return tv.get(s)}function OS(s){const t=Rp.entries(),e=[];for(;;){const{done:n,value:i}=t.next();if(n)break;const[r,o]=i,[a]=r.split("_");a===s&&e.push(o)}return e}function AI(s){const{kernelName:t,backendName:e}=s,n=NI(t,e);Rp.has(n)&&Ks(`The kernel '${t}' for backend '${e}' is already registered`),Rp.set(n,s)}function pV(s){const{kernelName:t}=s;tv.has(t)&&dt().getBool("DEBUG")&&Ks(`Overriding the gradient for '${t}'`),tv.set(t,s)}function NI(s,t){return`${t}_${s}`}var ev=Qe,bi=null;try{bi=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qe(s,t,e){this.low=s|0,this.high=t|0,this.unsigned=!!e}Qe.prototype.__isLong__;Object.defineProperty(Qe.prototype,"__isLong__",{value:!0});function Gs(s){return(s&&s.__isLong__)===!0}Qe.isLong=Gs;var zS={},BS={};function pl(s,t){var e,n,i;return t?(s>>>=0,(i=0<=s&&s<256)&&(n=BS[s],n)?n:(e=tn(s,(s|0)<0?-1:0,!0),i&&(BS[s]=e),e)):(s|=0,(i=-128<=s&&s<128)&&(n=zS[s],n)?n:(e=tn(s,s<0?-1:0,!1),i&&(zS[s]=e),e))}Qe.fromInt=pl;function yi(s,t){if(isNaN(s))return t?ka:wi;if(t){if(s<0)return ka;if(s>=RI)return LI}else{if(s<=-VS)return $s;if(s+1>=VS)return $I}return s<0?yi(-s,t).neg():tn(s%Nc|0,s/Nc|0,t)}Qe.fromNumber=yi;function tn(s,t,e){return new Qe(s,t,e)}Qe.fromBits=tn;var Dp=Math.pow;function ty(s,t,e){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return wi;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return ty(s.substring(1),t,e).neg();for(var i=yi(Dp(e,8)),r=wi,o=0;o<s.length;o+=8){var a=Math.min(8,s.length-o),l=parseInt(s.substring(o,o+a),e);if(a<8){var c=yi(Dp(e,a));r=r.mul(c).add(yi(l))}else r=r.mul(i),r=r.add(yi(l))}return r.unsigned=t,r}Qe.fromString=ty;function or(s,t){return typeof s=="number"?yi(s,t):typeof s=="string"?ty(s,t):tn(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}Qe.fromValue=or;var US=1<<16,mV=1<<24,Nc=US*US,RI=Nc*Nc,VS=RI/2,WS=pl(mV),wi=pl(0);Qe.ZERO=wi;var ka=pl(0,!0);Qe.UZERO=ka;var ac=pl(1);Qe.ONE=ac;var DI=pl(1,!0);Qe.UONE=DI;var nv=pl(-1);Qe.NEG_ONE=nv;var $I=tn(-1,2147483647,!1);Qe.MAX_VALUE=$I;var LI=tn(-1,-1,!0);Qe.MAX_UNSIGNED_VALUE=LI;var $s=tn(0,-2147483648,!1);Qe.MIN_VALUE=$s;var Ft=Qe.prototype;Ft.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ft.toNumber=function(){return this.unsigned?(this.high>>>0)*Nc+(this.low>>>0):this.high*Nc+(this.low>>>0)};Ft.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq($s)){var e=yi(t),n=this.div(e),i=n.mul(e).sub(this);return n.toString(t)+i.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var r=yi(Dp(t,6),this.unsigned),o=this,a="";;){var l=o.div(r),c=o.sub(l.mul(r)).toInt()>>>0,u=c.toString(t);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Ft.getHighBits=function(){return this.high};Ft.getHighBitsUnsigned=function(){return this.high>>>0};Ft.getLowBits=function(){return this.low};Ft.getLowBitsUnsigned=function(){return this.low>>>0};Ft.getNumBitsAbs=function(){if(this.isNegative())return this.eq($s)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};Ft.isZero=function(){return this.high===0&&this.low===0};Ft.eqz=Ft.isZero;Ft.isNegative=function(){return!this.unsigned&&this.high<0};Ft.isPositive=function(){return this.unsigned||this.high>=0};Ft.isOdd=function(){return(this.low&1)===1};Ft.isEven=function(){return(this.low&1)===0};Ft.equals=function(t){return Gs(t)||(t=or(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};Ft.eq=Ft.equals;Ft.notEquals=function(t){return!this.eq(t)};Ft.neq=Ft.notEquals;Ft.ne=Ft.notEquals;Ft.lessThan=function(t){return this.comp(t)<0};Ft.lt=Ft.lessThan;Ft.lessThanOrEqual=function(t){return this.comp(t)<=0};Ft.lte=Ft.lessThanOrEqual;Ft.le=Ft.lessThanOrEqual;Ft.greaterThan=function(t){return this.comp(t)>0};Ft.gt=Ft.greaterThan;Ft.greaterThanOrEqual=function(t){return this.comp(t)>=0};Ft.gte=Ft.greaterThanOrEqual;Ft.ge=Ft.greaterThanOrEqual;Ft.compare=function(t){if(Gs(t)||(t=or(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};Ft.comp=Ft.compare;Ft.negate=function(){return!this.unsigned&&this.eq($s)?$s:this.not().add(ac)};Ft.neg=Ft.negate;Ft.add=function(t){Gs(t)||(t=or(t));var e=this.high>>>16,n=this.high&65535,i=this.low>>>16,r=this.low&65535,o=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,h=0,d=0,f=0;return f+=r+c,d+=f>>>16,f&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=n+a,u+=h>>>16,h&=65535,u+=e+o,u&=65535,tn(d<<16|f,u<<16|h,this.unsigned)};Ft.subtract=function(t){return Gs(t)||(t=or(t)),this.add(t.neg())};Ft.sub=Ft.subtract;Ft.multiply=function(t){if(this.isZero())return wi;if(Gs(t)||(t=or(t)),bi){var e=bi.mul(this.low,this.high,t.low,t.high);return tn(e,bi.get_high(),this.unsigned)}if(t.isZero())return wi;if(this.eq($s))return t.isOdd()?$s:wi;if(t.eq($s))return this.isOdd()?$s:wi;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(WS)&&t.lt(WS))return yi(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,f=0,p=0;return p+=o*u,f+=p>>>16,p&=65535,f+=r*u,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=n*u+i*c+r*l+o*a,h&=65535,tn(f<<16|p,h<<16|d,this.unsigned)};Ft.mul=Ft.multiply;Ft.divide=function(t){if(Gs(t)||(t=or(t)),t.isZero())throw Error("division by zero");if(bi){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?bi.div_u:bi.div_s)(this.low,this.high,t.low,t.high);return tn(e,bi.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ka:wi;var n,i,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return ka;if(t.gt(this.shru(1)))return DI;r=ka}else{if(this.eq($s)){if(t.eq(ac)||t.eq(nv))return $s;if(t.eq($s))return ac;var o=this.shr(1);return n=o.div(t).shl(1),n.eq(wi)?t.isNegative()?ac:nv:(i=this.sub(t.mul(n)),r=n.add(i.div(t)),r)}else if(t.eq($s))return this.unsigned?ka:wi;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=wi}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:Dp(2,a-48),c=yi(n),u=c.mul(t);u.isNegative()||u.gt(i);)n-=l,c=yi(n,this.unsigned),u=c.mul(t);c.isZero()&&(c=ac),r=r.add(c),i=i.sub(u)}return r};Ft.div=Ft.divide;Ft.modulo=function(t){if(Gs(t)||(t=or(t)),bi){var e=(this.unsigned?bi.rem_u:bi.rem_s)(this.low,this.high,t.low,t.high);return tn(e,bi.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};Ft.mod=Ft.modulo;Ft.rem=Ft.modulo;Ft.not=function(){return tn(~this.low,~this.high,this.unsigned)};Ft.and=function(t){return Gs(t)||(t=or(t)),tn(this.low&t.low,this.high&t.high,this.unsigned)};Ft.or=function(t){return Gs(t)||(t=or(t)),tn(this.low|t.low,this.high|t.high,this.unsigned)};Ft.xor=function(t){return Gs(t)||(t=or(t)),tn(this.low^t.low,this.high^t.high,this.unsigned)};Ft.shiftLeft=function(t){return Gs(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?tn(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):tn(0,this.low<<t-32,this.unsigned)};Ft.shl=Ft.shiftLeft;Ft.shiftRight=function(t){return Gs(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?tn(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):tn(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};Ft.shr=Ft.shiftRight;Ft.shiftRightUnsigned=function(t){if(Gs(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return tn(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?tn(e,0,this.unsigned):tn(e>>>t-32,0,this.unsigned)};Ft.shru=Ft.shiftRightUnsigned;Ft.shr_u=Ft.shiftRightUnsigned;Ft.toSigned=function(){return this.unsigned?tn(this.low,this.high,!1):this};Ft.toUnsigned=function(){return this.unsigned?this:tn(this.low,this.high,!0)};Ft.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};Ft.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};Ft.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Qe.fromBytes=function(t,e,n){return n?Qe.fromBytesLE(t,e):Qe.fromBytesBE(t,e)};Qe.fromBytesLE=function(t,e){return new Qe(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Qe.fromBytesBE=function(t,e){return new Qe(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const gV=eD({__proto__:null,default:ev},[ev]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wa=ev||gV;function Tg(s){return wa.fromString(s,!0,16)}const FI=Tg("c3a5c85c97cb3127"),va=Tg("b492b66fbe98f273"),us=Tg("9ae16a3b2f90404f");function sv(s){return s.xor(s.shru(47))}function PI(s,t,e){const n=s.slice(t,t+e);return wa.fromBytes(Array.from(n),!0,!0)}function je(s,t){return PI(s,t,8)}function GS(s,t){return PI(s,t,4)}function Pn(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function $o(s,t,e=Tg("9ddfea08eb382d69")){let n=s.xor(t).mul(e);n=n.xor(n.shru(47));let i=t.xor(n).mul(e);return i=i.xor(i.shru(47)),i=i.mul(e),i}function xV(s,t,e,n,i,r){i=i.add(s),r=Pn(r.add(i).add(n),21);const o=i;return i=i.add(t),i=i.add(e),r=r.add(Pn(i,44)),[i.add(n),r.add(o)]}function qf(s,t,e,n){return xV(je(s,t),je(s,t+8),je(s,t+16),je(s,t+24),e,n)}function vV(s,t=s.length){if(t>=8){const e=us.add(t*2),n=je(s,0).add(us),i=je(s,t-8),r=Pn(i,37).mul(e).add(n),o=Pn(n,25).add(i).mul(e);return $o(r,o,e)}if(t>=4){const e=us.add(t*2),n=GS(s,0);return $o(n.shl(3).add(t),GS(s,t-4),e)}if(t>0){const e=s[0],n=s[t>>1],i=s[t-1],r=e+(n<<8),o=t+(i<<2);return sv(us.mul(r).xor(FI.mul(o))).mul(us)}return us}function bV(s,t=s.length){const e=us.add(t*2),n=je(s,0).mul(va),i=je(s,8),r=je(s,t-8).mul(e),o=je(s,t-16).mul(us);return $o(Pn(n.add(i),43).add(Pn(r,30)).add(o),n.add(Pn(i.add(us),18)).add(r),e)}function yV(s,t=s.length){const e=us.add(t*2),n=je(s,0).mul(us),i=je(s,8),r=je(s,t-8).mul(e),o=je(s,t-16).mul(us),a=Pn(n.add(i),43).add(Pn(r,30)).add(o),l=$o(a,n.add(Pn(i.add(us),18)).add(r),e),c=je(s,16).mul(e),u=je(s,24),h=a.add(je(s,t-32)).mul(e),d=l.add(je(s,t-24)).mul(e);return $o(Pn(c.add(u),43).add(Pn(h,30)).add(d),c.add(Pn(u.add(n),18)).add(h),e)}function wV(s,t=s.length){const e=wa.fromNumber(81,!0);if(t<=32)return t<=16?vV(s,t):bV(s,t);if(t<=64)return yV(s,t);let n=e,i=e.mul(va).add(113),r=sv(i.mul(us).add(113)).mul(us),o=[wa.UZERO,wa.UZERO],a=[wa.UZERO,wa.UZERO];n=n.mul(us).add(je(s,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do n=Pn(n.add(i).add(o[0]).add(je(s,l+8)),37).mul(va),i=Pn(i.add(o[1]).add(je(s,l+48)),42).mul(va),n=n.xor(a[1]),i=i.add(o[0]).add(je(s,l+40)),r=Pn(r.add(a[0]),33).mul(va),o=qf(s,l,o[1].mul(va),n.add(a[0])),a=qf(s,l+32,r.add(a[1]),i.add(je(s,l+16))),[r,n]=[n,r],l+=64;while(l!==c);const h=va.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),n=Pn(n.add(i).add(o[0]).add(je(s,l+8)),37).mul(h),i=Pn(i.add(o[1]).add(je(s,l+48)),42).mul(h),n=n.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(je(s,l+40))),r=Pn(r.add(a[0]),33).mul(h),o=qf(s,l,o[1].mul(h),n.add(a[0])),a=qf(s,l+32,r.add(a[1]),i.add(je(s,l+16))),[r,n]=[n,r],$o($o(o[0],a[0],h).add(sv(i).mul(FI)).add(r),$o(o[1],a[1],h).add(n),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(s,t){return t==="string"?Lo(s):ml([s],t)}function _V(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function ml(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=kc(s)),dt().getBool("DEBUG")&&tV(s,t),_V(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const e=new Uint8Array(s.length);for(let n=0;n<e.length;++n)Math.round(s[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function vs(){return dt().platform.now()}function Lo(s,t="utf-8"){return t=t||"utf-8",dt().platform.encode(s,t)}function zo(s,t="utf-8"){return t=t||"utf-8",dt().platform.decode(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SV{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new TV)}profileKernel(t,e,n){let i;const r=()=>{i=n()};let o;const a=vs();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const c of i)c.dataSync();o=Promise.resolve({kernelMs:vs()-a})}if(dt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<i.length;c++){const u=i[c];u.data().then(h=>{CV(h,u.dtype,t)})}return{kernelName:t,outputs:i,inputs:e,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:i,inputs:r,extraInfo:o}=t;n.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],r,l[2])})})}}function CV(s,t,e){if(t!=="float32")return!1;for(let n=0;n<s.length;n++){const i=s[n];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${e}'`),!0}return!1}class TV{logKernelProfile(t,e,n,i,r,o){const a=typeof i=="number"?mc(`${i}ms`,9):i.error,l=mc(t,25),c=e.rank,u=e.size,h=mc(e.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const g=p.shape||e.shape,m=g.length;d+=`${f}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(s,t,e){const n={},i={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<s.length;l++){const c=s[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<t.length;p++)if(n[d.id]){c.outputs.forEach(g=>n[g.id]=!0),f=!0,i[c.id]=!0;break}if(f)break}}const r={};r[e.id]=!0;const o={};for(let l=s.length-1;l>=0;l--){const c=s[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<s.length;l++){const c=s[l];if(i[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];n[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function EV(s,t,e,n){for(let i=t.length-1;i>=0;i--){const r=t[i],o=[];if(r.outputs.forEach(l=>{const c=s[l.id];c!=null?o.push(c):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Le(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(s[u.id]==null)s[u.id]=c;else{const h=s[u.id];s[u.id]=n(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=20,ku=3,cx=7;function MV(s,t,e,n){const i=le(t),r=kV(s,t,e,i),o=t.length,a=pp(s,t,e,i,r),l=["Tensor"];return n&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function kV(s,t,e,n){const i=gt(t),r=n[n.length-1],o=new Array(r).fill(0),a=t.length,l=e==="complex64"?Pu(s):s;if(a>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],Fu(l[u+h],0,e).length)}return o}function Fu(s,t,e){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(cx))} + ${parseFloat(s[1].toFixed(cx))}j`:Nh(s)?n=`'${s}'`:e==="bool"?n=OI(s):n=parseFloat(s.toFixed(cx)).toString(),mc(n,t)}function OI(s){return s===0?"false":"true"}function pp(s,t,e,n,i,r=!0){const o=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const g=Pu(s);return[Fu(g[0],0,e)]}return e==="bool"?[OI(s[0])]:[s[0].toString()]}if(l===1){if(a>HS){const m=ku*o;let x=Array.from(s.slice(0,m)),v=Array.from(s.slice((a-ku)*o,a*o));return e==="complex64"&&(x=Pu(x),v=Pu(v)),["["+x.map((y,b)=>Fu(y,i[b],e)).join(", ")+", ..., "+v.map((y,b)=>Fu(y,i[a-ku+b],e)).join(", ")+"]"]}return["["+(e==="complex64"?Pu(s):Array.from(s)).map((m,x)=>Fu(m,i[x],e)).join(", ")+"]"]}const c=t.slice(1),u=n.slice(1),h=n[0]*o,d=[];if(a>HS){for(let g=0;g<ku;g++){const m=g*h,x=m+h;d.push(...pp(s.slice(m,x),c,e,u,i,!1))}d.push("...");for(let g=a-ku;g<a;g++){const m=g*h,x=m+h;d.push(...pp(s.slice(m,x),c,e,u,i,g===a-1))}}else for(let g=0;g<a;g++){const m=g*h,x=m+h;d.push(...pp(s.slice(m,x),c,e,u,i,g===a-1))}const f=l===2?",":"";d[0]="["+d[0]+f;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+f;let p=`,
`;for(let g=2;g<l;g++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function Pu(s){const t=[];for(let e=0;e<s.length;e+=2)t.push([s[e],s[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ss{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=gt(t),n!=null){const i=n.length;P(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Sn(e,this.size),this.strides=le(t)}set(t,...e){e.length===0&&(e=[0]),P(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const i of t){if(i<0||i>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let n=t[t.length-1];for(let i=0;i<t.length-1;++i)n+=this.strides[i]*t[i];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Vi().makeTensor(this.values,this.shape,this.dtype)}}let Vi=null,ec=null;function AV(s){Vi=s}function NV(s){ec=s}class _n{constructor(t,e,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=gt(t),this.strides=le(t),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return ec.buffer(this.shape,this.dtype,t)}bufferSync(){return ec.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Ki(this.shape,t,this.dtype==="complex64")}arraySync(){return Ki(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Vi().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(n=>zo(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Vi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Vi().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>zo(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Vi().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Vi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return ec.print(this,t)}clone(){return this.throwIfDisposed(),ec.clone(this)}toString(t=!1){const e=this.dataSync();return MV(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),ec.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Vi().makeVariable(this,t,e,n)}}Object.defineProperty(_n,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function pt(){return lb("Tensor",()=>_n)}pt();class $p extends _n{constructor(t,e,n,i){super(t.shape,t.dtype,t.dataId,i),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Le(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Vi().disposeTensor(this),this.dataId=t.dataId,Vi().incRef(this,null)}dispose(){Vi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty($p,Symbol.hasInstance,{value:s=>s instanceof _n&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qS;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(qS||(qS={}));var iv;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(iv||(iv={}));var rv;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(rv||(rv={}));var ov;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(ov||(ov={}));var av;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(av||(av={}));const RV={float32:ov,int32:iv,bool:rv,complex64:av};function zs(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return RV[s][t]}function ey(s){return zs(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(s,t){if(s.dtype===t.dtype)return[s,t];const e=zs(s.dtype,t.dtype);return[s.cast(e),t.cast(e)]}function zI(s){const t=[];return BI(s,t,new Set),t}function BI(s,t,e){if(s==null)return;if(s instanceof _n){t.push(s);return}if(!DV(s))return;const n=s;for(const i in n){const r=n[i];e.has(r)||(e.add(r),BI(r,t,e))}}function DV(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ux(s){return s.kernelName!=null}class jS{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Rc{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new jS}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Ks(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new SV(this.backendInstance),!0}setupRegisteredKernels(){OS(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){OS(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(n&&!(n instanceof rb)&&typeof n.then=="function"){const i=++this.pendingBackendInitId,r=n.then(o=>i<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Ks(`Initialization of backend ${t} failed`),Ks(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Ks(`Initialization of backend ${t} failed`),Ks(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:i,asyncInit:r}=this.initializeBackend(n);if(r||i)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),i=n.backend,r=this.readSync(e),o=i.refCount(e);i.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=e(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(t,e,n){t();try{const i=n();return e(),i}catch(i){throw e(),i}}nextTensorId(){return Rc.nextTensorId++}nextVariableId(){return Rc.nextVariableId++}clone(t){const e=J.runKernel(Qh,{x:t}),n={x:t},i=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return J.runKernel(Bh,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[e],i,r,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(FS(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const i=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-e-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=ux(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ux(t)){const{kernelName:p,inputs:g,attrs:m}=t;this.backendName==null&&this.backend;const x=FS(p,this.backendName);P(x!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const v=this.backend.numDataIds();l=x.kernelFunc({inputs:g,attrs:m,backend:this.backend});const y=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,v,y);const b=y.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(p,g,b);n=this.saveTensorsForBackwardMode(w)}return b}}else{const{forwardFunc:p}=t,g=m=>{!i||(n=m.map(x=>this.keep(this.clone(x))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,g));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,x),x}}const{inputs:u,attrs:h}=t,d=ux(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),i&&this.addTapeNode(c,u,e,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:e.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){const i=PS(t);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(P(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=r.map(c=>e[c]);const l=n.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(t,e,n,i){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let r=t;n==="string"&&Nh(t[0])&&(r=t.map(l=>Lo(l)));const o=i.write(r,e,n),a=new _n(e,n,o,this.nextTensorId());if(this.trackTensor(a,i),n==="string"){const l=this.state.tensorInfo.get(o),c=nV(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,n,i){n=n||"float32";const r={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:i,dtype:r}=t,o=new _n(i,r,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==t.dtype&&(t=t.cast(i));const r=new $p(t,e,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*Xx(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof $p||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const n=t.size*Xx(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},l=PS(t);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=n[h],f=rs(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=zI(t),n=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!n.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(t,e,n,i=!1){if(P(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));P(r instanceof _n,()=>"The result y returned by f() must be a tensor.");const o=IV(this.state.activeTape,e,r);if(!i&&o.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=n==null?$V(r.shape):n,EV(a,o,c=>this.tidy(c),LV);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(t){return P(Yx(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{P(e.every(a=>a instanceof _n),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const i={};e.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(n=t(...e,l),P(n.value instanceof _n,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Yx(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(a,l)=>{const c=n.gradFunc(a,l),u=Array.isArray(c)?c:[c];P(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(u.every(d=>d instanceof _n),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=vs(),n=await this.backend.time(t);return n.wallMs=vs()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new jS;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Rc.nextTensorId=0;Rc.nextVariableId=0;function $V(s){const t=ab(gt(s),"float32");return J.makeTensor(t,s,"float32")}function UI(){const s=mI();if(s._tfengine==null){const t=new iV(s);s._tfengine=new Rc(t)}return lV(s._tfengine.ENV),AV(()=>s._tfengine),s._tfengine}const J=UI();function LV(s,t){const e={a:s,b:t};return J.runKernel(eu,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(){return typeof navigator<"u"&&navigator!=null}function VI(s){if(s||FV()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=s;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function WI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bs=dt();Bs.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Bs.registerFlag("IS_BROWSER",()=>WI());Bs.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Bs.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Bs.registerFlag("PROD",()=>!1);Bs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Bs.getBool("DEBUG"));Bs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Bs.registerFlag("IS_TEST",()=>!1);Bs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Bs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Bs.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Bs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Bs.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(s,t){let e=s;if(Rr(s))return t==="string"?[]:[s.length];if(typeof s=="object"&&"texture"in s){const i=s.channels||"RGBA";return[s.height,s.width*i.length]}if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(e)||Rr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(s)&&dt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&GI(s,n,[]),n}function GI(s,t,e){if(e=e||[],!Array.isArray(s)&&!Rr(s)){P(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${s.length} elements`),P(s.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const n=t.slice(1);for(let i=0;i<s.length;++i)GI(s[i],n,e.concat(i))}function XS(s,t,e,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${s} tensor, but got ${t} tensor`)}}function B(s,t,e,n="numeric"){if(s instanceof _n)return XS(n,s.dtype,t,e),s;let i=Rh(s);if(i!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(i=n),XS(n,i,t,e),s==null||!Rr(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const r=Ig(s,i);!Rr(s)&&!Array.isArray(s)&&(s=[s]);const a=i!=="string"?ml(s,i):kc(s,[],!0);return J.makeTensor(a,r,i)}function HI(s,t,e,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,o)=>B(r,`${t}[${o}]`,e,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV="__op";function Q(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const n=s[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+PV;const i=(...r)=>{J.startScope(e);try{const o=n(...r);return fI(o)&&console.error("Cannot return a Promise inside of tidy."),J.endScope(o),o}catch(o){throw J.endScope(null),o}};return Object.defineProperty(i,"name",{value:e,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(s,t){const e=B(s,"real","complex"),n=B(t,"imag","complex");Ni(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);const i={real:e,imag:n};return J.runKernel(mb,i)}const Dc=Q({complex_:OV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eg(s,t,e,n){if(n==null&&(n=Rh(s)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof s=="object"&&"texture"in s){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return s.channels=s.channels||"RGBA",J.backend.createTensorFromTexture(s,t||e,n)}if(!Rr(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){dI(t);const i=gt(t),r=gt(e);P(i===r,()=>`Based on the provided shape, [${t}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<e.length;++o){const a=e[o],l=o===e.length-1?a!==gt(t.slice(o)):!0;P(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Rr(s)&&!Array.isArray(s)&&(s=[s]),t=t||e,s=n!=="string"?ml(s,n):kc(s,[],!0),J.makeTensor(s,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xu(s,t,e){const n=Ig(s,e);return Eg(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS=4;async function YS(s,t){const e=[],n=[],i=Array.isArray(s)?s.map(o=>o.name):Object.keys(s);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(s)?s[o].tensor:s[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,x)=>m+x.length,0)+KS*d.length,p=new Uint8Array(f);let g=0;for(let m=0;m<d.length;m++){const x=d[m],v=new Uint8Array(new Uint32Array([x.length]).buffer);p.set(v,g),g+=KS,p.set(x,g),g+=x.length}h(p)});n.push(u)}else n.push(l.data());t!=null&&(c.group=t),e.push(c)}const r=await Promise.all(n);return{data:zV(r),specs:e}}function zV(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const e=[];s.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(t);let i=0;return e.forEach(r=>{n.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),n.buffer}const ny=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function ZS(s){return ny?Buffer.byteLength(s):new Blob([s]).size}function BV(s){if(ny)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function UV(s){if(ny){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const t=atob(s),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function qI(s){if(s.length===1)return s[0];let t=0;s.forEach(i=>{t+=i.byteLength});const e=new Uint8Array(t);let n=0;return s.forEach(i=>{e.set(new Uint8Array(i),n),n+=i.byteLength}),e.buffer}function jI(s,t){const e={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(e.signature=s.signature),s.userDefinedMetadata!=null&&(e.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(e.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(e.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(e.trainingConfig=s.trainingConfig),e}function VV(s,t,e){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function WV(s,t){let e,n;return s.weightsManifest!=null&&([e,n]=await t(s.weightsManifest)),VV(s,e,n)}function Mg(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:ZS(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:ZS(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function GV(s){const t=[];for(const e of s)t.push(...e.weights);return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ln{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ln.instance==null&&(Ln.instance=new Ln),Ln.instance}static registerSaveRouter(t){Ln.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ln.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ln.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ln.getHandlers(t,"load",e)}static getHandlers(t,e,n){const i=[];return(e==="load"?Ln.getInstance().loadRouters:Ln.getInstance().saveRouters).forEach(o=>{const a=o(t,n);a!==null&&i.push(a)}),i}}const HV=s=>Ln.getSaveHandlers(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lv="tensorflowjs",cv=1,Aa="models_store",Mo="model_info_store";function XI(){if(!dt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function uv(s){const t=s.result;t.createObjectStore(Aa,{keyPath:"modelPath"}),t.createObjectStore(Mo,{keyPath:"modelPath"})}class Xa{constructor(t){if(this.indexedDB=XI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,i)=>{const r=this.indexedDB.open(lv,cv);r.onupgradeneeded=()=>uv(r),r.onsuccess=()=>{const o=r.result;if(e==null){const a=o.transaction(Aa,"readonly"),c=a.objectStore(Aa).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=u=>(o.close(),i(c.error)),a.oncomplete=()=>o.close()}else{const a=Mg(e),l=o.transaction(Mo,"readwrite");let c=l.objectStore(Mo);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=o.transaction(Aa,"readwrite");const f=h.objectStore(Aa).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(Mo);const g=c.delete(this.modelPath);g.onsuccess=()=>(o.close(),i(f.error)),g.onerror=m=>(o.close(),i(f.error))}},u.onerror=d=>(o.close(),i(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}Xa.URL_SCHEME="indexeddb://";const KI=s=>dt().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Xa.URL_SCHEME)?qV(s.slice(Xa.URL_SCHEME.length)):null;Ln.registerSaveRouter(KI);Ln.registerLoadRouter(KI);function qV(s){return new Xa(s)}function jV(s){return s.startsWith(Xa.URL_SCHEME)?s.slice(Xa.URL_SCHEME.length):s}class XV{constructor(){this.indexedDB=XI()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(lv,cv);n.onupgradeneeded=()=>uv(n),n.onsuccess=()=>{const i=n.result,r=i.transaction(Mo,"readonly"),a=r.objectStore(Mo).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(i.close(),e(a.error)),r.oncomplete=()=>i.close()},n.onerror=i=>e(n.error)})}async removeModel(t){return t=jV(t),new Promise((e,n)=>{const i=this.indexedDB.open(lv,cv);i.onupgradeneeded=()=>uv(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(Mo,"readwrite"),a=o.objectStore(Mo),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),h=()=>{c=r.transaction(Aa,"readwrite");const f=c.objectStore(Aa).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=p=>n(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),n(l.error))}},l.onerror=u=>(r.close(),n(l.error)),o.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>n(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eo="/",nc="tensorflowjs_models",YI="info",KV="model_topology",YV="weight_specs",ZV="weight_data",JV="model_metadata";function ZI(s){return{info:[nc,s,YI].join(eo),topology:[nc,s,KV].join(eo),weightSpecs:[nc,s,YV].join(eo),weightData:[nc,s,ZV].join(eo),modelMetadata:[nc,s,JV].join(eo)}}function JI(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function QV(s){const t=s.split(eo);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(eo)}function tW(s){return s.startsWith(Ka.URL_SCHEME)?s.slice(Ka.URL_SCHEME.length):s}class Ka{constructor(t){if(!dt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=ZI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),i=Mg(t);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,BV(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw JI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=UV(o),e}}Ka.URL_SCHEME="localstorage://";const QI=s=>dt().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ka.URL_SCHEME)?eW(s.slice(Ka.URL_SCHEME.length)):null;Ln.registerSaveRouter(QI);Ln.registerLoadRouter(QI);function eW(s){return new Ka(s)}class nW{constructor(){P(dt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=nc+eo,n=eo+YI;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(e)&&r.endsWith(n)){const o=QV(r);t[o]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=tW(t);const e=ZI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return JI(e),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS="://";class gr{constructor(){this.managers={}}static getInstance(){return gr.instance==null&&(gr.instance=new gr),gr.instance}static registerManager(t,e){P(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(JS)&&(t=t.slice(0,t.indexOf(JS))),P(t.length>0,()=>"scheme must not be an empty string.");const n=gr.getInstance();P(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=gr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(gr.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sW{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!dt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const i=this.functionRefs[n.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(dt().get("IS_BROWSER")){dt().setPlatform("browser",new sW);try{gr.registerManager(Ka.URL_SCHEME,new nW)}catch{}try{gr.registerManager(Xa.URL_SCHEME,new XV)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW={importFetch:()=>require("node-fetch")};let hx;class rW{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return dt().global.fetch!=null?dt().global.fetch(t,e):(hx==null&&(hx=iW.importFetch()),hx(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}dt().get("IS_NODE")&&!dt().get("IS_BROWSER")&&dt().setPlatform("node",new rW);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ve(s,t="float32",e){return t=t||"float32",dI(s),new ss(s,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(s,t){const e=B(s,"x","cast");if(!eV(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:e},i={dtype:t};return J.runKernel(Bh,n,i)}const Vt=Q({cast_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(s){const e={x:B(s,"x","clone","string_or_numeric")};return J.runKernel(Qh,e)}const $a=Q({clone_:aW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */UI();const cW={buffer:ve,cast:Vt,clone:$a,print:lW};NV(cW);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW="model",hW=".json",dW=".weights.bin";function QS(s){return new Promise(t=>setTimeout(t)).then(s)}class Ya{constructor(t){if(!dt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ya.URL_SCHEME)&&(t=t.slice(Ya.URL_SCHEME.length)),(t==null||t.length===0)&&(t=uW),this.modelJsonFileName=t+hW,this.weightDataFileName=t+dW}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=jI(t,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await QS(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await QS(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Mg(t)}}}}Ya.URL_SCHEME="downloads://";const fW=s=>dt().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ya.URL_SCHEME)?pW(s.slice(Ya.URL_SCHEME.length)):null;Ln.registerSaveRouter(fW);function pW(s="model"){return new Ya(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(s,t,e,n){o(s),e=e==null?0:e,n=n==null?1:n,a(e,n);let i=0;const r=l=>(l.then(c=>{const u=e+ ++i/s.length*(n-e);return t(u),c}),l);function o(l){P(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),P(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),P(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mW(s,t){t==null&&(t={});const e=t.fetchFunc==null?dt().platform.fetch:t.fetchFunc,n=s.map(h=>e(h,t.requestInit,{isBinary:!0})),i=0,r=.5,a=(t.onProgress==null?await Promise.all(n):await tC(n,t.onProgress,i,r)).map(h=>h.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(a):await tC(a,t.onProgress,l,c)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW="application/octet-stream",xW="application/json";class sy{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(P(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=dt().platform.fetch,P(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&P(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],i=jI(t,n);e.body.append("model.json",new Blob([JSON.stringify(i)],{type:xW}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:gW}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Mg(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const n=e.modelTopology,i=e.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return WV(e,r=>this.loadWeights(r))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=vW(e),r=this.weightPathPrefix||n,o=GV(t),a=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(r+h+i);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await mW(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,qI(c)]}}sy.URL_SCHEME_REGEX=/^https?:\/\//;function vW(s){const t=s.lastIndexOf("/"),e=s.lastIndexOf("?"),n=s.substring(0,t),i=e>t?s.substring(e):"";return[n+"/",i]}function eC(s){return s.match(sy.URL_SCHEME_REGEX)!=null}const tE=(s,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(s)?e=s.every(n=>eC(n)):e=eC(s),e)return bW(s,t)}return null};Ln.registerSaveRouter(tE);Ln.registerLoadRouter(tE);function bW(s,t){return new sy(s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(s,t,e=!1,n=!1){let i=B(s,"a","matMul"),r=B(t,"b","matMul");[i,r]=xn(i,r);const o={a:i,b:r},a={transposeA:e,transposeB:n};return J.runKernel(Am,o,a)}const $e=Q({matMul_:yW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(s,t,e=1,n=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:B(s,"indices","oneHot","int32")},a={dtype:i,depth:t,onValue:e,offValue:n};return J.runKernel(ag,o,a)}const eE=Q({oneHot_:wW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(){return J}function Lp(){return J.memory()}function at(s,t){return J.tidy(s,t)}function _e(s){zI(s).forEach(e=>e.dispose())}function Dr(s){return J.keep(s)}function _W(s){return J.setBackend(s)}function nE(s,t,e=1){return J.registerBackend(s,t,e)}function SW(){return J.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(s){const e={input:B(s,"input","imag")};return J.runKernel(Ab,e)}const iy=Q({imag_:CW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(s){const e={x:B(s,"x","neg")};return J.runKernel(ig,e)}const cn=Q({neg_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(s){const e={input:B(s,"input","real")};return J.runKernel(Ob,e)}const Fp=Q({real_:IW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(s,t,e){const n=B(s,"x","transpose");if(t==null&&(t=n.shape.map((o,a)=>a).reverse()),P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(o=>{P(o>=0&&o<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const i={x:n},r={perm:t};return n.dtype==="complex64"?at(()=>{let o=Fp(n),a=iy(n);return o=J.runKernel(gc,{x:o},r),a=J.runKernel(gc,{x:a},r),e&&(a=cn(a)),Dc(o,a)}):J.runKernel(gc,i,r)}const Ee=Q({transpose_:EW});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $c(s,t){const e=s.length,n=[];for(let i=0;i<e;i++){const r=e-1-i,o=s[r]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(r)}return n}function Rn(s,t){const e=[];for(let n=0;n<t.length;n++){const i=s[s.length-n-1],r=t.length-n-1,o=t[r];(i==null||i===1&&o>1)&&e.unshift(r)}return e}function pe(s,t){const e=[],n=Math.max(s.length,t.length);for(let i=0;i<n;i++){let r=s[s.length-i-1];r==null&&(r=1);let o=t[t.length-i-1];if(o==null&&(o=1),r===1)e.unshift(o);else if(o===1)e.unshift(r);else if(r!==o){const a=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(a)}else e.unshift(r)}return e}function ry(s,t){const e=s.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(gt(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const i=t.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=s.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<e;++h)c*=a[h],l.push(a[h]);const u=[...le(s.shape).map(h=>h/c),1].slice(0,r);return[l,o,c,u]}function sE(s,t,e){const n=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${i}.`;if(e.rank<i)throw new Error(r+` update.rank < ${i}. `);if(s.length<n+(e.rank-i))throw new Error(r+` Output shape length < ${n+(e.rank-i)}`);if(e.rank!==i+s.length-n)throw new Error(r+` update.rank != ${i+s.length-n}`);for(let o=0;o<i;++o)if(e.shape[o]!==t.shape[o])throw new Error(r+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-i;++o)if(e.shape[o+i]!==s[o+n])throw new Error(r+` updates.shape[${o+i}] (${e.shape[o+i]}) != shape[${o+i}] (${s[o+i]})`)}function MW(s,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}sE(e,t,s)}function Md(s,t,e){const n=t.shape.length,i=n>1?t.shape[n-1]:1,r=e.length;let o=1;for(let h=i;h<r;++h)o*=e[h];const a=i<1?1:i,l=gt(t.shape)/a,c=[...le(e.slice(0,i)),1],u=gt(e);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hv=-2,kW=-1;function oy(s,t,e){const n=s.shape.length;P(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),P(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let i=0;i<n;++i)P(t[i]+e[i]<=s.shape[i],()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${s.shape[i]})`)}function AW(s){const t=[];let e=0;for(;s>0;)s&1&&t.push(e),s/=2,e++;return t}function ay(s,t,e){const n=[];for(let i=0;i<s.length;i++)n[i]=Math.ceil((t[i]-s[i])/e[i]);return n}function iE(s,t,e,n){const i=[...s];for(let r=i.length;r<n.length;r++)i.push(1);for(let r=0;r<e;r++)r===0?i[t]=1:(i.splice(t,0,1),i.pop());return i}function rE(s,t,e){return e<=s?e:e-(t-1)}function oE(s,t){const e=[];for(let n=0;n<s;n++)e.push(t+n);return e}function NW(s,t,e,n,i,r,o,a,l){const c=s.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const f=t[0],p=e+1;u=aE(o,f,p,n,s),h=lE(a,f,p,i,s),d=iE(r,f,p,s)}else for(let f=0;f<c;f++)u[f]=uE(o,n,r,s,f,l),h[f]=hE(a,i,r,s,f,l),d[f]=cE(r,f,l);return{begin:u,end:h,strides:d}}function aE(s,t,e,n,i){const r=[...i],o=oE(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=rE(t,e,a);let c=n[l];s&1<<l&&(c=0),r[a]=c}return r}function lE(s,t,e,n,i){const r=[...i],o=oE(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=rE(t,e,a);let c=n[l];s&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=ja(0,r[a],i[a])}return r}function cE(s,t,e){let n=s[t];return(e&1<<t||n==null)&&(n=1),n}function uE(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),o=ja(0,o,l-1),o}function hE(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),a>0?o=ja(0,o,l):o=ja(-1,o,l-1),o}function ly(s,t,e){let n=e.length;for(let i=0;i<e.length;i++)if(e[i]>1){n=i;break}for(let i=n+1;i<e.length;i++)if(t[i]>0||e[i]!==s[i])return!1;return!0}function cy(s,t){let e=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)e+=s[n]*t[n];return e}function kg(s,t,e){let n;const i=s.shape.length;typeof t=="number"?n=[t,...new Array(i-1).fill(0)]:t.length<i?n=t.concat(new Array(i-t.length).fill(0)):n=t.slice(),n.forEach(o=>{P(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(i).fill(-1):typeof e=="number"?r=[e,...new Array(i-1).fill(-1)]:e.length<i?r=e.concat(new Array(i-e.length).fill(-1)):r=e,r=r.map((o,a)=>o>=0?o:(P(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),s.shape[a]-n[a])),[n,r]}function uy(s,t,e,n,i,r,o,a,l){let c;if(n==null?(c=new Array(t.length),c.fill(1)):c=n,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let y=0;y<h.dims;y++)u&&(1<<y&a)!==0&&h.numAddAxisAfterEllipsis++,1<<y&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};RW(h,d);let f=!0,p=!0,g=!0;const m=[],x=[];for(let y=0;y<s.length;++y){if(d.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<y),w=s[y];if(w===-1){m.push(b?1:-1);continue}const _=[d.beginMask&1<<y,d.endMask&1<<y],C=[d.strides[y]>0?0:-1,d.strides[y]>0?w:w-1];if(b&&d.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[y]===1;const S=!!(d.beginMask&1<<y&&d.endMask&1<<y);if(d.beginValid&&d.endValid){if(b){const D=d.begin[y]<0?w+d.begin[y]:d.begin[y];if(d.begin[y]=D,d.end[y]=d.begin[y]+1,D<0||D>=w)throw Error(`slice index ${d.begin[y]} of dimension ${y} out of bounds.`)}else d.begin[y]=nC(d.begin[y],0,d.strides[y],w,_,C),d.end[y]=nC(d.end[y],1,d.strides[y],w,_,C);const A=d.strides[y]===1&&d.begin[y]===0&&d.end[y]===w;f=f&&A,p=p&&(y===0&&d.strides[y]===1||A)}else f=f&&d.strides[y]===1&&S,p=p&&(y===0&&d.strides[y]===1||S);let T,I=!1;if(d.beginValid&&d.endValid?(T=d.end[y]-d.begin[y],I=!0):b?(T=1,I=!0):S&&w>=0&&(d.strides[y]<0?T=-w:T=w,I=!0),I){let A;T===0||T<0!=d.strides[y]<0?A=0:A=Math.trunc(T/d.strides[y])+(T%d.strides[y]!==0?1:0),m.push(A)}else m.push(-1)}for(let y=0;y<d.finalShapeGatherIndices.length;++y){const b=d.finalShapeGatherIndices[y];b>=0?x.push(m[b]):b===hv&&x.push(1)}return{finalShapeSparse:x.filter((y,b)=>d.finalShapeGatherIndices[b]!==hv),finalShape:x,isIdentity:f,sliceDim0:p,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function RW(s,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=s.begin!=null,t.endValid=s.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const i=Math.min(t.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,t.dims);for(;e<i;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&s.newAxisMask)t.finalShapeGatherIndices.push(hv),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);s.begin!=null&&(t.begin[e]=s.begin[n]),s.end!=null&&(t.end[e]=s.end[n]),t.strides[e]=s.strides[n],s.beginMask&1<<n&&(t.beginMask|=1<<e),s.endMask&1<<n&&(t.endMask|=1<<e),s.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(kW),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function nC(s,t,e,n,i,r){if(i[t])return e>0?r[t]:r[t+1&1];{const o=s<0?n+s:s;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const DW=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:oy,maskToAxes:AW,computeOutShape:ay,stridesWithElidedDims:iE,getNormalizedAxes:NW,startIndicesWithElidedDims:aE,stopIndicesWithElidedDims:lE,stridesForAxis:cE,startForAxis:uE,stopForAxis:hE,isSliceContinous:ly,computeFlatOffset:cy,parseSliceParams:kg,sliceInfo:uy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nu{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class xi{constructor(){this.classNameMap={}}static getMap(){return xi.instance==null&&(xi.instance=new xi),xi.instance}static register(t){xi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Mt(s){P(s.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),P(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),xi.register(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(s,t){let e=B(s,"a","add"),n=B(t,"b","add");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(eu,i)}const Nt=Q({add_:$W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(s,t){let e=B(s,"a","floorDiv"),n=B(t,"b","floorDiv");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(Zh,i)}const dE=Q({floorDiv_:LW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(s,t){let e=B(s,"a","div"),n=B(t,"b","div");if([e,n]=xn(e,n),e.dtype==="int32"&&n.dtype==="int32")return dE(e,n);const i={a:e,b:n},r={};return J.runKernel(Hh,i,r)}const ae=Q({div_:FW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s,t){let e=B(s,"a","mul"),n=B(t,"b","mul");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(ld,i)}const K=Q({mul_:PW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(s){const t=B(s,"x","abs");if(t.dtype==="complex64"){const e={x:t};return J.runKernel(Rm,e)}else{const e={x:t};return J.runKernel(Tm,e)}}const Fn=Q({abs_:OW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(s){const e={x:B(s,"x","acos")};return J.runKernel(Dh,e)}const BW=Q({acos_:zW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(s){const e={x:B(s,"x","acosh")};return J.runKernel($h,e)}const VW=Q({acosh_:UW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(s,t=null,e=!1){const i={x:B(s,"x","all","bool")},r={axis:t,keepDims:e};return J.runKernel(ub,i,r)}const fE=Q({all_:WW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(s,t=null,e=!1){const i={x:B(s,"x","any","bool")},r={axis:t,keepDims:e};return J.runKernel(hb,i,r)}const dv=Q({any_:GW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(s,t=0){const n={x:B(s,"x","argMax")},i={axis:t};return J.runKernel(Im,n,i)}const fh=Q({argMax_:HW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(s,t=0){const n={x:B(s,"x","argMin")},i={axis:t};return J.runKernel(Em,n,i)}const jW=Q({argMin_:qW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s){const e={x:B(s,"x","asin")};return J.runKernel(Lh,e)}const KW=Q({asin_:XW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(s){const e={x:B(s,"x","asinh")};return J.runKernel(Fh,e)}const ZW=Q({asinh_:YW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(s){const e={x:B(s,"x","atan")};return J.runKernel(Ph,e)}const QW=Q({atan_:JW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(s,t){let e=B(s,"a","atan2"),n=B(t,"b","atan2");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(zh,i)}const eG=Q({atan2_:tG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(s){const e={x:B(s,"x","atanh")};return J.runKernel(Oh,e)}const sG=Q({atanh_:nG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(s,t,e,n,i="NHWC",r){const o=s[3],a=[...t,o],l=fo(i);return Jn(s,a,e,r,n,null,null,l)}function Ri(s,t,e,n,i,r,o="channelsLast"){const[a,l]=Pp(t);let c;if(o==="channelsLast")c=[a,l,s[3],s[3]];else if(o==="channelsFirst")c=[a,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Jn(s,c,e,n,i,r,!1,o)}function ho(s,t,e,n,i,r,o="NDHWC"){const[a,l,c]=fv(t);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,s[4],s[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Yo(s,u,e,n,i,!1,h,r)}function Jn(s,t,e,n,i,r,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=s;else if(a==="channelsFirst")[l,h,c,u]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=t,[g,m]=Pp(e),[x,v]=Pp(n),y=xc(d,x),b=xc(f,v),{padInfo:w,outHeight:_,outWidth:C}=oG(i,c,u,g,m,y,b,r,a),S=o?p*h:p;let T;return a==="channelsFirst"?T=[l,S,_,C]:a==="channelsLast"&&(T=[l,_,C,S]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:_,outWidth:C,outChannels:S,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:y,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:v,inShape:s,outShape:T,filterShape:t}}function Yo(s,t,e,n,i,r=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=s;else if(o==="channelsFirst")[l,d,c,u,h]=s;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,g,,m]=t,[x,v,y]=fv(e),[b,w,_]=fv(n),C=xc(f,b),S=xc(p,w),T=xc(g,_),{padInfo:I,outDepth:A,outHeight:D,outWidth:M}=aG(i,c,u,h,x,v,y,C,S,T,a),E=r?m*d:m;let k;return o==="channelsFirst"?k=[l,E,A,D,M]:o==="channelsLast"&&(k=[l,A,D,M,E]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:A,outHeight:D,outWidth:M,outChannels:E,padInfo:I,strideDepth:x,strideHeight:v,strideWidth:y,filterDepth:f,filterHeight:p,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:b,dilationHeight:w,dilationWidth:_,inShape:s,outShape:k,filterShape:t}}function iG(s,t,e,n,i){n==null&&(n=hy(s,t,e));const r=s[0],o=s[1],a=La((r-t+2*n)/e+1,i),l=La((o-t+2*n)/e+1,i);return[a,l]}function rG(s,t,e,n,i,r){i==null&&(i=hy(s,t,n));const o=s[0],a=s[1],l=s[2],c=La((o-t+2*i)/n+1,r),u=La((a-t+2*i)/n+1,r),h=La((l-t+2*i)/n+1,r);return[c,u,h,e]}function hy(s,t,e,n=1){const i=xc(t,n);return Math.floor((s[0]*(e-1)-e+i)/2)}function Pp(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function fv(s){return typeof s=="number"?[s,s,s]:s}function xc(s,t){return t<=1?s:s+(s-1)*(t-1)}function oG(s,t,e,n,i,r,o,a,l){let c,u,h;if(typeof s=="number"){c={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=iG([t,e],r,n,s,a);u=f[0],h=f[1]}else if(s==="same"){u=Math.ceil(t/n),h=Math.ceil(e/i);const d=Math.max(0,(u-1)*n+r-t),f=Math.max(0,(h-1)*i+o-e),p=Math.floor(d/2),g=d-p,m=Math.floor(f/2),x=f-m;c={top:p,bottom:g,left:m,right:x,type:"SAME"}}else if(s==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/n),h=Math.ceil((e-o+1)/i);else if(typeof s=="object"){const d=l==="channelsLast"?s[1][0]:s[2][0],f=l==="channelsLast"?s[1][1]:s[2][1],p=l==="channelsLast"?s[2][0]:s[3][0],g=l==="channelsLast"?s[2][1]:s[3][1];c={top:d,bottom:f,left:p,right:g,type:d===0&&f===0&&p===0&&g===0?"VALID":"EXPLICIT"},u=La((t-r+d+f)/n+1,a),h=La((e-o+p+g)/i+1,a)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:c,outHeight:u,outWidth:h}}function aG(s,t,e,n,i,r,o,a,l,c,u){let h,d,f,p;if(typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const m=rG([t,e,n,1],a,1,i,s,u);d=m[0],f=m[1],p=m[2]}else if(s==="same"){d=Math.ceil(t/i),f=Math.ceil(e/r),p=Math.ceil(n/o);const g=(d-1)*i+a-t,m=(f-1)*r+l-e,x=(p-1)*o+c-n,v=Math.floor(g/2),y=g-v,b=Math.floor(m/2),w=m-b,_=Math.floor(x/2),C=x-_;h={top:b,bottom:w,left:_,right:C,front:v,back:y,type:"SAME"}}else if(s==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-a+1)/i),f=Math.ceil((e-l+1)/r),p=Math.ceil((n-c+1)/o);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function La(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function Za(s){const[t,e,n]=Pp(s);return t===1&&e===1&&n===1}function as(s,t){return Za(s)||Za(t)}function fo(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function Is(s,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")P(Ac(t),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(i=>{P(Ac(i),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${i}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(s,t){const n={x:B(s,"x","reshape","string_or_numeric")},i={shape:t};return J.runKernel(dg,n,i)}const et=Q({reshape_:lG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(s,t,e,n,i){const r=B(s,"x","avgPool","float32"),o=1;P(as(e,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=et(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Is("avgPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i};let h=J.runKernel(Mm,c,u);return h=Vt(h,r.dtype),l?et(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const dy=Q({avgPool_:cG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(s,t,e,n,i,r="NDHWC"){const o=B(s,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),P(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Is("avgPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r};let h=J.runKernel(km,c,u);return h=Vt(h,a.dtype),l?et(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const hG=Q({avgPool3d_:uG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(s,t=0){P(s.length>=1,()=>"Pass at least one tensor to concat");const e=HI(s,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return $a(e[0]);const n=e,i={axis:t};return J.runKernel(Dm,n,i)}const is=Q({concat_:dG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(s){const e={x:B(s,"x","sigmoid","float32")};return J.runKernel(bd,e)}const su=Q({sigmoid_:fG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(s,t,e){const n=B(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const i={x:n},r={begin:t,size:e};return J.runKernel(xg,i,r)}const We=Q({slice_:pG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(s){const e={x:B(s,"x","tanh","float32")};return J.runKernel(Td,e)}const fy=Q({tanh_:mG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(s,t,e){const n=B(s,"x","batchToSpaceND"),i=t.reduce((a,l)=>a*l);P(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),P(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),P(n.shape[0]%i===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`);const r={x:n},o={blockShape:t,crops:e};return J.runKernel(Nm,r,o)}const py=Q({batchToSpaceND_:gG});function xG(s){let t;return s.rank===0||s.rank===1?t=et(s,[1,1,1,s.size]):s.rank===2?t=et(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=et(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(s,t,e,n,i,r){r==null&&(r=.001);const o=B(s,"x","batchNorm"),a=B(t,"mean","batchNorm"),l=B(e,"variance","batchNorm");let c;i!=null&&(c=B(i,"scale","batchNorm"));let u;n!=null&&(u=B(n,"offset","batchNorm")),P(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:xG(o),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:r},p=J.runKernel(Vm,d,f);return et(p,o.shape)}const Ag=Q({batchNorm_:vG});function bG(s,t,e,n,i,r){const o=B(s,"x","batchNorm"),a=B(t,"mean","batchNorm"),l=B(e,"variance","batchNorm");let c;i!=null&&(c=B(i,"scale","batchNorm"));let u;return n!=null&&(u=B(n,"offset","batchNorm")),P(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),P(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Ag(o,a,l,u,c,r)}const yG=Q({batchNorm2d_:bG});function wG(s,t,e,n,i,r){const o=B(s,"x","batchNorm"),a=B(t,"mean","batchNorm"),l=B(e,"variance","batchNorm");let c;i!=null&&(c=B(i,"scale","batchNorm"));let u;return n!=null&&(u=B(n,"offset","batchNorm")),P(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),P(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Ag(o,a,l,u,c,r)}const _G=Q({batchNorm3d_:wG});function SG(s,t,e,n,i,r){const o=B(s,"x","batchNorm"),a=B(t,"mean","batchNorm"),l=B(e,"variance","batchNorm");let c;i!=null&&(c=B(i,"scale","batchNorm"));let u;return n!=null&&(u=B(n,"offset","batchNorm")),P(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),P(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Ag(o,a,l,u,c,r)}const CG=Q({batchNorm4d_:SG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(s,t,e){const n=B(s,"x","bincount"),i=B(t,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(e>=0,()=>`size must be non-negative, but got ${e}.`),P(i.size===n.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${i.shape}.`);const r={x:n,weights:i},o={size:e};return J.runKernel(pb,r,o)}const IG=Q({bincount_:TG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(s,t){let e=B(s,"broadcastTo","x");const n=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=et(e,c)}const i=e.shape,r=Array.from(t);for(let c=t.length-1;c>=0;c--)if(i[c]===t[c])r[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return $a(e);const a={x:e},l={reps:r};return J.runKernel(Id,a,l)}const Ku=Q({broadcastTo_:EG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(s){const e={x:B(s,"x","ceil","float32")};return J.runKernel(Uh,e)}const kG=Q({ceil_:MG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(s,t,e){const n={shape:s,value:t,dtype:e};return J.runKernel(Eb,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(s,t,e){const n=B(s,"x","clipByValue");if(P(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ad(n.shape,t,n.dtype);const i={x:n},r={clipValueMin:t,clipValueMax:e};return J.runKernel(Vh,i,r)}const ti=Q({clipByValue_:AG});function NG(s){return is(s,0)}const RG=Q({concat1d_:NG});function DG(s,t){return is(s,t)}const $G=Q({concat2d_:DG});function LG(s,t){return is(s,t)}const FG=Q({concat3d_:LG});function PG(s,t){return is(s,t)}const OG=Q({concat4d_:PG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(s,t,e,n,i="NHWC",r=[1,1],o){const a=B(s,"x","conv2d","float32"),l=B(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Is("conv2d",n,o);const h=i==="NHWC"?c.shape[3]:c.shape[1];P(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),P(as(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=J.runKernel($m,d,f);return u?et(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Ja=Q({conv2d_:zG});function BG(s,t,e,n,i="NWC",r=1,o){const a=B(s,"x","conv1d"),l=B(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=et(a,[1,a.shape[0],a.shape[1]])),P(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),P(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Is("conv1d",n,o),P(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),P(as(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),P(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=et(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=et(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=Ja(d,h,[1,e],n,"NHWC",[1,r],o);return u?et(m,[m.shape[2],m.shape[3]]):et(m,[m.shape[0],m.shape[2],m.shape[3]])}const pE=Q({conv1d_:BG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(s,t,e,n,i,r="NHWC",o){P(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,l=t,c=!1;t.rank===3&&(c=!0,l=et(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,s[0],s[1],s[2]]),P(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),P(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),P(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];P(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),P(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),Is("conv2dDerInput",i,o);const d={dy:l,filter:e},f={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},p=J.runKernel(Lm,d,f);return c?et(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const my=Q({conv2DBackpropInput_:UG});function VG(s,t,e,n,i,r){const o=B(s,"x","conv2dTranspose"),a=B(t,"filter","conv2dTranspose");return my(e,o,a,n,i,"NHWC",r)}const mE=Q({conv2dTranspose_:VG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(s,t,e,n,i="NDHWC",r=[1,1,1]){const o=B(s,"x","conv3d"),a=B(t,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),P(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),P(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),P(as(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),P(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:e,pad:n,dataFormat:i,dilations:r},d=J.runKernel(Fm,u,h);return c?et(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const GG=Q({conv3d_:WG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(s,t,e,n,i){P(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let r=s,o=t,a=!1;t.rank===4&&(a=!0,o=et(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],c=o.shape[4];P(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),P(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),P(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),P(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),P(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:o,filter:e},h={pad:i,strides:n,inputShape:r},d=J.runKernel(vb,u,h);return a?et(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const gE=Q({conv3DBackpropInput_:HG});function qG(s,t,e,n,i){const r=B(s,"x","conv3dTranspose"),o=B(t,"filter","conv3dTranspose");return gE(e,r,o,n,i)}const jG=Q({conv3dTranspose_:qG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(s){const e={x:B(s,"x","cos","float32")};return J.runKernel(Wh,e)}const gy=Q({cos_:XG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(s){const e={x:B(s,"x","cosh","float32")};return J.runKernel(Gh,e)}const xE=Q({cosh_:KG});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(s,t=0,e=!1,n=!1){const r={x:B(s,"x","cumprod")},o={axis:t,exclusive:e,reverse:n};return J.runKernel(bb,r,o)}const pv=Q({cumprod_:YG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s,t=0,e=!1,n=!1){const r={x:B(s,"x","cumsum")},o={axis:t,exclusive:e,reverse:n};return J.runKernel(Pm,r,o)}const vE=Q({cumsum_:ZG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(s,t,e,n=!1){const i=B(s,"x","denseBincount"),r=B(t,"weights","denseBincount");P(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),P(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),P(e>=0,()=>`size must be non-negative, but got ${e}.`),P(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:e,binaryOutput:n};return J.runKernel(wb,o,a)}const sC=Q({denseBincount_:JG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(s,t,e="NHWC"){const n=B(s,"x","depthToSpace","float32"),i=e==="NHWC"?n.shape[1]:n.shape[2],r=e==="NHWC"?n.shape[2]:n.shape[3],o=e==="NHWC"?n.shape[3]:n.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t}  for depthToSpace with input shape
    ${n.shape}`),P(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${n.shape}`),P(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${n.shape}`);const a={x:n},l={blockSize:t,dataFormat:e};return J.runKernel(_b,a,l)}const tH=Q({depthToSpace_:QG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(s,t,e,n,i="NHWC",r=[1,1],o){const a=B(s,"x","depthwiseConv2d","float32"),l=B(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];P(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Is("depthwiseConv2d",n,o);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=J.runKernel(Om,d,f);return u?et(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const xy=Q({depthwiseConv2d_:eH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(s,t,e,n,i=[1,1],r="NHWC"){const o=B(s,"x","dilation2d"),a=B(t,"filter","dilation2d");P(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),P(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),P(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,c=!1;o.rank===3&&(l=et(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:e,pad:n,dilations:i},d=J.runKernel(zm,u,h);return c?et(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const sH=Q({dilation2d_:nH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(s,t){let e=B(s,"a","equal","string_or_numeric"),n=B(t,"b","equal","string_or_numeric");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Bm,i)}const $r=Q({equal_:iH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(s,t,e){const n=B(t,"a","where"),i=B(e,"b","where"),r=B(s,"condition","where","bool"),o=pe(pe(r.shape,n.shape),i.shape),a=Ku(r,o),l=Ku(n,o),c=Ku(i,o),u={condition:a,t:l,e:c};return J.runKernel(gg,u)}const Us=Q({where_:rH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(s){const e={x:B(s,"x","zerosLike")};return J.runKernel(Cg,e)}const ke=Q({zerosLike_:oH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(s,t){let e=B(s,"a","div"),n=B(t,"b","div");[e,n]=xn(e,n);const i=ae(e,n),r=ke(i),o=$r(n,r);return Us(o,r,i)}const lH=Q({divNoNan_:aH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(s,t){const e=B(s,"t1","dot"),n=B(t,"t2","dot");P((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);const i=e.rank===1?e.size:e.shape[1],r=n.rank===1?n.size:n.shape[0];if(P(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),e.rank===1&&n.rank===1){const o=et(e,[1,-1]),a=et(n,[-1,1]),l=$e(o,a);return et(l,[])}else if(e.rank===1&&n.rank===2){const o=et(e,[1,-1]),a=et(n,[n.shape[0],n.shape[1]]),l=$e(o,a);return et(l,[l.size])}else if(e.rank===2&&n.rank===1){const o=et(n,[-1,1]),a=$e(e,o);return et(a,[a.size])}else{const o=et(n,[n.shape[0],n.shape[1]]);return $e(e,o)}}const uH=Q({dot_:cH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(s){const e={x:B(s,"x","elu","float32")};return J.runKernel(qh,e)}const Ng=Q({elu_:hH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s){let t=B(s,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Vt(t,"float32"));const e={x:t};return J.runKernel(jh,e)}const fH=Q({erf_:dH});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vy(s,t){for(let e=0;e<s.length;++e)if(s[s.length-e-1]!==t-1-e)return!1;return!0}function bE(s,t,e){const n=s.length+t.length,i=[];let r=0,o=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?i.push(s[r++]):i.push(t[o++]);return i}function Vn(s,t){const e=[],n=s.length;for(let r=0;r<n;r++)t.indexOf(r)===-1&&e.push(s[r]);const i=t.map(r=>s[r]);return[e,i]}function vn(s,t){const e=t.map(n=>1);return bE(s,e,t)}function Qn(s,t,e){P(vy(t,e),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function un(s,t){if(vy(s,t))return null;const e=[];for(let n=0;n<t;++n)s.indexOf(n)===-1&&e.push(n);return s.forEach(n=>e.push(n)),e}function Zo(s){return s.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function bn(s,t){const e=[];for(let n=t-s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(s,t=null,e=!1){const i={x:B(s,"x","max")},r={reductionIndices:t,keepDims:e};return J.runKernel(Jm,i,r)}const Yi=Q({max_:pH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(s,t=null,e=!1){const i={x:B(s,"x","min")},r={axis:t,keepDims:e};return J.runKernel(ng,i,r)}const Op=Q({min_:mH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(s,t){let e=B(s,"base","pow"),n=B(t,"exp","pow");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(cd,i)}const Lc=Q({pow_:gH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(s,t){if((Rr(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Rr(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Eg(s,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(s){const e={x:B(s,"x","sqrt","float32")};return J.runKernel(wd,e)}const ds=Q({sqrt_:xH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(s){const t=B(s,"x","square"),e={};return J.runKernel("Square",{x:t},e)}const Xe=Q({square_:vH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s,t=null,e=!1){let n=B(s,"x","sum");n.dtype==="bool"&&(n=Vt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return J.runKernel(vg,i,r)}const te=Q({sum_:bH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(s,t="euclidean",e=null,n=!1){s=B(s,"x","norm");const i=yE(s,t,e);let r=i.shape;if(n){const o=be(e,s.shape);r=vn(i.shape,o)}return et(i,r)}function yE(s,t,e=null){if(s.rank===0)return Fn(s);if(s.rank!==1&&e===null)return yE(et(s,[-1]),t,e);if(s.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return te(Fn(s),e);if(t===1/0)return Yi(Fn(s),e);if(t===-1/0)return Op(Fn(s),e);if(t==="euclidean"||t===2)return ds(te(Lc(Fn(s),he(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Yi(te(Fn(s),e[0]),e[1]-1);if(t===1/0)return Yi(te(Fn(s),e[1]),e[0]);if(t===-1/0)return Op(te(Fn(s),e[1]),e[0]);if(t==="fro"||t==="euclidean")return ds(te(Xe(s),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Rg=Q({norm_:yH});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(s,t=null,e=!1){return Rg(s,"euclidean",t,e)}const _H=Q({euclideanNorm_:wH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(s){const e={x:B(s,"x","exp")};return J.runKernel(Xh,e)}const Ti=Q({exp_:SH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(s,t=0){const e=B(s,"x","expandDims","string_or_numeric");P(t<=e.rank,()=>"Axis must be <= rank of the tensor");const n={input:e},i={dim:t};return J.runKernel(Um,n,i)}const Ns=Q({expandDims_:CH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(s){const e={x:B(s,"x","expm1")};return J.runKernel(Kh,e)}const IH=Q({expm1_:TH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(s,t){const e=B(s,"x","tile","string_or_numeric");P(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const n={x:e},i={reps:t};return J.runKernel(Id,n,i)}const Xi=Q({tile_:EH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(s,t,e,n="float32"){t==null&&(t=s);const i=ve([s,t],n),r=s<=t?s:t;for(let a=0;a<r;++a)i.set(1,a,a);const o=et(i.toTensor(),[s,t]);if(e==null)return o;if(e.length===1)return Xi(Ns(o,0),[e[0],1,1]);if(e.length===2)return Xi(Ns(Ns(o,0),0),[e[0],e[1],1,1]);if(e.length===3)return Xi(Ns(Ns(Ns(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const wE=Q({eye_:MH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(s){const e={x:B(s,"x","floor","float32")};return J.runKernel(Yh,e)}const Dg=Q({floor_:kH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(s,t,e=0,n=0){const i=B(s,"x","gather"),r=B(t,"indices","gather","int32"),o={x:i,indices:r},a={axis:e,batchDims:n};return J.runKernel(Wm,o,a)}const by=Q({gather_:AH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(s,t){let e=B(s,"a","greater","string_or_numeric"),n=B(t,"b","greater","string_or_numeric");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Gm,i)}const ri=Q({greater_:NH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(s,t){let e=B(s,"a","greaterEqual","string_or_numeric"),n=B(t,"b","greaterEqual","string_or_numeric");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Jh,i)}const gl=Q({greaterEqual_:RH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(s){const e={x:B(s,"x","isFinite")};return J.runKernel(td,e)}const $H=Q({isFinite_:DH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(s){const e={x:B(s,"x","isInf")};return J.runKernel(ed,e)}const FH=Q({isInf_:LH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(s){const e={x:B(s,"x","isNaN")};return J.runKernel(nd,e)}const OH=Q({isNaN_:PH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(s,t=.2){const n={x:B(s,"x","leakyRelu")},i={alpha:t};return J.runKernel(Hm,n,i)}const yy=Q({leakyRelu_:zH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(s,t){let e=B(s,"a","less","string_or_numeric"),n=B(t,"b","less","string_or_numeric");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(qm,i)}const _E=Q({less_:BH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(s,t){let e=B(s,"a","lessEqual","string_or_numeric"),n=B(t,"b","lessEqual","string_or_numeric");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(jm,i)}const iu=Q({lessEqual_:UH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(s,t=5,e=1,n=1,i=.5){const r=B(s,"x","localResponseNormalization");P(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),P(Ac(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=et(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},c={depthRadius:t,bias:e,alpha:n,beta:i},u=J.runKernel(Zm,l,c);return a?et(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const WH=Q({localResponseNormalization_:VH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(s){const e={x:B(s,"x","log","float32")};return J.runKernel(sd,e)}const Ii=Q({log_:GH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(s){const e={x:B(s,"x","log1p")};return J.runKernel(id,e)}const wy=Q({log1p_:HH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(s,t){P(Yx(s),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(c=>c instanceof $p),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in J.registeredVariables)t.push(J.registeredVariables[c])}const n=e?t.filter(c=>!c.trainable):null,i=t.length;t=t.filter(c=>c.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=J.gradients(s,t,null,r);P(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),n!=null&&n.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Qa(s){return J.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(s){const e={x:B(s,"x","softplus")};return J.runKernel(yd,e)}const Nd=Q({softplus_:jH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(s){const t=B(s,"x","logSigmoid");return Qa(n=>({value:cn(Nd(cn(n))),gradFunc:o=>K(o,su(cn(n)))}))(t)}const KH=Q({logSigmoid_:XH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(s,t){let e=B(s,"a","sub"),n=B(t,"b","sub");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(Sd,i)}const ee=Q({sub_:YH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(s,t=-1){const e=B(s,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Qa((i,r)=>{const a=Yi(i,t,!0),l=ee(i,a),c=ee(Vt(l,"float32"),Ii(te(Ti(l),t,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,g=Ti(f);return ee(h,K(te(h,t,p),g))}}})(e)}const SE=Q({logSoftmax_:ZH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(s,t=null,e=!1){const n=B(s,"x","logSumExp"),i=be(t,n.shape),r=Yi(n,i,!0),o=ee(n,r),a=Ti(o),l=te(a,i),c=Ii(l),u=Nt(et(r,c.shape),c);if(e){const h=vn(u.shape,i);return et(u,h)}return u}const CE=Q({logSumExp_:JH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(s,t){const e=B(s,"a","logicalAnd","bool"),n=B(t,"b","logicalAnd","bool");pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Xm,i)}const lo=Q({logicalAnd_:QH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(s){const e={x:B(s,"x","logicalNot","bool")};return J.runKernel(Km,e)}const _y=Q({logicalNot_:t5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(s,t){const e=B(s,"a","logicalOr","bool"),n=B(t,"b","logicalOr","bool");pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Ym,i)}const TE=Q({logicalOr_:e5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(s,t){const e=B(s,"a","logicalXor","bool"),n=B(t,"b","logicalXor","bool");return pe(e.shape,n.shape),lo(TE(s,t),_y(lo(s,t)))}const s5=Q({logicalXor_:n5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(s,t,e,n,i){const r=B(s,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=et(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),P(as(e,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),Is("maxPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i},h=J.runKernel(Qm,c,u);return l?et(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Sy=Q({maxPool_:i5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(s,t=[1,1,1],e,n,i,r="NDHWC"){const o=B(s,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),P(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Is("maxPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r},h=J.runKernel(tg,c,u);return l?et(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const o5=Q({maxPool3d_:r5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(s,t){let e=B(s,"a","maximum"),n=B(t,"b","maximum");[e,n]=xn(e,n),e.dtype==="bool"&&(e=Vt(e,"int32"),n=Vt(n,"int32")),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(rd,i)}const Jo=Q({maximum_:a5});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(s,t=null,e=!1){const i={x:B(s,"x","mean")},r={axis:t,keepDims:e};return J.runKernel(eg,i,r)}const gn=Q({mean_:l5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(s,t="float32"){if(t==="complex64"){const n=On(s,"float32"),i=On(s,"float32");return Dc(n,i)}const e=rs(gt(s),t);return J.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qo(s,t="float32"){if(t==="complex64"){const n=Qo(s,"float32"),i=On(s,"float32");return Dc(n,i)}const e=ab(gt(s),t);return J.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(s,t){let e=B(s,"a","minimum"),n=B(t,"b","minimum");[e,n]=xn(e,n),e.dtype==="bool"&&(e=Vt(e,"int32"),n=Vt(n,"int32")),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(od,i)}const $g=Q({minimum_:c5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(s,t,e){P(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const n=B(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);const i=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)P(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[a][0]>=0&&t[a][0]<=n.shape[a]-i&&t[a][1]>=0&&t[a][1]<=n.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-i} or less than 0 for input of shape ${n.shape}`);const r={paddings:t,mode:e},o={x:n};return J.runKernel(sg,o,r)}const h5=Q({mirrorPad_:u5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(s,t){let e=B(s,"a","mod"),n=B(t,"b","mod");[e,n]=xn(e,n);const i={a:e,b:n};return J.runKernel(ad,i)}const f5=Q({mod_:d5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(s,t=null,e=!1){s=B(s,"x","moments");const n=be(t,s.shape),i=gn(s,n,e);let r=i.shape;e||(r=vn(i.shape,n));const o=Xe(ee(Vt(s,"float32"),et(i,r))),a=gn(o,n,e);return{mean:i,variance:a}}const Cy=Q({moments_:p5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(s,t){let e=B(s,"a","notEqual","string_or_numeric"),n=B(t,"b","notEqual","string_or_numeric");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(rg,i)}const ph=Q({notEqual_:m5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(s){const e={x:B(s,"x","onesLike")};return J.runKernel(og,e)}const Ei=Q({onesLike_:g5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(s,t,e=0){const n=B(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:e},r={x:n};return J.runKernel(cg,r,i)}const Ty=Q({pad_:x5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(s,t,e){const n=B(s,"x","spaceToBatchND");P(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),P(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),P(n.shape.reduce((o,a,l)=>l>0&&l<=t.length?o&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const i={x:n},r={blockShape:t,paddings:e};return J.runKernel(bg,i,r)}const Iy=Q({spaceToBatchND_:v5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(s,t,e,n,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),n===0&&(n="valid");const a=B(s,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(as(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=Ri(l.shape,t,r,i,n),h=[u.dilationHeight,u.dilationWidth];let d;n==="same"?d=w5([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,g]=y5([u.inHeight,u.inWidth],h,d),m=f?n:"valid",x=f?l:Iy(l,h,p),y=(e==="avg"?()=>dy(x,t,r,m,o):()=>Sy(x,t,r,m,o))(),b=f?y:py(y,h,g);return c?et(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function y5(s,t,e){const n=e.map(u=>u[0]),i=e.map(u=>u[1]),r=s.concat(n,i),o=t.map((u,h)=>(u-r[h]%u)%u),a=i.map((u,h)=>u+o[h]),l=t.map((u,h)=>[n[h],a[h]]),c=t.map((u,h)=>[0,o[h]]);return[l,c]}function w5(s,t){const n=s.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),i=n.map(o=>Math.floor(o/2)),r=n.map((o,a)=>o-i[a]);return n.map((o,a)=>[i[a],r[a]])}const _5=Q({pool_:b5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(s,t){const e=B(s,"x","prelu"),n=B(t,"alpha","prelu"),i={x:e,alpha:n};return J.runKernel(ug,i)}const Ey=Q({prelu_:S5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(s,t=null,e=!1){let n=B(s,"x","prod");n.dtype==="bool"&&(n=Vt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return J.runKernel(hg,i,r)}const T5=Q({prod_:C5});var IE={exports:{}};(function(s){(function(t,e,n){function i(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(fl,s,!1)})(IE);var EE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(fl,s,!1)})(EE);var ME={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(fl,s,!1)})(ME);var kE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(fl,s,!1)})(kE);var AE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,g,m,x=[],v=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,v=Math.max(v,h.length)),p=0,g=-32;g<v;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=m+1640531527|0,d=x[g&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(x[(h&&h.length||0)&127]=-1),p=127,g=4*128;g>0;--g)f=x[p+34&127],d=x[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,x[p]=f^d;u.w=m,u.X=x,u.i=p}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(fl,s,!1)})(AE);var NE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(fl,s,!1)})(NE);var RE={exports:{}};const I5={},E5=Object.freeze(Object.defineProperty({__proto__:null,default:I5},Symbol.toStringTag,{value:"Module"})),M5=$4(E5);(function(s){(function(t,e,n){var i=256,r=6,o=52,a="random",l=n.pow(i,r),c=n.pow(2,o),u=c*2,h=i-1,d;function f(b,w,_){var C=[];w=w==!0?{entropy:!0}:w||{};var S=x(m(w.entropy?[b,y(e)]:b==null?v():b,3),C),T=new p(C),I=function(){for(var A=T.g(r),D=l,M=0;A<c;)A=(A+M)*i,D*=i,M=T.g(1);for(;A>=u;)A/=2,D/=2,M>>>=1;return(A+M)/D};return I.int32=function(){return T.g(4)|0},I.quick=function(){return T.g(4)/4294967296},I.double=I,x(y(T.S),e),(w.pass||_||function(A,D,M,E){return E&&(E.S&&g(E,T),A.state=function(){return g(T,{})}),M?(n[a]=A,D):A})(I,S,"global"in w?w.global:this==n,w.state)}function p(b){var w,_=b.length,C=this,S=0,T=C.i=C.j=0,I=C.S=[];for(_||(b=[_++]);S<i;)I[S]=S++;for(S=0;S<i;S++)I[S]=I[T=h&T+b[S%_]+(w=I[S])],I[T]=w;(C.g=function(A){for(var D,M=0,E=C.i,k=C.j,N=C.S;A--;)D=N[E=h&E+1],M=M*i+N[h&(N[E]=N[k=h&k+D])+(N[k]=D)];return C.i=E,C.j=k,M})(i)}function g(b,w){return w.i=b.i,w.j=b.j,w.S=b.S.slice(),w}function m(b,w){var _=[],C=typeof b,S;if(w&&C=="object")for(S in b)try{_.push(m(b[S],w-1))}catch{}return _.length?_:C=="string"?b:b+"\0"}function x(b,w){for(var _=b+"",C,S=0;S<_.length;)w[h&S]=h&(C^=w[h&S]*19)+_.charCodeAt(S++);return y(w)}function v(){try{var b;return d&&(b=d.randomBytes)?b=b(i):(b=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(b)),y(b)}catch{var w=t.navigator,_=w&&w.plugins;return[+new Date,t,_,t.screen,y(e)]}}function y(b){return String.fromCharCode.apply(0,b)}if(x(n.random(),e),s.exports){s.exports=f;try{d=M5}catch{}}else n["seed"+a]=f})(typeof self<"u"?self:fl,[],Math)})(RE);var k5=IE.exports,A5=EE.exports,N5=ME.exports,R5=kE.exports,D5=AE.exports,$5=NE.exports,xl=RE.exports;xl.alea=k5;xl.xor128=A5;xl.xorwow=N5;xl.xorshift7=R5;xl.xor4096=D5;xl.tychei=$5;var My=xl;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DE{constructor(t,e,n,i,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=My.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let t,e,n=!1;for(;!n;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*i*a,e=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class L5{constructor(t=0,e=1,n,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=My.alea(i)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new DE(t,e,n,!1,i),o=ve(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const mv=Q({randomNormal_:F5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(s,t=0,e=1,n="float32",i){const r=ve(s,n),o=new L5(t,e,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const Lg=Q({randomUniform_:P5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zp(s,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");const i={start:s,stop:t,step:e,dtype:n};return J.runKernel(Pb,{},i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(s){const e={x:B(s,"x","reciprocal")};return J.runKernel(ud,e)}const z5=Q({reciprocal_:O5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(s){const e={x:B(s,"x","relu")};return J.runKernel(hd,e)}const po=Q({relu_:B5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5(s){const e={x:B(s,"x","relu6")};return J.runKernel(dd,e)}const $E=Q({relu6_:U5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V5(s,t){const n={x:B(s,"x","reverse")},i={dims:t};return J.runKernel(mg,n,i)}const tl=Q({reverse_:V5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(s){const e={x:B(s,"x","round")};return J.runKernel(fd,e)}const LE=Q({round_:W5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(s){const e={x:B(s,"x","rsqrt","float32")};return J.runKernel(pd,e)}const FE=Q({rsqrt_:G5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H5(s){const e={x:B(s,"x","selu")};return J.runKernel(md,e)}const PE=Q({selu_:H5});function q5(s,t,e,n,i,r=[1,1],o="NHWC"){const a=B(s,"x","separableConv2d"),l=B(t,"depthwiseFilter","separableConv2d"),c=B(e,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),P(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),P(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),P(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];P(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=xy(u,l,n,i,o,r),m=Ja(p,c,1,"valid",o);return h?et(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const OE=Q({separableConv2d_:q5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(s){const e={x:B(s,"x","sign")};return J.runKernel(vd,e)}const X5=Q({sign_:j5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K5(s){const e={x:B(s,"x","sin","float32")};return J.runKernel(gd,e)}const zE=Q({sin_:K5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(s){const e={x:B(s,"x","sinh")};return J.runKernel(xd,e)}const BE=Q({sinh_:Y5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(s,t,e){const n=B(s,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),We(n,[t],[e])}const ky=Q({slice1d_:Z5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(s,t,e){const n=B(s,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),We(n,t,e)}const UE=Q({slice2d_:J5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(s,t,e){const n=B(s,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),We(n,t,e)}const Ay=Q({slice3d_:Q5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(s,t,e){const n=B(s,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),We(n,t,e)}const Bp=Q({slice4d_:t6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e6(s,t=-1){const e=B(s,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const n={logits:e},i={dim:t};return J.runKernel(wg,n,i)}const Ny=Q({softmax_:e6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(s){P(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return J.runKernel(Ib,t)}const VE=Q({fft_:n6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(s){P(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return J.runKernel(kb,t)}const gv=Q({ifft_:s6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(s){const t=s.shape[s.shape.length-1],e=s.size/t;let n;if(t<=2){const i=et(s,[e,t]);n=gv(i)}else{const i=[e,2*(t-1)],r=et(Fp(s),[e,t]),o=et(iy(s),[e,t]),a=tl(We(r,[0,1],[e,t-2]),1),l=K(tl(We(o,[0,1],[e,t-2]),1),he(-1)),c=is([r,a],1),u=is([o,l],1),h=et(Dc(c,u),[i[0],i[1]]);n=gv(h)}if(n=Fp(n),s.rank===3&&s.shape[0]!==0){const i=n,r=s.shape[0];n=et(n,[r,n.shape[0]/r,n.shape[1]]),i.dispose()}return n}const r6=Q({irfft_:i6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(s,t,e=0){const i={x:B(s,"x","split")},r={numOrSizeSplits:t,axis:e};return J.runKernel(yg,i,r)}const Qs=Q({split_:o6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(s,t){P(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let e=s.shape[s.shape.length-1];const n=s.size/e;let i;if(t!=null&&t<e){const p=s.shape.map(m=>0),g=s.shape.map(m=>m);g[s.shape.length-1]=t,i=We(s,p,g),e=t}else if(t!=null&&t>e){const p=s.shape.map(g=>g);p[s.shape.length-1]=t-e,i=is([s,On(p)],s.shape.length-1),e=t}else i=s;const r=ke(i),o=et(Dc(i,r),[n,e]),a=VE(o),l=Math.floor(e/2)+1,c=Fp(a),u=iy(a),h=Qs(c,[l,e-l],c.shape.length-1),d=Qs(u,[l,e-l],u.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=l,et(Dc(h[0],d[0]),f)}const WE=Q({rfft_:a6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(s,t){let e=B(s,"a","squaredDifference"),n=B(t,"b","squaredDifference");[e,n]=xn(e,n),pe(e.shape,n.shape);const i={a:e,b:n},r={};return J.runKernel(_d,i,r)}const GE=Q({squaredDifference_:l6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(s,t){const e=B(s,"x","squeeze","string_or_numeric");return et(e,Xo(e.shape,t).newShape)}const Rd=Q({squeeze_:c6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(s,t=0){const e=HI(s,"tensors","stack","string_or_numeric");P(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&P(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const n=e,i={axis:t};return J.runKernel(lg,n,i)}const el=Q({stack_:u6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(s,t=0){const n={x:B(s,"x","step")},i={alpha:t};return J.runKernel(Ed,n,i)}const Dd=Q({step_:h6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(s,t,e,n,i=0,r=0,o=0,a=0,l=0){const u={x:B(s,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:n,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return J.runKernel(qb,u,h)}const f6=Q({stridedSlice_:d6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(s){const e={x:B(s,"x","tan","float32")};return J.runKernel(Cd,e)}const m6=Q({tan_:p6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(s,t){aI(s);const e=Ig(s,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Eg(s,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mp(s,t,e){if(aI(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=Ig(s,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Eg(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(s,t=1,e=!0){const n=B(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const r={x:n},o={k:t,sorted:e},[a,l]=J.runKernel(Yb,r,o);return{values:a,indices:l}}const x6=Q({topk_:g6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v6(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new DE(t,e,n,!0,i),o=ve(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const HE=Q({truncatedNormal_:v6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(s,t=0){const e=B(s,"x","unique","string_or_numeric");P(e.rank>0,()=>"The input tensor must be at least 1D");const n={x:e},i={axis:t},[r,o]=J.runKernel(Jb,n,i);return{values:r,indices:o}}const y6=Q({unique_:b6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(s,t,e){const n=B(s,"x","unsortedSegmentSum"),i=B(t,"segmentIds","unsortedSegmentSum","int32");P(Ac(e),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:i},o={numSegments:e};return J.runKernel(Sg,r,o)}const qE=Q({unsortedSegmentSum_:w6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(s,t=0){const e=B(s,"x","unstack","string_or_numeric");P(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const n={value:e},i={axis:t};return J.runKernel(_g,n,i)}const Fc=Q({unstack_:_6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(s,t=!0,e,n){return J.makeVariable(s,t,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(s,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const n=ve(s,"int32"),i=ve([e.length,s.length],"int32");for(let r=0;r<e.length;r++){const o=n.indexToLoc(e[r]),a=r*s.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(s,t){if(t==null)return s.shape.slice();if(Le(s.shape,t))return t;if(s.shape.length===t.length){const e=[];for(let n=0;n<s.shape.length;n++)t[n]==null&&s.shape[n]!=null?e.push(s.shape[n]):e.push(t[n]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(s,t,e,n){const i=B(s,"x","dropout");if(P(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof _n?i.clone():i;const r=C6(i,e),o=1-t,a=ae(Dg(Nt(Lg(r,0,1,"float32",n),o)),o);return K(i,a)}const I6=Q({dropout_:T6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function XE(s,t,e){const n=1-s%2,i=new Float32Array(s);for(let r=0;r<s;++r){const o=2*Math.PI*r/(s+n-1);i[r]=t-e*Math.cos(o)}return Ls(i,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(s,t,e,n,i,r="NHWC",o){let a=s;s.rank===3&&(a=et(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=et(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),P(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),P(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];P(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),P(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),Is("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:e};return J.runKernel(gb,h,d)}const Ry=Q({conv2DBackpropFilter_:M6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dy(s,t,e){if(e==null||e==="linear")return s;if(e==="relu")return K(s,Dd(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function $y(s,t){let e=t;const n=Rn(s.shape,t.shape);return n.length>0&&(e=te(e,n)),et(e,s.shape)}function Ly(s,t,e,n){if(t==="linear")return s;if(t==="relu")return po(s);if(t==="elu")return Ng(s);if(t==="relu6")return $E(s);if(t==="prelu")return Ey(s,e);if(t==="leakyrelu")return yy(s,n);if(t==="sigmoid")return su(s);throw new Error(`Unknown fused activation ${t}.`)}const Fy=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k6({x:s,filter:t,strides:e,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Fy(J.state.gradientDepth,l)===!1){P(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=Ja(s,t,e,n,i,r,o);return a!=null&&(_=Nt(_,a)),Ly(_,l,c,u)}const h=B(s,"x","conv2d","float32"),d=B(t,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=et(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Is("fused conv2d",n,o);const g=i==="NHWC"?f.shape[3]:f.shape[1];P(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),P(as(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const m=Jn(f.shape,d.shape,e,r,n,o);let x;a!=null&&(x=B(a,"bias","fused conv2d"),[x]=xn(x,h),i==="NHWC"?pe(m.outShape,x.shape):(P(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),P(x.shape.length===0||x.shape[0]===m.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let v;if(c!=null){const _=c.shape;if(P(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)P(_[0]===1||_[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${m.outChannels}).`);else if(_.length===3)try{pe(_,m.outShape)}catch{const S=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(S)}v=B(c,"prelu weights","fused conv2d")}const y=(_,C)=>{P(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[S,T,I,A]=C,D=Dy(_,I,l);P(Za(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const M=my(T.shape,D,S,e,n),E=Ry(T,D,S.shape,e,n),k=[M,E];if(A!=null){const N=$y(A,D);k.push(N)}return k},b={x:f,filter:d,bias:x,preluActivationWeights:v},w={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Qa((C,S,T)=>{let I=J.runKernel(Np,b,w);return T([S,C,I]),p&&(I=et(I,[I.shape[1],I.shape[2],I.shape[3]])),{value:I,gradFunc:y}})(f,d):Qa((C,S,T,I)=>{let A=J.runKernel(Np,b,w);return I([S,C,A,T]),p&&(A=et(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:y}})(f,d,x)}const A6=Q({fusedConv2d_:k6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(s,t,e,n,i,r=[1,1],o){let a=s;s.rank===3&&(a=et(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=et(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,filterShape:e};return J.runKernel(Sb,c,u)}const R6=Q({depthwiseConv2dNativeBackpropFilter_:N6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(s,t,e,n,i,r=[1,1],o){let a=t,l=!1;t.rank===3&&(l=!0,a=et(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,inputShape:s},h=J.runKernel(Cb,c,u);return l?et(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const $6=Q({depthwiseConv2dNativeBackpropInput_:D6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6({a:s,b:t,transposeA:e=!1,transposeB:n=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Fy(J.state.gradientDepth,r)===!1){let A=$e(s,t,e,n);return i!=null&&(A=Nt(A,i)),Ly(A,r,o,a)}let l=B(s,"a","fused matMul"),c=B(t,"b","fused matMul");[l,c]=xn(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),g=c.shape.slice(0,-2),m=gt(p),x=gt(g);P(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${n} must match.`);const y=pe(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),b=e?et(l,[m,u,d]):et(l,[m,d,u]),w=n?et(c,[x,f,h]):et(c,[x,h,f]);let _;i!=null&&(_=B(i,"bias","fused matMul"),[_]=xn(_,l),pe(y,_.shape));let C;o!=null&&(C=B(o,"prelu weights","fused matMul"));const S=(A,D)=>{const[M,E,k,N]=D,z=Dy(et(A,k.shape),k,r);let L,$;if(!e&&!n?(L=$e(z,E,!1,!0),$=$e(M,z,!0,!1)):!e&&n?(L=$e(z,E,!1,!1),$=$e(z,M,!0,!1)):e&&!n?(L=$e(E,z,!1,!0),$=$e(M,z,!1,!1)):(L=$e(E,z,!0,!0),$=$e(z,M,!0,!0)),i!=null){const W=$y(N,z);return[L,$,W]}else return[L,$]},T={a:b,b:w,bias:_,preluActivationWeights:C},I={transposeA:e,transposeB:n,activation:r,leakyreluAlpha:a};return i==null?Qa((D,M,E)=>{const k=J.runKernel(Ap,T,I);return E([D,M,k]),{value:et(k,y),gradFunc:S}})(b,w):Qa((D,M,E,k)=>{const N=J.runKernel(Ap,T,I);return k([D,M,N,E]),{value:et(N,y),gradFunc:S}})(b,w,_)}const iC=Q({fusedMatMul_:L6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(s){return XE(s,.54,.46)}const Jft=Q({hammingWindow_:F6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(s){return XE(s,.5,.5)}const O6=Q({hannWindow_:P6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(s,t,e,n=!1,i=0){let r=0;const o=[];for(;r+t<=s.size;)o.push(We(s,r,t)),r+=e;if(n)for(;r<s.size;){const a=r+t-s.size,l=is([We(s,r,t-a),Ad([a],i)]);o.push(l),r+=e}return o.length===0?mp([],[0,t]):et(is(o),[o.length,t])}const B6=Q({frame_:z6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(s,t,e,n,i=O6){n==null&&(n=E6(t));const r=B6(s,t,e),o=K(r,i(t));return WE(o,n)}const Qft=Q({stft_:U6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(s,t,e,n,i="bilinear",r=0){const o=B(s,"image","cropAndResize"),a=B(t,"boxes","cropAndResize","float32"),l=B(e,"boxInd","cropAndResize","int32"),c=a.shape[0];P(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),P(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),P(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:n};return J.runKernel(yb,u,h)}const W6=Q({cropAndResize_:V6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(s){const t=B(s,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return J.runKernel(Mb,e,{})}const H6=Q({flipLeftRight_:G6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(s){const t=B(s,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const i=new Array(t.rank);return i.fill(1,0,e),i[e]=3,Xi(t,i)}const j6=Q({grayscaleToRGB_:q6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(s,t,e=0,n=.5){const i=B(s,"image","rotateWithOffset","float32");P(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:t,fillValue:e,center:n};return J.runKernel(Qb,r,o)}const K6=Q({rotateWithOffset_:X6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ru(s,t,e,n,i,r){n==null&&(n=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=s.shape[0];return e=Math.min(e,o),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),P(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),P(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=B(s,"boxes","nonMaxSuppression","float32"),o=B(t,"scores","nonMaxSuppression","float32"),a=ru(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:n,scoreThreshold:i};return J.runKernel($b,{boxes:r,scores:o},l)}const Z6=Q({nonMaxSuppression_:Y6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(s,t,e){const n=Q6(s,t,e),i=n<0?-(n+1):n;s.splice(i,0,t)}function Q6(s,t,e){return eq(s,t,e||tq)}function tq(s,t){return s>t?1:s<t?-1:0}function eq(s,t,e){let n=0,i=s.length,r=0,o=!1;for(;n<i;){r=n+(i-n>>>1);const a=e(t,s[r]);a>0?n=r+1:(i=r,o=!a)}return o?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Py(s,t,e,n,i){return By(s,t,e,n,i,0)}function Oy(s,t,e,n,i,r){return By(s,t,e,n,i,0,!1,r,!0)}function zy(s,t,e,n,i,r){return By(s,t,e,n,i,r,!0)}function By(s,t,e,n,i,r,o=!1,a=!1,l=!1){const c=[];for(let m=0;m<t.length;m++)t[m]>i&&c.push({score:t[m],boxIndex:m,suppressBeginIndex:0});c.sort(rC);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<e&&c.length>0;){const m=c.pop(),{score:x,boxIndex:v,suppressBeginIndex:y}=m;if(x<i)break;let b=!1;for(let w=h.length-1;w>=y;--w){const _=nq(s,v,h[w]);if(_>=n){b=!0;break}if(m.score=m.score*sq(n,u,_),m.score<=i)break}m.suppressBeginIndex=h.length,b||(m.score===x?(h.push(v),d.push(m.score)):m.score>i&&J6(c,m,rC))}const f=h.length,p=e-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=f),g}function nq(s,t,e){const n=s.subarray(t*4,t*4+4),i=s.subarray(e*4,e*4+4),r=Math.min(n[0],n[2]),o=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(a-r)*(l-o),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const g=Math.max(r,c),m=Math.max(o,u),x=Math.min(a,h),v=Math.min(l,d),y=Math.max(x-g,0)*Math.max(v-m,0);return y/(f+p-y)}function sq(s,t,e){const n=Math.exp(t*e*e);return e<=s?n:0}function rC(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function iq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=B(s,"boxes","nonMaxSuppressionAsync"),o=B(t,"scores","nonMaxSuppressionAsync"),a=ru(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=Py(c,u,e,n,i);return r!==s&&r.dispose(),o!==t&&o.dispose(),Ls(h,"int32")}const rq=iq;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=B(s,"boxes","nonMaxSuppression"),a=B(t,"scores","nonMaxSuppression"),l=ru(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r},h=J.runKernel(Fb,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const aq=Q({nonMaxSuppressionWithScore_:oq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function lq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=B(s,"boxes","nonMaxSuppressionAsync"),a=B(t,"scores","nonMaxSuppressionAsync"),l=ru(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=zy(u,h,e,n,i,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Ls(d,"int32"),selectedScores:Ls(f)}}const cq=lq;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=B(s,"boxes","nonMaxSuppression"),a=B(t,"scores","nonMaxSuppression"),l=ru(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},p=J.runKernel(Lb,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const hq=Q({nonMaxSuppressionPadded_:uq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=B(s,"boxes","nonMaxSuppressionAsync"),a=B(t,"scores","nonMaxSuppressionAsync"),l=ru(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:g}=Oy(d,f,c,u,h,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Ls(p,"int32"),validOutputs:he(g,"int32")}}const fq=dq;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(s,t,e=!1,n=!1){const i=B(s,"images","resizeBilinear");P(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=et(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=J.runKernel(pg,a,l);return o?et(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const KE=Q({resizeBilinear_:pq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mq(s,t,e=!1,n=!1){const i=B(s,"images","resizeNearestNeighbor");P(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=et(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=J.runKernel(fg,a,l);return o?et(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const YE=Q({resizeNearestNeighbor_:mq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gq(s,t="binary",e=!1,n=.5){const i=B(s,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let c=K(Ls([n]),255),u,h,d,f;if(P(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),P(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),P(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),i.shape[2]===3){[u,h,d]=Qs(i,[1,1,1],-1);const m=K(u,r),x=K(h,o),v=K(d,a);f=Nt(Nt(m,x),v)}else f=s;if(t==="otsu"){const m=IG(Vt(LE(f),"int32"),Xu([]),256);c=xq(m,l)}const p=e?iu(f,c):ri(f,c);return Vt(K(p,255),"int32")}function xq(s,t){let e=Ls([-1]),n=Ls([0]),i=Ls([0]),r,o,a,l,c,u;for(let h=0;h<s.size-1;h++){r=We(s,0,h+1),o=We(s,h+1),c=ae(te(r),t),u=ae(te(o),t);const d=te(K(r,zp(0,r.size)));a=ae(d,te(r));const f=Ad(o.shape,r.size),p=Nt(zp(0,o.size),f),g=K(o,p);l=ae(te(g),te(o));const m=ee(a,l),x=ee(a,l),v=K(c,u);i=K(K(v,m),x);const y=ri(i,n);n=Us(y,i,n),e=Us(y,Ls([h]),e)}return e}const vq=Q({threshold_:gq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bq(s,t,e="nearest",n="constant",i=0,r){const o=B(s,"image","transform","float32"),a=B(t,"transforms","transform","float32");P(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),P(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},c={interpolation:e,fillMode:n,fillValue:i,outputShape:r};return J.runKernel(Zb,l,c)}const yq=Q({transform_:bq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wq(s,t,e){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const n=B(s,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const i=n.shape,[r,o]=n.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(e<=o))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`);t<0&&(t=r),e<0&&(e=o);const a=et(zp(0,r,1,"int32"),[-1,1]),l=zp(0,o,1,"int32"),c=ee(a,l),u=lo(iu(c,he(+t,"int32")),gl(c,he(-e,"int32"))),h=On([r,o],n.dtype);return et(el(Fc(et(n,[-1,r,o])).map(d=>Us(u,d,h))),i)}const _q=Q({bandPart_:wq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sq(s){let t;if(Array.isArray(s)){t=!1,P(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=s[0].shape[0];for(let r=1;r<s.length;++r)P(s[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${i})`)}else t=!0,s=Qs(s,s.shape[0],0).map(i=>Rd(i,[0]));P(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const e=[],n=s;for(let i=0;i<s.length;++i)e.push(J.tidy(()=>{let r=n[i];if(i>0)for(let o=0;o<i;++o){const a=K(te(K(e[o],r)),e[o]);r=ee(r,a)}return ae(r,Rg(r,"euclidean"))}));return t?el(e,0):e}const Cq=Q({gramSchmidt_:Sq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tq(s,t=!1){if(P(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return oC(s,t);{const e=s.shape.slice(0,s.shape.length-2).reduce((l,c)=>l*c),n=Fc(et(s,[e,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),i=[],r=[];n.forEach(l=>{const[c,u]=oC(l,t);i.push(c),r.push(u)});const o=et(el(i,0),s.shape),a=et(el(r,0),s.shape);return[o,a]}}function oC(s,t=!1){return J.tidy(()=>{P(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const e=s.shape[0],n=s.shape[1];let i=wE(e),r=$a(s);const o=mp([[1]],[1,1]);let a=$a(o);const l=e>=n?n:e;for(let c=0;c<l;++c){const u=r,h=a,d=i;[a,r,i]=J.tidy(()=>{const f=We(r,[c,c],[e-c,1]),p=Rg(f),g=We(r,[c,c],[1,1]),m=Us(ri(g,0),mp([[-1]]),mp([[1]])),x=ee(g,K(m,p)),v=ae(f,x);v.shape[0]===1?a=$a(o):a=is([o,We(v,[1,0],[v.shape[0]-1,v.shape[1]])],0);const y=cn(ae($e(m,x),p)),b=We(r,[c,0],[e-c,n]),w=K(y,a),_=Ee(a);if(c===0)r=ee(b,$e(w,$e(_,b)));else{const T=ee(b,$e(w,$e(_,b)));r=is([We(r,[0,0],[c,n]),T],0)}const C=Ee(w),S=We(i,[0,c],[e,i.shape[1]-c]);if(c===0)i=ee(S,$e($e(S,a),C));else{const T=ee(S,$e($e(S,a),C));i=is([We(i,[0,0],[e,c]),T],1)}return[a,r,i]}),_e([u,h,d])}return!t&&e>n&&(i=We(i,[0,0],[e,n]),r=We(r,[0,0],[n,n])),[i,r]})}const Iq=Q({qr_:Tq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _s;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(_s||(_s={}));function Eq(s,t,e=_s.SUM_BY_NONZERO_WEIGHTS){const n=B(s,"losses","computeWeightedLoss");let i=null;t!=null&&(i=B(t,"weights","computeWeightedLoss"));const r=i==null?n:K(n,i);if(e===_s.NONE)return r;if(e===_s.SUM)return te(r);if(e===_s.MEAN){if(i==null)return gn(r);{const o=n.size/i.size,a=ae(te(r),te(i));return o>1?ae(a,he(o)):a}}if(e===_s.SUM_BY_NONZERO_WEIGHTS){if(i==null)return ae(te(r),he(n.size));{const o=K(i,Qo(n.shape)),a=Vt(te(ph(o,he(0))),"float32");return ae(te(r),a)}}throw Error(`Unknown reduction: ${e}`)}const ta=Q({computeWeightedLoss_:Eq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mq(s,t,e,n=_s.SUM_BY_NONZERO_WEIGHTS){const i=B(s,"labels","absoluteDifference"),r=B(t,"predictions","absoluteDifference");let o=null;e!=null&&(o=B(e,"weights","absoluteDifference")),Ni(i.shape,r.shape,"Error in absoluteDifference: ");const a=Fn(ee(i,r));return ta(a,o,n)}const tpt=Q({absoluteDifference_:Mq});function kq(s,t,e,n,i=_s.SUM_BY_NONZERO_WEIGHTS){const r=B(s,"labels","cosineDistance"),o=B(t,"predictions","cosineDistance");let a=null;n!=null&&(a=B(n,"weights","cosineDistance")),Ni(r.shape,o.shape,"Error in cosineDistance: ");const l=he(1),c=ee(l,te(K(r,o),e,!0));return ta(c,a,i)}const ept=Q({cosineDistance_:kq});function Aq(s,t,e,n=_s.SUM_BY_NONZERO_WEIGHTS){let i=B(s,"labels","hingeLoss");const r=B(t,"predictions","hingeLoss");let o=null;e!=null&&(o=B(e,"weights","hingeLoss")),Ni(i.shape,r.shape,"Error in hingeLoss: ");const a=he(1);i=ee(K(he(2),i),a);const l=po(ee(a,K(i,r)));return ta(l,o,n)}const npt=Q({hingeLoss_:Aq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(s,t,e,n=1,i=_s.SUM_BY_NONZERO_WEIGHTS){const r=B(s,"labels","huberLoss"),o=B(t,"predictions","huberLoss");let a=null;e!=null&&(a=B(e,"weights","huberLoss")),Ni(r.shape,o.shape,"Error in huberLoss: ");const l=he(n),c=Fn(ee(o,r)),u=$g(c,l),h=ee(c,u),d=Nt(K(he(.5),Xe(u)),K(l,h));return ta(d,a,i)}const spt=Q({huberLoss_:Nq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rq(s,t,e,n=1e-7,i=_s.SUM_BY_NONZERO_WEIGHTS){const r=B(s,"labels","logLoss"),o=B(t,"predictions","logLoss");let a=null;e!=null&&(a=B(e,"weights","logLoss")),Ni(r.shape,o.shape,"Error in logLoss: ");const l=he(1),c=he(n),u=cn(K(r,Ii(Nt(o,c)))),h=K(ee(l,r),Ii(Nt(ee(l,o),c))),d=ee(u,h);return ta(d,a,i)}const ipt=Q({logLoss_:Rq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(s,t,e,n=_s.SUM_BY_NONZERO_WEIGHTS){const i=B(s,"labels","meanSquaredError"),r=B(t,"predictions","meanSquaredError");let o=null;e!=null&&(o=B(e,"weights","meanSquaredError")),Ni(i.shape,r.shape,"Error in meanSquaredError: ");const a=GE(i,r);return ta(a,o,n)}const rpt=Q({meanSquaredError_:Dq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(s,t){const e=B(s,"labels","sigmoidCrossEntropyWithLogits"),n=B(t,"logits","sigmoidCrossEntropyWithLogits");Ni(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=po(n),r=K(n,e),o=wy(Ti(cn(Fn(n))));return Nt(ee(i,r),o)}function Lq(s,t,e,n=0,i=_s.SUM_BY_NONZERO_WEIGHTS){let r=B(s,"multiClassLabels","sigmoidCrossEntropy");const o=B(t,"logits","sigmoidCrossEntropy");let a=null;if(e!=null&&(a=B(e,"weights","sigmoidCrossEntropy")),Ni(r.shape,o.shape,"Error in sigmoidCrossEntropy: "),n>0){const c=he(n),u=he(1),h=he(.5);r=Nt(K(r,ee(u,c)),K(h,c))}const l=$q(r,o);return ta(l,a,i)}const opt=Q({sigmoidCrossEntropy_:Lq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fq(s,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Qa((i,r,o)=>{const l=CE(r,[e],!0),c=ee(Vt(r,"float32"),l);o([i,c]);const u=cn(K(c,i));return{value:te(u,[e]),gradFunc:(f,p)=>{const[g,m]=p,x=vn(f.shape,[e]);return[K(et(f,x),ee(Vt(g,"float32"),Ti(m))),K(et(f,x),ee(Ti(m),Vt(g,"float32")))]}}})(s,t)}function Pq(s,t,e,n=0,i=_s.SUM_BY_NONZERO_WEIGHTS){let r=B(s,"onehotLabels","softmaxCrossEntropy");const o=B(t,"logits","softmaxCrossEntropy");let a=null;if(e!=null&&(a=B(e,"weights","softmaxCrossEntropy")),Ni(r.shape,o.shape,"Error in softmaxCrossEntropy: "),n>0){const c=he(n),u=he(1),h=he(r.shape[1]);r=Nt(K(r,ee(u,c)),ae(c,h))}const l=Fq(r,o);return ta(l,a,i)}const apt=Q({softmaxCrossEntropy_:Pq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oq(s,t,e,n){const i=B(s,"indices","sparseFillEmptyRows","int32"),r=B(t,"values","sparseFillEmptyRows"),o=B(e,"denseShape","sparseFillEmptyRows","int32"),a=B(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:i,values:r,denseShape:o,defaultValue:a},c=J.runKernel(Ub,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const lpt=Q({sparseFillEmptyRows_:Oq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(s,t,e){const n=B(s,"inputIndices","sparseReshape","int32"),i=B(t,"inputShape","sparseReshape","int32"),r=B(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const o={inputIndices:n,inputShape:i,newShape:r},a=J.runKernel(Vb,o);return{outputIndices:a[0],outputShape:a[1]}}const cpt=Q({sparseReshape_:zq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bq(s,t,e){const n=B(s,"data","sparseSegmentMean"),i=B(t,"indices","sparseSegmentMean","int32"),r=B(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return J.runKernel(Wb,o)}const upt=Q({sparseSegmentMean_:Bq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uq(s,t,e){const n=B(s,"data","sparseSegmentSum"),i=B(t,"indices","sparseSegmentSum","int32"),r=B(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return J.runKernel(Gb,o)}const hpt=Q({sparseSegmentSum_:Uq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vq(s,t,e,n,i,r,o,a){const l=B(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=B(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:e,nGramWidths:n,leftPad:i,rightPad:r,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:c},d=J.runKernel(jb,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const dpt=Q({stringNGrams_:Vq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wq(s,t,e=!0){const n=B(s,"input","stringSplit","string"),i=B(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:e},o={input:n,delimiter:i},a=J.runKernel(Xb,o,r);return{indices:a[0],values:a[1],shape:a[2]}}const fpt=Q({stringSplit_:Wq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gq(s,t){const e=B(s,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:e};return J.runKernel(Kb,i,n)}const ppt=Q({stringToHashBucketFast_:Gq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lc={flipLeftRight:H6,grayscaleToRGB:j6,resizeNearestNeighbor:YE,resizeBilinear:KE,rotateWithOffset:K6,cropAndResize:W6,nonMaxSuppression:Z6,nonMaxSuppressionAsync:rq,nonMaxSuppressionWithScore:aq,nonMaxSuppressionWithScoreAsync:cq,nonMaxSuppressionPadded:hq,nonMaxSuppressionPaddedAsync:fq,threshold:vq,transform:yq},Hq={bandPart:_q,gramSchmidt:Cq,qr:Iq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ea extends nu{minimize(t,e=!1,n){const{value:i,grads:r}=this.computeGradients(t,n);if(n!=null){const o=n.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return _e(r),e?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return qH(t,e)}dispose(){this.iterations_!=null&&_e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:he(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(ea,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uy extends ea{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=J.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accum_grad`,variable:at(()=>ke(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${n}/accum_var`,variable:at(()=>ke(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;at(()=>{const u=Nt(K(l,this.rho),K(Xe(a),1-this.rho)),h=K(ae(ds(Nt(c,this.epsilon)),ds(Nt(l,this.epsilon))),a),d=Nt(K(c,this.rho),K(Xe(h),1-this.rho));l.assign(u),c.assign(d);const f=Nt(K(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_e(this.accumulatedGrads.map(t=>t.variable)),_e(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Uy.className="Adadelta";Mt(Uy);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vy extends ea{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accumulator`,variable:at(()=>Ad(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[i].tensor:t[n];if(o==null)return;const a=this.accumulatedGrads[i].variable;at(()=>{const l=Nt(a,Xe(o));a.assign(l);const c=Nt(K(ae(o,ds(Nt(l,J.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_e(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Vy.className="Adagrad";Mt(Vy);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wy extends ea{constructor(t,e,n,i=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],at(()=>{this.accBeta1=he(e).variable(),this.accBeta2=he(n).variable()}),i==null&&(this.epsilon=J.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);at(()=>{const n=ee(1,this.accBeta1),i=ee(1,this.accBeta2);e.forEach((r,o)=>{const a=J.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:at(()=>ke(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:at(()=>ke(a).variable(l))});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Nt(K(u,this.beta1),K(c,1-this.beta1)),f=Nt(K(h,this.beta2),K(Xe(c),1-this.beta2)),p=ae(d,n),g=ae(f,i);u.assign(d),h.assign(f);const m=Nt(K(ae(p,Nt(ds(g),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(K(this.accBeta1,this.beta1)),this.accBeta2.assign(K(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&_e(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),at(()=>{this.accBeta1.assign(Lc(this.beta1,this.iterations_+1)),this.accBeta2.assign(Lc(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Wy.className="Adam";Mt(Wy);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gy extends ea{constructor(t,e,n,i=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],at(()=>{this.iteration=he(0).variable(),this.accBeta1=he(e).variable()}),i==null&&(this.epsilon=J.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);at(()=>{const n=ee(1,this.accBeta1),i=ae(-this.learningRate,Nt(K(this.iteration,this.decay),1));e.forEach((r,o)=>{const a=J.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:ke(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:ke(a).variable(l)});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Nt(K(u,this.beta1),K(c,1-this.beta1)),f=K(h,this.beta2),p=Fn(c),g=Jo(f,p);u.assign(d),h.assign(g);const m=Nt(K(ae(i,n),ae(d,Nt(g,this.epsilon))),a);a.assign(m)}),this.iteration.assign(Nt(this.iteration,1)),this.accBeta1.assign(K(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&_e(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Gy.className="Adamax";Mt(Gy);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fg extends ea{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Array.isArray(t)?t[i].tensor:t[n];if(r==null)return;const o=J.registeredVariables[n];at(()=>{const a=Nt(K(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Dr(he(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Fg.className="SGD";Mt(Fg);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hy extends Fg{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=he(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${n}/momentum`,variable:at(()=>ke(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(t)?t[i].tensor:t[n];a!=null&&at(()=>{let l;const c=Nt(K(this.m,o),a);this.useNesterov?l=Nt(K(this.c,Nt(a,K(c,this.m))),r):l=Nt(K(this.c,c),r),o.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_e(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Hy.className="Momentum";Mt(Hy);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qy extends ea{constructor(t,e=.9,n=0,i=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=J.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${n}/rms`,variable:at(()=>ke(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${n}/momentum`,variable:at(()=>ke(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${n}/mg`,variable:at(()=>ke(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,c=this.accumulatedMoments[i].variable;at(()=>{const u=Nt(K(l,this.decay),K(Xe(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=Nt(K(h,this.decay),K(a,1-this.decay)),f=ae(K(a,this.learningRate),ds(ee(u,Nt(Xe(d),this.epsilon)))),p=Nt(K(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const g=ee(r,p);r.assign(g)}else{const h=Nt(K(l,this.decay),K(Xe(a),1-this.decay)),d=Nt(K(c,this.momentum),ae(K(a,this.learningRate),ds(Nt(h,this.epsilon))));l.assign(h),c.assign(d);const f=ee(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_e(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_e(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&_e(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}qy.className="RMSProp";Mt(qy);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pa{static sgd(t){return new Fg(t)}static momentum(t,e,n=!1){return new Hy(t,e,n)}static rmsprop(t,e=.9,n=0,i=null,r=!1){return new qy(t,e,n,i,r)}static adam(t=.001,e=.9,n=.999,i=null){return new Wy(t,e,n,i)}static adadelta(t=.001,e=.95,n=null){return new Uy(t,e,n)}static adamax(t=.002,e=.9,n=.999,i=null,r=0){return new Gy(t,e,n,i,r)}static adagrad(t,e=.1){return new Vy(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jl={sgd:pa.sgd,momentum:pa.momentum,adadelta:pa.adadelta,adagrad:pa.adagrad,rmsprop:pa.rmsprop,adamax:pa.adamax,adam:pa.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s())();function ZE(){return new Promise(s=>qq(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jy(s,t){const e=s[0].length;s.forEach((i,r)=>{P(i.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),P(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const n=s[0];s.forEach((i,r)=>{for(let o=0;o<e;o++)P(o===t||i[o]===n[o],()=>`Error in concat${e}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function Ir(s,t){const e=s[0].slice();for(let n=1;n<s.length;n++)e[t]+=s[n][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wi;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(Wi||(Wi={}));function JE(s,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<s+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(s+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${s+e.length}, but shape.rank = ${n.length}`);for(let i=1;i<e.length;++i){const r=e[i],o=n[n.length-e.length+i],a=n[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+s}] = ${r} but shape[${i+s}] = ${a}`)}else n[o]=r}return n}function QE(s){const t={FIRST_DIM_SIZE:Wi.FIRST_DIM_SIZE,VALUE_ROWIDS:Wi.VALUE_ROWIDS,ROW_LENGTHS:Wi.ROW_LENGTHS,ROW_SPLITS:Wi.ROW_SPLITS,ROW_LIMITS:Wi.ROW_LIMITS,ROW_STARTS:Wi.ROW_STARTS},e=[];for(const n of s)if(n in t)e.push(t[n]);else break;return e}function tM(s){return s.length===0?0:s[0]===Wi.FIRST_DIM_SIZE?s.length-1:s.length}function eM(s,t){if(s==null||t==null)return;const e=s.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let i=0;i<Math.min(e,n-1);++i){const r=s[i],o=t[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-s.length}] = ${r} but ragged tensor input.flatValues.shape[${i-s.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xy=30;function Pg(s){return s<=Xy?s:Zx(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ky(s,t,e){const n=e*(typeof s=="number"?s:s[0]),i=t*(typeof s=="number"?s:s[1]);return[n,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $d(s,t,e,n=!0){let i=[];if(n)i=i.concat(t.slice(0)),i.push(s[0]/e),i=i.concat(s.slice(1));else{i=i.concat(s[0]);const r=t.length;for(let o=0;o<r;++o)i=i.concat([s[o+1]/t[o],t[o]]);i=i.concat(s.slice(r+1))}return i}function Ld(s,t,e=!0){const n=[];if(e){n.push(t);for(let i=t+1;i<s;++i)i<=2*t?(n.push(i),n.push(i-(t+1))):n.push(i)}else{const i=[],r=[];for(let o=1;o<s;++o)o>=t*2+1||o%2===1?r.push(o):i.push(o);n.push(...i),n.push(0),n.push(...r)}return n}function Fd(s,t,e,n=!0){const i=[];n?i.push(s[0]/e):i.push(s[0]*e);for(let r=1;r<s.length;++r)r<=t.length?n?i.push(t[r-1]*s[r]):i.push(s[r]/t[r-1]):i.push(s[r]);return i}function Yy(s,t){const e=[0];for(let n=0;n<t;++n)e.push(s[n][0]);return e}function Zy(s,t,e){const n=s.slice(0,1);for(let i=0;i<e;++i)n.push(s[i+1]-t[i][0]-t[i][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Og=1.7580993408473768,zg=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jy=.3275911,Qy=.254829592,tw=-.284496736,ew=1.421413741,nw=-1.453152027,sw=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const e=new Float32Array(s.length*2);for(let n=0;n<e.length;n+=2)e[n]=s[n/2],e[n+1]=t[n/2];return e}function nM(s){const t=new Float32Array(s.length/2),e=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)t[n/2]=s[n],e[n/2]=s[n+1];return{real:t,imag:e}}function sM(s){const t=Math.ceil(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=0;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function iM(s){const t=Math.floor(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=2;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function iw(s,t){const e=s[t*2],n=s[t*2+1];return{real:e,imag:n}}function rM(s,t,e,n){s[n*2]=t,s[n*2+1]=e}function oM(s,t){const e=new Float32Array(s/2),n=new Float32Array(s/2);for(let i=0;i<Math.ceil(s/2);i++){const r=(t?2:-2)*Math.PI*(i/s);e[i]=Math.cos(r),n[i]=Math.sin(r)}return{real:e,imag:n}}function aM(s,t,e){const n=(e?2:-2)*Math.PI*(s/t),i=Math.cos(n),r=Math.sin(n);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dx="->",jq=/->/g,aC=",",lC="...";function rw(s,t){s=s.replace(/\s/g,"");const e=(s.length-s.replace(jq,"").length)/dx.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${dx}").`);const[n,i]=s.split(dx);P(n.indexOf(lC)===-1,()=>`The ellipsis notation ("${lC}") is not supported yet.`);const r=n.split(aC),o=r.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const f=i[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<n.length;++d){const f=n[d];a.indexOf(f)===-1&&f!==aC&&a.push(f)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const c=a.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function ow(s,t){let e=new Array(s);e.fill(-1);for(let i=0;i<t.length;++i)e[t[i]]=i;const n=[];for(let i=0;i<s;++i)e[i]===-1&&n.push(i);return e=e.filter(i=>i!==-1),{permutationIndices:e,expandDims:n}}function aw(s,t,e){const n=new Array(s);for(let i=0;i<e.length;++i){const r=e[i].shape;for(let o=0;o<t[i].length;++o)n[t[i][o]]===void 0?n[t[i][o]]=r[o]:P(n[t[i][o]]===r[o],()=>`Expected dimension ${n[t[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function lw(s,t){const e=s,n=[];let i=0;s.length===0&&e.push(-1),i=s.length+1;for(let o=0;o<i;++o)n.push([]);const r=[];for(let o=0;o<e.length;++o){const a=e[o],l=Xq(t,a);for(const c of l)r.indexOf(c)===-1&&(n[o].push(c),r.push(c))}return{path:e,steps:n}}function cw(s){return s.every((t,e)=>t===e)}function Xq(s,t){const e=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function uw(s,t,e=0){let n=[];if(typeof t=="number")P(s.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(s.shape[e]/t);else{const i=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);P(i<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const o=t.reduce((a,l)=>l>0?a+l:a);t[r]=s.shape[e]-o}P(s.shape[e]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function cM(s,t){return`indices(${s}, 0) is invalid: ${t} < 0`}function uM(s,t,e){return`indices(${s}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(s,t){return`only one output dimension may be -1, not both ${s} and ${t}`}function dM(s,t){return`size ${s} must be non-negative, not ${t}`}function fM(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function pM(s,t){const e=gt(s),n=gt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${t}`}function mM(s,t){const e=gt(s),n=gt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(){return"segment ids must be >= 0"}function gM(){return"segment ids are not increasing"}function xM(s,t){return`Segment id ${s} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function vM(s,t,e){return`Bad: indices[${s}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(s,t){let e=!1,n;for(s<=Xy?(n=s,e=!0):n=Zx(s,Math.floor(Math.sqrt(s)));!e;)n>t||n===s?e=!0:n=Zx(s,n+1);return n}function yM(s,t,e){const n=[],i=s.length;for(let r=0;r<i;r++)r!==t?n.push(s[r]):n.push(e);return n}function hw(s,t,e,n){const i=t.shape.length,r=s.shape.length;if(n!==0&&(n<-i||n>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${n}`);if(n<0&&(n+=i),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let h=0;h<n;++h)if(s.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${s.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=s.shape[e],a=[];let l=1,c=1,u=1;for(let h=0;h<n;++h)a.push(s.shape[h]),l*=s.shape[h];for(let h=n;h<e;h++)a.push(s.shape[h]),c*=s.shape[h];for(let h=n;h<i;h++)a.push(t.shape[h]);for(let h=e+1;h<r;h++)a.push(s.shape[h]),u*=s.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const Kq=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:bM,computeOutShape:yM,collectGatherOpShapeInfo:hw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(s){try{return s.map(t=>zo(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function wM(s){return s.map(t=>Lo(t))}const Yq=Object.freeze(Object.defineProperty({__proto__:null,slice_util:DW,segment_util:Kq,fromUint8ToStringArray:nl,fromStringArrayToUint8:wM,upcastType:zs,axesAreInnerMostDims:vy,combineLocations:bE,computeOutAndReduceShapes:Vn,expandShapeToKeepDim:vn,assertAxesAreInnerMostDims:Qn,getAxesPermutation:un,getUndoAxesPermutation:Zo,getInnerMostAxes:bn,getBroadcastDims:$c,getReductionAxes:Rn,assertAndGetBroadcastShape:pe,assertParamsConsistent:jy,computeOutShape:Ir,computeDilation2DInfo:kd,computePool2DInfo:Ri,computePool3DInfo:ho,computeConv2DInfo:Jn,computeConv3DInfo:Yo,computeDefaultPad:hy,tupleValuesAreOne:Za,eitherStridesOrDilationsAreOne:as,convertConv2DDataFormat:fo,checkPadOnDimRoundingMode:Is,getFusedDyActivation:Dy,getFusedBiasGradient:$y,applyActivation:Ly,shouldFuse:Fy,get RowPartitionType(){return Wi},combineRaggedTensorToTensorShapes:JE,getRowPartitionTypesHelper:QE,getRaggedRank:tM,validateDefaultValueShape:eM,PARALLELIZE_THRESHOLD:Xy,computeOptimalWindowSize:Pg,getImageCenter:Ky,getReshaped:$d,getPermuted:Ld,getReshapedPermuted:Fd,getSliceBeginCoords:Yy,getSliceSize:Zy,prepareAndValidate:ry,validateUpdateShape:sE,validateInput:MW,calculateShapes:Md,SELU_SCALEALPHA:Og,SELU_SCALE:zg,ERF_P:Jy,ERF_A1:Qy,ERF_A2:tw,ERF_A3:ew,ERF_A4:nw,ERF_A5:sw,warn:Ks,log:fV,mergeRealAndImagArrays:co,splitRealAndImagArrays:nM,complexWithEvenIndex:sM,complexWithOddIndex:iM,getComplexWithIndex:iw,assignToTypedArray:rM,exponents:oM,exponent:aM,decodeEinsumEquation:rw,getEinsumPermutation:ow,checkEinsumDimSizes:aw,getEinsumComputePath:lw,isIdentityPermutation:cw,prepareSplitSize:uw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:lM,getSparseFillEmptyRowsNegativeIndexErrorMessage:cM,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:uM,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:hM,getSparseReshapeNegativeOutputDimErrorMessage:dM,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:fM,getSparseReshapeInputOutputMultipleErrorMessage:pM,getSparseReshapeInputOutputMismatchErrorMessage:mM,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:xv,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:gM,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:xM,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:vM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M={kernelName:Tm,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,Dd(Vt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zq={kernelName:Dh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=Xe(Vt(e,"float32")),i=ds(ee(he(1),n));return cn(ae(s,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq={kernelName:$h,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=ds(ee(Xe(Vt(e,"float32")),1));return ae(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq={kernelName:eu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{let a=s;const l=Rn(e.shape,i);return l.length>0&&(a=te(a,l)),et(a,e.shape)},b:()=>{let a=s;const l=Rn(n.shape,i);return l.length>0&&(a=te(a,l)),et(a,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8={kernelName:cb,saveAllInputs:!0,gradFunc:(s,t)=>{const e={};return t.forEach((n,i)=>{e[i]=()=>s.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e8={kernelName:Im,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ke(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n8={kernelName:Em,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ke(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s8={kernelName:Lh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,ds(ee(he(1),Xe(Vt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8={kernelName:Fh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=ds(Nt(he(1),Xe(Vt(e,"float32"))));return ae(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8={kernelName:zh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{const a=Nt(Xe(e),Xe(n));let l=K(s,ae(n,a));const c=Rn(e.shape,i);return c.length>0&&(l=te(l,c)),et(l,e.shape)},b:()=>{const a=Nt(Xe(e),Xe(n));let l=cn(K(s,ae(e,a)));const c=Rn(n.shape,i);return c.length>0&&(l=te(l,c)),et(l,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8={kernelName:Ph,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,Nt(Xe(Vt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8={kernelName:Oh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,ee(he(1),Xe(Vt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(s,t,e,n,i,r){const o=B(s,"dy","avgPool3dGrad"),a=B(t,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=et(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Is("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:e,strides:n,pad:i,dimRoundingMode:r},f=J.runKernel(fb,h,d);return u?et(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const c8=Q({avgPool3dGrad_:l8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8={kernelName:km,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:a}=e;return{x:()=>c8(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(s,t,e,n,i){const r=B(s,"dy","avgPoolGrad"),o=B(t,"input","avgPoolGrad");P(o.rank===r.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${r.rank})`);let a=o,l=r,c=!1;o.rank===3&&(c=!0,a=et(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=et(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),P(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:e,strides:n,pad:i},d=J.runKernel(db,u,h);return c?et(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const d8=Q({avgPoolGrad_:h8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8={kernelName:Mm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o}=e;return{x:()=>d8(s,n,i,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8={kernelName:Am,inputsToSave:["a","b"],gradFunc:(s,t,e)=>{const[n,i]=t,{transposeA:r,transposeB:o}=e;return!r&&!o?{a:()=>$e(s,i,!1,!0),b:()=>$e(n,s,!0,!1)}:!r&&o?{a:()=>$e(s,i,!1,!1),b:()=>$e(s,n,!0,!1)}:r&&!o?{a:()=>$e(i,s,!1,!0),b:()=>$e(n,s,!1,!1)}:{a:()=>$e(i,s,!0,!0),b:()=>$e(s,n,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8={kernelName:Nm,gradFunc:(s,t,e)=>{const{blockShape:n,crops:i}=e;return{x:()=>Iy(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8={kernelName:uV,gradFunc:(s,t,e)=>{const n=e,i=n.inputShape,r=n.shape,o=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])o[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>te(s,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8={kernelName:Bh,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8={kernelName:Uh,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8={kernelName:Vh,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{clipValueMin:i,clipValueMax:r}=e;return{x:()=>Us(lo(gl(n,i),iu(n,r)),s,ke(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8={kernelName:Rm,inputsToSave:["x"],gradFunc:_M.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8={kernelName:Dm,saveAllInputs:!0,gradFunc:(s,t,e)=>{const n=t.map(l=>l.shape),{axis:i}=e,r=be(i,t[0].shape)[0],o=n.map(l=>l[r]);return Qs(s,o,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8={kernelName:$m,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{dilations:r,strides:o,pad:a,dataFormat:l}=e;return P(Za(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>my(n.shape,s,i,o,a,l),filter:()=>Ry(n,s,i.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8={kernelName:Lm,inputsToSave:["dy","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{strides:r,pad:o,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Ja(s,i,r,o,a,1,l),filter:()=>Ry(s,n,i.shape,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(s,t,e,n,i){let r=s;s.rank===4&&(r=et(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let o=t;o.rank===4&&(o=et(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),P(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),P(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),P(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),P(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:r,dy:o},l={strides:n,pad:i,filterShape:e};return J.runKernel(xb,a,l)}const T8=Q({conv3DBackpropFilter_:C8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8={kernelName:Fm,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r}=e;P(Za(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);const[o,a]=t;return{x:()=>gE(o.shape,s,a,i,r),filter:()=>T8(o,s,a.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8={kernelName:Wh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(cn(zE(Vt(e,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8={kernelName:Gh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(BE(Vt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8={kernelName:Pm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i,exclusive:r,reverse:o}=e;return{x:()=>{const a=un([i],n.rank);let l=vE(s,i,r,!o);return a!=null&&(l=Ee(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8={kernelName:Om,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r,dimRoundingMode:o}=e,a=n==null?[1,1]:n;P(Za(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),P(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),P(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),P(as(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),Is("depthwiseConv2d",r,o),{x:()=>$6(l.shape,s,c,i,r,a,o),filter:()=>R6(l,s,c.shape,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8={kernelName:zm,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,r={x:n,filter:i,dy:s},o={x:n,filter:i,dy:s};return{x:()=>J.runKernel(Jx,r,e),filter:()=>J.runKernel(Qx,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8={kernelName:qh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t,n={dy:s,y:e};return{x:()=>J.runKernel(Tb,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8={kernelName:jh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=K(Ti(cn(Xe(e))),2/Math.sqrt(Math.PI));return{x:()=>K(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8={kernelName:Xh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8={kernelName:Um,inputsToSave:["input"],gradFunc:(s,t)=>{const[e]=t;return{input:()=>et(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8={kernelName:Kh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,Ti(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8={kernelName:Yh,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8={kernelName:Zh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{const a=ae(s,Vt(n,"float32")),l=Rn(e.shape,i);return l.length>0?et(te(a,l),e.shape):a},b:()=>{let a=K(s,Vt(e,"float32"));const l=Rn(n.shape,i);l.length>0&&(a=et(te(a,l),n.shape));const c=Xe(n);return cn(ae(a,Vt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8={kernelName:Vm,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,e)=>{const{varianceEpsilon:n}=e,[i,r,o,a]=t,l=a==null?he(1):a,c=Rn(r.shape,i.shape),u=[];if(r.rank===1){for(let b=0;b<i.shape.length-1;++b)u.push(i.shape[b]);u.push(1)}const h=ee(i,r),d=K(s,l),f=FE(Nt(o,he(n))),p=K(K(K(f,f),f),he(-.5));return{x:()=>r.rank===1?et(K(K(s,Xi(et(f,[1,1,1,r.shape[0]]),u)),l),i.shape):et(K(K(s,f),l),i.shape),mean:()=>{let b=K(K(f,he(-1)),d);return r.rank===1&&(b=te(b,c)),et(b,r.shape)},variance:()=>{let b=K(K(p,h),d);return r.rank===1&&(b=te(b,c)),et(b,r.shape)},scale:()=>{const b=K(h,f);let w=K(s,b);return r.rank===1&&(w=te(w,c)),et(w,r.shape)},offset:()=>{let b=s;return r.rank===1&&(b=te(b,c)),et(b,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8={kernelName:Wm,inputsToSave:["x","indices"],gradFunc:(s,t,e)=>{const[n,i]=t,{axis:r}=e,o=be(r,n.shape)[0];return{x:()=>{const l=n.shape,c=i.size,u=l.slice(0,o),h=u.length,d=l.slice(r,l.length).slice(1),f=d.length,p=cC(0,h),g=cC(h+1,h+1+f),m=uC([u,[c],d]),x=et(s,m),v=et(i,[c]),y=uC([[h],p,g]),b=Ee(x,y);let w=qE(b,v,n.shape[o]);const _=Zo(y);return w=Ee(w,_),w},indices:()=>i}}};function cC(s,t){const e=[];for(let n=s;n<t;++n)e.push(n);return e}function uC(s){const t=[];for(let e=0;e<s.length;++e)for(let n=0;n<s[e].length;++n)t.push(s[e][n]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8={kernelName:Jh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>ke(e),b:()=>ke(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8={kernelName:Qh,gradFunc:s=>({x:()=>Vt(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8={kernelName:td,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8={kernelName:ed,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8={kernelName:nd,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8={kernelName:Hm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{alpha:i}=e,r=ri(n,0);return{x:()=>Us(r,s,K(s,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8={kernelName:id,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,Nt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8={kernelName:sd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,Vt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8={kernelName:hV,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;return{logits:()=>{const o=Ti(n);return ee(s,K(te(s,i,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y8(s,t,e,n=5,i=1,r=1,o=.5){const a={x:s,y:t,dy:e},l={depthRadius:n,bias:i,alpha:r,beta:o};return J.runKernel(Nb,a,l)}const Z8=Q({localResponseNormalizationBackprop_:Y8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8={kernelName:Zm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{depthRadius:r,bias:o,alpha:a,beta:l}=e;return{x:()=>Z8(n,i,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(s,t,e,n){return t.rank<e.rank&&(t=et(t,vn(t.shape,n))),s.rank<e.rank&&(s=et(s,vn(s.shape,n))),{x:()=>K(s,Vt($r(e,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hC={kernelName:Jm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{reductionIndices:i}=n,r=t[0],o=t[1],a=be(i,r.shape),l=SM(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8={kernelName:rd,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>K(s,Vt(gl(e,n),"float32")),b:()=>K(s,Vt(_E(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tj(s,t,e,n,i,r,o){const a=B(s,"dy","maxPool3dGrad"),l=B(t,"input","maxPool3dGrad"),c=B(e,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=et(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=et(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=et(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),P(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Is("maxPool3dGrad",r,o);const p={dy:u,input:h,output:d},g={filterSize:n,strides:i,pad:r,dimRoundingMode:o},m=J.runKernel(Db,p,g);return f?et(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const ej=Q({maxPool3dGrad_:tj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:tg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=e;return{x:()=>ej(s,n,i,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(s,t,e,n,i,r,o){const a=B(s,"dy","maxPoolGrad"),l=B(t,"input","maxPoolGrad"),c=B(e,"output","maxPoolGrad");P(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),P(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),P(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Is("maxPoolGrad",r,o);const u={dy:a,input:l,output:c},h={filterSize:n,strides:i,pad:r,dimRoundingMode:o};return J.runKernel(Rb,u,h)}const ij=Q({maxPoolGrad_:sj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:Qm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>ij(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:eg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e,r=be(i,n.shape),a=Vn(n.shape,r)[1],l=gt(a);return{x:()=>{const u=n.shape.slice();r.forEach(f=>{u[f]=1});const h=et(s,u);return ae(K(h,Qo(n.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:ng,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{axis:i}=n,[r,o]=t,a=be(i,r.shape),l=SM(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:od,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>K(s,Vt(iu(e,n),"float32")),b:()=>K(s,Vt(ri(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:sg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>We(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:ad,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{const a=Rn(e.shape,i);return a.length>0?et(te(s,a),e.shape):s},b:()=>{const a=K(s,cn(Dg(ae(e,n)))),l=Rn(n.shape,i);return l.length>0?et(te(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:ld,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{const a=K(s,Vt(n,"float32")),l=Rn(e.shape,i);return l.length>0?et(te(a,l),e.shape):a},b:()=>{const a=K(s,Vt(e,"float32")),l=Rn(n.shape,i);return l.length>0?et(te(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:ig,gradFunc:s=>({x:()=>cn(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:ag,inputsToSave:["indices"],gradFunc:(s,t)=>{const e=t[0];return{indices:()=>On(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:og,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:lg,saveAllInputs:!0,gradFunc:(s,t,e)=>{const{axis:n}=e;return Fc(s,n).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC={kernelName:cg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>We(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:cd,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[e,n,i]=t,r=e,o=n,a=pe(r.shape,o.shape);return{a:()=>{const u=Vt(o,"float32");let h=K(s,K(u,Lc(r,ee(u,he(1)))));const d=Rn(r.shape,a);return d.length>0&&(h=te(h,d)),et(h,r.shape)},b:()=>{const u=ri(r,0),h=Us(u,Ii(r),ke(r));let d=K(s,K(i,h));const f=Rn(o.shape,a);return f.length>0&&(d=te(d,f)),et(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj={kernelName:ug,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[e,n]=t,i=ri(e,0);return{x:()=>Us(i,s,K(s,n)),alpha:()=>{let r=Us(i,ke(s),K(s,e));const o=Rn(n.shape,s.shape);return o.length>0&&(r=te(r,o)),et(r,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(s,t,e){const n=s.shape.slice();n[e]=1;const i=et(t,n),r=pv(s,e,!0,!1),o=pv(s,e,!0,!0),a=K(r,o);return K(i,a)}function bj(s,t,e){const n=s.shape.length,i=n-e.length,r=un(e,n);let o=s;r!=null&&(o=Ee(s,r));const a=o.shape.slice(),c=a.splice(n-e.length,e.length).reduce((d,f)=>d*f,1);a.push(c);const u=o.reshape(a);let h=vj(u,t,i);if(h=h.reshape(o.shape),r!=null){const d=Zo(r);h=Ee(h,d)}return h}const yj={kernelName:hg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;let r=[];return i==null?r=n.shape.map((o,a)=>a):typeof i=="number"?r=[i]:r=i,{x:()=>bj(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj={kernelName:Hh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{const a=ae(s,Vt(n,"float32")),l=Rn(e.shape,i);return l.length>0?et(te(a,l),e.shape):a},b:()=>{let a=K(s,Vt(e,"float32"));const l=Rn(n.shape,i);l.length>0&&(a=et(te(a,l),n.shape));const c=Xe(n);return cn(ae(a,Vt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j={kernelName:ud,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,cn(Xe(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj={kernelName:dd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=K(iu(e,6),Dd(e));return{x:()=>K(s,Vt(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj={kernelName:hd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,Vt(Dd(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tj={kernelName:dg,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>et(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij={kernelName:pg,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>J.runKernel(Bb,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ej={kernelName:fg,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>J.runKernel(zb,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj={kernelName:mg,gradFunc:(s,t,e)=>{const{dims:n}=e,i=be(n,s.shape);return{x:()=>tl(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj={kernelName:fd,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aj={kernelName:pd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>cn(ae(s,K(Lc(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj={kernelName:gg,inputsToSave:["condition"],gradFunc:(s,t)=>{const[e]=t;return{condition:()=>Vt(ke(e),"float32"),t:()=>K(s,Vt(e,s.dtype)),e:()=>K(s,Vt(_y(e),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rj={kernelName:md,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=ri(e,he(0)),i=he(Og),r=he(zg),o=K(s,r),a=K(K(s,i),Ti(Vt(e,"float32")));return Us(n,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj={kernelName:bd,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,K(e,ee(he(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $j={kernelName:vd,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lj={kernelName:gd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(gy(Vt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj={kernelName:xd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(xE(Vt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj={kernelName:xg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{begin:i,size:r}=e,o=n.shape,[a,l]=kg(n,i,r),c=[];for(let u=0;u<s.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>Ty(s,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oj={kernelName:wg,outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{dim:i}=e,r=!0,o=K(s,n);return{logits:()=>ee(o,K(te(o,[i],r),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj={kernelName:yd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,su(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC={kernelName:bg,gradFunc:(s,t,e)=>{const{blockShape:n,paddings:i}=e;return{x:()=>py(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC={kernelName:yg,gradFunc:(s,t,e)=>{const{axis:n}=e;return{x:()=>is(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj={kernelName:wd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,K(ds(Vt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uj={kernelName:Hb,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,K(Vt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj={kernelName:_d,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(2);return{a:()=>K(s,K(i,ee(e,n))),b:()=>K(s,K(i,ee(n,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj={kernelName:Ed,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gj={kernelName:Sd,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=pe(e.shape,n.shape);return{a:()=>{let a=s;const l=Rn(e.shape,i);return l.length>0&&(a=te(a,l)),et(a,e.shape)},b:()=>{let a=s;const l=Rn(n.shape,i);return l.length>0&&(a=te(a,l)),et(cn(a),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj={kernelName:vg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,i=n.shape.slice(),{axis:r}=e;be(r,n.shape).forEach(c=>{i[c]=1});const a=et(s,i),l=K(a,Qo(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj={kernelName:Cd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,Xe(gy(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jj={kernelName:Td,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(ee(he(1),Xe(e)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj={kernelName:Id,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{reps:i}=e;return{x:()=>{let o=ke(n);if(n.rank===1)for(let a=0;a<i[0];++a)o=Nt(o,We(s,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)o=Nt(o,We(s,[a*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)o=Nt(o,We(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)for(let u=0;u<i[3];++u)o=Nt(o,We(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2],u*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj={kernelName:gc,gradFunc:(s,t,e)=>{const n=e,{perm:i}=n,r=Zo(i);return{x:()=>Ee(s,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj={kernelName:_g,gradFunc:(s,t,e)=>{const n=e,{axis:i}=n;return{value:()=>el(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zj={kernelName:Sg,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Jj(s,e)}}};function Jj(s,t){const e=Jo(t,ke(t)),n=by(s,e);let i=gl(t,he(0,"int32"));const r=n.rank-i.rank;for(let a=0;a<r;++a)i=Ns(i,a+1);i=lo(i,Qo(n.shape,"bool"));const o=ke(n);return Us(i,n,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj={kernelName:Cg,gradFunc:s=>({x:()=>ke(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX=[_M,Zq,Jq,Qq,t8,e8,n8,s8,i8,r8,o8,a8,u8,f8,p8,m8,g8,x8,v8,b8,y8,w8,S8,_8,I8,E8,M8,k8,A8,N8,wj,R8,D8,$8,L8,F8,O8,P8,z8,B8,U8,V8,W8,G8,H8,q8,j8,X8,K8,J8,hC,hC,Q8,nj,rj,oj,aj,lj,cj,uj,hj,dj,fj,pj,mj,dC,dC,gj,xj,yj,_j,Sj,Cj,Tj,Ij,Ej,Mj,kj,Aj,Nj,Rj,Dj,$j,Lj,Fj,Pj,Oj,zj,fC,fC,pC,pC,Bj,Vj,Uj,Wj,Gj,Hj,qj,jj,Xj,Kj,Yj,Zj,Qj];for(const s of tX)pV(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.abs=function(){return this.throwIfDisposed(),Fn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.acos=function(){return this.throwIfDisposed(),BW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.acosh=function(){return this.throwIfDisposed(),VW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.add=function(s){return this.throwIfDisposed(),Nt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.all=function(s,t){return this.throwIfDisposed(),fE(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.any=function(s,t){return this.throwIfDisposed(),dv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.argMax=function(s){return this.throwIfDisposed(),fh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.argMin=function(s){return this.throwIfDisposed(),jW(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),et(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asType=function(s){return this.throwIfDisposed(),Vt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as1D=function(){return this.throwIfDisposed(),et(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as2D=function(s,t){return this.throwIfDisposed(),et(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as3D=function(s,t,e){return this.throwIfDisposed(),et(this,[s,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as4D=function(s,t,e,n){return this.throwIfDisposed(),et(this,[s,t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as5D=function(s,t,e,n,i){return this.throwIfDisposed(),et(this,[s,t,e,n,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asin=function(){return this.throwIfDisposed(),KW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asinh=function(){return this.throwIfDisposed(),ZW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.atan=function(){return this.throwIfDisposed(),QW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.atan2=function(s){return this.throwIfDisposed(),eG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.atanh=function(){return this.throwIfDisposed(),sG(this)};pt().prototype.avgPool=function(s,t,e,n){return this.throwIfDisposed(),dy(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),py(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.batchNorm=function(s,t,e,n,i){return this.throwIfDisposed(),Ag(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.broadcastTo=function(s){return this.throwIfDisposed(),Ku(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cast=function(s){return this.throwIfDisposed(),Vt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.ceil=function(){return this.throwIfDisposed(),kG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),ti(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof _n&&(s=[s]),is([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.conv1d=function(s,t,e,n,i,r){return this.throwIfDisposed(),pE(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.conv2dTranspose=function(s,t,e,n,i){return this.throwIfDisposed(),mE(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.conv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),Ja(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cos=function(){return this.throwIfDisposed(),gy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cosh=function(){return this.throwIfDisposed(),xE(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cumprod=function(s,t,e){return this.throwIfDisposed(),pv(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cumsum=function(s,t,e){return this.throwIfDisposed(),vE(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),tH(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.depthwiseConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),xy(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.dilation2d=function(s,t,e,n,i){return this.throwIfDisposed(),sH(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.divNoNan=function(s){return this.throwIfDisposed(),lH(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.div=function(s){return this.throwIfDisposed(),ae(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.dot=function(s){return this.throwIfDisposed(),uH(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.elu=function(){return this.throwIfDisposed(),Ng(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.equal=function(s){return this.throwIfDisposed(),$r(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.erf=function(){return this.throwIfDisposed(),fH(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.euclideanNorm=function(s,t){return this.throwIfDisposed(),_H(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.exp=function(){return this.throwIfDisposed(),Ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.expandDims=function(s){return this.throwIfDisposed(),Ns(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.expm1=function(){return this.throwIfDisposed(),IH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.fft=function(){return this.throwIfDisposed(),VE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.flatten=function(){return this.throwIfDisposed(),et(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.floor=function(){return this.throwIfDisposed(),Dg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.floorDiv=function(s){return this.throwIfDisposed(),dE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.gather=function(s,t){return this.throwIfDisposed(),by(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.greaterEqual=function(s){return this.throwIfDisposed(),gl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.greater=function(s){return this.throwIfDisposed(),ri(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.ifft=function(){return this.throwIfDisposed(),gv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.irfft=function(){return this.throwIfDisposed(),r6(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.isFinite=function(){return this.throwIfDisposed(),$H(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.isInf=function(){return this.throwIfDisposed(),FH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.isNaN=function(){return this.throwIfDisposed(),OH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.leakyRelu=function(s){return this.throwIfDisposed(),yy(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.lessEqual=function(s){return this.throwIfDisposed(),iu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.less=function(s){return this.throwIfDisposed(),_E(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.localResponseNormalization=function(s,t,e,n){return this.throwIfDisposed(),WH(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logSigmoid=function(){return this.throwIfDisposed(),KH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logSoftmax=function(s){return this.throwIfDisposed(),SE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),CE(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.log=function(){return this.throwIfDisposed(),Ii(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.log1p=function(){return this.throwIfDisposed(),wy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalAnd=function(s){return this.throwIfDisposed(),lo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalNot=function(){return this.throwIfDisposed(),_y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalOr=function(s){return this.throwIfDisposed(),TE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalXor=function(s){return this.throwIfDisposed(),s5(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.matMul=function(s,t,e){return this.throwIfDisposed(),$e(this,s,t,e)};pt().prototype.maxPool=function(s,t,e,n){return this.throwIfDisposed(),Sy(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.max=function(s,t){return this.throwIfDisposed(),Yi(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.maximum=function(s){return this.throwIfDisposed(),Jo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mean=function(s,t){return this.throwIfDisposed(),gn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.min=function(s,t){return this.throwIfDisposed(),Op(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.minimum=function(s){return this.throwIfDisposed(),$g(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),h5(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mod=function(s){return this.throwIfDisposed(),f5(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mul=function(s){return this.throwIfDisposed(),K(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.neg=function(){return this.throwIfDisposed(),cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.norm=function(s,t,e){return this.throwIfDisposed(),Rg(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.notEqual=function(s){return this.throwIfDisposed(),ph(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.oneHot=function(s,t=1,e=0){return this.throwIfDisposed(),eE(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.onesLike=function(){return this.throwIfDisposed(),Ei(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.pad=function(s,t){return this.throwIfDisposed(),Ty(this,s,t)};pt().prototype.pool=function(s,t,e,n,i,r){return this.throwIfDisposed(),_5(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.pow=function(s){return this.throwIfDisposed(),Lc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.prelu=function(s){return this.throwIfDisposed(),Ey(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.prod=function(s,t){return this.throwIfDisposed(),T5(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reciprocal=function(){return this.throwIfDisposed(),z5(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.relu=function(){return this.throwIfDisposed(),po(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.relu6=function(){return this.throwIfDisposed(),$E(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reshapeAs=function(s){return this.throwIfDisposed(),et(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reshape=function(s){return this.throwIfDisposed(),et(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.resizeBilinear=function(s,t,e){return this.throwIfDisposed(),KE(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.resizeNearestNeighbor=function(s,t,e){return this.throwIfDisposed(),YE(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reverse=function(s){return this.throwIfDisposed(),tl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.rfft=function(){return this.throwIfDisposed(),WE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.round=function(){return this.throwIfDisposed(),LE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.rsqrt=function(){return this.throwIfDisposed(),FE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.selu=function(){return this.throwIfDisposed(),PE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.separableConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),OE(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sigmoid=function(){return this.throwIfDisposed(),su(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sign=function(){return this.throwIfDisposed(),X5(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sin=function(){return this.throwIfDisposed(),zE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sinh=function(){return this.throwIfDisposed(),BE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.slice=function(s,t){return this.throwIfDisposed(),We(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.softmax=function(s){return this.throwIfDisposed(),Ny(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.softplus=function(){return this.throwIfDisposed(),Nd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),Iy(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.split=function(s,t){return this.throwIfDisposed(),Qs(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sqrt=function(){return this.throwIfDisposed(),ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.square=function(){return this.throwIfDisposed(),Xe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.squaredDifference=function(s){return this.throwIfDisposed(),GE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.squeeze=function(s){return this.throwIfDisposed(),Rd(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.stack=function(s,t){this.throwIfDisposed();const e=s instanceof _n?[this,s]:[this,...s];return el(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.step=function(s){return this.throwIfDisposed(),Dd(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.stridedSlice=function(s,t,e,n,i,r,o,a){return this.throwIfDisposed(),f6(this,s,t,e,n,i,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sub=function(s){return this.throwIfDisposed(),ee(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sum=function(s,t){return this.throwIfDisposed(),te(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.tan=function(){return this.throwIfDisposed(),m6(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.tanh=function(){return this.throwIfDisposed(),fy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.tile=function(s){return this.throwIfDisposed(),Xi(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.toBool=function(){return this.throwIfDisposed(),Vt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.toFloat=function(){return this.throwIfDisposed(),Vt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.toInt=function(){return this.throwIfDisposed(),Vt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.topk=function(s,t){return this.throwIfDisposed(),x6(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.transpose=function(s){return this.throwIfDisposed(),Ee(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.unique=function(s){return this.throwIfDisposed(),y6(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),qE(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.unstack=function(s){return this.throwIfDisposed(),Fc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.where=function(s,t){return this.throwIfDisposed(),Us(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.zerosLike=function(){return this.throwIfDisposed(),ke(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class br extends Error{constructor(t){super(t),Object.setPrototypeOf(this,br.prototype)}}class _i extends Error{constructor(t){super(t),Object.setPrototypeOf(this,_i.prototype)}}class Z extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Z.prototype)}}class me extends Error{constructor(t){super(t),Object.setPrototypeOf(this,me.prototype)}}class dw extends Error{constructor(t){super(t),Object.setPrototypeOf(this,dw.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CM{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sl(s,t){if(Array.isArray(s)){let e=[];for(let n=0;n<t;n++)e=e.concat(s);return e}else{const e=new Array(t);return e.fill(s),e}}function yr(s,t){if(!s)throw new dw(t)}function mC(s,t){let e=0;for(const n of s)n===t&&e++;return e}function ys(s){return s.length===1?s[0]:s}function Ze(s){return Array.isArray(s)?s:[s]}function to(s){const e=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function _a(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let ui={};function fw(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function vv(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>vv(t));else{const t=Object.keys(s);for(const e of t){const n=s[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?s[e]=n.value:vv(n))}}}function Pd(s,t={},e={},n="object",i=!1){if(typeof s=="string"){const r=s;let o;if(r in e)o=e[r];else if(r in ui)o=ui[r];else if(o=t[r],o==null)throw new Z(`Unknown ${n}: ${s}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const r=s;if(r.className==null||r.config==null)throw new Z(`${n}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const o=r.className;let a,l;if(o in e?[a,l]=e[o]:o in ui?[a,l]=ui.className:o in t&&([a,l]=t[o]),a==null)throw new Z(`Unknown ${n}: ${o}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(ui))c[f]=ui[f];for(const f of Object.keys(e))c[f]=e[f];const u=r.config;u.customObjects=c;const h=Object.assign({},ui);for(const f of Object.keys(e))ui[f]=e[f];vv(r.config);const d=l(a,r.config,e,i);return ui=Object.assign({},h),d}else{const c=Object.assign({},ui);for(const h of Object.keys(e))ui[h]=e[h];const u=new a(r.config);return ui=Object.assign({},c),u}}}function eX(s,t){return s<t?-1:s>t?1:0}function jf(s,t){return-1*eX(s,t)}function Fo(s){if(s==null)return s;const t=[];for(const e of s)t.indexOf(e)===-1&&t.push(e);return t}function nX(s){if(s==null)throw new Z(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function vl(s,t,e){if(e!=null&&s.indexOf(e)<0)throw new Z(`${e} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function pw(s,t,e=0,n=1/0){return yr(e>=0),yr(n>=e),Array.isArray(s)&&s.length>=e&&s.length<=n&&s.every(i=>typeof i===t)}function zn(s,t){Array.isArray(s)?(P(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((e,n)=>zn(e,`element ${n+1} of ${t}`))):P(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${TM(s)}.`)}function TM(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>TM(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function sX(s,t,e){let n=e!=null?e():vs(),i;return(...o)=>{const a=e!=null?e():vs();return a-n<t||(n=a,i=s(...o)),i}}function IM(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let iX=0;function EM(){return iX++}const Xf={};function Bg(s=""){return s in Xf||(Xf[s]=0),Xf[s]+=1,s+Xf[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rX=["channelsFirst","channelsLast"],oX=["nearest","bilinear"],aX=["valid","same","causal"],lX=["max","avg"],cX=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Xl=new Map;function yn(s){vl(rX,"DataFormat",s)}function uX(s){vl(oX,"InterpolationFormat",s)}function oi(s){vl(aX,"PaddingMode",s)}function MM(s){vl(lX,"PoolMode",s)}const Yu=[],gC="/";function Fa(s,t){Yu.push(s);try{const e=t();return Yu.pop(),e}catch(e){throw Yu.pop(),e}}function hX(){return Yu.length===0?"":Yu.join(gC)+gC}function kM(s){if(!NM(s))throw new Error("Not a valid tensor name: '"+s+"'");return hX()+s}function AM(s){if(!NM(s))throw new Error("Not a valid tensor name: '"+s+"'");Xl.has(s)||Xl.set(s,0);const t=Xl.get(s);if(Xl.set(s,Xl.get(s)+1),t>0){const e=`${s}_${t}`;return Xl.set(e,1),e}else return s}const dX=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function NM(s){return!!s.match(dX)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fX(s){return s===parseInt(s.toString(),10)}function Po(s,t,e){t==null&&(t=0),e==null&&(e=s.length);let n=1;for(let i=t;i<e;++i)n*=s[i];return n}function Pc(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n<t&&(t=n)}return t}function Bo(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n>t&&(t=n)}return t}function er(s,t){if(t<s)throw new Z(`end (${t}) < begin (${s}) is forbidden.`);const e=[];for(let n=s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let fx;function Mn(){return fx==null&&(fx=SW().epsilon()),fx}function nr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bl(s,t){return Vt(s,t)}function Od(s,t=-1){const e=s.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),et(s,e)}function pX(s,t){return at(()=>{if(s.shape.length!==2)throw new Z(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const e=Od(s,1);return bv(e,[1,t,1])})}function mX(s){const t=[Po(s.shape)];return et(s,t)}function gX(s){if(s.rank<=1)throw new Z(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],Po(s.shape,1)];return et(s,t)}function Pa(s,t,e){return at(()=>{switch(s.rank){case 1:return ky(s,t,e);case 2:return UE(s,[t,0],[e,s.shape[1]]);case 3:return Ay(s,[t,0,0],[e,s.shape[1],s.shape[2]]);case 4:return Bp(s,[t,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3]]);case 5:return We(s,[t,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return We(s,[t,0,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new Z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function px(s,t,e){return at(()=>{switch(s.rank){case 1:return ky(s,t,e);case 2:return UE(s,[0,t],[s.shape[0],e]);case 3:return Ay(s,[0,0,t],[s.shape[0],s.shape[1],e]);case 4:return Bp(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],e]);default:throw new Z(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Kf(s,t,e,n){return at(()=>{switch(s.rank){case 1:return ky(s,t,e);case 2:switch(n){case 1:return Pa(s,t,e);case 2:return px(s,t,e);default:throw new Z(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Pa(s,t,e);case 2:return Ay(s,[0,t,0],[s.shape[0],e,s.shape[2]]);case 3:return px(s,t,e);default:throw new Z(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Pa(s,t,e);case 2:return Bp(s,[0,t,0,0],[s.shape[0],e,s.shape[2],s.shape[3]]);case 3:return Bp(s,[0,0,t,0],[s.shape[0],s.shape[1],e,s.shape[3]]);case 4:return px(s,t,e);default:throw new Z(`The axis is not within the rank of the tensor ${n}`)}default:throw new Z(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function mw(s,t=-1){let e;return t<0&&(e=s[0].rank,e!==0?t=e:t=0),t===s[0].rank&&(t=-1),is(s,t)}function xC(s,t){switch(s.rank){case 1:return RG([s,t]);case 2:return $G([s,t],0);case 3:return FG([s,t],0);case 4:return OG([s,t],0);default:throw new Z(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function bv(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new Z(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return Xi(s,t)}function Ug(s,t=0,e=1,n,i){return mv(s,t,e,n,i)}function Er(s,t,e,n){if(s.rank<2||t.rank<2)throw new me(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const i=s.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(i!==r)throw new me(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return iC({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?yv(s.rank,n,nr()):null,activation:e});{const i=s.shape.slice(),r=i.pop();s=et(s,[-1,r]);const o=t.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:t.rank},(p,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=et(Ee(t,u),[l,-1]);const h=[...i,...c];return et(iC({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?yv(s.rank,n,nr()):null,activation:e}),h)}}function RM(s,t,e){return at(()=>(Array.isArray(t)?t=Ls(t,"int32"):t=Vt(t,"int32"),by(s,t,e)))}function zd(s){return K(s,s)}function yv(s,t,e){const n=t.shape;if(t.rank!==1&&t.rank!==s)throw new Z(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(e==="channelsFirst")return n.length===1?et(t,[1,n[0],1,1,1]):et(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?et(t,[1,1,1,1,n[0]]):et(t,[1].concat(n))}else if(s===4){if(e==="channelsFirst")return n.length===1?et(t,[1,n[0],1,1]):et(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?et(t,[1,1,1,n[0]]):et(t,[1].concat(n))}else if(s===3){if(e==="channelsFirst")return n.length===1?et(t,[1,n[0],1]):et(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?et(t,[1,1,n[0]]):et(t,[1].concat(n))}else if(s<3)return t;throw new Z(`Unsupported input rank by biasAdd: ${t.rank}`)}function ar(s,t,e){return at(()=>(e==null&&(e=nr()),yn(e),Nt(s,yv(s.rank,t,e))))}function xX(s,t=1){if(t!==1)throw new me(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ng(s)}function vX(s){return at(()=>ae(s,Nt(Fn(s),1)))}function DM(s,t,e,n){return at(()=>I6(s,t,e,n))}function bX(s){return at(()=>{const t=Nt(.5,K(.2,s));return ti(t,0,1)})}function Bd(s,t,e=!1){return e?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yX=["fanIn","fanOut","fanAvg"],wX=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _X(s){vl(yX,"FanMode",s)}function SX(s){vl(wX,"Distribution",s)}class Di extends nu{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class $M extends Di{apply(t,e){return On(t,e)}}$M.className="Zeros";Mt($M);class gw extends Di{apply(t,e){return Qo(t,e)}}gw.className="Ones";Mt(gw);class LM extends Di{constructor(t){if(super(),typeof t!="object")throw new Z(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new Z(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return at(()=>K(he(this.value),Qo(t,e)))}getConfig(){return{value:this.value}}}LM.className="Constant";Mt(LM);class FM extends Di{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Lg(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}FM.className="RandomUniform";Mt(FM);class PM extends Di{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new me(`randomNormal does not support dType ${e}.`);return Ug(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}PM.className="RandomNormal";Mt(PM);class OM extends Di{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new me(`truncatedNormal does not support dType ${e}.`);return HE(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}OM.className="TruncatedNormal";Mt(OM);class zM extends Di{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return at(()=>{if(t.length!==2||t[0]!==t[1])throw new Z("Identity matrix initializer can only be used for 2D square matrices.");return K(this.gain,wE(t[0]))})}getConfig(){return{gain:this.gain}}}zM.className="Identity";Mt(zM);function CX(s,t="channelsLast"){let e,n;if(yn(t),s.length===2)e=s[0],n=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const i=Po(s,2);e=s[1]*i,n=s[0]*i}else if(t==="channelsLast"){const i=Po(s,0,s.length-2);e=s[s.length-2]*i,n=s[s.length-1]*i}}else{const i=Po(s);e=Math.sqrt(i),n=Math.sqrt(i)}return[e,n]}class Vs extends Di{constructor(t){if(super(),t.scale<0)throw new Z(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,_X(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,SX(this.distribution),this.seed=t.seed}apply(t,e){const n=CX(t),i=n[0],r=n[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,i):this.mode==="fanOut"?o/=Math.max(1,r):o/=Math.max(1,(i+r)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new me(`${this.getClassName()} does not support dType ${e}.`);return HE(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*o);return Lg(t,-a,a,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Vs.className="VarianceScaling";Mt(Vs);class xw extends Vs{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Vs.className}}xw.className="GlorotUniform";Mt(xw);class vw extends Vs{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Vs.className}}vw.className="GlorotNormal";Mt(vw);class bw extends Vs{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Vs.className}}bw.className="HeNormal";Mt(bw);class yw extends Vs{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Vs.className}}yw.className="HeUniform";Mt(yw);class ww extends Vs{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Vs.className}}ww.className="LeCunNormal";Mt(ww);class _w extends Vs{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Vs.className}}_w.className="LeCunNormal";Mt(_w);class BM extends Di{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new me("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return at(()=>{if(t.length<2)throw new me("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const n=t[0]>t[1]?[t[1],t[0]]:t,i=Ug(n,0,1,"float32");let r=Hq.gramSchmidt(i);return t[0]>t[1]&&(r=Ee(r)),K(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}BM.className="Orthogonal";Mt(BM);const vC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function bC(s,t={}){return Pd(s,xi.getMap().classNameMap,t,"initializer")}function ln(s){return fw(s)}function sn(s){if(typeof s=="string"){const t=s in vC?vC[s]:s;if(t==="GlorotNormal")return new vw;if(t==="GlorotUniform")return new xw;if(t==="HeNormal")return new bw;if(t==="HeUniform")return new yw;if(t==="LeCunNormal")return new ww;if(t==="LeCunUniform")return new _w;{const e={};return e.className=t,e.config={},bC(e)}}else return s instanceof Di?s:bC(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wv(s){return Array.isArray(s)&&Array.isArray(s[0])}function Up(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function de(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new Z(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Fe(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new Z(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vp(s){let t=0;for(const e of s)e.shape.length===0?t+=1:t+=e.shape.reduce((n,i)=>n*i);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yC="Variable";class TX{constructor(t,e="float32",n=yC,i=!0,r=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=EM(),n=n==null?yC:n,this.originalName=kM(n),this.name=AM(this.originalName),this.trainable_=i,this.constraint=r,this.val=S6(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),IX(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function IX(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function _v(s){return s.map(t=>t.read())}function Sw(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Cr{constructor(t,e,n,i,r,o,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=i,this.callArgs=r,this.outputTensorIndex=a,this.id=EM(),o!=null&&(this.originalName=kM(o),this.name=AM(this.originalName)),this.rank=e.length}}let EX=0;class Vg{constructor(t,e){this.callArgs=e,this.id=EX++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)n!=null&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let MX=0;class Ce extends nu{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=MX++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const n=this.getClassName();e=to(n)+"_"+Bg(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),n=[r].concat(t.inputShape)}this.batchInputShape=n;let i=t.dtype;i==null&&(i=t.inputDType),i==null&&(i="float32"),this.dtype=i}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new _i(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Z(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ys(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ys(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new br(`Layer ${this.name} is not connected, no input to return.`);return ys(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new br(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ys(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Ze(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=Ze(this.inputSpec);if(t.length!==e.length)throw new Z(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const i=t[n],r=e[n];if(r==null)continue;const o=i.rank;if(r.ndim!=null&&o!==r.ndim)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${o}`);if(r.maxNDim!=null&&o>r.maxNDim)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${o}`);if(r.minNDim!=null&&o<r.minNDim)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${o}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new Z(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const a=i.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(r.shape!=null)for(let a=0;a<r.shape.length;++a){const l=r.shape[a],c=i.shape[a];if(l!=null&&c!=null&&l!==c)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Ze(t);let i=!0;for(const o of n)if(!(o instanceof Cr)){i=!1;break}let r=!0;for(const o of n)if(o instanceof Cr){r=!1;break}if(i===r)throw new Z("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fa(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of Ze(t))o.push(a.shape);this.build(ys(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let o=this.call(t,e);const a=Ze(o),l=[];for(let c of a)n.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=ys(l),this.activityRegularizer!=null)throw new me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=kX(t),a=this.computeOutputShape(o);let l;const c=AX(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new Cr(c,u,this,Ze(t),e,this.name,h)):l=new Cr(c,a,this,Ze(t),e,this.name),this.addInboundNode(t,l,null,null,o,a,e),this._refCount++,this.activityRegularizer!=null)throw new me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,i)=>{n!=null&&t[i]!=null&&t[i]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new br(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new br(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new _i(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Vp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return _v(t?this.trainableWeights:this.weights)}setWeights(t){at(()=>{const e=this.weights;if(e.length!==t.length)throw new Z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const n=[],i=_v(e);for(let r=0;r<i.length;++r){const o=i[r],a=e[r],l=t[r];if(!Le(o.shape,l.shape))throw new Z(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);n.push([a,l])}Sw(n)})}addWeight(t,e,n,i,r,o,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new Z(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():sn("zeros"));const c=i.apply(e,n),u=new TX(c,n,t,o,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Ze(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,n,i,r,o,a=null){const l=Ze(t);e=Ze(e),n=Ze(n),i=Ze(i),r=Up(r),o=Up(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new Vg({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:n,outputMasks:i,inputShapes:r,outputShapes:o},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function kX(s){s=Ze(s);const t=[];for(const e of s)t.push(e.shape);return ys(t)}function AX(s){return"float32"}function UM(s,t,e){if((t==null||e!=null&&e>0)&&(t=s.sourceLayer,e=s.nodeIndex),t.inboundNodes.length===0)return[s];{const n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{const i=[];for(let r=0;r<n.inboundLayers.length;r++){const o=n.inputTensors[r],a=n.inboundLayers[r],l=n.nodeIndices[r],c=UM(o,a,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ud extends Ce{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Bg("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new Z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new Z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new Z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const i=new Cr(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new Vg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ud.className="InputLayer";Mt(Ud);function NX(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new Z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let e=s.dtype;return e==null&&(e="float32"),new Ud({batchInputShape:t,name:s.name,dtype:e,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function RX(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return Vt(t,s.dtype)}catch{throw new Z(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class ko{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ko)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=RX(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new Z(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Cr){if(this.id2Value[t.id]==null)throw new Z(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new Z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Cr){if(this.id2Value[t.id]==null)throw new Z(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new Z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&_e(this.id2Mask)}}const Wp=new CM,Gp=new CM;function DX(s){Wp!=null&&Wp.setMaxEntries(s),Gp!=null&&Gp.setMaxEntries(s)}function Ou(s,t,e,n){const i=e==null?!1:e.training,r=Array.isArray(s),o=r?s:[s],a=o.map(p=>p.name),l=[],c=t.names();for(const p of a)c.indexOf(p)!==-1?l.push(t.getValue(p)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let h=Wp.get(u),d;if(h==null){const p=$X(o,t);h=p.sorted,d=p.recipientCounts,Wp.put(u,h),Gp.put(u,d)}d={},i||Object.assign(d,Gp.get(u));const f=new ko(t);for(let p=0;p<h.length;++p){if(n!=null){const T=Lp().numTensors;T>n.maxNumTensors&&(n.maxNumTensors=T),T<n.minNumTensors&&(n.minNumTensors=T)}const g=h[p],m=g.sourceLayer;if(m instanceof Ud)continue;const x=[],v=[],y=[];let b=!1;for(const T of g.inputs){const I=f.getValue(T),A=f.getMask(T);x.push(I),v.push(A),A!=null&&(b=!0),i||(d[T.name]--,d[T.name]===0&&!t.hasKey(T)&&a.indexOf(T.name)===-1&&!I.isDisposed&&T.sourceLayer.stateful!==!0&&y.push(I))}b&&(e=e||{},e.mask=v[0]);const w=Ze(m.apply(x,e));let _=null;m.supportsMasking&&(_=m.computeMask(x,v));const C=FX(g),S=Array.isArray(C)?C:[C];for(let T=0;T<S.length;++T){f.hasKey(S[T])||f.add(S[T],w[T],Array.isArray(_)?_[0]:_);const I=a.indexOf(S[T].name);I!==-1&&(l[I]=w[T])}i||_e(y)}return f.disposeMasks(),r?l:l[0]}function $X(s,t){P(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(s.length===1){const i=wC(s[0],t);e=i.sorted,n=i.recipientMap}else{const i=new Set;for(const r of s){const{sorted:o,recipientMap:a}=wC(r,t);for(const l of o)i.has(l.name)||(e.push(l),i.add(l.name));for(const l in a)n[l]==null&&(n[l]=new Set),a[l].forEach(c=>n[l].add(c))}}return{sorted:e,recipientCounts:LX(n)}}function LX(s){const t={};for(const e in s)t[e]=s[e].size;return t}function wC(s,t){const e=new Set,n=[],i={};for(const a of t.names())e.add(a);const r=[],o=[];for(r.push(s);r.length>0;){const a=r[r.length-1];if(e.has(a.name)){r.pop();continue}const l=o[o.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),n.push(a),e.add(a.name),l&&o.pop();else{o.push(r.length-1);for(const c of a.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(a.name),!e.has(c.name)&&r.push(c)}}return{sorted:n,recipientMap:i}}function FX(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let e=null;for(let n=0;n<s.sourceLayer.inboundNodes.length;++n)for(const i of s.sourceLayer.inboundNodes[n].outputTensors)if(i.id===s.id){e=n;break}t=s.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX=dt();PX.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,DX);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cw(s,t){return at(()=>ds(te(K(s,s),t,!0)))}class Vd extends nu{getConfig(){return{}}}class VM extends Vd{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>{const e=Cw(t,this.axis),n=ti(e,0,this.maxValue);return K(t,ae(n,Nt(Mn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}VM.className="MaxNorm";Mt(VM);class WM extends Vd{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>ae(t,Nt(Mn(),Cw(t,this.axis))))}getConfig(){return{axis:this.axis}}}WM.className="UnitNorm";Mt(WM);class GM extends Vd{apply(t){return po(t)}}GM.className="NonNeg";Mt(GM);class HM extends Vd{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>{const e=Cw(t,this.axis),n=Nt(K(this.rate,ti(e,this.minValue,this.maxValue)),K(1-this.rate,e));return K(t,ae(n,Nt(Mn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}HM.className="MinMaxNorm";Mt(HM);const _C={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function An(s){return fw(s)}function SC(s,t={}){return Pd(s,xi.getMap().classNameMap,t,"constraint")}function Nn(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in _C?_C[s]:s,config:{}};return SC(e)}else return s instanceof Vd?s:SC(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ma(s){if(s==null)return;const t=[],e=[],n=[];for(const i in s){const r=s[i];if(typeof r!="number"){const o=r;t.push(o.data()),e.push(i),n.push(o)}}if(t.length>0){const i=await Promise.all(t);for(let r=0;r<i.length;++r)s[e[r]]=i[r][0];_e(n)}}function qM(s){if(s!=null)for(const t in s){const e=s[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var CC;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(CC||(CC={}));const OX=125;class mh{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class zX{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class BX extends mh{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const n=e.size==null?0:e.size;this.seen+=n;for(const i in e){const r=e[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*n;else{let o;i in this.totals?o=this.totals[i]:this.totals[i]=0;const a=at(()=>Nt(this.totals[i],K(r,n)));this.totals[i]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:at(()=>{const i=K(ae(1,this.seen),this.totals[n]);e[n]=i,this.totals[n].dispose(),Dr(e[n])}))}}class UX extends mh{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const o=this.history[r];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];t.push(l.data()),e.push(r),n.push(a)}}const i=await Promise.all(t);for(let r=0;r<i.length;++r)this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=i[r][0]}}class VX extends mh{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||ZE,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=OX),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Kx(this.yieldEvery)&&(this.maybeWait=sX(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const i=[];this.yield!=null&&(await ma(n),i.push(this.yield(t,e,n))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await ma(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];this.epochEnd!=null&&(await ma(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){this.batchBegin!=null&&(await ma(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];this.batchEnd!=null&&(await ma(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):Kx(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){this.trainBegin!=null&&(await ma(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await ma(t),await this.trainEnd(t))}}function jM(s,t){return s==null&&(s={}),s instanceof mh?[s]:Array.isArray(s)&&s[0]instanceof mh?s:Ze(s).map(n=>new VX(n,t))}class di{constructor(){}static registerCallbackConstructor(t,e){P(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),di.checkForDuplicate(e),di.constructors[t]==null&&(di.constructors[t]=[]),di.constructors[t].push(e)}static checkForDuplicate(t){for(const e in di.constructors)di.constructors[+e].forEach(i=>{if(i===t)throw new Z("Duplicate callback constructor.")})}static clear(){di.constructors={}}static createCallbacks(t){const e=[];for(const n in di.constructors){const i=+n;t>=i&&e.push(...di.constructors[i])}return e.map(n=>new n)}}di.constructors={};function XM(s,t,e,n,i,r,o,a,l){const c=new UX,u=[new BX,...di.createCallbacks(t)];s!=null&&u.push(...s),u.push(c);const h=new zX(u);return h.setParams({epochs:e,initialEpoch:n,samples:i,steps:r,batchSize:o,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oo(s,t={},e=!1){return Pd(s,xi.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hp(s,t){return at(()=>{s.dtype!=="float32"&&(s=Vt(s,"float32"));const e=te(zd(s),t,!0),n=Ad(e.shape,Mn()),i=ds(Jo(e,n));return ae(s,i)})}function Wg(s,t){return at(()=>gn(zd(ee(t,s)),-1))}function Tw(s,t){return at(()=>gn(Fn(ee(t,s)),-1))}function Iw(s,t){return at(()=>{const e=ee(s,t),n=ti(Fn(s),Mn(),Number.MAX_VALUE),i=Fn(ae(e,n));return K(100,gn(i,-1))})}function WX(s,t){return at(()=>{const e=ti(t,Mn(),Number.MAX_VALUE),n=Ii(Nt(1,e)),i=ti(s,Mn(),Number.MAX_VALUE),r=Ii(Nt(1,i));return gn(zd(ee(n,r)),-1)})}function GX(s,t){return at(()=>{const e=Jo(0,ee(1,K(s,t)));return gn(zd(e),-1)})}function HX(s,t){return at(()=>{const e=Jo(0,ee(1,K(s,t)));return gn(e,-1)})}function qX(s,t){return at(()=>{const e=te(K(s,t),-1),n=Yi(K(ee(1,s),t),-1);return Jo(0,Nt(1,ee(n,e)))})}function jX(s,t){return at(()=>{const e=Math.log(2),n=ee(t,s),i=ee(Nt(n,Nd(K(-2,n))),e);return gn(i,-1)})}function gh(s,t,e=!1){return at(()=>{if(e)t=Ny(t);else{const n=te(t,t.shape.length-1,!0);t=ae(t,n)}return t=ti(t,Mn(),1-Mn()),cn(te(K(Vt(s,"float32"),Ii(t)),t.shape.length-1))})}function qp(s,t,e=!1){return at(()=>{const n=Vt(Dg(mX(s)),"int32");t=ti(t,Mn(),1-Mn());const i=t.shape,r=et(eE(n,i[i.length-1]),i);return gh(r,t,e)})}function XX(s,t){if(!Le(s.shape,t.shape))throw new Z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return at(()=>{const e=po(t),n=cn(Fn(t));return Nt(ee(e,K(t,s)),wy(Ti(n)))})}function Gg(s,t){return at(()=>{let e;return e=ti(t,Mn(),1-Mn()),e=Ii(ae(e,ee(1,e))),gn(XX(s,e),-1)})}function KX(s,t){return at(()=>{const e=ti(s,Mn(),1),n=ti(t,Mn(),1);return te(K(s,Ii(ae(e,n))),-1)})}function YX(s,t){return at(()=>{const e=Ii(Nt(Mn(),t));return gn(ee(t,K(s,e)),-1)})}function KM(s,t){return at(()=>{const e=Hp(s,-1),n=Hp(t,-1),i=K(e,n);return cn(te(i,-1))})}const jp={meanSquaredError:Wg,meanAbsoluteError:Tw,meanAbsolutePercentageError:Iw,meanSquaredLogarithmicError:WX,squaredHinge:GX,hinge:HX,categoricalHinge:qX,logcosh:jX,categoricalCrossentropy:gh,sparseCategoricalCrossentropy:qp,binaryCrossentropy:Gg,kullbackLeiblerDivergence:KX,poisson:YX,cosineProximity:KM};function mx(s){if(typeof s=="string"){if(s in jp)return jp[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Z(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YM(s,t){return at(()=>{const e=K(.5,Ei(t)),n=bl(ri(t,e),s.dtype);return gn($r(s,n),-1)})}function ZM(s,t){return at(()=>bl($r(fh(s,-1),fh(t,-1)),"float32"))}function ZX(s,t){return at(()=>Vt(te(lo($r(s,1),$r(t,1))),"float32"))}function JX(s,t){return at(()=>Vt(te(lo($r(s,0),$r(t,1))),"float32"))}function QX(s,t){return at(()=>{const e=ZX(s,t),n=JX(s,t),i=Nt(e,n);return Vt(Us(ri(i,0),ae(e,i),0),"float32")})}function t7(s,t){return Gg(s,t)}function e7(s,t){return s.rank===t.rank&&(s=Rd(s,[s.rank-1])),t=fh(t,-1),t.dtype!==s.dtype&&(t=Vt(t,s.dtype)),Vt($r(s,t),"float32")}const n7=Wg,s7=Wg,i7=Tw,r7=Tw,o7=Iw,a7=Iw,JM=gh,l7=KM,QM=qp,Xp={binaryAccuracy:YM,categoricalAccuracy:ZM,precision:QX,categoricalCrossentropy:JM,sparseCategoricalCrossentropy:QM,mse:n7,MSE:s7,mae:i7,MAE:r7,mape:o7,MAPE:a7,cosine:l7};function c7(s){if(typeof s=="string"&&s in Xp)return Xp[s];if(typeof s!="string"&&s!=null)return s;throw new Z(`Unknown metric ${s}`)}function Yf(s){if(yr(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const e of Object.keys(jp))if(jp[e]===s){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(Xp))if(Xp[e]===s){t=e;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function u7(s){const t={Adagrad:()=>jl.adagrad(.01),Adadelta:()=>jl.adadelta(1,.95,Mn()),Adam:()=>jl.adam(.001,.9,.999,Mn()),Adamax:()=>jl.adamax(.002,.9,.999,Mn(),0),RMSProp:()=>jl.rmsprop(.001,.9,0,Mn()),SGD:()=>jl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new Z(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const TC=1*1024*1024;function IC(s,t,e=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!Sv(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const n=JSON.stringify(s);n.length>TC&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${TC}.`)}}function Sv(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const e of t)if(typeof e!="string"||!Sv(s[e]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!Sv(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h7(s,t,e,n=console.log){const i=f7(s),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let o;if(!i){r.push("Receives inputs"),o=[];for(const u in s.nodesByDepth)o.push(...s.nodesByDepth[u])}n("_".repeat(t)),Kp(r,e,n),n("=".repeat(t));const a=s.layers;for(let u=0;u<a.length;++u)i?p7(a[u],e,n):m7(a[u],e,o,n),n((u===a.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const l=d7(s),c=Vp(s.nonTrainableWeights);n(`Total params: ${l+c}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${c}`),n("_".repeat(t))}function d7(s){let t;return s.collectedTrainableWeights!=null?t=Vp(s.collectedTrainableWeights):t=Vp(s.trainableWeights),t}function f7(s){let t=!0;const e=[],n=[];for(const i in s.nodesByDepth)e.push(s.nodesByDepth[i]);for(const i of e){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){t=!1;break}n.push(...i)}if(t)for(const i of s.layers){let r=!1;for(const o of i.inboundNodes)if(n.indexOf(o)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function Kp(s,t,e=console.log){let n="";for(let i=0;i<s.length;++i)i>0&&(n=n.slice(0,n.length-1)+" "),n+=s[i],n=n.slice(0,t[i]),n+=" ".repeat(t[i]-n.length);e(n)}function p7(s,t,e){let n,i;try{i=s.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{n=JSON.stringify(s.outputShape)}catch{n="multiple"}const r=s.name,o=s.getClassName(),a=[`${r} (${o})`,i,n,s.countParams().toString()];Kp(a,t,e)}function m7(s,t,e,n){let i,r;try{r=s.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(s.outputShape)}catch{i="multiple"}const o=[];for(const h of s.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],g=h.tensorIndices[d];o.push(`${f}[${p}][${g}]`)}const a=s.name,l=s.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,r,i,s.countParams().toString(),c];Kp(u,t,n);for(let h=1;h<o.length;++h)Kp(["","","","",o[h]],t,n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tk(s,t,e){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof e=="string"}function Cv(s,t){if(s===null)return null;if(typeof s=="string")return _a(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];tk(t,i,r)?e.push(r):e.push(Cv(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n];if(n==="name"&&typeof i=="string")e[n]=i;else{const r=_a(n);e[r]=Cv(i,r)}}return e}}function Tv(s,t){if(s==null)return null;if(typeof s=="string")return to(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];tk(t,i,r)?e.push(r):e.push(Tv(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n],r=to(n);(n==="name"||n==="className")&&typeof i=="string"?e[r]=i:e[r]=Tv(i,n)}return e}}/** @license See the LICENSE file. */const ek="4.0.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ui extends Ce{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const v=this.getClassName().toLowerCase();this.name=Bg(v)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Fo(this.inputs).length!==this.inputs.length)throw new Z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(v=>v.name)}`);Fo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(v=>v.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const v of this.outputs){const y=v.sourceLayer,b=v.nodeIndex,w=v.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(w)}for(const v of this.inputs){const y=v.sourceLayer,b=v.nodeIndex,w=v.tensorIndex;yr(b===0,"input layer has >1 nodes"),yr(w===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let v=0;v<this.inputLayers.length;v++){const y=this.inputLayers[v];if(!(y instanceof Ud))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${v} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(const v of this.outputLayers)this.outputNames.push(v.name);this.internalInputShapes=this.inputs.map(v=>v.shape),this.internalOutputShapes=this.outputs.map(v=>v.shape);const e={},n={},i={},r={},o={},a=[],l=(v,y,b,w,_,C)=>{(w==null||_==null||C==null)&&(w=v.sourceLayer,_=v.nodeIndex,C=v.tensorIndex);const S=w.inboundNodes[_];if(b.indexOf(S)!==-1)throw new _i(`The tensor ${v.name} at layer "${w.name}" is part of a cycle.`);if(y.indexOf(S)!==-1)return;this.containerNodes.add(Ui.nodeKey(w,_)),w.id in o||(o[w.id]=Object.keys(o).length),b.indexOf(S)===-1&&b.push(S);const T=S.inboundLayers.length;for(let I=0;I<T;I++){const A=S.inputTensors[I],D=S.inboundLayers[I],M=S.nodeIndices[I],E=S.tensorIndices[I];l(A,y,b,D,M,E)}for(y.push(S);b.indexOf(S)>=0;)b.splice(b.indexOf(S),1);a.push(S)},c=[],u=[];for(const v of this.outputs)l(v,c,u);const h=a.slice().reverse();for(const v of h){n[v.id]=v,v.id in e||(e[v.id]=0);let y=e[v.id];const b=i[v.outboundLayer.id]==null?0:i[v.outboundLayer.id];y=Math.max(y,b),i[v.outboundLayer.id]=y,r[v.outboundLayer.id]=v.outboundLayer,e[v.id]=y;for(let w=0;w<v.inboundLayers.length;w++){const _=v.inboundLayers[w],C=v.nodeIndices[w],S=_.inboundNodes[C],T=e[S.id]==null?0:e[S.id];e[S.id]=Math.max(y+1,T),n[S.id]=S}}const d={};for(const v in e){const y=e[v];y in d||(d[y]=[]),d[y].push(n[v])}const f={};for(const v in i){const y=i[v];y in f||(f[y]=[]),f[y].push(r[v])}let p=Object.keys(f).map(v=>parseInt(v,10)).sort(jf);this.layers=[];for(const v of p){const y=f[v];y.sort((b,w)=>{const _=o[b.id],C=o[w.id];return _<C?-1:_>C?1:0});for(const b of y)b instanceof Ui&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=f,p=Object.keys(d).map(v=>parseInt(v,10)).sort(jf);const g=this.inputs.slice(),m=[];for(const v of p)for(const y of d[v]){const b=y.outboundLayer;if(b!=null){for(const w of y.inputTensors)if(g.indexOf(w)===-1)throw new _i(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${b.name}". The following previous layers were accessed without issue: ${m}`);for(const w of y.outputTensors)g.push(w);m.push(b.name)}}this.nodesByDepth=d;const x=this.layers.map(v=>v.name);for(const v of x){const y=x.filter(b=>b===v).length;if(y!==1)throw new _i(`The name "${v}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Vg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(v=>null),outputMasks:this.outputs.map(v=>null),inputShapes:this.inputs.map(v=>v.shape),outputShapes:this.outputs.map(v=>v.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let i=0;for(const o of this.layers)for(const a of o.weights){if(n[a.originalName]!=null)throw new Z(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,i++}const r=[];for(const o in t){let a=o;if(n[o]==null){const l=o.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[a]!=null)r.push([n[a],t[o]]);else if(e)throw new Z(`Provided weight data has no target variable: ${o}`);delete n[a]}if(e){const o=[];for(const a in n)o.push(a);if(o.length>0)throw new Z(`${o.length} of ${i} weights are not set: ${o}`)}Sw(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${ek}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Tv(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return at(()=>{t=Ze(t);const n=new ko;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],t[i]);return Ou(this.outputs,n,e)})}computeMask(t,e){return at(()=>{t=Ze(t);let n;return e==null?n=sl(null,t.length):n=Ze(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Up(t);if(e.length!==this.inputLayers.length)throw new Z(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";n[u]=c}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(jf);if(i.length>1)for(const a of i){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const m=c.inboundLayers[g],x=c.nodeIndices[g],v=c.tensorIndices[g],y=`${m.name}_${x}_${v}`,b=n[y];h.push(b)}const d=u.computeOutputShape(ys(h)),f=Up(d),p=u.inboundNodes.indexOf(c);for(let g=0;g<f.length;g++){const m=`${u.name}_${p}_${g}`;n[m]=f[g]}}}const r=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];yr(l in n),r.push(n[l])}return ys(r)}runInternalGraph(t,e){e==null&&(e=sl(null,t.length));const n={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];n[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(jf);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const g of d)g.id in n&&p.push(n[g.id]);if(p.length===d.length){let g={},m,x,v,y;if(u.callArgs!=null&&(g=u.callArgs),p.length===1){const[b,w]=p[0];g.mask==null&&(g.mask=w),v=Ze(h.call(b,g)),y=Ze(h.computeMask(b,w)),m=[b],x=[w]}else m=p.map(b=>b[0]),x=p.map(b=>b[1]),g.mask==null&&(g.mask=x),v=Ze(h.call(m,g)),y=Ze(h.computeMask(m,x));if(h.activityRegularizer)throw new me("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<f.length;++b){const w=f[b],_=v[b],C=y[b];n[w.id]=[_,C]}}}}const r=[],o=[],a=[];for(const l of this.outputs){yr(l.id in n,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=n[l.id];a.push(c.shape),r.push(c),o.push(u)}return[r,o,a]}buildNodeConversionMap(t){const e={};let n;for(const i of this.layers){n=i instanceof Ui?1:0;for(let r=0;r<i.inboundNodes.length;r++){const o=Ui.nodeKey(i,r);this.containerNodes.has(o)&&(e[o]=n,n+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new Z(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new Z("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new Z(`No such layer: ${t}`)}calculateLosses(){return at(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const i=Ui.nodeKey(e,n);this.containerNodes.has(i)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],f=Ui.nodeKey(o,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const x=d.inboundLayers[m],v=d.nodeIndices[m],y=d.tensorIndices[m],b=Ui.nodeKey(x,v);let w=e[b];w==null&&(w=0),g.push([x.name,w,y,p])}c.push(g)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,n.push(u)}t.layers=n;const i=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=Ui.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];i.push([a.name,u,h])}t.inputLayers=i;const r=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=Ui.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];r.push([a.name,u,h])}return t.outputLayers=r,t}static fromConfig(t,e,n={},i=!1){const r={},o={};function a(m,x){m.name in o?o[m.name].push(x):o[m.name]=[x]}function l(m,x){const v=[];let y;for(const b of x){const w=b[0],_=b[1],C=b[2];if(y=b[3]==null?{}:b[3],!(w in r)){a(m,x);return}const S=r[w];if(S.inboundNodes.length<=_){a(m,x);return}const T=S.inboundNodes[_];v.push(T.outputTensors[C])}v.length>0&&m.apply(ys(v),y)}function c(m){const x=m.name,v=oo(m,e.customObjects!=null?e.customObjects:{});v.setFastWeightInitDuringBuild(i),r[x]=v,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new Z(`Corrupted configuration, expected array for nodeData: ${b}`);a(v,b)})}const u=e.name,h=e.layers;for(const m of h)c(m);for(;!nX(o);)for(const m of h){const x=r[m.name];if(x.name in o){const v=o[x.name];delete o[x.name];for(const y of v)l(x,y)}}const d=[],f=[],p=e.inputLayers;for(const m of p){const x=m[0],v=m[1],y=m[2];yr(x in r);const w=r[x].inboundNodes[v].outputTensors;d.push(w[y])}const g=e.outputLayers;for(const m of g){const x=m[0],v=m[1],y=m[2];yr(x in r);const w=r[x].inboundNodes[v].outputTensors;f.push(w[y])}return new t({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new Z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){at(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g7(s,t,e){const n=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(i=>null);if(n===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==n)throw new Error(`Provided ${e} is an array of ${s.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const i=[];return t.forEach(r=>{r in s?i.push(s[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(s)}`)}function nk(s,t){return g7(s,t,"classWeight")}async function sk(s,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const i=at(()=>{if(s.shape.length===1)return $a(s);if(s.shape.length===2){if(s.shape[1]>1)return fh(s,1);if(s.shape[1]===1)return et(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());_e(i);const o=[];return r.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(e[a])}),Ls(o,"float32")}else return null}function x7(s,t){return K(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const v7=32;function ik(s,t){let e,n;const i=t;e=i.xs,n=i.ys,P(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=EC("input",s.inputNames,e),o=EC("output",s.outputNames,n),a=r[0].shape[0];P(r.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),P(o.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let l=0;l<r.length;l++)P(r[l].shape[0]===a,()=>`Batch size mismatch: input ${s.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);for(let l=0;l<o.length;l++)P(o[l].shape[0]===a,()=>`Batch size mismatch: output ${s.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);return{xs:r,ys:o}}function EC(s,t,e){if(e instanceof _n)return[e];if(Array.isArray(e))return P(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),e;{const n=[];for(const i of t){if(e[i]==null)throw new Z(`The feature data generated by the dataset lacks the required ${s} key '${i}'.`);n.push(e[i])}return n}}function b7(s){if(s.length===3)throw new me("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function y7(s,t,e){const n=e.batchesPerEpoch!=null;if(P(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),P(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),P(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),P(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),P(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const i=e.validationData!=null;let r,o;if(i)if(MC(e.validationData))P(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=b7(e.validationData);r=m.xs,o=m.ys}const a=s.makeTrainFunction(),l=s.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(m=>"val_"+m)):c=l.slice();const u=jM(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:f}=XM(u,h,e.epochs,null,null,w7(t,e),null,i,c);d.setModel(s),s.history=f,await d.onTrainBegin(),s.stopTraining_=!1;let p=e.initialEpoch==null?0:e.initialEpoch,g=await t.iterator();for(;p<e.epochs;){const m={};await d.onEpochBegin(p);let x=0,v=0;for(n||(g=await t.iterator());!n||x<e.batchesPerEpoch;){const y=await g.next();if(n&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){const{xs:b,ys:w}=ik(s,y.value),_={};_.batch=v,_.size=b[0].shape[0],await d.onBatchBegin(v,_);const C=[];if(e.classWeight!=null){const I=nk(e.classWeight,s.outputNames);for(let A=0;A<I.length;++A)C.push(await sk(w[A],null,I[A]))}const S=b.concat(w).concat(C),T=a(S);_e(S);for(let I=0;I<l.length;++I){const A=l[I],D=T[I];_[A]=D,Dr(D)}await d.onBatchEnd(v,_),qM(_),v++,x++}if(n?x>=e.batchesPerEpoch:y.done){if(i){let b;MC(e.validationData)?b=Ze(await s.evaluateDataset(e.validationData,{batches:e.validationBatches})):b=Ze(s.evaluate(r,o,{batchSize:e.validationBatchSize==null?v7:e.validationBatchSize,verbose:0}));for(let w=0;w<s.metricsNames.length;++w)m[`val_${s.metricsNames[w]}`]=b[w]}break}if(s.stopTraining_)break}if(await d.onEpochEnd(p,m),p++,s.stopTraining_)break}return await d.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function w7(s,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(s.size)&&(e=s.size),e}function MC(s){return typeof s.iterator=="function"}function _7(s){return typeof s.next=="function"}async function S7(s,t,e){e=e||{};const n=e.batches!=null,i=s.testFunction;let r=[];if(e.verbose>0)throw new me("Verbose mode is not implemented yet.");P(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=_7(t)?t:await t.iterator();let a=0,l=0;for(;!n||l<e.batches;){const c=await o.next();if(r=at(()=>{if(c.value){const{xs:u,ys:h}=ik(s,c.value),d=u.concat(h),f=at(()=>i(d));if(_e(d),l===0)for(let g=0;g<f.length;++g)r.push(he(0));const p=d[0].shape[0];for(let g=0;g<f.length;++g){const m=f[g],x=r[g];r[g]=at(()=>Nt(r[g],K(p,m))),l>0&&_e(x)}_e(f),a+=p,++l}return r}),c.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=ae(r[c],a),_e(u)}return ys(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Iv(s){P(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function zu(s,t,e){return s==null?[null]:Array.isArray(s)?s.map(n=>Pa(n,t,e-t)):Pa(s,t,e-t)}function Ew(s,t){return at(()=>s==null?null:Array.isArray(s)?s.map(e=>Ew(e,t)):RM(s,t.dtype==="int32"?t:Vt(t,"int32")))}function Ev(s,t){const e=[];let n=0,i=null;for(;n<s;)i=n+t,i>=s&&(i=s),e.push([n,i]),n=i;return e}async function C7(s,t,e,n,i,r,o,a,l,c,u,h,d,f,p){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),p!=null&&(g=!0,f==null))throw new Z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=s.checkNumSamples(e,i,f,"steps_per_epoch");let x;m!=null&&(x=er(0,m)),o==null&&(o=1);const{callbackList:v,history:y}=XM(a,o,r,d,m,f,i,g,h);v.setModel(s),s.history=y,await v.onTrainBegin(),s.stopTraining_=!1;for(let b=d;b<r;++b){await v.onEpochBegin(b);const w={};if(f!=null)throw new me("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new me("batch shuffling is not implemneted yet");u&&JU(x);const _=Ls(x),C=Ev(m,i);for(let S=0;S<C.length;++S){const T={};if(await v.onBatchBegin(S,T),at(()=>{const I=C[S][0],A=C[S][1],D=Pa(_,I,A-I);T.batch=S,T.size=A-I;const M=Ew(e,D),E=t(M);for(let k=0;k<n.length;++k){const N=n[k],z=E[k];T[N]=z,Dr(z)}if(S===C.length-1&&g){const k=s.testLoop(l,c,i);for(let N=0;N<n.length;++N){const z=n[N],L=k[N];Dr(L),w["val_"+z]=L}}}),await v.onBatchEnd(S,T),qM(T),s.stopTraining_)break}_.dispose()}if(await v.onEpochEnd(b,w),s.stopTraining_)break}return await v.onTrainEnd(),await s.history.syncData(),s.history}async function T7(s,t,e,n={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let i,r,o,a,l,c,u,h,d;try{const f=n.batchSize==null?32:n.batchSize;Iv(f);const p=!1,g=await s.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,f);i=g[0],r=g[1],d=g[2];let m=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)l=n.validationData[0],c=n.validationData[1];else throw n.validationData.length===3?new me("validationData including sample weights is not supported yet."):new Z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);const T=!0,I=await s.standardizeUserData(l,c,null,null,T,f);u=I[0],h=I[1],x=u.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;const T=Math.floor(i[0].shape[0]*(1-n.validationSplit)),I=i[0].shape[0];u=zu(i,T,I),o=i,i=zu(i,0,T),h=zu(r,T,I),a=r,r=zu(r,0,T),x=u.concat(h)}else n.validationSteps!=null&&(m=!0);const v=i.concat(r).concat(d);s.checkTrainableWeightsConsistency();const y=s.makeTrainFunction(),b=s.getDedupedMetricsNames();let w,_;m?(s.makeTestFunction(),w=s.testFunction,_=b.slice().concat(b.map(T=>"val_"+T))):(w=null,x=[],_=b.slice());const C=jM(n.callbacks,n.yieldEvery);return await C7(s,y,v,b,f,n.epochs,n.verbose,C,w,x,n.shuffle,_,n.initialEpoch,null,null)}finally{s.isTraining=!1,Gi(i,t),Gi(r,e),Gi(o,t),Gi(a,e),Gi(u,l),Gi(h,c),d!=null&&_e(d)}}function rk(s){const t=[];s instanceof _n&&(s=[s]);for(let e=0;e<s.length;++e){const n=s[e];if(n.rank===1)t.push(Od(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Gi(s,t){if(s==null)return;const e=[];if(t instanceof _n)e.push(t.id);else if(Array.isArray(t))t.forEach(i=>e.push(i.id));else if(t!=null)for(const i in t){const r=t[i];e.push(r.id)}const n=[];if(s instanceof _n)e.indexOf(s.id)===-1&&n.push(s);else if(Array.isArray(s))s.forEach(i=>{e.indexOf(i.id)===-1&&n.push(i)});else if(s!=null)for(const i in s){const r=s[i];e.indexOf(r.id)===-1&&n.push(r)}n.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function I7(s){return s instanceof _n}function Mv(s){return Array.isArray(s)}function kC(s){return!I7(s)&&!Mv(s)}function AC(s,t,e,n=!0,i=""){if(t==null||t.length===0){if(s!=null){let o=!1;if(Mv(s)&&s.length>0)o=!0;else if(kC(s)){for(const a in s)if(s.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new Z(`Error when checking model ${i} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(o=>null);let r;if(kC(s)){s=s,r=[];for(const o of t){if(s[o]==null)throw new Z(`No data provided for "${o}". Need data for each key in: ${t}`);r.push(s[o])}}else if(Mv(s)){if(s=s,s.length!==t.length)throw new Z(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);r=s}else{if(s=s,t.length>1)throw new Z(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);r=[s]}if(r=rk(r),e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new Z(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u>=0&&c!==u)throw new Z(`${i} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function E7(s,t,e){const n=Fo(s.map(r=>r.shape[0]));n.sort();const i=Fo(t.map(r=>r.shape[0]));if(i.sort(),n.length>1)throw new Z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(r=>r.shape))}`);if(i.length>1)throw new Z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(n.length>0&&i.length>0&&!Le(n,i))throw new Z(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${i[0]} target sample(s).`)}function M7(s,t,e){const n=[Wg,Gg,gh];for(let i=0;i<s.length;++i){const r=s[i],o=t[i],a=e[i];if(o!=null){if(o===gh&&r.shape[r.shape.length-1]===1)throw new Z(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(o)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new Z(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function NC(s,t,e,n=!0,i=""){let r;if(Array.isArray(s)){if(s.length!==t.length)throw new Z(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);r=s}else{if(t.length>1)throw new Z(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);r=[s]}if(e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new Z(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u!==c)throw new Z(`Error when checking ${i}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function k7(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(n=>[]);let e;if(typeof s=="string"||typeof s=="function")e=[s];else if(Array.isArray(s)||typeof s=="object")e=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(e))return t.map(n=>e);{const n=[];for(const i of t){let r=e.hasOwnProperty(i)?e[i]:[];Array.isArray(r)||(r=[r]),n.push(r)}return n}}const A7="layers-model";class vc extends Ui{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");h7(this,t,e,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=u7(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ea))throw new Z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new Z(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),e.push(mx(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>mx(a))}else{const o=mx(t.loss);this.outputs.forEach(a=>{e.push(o)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fa("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const i=k7(t.metrics,this.outputNames),r=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};Fa("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=i[o];(c=>{const u="";let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===Gg?["accuracy","acc"].indexOf(p)!==-1?d=YM:["crossentropy","ce"].indexOf(p)!==-1&&(d=t7):this.lossFunctions[o]===qp?["accuracy","acc"].indexOf(p)!==-1?d=e7:["crossentropy","ce"].indexOf(p)!==-1&&(d=QM):["accuracy","acc"].indexOf(p)!==-1?d=ZM:["crossentropy","ce"].indexOf(p)!==-1&&(d=JM);let x;["accuracy","acc"].indexOf(p)!==-1?x="acc":["crossentropy","ce"].indexOf(p)!==-1&&(x="ce"),f=d,h=u+x}else f=c7(p),h=u+Yf(p);let g;Fa(h,()=>{g=f}),r(o,h,g)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const i=n.batchSize==null?32:n.batchSize;Iv(i);const r=!0,o=this.standardizeUserDataXY(t,e,r,i);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,i,n.verbose,n.steps);return ys(c)}finally{Gi(o[0],t),Gi(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),S7(this,t,e)}checkNumSamples(t,e,n,i="steps"){let r;if(n!=null){if(r=null,e!=null)throw new Z(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new Z(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new Z("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),i=n?e:[e],r=this.retrieveSymbolicTensors(i),o=new ko;if(t instanceof _n&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Z(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new Z(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=Ou(r,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=sl(null,t.length);let n=t.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],o=r.map(a=>a.name);for(let a=0;a<t.length;++a){const l=o.indexOf(t[a]);if(l!==-1&&(e[a]=r[l],n--),n===0)break}if(n===0)break}if(n>0){const i=[];throw e.forEach((r,o)=>{r==null&&i.push(t[o])}),new Z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return e}predictLoop(t,e=32,n=!1){return at(()=>{const i=this.checkNumSamples(t);if(n)throw new me("Verbose predictLoop() is not implemented yet.");const r=Ev(i,e),o=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)at(()=>{const c=r[a][0],u=r[a][1],h=zu(t,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new ko(d);return Ou(this.outputs,f)}).forEach((c,u)=>o[u].push(c));return ys(o.map(a=>is(a,0)))})}predict(t,e={}){const n=rk(t);NC(n,this.inputNames,this.feedInputShapes,!1);try{const i=e.batchSize==null?32:e.batchSize;return Iv(i),this.predictLoop(n,i)}finally{Gi(n,t)}}predictOnBatch(t){NC(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,i){if(this.optimizer_==null)throw new _i("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===qp?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(t=AC(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=AC(e,this.feedOutputNames,r,!1,"target"),E7(t,e),M7(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&t[0].shape[0]%i!==0)throw new Z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,i,r=!0,o){const[a,l]=this.standardizeUserDataXY(t,e,r,o);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=nk(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await sk(l[h],null,u[h]))}return[a,l,c]}testLoop(t,e,n,i=0,r){return at(()=>{const o=this.checkNumSamples(e,n,r,"steps"),a=[];if(i>0)throw new me("Verbose mode is not implemented yet.");if(r!=null)throw new me("steps mode in testLoop() is not implemented yet");{const l=Ev(o,n),c=Ls(er(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=Pa(c,h,d-h),p=Ew(e,f),g=t(p);if(u===0)for(let m=0;m<g.length;++m)a.push(he(0));for(let m=0;m<g.length;++m){const x=g[m];a[m]=Nt(a[m],K(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=ae(a[u],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const i=t[n];let r=i;if(mC(t,i)>1){const o=mC(t.slice(0,n),i);r+=`_${o}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:n[g]});const d=new ko(h),f=Ou(this.outputs,d,{training:!0});let p;for(let g=0;g<this.lossFunctions.length;++g){const m=this.lossFunctions[g];let x=m(i[g],f[g]);r[g]!=null&&(x=x7(x,r[g]));const v=gn(x);e.push(v),g===0?p=x:p=Nt(p,x)}for(let g=0;g<this.metricsTensors.length;++g){let m;if(this.outputs.length>1&&g<this.outputs.length)m=e[g];else{const x=this.metricsTensors[g][0],v=this.metricsTensors[g][1];m=gn(x(i[v],f[v]))}Dr(m),o.push(m)}return p=gn(p),this.calculateLosses().forEach(g=>{p=Nt(p,g)}),p},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(o)}}makeTestFunction(){this.testFunction=t=>at(()=>{const e=[];let n;const i=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:i[c]});const a=new ko(o),l=Ou(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=gn(u(r[c],l[c]));c===0?n=h:n=Nt(n,h),e.push(n)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=gn(u(r[h],l[h]));e.push(d)}return e})}async fit(t,e,n={}){return T7(this,t,e,n)}async fitDataset(t,e){return y7(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),i=n[0],r=n[1],a=this.makeTrainFunction()(i.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return _e(a),Gi(n[0],t),Gi(n[1],e),ys(l)}getNamedWeights(t){const e=[],n=t!=null&&t.trainableOnly,i=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<i.length;++o)n&&!i[o].trainable||e.push({name:i[o].originalName,tensor:r[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Lp().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Lp().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=to(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>to(e))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const i of e)if(typeof n[i]=="string")t[i]=to(n[i]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[to(Yf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>to(Yf(t)));{const t={};for(const e in this.metrics)t[e]=to(Yf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Cv(t.optimizer_config),n=oo(e);let i;if(typeof t.loss=="string")i=_a(t.loss);else if(Array.isArray(t.loss))i=t.loss.map(o=>_a(o));else if(t.loss!=null){i={};for(const o in t.loss)i[o]=_a(t.loss[o])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(o=>_a(o));else if(t.metrics!=null){r={};for(const o in t.metrics)r[o]=_a(t.metrics[o])}this.compile({loss:i,metrics:r,optimizer:n})}async save(t,e){if(typeof t=="string"){const c=HV(t);if(c.length===0)throw new Z(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new Z(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new Z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await YS(this.getNamedWeights(e)),i=!1,r=null,a={modelTopology:this.toJSON(r,i),format:A7,generatedBy:`TensorFlow.js tfjs-layers v${ek}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await YS(await this.optimizer.getWeights(),c);n.specs.push(...h),n.data=qI([n.data,u])}return this.userDefinedMetadata!=null&&(IC(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){IC(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}vc.className="Model";Mt(vc);class ok extends vc{}ok.className="Functional";Mt(ok);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Oc extends vc{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Bg("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new Z(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Oc||t instanceof vc;let n;if(e){if(n=t,n.outputs.length!==1)throw new Z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new Z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new Z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=NX({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new Z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new Z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=UM(this.outputs[0])}this.inboundNodes=[],new Vg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:sl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=t.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Fe(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new vc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new _i("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new _i("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new _i("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new _i("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},i=!1){let r,o={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new Z("Legacy serialization format not supported yet.");r=e}else P(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof Oc))throw new me(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=oo(l,void 0,i);i&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new Z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new Z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Oc.className="Sequential";Mt(Oc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ak(s){return new Oc(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Es extends nu{getConfig(){return{}}}class lk extends Es{apply(t,e=1){return xX(t,e)}}lk.className="elu";Mt(lk);class ck extends Es{apply(t){return PE(t)}}ck.className="selu";Mt(ck);class uk extends Es{apply(t){return po(t)}}uk.className="relu";Mt(uk);class hk extends Es{apply(t){return at(()=>$g(6,po(t)))}}hk.className="relu6";Mt(hk);class dk extends Es{apply(t){return t}}dk.className="linear";Mt(dk);class fk extends Es{apply(t){return su(t)}}fk.className="sigmoid";Mt(fk);class pk extends Es{apply(t){return bX(t)}}pk.className="hardSigmoid";Mt(pk);class mk extends Es{apply(t){return Nd(t)}}mk.className="softplus";Mt(mk);class gk extends Es{apply(t){return vX(t)}}gk.className="softsign";Mt(gk);class xk extends Es{apply(t){return fy(t)}}xk.className="tanh";Mt(xk);class Mw extends Es{apply(t,e=-1){return Ny(t,e)}}Mw.className="softmax";Mt(Mw);class vk extends Es{apply(t,e=-1){return SE(t,e)}}vk.className="logSoftmax";Mt(vk);class bk extends Es{apply(t,e=1){return at(()=>K(su(K(t,e)),t))}}bk.className="swish";Mt(bk);class yk extends Es{apply(t){return at(()=>K(t,fy(Nd(t))))}}yk.className="mish";Mt(yk);function Uo(s){return s.getClassName()}function gx(s,t={}){return Pd(s,xi.getMap().classNameMap,t,"activation")}function Vo(s){if(s==null){const t={};return t.className="linear",t.config={},gx(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},gx(t)}else return s instanceof Es?s:gx(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N7(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class wk extends nu{}class _k extends wk{constructor(t){super(),N7(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return at(()=>{let e=On([1]);return this.hasL1&&(e=Nt(e,te(K(this.l1,Fn(t))))),this.hasL2&&(e=Nt(e,te(K(this.l2,zd(t))))),et(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}_k.className="L1L2";Mt(_k);const RC={l1l2:"L1L2"};function He(s){return fw(s)}function DC(s,t={}){return Pd(s,xi.getMap().classNameMap,t,"regularizer")}function rn(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in RC?RC[s]:s,config:{}};return DC(e)}else return s instanceof wk?s:DC(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sk extends Ce{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=de(t);let n=po(t);return this.maxValue!=null&&(n=ti(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Sk.className="ReLU";Mt(Sk);class Ck extends Ce{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=de(t);return yy(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ck.className="LeakyReLU";Mt(Ck);class Tk extends Ce{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=sn(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=rn(t.alphaRegularizer),this.alphaConstraint=Nn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new Z(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Fe(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(this.sharedAxes!=null)for(let i=1;i<t.length;++i)n[i]=t[i];this.inputSpec=[new kn({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=de(t),Ey(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ln(this.alphaInitializer),alphaRegularizer:He(this.alphaRegularizer),alphaConstraint:An(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Tk.className="PReLU";Mt(Tk);class Ik extends Ce{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new me(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=de(t);return Ng(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ik.className="ELU";Mt(Ik);class Ek extends Ce{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const n=de(t);return K(n,Vt(ri(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Ek.className="ThresholdedReLU";Mt(Ek);class Mk extends Ce{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Mw().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const n=de(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Mk.className="Softmax";Mt(Mk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bc(s,t,e){if(typeof s=="number")return sl(s,t);if(s.length!==t)throw new Z(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let n=0;n<t;++n){const i=s[n];if(!fX(i))throw new Z(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${i}`)}return s}function Zi(s,t,e,n,i=1){if(s==null)return s;const r=t+(t-1)*(i-1);let o;return e==="same"?o=s:o=s-r+1,Math.floor((o+n-1)/n)}function wr(s,t,e,n){if(s==null)return null;if(n==="valid")s=s*t+Bo([e-t,0]);else if(n==="same")s=s*t;else throw new Z(`Unsupport padding mode: ${n}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kw(s,t){return at(()=>(yn(t),t==="channelsFirst"?Ee(s,[0,2,3,1]):s))}function kk(s,t){return at(()=>(yn(t),t==="channelsFirst"?Ee(s,[0,2,3,4,1]):s))}function R7(s,t,e,n=1,i="valid",r,o=1){return at(()=>{if(r==null&&(r=nr()),yn(r),s.shape.length!==3)throw new Z(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new Z(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new Z(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(s=Ee(s,[0,2,1])),i==="causal")throw new me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=pE(s,t,n,i==="same"?"same":"valid","NWC",o);return e!=null&&(a=ar(a,e)),a})}function $C(s,t,e,n=[1,1],i="valid",r,o,a=null){return at(()=>{if(r==null&&(r=nr()),yn(r),s.rank!==3&&s.rank!==4)throw new Z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new Z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let l=kw(s,r);if(i==="causal")throw new me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=A6({x:l,filter:t,strides:n,pad:i==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:a}),r==="channelsFirst"&&(l=Ee(l,[0,3,1,2])),l})}function D7(s,t,e,n=[1,1,1],i="valid",r,o){return at(()=>{if(r==null&&(r=nr()),yn(r),s.rank!==4&&s.rank!==5)throw new Z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new Z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let a=kk(s,r);if(i==="causal")throw new me("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=GG(a,t,n,i==="same"?"same":"valid","NDHWC",o),e!=null&&(a=ar(a,e)),r==="channelsFirst"&&(a=Ee(a,[0,4,1,2,3])),a})}class Hg extends Ce{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hg.verifyArgs(e),this.rank=t,zn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new me(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=bc(e.kernelSize,t,"kernelSize"),this.strides=bc(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,oi(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,yn(this.dataFormat),this.activation=Vo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=sn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Nn(e.biasConstraint),this.biasRegularizer=rn(e.biasRegularizer),this.activityRegularizer=rn(e.activityRegularizer),this.dilationRate=bc(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new Z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new Z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new Z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(yr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!pw(t.kernelSize,"number",1,3))throw new Z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Uo(this.activation),useBias:this.useBias,biasInitializer:ln(this.biasInitializer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),biasConstraint:An(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class ou extends Hg{constructor(t,e){super(t,e),this.kernel=null,ou.verifyArgs(e),this.filters=e.filters,zn(this.filters,"filters"),this.kernelInitializer=sn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Nn(e.kernelConstraint),this.kernelRegularizer=rn(e.kernelRegularizer)}build(t){t=Fe(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Z(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],i=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return at(()=>{t=de(t);let n;const i=this.bias==null?null:this.bias.read(),r=IM(this.activation.getClassName());if(r!=null&&this.rank===2)n=$C(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=R7(t,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=$C(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=D7(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new me("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Fe(t);const e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const o=Zi(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(o)}let i=[t[0]];return this.dataFormat==="channelsLast"?(i=i.concat(e),i.push(this.filters)):(i.push(this.filters),i=i.concat(e)),i}getConfig(){const t={filters:this.filters,kernelInitializer:ln(this.kernelInitializer),kernelRegularizer:He(this.kernelRegularizer),kernelConstraint:An(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new Z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Wd extends ou{constructor(t){super(2,t),Wd.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!pw(t.kernelSize,"number",1,2))throw new Z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Wd.className="Conv2D";Mt(Wd);class Gd extends ou{constructor(t){super(3,t),Gd.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new Z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Gd.className="Conv3D";Mt(Gd);class Ak extends Wd{constructor(t){if(super(t),this.inputSpec=[new kn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new Z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Fe(t),t.length!==4)throw new Z("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Z("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new kn({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return at(()=>{let n=de(t);if(n.shape.length!==4)throw new Z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=i[o],c=i[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=wr(l,d,u,this.padding),g=wr(c,f,h,this.padding),m=[r,p,g,this.filters];this.dataFormat!=="channelsLast"&&(n=Ee(n,[0,2,3,1]));let x=mE(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ee(x,[0,3,1,2])),this.bias!=null&&(x=ar(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Fe(t);const e=t.slice();let n,i,r;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3):(n=3,i=1,r=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[i]=wr(e[i],l,o,this.padding),e[r]=wr(e[r],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Ak.className="Conv2DTranspose";Mt(Ak);class Nk extends Gd{constructor(t){if(super(t),this.inputSpec=[new kn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new Z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Fe(t),t.length!==5)throw new Z("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Z("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new kn({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return at(()=>{let n=de(t);if(n.shape.length!==5)throw new Z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=i[l],u=i[o],h=i[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],g=this.strides[0],m=this.strides[1],x=this.strides[2],v=wr(c,g,d,this.padding),y=wr(u,m,f,this.padding),b=wr(h,x,p,this.padding),w=[r,v,y,b,this.filters];this.dataFormat!=="channelsLast"&&(n=Ee(n,[0,2,3,4,1]));let _=jG(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=Ee(_,[0,4,1,2,3])),this.bias!==null&&(_=ar(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(t){t=Fe(t);const e=t.slice();let n,i,r,o;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3,o=4):(n=4,i=1,r=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return e[n]=this.filters,e[i]=wr(e[i],u,a,this.padding),e[r]=wr(e[r],h,l,this.padding),e[o]=wr(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Nk.className="Conv3DTranspose";Mt(Nk);class Rk extends ou{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new Z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new Z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new Z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=sn(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=rn(e.depthwiseRegularizer),this.depthwiseConstraint=Nn(e.depthwiseConstraint),this.pointwiseInitializer=sn(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=rn(e.pointwiseRegularizer),this.pointwiseConstraint=Nn(e.pointwiseConstraint)}build(t){if(t=Fe(t),t.length<this.rank+2)throw new Z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new Z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],i=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new kn({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return at(()=>{t=de(t);let n;if(this.rank===1)throw new me("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Ee(t,[0,2,3,1])),n=OE(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ar(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ee(n,[0,3,1,2])),n})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ln(this.depthwiseInitializer),t.pointwiseInitializer=ln(this.pointwiseInitializer),t.depthwiseRegularizer=He(this.depthwiseRegularizer),t.pointwiseRegularizer=He(this.pointwiseRegularizer),t.depthwiseConstraint=An(this.depthwiseConstraint),t.pointwiseConstraint=An(this.pointwiseConstraint),t}}Rk.className="SeparableConv";class Dk extends Rk{constructor(t){super(2,t)}}Dk.className="SeparableConv2D";Mt(Dk);class qg extends ou{constructor(t){super(1,t),qg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!pw(t.kernelSize,"number",1,1))throw new Z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}qg.className="Conv1D";Mt(qg);class $k extends Ce{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return at(()=>{if(t=de(t),this.dataFormat==="channelsLast"){const n=Kf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Kf(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const n=Kf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Kf(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}$k.className="Cropping2D";Mt($k);class Lk extends Ce{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,uX(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,n]}else{const e=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return at(()=>{let n=de(t);const i=n.shape;if(this.dataFormat==="channelsFirst"){n=Ee(n,[0,2,3,1]);const r=this.size[0]*i[2],o=this.size[1]*i[3],a=this.interpolation==="nearest"?lc.resizeNearestNeighbor(n,[r,o]):lc.resizeBilinear(n,[r,o]);return Ee(a,[0,3,1,2])}else{const r=this.size[0]*i[1],o=this.size[1]*i[2];return this.interpolation==="nearest"?lc.resizeNearestNeighbor(n,[r,o]):lc.resizeBilinear(n,[r,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Lk.className="UpSampling2D";Mt(Lk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $7(s,t,e=[1,1],n="valid",i,r){return at(()=>{i==null&&(i=nr()),yn(i);let o=kw(s,i);if(s.rank!==4)throw new Z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new Z(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=xy(o,t,e,n==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(o=Ee(o,[0,3,1,2])),o})}class Fk extends Hg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=sn(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Nn(t.depthwiseConstraint),this.depthwiseRegularizer=rn(t.depthwiseRegularizer)}build(t){if(t=Fe(t),t.length<4)throw new Z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new Z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],i=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{t=de(t);let n=$7(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ar(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Fe(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Zi(e,this.kernelSize[0],this.padding,this.strides[0]),o=Zi(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],i,r,o]:[t[0],r,o,i]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ln(this.depthwiseInitializer),t.depthwiseRegularizer=He(this.depthwiseRegularizer),t.depthwiseConstraint=An(this.depthwiseRegularizer),t}}Fk.className="DepthwiseConv2D";Mt(Fk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pk(s,t,e,n){if(Array.isArray(s)){if(t!=null||e!=null)throw new Z("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=s.slice(s.length-n,s.length),s=s.slice(0,s.length-n)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return t=i(t),e=i(e),{inputs:s,initialState:t,constants:e}}function Ok(s,t,e,n=!1,i,r,o=!1,a=!1){return at(()=>{const l=t.shape.length;if(l<3)throw new Z(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(er(2,l));if(t=Ee(t,c),r!=null)throw new me("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Vt(Vt(i,"bool"),"float32"),i.rank===l-1&&(i=Ns(i,-1)),i=Ee(i,c)),n&&(t=tl(t,0),i!=null&&(i=tl(i,0)));const u=[];let h,d=e;const f=t.shape[0],p=Fc(t);let g;i!=null&&(g=Fc(i));for(let x=0;x<f;++x){const v=p[x],y=at(()=>s(v,d));if(i==null)h=y[0],d=y[1];else{const b=at(()=>{const w=g[x],_=ee(Ei(w),w),C=Nt(K(y[0],w),K(d[0],_)),S=d.map((T,I)=>Nt(K(y[1][I],w),K(T,_)));return{output:C,newStates:S}});h=b.output,d=b.newStates}a&&u.push(h)}let m;return a&&(m=el(u,1)),[h,m,d]})}class na extends Ce{constructor(t){super(t);let e;if(t.cell==null)throw new Z("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Rw({cells:t.cell}):e=t.cell,e.stateSize==null)throw new Z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new kn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return er(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){wv(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let i;if(this.returnSequences?i=[t[0],t[1],n]:i=[t[0],n],this.returnState){const r=[];for(const o of e)r.push([t[0],o]);return[i].concat(r)}else return i}computeMask(t,e){return at(()=>{Array.isArray(e)&&(e=e[0]);const n=this.returnSequences?e:null;if(this.returnState){const i=this.states.map(r=>null);return[n].concat(i)}else return n})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new me("Constants support is not implemented in RNN yet.");wv(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new kn({shape:[e,null,...n]});const i=[t[0]].concat(t.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Le(this.stateSpec.map(o=>o.shape[o.shape.length-1]),r))throw new Z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(o=>new kn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){at(()=>{if(!this.stateful)throw new br("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(n==null)throw new Z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>On([n,i])):this.states_=[On([n,this.cell.stateSize])];else if(t==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>On([n,i])):this.states_[0]=On([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let i=0;i<this.states_.length;++i){const r=t[i],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[n,o];if(!Le(r.shape,a))throw new Z(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>Dr(i.clone()))})}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=Pk(t,n,i,this.numConstants);t=r.inputs,n=r.initialState,i=r.constants;let o=[],a=[];if(n!=null){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const c of n)this.stateSpec.push(new kn({shape:c.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(e.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof Cr){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return at(()=>{const n=e==null?null:e.mask,i=e==null?null:e.training;let r=e==null?null:e.initialState;t=de(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new Z(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},c=Ok((p,g)=>{const m=this.cell.call([p].concat(g),a);return[m[0],m.slice(1)]},t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,i);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(t){return at(()=>{let e=On(t.shape);return e=te(e,[1,2]),e=Od(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?bv(e,[1,n]):e):this.cell.stateSize>1?[bv(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===na.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const i=e.cell,r=oo(i,n);return new t(Object.assign(e,{cell:r}))}}na.className="RNN";Mt(na);class jg extends Ce{}class Aw extends jg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,zn(this.units,"units"),this.activation=Vo(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rn(t.kernelRegularizer),this.recurrentRegularizer=rn(t.recurrentRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.kernelConstraint=Nn(t.kernelConstraint),this.recurrentConstraint=Nn(t.recurrentConstraint),this.biasConstraint=Nn(t.biasConstraint),this.dropout=Pc([1,Bo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Pc([1,Bo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Fe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{if(t=t,t.length!==2)throw new Z(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const i=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ei(t),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ei(n),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?r=Er(K(t,o),this.kernel.read()):r=Er(t,this.kernel.read()),this.bias!=null&&(r=ar(r,this.bias.read())),a!=null&&(n=K(n,a));let l=Nt(r,Er(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),recurrentInitializer:ln(this.recurrentInitializer),biasInitializer:ln(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Aw.className="SimpleRNNCell";Mt(Aw);class zk extends na{constructor(t){t.cell=new Aw(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return new t(e)}}zk.className="SimpleRNN";Mt(zk);class Nw extends jg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Z("GRUCell does not support reset_after parameter set to true.");this.units=t.units,zn(this.units,"units"),this.activation=Vo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Vo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rn(t.kernelRegularizer),this.recurrentRegularizer=rn(t.recurrentRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.kernelConstraint=Nn(t.kernelConstraint),this.recurrentConstraint=Nn(t.recurrentConstraint),this.biasConstraint=Nn(t.biasConstraint),this.dropout=Pc([1,Bo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Pc([1,Bo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Fe(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{if(t=t,t.length!==2)throw new Z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training==null?!1:e.training;let i=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ei(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ei(i),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=K(t,r[0]));let u=Er(t,this.kernel.read());this.useBias&&(u=ar(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=K(i,o[0]));const h=this.recurrentKernel.read(),[d,f]=Qs(h,[2*this.units,this.units],h.rank-1),p=Er(i,d),[g,m,x]=Qs(u,3,u.rank-1),[v,y]=Qs(p,2,p.rank-1);a=this.recurrentActivation.apply(Nt(g,v)),l=this.recurrentActivation.apply(Nt(m,y));const b=Er(K(l,i),f);c=this.activation.apply(Nt(x,b));const w=Nt(K(a,i),K(Nt(1,cn(a)),c));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),recurrentActivation:Uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),recurrentInitializer:ln(this.recurrentInitializer),biasInitializer:ln(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Nw.className="GRUCell";Mt(Nw);class Bk extends na{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Nw(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Bk.className="GRU";Mt(Bk);class Xg extends jg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,zn(this.units,"units"),this.activation=Vo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Vo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=rn(t.kernelRegularizer),this.recurrentRegularizer=rn(t.recurrentRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.kernelConstraint=Nn(t.kernelConstraint),this.recurrentConstraint=Nn(t.recurrentConstraint),this.biasConstraint=Nn(t.biasConstraint),this.dropout=Pc([1,Bo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Pc([1,Bo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Fe(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,o=this.units;i=new(e=class extends Di{apply(l,c){const u=r.apply([o]),h=new gw().apply([o]),d=r.apply([o*2]);return xC(xC(u,h),d)}},e.className="CustomInit",e)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return at(()=>{const n=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new Z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let i=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ei(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ei(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=K(t,o[0]));let d=Er(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=K(i,a[0])),d=Nt(d,Er(i,this.recurrentKernel.read())),this.useBias&&(d=ar(d,this.bias.read()));const[f,p,g,m]=Qs(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=Nt(K(c,r),K(l,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const x=K(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),recurrentActivation:Uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),recurrentInitializer:ln(this.recurrentInitializer),biasInitializer:ln(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Xg.className="LSTMCell";Mt(Xg);class Uk extends na{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Xg(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Uk.className="LSTM";Mt(Uk);class Rw extends jg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return at(()=>{t=t;let n=t.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(n.splice(0,a.stateSize.length)):i.push(n.splice(0,1));i.reverse();const r=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];n=i[a],a===0?o=[t[0]].concat(n):o=[o[0]].concat(n),o=l.call(o,e),r.push(o.slice(1))}n=[];for(const a of r.slice().reverse())n.push(...a);return[o[0]].concat(n)})}build(t){wv(t)&&(t=t[0]),t=t;let e;this.cells.forEach((n,i)=>{Fa(`RNNCell_${i}`,()=>{n.build(t),Array.isArray(n.stateSize)?e=n.stateSize[0]:e=n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),i={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),i)}static fromConfig(t,e,n={}){const i=[];for(const r of e.cells)i.push(oo(r,n));return new t({cells:i})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return _v(t)}setWeights(t){const e=[];for(const n of this.cells){const i=n.weights.length,r=t.splice(i);for(let o=0;o<n.weights.length;++o)e.push([n.weights[o],r[o]])}Sw(e)}}Rw.className="StackedRNNCells";Mt(Rw);function Wo(s){const{ones:t,rate:e,training:n=!1,count:i=1,dropoutFunc:r}=s,o=()=>r!=null?r(t(),e):DM(t(),e),a=()=>Bd(o,t,n);return!i||i<=1?Dr(a().clone()):Array(i).fill(void 0).map(a).map(c=>Dr(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var L7=globalThis&&globalThis.__rest||function(s,t){var e={};for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&t.indexOf(n)<0&&(e[n]=s[n]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,n=Object.getOwnPropertySymbols(s);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(s,n[i])&&(e[n[i]]=s[n[i]]);return e};class Vk extends na{constructor(t){if(t.unroll)throw new me("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new me("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new kn({ndim:5})]}call(t,e){return at(()=>{if(this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Z("ConvRNN2D cell does not support constants");const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return at(()=>{const{stateSize:e}=this.cell,n=t.shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)],o=On(r);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){at(()=>{if(!this.stateful)throw new br("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)];if(n[0]==null)throw new Z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>On(r)):this.states_=[On(r)];else if(t==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>On(r)):this.states_[0]=On(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=r;if(!Le(l.shape,c))throw new Z(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Dr(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:i,padding:r,strides:o,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=Zi(c,i[0],r,o[0],a[0]),d=Zi(u,i[1],r,o[1],a[1]);return[...t.slice(0,2),...l?[n,h,d]:[h,d,n]]}}Vk.className="ConvRNN2D";class Dw extends Xg{constructor(t){const{filters:e,kernelSize:n,strides:i,padding:r,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,zn(this.filters,"filters"),this.kernelSize=bc(n,2,"kernelSize"),this.kernelSize.forEach(l=>zn(l,"kernelSize")),this.strides=bc(i||1,2,"strides"),this.strides.forEach(l=>zn(l,"strides")),this.padding=r||"valid",oi(this.padding),this.dataFormat=o||"channelsLast",yn(this.dataFormat),this.dilationRate=bc(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>zn(l,"dilationRate"))}build(t){var e;t=Fe(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new Z(`The channel dimension of the input should be defined. Found ${t[n]}`);const i=t[n],r=4,o=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends Di{apply(d,f){const p=c.apply([u]),g=Qo([u]),m=c.apply([u*2]);return mw([p,g,m])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return at(()=>{if(t.length!==3)throw new Z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,i=t[0],r=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ei(i),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(W,q,G)=>!q||!q[G]?W:K(q[G],W);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),f=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ei(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let g=c(r,p,0),m=c(r,p,1),x=c(r,p,2),v=c(r,p,3);const y=3,[b,w,_,C]=Qs(this.kernel.read(),a,y),[S,T,I,A]=this.useBias?Qs(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,S,this.padding),h=this.inputConv(h,w,T,this.padding),d=this.inputConv(d,_,I,this.padding),f=this.inputConv(f,C,A,this.padding);const[D,M,E,k]=Qs(this.recurrentKernel.read(),a,y);g=this.recurrentConv(g,D),m=this.recurrentConv(m,M),x=this.recurrentConv(x,E),v=this.recurrentConv(v,k);const N=this.recurrentActivation.apply(Nt(u,g)),z=this.recurrentActivation.apply(Nt(h,m)),L=Nt(K(z,o),K(N,this.activation.apply(Nt(d,x)))),$=K(this.recurrentActivation.apply(Nt(f,v)),this.activation.apply(L));return[$,$,L]})}getConfig(){const t=super.getConfig(),e=L7(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),n)}inputConv(t,e,n,i){const r=Ja(t,e,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ar(r,n,this.dataFormat):r}recurrentConv(t,e){return Ja(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Dw.className="ConvLSTM2DCell";Mt(Dw);class Wk extends Vk{constructor(t){const e=new Dw(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Wk.className="ConvLSTM2D";Mt(Wk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $w extends Ce{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,n=[];for(let i=0;i<this.noiseShape.length;++i)n.push(this.noiseShape[i]==null?e[i]:this.noiseShape[i]);return n}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t);if(0<this.rate&&this.rate<1){const i=e.training==null?!1:e.training,r=this.getNoiseShape(n);return Bd(()=>DM(n,this.rate,r,this.seed),()=>n,i)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}$w.className="Dropout";Mt($w);class Gk extends $w{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Gk.className="SpatialDropout1D";Mt(Gk);class Lw extends Ce{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,zn(this.units,"units"),this.activation=Vo(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Nn(t.kernelConstraint),this.biasConstraint=Nn(t.biasConstraint),this.kernelRegularizer=rn(t.kernelRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.activityRegularizer=rn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Fe(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Fe(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t),i=IM(this.activation.getClassName());let r;return i!=null?r=Er(n,this.kernel.read(),i,this.bias?this.bias.read():null):(r=Er(n,this.kernel.read()),this.bias!=null&&(r=ar(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Uo(this.activation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),biasInitializer:ln(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),biasConstraint:An(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Lw.className="Dense";Mt(Lw);class Hk extends Ce{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Fe(t);for(const e of t.slice(1))if(e==null)throw new Z(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Po(t,1)]}call(t,e){return at(()=>{this.invokeCallHook(t,e);let n=de(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){const i=[0];for(let r=2;r<n.rank;++r)i.push(r);i.push(1),n=Ee(n,i)}return gX(n)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Hk.className="Flatten";Mt(Hk);class qk extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.activation=Vo(t.activation)}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t);return this.activation.apply(n)})}getConfig(){const t={activation:Uo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}qk.className="Activation";Mt(qk);class jk extends Ce{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return at(()=>(t=de(t),pX(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}jk.className="RepeatVector";Mt(jk);class Xk extends Ce{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",i=e.slice();let r=1,o=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(o===null)o=l;else throw new Z("Can only specifiy one unknown dimension.");else r*=c}const a=Po(t);if(o!==null){if(r===0||a%r!==0)throw new Z(n);i[o]=a/r}else if(a!==r)throw new Z(n);return i}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t),i=n.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return et(n,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Xk.className="Reshape";Mt(Xk);class Kk extends Ce{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=er(1,t.dims.length+1);if(!Le(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new kn({ndim:this.dims.length+1})]}computeOutputShape(t){t=Fe(t);const e=t.slice();return this.dims.forEach((n,i)=>{e[i+1]=t[n]}),e}call(t,e){return Ee(de(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Kk.className="Permute";Mt(Kk);class Yk extends Ce{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=de(t),i=-1;return dv(ph(n,this.maskValue),i)}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t),i=-1,r=!0,o=dv(ph(n,this.maskValue),i,r);return K(n,Vt(o,n.dtype))})}}Yk.className="Masking";Mt(Yk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zk extends Ce{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ze(t.inputLength))}this.inputDim=t.inputDim,zn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,zn(this.outputDim,"outputDim"),this.embeddingsInitializer=sn(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=rn(t.embeddingsRegularizer),this.activityRegularizer=rn(t.activityRegularizer),this.embeddingsConstraint=Nn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return at(()=>this.maskZero?(t=de(t),ph(t,ke(t))):null)}computeOutputShape(t){if(t=Fe(t),this.inputLength==null)return[...t,this.outputDim];const e=Ze(this.inputLength);if(e.length!==t.length-1)throw new Z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let i=0;i<e.length;++i){const r=e[i],o=t[i+1];if(r!=null&&o!=null&&r!==o)throw new Z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return at(()=>{this.invokeCallHook(t,e);let n=de(t);n.dtype!=="int32"&&(n=bl(n,"int32"));const i=RM(this.embeddings.read(),et(n,[n.size]));return et(i,Fe(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ln(this.embeddingsInitializer),embeddingsRegularizer:He(this.embeddingsRegularizer),activityRegularizer:He(this.activityRegularizer),embeddingsConstraint:An(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Zk.className="Embedding";Mt(Zk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yl extends Ce{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new me}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const n=t.slice(0,t.length-e.length);for(let i=0;i<e.length;++i){const r=t[t.length-e.length+i],o=e[i];if(r==null||o==null||r<0||o<0)n.push(null);else if(r===1)n.push(o);else if(o===1)n.push(r);else{if(r!==o)throw new Z("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Fe(t)]),t=t,t.length<2)throw new Z(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=Fo(e),e.length>1)throw new Z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}const i=t.map(r=>r.length);t.indexOf(null)===-1&&Fo(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return at(()=>{if(t=t,this.reshapeRequired){const n=[],i=t.map(r=>r.rank);if(i.indexOf(null)===-1){const r=Bo(i);for(let o of t){const a=o.rank;for(let l=0;l<r-a;++l)o=Od(o,1);n.push(o)}return this.mergeFunction(n)}else{let r=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=et(l,[h].concat(Po(u.slice(1))));f=Ee(f,[1,0]),f=et(f,d),n.push(f),r=!0}else if(c>1){const u=er(1,c).concat([0]);n.push(Ee(l,u)),r=!0}else n.push(l)}let o=this.mergeFunction(n);const a=o.rank;if(r){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=et(Ee(et(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(er(0,a-1));o=Ee(o,l)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let i=1;i<t.length;++i){const r=t[i]==null?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);return n=Fo(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return at(()=>{if(e==null)return null;if(!Array.isArray(e))throw new Z("`mask` should be an Array");if(!Array.isArray(t))throw new Z("`inputs` should be an Array");if(e.length!==t.length)throw new Z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(i=>i==null))return null;e=e.map(i=>i==null?i:Ns(i,0));let n=e[0];for(let i=1;i<e.length-1;++i)n=lo(n,e[i]);return n})}}class Jk extends yl{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Nt(e,t[n]);return e})}}Jk.className="Add";Mt(Jk);class Qk extends yl{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=K(e,t[n]);return e})}}Qk.className="Multiply";Mt(Qk);class tA extends yl{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Nt(e,t[n]);return K(1/t.length,e)})}}tA.className="Average";Mt(tA);class eA extends yl{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Jo(e,t[n]);return e})}}eA.className="Maximum";Mt(eA);class nA extends yl{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=$g(e,t[n]);return e})}}nA.className="Minimum";Mt(nA);class sA extends yl{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new Z("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const i of t)if(i!=null){e=!1;break}if(e)return;const n=[];for(let i=0;i<t.length;++i){const r=t[i].slice();r.splice(this.axis,1);let o=!1;for(const a of n)if(Le(a,r)){o=!0;break}o||n.push(r)}if(n.length>1)throw new Z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return at(()=>mw(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new Z("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),i=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(n[i]==null||r[i]==null){n[i]=null;break}n[i]+=r[i]}return n}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new Z("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Z("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Z(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return at(()=>{let n=!0;if(e.forEach(o=>{if(o!=null){n=!1;return}}),n)return null;const i=[];for(let o=0;o<t.length;++o)e[o]==null?i.push(Vt(Ei(t[o]),"bool")):e[o].rank<t[o].rank?i.push(Ns(e[o],-1)):i.push(e[o]);const r=is(i,this.axis);return fE(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}sA.className="Concatenate";Mt(sA);function Au(s,t){for(;s<0;)s+=t;return s}function F7(s,t,e){if(s.shape.length>3||t.shape.length>3)throw new me("batchDot is not implemented for tensors of 4D or higher rank yet");if(P(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),P(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),s.dtype==="complex64"||t.dtype==="complex64")throw new me("batchDot is not implemented for complex64-type Tensors yet.");const n=s.shape.length,i=t.shape.length;e==null&&(e=[n-1,i-2]);const r=e;return at(()=>{let o;if(n>i){o=n-i;const l=[];for(let c=0;c<o;++c)l.push(1);t=et(t,t.shape.concat(l))}else if(i>n){o=i-n;const l=[];for(let c=0;c<o;++c)l.push(1);s=et(s,s.shape.concat(l))}else o=0;let a;if(s.shape.length===2&&t.shape.length===2)r[0]===r[1]?a=te(K(s,t),r[0]):a=te(K(Ee(s,[1,0]),t),r[1]);else{const l=r[0]!==s.shape.length-1,c=r[1]===t.shape.length-1;a=$e(s,t,l,c)}if(o>0){let l;n>i?l=n+i-3:l=n-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=Rd(a,c)}return a.shape.length===1&&(a=Ns(a,1)),a})}class iA extends yl{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){P(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new me("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);if(e[i[0]]!==n[i[1]])throw new Z(`Dimension incompatibility: ${e[i[0]]} !== ${n[i[1]]}`)}mergeFunction(t){if(t.length!==2)throw new Z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],n=t[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,o)=>Au(r,t[o].shape.length)):i=[Au(this.axes,e.shape.length),Au(this.axes,n.shape.length)],this.normalize&&(e=Hp(e,i[0]),n=Hp(n,i[1])),F7(e,n,i)}interpretAxes(t,e){let n;return Array.isArray(this.axes)?n=this.axes:n=[Au(this.axes,t.length),Au(this.axes,e.length)],n}computeOutputShape(t){P(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new me("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);e.splice(i[0],1),n.splice(i[1],1),n.splice(0,1);const r=e.concat(n);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}iA.className="Dot";Mt(iA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rA extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t);return Bd(()=>Nt(Ug(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}rA.className="GaussianNoise";Mt(rA);class oA extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const n=de(t);return this.rate>0&&this.rate<1?Bd(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return K(n,Ug(n.shape,1,r))},()=>n,e.training||!1):n})}}oA.className="GaussianDropout";Mt(oA);class aA extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||de(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return at(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Bd(()=>{const r=de(t),o=1.6732632423543772,a=1.0507009873554805,l=-o*a;let c=gl(Lg(n),this.rate);c=bl(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=Nt(K(r,c),K(Nt(c,-1),l));return Nt(K(d,u),h)},()=>de(t),e.training||!1)}return t})}}aA.className="AlphaDropout";Mt(aA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xh(s,t,e,n,i,r=.001){let o;if(s.rank===2)o=yG(s,t,e,n,i,r);else if(s.rank===3)o=_G(s,t,e,n,i,r);else if(s.rank===4)o=CG(s,t,e,n,i,r);else throw new me(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return o}function P7(s,t,e,n,i=.001){return at(()=>{const r=Cy(s,n),o=r.mean,a=r.variance;return[xh(s,o,a,e,t,i),o,a]})}function O7(s,t,e,n,i=.001){return at(()=>{const r=Cy(s,n),o=r.mean,a=r.variance,l=[];for(const p of er(0,s.rank))n.indexOf(p)!==-1?l.push(1):l.push(s.shape[p]);const c=et(o,l),u=et(a,l),h=t==null?null:et(t,l),d=e==null?null:et(e,l);return[xh(s,c,u,d,h,i),o,a]})}function z7(s,t,e,n,i=.001){return Le(n.slice().sort(),er(0,s.rank-1))?P7(s,t,e,n,i):O7(s,t,e,n,i)}class lA extends Ce{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=sn(t.betaInitializer||"zeros"),this.gammaInitializer=sn(t.gammaInitializer||"ones"),this.movingMeanInitializer=sn(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=sn(t.movingVarianceInitializer||"ones"),this.betaConstraint=Nn(t.betaConstraint),this.gammaConstraint=Nn(t.gammaConstraint),this.betaRegularizer=rn(t.betaRegularizer),this.gammaRegularizer=rn(t.gammaRegularizer)}build(t){t=Fe(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(n==null)throw new Z(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new kn({ndim:t.length,axes:{[e]:n}})];const i=[n];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return at(()=>{const n=e.training==null?!1:e.training,i=de(t),r=i.shape,o=r.length,a=er(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=sl(1,o);c[l]=r[l];const u=a.slice();u.sort();const h=!Le(u,er(0,o).slice(0,o-1)),d=()=>{if(h){const v=et(this.movingMean.read(),c),y=et(this.movingVariance.read(),c),b=this.center?et(this.beta.read(),c):null,w=this.scale?et(this.gamma.read(),c):null;return xh(i,v,y,b,w,this.epsilon)}else return xh(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[f,p,g]=z7(i,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(v,y,b)=>{at(()=>{const w=1-b,_=v.read(),C=K(ee(_,y),w);v.write(ee(_,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ln(this.betaInitializer),gammaInitializer:ln(this.gammaInitializer),movingMeanInitializer:ln(this.movingMeanInitializer),movingVarianceInitializer:ln(this.movingVarianceInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer),betaConstraint:An(this.betaConstraint),gammaConstraint:An(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}lA.className="BatchNormalization";Mt(lA);class cA extends Ce{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=sn(t.betaInitializer||"zeros"),this.gammaInitializer=sn(t.gammaInitializer||"ones"),this.betaRegularizer=rn(t.betaRegularizer),this.gammaRegularizer=rn(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Fe(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Fo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(r=>t[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(t,e){const n=de(t),i=n.shape,r=i.length;return at(()=>{let{mean:a,variance:l}=Cy(n,this.axis,!0);const c=sl(1,r);for(const g of this.axis)c[g]=i[g];const u=g=>g!=null&&g.shape.length!==r?et(g,c):g;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(f.push(i[g]),p.push(1)):(f.push(1),p.push(i[g]));return a=Xi(a,f),l=Xi(l,f),h!=null&&(h=Xi(h,p)),d!=null&&(d=Xi(d,p)),xh(n,a,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ln(this.betaInitializer),gammaInitializer:ln(this.gammaInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}cA.className="LayerNormalization";Mt(cA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function B7(s,t,e){return at(()=>{if(s.rank!==4)throw new Z(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new Z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=nr()),e!=="channelsLast"&&e!=="channelsFirst")throw new Z(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],Ty(s,n)})}class uA extends Ce{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?nr():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new Z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new Z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new Z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new kn({ndim:4})]}computeOutputShape(t){t=Fe(t);let e,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],e,n]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],e,n,t[3]])}call(t,e){return at(()=>B7(de(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}uA.className="ZeroPadding2D";Mt(uA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kg(s,t,e,n,i,r){return at(()=>{yn(i),MM(r),oi(n),e==null&&(e=[1,1]),n==null&&(n="valid"),i==null&&(i=nr()),r==null&&(r="max"),s=kw(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=Sy(s,t,e,a):o=dy(s,t,e,a),i==="channelsFirst"&&(o=Ee(o,[0,3,1,2])),o})}function hA(s,t,e,n,i,r){return at(()=>{yn(i),MM(r),oi(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),i==null&&(i=nr()),r==null&&(r="max"),s=kk(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=o5(s,t,e,a):o=hG(s,t,e,a),i==="channelsFirst"&&(o=Ee(o,[0,4,1,2,3])),o})}class dA extends Ce{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new Z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(zn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new Z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);zn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,oi(this.padding),this.inputSpec=[new kn({ndim:3})]}computeOutputShape(t){t=Fe(t);const e=Zi(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return at(()=>{this.invokeCallHook(t,e),t=Od(de(t),2);const n=this.poolingFunction(de(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Rd(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class fA extends dA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return yn(r),oi(i),Kg(t,e,n,i,r,"max")}}fA.className="MaxPooling1D";Mt(fA);class pA extends dA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return yn(r),oi(i),Kg(t,e,n,i,r,"avg")}}pA.className="AveragePooling1D";Mt(pA);class mA extends Ce{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new Z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yn(this.dataFormat),oi(this.padding),this.inputSpec=[new kn({ndim:4})]}computeOutputShape(t){t=Fe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Zi(e,this.poolSize[0],this.padding,this.strides[0]),n=Zi(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return at(()=>(this.invokeCallHook(t,e),this.poolingFunction(de(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gA extends mA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return yn(r),oi(i),Kg(t,e,n,i,r,"max")}}gA.className="MaxPooling2D";Mt(gA);class xA extends mA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return yn(r),oi(i),Kg(t,e,n,i,r,"avg")}}xA.className="AveragePooling2D";Mt(xA);class vA extends Ce{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new Z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yn(this.dataFormat),oi(this.padding),this.inputSpec=[new kn({ndim:5})]}computeOutputShape(t){t=Fe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Zi(e,this.poolSize[0],this.padding,this.strides[0]),n=Zi(n,this.poolSize[1],this.padding,this.strides[1]),i=Zi(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,i]:[t[0],e,n,i,t[4]]}call(t,e){return at(()=>(this.invokeCallHook(t,e),this.poolingFunction(de(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class bA extends vA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return yn(r),oi(i),hA(t,e,n,i,r,"max")}}bA.className="MaxPooling3D";Mt(bA);class yA extends vA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return yn(r),oi(i),hA(t,e,n,i,r,"avg")}}yA.className="AveragePooling3D";Mt(yA);class wA extends Ce{constructor(t){super(t),this.inputSpec=[new kn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new me}}class _A extends wA{constructor(t){super(t||{})}call(t,e){return at(()=>{const n=de(t);return gn(n,1)})}}_A.className="GlobalAveragePooling1D";Mt(_A);class SA extends wA{constructor(t){super(t||{})}call(t,e){return at(()=>{const n=de(t);return Yi(n,1)})}}SA.className="GlobalMaxPooling1D";Mt(SA);class CA extends Ce{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yn(this.dataFormat),this.inputSpec=[new kn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new me}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class TA extends CA{call(t,e){return at(()=>{const n=de(t);return this.dataFormat==="channelsLast"?gn(n,[1,2]):gn(n,[2,3])})}}TA.className="GlobalAveragePooling2D";Mt(TA);class IA extends CA{call(t,e){return at(()=>{const n=de(t);return this.dataFormat==="channelsLast"?Yi(n,[1,2]):Yi(n,[2,3])})}}IA.className="GlobalMaxPooling2D";Mt(IA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EA extends Ce{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const i=e.layer,r=oo(i,n);delete e.layer;const o={layer:r};return Object.assign(o,e),new t(o)}}class MA extends EA{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Fe(t),t.length<3)throw new Z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Fe(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),i=t[1];return[n[0],i].concat(n.slice(1))}call(t,e){return at(()=>(t=de(t),Ok((o,a)=>[de(this.layer.call(o,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}MA.className="TimeDistributed";Mt(MA);function U7(s){vl(cX,"BidirectionalMergeMode",s)}const V7="concat";class kA extends EA{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=oo(n),e.goBackwards=e.goBackwards!==!0;const i={};if(i.className=t.layer.getClassName(),i.config=e,this.backwardLayer=oo(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?V7:t.mergeMode,U7(this.mergeMode),t.weights)throw new me("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let n,i,r;return this.returnState&&(r=e.slice(1)),n=e[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,i=[n]):this.mergeMode==null?i=[n,n.slice()]:i=[n],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):ys(i)}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=Pk(t,n,i,this.numConstants);if(t=r.inputs,n=r.initialState,i=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&i==null)return super.apply(t,e);const o=[],a=[];if(n!=null){const c=n.length;if(c%2>0)throw new Z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const u=n.map(h=>new kn({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(i!=null)throw new me("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof Cr;for(const c of o)if(c instanceof Cr!==l)throw new Z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return at(()=>{const n=e.initialState;let i,r;if(n==null)i=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);i=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let o;this.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=tl(r,1));let a;return this.mergeMode==="concat"?a=mw([i,r]):this.mergeMode==="sum"?a=Nt(i,r):this.mergeMode==="ave"?a=K(.5,Nt(i,r)):this.mergeMode==="mul"?a=K(i,r):this.mergeMode==null&&(a=[i,r]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Fa(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Fa(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[e,e]:n=e:this.mergeMode==null?n=[null,null]:n=null,this.returnState){const r=this.forwardLayer.states.map(o=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=oo(e.layer);if(delete e.layer,e.numConstants!=null)throw new me("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=e;return i.layer=n,new t(i)}}kA.className="Bidirectional";Mt(kA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AA extends Ce{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return at(()=>(t=de(t),t.dtype!=="float32"&&(t=bl(t,"float32")),Nt(K(t,this.scale),this.offset)))}}AA.className="Rescaling";Mt(AA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const W7=["bilinear","nearest"],LC=new Set(W7);class NA extends Ce{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(LC.has(t.interpolation))this.interpolation=t.interpolation;else throw new Z(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Fe(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return at(()=>{const n=[this.height,this.width];if(this.interpolation==="bilinear")return lc.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return lc.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...LC]} are supported`)})}}NA.className="Resizing";Mt(NA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function G7(s,t,e,n){let i=de(s);if(i.dtype!=="int32"&&(i=bl(i,"int32")),t==="int")return i;const r=i.shape;if(i.rank===0&&(i=Ns(i,-1)),t==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=Ns(i,-1)),i.rank>2)throw new Z(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${i.rank}.`);const o=["multiHot","oneHot"].includes(t),a=i;let l;if(typeof n<"u"&&t==="count"?l=sC(a,n,e,o):l=sC(a,[],e,o),t!=="tfIdf")return l;if(n)return K(l,n);throw new Z("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RA extends Ce{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Fe(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return at(()=>{t=de(t),t.dtype!=="int32"&&(t=bl(t,"int32"));let n;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new Z(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);n=de(e.countWeights)}const i=Yi(t),r=Op(t),o=ri(this.numTokens,i).bufferSync().get(0),a=gl(r,0).bufferSync().get(0);if(!(o&&a))throw new Z(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return G7(t,this.outputMode,this.numTokens,n)})}}RA.className="CategoryEncoding";Mt(RA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yp(s){return new Lw(s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7=dt();H7.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var FC;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(FC||(FC={}));var PC;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(PC||(PC={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var OC;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(OC||(OC={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&P(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=jE;class Yg extends rb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new oI(this,mr())}nextDataId(){return Yg.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,dt().get("IS_NODE")&&Ks(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:t,dtype:n,refCount:1}),i}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Nh(n[0])){const r=n.map(o=>Lo(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return{dataId:i,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,n,i,r){this.data.set(t,{values:e,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if(e==="complex64"){const i=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return co(i,r)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>zo(i));return ve(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ve(t.shape,t.dtype,e)}makeOutput(t,e,n){return mr().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=vs();return t(),{kernelMs:vs()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Zt([t],"where");const e=this.readSync(t.dataId);return q7(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Yg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(s){const t=new Float32Array(s.length);for(let e=0;e<s.length;++e)t[e]=Math.abs(s[e]);return t}const j7=s=>{const{x:t}=s.inputs,e=s.backend;Zt(t,"abs");let n=new Float32Array(gt(t.shape));const i=e.data.get(t.dataId).values;return n=DA(i),e.makeOutput(n,t.shape,t.dtype)},X7={kernelName:Tm,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(s){return(t,e,n,i,r)=>{const o=pe(t,e),a=o.length,l=le(o),c=gt(o),u=Kn(r,c),h=t.length,d=e.length,f=le(t),p=le(e),g=$c(t,o),m=$c(e,o);if(g.length+m.length===0)for(let x=0;x<u.length;++x)u[x]=s(n[x%n.length],i[x%i.length]);else for(let x=0;x<u.length;++x){const v=tu(x,a,l),y=v.slice(-h);g.forEach(C=>y[C]=0);const b=Tr(y,h,f),w=v.slice(-d);m.forEach(C=>w[C]=0);const _=Tr(w,d,p);u[x]=s(n[b],i[_])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",r),imag:e.makeTensorInfo(i.shape,"float32",o)},a}const K7={kernelName:mb,backendName:"cpu",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(s,t,e="float32"){if(e==="complex64"){const i=Zp(s,t,"float32"),r=Zp(s,t,"float32");return Rs({inputs:{real:i,imag:r},backend:s})}const n=rs(gt(t),e);return s.makeTensorInfo(t,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Y7={kernelName:Qh,backendName:"cpu",kernelFunc:Lr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.real,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const Z7={kernelName:Ob,backendName:"cpu",kernelFunc:il};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(s,t,e,n){if(n==="int32"){const i=Int32Array.from(s);return[t,"int32",i]}if(n==="bool"){const i=ml([0],e),[r,o]=Cn((a,l)=>a!==l?1:0)(t,[],s,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function Go(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return Lr({inputs:{x:i},backend:e});const u=Zp(e,i.shape,i.dtype),h=Go({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),d=Rs({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=il({inputs:{input:i},backend:e}),h=Go({inputs:{x:u},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(u),h}if(!cI(i.dtype,r)){const u=Lr({inputs:{x:i},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:r}}const o=e.data.get(i.dataId).values,[a,l,c]=$A(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}const J7={kernelName:Bh,backendName:"cpu",kernelFunc:Go};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(s,t,e,n){return e==null?({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;Zt([o,a],s);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?nl(c):c,d=o.dtype==="string"?nl(u):u,f=n||o.dtype,[p,g]=t(o.shape,a.shape,h,d,f);return l.makeTensorInfo(g,f,p)}:({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=Go({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,g=Go({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.real,v=m.complexTensorInfos.imag,y=l.data.get(x.dataId).values,b=l.data.get(v.dataId).values,[w,_,C]=e(o.shape,a.shape,f,p,y,b),S=l.makeTensorInfo(C,"float32",w),T=l.makeTensorInfo(C,"float32",_),I=Rs({inputs:{real:S,imag:T},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(S),l.disposeIntermediateTensorInfo(T),I}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=n||o.dtype,[d,f]=t(o.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function Fw(s){return(t,e,n,i,r,o)=>{const a=pe(t,e),l=gt(a),c=a.length,u=le(a),h=Kn("float32",l),d=Kn("float32",l),f=$c(t,a),p=$c(e,a),g=co(n,i),m=co(r,o),x=t.length,v=le(t),y=e.length,b=le(e);if(f.length+p.length===0)for(let w=0;w<h.length;w++){const _=w%g.length,C=w%m.length,S=s(g[_*2],g[_*2+1],m[C*2],m[C*2+1]);h[w]=S.real,d[w]=S.imag}else for(let w=0;w<h.length;w++){const _=tu(w,c,u),C=_.slice(-x);f.forEach(D=>C[D]=0);const S=Tr(C,x,v),T=_.slice(-y);p.forEach(D=>T[D]=0);const I=Tr(T,y,b),A=s(g[S*2],g[S*2+1],m[I*2],m[I*2+1]);h[w]=A.real,d[w]=A.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA=Cn((s,t)=>s+t),Q7=Fw((s,t,e,n)=>({real:s+e,imag:t+n})),zc=Wn(eu,LA,Q7),t9={kernelName:eu,backendName:"cpu",kernelFunc:zc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(s,t,e,n,i){const r=gt(n),o=rs(i,e);for(let a=0;a<s.length;a++){const l=s[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=t[a]:o[l]+=1)}return o}function FA(s,t,e,n=!1){const i=s.shape[0],r=s.shape[1],o=ve([i,e],t.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const c=s.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(n?o.set(1,a,c):t.size>0?o.set(o.get(a,c)+t.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(s){return(t,e,n)=>{const i=Kn(e,t.length);for(let r=0;r<t.length;++r)i[r]=s(t[r],n);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Zt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=gt(o.shape),u=e||o.dtype,h=Sn(u,c);for(let d=0;d<c;++d)h[d]=t(l[d],i);return a.makeTensorInfo(o.shape,u,h)}}function au(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Zt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=e||o.dtype,u=t(l,c,i);return a.makeTensorInfo(o.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA=sa(s=>Math.ceil(s)),e9=au(Uh,PA),n9={kernelName:Uh,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(s,t,e,n){const i=Sn(e,gt(t));if(n&&e!=="string"){let r=0;s.forEach(o=>{const a=gt(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;s.forEach(o=>{const a=e==="string"?nl(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*t[1]+r;for(let h=0;h<o.shape[1];++h)i[u+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA=Cn((s,t)=>s===t?1:0),BA=Wn(Bm,zA,null,"bool"),s9={kernelName:Bm,backendName:"cpu",kernelFunc:BA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA=sa(s=>Math.exp(s)),VA=au(Xh,UA,"float32"),i9={kernelName:Xh,backendName:"cpu",kernelFunc:VA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA=sa(s=>Math.expm1(s)),r9=au(Kh,WA),o9={kernelName:Kh,backendName:"cpu",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA=sa(s=>Math.floor(s)),a9=au(Yh,GA),l9={kernelName:Yh,backendName:"cpu",kernelFunc:a9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(s,t,e,n,i,r,o,a,l){const c=ve([n,r],e);for(let u=0;u<n;u++){const h=[];let d=0;for(let f=0;f<i;f++){const p=s[u*i+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)c.values[u*r+f]=t.get(...t.indexToLoc(d*r+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(s,t,e){const n=ve(e,s.dtype);for(let i=0;i<n.size;++i){const o=n.indexToLoc(i).slice(),a=o[0],l=o[2],c=t.locToIndex([a,l]);o[2]=t.values[c];const u=s.locToIndex(o);0<=u&&u<s.values.length&&(n.values[i]=s.values[u])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA=Cn((s,t)=>s>t?1:0),c9=Wn(Gm,jA,null,"bool"),u9={kernelName:Gm,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA=Cn((s,t)=>s>=t?1:0),h9=Wn(Jh,XA,null,"bool"),d9={kernelName:Jh,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=Cn((s,t)=>s<t?1:0),f9=Wn(qm,KA,null,"bool"),p9={kernelName:qm,backendName:"cpu",kernelFunc:f9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA=Cn((s,t)=>s<=t?1:0),m9=Wn(jm,YA,null,"bool"),g9={kernelName:jm,backendName:"cpu",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(s,t,e){const n=(t-s)/(e-1),i=rs(e,"float32");i[0]=s;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA=sa(s=>Math.log(s)),x9=au(sd,JA),v9={kernelName:sd,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(s,t,e,n){const i=Kn(n,gt(e));for(let r=0;r<i.length;++r){const o=r*t;let a=s[o];for(let l=0;l<t;++l){const c=s[o+l];(Number.isNaN(c)||c>a)&&(a=c)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN=Cn((s,t)=>Math.max(s,t)),b9=Wn(rd,tN),y9={kernelName:rd,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eN=Cn((s,t)=>Math.min(s,t)),w9=Wn(od,eN),_9={kernelName:od,backendName:"cpu",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow=Cn((s,t)=>s*t),S9=Fw((s,t,e,n)=>({real:s*e-t*n,imag:s*n+t*e})),Zg=Wn(ld,Ow,S9),C9={kernelName:ld,backendName:"cpu",kernelFunc:Zg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(s,t,e){const n=Ko(-1,e);return Ow([],t,n,s,e)}function T9(s){const{inputs:t,backend:e}=s,{x:n}=t;Zt(n,"neg");const i=e.data.get(n.dataId).values,[r,o]=nN(i,n.shape,n.dtype);return e.makeTensorInfo(o,n.dtype,r)}const I9={kernelName:ig,backendName:"cpu",kernelFunc:T9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=Cn((s,t)=>s!==t?1:0),E9=Wn(rg,sN,null,"bool"),M9={kernelName:rg,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zw(s,t,e,n,i){const r=t.length,o=gt(t),a=le(t),l=le(i),c=Kn(e,gt(i));for(let u=0;u<o;++u){const h=tu(u,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[n[p]];const f=Tr(d,r,l);c[f]=s[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(s){const{inputs:t,attrs:e,backend:n}=s,{x:i}=t,{perm:r}=e;Zt(i,"transpose");const o=i.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=i.shape[r[h]];const l=n.data.get(i.dataId).values,c=zw(l,i.shape,i.dtype,r,a);return{dataId:n.write(c,a,i.dtype),shape:a,dtype:i.dtype}}const k9={kernelName:gc,backendName:"cpu",kernelFunc:Ts};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(s,t,e,n){const[i,r]=Vn(s,n),o=zs(t,"int32"),a=rs(gt(i),o),l=gt(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];a[c]=h}return{outVals:a,outShape:i,outDtype:o}}function A9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Zt(i,"prod");const a=i.shape.length,l=be(r,i.shape),c=un(l,a);let u=l,h=i;const d=[];c!=null&&(h=Ts({inputs:{x:i},backend:e,attrs:{perm:c}}),d.push(h),u=bn(u.length,a));const f=e.data.get(h.dataId).values,{outVals:p,outShape:g,outDtype:m}=iN(h.shape,h.dtype,f,u);let x=g;return o&&(x=vn(g,l)),d.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(x,m,p)}const N9={kernelName:hg,backendName:"cpu",kernelFunc:A9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(s,t,e){s.forEach((n,i)=>{if(n<0||n>=e){const r=tu(i,t.length,le(t)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${e})`)}})}function D9(s,t){for(let e=0;e<s.length;++e){const n=s[e],i=e===s.length-1?t:s[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function $9(s,t,e,n){const i=[];let r=0;const o=t.length-1+e.length,a=new Array(o).fill(null).map(()=>[0]);D9(e,n);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<s.length;++c){let u=s[c],h=s[c]+1;for(let d=0;d<e.length;++d){const f=e[d],p=d+t.length-1;if(p>=0){const g=a[p],m=g[g.length-1]-f[u];for(let x=u;x<h;++x)a[p].push(f[x+1]+m)}u=f[u],h=f[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:i,numValues:r}}function L9(s){const t=[];for(let e=0;e<s.length;++e){const n=s[e].length,i=Sn("int32",n);t.push(i),s[e].forEach((r,o)=>i[o]=r)}return t}function zC(s,t){const e=s.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<s.length;n++)e[t-1]*=s[n];return e}function F9(s,t,e,n,i,r){const o=zC(t,2)[1],a=zC(r,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let h=0;h<n;++h)i[l*a+h]=s[u*o+h];++l}}function P9(s,t,e,n,i){const r=t.slice();r[0]=i;const o=Sn(e,gt(r)),a=s.length,l=a===0?0:a/t[0];return F9(s,t,n,l,o,r),[o,r]}function rN(s,t,e,n,i,r,o,a){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(R9(r,o,l),n.length===0)throw new Error("params.rank must be nonzero");const c=n[0],{outSplits:u,valueSlices:h,numValues:d}=$9(r,o,s,c),f=L9(u),p=P9(e,n,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=2147483647;function oN(s,t,e,n,i,r,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=i.length===0,c=o.length===0,u=[];a||u.push(t[0]),l||u.push(i[0]),c||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=Sn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const x=a?s[0]:s[m],v=l?n[0]:n[m],y=c?r[0]:r[m];if(y===0)throw new Error("Requires delta != 0");let b;if(y>0&&v<x||y<0&&v>x)b=0;else if(b=Math.ceil(Math.abs((v-x)/y)),b>BC)throw new Error(`Requires ((limit - start) / delta) <= ${BC}`);d[m+1]=d[m]+b}const f=d[h],p=Sn(e,f);let g=0;for(let m=0;m<h;++m){const x=d[m+1]-d[m];let v=a?s[0]:s[m];const y=c?r[0]:r[m];for(let b=0;b<x;++b)p[g++]=v,v+=y}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hi=Wi;class Jp{constructor(t,e,n,i,r,o,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=QE(u),this.raggedRank=tM(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===hi.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===hi.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case hi.VALUE_ROWIDS:return Jp.getMaxWidthValueRowID(e);case hi.ROW_SPLITS:return Jp.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${hi[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let n=0;for(let i=0;i<e-1;++i){const r=t[i+1]-t[i];r>n&&(n=r)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let n=0,i=t[0],r=0;for(let o=1;o<e;++o){const a=t[o];a!==i&&(i=a,r=Math.max(o-n,r),n=o)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return VC(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;eM(n,e);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=JE(this.raggedRank,i,e);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,e,n){const i=Math.min(t,n),r=[];let o=0;for(let a=0;a<i;++a,o+=e)r.push(o);for(let a=i;a<t;++a)r.push(-1);return P(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,n,i){const r=t.length,o=[];for(let a=0;a<r-1;++a){const l=t[a+1]-t[a];let c=Math.min(i,l),u=e[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=n;for(let h=0;h<l-c;++h)o.push(-1)}if(r>0&&o.length!==t[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,i){const r=t.length,o=[];if(r===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];o.push(c);for(let u=1;u<r;++u){const h=t[u];if(h===l)c>=0&&(++a,a<i?c+=n:c=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,i){const r=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case hi.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,i);case hi.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,n,i);default:throw new Error(`Unsupported partition type: ${hi[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case hi.FIRST_DIM_SIZE:return t[0];case hi.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case hi.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${hi[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*n[l+1];const r=VC(n,!1),o=Sn(this.valuesDType,gt(r));if(i[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(e,i[0],n[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,i[c],n[c]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(t,e,n,i){if(n.length===0)return;const r=this.values,o=n;let a=i.slice();a=a.slice(t+1);const l=gt(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;at(()=>{const g=et(u,p);u=Ku(g,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let g=p<c?e[p]:-1;if(g===f){++f;continue}if(d<f){const m=r.subarray(h*l),x=o.subarray(d*l),v=(f-d)*l;UC(x,m,v)}if(p>=c){const m=n.length;g=Math.floor(m/l)}if(g>f)if(this.defaultValue.length===1)o.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){const m=o.slice(f*l);UC(m,u,l),++f}g<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function UC(s,t,e){for(let n=0;n<e;n++)s[n]=t[n]}function VC(s,t){const e=[];for(let n of s){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function aN(s,t,e,n,i,r,o,a,l,c){return new Jp(s,t,e,n,i,r,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(s,t,e,n){const i=s===t,r=s<t&&e<0,o=t<s&&e>1;if(i||r||o)return rs(0,n);const a=Math.abs(Math.ceil((t-s)/e)),l=rs(a,n);t<s&&e===1&&(e=-1),l[0]=s;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN=sa(s=>1/Math.sqrt(s)),O9=au(pd,cN),z9={kernelName:pd,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(s,t,e,n,i,r,o,a,l,c){const u=[n/i,i],h=s.values,d=t.values;if(n===0)return ve(e,t.dtype);const f=ve(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const g=[];let m=0;for(let x=0;x<o;x++){const v=h[p*o+x];g.push(v),m+=v*a[x]}if(m<0||m>=n/i)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let x=0;x<i;x++)c?f.values[m*i+x]+=d[p*i+x]:f.values[m*i+x]=t.rank===0?d[0]:d[p*i+x]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=sa(s=>1/(1+Math.exp(-s))),uN=Ve(bd,s=>1/(1+Math.exp(-s))),U9={kernelName:bd,backendName:"cpu",kernelFunc:uN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(s,t,e,n,i){const r=ly(n,t,e),o=gt(e),a=le(n);if(r){const h=cy(t,a);return i==="string"?s.slice(h,h+o):s.subarray(h,h+o)}const l=i==="string"?nl(s):s,c=ve(n,i,l),u=ve(e,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,g)=>p+t[g]);u.set(c.get(...f),...d)}return i==="string"?wM(u.values):u.values}function rl(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n;Zt(i,"slice");const[a,l]=kg(i,r,o);oy(i,a,l);const c=e.data.get(i.dataId).values,u=hN(c,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,u)}const V9={kernelName:xg,backendName:"cpu",kernelFunc:rl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(s,t,e,n,i,r,o){const a=t[0],l=r[0],c=new Array(l),u=new Array(a),h=t[1];if(l===0){if(a!==0)throw new Error(lM(a));const m=Sn(e,0),x=Sn(i,0);return[m,[0,h],x,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const x=s[m*h];if(x<0)throw new Error(cM(m,x));if(x>=l)throw new Error(uM(m,x,l));++p[x],d=d&&x>=f,f=x}let g=!0;for(let m=0;m<l;++m){const x=p[m]===0;c[m]=x,g=g&&!x,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(g&&d){const m=s,x=n;for(let v=0;v<a;++v)u[v]=v;return[m,[a,h],x,c,u]}else{const m=p[l-1],x=Sn(e,m*h),v=Sn(i,m),y=new Array(l).fill(0);for(let b=0;b<a;++b){const w=s[b*h],_=y[w],C=(w===0?0:p[w-1])+_;y[w]++;for(let S=0;S<h;++S)x[C*h+S]=s[b*h+S];v[C]=n[b],u[b]=C}for(let b=0;b<l;++b)if(y[b]===0){const _=b===0?0:p[b-1];x[_*h+0]=b;for(let C=1;C<h;++C)x[_*h+C]=0;v[_]=o}return[x,[m,h],v,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(s,t,e,n,i){const r=gt(n),o=t[0],a=i.length,l=[];let c=1,u=-1;for(let m=0;m<a;++m){const x=i[m];if(x===-1){if(u!==-1)throw new Error(hM(u,m));u=m,l.push(1)}else{if(x<0)throw new Error(dM(m,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(fM());const m=Math.trunc(r/c);if(c*m!==r)throw new Error(pM(n,l));l[u]=m}if(gt(l)!==r)throw new Error(mM(n,l));const d=n.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*n[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const g=Sn(e,o*a);for(let m=0;m<o;++m){let x=0;for(let v=0;v<d;++v)x+=s[m*d+v]*f[v];for(let v=0;v<a;++v)g[m*a+v]=Math.trunc(x/p[v]),x%=p[v]}return[g,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(s,t,e,n,i,r=!1,o=0){const a=n.length,l=[t[0],s.length/t[0]],c=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(xv());const d=t.slice();d[0]=h;const f=d.reduce((y,b)=>y*b,1),p=Sn(e,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(xv());let g=0,m=1,x=0,v=i[g];for(;;){let y=0;if(m<a){if(y=i[m],v===y){++m;continue}if(v>=y)throw new Error(gM())}if(v<0||v>=h)throw new Error(xM(v,h));v>x&&p.fill(o,x*c,v*c);for(let b=g;b<m;++b){const w=n[b];if(w<0||w>=l[0])throw new Error(vM(b,n[b],l[0]));for(let _=0;_<c;_++)p[v*c+_]+=s[w*c+_]}if(r)for(let b=0;b<c;b++)p[v*c+b]/=m-g;if(g=m,++m,x=v+1,v=y,m>a)break}return x<h&&p.fill(o,x*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9=sa(s=>Math.sqrt(s)),G9=Ve(wd,s=>Math.sqrt(s)),H9={kernelName:wd,backendName:"cpu",kernelFunc:G9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN=Cn((s,t)=>{const e=s-t;return e*e}),q9=Wn(_d,pN),j9={kernelName:_d,backendName:"cpu",kernelFunc:q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(s,t,e,n){const i=ve(s,t.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*e[l]+n[l];i.set(t.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X9{constructor(t,e,n,i,r,o){this.separator=Lo(t),this.nGramWidths=e,this.leftPad=Lo(n),this.rightPad=Lo(i),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=o-(c+u),d=e+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let v=0;v<h;++v)f+=t[d+v].length;f+=u*this.rightPad.length;const p=c+u+h-1;f+=p*this.separator.length,n[i+a]=new Uint8Array(f);const g=n[i+a];let m=0;const x=v=>v.forEach(y=>g[m++]=y);for(let v=0;v<c;++v)x(this.leftPad),x(this.separator);for(let v=0;v<h-1;++v)x(t[d+v]),x(this.separator);if(h>0){x(t[d+h-1]);for(let v=0;v<u;++v)x(this.separator),x(this.rightPad)}else{for(let v=0;v<u-1;++v)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){const n=t.length,i=e.length;if(i>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=e[c]>=l;if(u=u&&e[c]<=n,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${n}]`);l=e[c]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=i-1,o=Sn("int32",i);if(n===0||i===0){const l=new Array(n);for(let c=0;c<=r;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[r]);for(let l=0;l<r;++l){const c=e[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=e[l+1]-e[l],f=this.getNumNGrams(d,h);this.createNGrams(t,c,a,u,f,h),u+=f}),this.preserveShort&&u===o[l]){const h=e[l+1]-e[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(t,c,a,u,f,d)}}return[a,o]}}function gN(s,t,e,n,i,r,o,a){return new X9(e,n,i,r,o,a).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(s,t,e,n){if(!s.length)return;if(t.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(t.length===1){const r=t[0];let o=s.indexOf(r);for(;o!==-1;){const a=s.subarray(0,o);(!e||a.length!==0)&&n.push(a),s=s.subarray(o+1),o=s.indexOf(r)}(!e||s.length!==0)&&n.push(s);return}let i=0;for(let r=0;r<s.length+1;r++)if(r===s.length||t.indexOf(s[r])!==-1){const o=s.subarray(i,r);(!e||o.length!==0)&&n.push(o),i=r+1}}function xN(s,t,e){const n=s.length,i=[];let r=0,o=0;const a=new Array(n);for(let d=0;d<n;++d){const f=i.length;K9(s[d],t,e,i);const p=i.length-f;a[d]=p,r+=p,o=Math.max(o,p)}const l=Sn("int32",r*2),c=new Array(r),u=[n,o];let h=0;for(let d=0;d<n;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(s,t){const e=Sn("int32",s.length);for(let n=0;n<s.length;++n)e[n]=wV(s[n]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN=Cn((s,t)=>s-t),Y9=Fw((s,t,e,n)=>({real:s-e,imag:t-n})),Uw=Wn(Sd,bN,Y9),Z9={kernelName:Sd,backendName:"cpu",kernelFunc:Uw};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(s,t){const e=new Array(s.rank);for(let i=0;i<e.length;i++)e[i]=s.shape[i]*t[i];const n=ve(e,s.dtype);for(let i=0;i<n.values.length;++i){const r=n.indexToLoc(i),o=new Array(s.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%s.shape[l];const a=s.locToIndex(o);n.values[i]=s.values[a]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bu=(s,t)=>{const e=t.value-s.value;return e===0?s.index-t.index:e};function wN(s,t,e=0,n=s.length-1){for(;n>e;){if(n-e>600){const a=n-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*u/a+h)),f=Math.min(n,Math.floor(t+(a-l)*u/a+h));wN(s,t,d,f)}const i=s[t];let r=e,o=n;for(tc(s,e,t),Bu(s[n],i)>0&&tc(s,e,n);r<o;){for(tc(s,r,o),r++,o--;Bu(s[r],i)<0;)r=r+1;for(;Bu(s[o],i)>0;)o=o-1}Bu(s[e],i)===0?tc(s,e,o):(o=o+1,tc(s,o,n)),o<=t&&(e=o+1),t<=o&&(n=o-1)}}function _N(s,t,e,n,i){const r=t[t.length-1],[o,a]=[s.length/r,r],l=Kn(e,o*n),c=Kn("int32",o*n);for(let h=0;h<o;h++){const d=h*a,f=s.subarray(d,d+a);let p=new Array(f.length);f.forEach((v,y)=>p[y]={value:v,index:y}),n<p.length&&(wN(p,n),p=p.slice(0,n)),i&&p.sort(Bu);const g=h*n,m=l.subarray(g,g+n),x=c.subarray(g,g+n);for(let v=0;v<n;v++)m[v]=p[v].value,x[v]=p[v].index}const u=t.slice();return u[u.length-1]=n,[ve(u,e,l),ve(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(s,t,e,n){const i=be(t,e)[0],r=[1,e[0],1];for(let p=0;p<i;p++)r[0]*=e[p];r[1]=e[i];for(let p=i+1;p<e.length;p++)r[2]*=e[p];const o={},a=new Int32Array(e[i]),l=new ss(r,n,s),c=[],u=r[0]===1&&r[2]===1;for(let p=0;p<e[i];p++){let g;if(u)g=s[p].toString();else{const m=[];for(let x=0;x<r[0];x++)for(let v=0;v<r[2];v++)m.push(l.get(x,p,v));g=m.join(",")}if(o[g]!==void 0)a[p]=o[g];else{const m=Object.keys(o).length;o[g]=m,a[p]=m,c.push(p)}}const h=r.slice();h[1]=Object.keys(o).length;const d=new ss(h,n);c.forEach((p,g)=>{for(let m=0;m<r[0];m++)for(let x=0;x<r[2];x++)d.set(l.get(m,p,x),m,g,x)});const f=e.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:DA,addImpl:LA,bincountImpl:Pw,bincountReduceImpl:FA,castImpl:$A,ceilImpl:PA,concatImpl:OA,equalImpl:zA,expImpl:UA,expm1Impl:WA,floorImpl:GA,gatherNdImpl:HA,gatherV2Impl:qA,greaterImpl:jA,greaterEqualImpl:XA,lessImpl:KA,lessEqualImpl:YA,linSpaceImpl:ZA,logImpl:JA,maxImpl:QA,maximumImpl:tN,minimumImpl:eN,multiplyImpl:Ow,negImpl:nN,notEqualImpl:sN,prodImpl:iN,raggedGatherImpl:rN,raggedRangeImpl:oN,raggedTensorToTensorImpl:aN,rangeImpl:lN,rsqrtImpl:cN,scatterImpl:cc,sigmoidImpl:B9,sliceImpl:hN,sparseFillEmptyRowsImpl:dN,sparseReshapeImpl:fN,sparseSegmentReductionImpl:Bw,sqrtImpl:W9,squaredDifferenceImpl:pN,stridedSliceImpl:mN,stringNGramsImpl:gN,stringSplitImpl:xN,stringToHashBucketFastImpl:vN,subImpl:bN,tileImpl:yN,topKImpl:_N,transposeImpl:zw,uniqueImpl:SN},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */nE("cpu",()=>new Yg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN=Ve(qh,s=>s>=0?s:Math.exp(s)-1),Q9={kernelName:qh,backendName:"cpu",kernelFunc:CN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n;Zt([i],"leakyRelu");const o=gt(i.shape),a=e.data.get(i.dataId).values,l=Kn("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return e.makeTensorInfo(i.shape,"float32",l)}const tK={kernelName:Hm,backendName:"cpu",kernelFunc:TN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK=Cn((s,t)=>s<0?t*s:s);function IN(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t;Zt([n,i],"prelu");const r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,[a,l]=eK(n.shape,i.shape,r,o,"float32");return e.makeTensorInfo(l,"float32",a)}const nK={kernelName:ug,backendName:"cpu",kernelFunc:IN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN=Ve(hd,s=>Math.max(0,s)),sK={kernelName:hd,backendName:"cpu",kernelFunc:EN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN=Ve(dd,s=>Math.min(Math.max(0,s),6)),iK={kernelName:dd,backendName:"cpu",kernelFunc:MN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(s,t,e,n,i){if(e==="linear")return Lr({inputs:{x:t},backend:s});if(e==="relu")return EN({inputs:{x:t},backend:s});if(e==="elu")return CN({inputs:{x:t},backend:s});if(e==="relu6")return MN({inputs:{x:t},backend:s});if(e==="prelu")return IN({inputs:{x:t,alpha:n},backend:s});if(e==="leakyrelu")return TN({inputs:{x:t},backend:s,attrs:{alpha:i}});if(e==="sigmoid")return uN({inputs:{x:t},backend:s});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=gt(i.shape),a=lI(r,o),l=gt(a);P(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(i.dataId);const c=e.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const rK={kernelName:dg,backendName:"cpu",kernelFunc:Ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;Zt([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=o?i.shape[l-2]:i.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=o?i.shape[l-1]:i.shape[l-2],f=a?r.shape[c-2]:r.shape[c-1],p=i.shape.slice(0,-2),g=r.shape.slice(0,-2),m=gt(p),x=gt(g),y=pe(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,f]);P(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${o} and transposeB=${a} must match.`);const b=o?[m,u,d]:[m,d,u],w=a?[x,f,h]:[x,h,f],_=Ke({inputs:{x:i},backend:e,attrs:{shape:b}}),C=Ke({inputs:{x:r},backend:e,attrs:{shape:w}}),S=o?_.shape[1]:_.shape[2],T=o?_.shape[2]:_.shape[1],I=a?C.shape[1]:C.shape[2],A=Math.max(m,x),D=e.data.get(_.dataId).values,M=e.data.get(C.dataId).values,E=le(_.shape),k=le(C.shape),[N,z,L]=o?[E[0],1,E[1]]:[E[0],E[1],1],[$,W,q]=a?[1,k[1],k[0]]:[k[1],1,k[0]],G=T*I,j=ve([A,T,I],_.dtype),rt=j.values,lt=e.blockSize;for(let Y=0;Y<A;Y++)for(let vt=0;vt<T;vt+=lt)for(let xt=0;xt<I;xt+=lt)for(let mt=0;mt<S;mt+=lt){const ft=Math.min(vt+lt,T),it=Math.min(xt+lt,I),tt=Math.min(mt+lt,S);for(let ut=vt;ut<ft;ut++)for(let bt=xt;bt<it;bt++){let Rt=0;for(let Ct=mt;Ct<tt;Ct++){const Ut=Math.min(Y,m-1)*N,Ot=Math.min(Y,x-1)*q,Ht=D[Ut+ut*z+Ct*L],se=M[Ct*$+bt*W+Ot];Rt+=Ht*se}rt[Y*G+(ut*I+bt)]+=Rt}}return e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(C),e.makeTensorInfo(y,j.dtype,j.values)}const oK={kernelName:Am,backendName:"cpu",kernelFunc:kN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;let d,f,p;const g=[];d=kN({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:e}),o&&(f=zc({inputs:{a:d,b:o},backend:e}),g.push(d),d=f),u&&(p=Qp(e,d,u,a,h),g.push(d),d=p);for(const x of g)e.disposeIntermediateTensorInfo(x);return d}const lK={kernelName:Ap,backendName:"cpu",kernelFunc:aK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK=Ve(Dh,s=>Math.acos(s)),uK={kernelName:Dh,backendName:"cpu",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK=Ve($h,s=>Math.acosh(s)),dK={kernelName:$h,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(s){const{inputs:t,backend:e}=s,n=t;Zt(t,"addN");const i=n.map(a=>e.data.get(a.dataId).values),r=ve(n[0].shape,n[0].dtype),o=r.values;for(let a=0;a<n.length;a++){const l=i[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const pK={kernelName:cb,backendName:"cpu",kernelFunc:fK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Zt(i,"all");const a=be(r,i.shape);let l=a;const c=un(l,i.shape.length);let u=i;c!=null&&(u=Ts({inputs:{x:i},backend:e,attrs:{perm:c}}),l=bn(l.length,i.shape.length)),Qn("all",l,u.shape.length);const[h,d]=Vn(u.shape,l),f=gt(d),p=rs(gt(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let y=g[v];for(let b=0;b<f;++b){const w=g[v+b];y=y&&w}p[x]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=vn(h,a),v=Ke({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const gK={kernelName:ub,backendName:"cpu",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Zt(i,"any");const a=be(r,i.shape);let l=a;const c=un(l,i.shape.length);let u=i;c!=null&&(u=Ts({inputs:{x:i},backend:e,attrs:{perm:c}}),l=bn(l.length,i.shape.length)),Qn("any",l,u.shape.length);const[h,d]=Vn(u.shape,l),f=gt(d),p=rs(gt(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let y=g[v];for(let b=0;b<f;++b){const w=g[v+b];y=y||w}p[x]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=vn(h,a),v=Ke({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const vK={kernelName:hb,backendName:"cpu",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Zt(i,"argMax");let o=be(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=Ts({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=bn(o.length,l.shape.length)),o=[o[0]],Qn("argMax",o,l.shape.length);const[u,h]=Vn(l.shape,o),d=gt(u),f=rs(d,"int32"),p=gt(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x],y=0;for(let b=0;b<p;++b){const w=g[x+b];w>v&&(v=w,y=b)}f[m]=y}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const yK={kernelName:Im,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Zt(i,"argMin");let o=be(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=Ts({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=bn(o.length,l.shape.length)),o=[o[0]],Qn("argMin",o,l.shape.length);const[u,h]=Vn(l.shape,o),d=gt(u),f=rs(d,"int32"),p=gt(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x],y=0;for(let b=0;b<p;++b){const w=g[x+b];w<v&&(v=w,y=b)}f[m]=y}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const _K={kernelName:Em,backendName:"cpu",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=Ve(Lh,s=>Math.asin(s)),CK={kernelName:Lh,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK=Ve(Fh,s=>Math.asinh(s)),IK={kernelName:Fh,backendName:"cpu",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=Ve(Ph,s=>Math.atan(s)),MK={kernelName:Ph,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK=Cn((s,t)=>Math.atan2(s,t)),AK=Wn(zh,kK),NK={kernelName:zh,backendName:"cpu",kernelFunc:AK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK=Ve(Oh,s=>Math.atanh(s)),DK={kernelName:Oh,backendName:"cpu",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(s,t,e,n,i,r){const o=i.strideHeight,a=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,f=i.padInfo.left,p=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ve(i.outShape,e),m=g.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],v=i.outShape[2]*i.outShape[3],y=i.outShape[3];for(let b=0;b<i.batchSize;++b){const w=b*x,_=b*n[0];for(let C=0;C<i.inChannels;++C)for(let S=0;S<i.outHeight;++S){const T=S*o-d,I=Math.max(0,T),A=Math.min(i.inHeight,u+T),D=w+S*v;for(let M=0;M<i.outWidth;++M){const E=M*a-f,k=Math.max(0,E),N=Math.min(i.inWidth,h+E);let z=p,L=0,$=0;for(let q=I;q<A;q+=l){const G=_+q*n[1];for(let j=k;j<N;j+=c){const rt=G+j*n[2],lt=s[rt+C];r==="max"&&lt>z?z=lt:r==="avg"&&(L+=lt,$++)}if(isNaN(z))break}const W=D+M*y+C;m[W]=r==="avg"?L/$:z}}}return g}function AN(s,t,e,n,i=!1,r=!1){const o=ve(n.outShape,"int32"),a=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,u=n.dilationWidth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,f=n.padInfo.top,p=n.padInfo.left,g=ve(t,e,s);for(let m=0;m<n.batchSize;++m)for(let x=0;x<n.inChannels;++x)for(let v=0;v<n.outHeight;++v){const y=v*a-f;let b=y;for(;b<0;)b+=c;const w=Math.min(n.inHeight,h+y);for(let _=0;_<n.outWidth;++_){const C=_*l-p;let S=C;for(;S<0;)S+=u;const T=Math.min(n.inWidth,d+C);let I=Number.NEGATIVE_INFINITY,A=-1;for(let D=b;D<w;D+=c){const M=D-y;for(let E=S;E<T;E+=u){const k=E-C,N=g.get(m,D,E,x);N>I&&(I=N,i?A=r?((m*n.inHeight+D)*n.inWidth+E)*n.inChannels+x:(D*n.inWidth+E)*n.inChannels+x:A=M*d+k)}}o.set(A,m,v,_,x)}}return o}function NN(s,t,e,n,i,r){const o=i.strideDepth,a=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,f=i.effectiveFilterHeight,p=i.effectiveFilterWidth,g=i.padInfo.front,m=i.padInfo.top,x=i.padInfo.left,v=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ve(i.outShape,e),b=y.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[2]*i.outShape[3]*i.outShape[4],C=i.outShape[3]*i.outShape[4],S=i.outShape[4];for(let T=0;T<i.batchSize;++T){const I=T*w,A=T*n[0];for(let D=0;D<i.inChannels;++D)for(let M=0;M<i.outDepth;++M){const E=M*o-g;let k=E;for(;k<0;)k+=c;const N=Math.min(i.inDepth,d+E),z=I+M*_;for(let L=0;L<i.outHeight;++L){const $=L*a-m;let W=$;for(;W<0;)W+=u;const q=Math.min(i.inHeight,f+$),G=z+L*C;for(let j=0;j<i.outWidth;++j){const rt=j*l-x;let lt=rt;for(;lt<0;)lt+=h;const Y=Math.min(i.inWidth,p+rt),vt=G+j*S;let xt=v,mt=0,ft=0;for(let tt=k;tt<N;tt+=c){const ut=A+tt*n[1];for(let bt=W;bt<q;bt+=u){const Rt=ut+bt*n[2];for(let Ct=lt;Ct<Y;Ct+=h){const Ut=Rt+Ct*n[3],Ot=s[Ut+D];if(r==="max"&&Ot>xt?xt=Ot:r==="avg"&&(mt+=Ot,ft++),isNaN(xt))break}if(isNaN(xt))break}if(isNaN(xt))break}const it=vt+D;b[it]=r==="avg"?mt/ft:xt}}}}return y}function $K(s,t){const e=ve(t.outShape,"int32"),n=t.strideDepth,i=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,p=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let x=0;x<t.outDepth;++x){const v=x*n-d;let y=v;for(;y<0;)y+=o;const b=Math.min(t.inDepth,c+v);for(let w=0;w<t.outHeight;++w){const _=w*i-f;let C=_;for(;C<0;)C+=a;const S=Math.min(t.inHeight,u+_);for(let T=0;T<t.outWidth;++T){const I=T*r-p;let A=I;for(;A<0;)A+=l;const D=Math.min(t.inWidth,h+I);let M=Number.NEGATIVE_INFINITY,E=-1;for(let k=y;k<b;k+=o){const N=k-v;for(let z=C;z<S;z+=a){const L=z-_;for(let $=A;$<D;$+=l){const W=$-I,q=s.get(g,k,z,$,m);q>=M&&(M=q,E=N*u*h+L*u+W)}}}e.set(E,g,x,w,T,m)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Zt(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(as(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Ri(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))h=Lr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=le(i.shape),p=Vw(d,i.shape,i.dtype,f,u,"avg");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const FK={kernelName:Mm,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Zt(i,"avgPool3d");const u=ho(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=NN(h,i.shape,i.dtype,le(i.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const OK={kernelName:km,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Zt([i,r],"avgPool3DGrad");const u=ho(r.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,g=u.filterHeight,m=u.filterWidth,x=u.dilationDepth,v=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,_=u.effectiveFilterWidth,C=b-1-u.padInfo.front,S=_-1-u.padInfo.left,T=w-1-u.padInfo.top,I=ve(r.shape,"float32"),A=1/(p*g*m),D=e.bufferSync(i);for(let M=0;M<u.batchSize;++M)for(let E=0;E<u.inChannels;++E)for(let k=0;k<u.inDepth;++k)for(let N=0;N<u.inHeight;++N)for(let z=0;z<u.inWidth;++z){const L=k-C,$=N-T,W=z-S;let q=0;for(let G=0;G<b;G+=x){const j=(L+G)/h;if(!(j<0||j>=u.outDepth||Math.floor(j)!==j))for(let rt=0;rt<w;rt+=v){const lt=($+rt)/d;if(!(lt<0||lt>=u.outHeight||Math.floor(lt)!==lt))for(let Y=0;Y<_;Y+=y){const vt=(W+Y)/f;if(vt<0||vt>=u.outWidth||Math.floor(vt)!==vt)continue;const xt=D.get(M,j,lt,vt,E);q+=xt}}}I.set(q*A,M,k,N,z,E)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const BK={kernelName:fb,backendName:"cpu",kernelFunc:zK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Zt([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=Ri(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,y=v-1-u.padInfo.left,b=x-1-u.padInfo.top,w=ve(o.shape,"float32"),_=1/(f*p),C=e.data.get(i.dataId).values,S=ve(i.shape,"float32",C);for(let T=0;T<u.batchSize;++T)for(let I=0;I<u.inChannels;++I)for(let A=0;A<u.inHeight;++A)for(let D=0;D<u.inWidth;++D){const M=A-b,E=D-y;let k=0;for(let N=0;N<x;N+=g){const z=(M+N)/h;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let L=0;L<v;L+=m){const $=(E+L)/d;if($<0||$>=u.outWidth||Math.floor($)!==$)continue;const W=S.get(T,z,$,I);k+=W}}w.set(k*_,T,A,D,I)}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const VK={kernelName:db,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,scale:r,offset:o,mean:a,variance:l}=t;P(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Zt([i,a,l,r,o],"batchNorm");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=e.data.get(i.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,f=r?e.data.get(r.dataId).values:new Float32Array([1]),p=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=p.length,x=f.length,v=d.length,y=h.length;let b=0,w=0,_=0,C=0;for(let S=0;S<u.length;++S)g[S]=p[b++]+(u[S]-h[w++])*f[_++]/Math.sqrt(d[C++]+c),b>=m&&(b=0),w>=y&&(w=0),_>=x&&(_=0),C>=v&&(C=0);return e.makeTensorInfo(i.shape,i.dtype,g)}const GK={kernelName:Vm,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;Zt([i],"batchToSpaceND");const a=r.reduce((x,v)=>x*v),l=$d(i.shape,r,a),c=Ld(l.length,r.length),u=Fd(i.shape,r,a),h=Yy(o,r.length),d=Zy(u,o,r.length),f=Ke({inputs:{x:i},backend:e,attrs:{shape:l}}),p=Ts({inputs:{x:f},backend:e,attrs:{perm:c}}),g=Ke({inputs:{x:p},backend:e,attrs:{shape:u}}),m=rl({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const qK={kernelName:Nm,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=Pw(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const XK={kernelName:pb,backendName:"cpu",kernelFunc:jK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KK(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=pe(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const YK={kernelName:gI,backendName:"cpu",kernelFunc:KK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZK=Ve(Vh,(s,t)=>{const e=t;return s>e.clipValueMax?e.clipValueMax:s<e.clipValueMin?e.clipValueMin:s}),JK={kernelName:Vh,backendName:"cpu",kernelFunc:ZK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=s=>{const{x:t}=s.inputs,e=s.backend,n=new Float32Array(gt(t.shape)),i=e.data.get(t.dataId),r=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];n[c]=Math.hypot(u,h)}return e.makeOutput(n,t.shape,"float32")},tY={kernelName:Rm,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bc(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.imag,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const eY={kernelName:Ab,backendName:"cpu",kernelFunc:Bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uc(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=be(i,t[0].shape)[0],o=t.map(g=>g.shape);jy(o,r);let a=Ir(t.map(g=>g.shape),r);if(gt(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(g=>gt(g.shape)>0);if(l.length===1)return Lr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const g=l.map(b=>il({inputs:{input:b},backend:e})),m=l.map(b=>Bc({inputs:{input:b},backend:e})),x=Uc({inputs:g,backend:e,attrs:{axis:r}}),v=Uc({inputs:m,backend:e,attrs:{axis:r}}),y=Rs({inputs:{real:x,imag:v},backend:e});return g.forEach(b=>e.disposeIntermediateTensorInfo(b)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),y}const c=l.map(g=>{const x=[-1,gt(g.shape.slice(r))];return Ke({inputs:{x:g},backend:e,attrs:{shape:x}})}),u=c.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=Ir(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=OA(u,a,t[0].dtype,h),f=Ir(l.map(g=>g.shape),r),p=e.makeTensorInfo(f,t[0].dtype,d);return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const nY={kernelName:Dm,backendName:"cpu",kernelFunc:Uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n;Zt([i,r],"conv2d");const h=fo(l),d=Jn(i.shape,r.shape,o,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,x=d.padInfo.left,v=d.padInfo.top,y=d.dataFormat==="channelsLast",b=new ss(d.outShape,i.dtype),w=le(i.shape),_=le(r.shape),C=w[0],S=y?w[1]:w[2],T=y?w[2]:1,I=y?1:w[1],A=b.strides[0],D=y?b.strides[1]:b.strides[2],M=y?b.strides[2]:1,E=y?1:b.strides[1],k=e.data.get(i.dataId).values,N=e.data.get(r.dataId).values,z=b.values;for(let L=0;L<d.batchSize;++L){const $=L*C,W=L*A;for(let q=0;q<d.outHeight;++q){const G=W+q*D,j=q*d.strideHeight-v;for(let rt=0;rt<f;++rt){const lt=j+rt*g;if(lt<0||lt>=d.inHeight)continue;const Y=rt*_[0],vt=$+lt*S;for(let xt=0;xt<d.outWidth;++xt){const mt=G+xt*M,ft=xt*d.strideWidth-x;for(let it=0;it<p;++it){const tt=ft+it*m;if(tt<0||tt>=d.inWidth)continue;const ut=Y+it*_[1],bt=vt+tt*T;let Rt=ut;for(let Ct=0;Ct<d.inChannels;++Ct){const Ut=k[bt+Ct*I];for(let Ot=0;Ot<d.outChannels;++Ot)z[mt+Ot*E]+=Ut*N[Rt+Ot];Rt+=d.outChannels}}}}}}return e.makeTensorInfo(b.shape,b.dtype,z)}const sY={kernelName:$m,backendName:"cpu",kernelFunc:RN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n;Zt([i,r],"conv2dBackpropFilter");const h=fo(l),d=Jn(i.shape,u,o,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:g,filterWidth:m}=d,x=d.dataFormat==="channelsLast",v=new ss(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,w=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,C=new ss(i.shape,i.dtype,w),S=new ss(r.shape,r.dtype,_);for(let T=0;T<g;++T){const I=Math.max(0,Math.ceil((b-T)/f)),A=Math.min(d.outHeight,(d.inHeight+b-T)/f);for(let D=0;D<m;++D){const M=Math.max(0,Math.ceil((y-D)/p)),E=Math.min(d.outWidth,(d.inWidth+y-D)/p);for(let k=0;k<d.inChannels;++k)for(let N=0;N<d.outChannels;++N){let z=0;for(let L=0;L<d.batchSize;++L)for(let $=I;$<A;++$){const W=T+$*f-b;for(let q=M;q<E;++q){const G=D+q*p-y;x?z+=C.get(L,W,G,k)*S.get(L,$,q,N):z+=C.get(L,k,W,G)*S.get(L,N,$,q)}}v.set(z,T,D,k,N)}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const rY={kernelName:gb,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n;Zt([i,r],"conv2dBackpropInput");const h=le(r.shape),d=le(i.shape);let f=fo(c);const p=Jn(o,r.shape,a,1,l,u,!1,f),g=new ss(p.inShape,"float32"),m=g.values,x=e.data.get(i.dataId).values,v=e.data.get(r.dataId).values,[y,b,w]=h,{batchSize:_,filterHeight:C,filterWidth:S,inChannels:T,inHeight:I,inWidth:A,outChannels:D,outHeight:M,outWidth:E,strideHeight:k,strideWidth:N}=p;f=p.dataFormat;const z=C-1-p.padInfo.top,L=S-1-p.padInfo.left,$=f==="channelsLast",W=g.strides[0],q=$?g.strides[1]:g.strides[2],G=$?g.strides[2]:1,j=$?1:g.strides[1],rt=d[0],lt=$?d[1]:d[2],Y=$?d[2]:1,vt=$?1:d[1];for(let xt=0;xt<_;++xt)for(let mt=0;mt<T;++mt)for(let ft=0;ft<I;++ft){const it=ft-z,tt=Math.max(0,Math.ceil(it/k)),ut=Math.min(M,(C+it)/k);for(let bt=0;bt<A;++bt){const Rt=bt-L,Ct=Math.max(0,Math.ceil(Rt/N)),Ut=Math.min(E,(S+Rt)/N);let Ot=0;for(let se=tt;se<ut;++se){const re=se*k-it;for(let V=Ct;V<Ut;++V){const F=V*N-Rt,ct=rt*xt+lt*se+Y*V,_t=y*(C-1-re)+b*(S-1-F)+w*mt;for(let At=0;At<D;++At){const Lt=x[ct+vt*At],Gt=v[_t+At];Ot+=Lt*Gt}}}const Ht=W*xt+q*ft+G*bt+j*mt;m[Ht]=Ot}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const aY={kernelName:Lm,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n;Zt([i,r],"conv3d");const c=Yo(i.shape,r.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:g,padInfo:m}=c,x=m.front,v=m.left,y=m.top,b=new ss(c.outShape,i.dtype),w=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,C=b.values,S=le(i.shape),T=le(r.shape);for(let I=0;I<c.batchSize;++I){const A=I*S[0],D=I*b.strides[0];for(let M=0;M<c.outDepth;++M){const E=D+M*b.strides[1],k=M*c.strideDepth-x;for(let N=0;N<u;++N){const z=k+N*f;if(z<0||z>=c.inDepth)continue;const L=N*T[0],$=A+z*S[1];for(let W=0;W<c.outHeight;++W){const q=E+W*b.strides[2],G=W*c.strideHeight-y;for(let j=0;j<h;++j){const rt=G+j*p;if(rt<0||rt>=c.inHeight)continue;const lt=L+j*T[1],Y=$+rt*S[2];for(let vt=0;vt<c.outWidth;++vt){const xt=q+vt*c.outChannels,mt=vt*c.strideWidth-v;for(let ft=0;ft<d;++ft){const it=mt+ft*g;if(it<0||it>=c.inWidth)continue;const tt=lt+ft*T[2],ut=Y+it*c.inChannels;let bt=tt;for(let Rt=0;Rt<c.inChannels;++Rt){const Ct=w[ut+Rt];for(let Ut=0;Ut<c.outChannels;++Ut)C[xt+Ut]+=Ct*_[bt+Ut];bt+=c.outChannels}}}}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const cY={kernelName:Fm,backendName:"cpu",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n;Zt([i,r],"conv3dBackpropFilterV2");const c=le(i.shape),u=le(r.shape),h=Yo(i.shape,l,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,g=h.filterDepth,m=h.filterHeight,x=h.filterWidth,v=new ss(h.filterShape,"float32"),y=v.values,[b,w,_,C]=v.strides,S=e.data.get(r.dataId).values,[T,I,A,D]=u,M=e.data.get(i.dataId).values,[E,k,N,z]=c,L=h.padInfo.front,$=h.padInfo.left,W=h.padInfo.top;for(let q=0;q<g;++q){const G=Math.max(0,Math.ceil((L-q)/d)),j=Math.min(h.outDepth,(h.inDepth+L-q)/d),rt=q*b;for(let lt=0;lt<m;++lt){const Y=Math.max(0,Math.ceil((W-lt)/f)),vt=Math.min(h.outHeight,(h.inHeight+W-lt)/f),xt=lt*w+rt;for(let mt=0;mt<x;++mt){const ft=Math.max(0,Math.ceil(($-mt)/p)),it=Math.min(h.outWidth,(h.inWidth+$-mt)/p),tt=mt*_+xt;for(let ut=0;ut<h.inChannels;++ut){const bt=ut*C+tt;for(let Rt=0;Rt<h.outChannels;++Rt){let Ct=0;for(let Ut=0;Ut<h.batchSize;++Ut){const Ot=Ut*E,Ht=Ut*T;for(let se=G;se<j;++se){const V=(q+se*d-L)*k+Ot,F=se*I+Ht;for(let ct=Y;ct<vt;++ct){const At=(lt+ct*f-W)*N+V,Lt=ct*A+F;for(let Gt=ft;Gt<it;++Gt){const X=(mt+Gt*p-$)*z+At,Pt=Gt*D+Lt;Ct+=M[X+ut]*S[Pt+Rt]}}}}y[bt+Rt]=Ct}}}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const hY={kernelName:xb,backendName:"cpu",kernelFunc:uY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n;Zt([i],"conv3dBackpropInputV2");const c=le(i.shape),u=le(r.shape),h=Yo(l,r.shape,a,1,o),d=new ss(h.inShape,"float32"),f=d.values,[p,g,m,x]=d.strides,v=e.data.get(i.dataId).values,[y,b,w,_]=c,C=e.data.get(r.dataId).values,[S,T,I,A]=u,{batchSize:D,filterDepth:M,filterHeight:E,filterWidth:k,inChannels:N,inDepth:z,inHeight:L,inWidth:$,outChannels:W,outDepth:q,outHeight:G,outWidth:j,strideDepth:rt,strideHeight:lt,strideWidth:Y}=h,vt=M-1-h.padInfo.front,xt=E-1-h.padInfo.top,mt=k-1-h.padInfo.left;for(let ft=0;ft<D;++ft)for(let it=0;it<N;++it)for(let tt=0;tt<z;++tt){const ut=tt-vt,bt=Math.max(0,Math.ceil(ut/rt)),Rt=Math.min(q,(M+ut)/rt);for(let Ct=0;Ct<L;++Ct){const Ut=Ct-xt,Ot=Math.max(0,Math.ceil(Ut/lt)),Ht=Math.min(G,(E+Ut)/lt);for(let se=0;se<$;++se){const re=se-mt,V=Math.max(0,Math.ceil(re/Y)),F=Math.min(j,(k+re)/Y);let ct=0;for(let _t=bt;_t<Rt;++_t){const At=_t*rt-ut;for(let Lt=Ot;Lt<Ht;++Lt){const Gt=Lt*lt-Ut;for(let O=V;O<F;++O){const X=O*Y-re,Pt=y*ft+b*_t+w*Lt+_*O,Xt=S*(M-1-At)+T*(E-1-Gt)+I*(k-1-X)+A*it;for(let Wt=0;Wt<W;++Wt){const oe=v[Pt+Wt],ie=C[Xt+Wt];ct+=oe*ie}}}}f[p*ft+g*tt+m*Ct+x*se+it]=ct}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const fY={kernelName:vb,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY=Ve(Wh,s=>Math.cos(s)),mY={kernelName:Wh,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gY=Ve(Gh,s=>Math.cosh(s)),xY={kernelName:Gh,backendName:"cpu",kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,[u,h,d,f]=i.shape,p=r.shape[0],[g,m]=a,x=ve([p,g,m,f],"float32"),v=e.data.get(r.dataId).values,y=e.data.get(o.dataId).values,b=e.data.get(i.dataId).values,w=le(i.shape),_=le(x.shape);for(let C=0;C<p;C++){const S=C*4,T=v[S],I=v[S+1],A=v[S+2],D=v[S+3],M=y[C];if(M>=u)continue;const E=g>1?(A-T)*(h-1)/(g-1):0,k=m>1?(D-I)*(d-1)/(m-1):0;for(let N=0;N<g;N++){const z=g>1?T*(h-1)+N*E:.5*(T+A)*(h-1);if(z<0||z>h-1){for(let L=0;L<m;L++)for(let $=0;$<f;$++){const W=$+L*_[2]+N*_[1]+C*_[0];x.values[W]=c}continue}if(l==="bilinear"){const L=Math.floor(z),$=Math.ceil(z),W=z-L;for(let q=0;q<m;q++){const G=m>1?I*(d-1)+q*k:.5*(I+D)*(d-1);if(G<0||G>d-1){for(let Y=0;Y<f;Y++){const vt=Y+q*_[2]+N*_[1]+C*_[0];x.values[vt]=c}continue}const j=Math.floor(G),rt=Math.ceil(G),lt=G-j;for(let Y=0;Y<f;Y++){let vt=Y+j*w[2]+L*w[1]+M*w[0];const xt=b[vt];vt=Y+rt*w[2]+L*w[1]+M*w[0];const mt=b[vt];vt=Y+j*w[2]+$*w[1]+M*w[0];const ft=b[vt];vt=Y+rt*w[2]+$*w[1]+M*w[0];const it=b[vt],tt=xt+(mt-xt)*lt,ut=ft+(it-ft)*lt;vt=Y+q*_[2]+N*_[1]+C*_[0],x.values[vt]=tt+(ut-tt)*W}}}else for(let L=0;L<m;++L){const $=m>1?I*(d-1)+L*k:.5*(I+D)*(d-1);if($<0||$>d-1){for(let G=0;G<f;G++){const j=G+L*_[2]+N*_[1]+C*_[0];x.values[j]=c}continue}const W=Math.round($),q=Math.round(z);for(let G=0;G<f;G++){const j=G+W*w[2]+q*w[1]+M*w[0],rt=G+L*_[2]+N*_[1]+C*_[0];x.values[rt]=b[j]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const bY={kernelName:yb,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Zt(i,"cumprod");const l=un([r],i.shape.length);let c=i;l!=null&&(c=Ts({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=bn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=zs(c.dtype,"int32"),d=ab(gt(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,v)=>x+p-v-1:(x,v)=>x+v;for(let x=0;x<f.length;x+=p)for(let v=0;v<p;v++){const y=g(x,v);if(v===0)d[y]=o?1:f[y];else{const b=g(x,v-1);d[y]=o?f[b]*d[b]:f[y]*d[b]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Zo(l),v=Ts({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),v}return m}const wY={kernelName:bb,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Zt(i,"cumsum");const l=un([r],i.shape.length);let c=i;l!=null&&(c=Ts({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=bn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=zs(c.dtype,"int32"),d=rs(gt(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,v)=>x+p-v-1:(x,v)=>x+v;for(let x=0;x<f.length;x+=p)for(let v=0;v<p;v++){const y=g(x,v);if(v===0)d[y]=o?0:f[y];else{const b=g(x,v-1);d[y]=o?f[b]+d[b]:f[y]+d[b]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Zo(l),v=Ts({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),v}return m}const SY={kernelName:Pm,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Pw(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=FA(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const TY={kernelName:wb,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n;P(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,f=u/(r*r),p=e.data.get(i.dataId).values,g=new Float32Array(a*h*d*f);let m=0;for(let x=0;x<a;++x)for(let v=0;v<h;++v){const y=Math.floor(v/r),b=v%r;for(let w=0;w<d;++w){const _=Math.floor(w/r),C=w%r,S=(b*r+C)*f;for(let T=0;T<f;++T){const A=T+S+u*(_+c*(y+l*x));g[m++]=p[A]}}}return e.makeTensorInfo([a,h,d,f],i.dtype,g)}const EY={kernelName:_b,backendName:"cpu",kernelFunc:IY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;Zt([i,r],"depthwiseConv2DNative");const u=le(i.shape),h=le(r.shape);let d=l;d==null&&(d=[1,1]),P(as(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=Jn(i.shape,r.shape,o,d,a,c,!0),{filterHeight:p,filterWidth:g,dilationHeight:m,dilationWidth:x,padInfo:v}=f,y=v.left,b=v.top,w=f.outChannels/f.inChannels,_=new ss(f.outShape,i.dtype),C=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,T=_.values;for(let I=0;I<f.batchSize;++I){const A=I*u[0],D=I*_.strides[0];for(let M=0;M<f.outHeight;++M){const E=D+M*_.strides[1],k=M*f.strideHeight-b;for(let N=0;N<p;++N){const z=k+N*m;if(z<0||z>=f.inHeight)continue;const L=N*h[0],$=A+z*u[1];for(let W=0;W<f.outWidth;++W){const q=E+W*_.strides[2],G=W*f.strideWidth-y;for(let j=0;j<g;++j){const rt=G+j*x;if(rt<0||rt>=f.inWidth)continue;const lt=L+j*h[1],Y=$+rt*f.inChannels;let vt=q,xt=lt;for(let mt=0;mt<f.inChannels;++mt){const ft=C[Y+mt];for(let it=0;it<w;++it)T[vt+it]+=ft*S[xt+it];vt+=w,xt+=w}}}}}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const MY={kernelName:Om,backendName:"cpu",kernelFunc:DN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n;Zt([i,r],"depthwiseConv2dNativeBackpropFilter");const h=Jn(i.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:g}=h,m=new ss(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,y=h.outChannels/h.inChannels,b=e.data.get(i.dataId).values,w=new ss(i.shape,i.dtype,b),_=e.data.get(r.dataId).values,C=new ss(r.shape,r.dtype,_);for(let S=0;S<p;++S){const T=Math.max(0,Math.ceil((v-S)/d)),I=Math.min(h.outHeight,(h.inHeight+v-S)/d);for(let A=0;A<g;++A){const D=Math.max(0,Math.ceil((x-A)/f)),M=Math.min(h.outWidth,(h.inWidth+x-A)/f);for(let E=0;E<h.outChannels;++E){const k=Math.trunc(E/y),N=E%y;let z=0;for(let L=0;L<h.batchSize;++L)for(let $=T;$<I;++$){const W=S+$*d-v;for(let q=D;q<M;++q){const G=A+q*f-x;z+=w.get(L,W,G,k)*C.get(L,$,q,E)}}m.set(z,S,A,k,N)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const AY={kernelName:Sb,backendName:"cpu",kernelFunc:kY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n;Zt([i,r],"depthwiseConv2DNativeBackpropInput");const h=le(i.shape),d=le(r.shape),f=Jn(u,r.shape,o,a,l,c,!0),p=new ss(f.inShape,"float32"),g=p.values,[m,x,v]=p.strides,y=e.data.get(i.dataId).values,[b,w,_]=h,C=e.data.get(r.dataId).values,[S,T,I]=d,{batchSize:A,filterHeight:D,filterWidth:M,inChannels:E,inHeight:k,inWidth:N,outChannels:z,outHeight:L,outWidth:$,strideHeight:W,strideWidth:q}=f,G=D-1-f.padInfo.top,j=M-1-f.padInfo.left,rt=z/E;for(let lt=0;lt<A;++lt)for(let Y=0;Y<E;++Y)for(let vt=0;vt<k;++vt){const xt=vt-G,mt=Math.max(0,Math.ceil(xt/W)),ft=Math.min(L,(D+xt)/W);for(let it=0;it<N;++it){const tt=it-j,ut=Math.max(0,Math.ceil(tt/q)),bt=Math.min($,(M+tt)/q);let Rt=0;for(let Ct=mt;Ct<ft;++Ct){const Ut=Ct*W-xt;for(let Ot=ut;Ot<bt;++Ot){const Ht=Ot*q-tt,se=b*lt+w*Ct+_*Ot,re=S*(D-1-Ut)+T*(M-1-Ht)+I*Y;for(let V=0;V<rt;++V){const F=Y*rt+V,ct=y[se+F],_t=C[re+V];Rt+=ct*_t}}}g[m*lt+x*vt+v*it+Y]=Rt}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const RY={kernelName:Cb,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(s){const{inputs:t,backend:e}=s,{x:n}=t,i=gt(n.shape),r=e.data.get(n.dataId).values,o=ve([i,i],n.dtype),a=o.values;for(let c=0;c<r.length;c++)a[c*i+c]=r[c];const l=[...n.shape,...n.shape];return e.makeTensorInfo(l,o.dtype,o.values)}const $Y={kernelName:xI,backendName:"cpu",kernelFunc:DY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LY={kernelName:zm,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i}=s,{strides:r,pad:o,dilations:a}=e,l=t,c=l.data.get(n.dataId).values,u=n.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:f,inHeight:p,inWidth:g,inChannels:m,outHeight:x,outWidth:v,padInfo:y,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:C,dilationHeight:S,dilationWidth:T,outShape:I}=kd(n.shape,i.shape,r,o,"NHWC",a),A=gt(I),D=I.length,M=Sn(n.dtype,A);for(let k=0;k<f;++k)for(let N=0;N<x;++N){const z=N*b-y.top;for(let L=0;L<v;++L){const $=L*w-y.left;for(let W=0;W<m;++W){let q=Number.MIN_SAFE_INTEGER;for(let j=0;j<_;++j){const rt=z+j*S;if(rt>=0&&rt<p)for(let lt=0;lt<C;++lt){const Y=$+lt*T;if(Y>=0&&Y<g){const vt=Tr([k,rt,Y,W],u,le(n.shape)),xt=Tr([j,lt,W],d,le(i.shape)),mt=c[vt]+h[xt];mt>q&&(q=mt)}}}const G=Tr([k,N,L,W],D,le(I));M[G]=q}}}return{dataId:l.write(ml(M,n.dtype),I,n.dtype),shape:I,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY={kernelName:Qx,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Ki(n.shape,c.data.get(n.dataId).values),h=Ki(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:v,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:C,dilationWidth:S,outShape:T}=kd(n.shape,i.shape,o,a,"NHWC",l);P(r.rank===T.length,()=>`Error in ${Qx}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const I=Ki(T,c.data.get(r.dataId).values),A=hI(i.shape,i.dtype);for(let M=0;M<d;++M)for(let E=0;E<m;++E){const k=E*y-v.top;for(let N=0;N<x;++N){const z=N*b-v.left;for(let L=0;L<g;++L){let $=Number.MIN_SAFE_INTEGER,W=0,q=0;for(let G=0;G<w;++G){const j=k+G*C;if(j>=0&&j<f)for(let rt=0;rt<_;++rt){const lt=z+rt*S;if(lt>=0&&lt<p){const Y=u[M][j][lt][L]+h[G][rt][L];Y>$&&($=Y,W=G,q=rt)}}}A[W][q][L]+=I[M][E][N][L]}}}return{dataId:c.write(ml(A,n.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY={kernelName:Jx,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Ki(n.shape,c.data.get(n.dataId).values),h=Ki(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:v,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:C,dilationWidth:S,outShape:T}=kd(n.shape,i.shape,o,a,"NHWC",l);P(r.rank===T.length,()=>`Error in ${Jx}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const I=Ki(T,c.data.get(r.dataId).values),A=hI(n.shape,n.dtype);for(let M=0;M<d;++M)for(let E=0;E<m;++E){const k=E*y-v.top;for(let N=0;N<x;++N){const z=N*b-v.left;for(let L=0;L<g;++L){let $=Number.MIN_SAFE_INTEGER,W=k<0?0:k,q=z<0?0:z;for(let G=0;G<w;++G){const j=k+G*C;if(j>=0&&j<f)for(let rt=0;rt<_;++rt){const lt=z+rt*S;if(lt>=0&&lt<p){const Y=u[M][j][lt][L]+h[G][rt][L];Y>$&&($=Y,W=j,q=lt)}}}A[M][W][q][L]+=I[M][E][N][L]}}}return{dataId:c.write(ml(A,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hd(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Zt(i,"sum");let a;i.dtype==="bool"?a=Go({inputs:{x:i},backend:e,attrs:{dtype:"int32"}}):a=Lr({inputs:{x:i},backend:e});const l=a.shape.length,c=be(r,a.shape),u=un(c,l);let h=c,d=a;u!=null&&(d=Ts({inputs:{x:a},backend:e,attrs:{perm:u}}),h=bn(h.length,l)),Qn("sum",h,d.shape.length);const[f,p]=Vn(d.shape,h),g=zs(d.dtype,"int32");let m=Zp(e,f,g);const x=gt(p),v=e.data.get(m.dataId).values,y=e.data.get(d.dataId).values;for(let b=0;b<v.length;++b){const w=b*x;let _=0;for(let C=0;C<x;++C)_+=y[w+C];v[b]=_}if(o){const b=vn(m.shape,c),w=m;m=Ke({inputs:{x:m},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(w)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(d),m}const OY={kernelName:vg,backendName:"cpu",kernelFunc:Hd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=rw(i,r.length);aw(o.length,l,r);const{path:c,steps:u}=lw(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:v}=ow(f,l[m]);let y;cw(x)?y=r[m]:(y=Ts({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(y));const b=y.shape.slice();for(let w=0;w<v.length;++w)b.splice(v[w],0,1);Le(y.shape,b)||(y=Ke({inputs:{x:y},backend:e,attrs:{shape:b}}),p.push(y)),d===null?d=y:(d=Zg({inputs:{a:y,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=Hd({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const BY={kernelName:vI,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(s){const{inputs:t,backend:e}=s,{dy:n,y:i}=t;Zt([n,i],"eluGrad");const r=new Float32Array(gt(i.shape)),o=e.data.get(i.dataId).values,a=e.data.get(n.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=1?r[l]=a[l]:r[l]=a[l]*(c+1)}return e.makeTensorInfo(i.shape,"float32",r)}const VY={kernelName:Tb,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WY=Jy,GY=Qy,HY=tw,qY=ew,jY=nw,XY=sw,KY=Ve(jh,s=>{const t=Math.sign(s),e=Math.abs(s),n=1/(1+WY*e);return t*(1-((((XY*n+jY)*n+qY)*n+HY)*n+GY)*n*Math.exp(-e*e))}),YY={kernelName:jh,backendName:"cpu",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tm(s){const{inputs:t,backend:e,attrs:n}=s,{input:i}=t,{dim:r}=n,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(P(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),Ke({inputs:{x:i},backend:e,attrs:{shape:a}})}const ZY={kernelName:Um,backendName:"cpu",kernelFunc:tm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=Cn((s,t)=>s/t),Ww=Wn(Hh,JY),kv={kernelName:Hh,backendName:"cpu",kernelFunc:Ww};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(s,t,e){const n=s.shape,i=n[0],r=n[1],o=e.data.get(s.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[i,r],u=gt(c),h=Kn("float32",u),d=Kn("float32",u);for(let m=0;m<i;m++){const x=rl({inputs:{x:a},backend:e,attrs:{begin:[m,0],size:[1,r]}}),v=rl({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,r]}}),y=Rs({inputs:{real:x,imag:v},backend:e}),{real:b,imag:w}=QY(y,t,e),_=co(b,w);for(let C=0;C<r;C++){const S=iw(_,C);h[m*r+C]=S.real,d[m*r+C]=S.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(y)}const f=e.makeTensorInfo(c,"float32",h),p=e.makeTensorInfo(c,"float32",d),g=Rs({inputs:{real:f,imag:p},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}function QY(s,t,e){const n=gt(s.shape),i=e.data.get(s.dataId),r=e.data.get(i.complexTensorInfos.real.dataId).values,o=e.data.get(i.complexTensorInfos.imag.dataId).values;if(tZ(n)){const a=Av(r,o,n,t,e),l=[s.shape[0],s.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",Ko(n,"float32")),d=Lr({inputs:{x:h},backend:e}),f=kv.kernelFunc({inputs:{a:c,b:h},backend:e}),p=kv.kernelFunc({inputs:{a:u,b:d},backend:e}),g=e.data.get(f.dataId).values,m=e.data.get(p.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),{real:g,imag:m}}return a}else{const a=co(r,o),l=eZ(a,n,t);return nM(l)}}function tZ(s){return(s&s-1)===0}function Av(s,t,e,n,i){if(e===1)return{real:s,imag:t};const r=co(s,t),o=e/2,a=sM(r),l=a.real,c=a.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),f=Rs({inputs:{real:h,imag:d},backend:i}),p=iM(r),g=p.real,m=p.imag,x=[g.length],v=i.makeTensorInfo(x,"float32",g),y=i.makeTensorInfo(x,"float32",m),b=Rs({inputs:{real:v,imag:y},backend:i}),w=Av(l,c,o,n,i),_=w.real,C=w.imag,S=[_.length],T=i.makeTensorInfo(S,"float32",_),I=i.makeTensorInfo(S,"float32",C),A=Rs({inputs:{real:T,imag:I},backend:i}),D=Av(g,m,o,n,i),M=D.real,E=D.imag,k=[M.length],N=i.makeTensorInfo(k,"float32",M),z=i.makeTensorInfo(k,"float32",E),L=Rs({inputs:{real:N,imag:z},backend:i}),$=oM(e,n),W=[$.real.length],q=i.makeTensorInfo(W,"float32",$.real),G=i.makeTensorInfo(W,"float32",$.imag),j=Rs({inputs:{real:q,imag:G},backend:i}),rt=Zg({inputs:{a:j,b:L},backend:i}),lt=zc({inputs:{a:A,b:rt},backend:i}),Y=Uw({inputs:{a:A,b:rt},backend:i}),vt=il({inputs:{input:lt},backend:i}),xt=il({inputs:{input:Y},backend:i}),mt=Bc({inputs:{input:lt},backend:i}),ft=Bc({inputs:{input:Y},backend:i}),it=Uc({inputs:[vt,xt],backend:i,attrs:{axis:0}}),tt=Uc({inputs:[mt,ft],backend:i,attrs:{axis:0}}),ut=i.data.get(it.dataId).values,bt=i.data.get(tt.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(rt),i.disposeIntermediateTensorInfo(lt),i.disposeIntermediateTensorInfo(Y),i.disposeIntermediateTensorInfo(vt),i.disposeIntermediateTensorInfo(mt),i.disposeIntermediateTensorInfo(xt),i.disposeIntermediateTensorInfo(ft),i.disposeIntermediateTensorInfo(it),i.disposeIntermediateTensorInfo(tt),{real:ut,imag:bt}}function eZ(s,t,e){const n=new Float32Array(t*2);for(let i=0;i<t;i++){let r=0,o=0;for(let a=0;a<t;a++){const l=aM(i*a,t,e),c=iw(s,a);r+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}e&&(r/=t,o/=t),rM(n,r,o,i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(s){const{inputs:t,backend:e}=s,{input:n}=t,i=gt(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ke({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=$N(a,!1,e),c=Ke({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const sZ={kernelName:Ib,backendName:"cpu",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(s){const{backend:t,attrs:e}=s,{shape:n,value:i,dtype:r}=e,o=r||Rh(i),a=Sn(o,gt(n));return rZ(a,i,o),t.makeTensorInfo(n,o,a)}const iZ={kernelName:Eb,backendName:"cpu",kernelFunc:Gw};function rZ(s,t,e){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oZ={kernelName:Mb,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,i=e,r=Kn(n.dtype,gt(n.shape)),[o,a,l,c]=n.shape,u=i.data.get(n.dataId).values;for(let d=0;d<o;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const g=p*(l*c);for(let m=0;m<l;m++){const x=m*c;for(let v=0;v<c;v++){const y=Math.round(l-m-1),b=f+g+x+v;let w=u[b];if(y>=0&&y<l){const _=y*c,C=f+g+_+v;w=u[C]}r[b]=w}}}}return{dataId:i.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ=Cn((s,t)=>Math.floor(s/t)),lZ=Wn(Zh,aZ,null,"int32"),cZ={kernelName:Zh,backendName:"cpu",kernelFunc:lZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=RN({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=Ke({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=zc({inputs:{a:g,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else g=zc({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(f){const m=g;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Ke({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=Qp(e,g,f,x,p),e.disposeIntermediateTensorInfo(x)}else g=Qp(e,g,f,a,p);e.disposeIntermediateTensorInfo(m)}return g}const hZ={kernelName:Np,backendName:"cpu",kernelFunc:uZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=DN({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=zc({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(f){const m=g;g=Qp(e,g,f,a,p),e.disposeIntermediateTensorInfo(m)}return g}const fZ={kernelName:kI,backendName:"cpu",kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=gt(n.shape),o=i.shape,a=o[o.length-1],[l,c,u,h]=ry(n,i);if(c===0)return e.makeTensorInfo(l,n.dtype,[]);const d=e.data.get(i.dataId).values,f=e.bufferSync(n),p=HA(d,f,n.dtype,c,a,u,h,n.shape,r);return e.makeTensorInfo(l,n.dtype,p.values)}const mZ={kernelName:bI,backendName:"cpu",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n;Zt([i,r],"gatherV2");const l=be(o,i.shape)[0],c=e.data.get(r.dataId).values,u=i.shape[l];for(let b=0;b<c.length;++b){const w=c[b];P(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=gt(r.shape),f=hw(i,r,l,h),p=Ke({inputs:{x:i},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Ke({inputs:{x:r},backend:e,attrs:{shape:[f.batchSize,d/f.batchSize]}}),m=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=e.bufferSync(g),v=e.bufferSync(p),y=qA(v,x,m);return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(f.outputShape,y.dtype,y.values)}const xZ={kernelName:Wm,backendName:"cpu",kernelFunc:gZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(s){const{inputs:t,backend:e}=s,{input:n}=t,i=gt(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ke({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=$N(a,!0,e),c=Ke({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const bZ={kernelName:kb,backendName:"cpu",kernelFunc:vZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yZ=Ve(td,s=>Number.isFinite(s)?1:0,"bool"),wZ={kernelName:td,backendName:"cpu",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Z=Ve(ed,s=>Math.abs(s)===1/0?1:0,"bool"),SZ={kernelName:ed,backendName:"cpu",kernelFunc:_Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CZ=Ve(nd,s=>Number.isNaN(s)?1:0,"bool"),TZ={kernelName:nd,backendName:"cpu",kernelFunc:CZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=ZA(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const EZ={kernelName:yI,backendName:"cpu",kernelFunc:IZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ=Ve(id,s=>Math.log1p(s)),kZ={kernelName:id,backendName:"cpu",kernelFunc:MZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ=Cn((s,t)=>s&&t),NZ=Wn(Xm,AZ,null,"bool"),RZ={kernelName:Xm,backendName:"cpu",kernelFunc:NZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DZ=Ve(Km,s=>s?0:1,"bool"),$Z={kernelName:Km,backendName:"cpu",kernelFunc:DZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LZ=Cn((s,t)=>s||t),FZ=Wn(Ym,LZ,null,"bool"),PZ={kernelName:Ym,backendName:"cpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n;Zt(i,"LRN");const c=i.shape[3],u=c-1,h=e.data.get(i.dataId).values,d=gt(i.shape),f=new Float32Array(d);function p(g){const m=g%c;let x=g-m+Math.max(0,m-r);const v=g-m+Math.min(m+r,u);let y=0;for(;x<=v;x++){const b=h[x];y+=b*b}return y}for(let g=0;g<d;g++){const m=p(g),x=h[g]*Math.pow(o+a*m,-l);f[g]=x}return e.makeTensorInfo(i.shape,i.dtype,f)}const zZ={kernelName:Zm,backendName:"cpu",kernelFunc:OZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n;Zt(o,"LRNGrad");const h=gt(o.shape),d=o.shape[3],f=e.data.get(o.dataId).values,p=e.data.get(i.dataId).values,g=e.data.get(r.dataId).values,m=new Float32Array(h),x=h;for(let v=0;v<x;v++){const y=v%d,b=v-y+Math.max(0,y-a),w=v-y+Math.min(d,y+a+1);let _=0;for(let C=b;C<w;C++)_+=Math.pow(p[C],2);_=c*_+l;for(let C=b;C<w;C++){let S=-2*c*u*p[C]*g[v]/_;v===C&&(S+=Math.pow(_,-u)),S*=f[v],m[C]+=S}}return e.makeTensorInfo(o.shape,i.dtype,m)}const UZ={kernelName:Nb,backendName:"cpu",kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=e;let l=i.shape;const c=l.length,u=be(r,l);let h=u;const d=un(h,c);let f=a.data.get(i.dataId).values;if(d!=null){const b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[d[w]];f=zw(f,l,i.dtype,d,b),h=bn(h.length,c),l=b}Zt(i,"max"),Qn("max",h,c);const[p,g]=Vn(l,h),m=gt(g),x=QA(f,m,p,i.dtype),v=a.write(x,p,i.dtype);let y=p;return o&&(y=vn(p,u)),{dataId:v,shape:y,dtype:i.dtype}}const VZ={kernelName:Jm,backendName:"cpu",kernelFunc:LN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Zt(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(as(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Ri(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))h=Lr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=le(i.shape),p=Vw(d,i.shape,i.dtype,f,u,"max");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const GZ={kernelName:Qm,backendName:"cpu",kernelFunc:WZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Zt(i,"maxPool3d");const u=ho(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=NN(h,i.shape,i.dtype,le(i.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const qZ={kernelName:tg,backendName:"cpu",kernelFunc:HZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jZ(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Zt([i,r],"maxPool3DGrad");const u=ho(r.shape,o,a,1,l,c),h=e.bufferSync(r),d=$K(h,u),f=u.strideDepth,p=u.strideHeight,g=u.strideWidth,m=u.dilationDepth,x=u.dilationHeight,v=u.dilationWidth,y=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,_=y-1-u.padInfo.front,C=w-1-u.padInfo.left,S=b-1-u.padInfo.top,T=ve(r.shape,"float32"),I=e.bufferSync(i);for(let A=0;A<u.batchSize;++A)for(let D=0;D<u.inChannels;++D)for(let M=0;M<u.inDepth;++M)for(let E=0;E<u.inHeight;++E)for(let k=0;k<u.inWidth;++k){const N=M-_,z=E-S,L=k-C;let $=0;for(let W=0;W<y;W+=m){const q=(N+W)/f;if(!(q<0||q>=u.outDepth||Math.floor(q)!==q))for(let G=0;G<b;G+=x){const j=(z+G)/p;if(!(j<0||j>=u.outHeight||Math.floor(j)!==j))for(let rt=0;rt<w;rt+=v){const lt=(L+rt)/g;if(lt<0||lt>=u.outWidth||Math.floor(lt)!==lt)continue;const Y=y*b*w-1-d.get(A,q,j,lt,D),vt=W*b*w+G*w+rt,xt=Y===vt?1:0;if(xt===0)continue;const mt=I.get(A,q,j,lt,D);$+=mt*xt}}}T.set($,A,M,E,k,D)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const XZ={kernelName:Db,backendName:"cpu",kernelFunc:jZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KZ(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Zt([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=Ri(a.shape,l,c,1,u,h),f=e.data.get(a.dataId).values,p=ve(d.outShape,a.dtype,AN(f,a.shape,a.dtype,d).values),g=d.strideHeight,m=d.strideWidth,x=d.dilationHeight,v=d.dilationWidth,y=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,_=y-1-d.padInfo.top,C=ve(a.shape,"float32"),S=e.data.get(i.dataId).values,T=ve(i.shape,"float32",S);for(let I=0;I<d.batchSize;++I)for(let A=0;A<d.inChannels;++A)for(let D=0;D<d.inHeight;++D)for(let M=0;M<d.inWidth;++M){const E=D-_,k=M-w;let N=0;for(let z=0;z<y;z+=x){const L=(E+z)/g;if(!(L<0||L>=d.outHeight||Math.floor(L)!==L))for(let $=0;$<b;$+=v){const W=(k+$)/m;if(W<0||W>=d.outWidth||Math.floor(W)!==W)continue;const q=y*b-1-p.get(I,L,W,A),G=z*b+$,j=q===G?1:0;if(j===0)continue;const rt=T.get(I,L,W,A);N+=rt*j}}C.set(N,I,D,M,A)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const YZ={kernelName:Rb,backendName:"cpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZ(s,t,e,n,i){const r=le(t),o=Vw(s,t,e,r,i,"max"),a=AN(s,t,e,i,!0,n);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JZ={kernelName:wI,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;Zt(n,"MaxPoolWithArgmax");const c=l.data.get(n.dataId).values,u=Ri(n.shape,i,r,[1,1],o),[h,d]=ZZ(c,n.shape,n.dtype,a,u),f=l.write(h,u.outShape,n.dtype),p=l.write(d,u.outShape,n.dtype);return[{dataId:f,shape:u.outShape,dtype:n.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=be(r,i.shape),c=Vn(i.shape,a)[1],u=gt(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=Go({inputs:{x:i},backend:e,attrs:{dtype:"float32"}});h.push(f);const p=Ww({inputs:{a:f,b:d},backend:e});h.push(p);const g=Hd({inputs:{x:p},backend:e,attrs:{axis:r,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}const tJ={kernelName:eg,backendName:"cpu",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Zt(i,"min");const a=be(r,i.shape);let l=a;const c=un(l,i.shape.length);let u=i;c!=null&&(u=Ts({inputs:{x:i},backend:e,attrs:{perm:c}}),l=bn(l.length,i.shape.length)),Qn("min",l,u.shape.length);const[h,d]=Vn(u.shape,l),f=gt(d),p=rs(gt(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let y=g[v];for(let b=0;b<f;++b){const w=g[v+b];(Number.isNaN(w)||w<y)&&(y=w)}p[x]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=vn(h,a),v=Ke({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const nJ={kernelName:ng,backendName:"cpu",kernelFunc:eJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,mode:o}=n;Zt(i,"mirrorPad");const a=r.map((y,b)=>y[0]+i.shape[b]+y[1]),l=r.map(y=>y[0]),c=r.map((y,b)=>y[0]+i.shape[b]),u=o==="reflect"?0:1,h=e.data.get(i.dataId).values,d=i.shape.length,f=le(i.shape),p=gt(a),g=a.length,m=le(a),x=Kn(i.dtype,p);for(let y=0;y<p;y++){let b=tu(y,g,m);for(let _=0;_<g;_++)b[_]<l[_]?b[_]=l[_]*2-b[_]-u:b[_]>=c[_]&&(b[_]=(c[_]-1)*2-b[_]+u);b=b.map((_,C)=>_-l[C]);const w=Tr(b,d,f);x[y]=h[w]}return{dataId:e.write(x,a,i.dtype),shape:a,dtype:i.dtype}}const iJ={kernelName:sg,backendName:"cpu",kernelFunc:sJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=Cn((s,t)=>{const e=s%t;return s<0&&t<0||s>=0&&t>=0?e:(e+t)%t}),oJ=Wn(ad,rJ),aJ={kernelName:ad,backendName:"cpu",kernelFunc:oJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=i.shape.length;let a=r;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=be([a],i.shape),c=LN({inputs:{x:i},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=vn(c.shape,l),h=Ke({inputs:{x:c},backend:e,attrs:{shape:u}}),d=Uw({inputs:{a:i,b:h},backend:e}),f=VA({inputs:{x:d},backend:e}),p=Hd({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),g=Ke({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Ww({inputs:{a:f,b:g},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const lJ={kernelName:wg,backendName:"cpu",kernelFunc:FN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n;Zt(i,"multinomial");const l=a?i:FN({inputs:{logits:i},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,r],f=rs(gt(d),"int32");for(let p=0;p<c;++p){const g=p*u,m=new Float32Array(u-1);m[0]=h[g];for(let y=1;y<m.length;++y)m[y]=m[y-1]+h[g+y];const x=My.alea(o.toString()),v=p*r;for(let y=0;y<r;++y){const b=x();f[v+y]=m.length;for(let w=0;w<m.length;w++)if(b<m[w]){f[v+y]=w;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",f)}const uJ={kernelName:_I,backendName:"cpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hJ=Py;function dJ(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n;Zt(i,"NonMaxSuppression");const c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,{selectedIndices:h}=hJ(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const fJ={kernelName:$b,backendName:"cpu",kernelFunc:dJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ=Oy;function mJ(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n;Zt(i,"NonMaxSuppressionPadded");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,{selectedIndices:d,validOutputs:f}=pJ(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const gJ={kernelName:Lb,backendName:"cpu",kernelFunc:mJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ=zy;function vJ(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n;Zt(i,"NonMaxSuppressionWithScore");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=xJ(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const bJ={kernelName:Fb,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yJ(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n;Zt(i,"oneHot");const c=gt(i.shape),u=new Float32Array(c*o);u.fill(l);const h=e.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return e.makeTensorInfo([...i.shape,o],r,u)}const wJ={kernelName:ag,backendName:"cpu",kernelFunc:yJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function em(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){const i=il({inputs:{input:n},backend:e}),r=em({inputs:{x:i},backend:e}),o=Bc({inputs:{input:n},backend:e}),a=em({inputs:{x:o},backend:e}),l=Rs({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Gw({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}const _J={kernelName:Cg,backendName:"cpu",kernelFunc:em};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){const i=il({inputs:{input:n},backend:e}),r=PN({inputs:{x:i},backend:e}),o=Bc({inputs:{input:n},backend:e}),a=em({inputs:{x:o},backend:e}),l=Rs({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Gw({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}const SJ={kernelName:og,backendName:"cpu",kernelFunc:PN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return tm({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{Ni(r,u.shape,"All tensors passed to stack must have matching shapes"),P(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=tm({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=Uc({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const CJ={kernelName:lg,backendName:"cpu",kernelFunc:ON};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;Zt(i,"pad");const a=r.map((v,y)=>v[0]+i.shape[y]+v[1]),l=r.map(v=>v[0]),c=e.data.get(i.dataId).values,u=gt(i.shape),h=i.shape.length,d=le(i.shape),f=gt(a),p=a.length,g=le(a),m=Kn(i.dtype,f);o!==0&&m.fill(o);for(let v=0;v<u;v++){const b=tu(v,h,d).map((_,C)=>_+l[C]),w=Tr(b,p,g);m[w]=c[v]}return{dataId:e.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const zN={kernelName:cg,backendName:"cpu",kernelFunc:TJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ=Cn((s,t)=>Math.pow(s,t)),EJ=Wn(cd,IJ),MJ={kernelName:cd,backendName:"cpu",kernelFunc:EJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kJ(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,a=i.map(m=>e.data.get(m.dataId).values),l=i.map(m=>m.shape),c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[h,d,f]=rN(a,l,c,r.shape,r.dtype,u,o.shape),p=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(f,r.dtype,d);return p.concat([g])}const AJ={kernelName:SI,backendName:"cpu",kernelFunc:kJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NJ(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=oN(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const RJ={kernelName:CI,backendName:"cpu",kernelFunc:NJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a.map(m=>e.data.get(m.dataId).values),f=a.map(m=>m.shape),[p,g]=aN(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const $J={kernelName:TI,backendName:"cpu",kernelFunc:DJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(s){const{backend:t,attrs:e}=s,{start:n,stop:i,dtype:r,step:o}=e,a=lN(n,i,o,r);return t.makeTensorInfo([a.length],r,a)}const FJ={kernelName:Pb,backendName:"cpu",kernelFunc:LJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PJ=Ve(ud,s=>1/s),OJ={kernelName:ud,backendName:"cpu",kernelFunc:PJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Zt(i,"resizeBilinear");const l=le(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(gt([h,c,u,p])),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],v=[r&&c>1?c-1:c,r&&u>1?u-1:u];let y=0;const b=x[0]/v[0],w=x[1]/v[1];for(let _=0;_<h;_++)for(let C=0;C<c;C++){let S;o?S=b*(C+.5)-.5:S=b*C;const T=Math.max(0,Math.floor(S)),I=S-T,A=Math.min(d-1,Math.ceil(S)),D=_*l[0]+T*l[1],M=_*l[0]+A*l[1];for(let E=0;E<u;E++){let k;o?k=w*(E+.5)-.5:k=w*E;const N=Math.max(0,Math.floor(k)),z=k-N,L=Math.min(f-1,Math.ceil(k)),$=D+N*l[2],W=M+N*l[2],q=D+L*l[2],G=M+L*l[2];for(let j=0;j<p;j++){const rt=g[$+j],lt=g[W+j],Y=g[q+j],vt=g[G+j],xt=rt+(Y-rt)*z,mt=lt+(vt-lt)*z,ft=xt+(mt-xt)*I;m[y++]=ft}}}return e.makeTensorInfo([h,c,u,p],"float32",m)}const BJ={kernelName:pg,backendName:"cpu",kernelFunc:zJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Zt([r,i],"resizeBilinearGrad");const a=le(i.shape),[l,c,u,h]=i.shape,[,d,f]=r.shape,p=new Float32Array(l*c*u*h),g=[o&&d>1?c-1:c,o&&f>1?u-1:u],m=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=g[0]/m[0],v=g[1]/m[1],y=e.data.get(r.dataId).values;let b=0;for(let w=0;w<l;w++){const _=w*a[0];for(let C=0;C<d;C++){const S=C*x,T=Math.floor(S),I=Math.min(Math.ceil(S),c-1),A=_+T*a[1],D=_+I*a[1],M=S-T,E=1-M;for(let k=0;k<f;k++){const N=k*v,z=Math.floor(N),L=Math.min(Math.ceil(N),u-1),$=N-z,W=1-$,q=A+z*a[2],G=A+L*a[2],j=D+z*a[2],rt=D+L*a[2],lt=E*W,Y=E*$,vt=M*W,xt=M*$;for(let mt=0;mt<h;mt++){const ft=y[b++];p[q+mt]+=ft*lt,p[G+mt]+=ft*Y,p[j+mt]+=ft*vt,p[rt+mt]+=ft*xt}}}}return e.makeTensorInfo([l,u,c,h],"float32",p)}const VJ={kernelName:Bb,backendName:"cpu",kernelFunc:UJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Zt(i,"resizeNearestNeighbor");const l=le(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(h*c*u*p),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],v=[r&&c>1?c-1:c,r&&u>1?u-1:u],y=x[0]/v[0],b=x[1]/v[1];let w=0;for(let _=0;_<h;_++){const C=_*l[0];for(let S=0;S<c;S++){const T=o?y*(S+.5):y*S;let I=Math.min(d-1,r?Math.round(T):Math.floor(T));o&&(I=Math.max(0,I));const A=C+I*l[1];for(let D=0;D<u;D++){const M=o?b*(D+.5):b*D;let E=Math.min(f-1,r?Math.round(M):Math.floor(M));o&&(E=Math.max(0,E));const k=A+E*l[2];for(let N=0;N<p;N++){const z=g[k+N];m[w++]=z}}}}return e.makeTensorInfo([h,c,u,p],i.dtype,m)}const GJ={kernelName:fg,backendName:"cpu",kernelFunc:WJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HJ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Zt([r,i],"resizeNearestNeighborGrad");const a=le(i.shape),l=le(r.shape),[c,u,h,d]=i.shape,[,f,p]=r.shape,g=new Float32Array(c*u*h*d),m=e.data.get(r.dataId).values,x=[o&&f>1?u-1:u,o&&p>1?h-1:h],v=[o&&f>1?f-1:f,o&&p>1?p-1:p],y=x[0]/v[0],b=x[1]/v[1],w=1/y,_=1/b,C=Math.ceil(w)*2+2,S=Math.ceil(_)*2+2;for(let T=0;T<c;T++){const I=T*a[0];for(let A=0;A<u;A++){const D=I+A*a[1],M=Math.floor(A*w),E=Math.floor(M-C/2);for(let k=0;k<h;k++){const N=D+k*a[2],z=Math.floor(k*_),L=Math.floor(z-S/2);for(let $=0;$<d;$++){let W=0;for(let q=0;q<C;q++){const G=q+E;if(G<0||G>=f)continue;const j=I+G*l[1],rt=G*y,lt=Math.min(u-1,o?Math.round(rt):Math.floor(rt));if(A===lt)for(let Y=0;Y<S;Y++){const vt=Y+L;if(vt<0||vt>=p)continue;const xt=j+vt*l[2],mt=vt*b,ft=Math.min(h-1,o?Math.round(mt):Math.floor(mt));k===ft&&(W+=m[xt+$])}}g[N+$]=W}}}}return e.makeTensorInfo(i.shape,i.dtype,g)}const qJ={kernelName:zb,backendName:"cpu",kernelFunc:HJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n;Zt(i,"reverse");const o=i.shape.length,a=be(r,i.shape);if(o===0)return Lr({inputs:{x:i},backend:e});const l=new ss(i.shape,i.dtype),c=e.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=i.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const XJ={kernelName:mg,backendName:"cpu",kernelFunc:jJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KJ={kernelName:Qb,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=Kn(n.dtype,gt(n.shape)),[c,u,h,d]=n.shape,[f,p]=Ky(o,u,h),g=255,m=Math.sin(i),x=Math.cos(i),v=a.data.get(n.dataId).values;for(let b=0;b<c;b++){const w=b*h*u*d;for(let _=0;_<u;_++){const C=_*(h*d);for(let S=0;S<h;S++){const T=S*d;for(let I=0;I<d;I++){const A=[c,_,S,I],D=A[2],M=A[1];let E=(D-f)*x-(M-p)*m,k=(D-f)*m+(M-p)*x;E=Math.round(E+f),k=Math.round(k+p);let N=r;if(typeof r!="number"&&(I===3?N=g:N=r[I]),E>=0&&E<h&&k>=0&&k<u){const L=k*(h*d),$=E*d,W=w+L+$+I;N=v[W]}const z=w+C+T+I;l[z]=N}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YJ=Ve(fd,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2===0?t:t+1}),ZJ={kernelName:fd,backendName:"cpu",kernelFunc:YJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JJ(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Md(r,i,o),d=!0,f=e.bufferSync(i),p=e.bufferSync(r),g=cc(f,p,o,h,c,l,a,u,0,d);return e.makeTensorInfo(o,g.dtype,g.values)}const QJ={kernelName:II,backendName:"cpu",kernelFunc:JJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tQ(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<t?e=i+1:n=i;return n}function eQ(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<=t?e=i+1:n=i;return n}function nQ(s,t,e,n,i,r){const o=Sn("int32",e*i);for(let a=0;a<e;++a){const l=s.slice(a*n,(a+1)*n),c=a*i;for(let u=0;u<i;++u)o[c+u]=r==="left"?tQ(l,t[u+c]):eQ(l,t[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sQ(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=nQ(a,l,i.shape[0],i.shape[1],r.shape[1],o);return e.makeTensorInfo(r.shape,"int32",c)}const iQ={kernelName:EI,backendName:"cpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t;Zt([n,i,r],"select");const o=n.shape.length,a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=zs(i.dtype,r.dtype),h=rs(gt(i.shape),u);let d=0;const f=o===0||o>1||i.shape.length===1?1:gt(i.shape.slice(1));for(let p=0;p<a.length;p++)for(let g=0;g<f;g++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return e.makeTensorInfo(i.shape,u,h)}const oQ={kernelName:gg,backendName:"cpu",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aQ=Og,lQ=zg,cQ=Ve(md,s=>s>=0?lQ*s:aQ*(Math.exp(s)-1)),uQ={kernelName:md,backendName:"cpu",kernelFunc:cQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hQ=Ve(vd,s=>s<0?-1:s>0?1:0),dQ={kernelName:vd,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fQ=Ve(gd,s=>Math.sin(s)),pQ={kernelName:gd,backendName:"cpu",kernelFunc:fQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mQ=Ve(xd,s=>Math.sinh(s)),gQ={kernelName:xd,backendName:"cpu",kernelFunc:mQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xQ=11920928955078125e-23,WC=Math.log(xQ)+2,vQ=Ve(yd,s=>{const t=s>-WC,e=s<WC,n=Math.exp(s);let i;return e?i=n:t?i=s:i=Math.log(1+n),i}),bQ={kernelName:yd,backendName:"cpu",kernelFunc:vQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;Zt([i],"spaceToBatchND");const a=gt(r),l=[[0,0]];l.push(...o);for(let _=1+r.length;_<i.shape.length;++_)l.push([0,0]);const c=zN.kernelFunc({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),u=$d(c.shape,r,a,!1),h=Ld(u.length,r.length,!1),d=Fd(c.shape,r,a,!1),g=Ke({inputs:{x:c},backend:e,attrs:{shape:u}}),v=Ts({inputs:{x:g},backend:e,attrs:{perm:h}}),w=Ke({inputs:{x:v},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(v),w}const wQ={kernelName:bg,backendName:"cpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values[0],[h,d,f,p,g]=dN(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const SQ={kernelName:Ub,backendName:"cpu",kernelFunc:_Q};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.data.get(i.dataId).values),a=e.data.get(n.dataId).values,l=Array.from(e.data.get(r.dataId).values),[c,u,h]=fN(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const TQ={kernelName:Vb,backendName:"cpu",kernelFunc:CQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IQ(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=Bw(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const EQ={kernelName:Wb,backendName:"cpu",kernelFunc:IQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MQ(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=Bw(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const kQ={kernelName:Gb,backendName:"cpu",kernelFunc:MQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AQ(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Md(r,i,a),f=!1,p=e.bufferSync(i);let g;switch(r.dtype){case"bool":{const m=e.bufferSync(r),x=Boolean(e.data.get(o.dataId).values[0]);g=cc(p,m,a,d,u,c,l,h,x,f);break}case"float32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=cc(p,m,a,d,u,c,l,h,x,f);break}case"int32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=cc(p,m,a,d,u,c,l,h,x,f);break}case"string":{const m=e.bufferSync(r),x=zo(e.data.get(o.dataId).values[0]);g=cc(p,m,a,d,u,c,l,h,x,f);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}const NQ={kernelName:MI,backendName:"cpu",kernelFunc:AQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=be(o,i.shape)[0],l=uw(i,r,a),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=rl({inputs:{x:i},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,f})}const DQ={kernelName:yg,backendName:"cpu",kernelFunc:RQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Q={kernelName:Hb,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:e}=s,n=t;Zt(e,"square");const i=n.data.get(e.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const l=i[a];r[a]=l*l}return{dataId:n.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ=Ve(Ed,(s,t)=>{const e=t;return isNaN(s)?NaN:s>0?1:e.alpha}),FQ={kernelName:Ed,backendName:"cpu",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n;Zt(i,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:v,end:y,strides:b}=uy(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Ke({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){P(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const _=ay(v,y,b),C=rl({inputs:{x:i},backend:e,attrs:{begin:v,size:_}});w=Ke({inputs:{x:C},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(C)}else{const _=e.bufferSync(i),C=mN(f,_,b,v);w=e.makeTensorInfo(p,C.dtype,C.values)}return w}const OQ={kernelName:qb,backendName:"cpu",kernelFunc:PQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zQ(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.data.get(u.dataId).values,f=e.data.get(h.dataId).values,[p,g]=gN(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const BQ={kernelName:jb,backendName:"cpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values[0],[c,u,h]=xN(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const VQ={kernelName:Xb,backendName:"cpu",kernelFunc:UQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.data.get(r.dataId).values,a=vN(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const GQ={kernelName:Kb,backendName:"cpu",kernelFunc:WQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HQ=Ve(Cd,s=>Math.tan(s)),qQ={kernelName:Cd,backendName:"cpu",kernelFunc:HQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jQ=Ve(Td,s=>Math.tanh(s)),XQ={kernelName:Td,backendName:"cpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;Zt(i,"tile");const o=yN(e.bufferSync(i),r);return e.makeTensorInfo(o.shape,o.dtype,o.values)}const YQ={kernelName:Id,backendName:"cpu",kernelFunc:KQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n;Zt(i,"topk");const a=e.data.get(i.dataId).values,[l,c]=_N(a,i.shape,i.dtype,r,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const JQ={kernelName:Yb,backendName:"cpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QQ(s){const{inputs:t,attrs:e,backend:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=e,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=le(i.shape),v=x[0],y=x[1],b=x[2],w=le(m),_=w[0],C=w[1],S=w[2],T=Kn(i.dtype,gt(m));T.fill(l);const I=n.data.get(i.dataId).values,A=n.data.get(r.dataId).values;for(let M=0;M<u;++M){const E=r.shape[0]===1?A:A.subarray(M*8,M*8+8);for(let k=0;k<p;++k)for(let N=0;N<g;++N)for(let z=0;z<f;++z){let L;const $=E[6]*N+E[7]*k+1;if($===0)continue;const W=(E[0]*N+E[1]*k+E[2])/$,q=(E[3]*N+E[4]*k+E[5])/$,G=GC(W,d,a),j=GC(q,h,a);switch(o){case"nearest":L=rtt(I,h,d,v,y,b,M,j,G,z,l);break;case"bilinear":L=ott(I,h,d,v,y,b,M,j,G,z,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const rt=M*_+k*C+N*S+z;T[rt]=L}return n.makeTensorInfo(m,i.dtype,T)}return{dataId:n.write(T,m,i.dtype),shape:i.shape,dtype:i.dtype}}const ttt={kernelName:Zb,backendName:"cpu",kernelFunc:QQ};function GC(s,t,e){switch(e){case"reflect":return ett(s,t);case"wrap":return ntt(s,t);case"nearest":return itt(s,t);case"constant":default:return stt(s)}}function ett(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{const n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return ja(0,e,t-1)}function ntt(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{const n=t-1;e-=t*Math.trunc(e/n)}return ja(0,e,t-1)}function stt(s,t){return s}function itt(s,t){return ja(0,s,t-1)}function Uu(s,t,e,n,i,r,o,a,l,c,u){const h=o*n+a*i+l*r+c;return 0<=a&&a<t&&0<=l&&l<e?s[h]:u}function rtt(s,t,e,n,i,r,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Uu(s,t,e,n,i,r,o,h,d,c,u)}function ott(s,t,e,n,i,r,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,g=(p-l)*Uu(s,t,e,n,i,r,o,h,d,c,u)+(l-d)*Uu(s,t,e,n,i,r,o,h,p,c,u),m=(p-l)*Uu(s,t,e,n,i,r,o,f,d,c,u)+(l-d)*Uu(s,t,e,n,i,r,o,f,p,c,u);return(f-a)*g+(a-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function att(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Zt(r,"unique");const o=n.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=SN(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const ltt={kernelName:Jb,backendName:"cpu",kernelFunc:att};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ctt(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i.shape.length,a=i.shape[r],l=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==r&&(l[c++]=i.shape[f]);const u=new Array(o).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[r]=f;const p=rl({inputs:{x:i},backend:e,attrs:{begin:u,size:h}});d[f]=Ke({inputs:{x:p},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(p)}return d}const utt={kernelName:_g,backendName:"cpu",kernelFunc:ctt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function htt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n;Zt(i,"unsortedSegmentSum");const a=i.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let p=0;p<h;++p){const g=tm({inputs:{input:d},backend:e,attrs:{dim:p+1}});d=g,u.push(g)}for(let p=0;p<o;++p){const g=Ko(p,"int32"),m=e.makeTensorInfo([],"int32",g),x=BA({inputs:{a:m,b:d},backend:e}),v=Go({inputs:{x},backend:e,attrs:{dtype:"float32"}}),y=Zg({inputs:{a:v,b:i},backend:e}),b=Hd({inputs:{x:y},backend:e,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(m),u.push(x),u.push(v),u.push(y),u.push(b)}const f=ON({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const dtt={kernelName:Sg,backendName:"cpu",kernelFunc:htt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ftt=[lK,X7,uK,dK,t9,pK,gK,vK,yK,_K,CK,IK,MK,NK,DK,FK,OK,BK,VK,oK,GK,qK,XK,YK,J7,n9,JK,K7,tY,nY,sY,rY,aY,cY,hY,fY,mY,xY,bY,wY,SY,TY,EY,MY,AY,RY,$Y,LY,FY,PY,BY,Q9,VY,s9,YY,i9,ZY,o9,sZ,iZ,oZ,l9,cZ,hZ,fZ,mZ,xZ,u9,d9,Y7,bZ,eY,wZ,SZ,TZ,tK,p9,g9,EZ,v9,kZ,RZ,$Z,PZ,zZ,UZ,VZ,y9,GZ,qZ,XZ,YZ,JZ,tJ,nJ,_9,iJ,aJ,uJ,C9,I9,fJ,gJ,bJ,M9,wJ,SJ,CJ,zN,MJ,nK,N9,AJ,RJ,$J,FJ,Z7,kv,OJ,sK,iK,rK,BJ,VJ,GJ,qJ,XJ,KJ,ZJ,z9,QJ,iQ,oQ,uQ,U9,dQ,pQ,gQ,V9,lJ,bQ,wQ,SQ,TQ,EQ,kQ,NQ,DQ,H9,$Q,j9,FQ,OQ,BQ,VQ,GQ,Z9,OY,qQ,XQ,YQ,JQ,ttt,k9,ltt,utt,dtt,_J];for(const s of ftt)AI(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa={},Zf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ptt(s,t){Sa[s]=t}function sr(s,t){if(!(s in Sa)||t!=null){const n=gtt(s,t);if(n!==null)Sa[s]=n;else return console.log("Could not get context for WebGL version",s),null}const e=Sa[s];return e==null||e.isContextLost()?(delete Sa[s],sr(s)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Sa[s])}function mtt(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function gtt(s,t){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t==null?mtt(s):t;return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Sa[s]},!1),dt().getBool("SOFTWARE_WEBGL_ENABLED")&&(Zf.failIfMajorPerformanceCaveat=!1),s===1?e.getContext("webgl",Zf)||e.getContext("experimental-webgl",Zf):e.getContext("webgl2",Zf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vh;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(vh||(vh={}));var Ys;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(Ys||(Ys={}));var qn;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(qn||(qn={}));function qd(s,t){return[t,s]}function xtt(s,t){return s*t}function Jf(s){const t=gt(s),e=Math.ceil(t/4);return jx(e)}function lu(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function vtt(s,t){const[e,n]=lu(s,t);return e*n*4}function Hw(s,t){const e=s;let n,i,r,o,a,l,c,u,h,d;return dt().getNumber("WEBGL_VERSION")===2?(n=e.R32F,i=e.R16F,r=e.RGBA16F,o=e.RGBA32F,a=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(n=s.RGBA,i=s.RGBA,r=s.RGBA,o=e.RGBA,a=s.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(s,t){const e=t();return dt().getBool("DEBUG")&&btt(s),e}function btt(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+Stt(s,t))}const ytt=596e-10,wtt=65504;function _tt(s){return!!(dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||ytt<Math.abs(s)&&Math.abs(s)<wtt)}function Stt(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Qf(s,t){return mo(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Ctt(s,t){const e=mo(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Qt(s,()=>s.shaderSource(e,t)),Qt(s,()=>s.compileShader(e)),s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function Ttt(s,t){const e=mo(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Qt(s,()=>s.shaderSource(e,t)),Qt(s,()=>s.compileShader(e)),dt().get("ENGINE_COMPILE_ONLY"))return e;if(s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw BN(t,s.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const Itt=/ERROR: [0-9]+:([0-9]+):/g;function BN(s,t){const e=Itt.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const n=+e[1],i=s.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>mc((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,n-1),c=o.slice(n-1,n),u=o.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${mc(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Ett(s){return mo(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function Mtt(s,t){if(Qt(s,()=>s.linkProgram(t)),!dt().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function xx(s,t){if(Qt(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function ktt(s,t){const e=mo(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Qt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),Qt(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function Att(s,t){const e=mo(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Qt(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e)),Qt(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function Ntt(s){return mo(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function Rtt(s,t){const e=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const n=`[${s}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>e||t>e){const n=`[${s}x${t}]`,i=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function Dtt(s){return mo(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function HC(s,t,e,n,i,r,o){const a=s.getAttribLocation(t,e);return a===-1?!1:(Qt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),Qt(s,()=>s.vertexAttribPointer(a,i,s.FLOAT,!1,r,o)),Qt(s,()=>s.enableVertexAttribArray(a)),!0)}function $tt(s,t,e){ztt(s,e),Qt(s,()=>s.activeTexture(s.TEXTURE0+e)),Qt(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function Ltt(s,t,e){return mo(s,()=>s.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function Ftt(s,t,e){return s.getUniformLocation(t,e)}function Ptt(s,t,e,n){Qt(s,()=>$tt(s,t,n)),Qt(s,()=>s.uniform1i(e,n))}function vx(s,t,e){Qt(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),Qt(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function qC(s,t){Qt(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),Qt(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function tp(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Ott(s,t))}function Ott(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function mo(s,t,e){const n=Qt(s,()=>t());if(n==null)throw new Error(e);return n}function ztt(s,t){const e=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+s.TEXTURE0;if(n<s.TEXTURE0||n>e){const i=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${i}.`)}}function Vc(s,t=2){return gt(s.slice(0,s.length-t))}function Wc(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function ep(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[Vc(s),...Wc(s)]),t}function Btt(s,t=!1){let e=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=dt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&dt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,s=s.map((a,l)=>l>=s.length-2?ob(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=Xo(s).newShape);let i=gt(s),r=null;s.length<=1&&i<=e?r=[1,i]:s.length===2&&s[0]<=e&&s[1]<=e?r=s:s.length===3&&s[0]*s[1]<=e&&s[2]<=e?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=e&&s[1]*s[2]<=e?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=e&&s[3]<=e?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=e&&s[1]*s[2]*s[3]<=e&&(r=[s[0],s[1]*s[2]*s[3]]);const o=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||o)if(t){const a=Vc(s);let l=2,c=2;s.length&&([l,c]=Wc(s)),i=a*(l/2)*(c/2),r=jx(i).map(u=>u*2)}else r=jx(i);return r}function np(s){return s%2===0}function nm(s,t){if(s=s.slice(-2),t=t.slice(-2),Le(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const e=s.slice(-1)[0],n=t.slice(-1)[0];if(e===n||np(e)&&np(n)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&np(s[0])&&np(t[0])}let bx,yx;function Utt(s){if(bx==null){const t=sr(s);bx=t.getParameter(t.MAX_TEXTURE_SIZE)}return bx}function Vtt(s){if(yx==null){const t=sr(s);yx=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,yx)}function Wtt(s){if(s===0)return 0;let t;const e=sr(s);return Si(e,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:Si(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Si(s,t){return s.getExtension(t)!=null}function jC(s){try{if(sr(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Gtt(s){if(s===0)return!1;const t=sr(s);if(s===1){if(!Si(t,"OES_texture_float"))return!1}else if(!Si(t,"EXT_color_buffer_float"))return!1;return Nv(t)}function Htt(s){if(s===0)return!1;const t=sr(s);if(s===1){if(!Si(t,"OES_texture_float")||!Si(t,"WEBGL_color_buffer_float"))return!1}else{if(Si(t,"EXT_color_buffer_float"))return Nv(t);const n="EXT_color_buffer_half_float";if(Si(t,n)){const i=t.getExtension(n);return qtt(t,i)}return!1}return Nv(t)}function Nv(s){const t=Hw(s),e=s.createTexture();s.bindTexture(s.TEXTURE_2D,e);const n=1,i=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,n,i,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0);const o=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(e),s.deleteFramebuffer(r),o}function qtt(s,t){const e=Hw(s,t),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const i=1,r=1;s.texImage2D(s.TEXTURE_2D,0,e.internalFormatHalfFloat,i,r,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(o),a}function jtt(s){return s!==2?!1:sr(s).fenceSync!=null}function jd(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&P(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne=dt();ne.registerFlag("HAS_WEBGL",()=>ne.getNumber("WEBGL_VERSION")>0);ne.registerFlag("WEBGL_VERSION",()=>jC(2)?2:jC(1)?1:0);ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ne.get("WEBGL_VERSION")===2);ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ne.registerFlag("WEBGL_PACK",()=>ne.getBool("HAS_WEBGL"));ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_CLIP",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_REDUCE",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_CONV_IM2COL",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Utt(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Vtt(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=ne.getNumber("WEBGL_VERSION");return s===0?0:Wtt(s)});ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!VI());ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Gtt(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Htt(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>jtt(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>VI()?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ne.registerFlag("WEBGL_EXP_CONV",()=>!1);ne.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ne.getBool("IS_TEST"));ne.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ne.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ne.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ps(){let s,t,e,n,i,r,o,a,l,c;return dt().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",e="out",n="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=dt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",e="varying",n="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:e,varyingFs:n,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(s,t,e="index"){const n=le(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / ${i}`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * ${i}`:`index -= ${s[r]} * ${i}`;return`${o}; ${a};`}).join("")}function Jg(s,t,e="index"){const n=le(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / outShapeStrides[${r}]`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function Xtt(s,t){const e=s.length,n=s.map(r=>`${t}[${r}]`),i=new Array(e-1);i[e-2]=n[e-1];for(let r=e-3;r>=0;--r)i[r]=`(${i[r+1]} * ${n[r+1]})`;return i}function Ktt(s,t,e="index"){const n=s.map((r,o)=>o),i=Xtt(n,t);return i.map((r,o)=>{const a=`int ${s[o]} = ${e} / ${i[o]}`,l=o===i.length-1?`int ${s[o+1]} = ${e} - ${s[o]} * ${i[o]}`:`index -= ${s[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function qw(s){const t=le(s).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function jw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const UN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:VN}=Yq;function Ytt(s,t,e){const n=[];if(s.forEach(f=>{const p=gt(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:g}=Xw(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=n.join(`
`),r=s.map(f=>Ztt(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),o=t.texShape,a=ps(),l=tet(a);let c,u,h=set(a);return t.isPacked?(c=Jtt(t.logicalShape,o,e.enableShapeUniforms),u=net(a)):(c=Qtt(t.logicalShape,o,e.enableShapeUniforms),u=eet(a)),e.packedInputs&&(h+=cet),[h,l,u,i,c,r,e.userCode].join(`
`)}function cu(s,t=!1){const e=s.shapeInfo.logicalShape;switch(e.length){case 0:return wet(s,t);case 1:return Cet(s,t);case 2:return Iet(s,t);case 3:return Met(s,t);case 4:return Aet(s,t);case 5:return Net(s);case 6:return Ret(s);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function WN(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return yet(s);case 1:return _et(s,t);case 2:return Tet(s,t);case 3:return Eet(s,t);default:return ket(s,t)}}function Ztt(s,t,e=!1,n){let i="";e?i+=WN(s,n):i+=cu(s,n);const r=s.shapeInfo.logicalShape,o=t.logicalShape;return r.length<=o.length&&(e?i+=Det(s,t):i+=$et(s,t)),i}function Jtt(s,t,e){switch(s.length){case 0:return GN();case 1:return uet(s,t,e);case 2:return vet(s,t,e);case 3:return det(s,t,e);default:return pet(s,t,e)}}function Qtt(s,t,e){switch(s.length){case 0:return GN();case 1:return het(s,t,e);case 2:return bet(s,t,e);case 3:return fet(s,t,e);case 4:return met(s,t,e);case 5:return get(s,t);case 6:return xet(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function tet(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function eet(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function net(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function set(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${iet}
    ${oet}
    ${aet}
  `}const iet=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,oet=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aet=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cet=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function GN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function uet(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function het(s,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function det(s,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[2]/2),r=i*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function fet(s,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Jg(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=wl(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function pet(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[s.length-1]/2),r=i*Math.ceil(s[s.length-2]/2);let o=r,a="",l="b, r, c";for(let c=2;c<s.length-1;c++)o*=s[s.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${s.length}(${l});
    }
  `}function met(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Jg(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=wl(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function get(s,t){const e=wl(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function xet(s,t){const e=wl(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function vet(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Le(s,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const i=Math.ceil(s[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function bet(s,t,e){return Le(s,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function _l(s){return`offset${s}`}function yet(s){const t=s.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=ps();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function wet(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[i,r]=s.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const o=_l(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${e}, uv);
    }
  `}function _et(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=s.shapeInfo.texShape,r=ps();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function Cet(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${uu(s)}
      }
    `;const i=s.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=_l(e);return o===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Tet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=r[0],a=r[1],l=ps();if(r!=null&&Le(e,r))return t?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function Iet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&Le(e,r)){if(t)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:o,keptDims:a}=Xo(e),l=o;if(l.length<e.length){const d=hu(s,l),f=["row","col"];return`
      ${cu(d,t)}
      float ${i}(int row, int col) {
        return ${i}(${du(f,a)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${uu(s)}
      }
    `;const c=r[0],u=r[1],h=_l(n);return u===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `:c===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${n}, uv);
  }
`}function Eet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],p=hu(s,d),g=["b","row","col"];return`
        ${WN(p,t)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${du(g,f)});
        }
      `}const a=ps();if(t)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(e[2]/2),h=u*Math.ceil(e[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Met(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],o=e[2],{newShape:a,keptDims:l}=Xo(e),c=a;if(c.length<e.length){const g=hu(s,c),m=["row","col","depth"];return`
        ${cu(g,t)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${du(m,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${uu(s)}
      }
    `;const u=s.shapeInfo.texShape,h=u[0],d=u[1],f=s.shapeInfo.flatOffset;if(d===r&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===o&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;const p=_l(n);return t?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function ket(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=ps();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${e}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,o=r.length,a=s.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)f=`int b${g}, `+f,d*=r[o-g-1],p=`b${g} * ${d} + `+p;return`
    vec4 ${n}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${e}, uv);
    }
  `}function Aet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:c}=Xo(e);if(l.length<e.length){const v=hu(s,l),y=["row","col","depth","depth2"];return`
      ${cu(v,t)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${du(y,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${uu(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,m=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=_l(n);return t?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function Net(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=t[4],r=t[3]*i,o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:c}=Xo(t);if(l.length<t.length){const g=hu(s,l),m=["row","col","depth","depth2","depth3"];return`
      ${cu(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${du(m,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${uu(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===i&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=_l(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Ret(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:i,keptDims:r}=Xo(t);if(i.length<t.length){const m=hu(s,i),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${cu(m)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${du(x,r)});
      }
    `}const o=t[5],a=t[4]*o,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${uu(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const g=_l(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function uu(s){const t=s.name,e=gt(s.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Det(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=VN(s.shapeInfo.logicalShape,t.logicalShape),l=Ye(o),c=o-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(v=>`coords.${h[v+c]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=s.shapeInfo.logicalShape.map((v,y)=>`coords.${h[y+c]}`).join(", ");let f="return outputValue;";const g=gt(s.shapeInfo.logicalShape)===1,x=gt(t.logicalShape)===1;if(r===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const v=r-2,y=r-1;a.indexOf(v)>-1&&a.indexOf(y)>-1?f="return vec4(outputValue.x);":a.indexOf(v)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(y)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${n}(${d});
      ${f}
    }
  `}function $et(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=t.texShape,o=s.shapeInfo.texShape,a=s.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!s.shapeInfo.isUniform&&a===l&&s.shapeInfo.flatOffset==null&&Le(o,r))return`
      float ${i}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Ye(l),u=VN(s.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${f[g+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((g,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${n}(${p});
    }
  `}function Ye(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function Xw(s,t,e){const{newShape:n,keptDims:i}=Xo(t),r=t.length,o=s&&r===3&&t[0]===1,a=o?t.slice(1):n,l=!s&&r>1&&!Le(t,e)&&n.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:i}}function hu(s,t){const e=JSON.parse(JSON.stringify(s));return e.shapeInfo.logicalShape=t,e}function du(s,t){return t.map(e=>s[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Let(s,t,e,n){const i=e.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),o={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=Ytt(i,o,t),l=Ttt(s.gl,a),c=s.createProgram(l);return dt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o},HN(s,t,c))}function HN(s,t,e){const n={},i={},r={},o=[];let a,l,c,u=null,h=null;h=s.getUniformLocation(e,"NAN",!1),dt().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(e,"INFINITY",!1));const d=!1;for(let f=0;f<t.variableNames.length;f++){const p=t.variableNames[f];n[p]=s.getUniformLocation(e,p,d),n[`offset${p}`]=s.getUniformLocation(e,`offset${p}`,d),t.enableShapeUniforms&&(i[`${p}Shape`]=s.getUniformLocation(e,`${p}Shape`,d),r[`${p}TexShape`]=s.getUniformLocation(e,`${p}TexShape`,d))}return t.enableShapeUniforms&&(a=s.getUniformLocation(e,"outShape",d),c=s.getUniformLocation(e,"outShapeStrides",d),l=s.getUniformLocation(e,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((f,p)=>{o[p]=s.getUniformLocation(e,f.name,d)}),{uniformLocations:n,customUniformLocations:o,infLoc:u,nanLoc:h,inShapesLocations:i,inTexShapesLocations:r,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function XC(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((e,n)=>{const i=e.logicalShape,r=t[n],o=r.shape;if(!Le(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,l=r.isUniform?null:r.texData.texShape;if(!Le(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function Fet(s,t,e,n,i){t.program.enableShapeUniforms||(XC(t.inShapeInfos,e),XC([t.outShapeInfo],[n]));const r=n.texData.texture,o=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):s.setOutputMatrixTexture(r.texture,o[0],o[1]),s.setProgram(t.webGLProgram),dt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,c)=>{const u=t.program.variableNames[c],h=t.uniformLocations[u],d=t.uniformLocations[`offset${u}`],f=t.inShapesLocations[`${u}Shape`],p=t.inTexShapesLocations[`${u}TexShape`];if(f){const{uniformShape:g}=Xw(t.program.packedInputs,l.shape,l.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(p&&s.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(gt(l.shape)<2)s.gl.uniform1f(h,l.uniformValues[0]);else{let g=l.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(h,g)}return}l.texData.slice!=null&&d!=null&&s.gl.uniform1i(d,l.texData.slice.flatOffset),s.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:s.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(a,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){const l=le(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach((l,c)=>{const u=t.customUniformLocations[c],h=i[c];if(l.type==="float")s.gl.uniform1fv(u,h);else if(l.type==="vec2")s.gl.uniform2fv(u,h);else if(l.type==="vec3")s.gl.uniform3fv(u,h);else if(l.type==="vec4")s.gl.uniform4fv(u,h);else if(l.type==="int")s.gl.uniform1iv(u,h);else if(l.type==="ivec2")s.gl.uniform2iv(u,h);else if(l.type==="ivec3")s.gl.uniform3iv(u,h);else if(l.type==="ivec4")s.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),s.executeProgram()}function Pet(s,t,e){let n="";t.concat(e).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=Xw(s.packedInputs,o.shape,l);let d="",f="",p="";if(u.length===1&&s.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!s.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!s.packedInputs){const w=le(u);p=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=o.shape.length,m=u.length===2&&Le(o.shape,l),x=gt(o.shape)===1,v=$c(o.shape,e.shape),y=!s.packedInputs&&g===e.shape.length&&Le(l,e.texData.texShape),b=s.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${y}_${c?h:""}_${u.length}_${x}_${v}_${m}_${d}_${f}_${p}_${b}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;n+=`${o.shape}_${l}_${a}`}});const i=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+i+`${dt().getNumber("WEBGL_VERSION")}`,r}function ms(s){return dt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oet{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ps();this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Jg(["r","c","d"],t):wl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zet{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ps();this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Jg(["r","c","d"],t):wl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bet{constructor(t){this.variableNames=["A"],this.outTexUsage=Ys.DOWNLOAD;const e=ps();this.outputShape=t,this.userCode=`
      ${UN}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uet{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ys.DOWNLOAD;const e=ps();this.outputShape=t,this.userCode=`
      ${UN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vet={R:0,G:1,B:2,A:3};class KC{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=ps();this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<n.length;a++){const l=n[a];o+=`
          if(offset == ${a}) {
            result = values[${Vet[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?jw():qw(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wet{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ps();this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length);let i="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?jw():qw(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Get(s){const t=ps(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Ctt(s,e)}function Het(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return ktt(s,t)}function qet(s){const t=new Uint16Array([0,1,2,2,1,3]);return Att(s,t)}function Xd(s,t,e,n,i,r){Rtt(t,e);const o=Ntt(s),a=s.TEXTURE_2D;return Qt(s,()=>s.bindTexture(a,o)),Qt(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),Qt(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),Qt(s,()=>s.texParameteri(a,s.TEXTURE_MIN_FILTER,s.NEAREST)),Qt(s,()=>s.texParameteri(a,s.TEXTURE_MAG_FILTER,s.NEAREST)),dt().getNumber("WEBGL_VERSION")===1?Qt(s,()=>s.texImage2D(a,0,n,t,e,0,i,r,null)):Qt(s,()=>s.texStorage2D(a,1,n,t,e)),Qt(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function qN(s){return s.internalFormatFloat}function jet(s,t,e,n){const[i,r]=qd(t,e);return Xd(s,i,r,qN(n),n.textureFormatFloat,s.FLOAT)}function jN(s){return s.internalFormatHalfFloat}function Xet(s,t,e,n){const[i,r]=qd(t,e);return Xd(s,i,r,jN(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function XN(s){return s.downloadTextureFormat}function Ket(s,t,e,n){const[i,r]=qd(t,e);return Xd(s,i,r,XN(n),s.RGBA,s.UNSIGNED_BYTE)}function KN(s){return s.internalFormatPackedFloat}function Yet(s,t,e,n){const[i,r]=lu(t,e);return Xd(s,i,r,KN(n),s.RGBA,s.FLOAT)}function YN(s){return s.internalFormatPackedHalfFloat}function Zet(s,t,e,n){const[i,r]=lu(t,e);return Xd(s,i,r,YN(n),s.RGBA,n.textureTypeHalfFloat)}function Jet(s,t,e){return Qt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),HC(s,t,"clipSpacePos",e,3,20,0)&&HC(s,t,"uv",e,2,20,12)}function Qet(s,t,e,n,i,r){Qt(s,()=>s.bindTexture(s.TEXTURE_2D,t));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(e*n*4),a=s.UNSIGNED_BYTE,l=s.RGBA):(o=new Float32Array(e*n*4),a=s.FLOAT,l=r.internalFormatPackedFloat),o.set(i),dt().getNumber("WEBGL_VERSION")===2?Qt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e,n,s.RGBA,a,o)):Qt(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,e,n,0,s.RGBA,a,o)),Qt(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function tnt(s,t,e){Qt(s,()=>s.bindTexture(s.TEXTURE_2D,t)),e.data instanceof Uint8Array?dt().getNumber("WEBGL_VERSION")===2?Qt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e.width,e.height,s.RGBA,s.UNSIGNED_BYTE,e.data)):Qt(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,e.width,e.height,0,s.RGBA,s.UNSIGNED_BYTE,e.data)):dt().getNumber("WEBGL_VERSION")===2?Qt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,e)):Qt(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,e)),Qt(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function ent(s,t,e,n){const i=s.createBuffer();Qt(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,i));const a=4*4*t*e;return Qt(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,a,s.STREAM_READ)),Qt(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,0)),Qt(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),i}function nnt(s,t,e){const n=s,i=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,i),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),i}function snt(s,t,e,n){const[i,r]=qd(t,e),o=4,a=new Uint8Array(xtt(t*e,o));return Qt(s,()=>s.readPixels(0,0,i,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function int(s,t,e,n,i,r,o,a){const l=s,c=new Float32Array(vtt(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function rnt(s,t,e){const n=new Float32Array(t*e*4);return Qt(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wx{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=dt().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,ptt(e,t)):this.gl=sr(e);let n="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),dt().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Qf(this.gl,r),Si(this.gl,o))this.textureHalfFloatExtension=Qf(this.gl,o);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Si(this.gl,i))this.colorBufferHalfFloatExtension=Qf(this.gl,i);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Si(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Si(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Het(this.gl),this.indexBuffer=qet(this.gl),this.framebuffer=Dtt(this.gl),this.textureConfig=Hw(this.gl,this.textureHalfFloatExtension)}get debug(){return dt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Qt(t,()=>t.finish()),Qt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Qt(t,()=>t.deleteFramebuffer(this.framebuffer)),Qt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Qt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Qt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),jet(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),Xet(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),Ket(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),tnt(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,i){this.throwIfDisposed(),Qet(this.gl,t,e,n,i,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),Zet(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),Yet(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(qC(this.gl,this.framebuffer),this.outputTexture=null),Qt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>snt(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,i,r,o){return int(this.gl,t,e,n,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return nnt(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const i=ent(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(dt().getBool("WEBGL_FENCE_API_ENABLED")){const i=t,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},e=r}else dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>rnt(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=Get(e));const n=Ett(e);return Qt(e,()=>e.attachShader(n,this.vertexShader)),Qt(e,()=>e.attachShader(n,t)),Mtt(e,n),this.debug&&xx(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=Jet(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Qt(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&xx(this.gl,this.program),Qt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?Ltt(this.gl,t,e):Ftt(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Qt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Ptt(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[i,r]=lu(e,n);this.setOutputMatrixTextureDriver(t,i,r)}setOutputMatrixWriteRegion(t,e,n,i){this.setOutputMatrixWriteRegionDriver(n,t,i,e)}setOutputPackedMatrixWriteRegion(t,e,n,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&xx(this.gl,this.program),tp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Qt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Qt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Qf(this.gl,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(i.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await $S(()=>this.disposed||this.isQueryAvailable(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),i=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=ont(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in dt().platform&&(n=dt().platform.setTimeoutCustom.bind(dt().platform)),$S(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),vx(this.gl,t,this.framebuffer),this.debug&&tp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(vx(this.gl,this.outputTexture,this.framebuffer),this.debug&&tp(this.gl)):qC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const i=this.gl;vx(i,t,this.framebuffer),this.debug&&tp(i),this.outputTexture=t,Qt(i,()=>i.viewport(0,0,e,n)),Qt(i,()=>i.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,i){this.throwIfDisposed(),Qt(this.gl,()=>this.gl.scissor(t,e,n,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function ont(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:ant,bincountImpl:ZN,bincountReduceImpl:lnt,castImpl:cnt,ceilImpl:unt,concatImpl:hnt,equalImpl:dnt,expImpl:fnt,expm1Impl:pnt,floorImpl:mnt,gatherNdImpl:gnt,gatherV2Impl:xnt,greaterImpl:vnt,greaterEqualImpl:bnt,lessImpl:ynt,lessEqualImpl:wnt,linSpaceImpl:_nt,logImpl:Snt,maxImpl:Cnt,maximumImpl:Tnt,minimumImpl:Int,multiplyImpl:Ent,negImpl:Mnt,notEqualImpl:knt,prodImpl:Ant,raggedGatherImpl:Nnt,raggedRangeImpl:Rnt,raggedTensorToTensorImpl:Dnt,rangeImpl:$nt,rsqrtImpl:Lnt,scatterImpl:Fnt,sigmoidImpl:Pnt,simpleAbsImpl:JN,sliceImpl:Ont,sparseFillEmptyRowsImpl:znt,sparseReshapeImpl:Bnt,sparseSegmentReductionImpl:QN,sqrtImpl:Unt,stridedSliceImpl:Vnt,stringNGramsImpl:Wnt,stringSplitImpl:Gnt,stringToHashBucketFastImpl:Hnt,subImpl:qnt,tileImpl:jnt,topKImpl:Xnt,transposeImpl:Kw,uniqueImpl:Knt}=J9;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(s,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${s}.${e}`)}function hs(s,t){return t===1?[s]:tR(s,t)}function Ynt(s,t){if(s===1)return"rc";let e="";for(let n=0;n<s;n++)e+=t[n],n<s-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Znt{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ms(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=hs("rc",this.rank),n=Ye(this.rank),i=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let i=0;i<=1;i++){let r=`${n===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${t[t.length-1-o]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${i};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length);let n="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${Jnt(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?jw():qw(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}}function Jnt(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?Ktt(["r","c","d"],"inputShape"):wl(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qnt{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const i=ZC(e,n),r=JC(t,i,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=YC(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let a;return i===qn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===qn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===qn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===qn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===qn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,n,i){if(this.freeTextures==null)return;const r=ZC(n,i),o=JC(e,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=YC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=dt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function tst(s,t){const e=s;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function YC(s,t,e,n,i){const r=est(t,n);let o;if(i){const[l,c]=lu(s[0],s[1]);o=l*c}else{const[l,c]=qd(s[0],s[1]);o=l*c}const a=tst(e,r);return o*a}function est(s,t){switch(s){case qn.PACKED_2X2_FLOAT32:return KN(t);case qn.PACKED_2X2_FLOAT16:return YN(t);case qn.UNPACKED_FLOAT32:return qN(t);case qn.UNPACKED_FLOAT16:return jN(t);case qn.PACKED_4X1_UNSIGNED_BYTE:return XN(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function nst(s){return dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?qn.PACKED_2X2_FLOAT32:qn.UNPACKED_FLOAT32:s?qn.PACKED_2X2_FLOAT16:qn.UNPACKED_FLOAT16}function ZC(s,t){if(s===Ys.UPLOAD)return qn.PACKED_2X2_FLOAT32;if(s===Ys.RENDER||s==null)return nst(t);if(s===Ys.DOWNLOAD||s===Ys.PIXELS)return qn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function JC(s,t,e){return`${s[0]}_${s[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class so{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const $i="if (isnan(x)) return x;",sst="return x;",QC="return abs(x);",ist="return (x >= 0.0) ? x : (exp(x) - 1.0);",rst=$i+`
  return (x < 0.0) ? 0.0 : x;
`,ost=$i+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Kl="return x;",ast="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lst="return x;",cst=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ust=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hst=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dst="return 1.0 / (1.0 + exp(-1.0 * x));";class Na{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fst{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length);const e=t.length,n=hs("rc",e),i=Ye(e),r=Ynt(e,n),o=n.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pst=jE,mst=1e-7,gst=1e-4,sp={};function xst(s){return s in sp||(sp[s]={}),sp[s]}const vst=dt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),bst=600;function yst(){return dt().global.screen==null?1024:dt().global.screen.height*dt().global.screen.width*window.devicePixelRatio*bst/1024/1024}class Qg extends rb{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!dt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof wx)e=t;else{const n=sr(dt().getNumber("WEBGL_VERSION"),t);e=new wx(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=sr(dt().getNumber("WEBGL_VERSION"));e=new wx(n),this.binaryCache=xst(dt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Qnt(this.gpgpu),this.numMBBeforeWarning=yst(),this.texData=new oI(this,mr())}nextDataId(){return Qg.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,i,r,o){const a=this.makeTensorInfo(e,n),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[i,r]},l.texShape=[i,r];const c=ep(e),u=new KC(c,!1,o),h=this.runWebGLProgram(u,[a],n,[[i,r]]);return h.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,n){if((dt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||dt().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:e,dtype:n,values:t,usage:Ys.UPLOAD,refCount:1}),i}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,n,i,r){if(dt().getBool("DEBUG")&&this.checkNumericalProblems(e),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:i,values:e,usage:Ys.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=e;if(o!=null){let d;l?d=new Na(a,Kl):d=new so(a,Kl);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(n!=null)return this.convertAndCacheOnCPU(t);if(i==="string")return n;const c=this.activeTimers!=null;let u;c&&(u=vs());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=co(d,f)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=vs()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const p=this.pendingRead.get(t);return new Promise(g=>p.push(g))}const e=this.texData.get(t),{values:n,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=e;if(r!=null){let p;l?p=new Na(i,Kl):p=new so(i,Kl);const g=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:o}],o),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(n!=null)return this.convertAndCacheOnCPU(t);if(dt().getBool("DEBUG")&&!dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&dt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&dt().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...Jf(i))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=p[0],m=p[1];h=co(g,m)}else if(c==null)h=this.getValuesFromTexture(t);else{const p=gt(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;Qt(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(p=>p(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&mr().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const n=this.texData.get(t),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:c}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new Na(r,Kl):f=new so(r,Kl);const p=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.readToGPU(p,e);return this.disposeIntermediateTensorInfo(p),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=mr().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>zo(i));return ve(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ve(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const n=t[e];if(!_tt(n))throw dt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:i}=this.texData.get(t),r=gt(e);if(dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Jf(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const o=dt().getBool("WEBGL_PACK")&&i===!0,a=o?ep(e):e,l=o?new Uet(a):new Bet(a),c=this.runWebGLProgram(l,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=kc(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=kc(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=QU(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:vs(),endMs:null}}endTimer(t){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=vs(),t)}async getQueryTime(t){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(e,i,r,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=vst){return dt().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&gt(n.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ks("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return pst(t.shape,e)}packedUnaryOp(t,e,n){const i=new Na(t.shape,e),r=this.compileAndRun(i,[t],n);return mr().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const i=JN(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,i)}if(dt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,QC,t.dtype);const e=new so(t.shape,QC),n=this.compileAndRun(e,[t]);return mr().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Nh(n[0])){const r=n.map(o=>Lo(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return this.texData.get(i).usage=null,{dataId:i,shape:t,dtype:e}}makeOutput(t,e,n){return mr().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new fst(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new Znt(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[Vc(t.shape),...Wc(t.shape)],i={dtype:t.dtype,shape:n,dataId:t.dataId},r=[Vc(e),...Wc(e)],o=new eR(r,n),a=!0,l=[n],c=this.runWebGLProgram(o,[i],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:i,shape:r,dtype:o}=n;if(e!=null){const d=gt(r),f=e[0]*e[1]*4;P(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=ep(r);let l;i?l=new zet(a):l=new Oet(a);const c=!0,u=[e!=null?e:Jf(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],o,u,c,e);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(t,e,n,i,r=!1,o){const a=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===vh.DENSE){const x=o!=null?o:Jf(t.outputShape);l.texShape=x.map(v=>v*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),gt(a.shape)===0)return l.values=Kn(a.dtype,0),a;const c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let v=this.texData.get(x.dataId);if(v.texture==null){if(!t.packedInputs&&gt(x.shape)<=dt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:v.values};t.packedInputs&&(v.isPacked=!0,v.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!v.isPacked!=!!t.packedInputs)x=v.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),v=this.texData.get(x.dataId);else if(v.isPacked&&!nm(v.shape,x.shape)){const y=x,b=x.shape;x.shape=v.shape,x=this.packedReshape(x,b),c.push(x),v=this.texData.get(x.dataId),y.shape=b}return{shape:x.shape,texData:v,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=Pet(t,u,h),f=this.getAndSaveBinary(d,()=>Let(this.gpgpu,t,u,h)),p=this.activeTimers!=null;let g;p&&(g=this.startTimer()),dt().get("ENGINE_COMPILE_ONLY")||Fet(this.gpgpu,f,u,h,i),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),p&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)}));const m=dt().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const x=vs();x-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!dt().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,n,i,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,i,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(dt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=at(()=>{if(!dt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=dt().getBool("DEBUG");dt().set("DEBUG",!1);const e=this.abs(he(1e-8)).dataSync()[0];if(dt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?mst:gst}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:i,values:r,texture:o,usage:a,isPacked:l}=e;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=vs());let h=e.texShape;if(h==null&&(h=Btt(n,l),e.texShape=h),r!=null){const d=ep(n);let f,p=h[1],g=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([p,g]=lu(h[0],h[1])),l?f=new Wet(d,m):f=new KC(d,m);const x=m?[g,p]:h,v=this.makeTensorInfo(x,i),y=this.texData.get(v.dataId);m?y.usage=Ys.PIXELS:y.usage=Ys.UPLOAD,y.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),p,g,r);const b=[[g,p]],w=!0,_=this.runWebGLProgram(f,[v],i,b,w),C=this.texData.get(_.dataId);e.texShape=C.texShape,e.isPacked=C.isPacked,e.usage=C.usage,dt().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(e.texture=C.texture,e.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(v),c&&(this.uploadWaitMs+=vs()-u)}else{const d=this.acquireTexture(h,a,i,l);e.texture=d}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:i}=n;return this.releaseGPUData(t),e!=null&&(n.values=wst(e,i)),n.values}acquireTexture(t,e,n,i){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,i)}computeBytes(t,e){return t[0]*t[1]*Xx(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(i=>{try{this.checkCompletion_(e),i(!0)}catch(r){throw r}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await ZE(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(BN(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:i,nanLoc:r,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=HN(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=i,t.nanLoc=r,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}createTensorFromTexture(t,e,n){const{texture:i,height:r,width:o,channels:a}=t,l=mr().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,e,n,r,o,a);return mr().makeTensorFromDataId(c,e,n,l)}}Qg.nextDataId=0;function wst(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<e.length;++n)e[n]=Math.round(s[n]);return e}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */WI()&&nE("webgl",()=>new Qg,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Gc{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=pe(e,n),this.enableShapeUniforms=ms(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kd=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Yd{constructor(t,e,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=pe(e,n);const r=this.outputShape.length;this.enableShapeUniforms=ms(r);let o="";if(i)if(r===0||gt(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${Ye(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=hs("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const _st={kernelName:Qh,backendName:"webgl",kernelFunc:Ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.makeTensorInfo(n.shape,"complex64"),o=e.texData.get(r.dataId),a=Ws({inputs:{x:n},backend:e}),l=Ws({inputs:{x:i},backend:e});return o.complexTensorInfos={real:a,imag:l},r}const Sst={kernelName:mb,backendName:"webgl",kernelFunc:ia};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR="return (a < 0.) ? b * a : a;",sR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Cst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n,o=e.makeTensorInfo([],"float32",Ko(r,"float32")),a=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yd(sR,i.shape,o.shape):new Gc(nR,i.shape,o.shape),l=e.runWebGLProgram(a,[i,o],"float32");return e.disposeIntermediateTensorInfo(o),l}const Tst={kernelName:Hm,backendName:"webgl",kernelFunc:Cst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR="return (a < 0.) ? b * a : a;",rR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ist(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t,r=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yd(rR,n.shape,i.shape):new Gc(iR,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],"float32")}const Est={kernelName:ug,backendName:"webgl",kernelFunc:Ist};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fu="if (isnan(x)) return x;";function Ae({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const h=a.texData.get(o.dataId),d=e(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new Na(o.shape,t):u=new so(o.shape,s),a.runWebGLProgram(u,[o],l)}}function ts({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(n&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[m,x]=[[p.complexTensorInfos.real,g.complexTensorInfos.real],[p.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(y=>{const[b,w]=y,_={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:c.shape},S=new Gc(s,l.shape,c.shape);return u.runWebGLProgram(S,[_,C],zs(b.dtype,w.dtype))}),v=ia({inputs:{real:m,imag:x},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(x),v}const h=r||zs(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const p=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,m=l.dtype==="string"?nl(p):p,x=l.dtype==="string"?nl(g):g,[v,y]=i(l.shape,c.shape,m,x,h),b=u.makeTensorInfo(y,h),w=u.texData.get(b.dataId);return w.values=v,b}const d=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return d?f=new Yd(t,l.shape,c.shape,e):f=new Gc(s,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function bh(s,t=!1){if(s==="linear")return t?lst:sst;if(s==="relu")return t?ust:rst;if(s==="elu")return t?cst:ist;if(s==="relu6")return t?hst:ost;if(s==="prelu")return t?rR:iR;if(s==="leakyrelu")return t?sR:nR;if(s==="sigmoid")return t?dst:ast;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oR{constructor(t,e,n,i=!1,r=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ms(this.outputShape.length);const u=i?t[1]:t[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",x="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const v=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${y};
          int batchB = ${b};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${g[0]});
          result += (${p[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${v}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class eT{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=pe(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT="return a * b;";function Zw(s){const{inputs:t,backend:e}=s,{a:n,b:i}=t,r=zs(n.dtype,i.dtype);if(n.dtype==="complex64"){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),c=new eT(tT.REAL,n.shape,i.shape),u=new eT(tT.IMAG,n.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=ia({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}if(e.shouldExecuteOnCPU([n,i])){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),[c,u]=Ent(n.shape,i.shape,a.values,l.values,r),h=e.makeTensorInfo(u,r),d=e.texData.get(h.dataId);return d.values=c,h}let o;return dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Yd(nT,n.shape,i.shape):o=new Gc(nT,n.shape,i.shape),e.runWebGLProgram(o,[n,i],r)}const Mst={kernelName:ld,backendName:"webgl",kernelFunc:Zw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kst(s,t,e){const n=[Vc(s.shape),...Wc(s.shape)],i={dtype:s.dtype,shape:n,dataId:s.dataId},r=[Vc(t),...Wc(t)],o=new eR(r,n),a=!0,l=[n],c=e.runWebGLProgram(o,[i],s.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=e,a=gt(i.shape),l=lI(r,a),c=gt(l);P(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(i.dataId);return u.isPacked&&!nm(i.shape,l)&&!(u.texture!==null&&nm(u.shape,l))?kst(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const Ast={kernelName:dg,backendName:"webgl",kernelFunc:Bt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sT{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];const a=Math.floor(n/4)*4,l=n%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Ac(h)?h.toPrecision(2):h}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nst{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(n/4)*4,h=n%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rst(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:s[1],n=Pg(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Sl(s,t,e,n){const i=Rst(s.shape);let r=s;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:c}=i[o];let u,h;e==="mean"?u=o===0?new sT({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},a):new sT({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c}):u=new Nst({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},e),h=r,r=n.runWebGLProgram(u,[r],t),h.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dst{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const i=Ye(this.rank),r=$st(e);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function $st(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let i=0;i<s.length;i++)n[s[i]]=e[i];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lst{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=Ye(this.rank),r=tR("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=r[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t0(s,t,e){const n=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Lst(s.shape,t):new Dst(s.shape,t);return e.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fst(s,t,e,n){const i=t,r=s.shape.length,o=be(i,s.shape);let a=o;const l=un(a,r),c=l!=null;let u=s;c&&(u=t0(s,l,n),a=bn(a.length,r)),Qn("sum",a,r);const[h,d]=Vn(u.shape,a);let f=h;e&&(f=vn(h,o));const p=gt(d),m=gt(s.shape)/p,x=Bt({inputs:{x:u},attrs:{shape:[m,p]},backend:n}),v=ey(s.dtype),y=Sl(x,v,"sum",n),b=Bt({inputs:{x:y},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y),c&&n.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;return Fst(i,r,o,e)}const Pst={kernelName:vg,backendName:"webgl",kernelFunc:e0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{perm:r}=n,o=e,a=i.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=Kw(h,i.shape,i.dtype,r,l);c=o.makeTensorInfo(l,i.dtype);const f=o.texData.get(c.dataId);f.values=d}else c=t0(i,r,o);return c}const Ost={kernelName:gc,backendName:"webgl",kernelFunc:fs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR=1e3;function sm({a:s,b:t,transposeA:e,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=s.shape.length,u=t.shape.length,h=e?s.shape[c-2]:s.shape[c-1],d=n?t.shape[u-1]:t.shape[u-2],f=e?s.shape[c-1]:s.shape[c-2],p=n?t.shape[u-2]:t.shape[u-1],g=s.shape.slice(0,-2),m=t.shape.slice(0,-2),x=gt(g),v=gt(m),b=pe(s.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,p]);P(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);const w=e?[x,h,f]:[x,f,h],_=n?[v,p,d]:[v,d,p],C=Bt({inputs:{x:s},backend:i,attrs:{shape:w}}),S=Bt({inputs:{x:t},backend:i,attrs:{shape:_}}),T=[C,S],I=Math.max(x,v),A=e?C.shape[1]:C.shape[2],D=r!=null,M=o!=null,E=l==="leakyrelu",k=l!=null?bh(l,!0):null,N=D||M||E||k!=null;let z;if((f===1||p===1)&&A>aR&&N===!1){let $=C,W=S;e&&($=fs({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),T.push($)),n&&(W=fs({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),T.push(W));const q=p!==1,G=p===1;let j=$;q&&(j=Bt({inputs:{x:$},backend:i,attrs:{shape:[I,A,1]}}),T.push(j));const rt=p===1?2:1;let lt=W;G&&(lt=Bt({inputs:{x:W},backend:i,attrs:{shape:[I,1,A]}}),T.push(lt));const Y=Zw({inputs:{a:j,b:lt},backend:i});z=e0({inputs:{x:Y},backend:i,attrs:{axis:rt,keepDims:!0}}),T.push(Y)}else{const $=zs(s.dtype,t.dtype),W=new oR(w,_,[I,f,p],e,n,D,k,M,E),q=[C,S];if(r!=null&&q.push(r),M&&q.push(o),E){const G=i.makeTensorInfo([],"float32",Ko(a,"float32"));q.push(G),T.push(G)}z=i.runWebGLProgram(W,q,$)}const L=Bt({inputs:{x:z},backend:i,attrs:{shape:b}});T.push(z);for(const $ of T)i.disposeIntermediateTensorInfo($);return L}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zst(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;return sm({a:i,b:r,transposeA:l,transposeB:c,backend:e,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const Bst={kernelName:Ap,backendName:"webgl",kernelFunc:zst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iT="return abs(x);";function Ust(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=e.texData.get(n.dataId),o=JN(r.values);return e.makeTensorInfo(n.shape,n.dtype,o)}let i;return dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Na(n.shape,iT):i=new so(n.shape,iT),e.runWebGLProgram(i,[n],n.dtype)}const Vst={kernelName:Tm,backendName:"webgl",kernelFunc:Ust};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wst=$i+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Gst=Ae({opSnippet:Wst}),Hst={kernelName:Dh,backendName:"webgl",kernelFunc:Gst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qst=$i+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,jst=Ae({opSnippet:qst}),Xst={kernelName:$h,backendName:"webgl",kernelFunc:jst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rT="return a + b;",Kst=ts({opSnippet:rT,packedOpSnippet:rT,supportsComplex:!0,cpuKernelImpl:ant}),Yst={kernelName:eu,backendName:"webgl",kernelFunc:Kst};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zst{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jst{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(s){const{inputs:t,backend:e}=s,n=t;if(n.length===1)return Ws({inputs:{x:n[0]},backend:e});if(n.length>dt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),c=gp({inputs:n.slice(0,l),backend:e}),u=gp({inputs:n.slice(l),backend:e});return gp({inputs:[c,u],backend:e})}const i=n.map(l=>l.dtype).reduce((l,c)=>zs(l,c)),r=n.map(l=>l.shape),a=dt().getBool("WEBGL_PACK")?new Jst(n[0].shape,r):new Zst(n[0].shape,r);return e.runWebGLProgram(a,n,i)}const Qst={kernelName:cb,backendName:"webgl",kernelFunc:gp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=be(r,i.shape);let c=l;const u=un(c,a);let h=i;u!=null&&(h=fs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=bn(c.length,a)),Qn("all",c,a);const[d,f]=Vn(h.shape,c),p=gt(f),g=Bt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Sl(g,g.dtype,"all",e);let x;if(o){const v=vn(d,l);x=Bt({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=Bt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const eit={kernelName:ub,backendName:"webgl",kernelFunc:tit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=be(r,i.shape);let c=l;const u=un(c,a);let h=i;u!=null&&(h=fs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=bn(c.length,a)),Qn("any",c,a);const[d,f]=Vn(h.shape,c),p=gt(f),g=Bt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Sl(g,g.dtype,"any",e);let x;if(o){const v=vn(d,l);x=Bt({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=Bt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const sit={kernelName:hb,backendName:"webgl",kernelFunc:nit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iit{constructor(t,e,n){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=e==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rit{constructor(t,e,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,P(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=Ye(l),u=hs("coords",l);let h,d;if(o===1){d=l+1;const S=Ye(d);h=`
        ${S} sourceLocR = ${S}(${u.join()}, 0);
        ++${u[l-1]};
        ${S} sourceLocG = ${S}(${u.join()}, 0);
        ++${u[l-2]};
        ${S} sourceLocA = ${S}(${u.join()}, 0);
        --${u[l-1]};
        ${S} sourceLocB = ${S}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],g=f.map(S=>"int "+S),m=hs("sourceLocR",d-1).concat("inIdx.r"),x=hs("sourceLocG",d-1).concat("inIdx.g"),v=hs("sourceLocB",d-1).concat("inIdx.b"),y=hs("sourceLocA",d-1).concat("inIdx.a"),b=n==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${y.join()})));`,_=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${v.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,C=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(s,t,e,n=null){let i=t.shape[0],r=t.shape[1];n!=null&&(i=n.shape[0],r=n.shape[1]);const o=Pg(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new iit(a,e,n==null),c=[t];n!=null&&c.push(n);const u=s.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=lR(s,t,e,u);return s.disposeIntermediateTensorInfo(u),h}function cR(s,t,e,n=null){const i=n!=null?n.shape:t.shape,r=i[i.length-1],o=Pg(r),a=new rit(i,o,e,n==null),l=n==null?[t]:[t,n],c=s.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=cR(s,t,e,c);return s.disposeIntermediateTensorInfo(c),u}return c}function uR(s,t,e,n){const i=[e];if(Qn("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,t.shape.length),!dt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],o=s.texData.get(t.dataId),a=o!==null&&o.isPacked;let l=t;a&&(l=s.unpackTensor(t),r.push(l));const[c,u]=Vn(l.shape,i),h=gt(u),d=Bt({inputs:{x:l},backend:s,attrs:{shape:[-1,h]}});r.push(d);const f=lR(s,d,n);r.push(f);const p=Bt({inputs:{x:f},backend:s,attrs:{shape:c}});return r.forEach(g=>s.disposeIntermediateTensorInfo(g)),p}return cR(s,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=be(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=fs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=bn(o.length,l.shape.length)),Qn("argMax",[o[0]],l.shape.length);const u=uR(e,l,o[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const ait={kernelName:Im,backendName:"webgl",kernelFunc:oit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=be(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=fs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=bn(o.length,l.shape.length)),Qn("argMin",[o[0]],l.shape.length);const u=uR(e,l,o[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const cit={kernelName:Em,backendName:"webgl",kernelFunc:lit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uit=$i+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,hit=Ae({opSnippet:uit}),dit={kernelName:Lh,backendName:"webgl",kernelFunc:hit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fit=$i+"return log(x + sqrt(x * x + 1.0));",pit=Ae({opSnippet:fit}),mit={kernelName:Fh,backendName:"webgl",kernelFunc:pit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const git=$i+`
  return atan(x);
`,xit=Ae({opSnippet:git}),vit={kernelName:Ph,backendName:"webgl",kernelFunc:xit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bit=Yw+`
  return atan(a, b);
`,yit=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Kd+`
  return result;
`,wit=ts({opSnippet:bit,packedOpSnippet:yit}),_it={kernelName:zh,backendName:"webgl",kernelFunc:wit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sit=$i+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Cit=Ae({opSnippet:Sit}),Tit={kernelName:Oh,backendName:"webgl",kernelFunc:Cit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yh{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const g=e==="avg",m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let v="0.0";if(g||(v="-1.0 / 1e-20"),n){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?m:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const y="max";let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(b="avgValue / count");const w=Math.floor(o/4)*4,_=o%4,C=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${w};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${b});
      }
    `}}class Jw{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,p=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,x=t.padInfo.top,v=t.padInfo.left;this.outputShape=t.outShape;const y=e==="avg";let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const I=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${m}, ${x}, ${v});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${I} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let _=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(_="avgValue / count");const C=Math.floor(o/4)*4,S=o%4,T=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${m}, ${x}, ${v});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${C};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${T}
            }
          }
          setOutput(${_});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;jd(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(as(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Ri(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))return Ws({inputs:{x:i},backend:e});const h=new yh(u,"avg",!1);return e.runWebGLProgram(h,[i],"float32")}const Eit={kernelName:Mm,backendName:"webgl",kernelFunc:Iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n,u=[1,1,1],h=ho(i.shape,r,o,u,a,l,c),d=new Jw(h,"avg",!1);return e.runWebGLProgram(d,[i],"float32")}const kit={kernelName:km,backendName:"webgl",kernelFunc:Mit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ait{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Nit{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=h-1-t.padInfo.front,g=d-1-t.padInfo.top,m=f-1-t.padInfo.left,x=1/(e*n*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${g}, ${m});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rit(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=ho(o.shape,a,l,h,c,u),f=new Nit(d);return e.runWebGLProgram(f,[i],o.dtype)}const Dit={kernelName:fb,backendName:"webgl",kernelFunc:Rit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $it(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;jd([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=Ri(o.shape,a,l,1,c),h=new Ait(u);return e.runWebGLProgram(h,[i],o.dtype)}const Lit={kernelName:db,backendName:"webgl",kernelFunc:$it};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fit(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;return sm({a:i,b:r,transposeA:o,transposeB:a,backend:e})}const Pit={kernelName:Am,backendName:"webgl",kernelFunc:Fit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oit{constructor(t,e,n,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],pe(t,e),pe(t,n);let a="0.0";i!=null&&(pe(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(pe(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zit{constructor(t,e,n,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],pe(t,e),pe(t,n);let a="vec4(0.0)";i!=null&&(pe(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(pe(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bit=({inputs:s,backend:t,attrs:e})=>{const{x:n,mean:i,variance:r,offset:o,scale:a}=s;P(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[n,i,r];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=dt().getBool("WEBGL_PACK_NORMALIZATION")?new zit(n.shape,i.shape,r.shape,u,h,l):new Oit(n.shape,i.shape,r.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},Uit={kernelName:Vm,backendName:"webgl",kernelFunc:Bit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vit{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ye(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Wit(this.rank);let i;const r=t.map((o,a)=>`sourceLoc.${Rv[a]} = start[${a}] + coords.${Rv[a]};`);i=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${n}));
      }
    `}}const Rv=["x","y","z","w","u","v"];function Wit(s){if(s===1)return"sourceLoc";if(s<=6)return Rv.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Git{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Ye(this.rank),n=hs("coords",this.rank),i=hs("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${i[h]} = ${n[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hit(s,t,e,n){const i=n.texData.get(s.dataId),r=n.makeTensorInfo(e,s.dtype),o=n.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=e,o.dtype=s.dtype;let a=cy(t,le(s.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||s.dataId};const l=n.dataRefCount.get(o.slice.origDataId)||1;return n.dataRefCount.set(o.slice.origDataId,l+1),r}function pu(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n,[a,l]=kg(i,r,o);if(oy(i,a,l),gt(l)===0)return e.makeTensorInfo(l,i.dtype,[]);if(e.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=e.texData.get(i.dataId),d=Ont(h.values,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=e.texData.get(i.dataId),u=ly(i.shape,a,l);if(c||!u){const h=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Git(l):new Vit(l),d=[a];return e.runWebGLProgram(h,[i],i.dtype,d)}return e.uploadToGPU(i.dataId),Hit(i,a,l,e)}const qit={kernelName:xg,backendName:"webgl",kernelFunc:pu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jit=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;P(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((v,y)=>v*y),l=$d(i.shape,r,a),c=Ld(l.length,r.length),u=Fd(i.shape,r,a),h=Yy(o,r.length),d=Zy(u,o,r.length),f=[],p=Bt({inputs:{x:i},backend:e,attrs:{shape:l}}),g=fs({inputs:{x:p},backend:e,attrs:{perm:c}}),m=Bt({inputs:{x:g},backend:e,attrs:{shape:u}}),x=pu({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return f.push(p),f.push(g),f.push(m),f.forEach(v=>e.disposeIntermediateTensorInfo(v)),x},Xit={kernelName:Nm,backendName:"webgl",kernelFunc:jit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.readSync(i.dataId),l=e.readSync(r.dataId),c=ZN(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const Yit={kernelName:pb,backendName:"webgl",kernelFunc:Kit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zit(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.readSync(n.dataId),o=e.readSync(i.dataId),a=pe(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Jit={kernelName:gI,backendName:"webgl",kernelFunc:Zit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qit="return float(a != b);",hR=ts({opSnippet:Qit,cpuKernelImpl:knt,dtype:"bool"}),trt={kernelName:rg,backendName:"webgl",kernelFunc:hR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return Ws({inputs:{x:i.complexTensorInfos.real},backend:e})}const ert={kernelName:Ob,backendName:"webgl",kernelFunc:Zd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nrt="return float(int(x));";function srt(s,t){const e=new so(s.shape,nrt),n=t.runWebGLProgram(e,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dv(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return Ws({inputs:{x:i},backend:e});const o=On(i.shape),a=Dv({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),l=ia({inputs:{real:a,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=Zd({inputs:{input:i},backend:e}),a=Dv({inputs:{x:o},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(o),a}if(!cI(i.dtype,r)){const o=Ws({inputs:{x:i},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(e.shouldExecuteOnCPU([i])){const o=e.texData.get(i.dataId).values,[a,l,c]=cnt(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}if(r==="int32")return srt(i,e);if(r==="bool"){const o=e.makeTensorInfo([],"bool",Kn("bool",1)),l=hR({inputs:{a:i,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const irt={kernelName:Bh,backendName:"webgl",kernelFunc:Dv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oT="return ceil(x);",rrt=Ae({opSnippet:oT,packedOpSnippet:oT,cpuKernelImpl:unt}),ort={kernelName:Uh,backendName:"webgl",kernelFunc:rrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class art{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lrt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function crt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{clipValueMin:r,clipValueMax:o}=n;let a;dt().getBool("WEBGL_PACK_CLIP")?a=new lrt(i.shape):a=new art(i.shape);const l=[[r],[o]];return e.runWebGLProgram(a,[i],i.dtype,l)}const urt={kernelName:Vh,backendName:"webgl",kernelFunc:crt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hrt{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function drt(s){const{inputs:t,backend:e}=s,{x:n}=t,i=e.texData.get(n.dataId),r=new hrt(n.shape),o=[aT(n,i.complexTensorInfos.real),aT(n,i.complexTensorInfos.imag)];return e.runWebGLProgram(r,o,o[0].dtype)}const frt={kernelName:Rm,backendName:"webgl",kernelFunc:drt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class prt{constructor(t){this.outputShape=[],this.outputShape=Ir(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const a=e[o-1];n.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=e.length,r=e[e.length-1];n.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mrt{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ir(t,e);const n=this.outputShape,i=n.length,r=Ye(i),o=hs("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const c=a[e],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${ip(a,c,m)}),
            vec2(${ip(u,c,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${ip(a,c,p)}),
          vec2(${ip(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${n[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${n[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${n[i-2]} &&
            ${o[i-1]} < ${n[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function ip(s,t,e){const n=s.indexOf(t);return s.map((r,o)=>o===n?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return Ws({inputs:{x:i.complexTensorInfos.imag},backend:e})}const grt={kernelName:Ab,backendName:"webgl",kernelFunc:n0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(s,t,e){const n=s[0].dtype;if(n==="complex64"){const h=s.map(m=>Zd({inputs:{input:m},backend:e})),d=s.map(m=>n0({inputs:{input:m},backend:e})),f=Vu(h,t,e),p=Vu(d,t,e),g=ia({inputs:{real:f,imag:p},backend:e});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),d.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}let i=e.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const h=s.map(v=>{const b=[-1,gt(v.shape.slice(t))];return Bt({inputs:{x:v},backend:e,attrs:{shape:b}})}),d=h.map(v=>({vals:e.readSync(v.dataId),shape:v.shape})),f=Ir(h.map(v=>v.shape),1),p=h[0].shape[0]===1,g=hnt(d,f,n,p),m=Ir(s.map(v=>v.shape),t),x=e.makeTensorInfo(m,n,g);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const r=dt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>r){const h=[];for(let f=0;f<s.length;f+=r){const p=s.slice(f,f+r);h.push(Vu(p,t,e))}const d=Vu(h,t,e);for(const f of h)e.disposeIntermediateTensorInfo(f);return d}if(dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new mrt(s.map(d=>d.shape),t);return e.runWebGLProgram(h,s,n)}const{tensors2D:o,outShape:a}=xrt(s,t,e),l=new prt(o.map(h=>h.shape)),c=e.runWebGLProgram(l,o,n);o.forEach(h=>e.disposeIntermediateTensorInfo(h));const u=Bt({inputs:{x:c},attrs:{shape:a},backend:e});return e.disposeIntermediateTensorInfo(c),u}function xrt(s,t,e){const n=Ir(s.map(r=>r.shape),t);return{tensors2D:s.map(r=>Bt({inputs:{x:r},attrs:{shape:[-1,gt(r.shape.slice(t))]},backend:e})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dR(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=be(i,t[0].shape)[0],o=t.map(c=>c.shape);jy(o,r);const a=Ir(t.map(c=>c.shape),r);if(gt(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>gt(c.shape)>0);return l.length===1?Ws({inputs:{x:l[0]},backend:e}):Vu(l,r,e)}const vrt={kernelName:Dm,backendName:"webgl",kernelFunc:dR};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,m=t.dataFormat==="channelsLast",x=m?1:2,v=m?2:3,y=m?3:1;let b="",w="";n&&(i?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");const _=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${v}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}}class brt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,i=t.padInfo.left,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ms(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const x=m*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const v=o%2===0?ob(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${v};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):v===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${v};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";n&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yrt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ms(this.outputShape.length);const{dataFormat:n}=e,i=ps(),r=n==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(s,t){const e=s.length;return e>=3?t?[...s.slice(0,-3),s[e-3]*s[e-2],s[e-1]]:[...s.slice(0,-3),s[e-3],s[e-2]*s[e-1]]:!t&&e===1&&s[0]>1?[s[0],1]:null}function mR({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=s.shape,c=n.texData.get(s.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,f=e.dataFormat==="channelsLast",p=!1,g=!1;let m;const x=[];if(r!=null){const b=im(r.shape,f);b!=null&&(r=Bt({inputs:{x:r},backend:n,attrs:{shape:b}}),x.push(r))}if(i!=null){const b=im(i.shape,f);b!=null&&(i=Bt({inputs:{x:i},backend:n,attrs:{shape:b}}),x.push(i))}if(!((h===1||d===1)&&u>aR)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&Le(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),w={dataId:s.dataId,shape:[1,b,e.inChannels],dtype:s.dtype},_=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,P(nm(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const C=Bt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(C);const S=sm({a:w,b:C,backend:n,transposeA:p,transposeB:g,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),T=n.texData.get(S.dataId);P(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=_,T.shape=e.outShape,m=Ws({inputs:{x:S},backend:n}),m.shape=e.outShape,x.push(S)}else{const b=e.outHeight*e.outWidth,w=Bt({inputs:{x:s},backend:n,attrs:{shape:f?[e.batchSize,b,e.inChannels]:[e.batchSize,e.inChannels,b]}}),_=Bt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),C=sm({a:f?w:_,b:f?_:w,transposeA:!f,transposeB:g,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});m=Bt({inputs:{x:C},backend:n,attrs:{shape:e.outShape}}),x.push(w),x.push(_),x.push(C)}for(const b of x)n.disposeIntermediateTensorInfo(b);return m}function gR({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=e,p=f==="channelsLast",g=l*c*u,m=d*h,x=[e.batchSize,g,m],v=!0,y=!1,b=[];if(r!=null){const L=im(r.shape,p);L!=null&&(r=Bt({inputs:{x:r},backend:n,attrs:{shape:L}}),b.push(r))}if(i!=null){const L=im(i.shape,p);L!=null&&(i=Bt({inputs:{x:i},backend:n,attrs:{shape:L}}),b.push(i))}const w=Bt({inputs:{x:t},backend:n,attrs:{shape:[1,g,gt(t.shape)/g]}});b.push(w);const _=new yrt(x,e),C=[s.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],S=n.runWebGLProgram(_,[s],"float32",C),T=Bt({inputs:{x:S},backend:n,attrs:{shape:x}});b.push(S),b.push(T);const I=i!=null,A=r!=null,D=a==="leakyrelu",M=a?bh(a,!0):null,E=new oR(p?T.shape:w.shape,p?w.shape:T.shape,p?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],v,y,I,M,A,D),k=p?[T,w]:[w,T];if(i&&k.push(i),A&&k.push(r),D){const L=n.makeTensorInfo([],"float32",Ko(o,"float32"));k.push(L),b.push(L)}const N=n.runWebGLProgram(E,k,"float32"),z=Bt({inputs:{x:N},backend:n,attrs:{shape:e.outShape}});b.push(N);for(const L of b)n.disposeIntermediateTensorInfo(L);return z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n,h=fo(l),d=Jn(i.shape,r.shape,o,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=mR({x:i,filter:r,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&dt().getBool("WEBGL_EXP_CONV")){const g=new pR(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=e.runWebGLProgram(g,[i,r],"float32",m)}else if(dt().getBool("WEBGL_CONV_IM2COL"))f=gR({x:i,filter:r,convInfo:d,backend:e});else{const g=new fR(d);f=e.runWebGLProgram(g,[i,r],"float32")}const p=Bt({inputs:{x:f},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(f),p}const _rt={kernelName:$m,backendName:"webgl",kernelFunc:wrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Srt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Crt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Trt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Irt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=i-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ert(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n,h=fo(l),d=Jn(i.shape,u,o,1,a,c,!1,h),f=new Srt(d);return e.runWebGLProgram(f,[i,r],"float32")}const Mrt={kernelName:gb,backendName:"webgl",kernelFunc:Ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function krt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n,h=fo(c),d=Jn(o,r.shape,a,1,l,u,!1,h),f=new Crt(d);return e.runWebGLProgram(f,[i,r],"float32")}const Art={kernelName:Lm,backendName:"webgl",kernelFunc:krt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=Yo(i.shape,r.shape,o,l,a),u=new brt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Rrt={kernelName:Fm,backendName:"webgl",kernelFunc:Nrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Drt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n,c=Yo(i.shape,l,o,1,a),u=new Trt(c);return e.runWebGLProgram(u,[i,r],"float32")}const $rt={kernelName:xb,backendName:"webgl",kernelFunc:Drt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lrt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n,c=Yo(l,r.shape,a,1,o),u=new Irt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Frt={kernelName:vb,backendName:"webgl",kernelFunc:Lrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Prt=fu+`
  return cos(x);
`,Ort=Ae({opSnippet:Prt}),zrt={kernelName:Wh,backendName:"webgl",kernelFunc:Ort};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Brt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Urt=Ae({opSnippet:Brt}),Vrt={kernelName:Gh,backendName:"webgl",kernelFunc:Urt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wrt{constructor(t,e,n,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=t,[u]=e,[h,d]=n;this.outputShape=[u,h,d,c];const f=i==="bilinear"?1:0,[p,g]=[`${a-1}.0`,`${l-1}.0`],[m,x,v]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${b};

        float in_y = ${v};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Grt=s=>{const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,u=new Wrt(i.shape,r.shape,a,l,c);return e.runWebGLProgram(u,[i,r,o],"float32")},Hrt={kernelName:yb,backendName:"webgl",kernelFunc:Grt};var wh;(function(s){s.Prod="*",s.Sum="+"})(wh||(wh={}));class lT{constructor(t,e,n,i){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===wh.Prod?"1.0":"0.0",a=n?o:`getX(${cT(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ye(r)} coords = getOutputCoords();
        int end = ${uT(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${uT(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${cT(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function cT(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}function uT(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(s,t,e,n,i,r){const o=t.shape.length,a=un([n],o);let l=t;a!=null&&(l=fs({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=bn(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);const u=l.shape[c];let h=Ws({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new lT(s,l.shape,!1,r),p=[[d]],g=h;h=e.runWebGLProgram(f,[h],h.dtype,p),e.disposeIntermediateTensorInfo(g)}if(i){const d=new lT(s,l.shape,i,r),f=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Zo(a),f=fs({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return xR(wh.Prod,i,e,r,o,a)}const jrt={kernelName:bb,backendName:"webgl",kernelFunc:qrt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return xR(wh.Sum,i,e,r,o,a)}const Krt={kernelName:Pm,backendName:"webgl",kernelFunc:Xrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=ZN(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=lnt(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const Zrt={kernelName:wb,backendName:"webgl",kernelFunc:Yrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jrt{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],c=o==="NHWC"?i.shape[2]:i.shape[3],u=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,f=u/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],g=new Jrt(p,r,o);return e.runWebGLProgram(g,[i],i.dtype)}const tot={kernelName:_b,backendName:"webgl",kernelFunc:Qrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ms(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";n&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ms(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const v=x*2;if(f+=`
          xC = xCCorner + ${v*c};
          `,l===1){if(v<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }
              `,c===1&&v>0?f+=`
                xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                  } else {
                    xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xC${v} = xTexelC${v};
                `,v+1<h)){const y=a%2===0?ob(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                    xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${v+1}.zw = vec2(0.0);
                    }
                    xTexelC${v+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                    } else {
                     xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                    }
                    `:f+=`
                    xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                    `):y===1?f+=`
                    xC${v+1} = xTexelC${v};
                    `:f+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                      xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${v+1}.zw = vec2(0.0);
                      }
                      xTexelC${v+1}Ready = 1;
                    }

                    xC${v+1} = xTexelC${v+1};
                    `}}else v<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.0);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
              `,v+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(
                  xTexelC${v}.xy, xTexelC${v+1}.xy);
              `,v+1<h&&(f+=`
                  xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                `)));v<h&&(f+=`
            wTexel = getW(r, ${v}, d1, q);
            dotProd += xC${v} * vec4(wTexel.xz, wTexel.xz);
          `,v+1<h&&(f+=`
              wTexel = getW(r, ${v+1}, d1, q);
              dotProd += xC${v+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",g="";n&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;let u=l;u==null&&(u=[1,1]),P(as(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=Jn(i.shape,r.shape,o,u,a,c,!0);let d;dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new bR(h):d=new vR(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[i,r],"float32",f)}const not={kernelName:Om,backendName:"webgl",kernelFunc:eot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sot{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class iot{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n,h=Jn(i.shape,u,o,a,l,c,!0),d=new sot(h);return e.runWebGLProgram(d,[i,r],"float32")}const oot={kernelName:Sb,backendName:"webgl",kernelFunc:rot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aot(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n,h=Jn(u,r.shape,o,a,l,c,!0),d=new iot(h);return e.runWebGLProgram(d,[i,r],"float32")}const lot={kernelName:Cb,backendName:"webgl",kernelFunc:aot};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cot{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uot(s){const{inputs:t,backend:e}=s,{x:n}=t,i=[...n.shape,...n.shape],r=gt(n.shape),o=Bt({inputs:{x:n},backend:e,attrs:{shape:[r]}}),a=new cot(r),l=e.runWebGLProgram(a,[o],o.dtype),c=Bt({inputs:{x:l},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),c}const hot={kernelName:xI,backendName:"webgl",kernelFunc:uot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dot{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=kd(i.shape,r.shape,o,a,"NHWC",l);let u;const h=new dot(c);u=e.runWebGLProgram(h,[i,r],"float32");const d=Bt({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const pot={kernelName:zm,backendName:"webgl",kernelFunc:fot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mot(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=rw(i,r.length);aw(o.length,l,r);const{path:c,steps:u}=lw(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:v}=ow(f,l[m]);let y;cw(x)?y=r[m]:(y=fs({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(y));const b=y.shape.slice();for(let w=0;w<v.length;++w)b.splice(v[w],0,1);Le(y.shape,b)||(y=Bt({inputs:{x:y},backend:e,attrs:{shape:b}}),p.push(y)),d===null?d=y:(d=Zw({inputs:{a:y,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=e0({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const got={kernelName:vI,backendName:"webgl",kernelFunc:mot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xot="return (x >= 0.0) ? x : (exp(x) - 1.0);",vot=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,bot=Ae({opSnippet:xot,packedOpSnippet:vot}),yot={kernelName:qh,backendName:"webgl",kernelFunc:bot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wot="return (b >= 1.0) ? a : a * (b + 1.0);",_ot=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Sot=s=>{const{inputs:t,backend:e}=s,{dy:n,y:i}=t,r=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yd(_ot,n.shape,i.shape):new Gc(wot,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],n.dtype)},Cot={kernelName:Tb,backendName:"webgl",kernelFunc:Sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tot=`
  return vec4(equal(a, b));
`,Iot="return float(a == b);",Eot=ts({opSnippet:Iot,packedOpSnippet:Tot,dtype:"bool",cpuKernelImpl:dnt}),Mot={kernelName:Bm,backendName:"webgl",kernelFunc:Eot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kot=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Jy};
  float a1 = ${Qy};
  float a2 = ${tw};
  float a3 = ${ew};
  float a4 = ${nw};
  float a5 = ${sw};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Aot=Ae({opSnippet:kot}),Not={kernelName:jh,backendName:"webgl",kernelFunc:Aot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rot=fu+`
  return exp(x);
`,Dot=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yR=Ae({opSnippet:Rot,packedOpSnippet:Dot,cpuKernelImpl:fnt,dtype:"float32"}),$ot={kernelName:Xh,backendName:"webgl",kernelFunc:yR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $v(s){const{inputs:t,attrs:e,backend:n}=s,{dim:i}=e,{input:r}=t,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(P(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Bt({inputs:{x:r},backend:n,attrs:{shape:a}})}const Lot={kernelName:Um,backendName:"webgl",kernelFunc:$v};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT="return exp(x) - 1.0;",Fot=Ae({opSnippet:hT,packedOpSnippet:hT,cpuKernelImpl:pnt}),Pot={kernelName:Kh,backendName:"webgl",kernelFunc:Fot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dT{constructor(t,e,n){this.variableNames=["real","imag"];const i=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${i}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(s,t,e){const n=e.texData.get(s.dataId),i=gt(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=Bt({inputs:{x:s},backend:e,attrs:{shape:[o,r]}}),l=a.shape,c=new dT("real",l,t),u=new dT("imag",l,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=ia({inputs:{real:d,imag:f},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f);const g=Bt({inputs:{x:p},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oot(s){const{inputs:t,backend:e}=s,{input:n}=t;return wR(n,!1,e)}const zot={kernelName:Ib,backendName:"webgl",kernelFunc:Oot};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bot{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jd(s){const{backend:t,attrs:e}=s,{shape:n,value:i}=e;let{dtype:r}=e;if(r=r||Rh(i),r==="string"){const o=Sn(r,gt(n));return o.fill(i),t.makeTensorInfo(n,r,o)}else{const o=new Bot(n,i),a=[[i]];return t.runWebGLProgram(o,[],r,a)}}const Uot={kernelName:Eb,backendName:"webgl",kernelFunc:Jd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vot{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wot={kernelName:Mb,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:e}=s,n=t,i=new Vot(e.shape);return n.runWebGLProgram(i,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT="return floor(x);",Got=Ae({opSnippet:fT,packedOpSnippet:fT,cpuKernelImpl:mnt}),Hot={kernelName:Yh,backendName:"webgl",kernelFunc:Got};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qot=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,jot=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Xot=ts({opSnippet:qot,packedOpSnippet:jot,dtype:"int32"}),Kot={kernelName:Zh,backendName:"webgl",kernelFunc:Xot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yot{constructor(t){this.variableNames=["A"];const e=ps(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zot{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=ps(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jot={kernelName:dV,backendName:"webgl",kernelFunc:Qot};let Yl,_x=dt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Qot(s){const{inputs:t,backend:e,attrs:n}=s;let{pixels:i}=t;const{numChannels:r}=n,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(a||o){const g=dt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Yl==null||g!==_x)&&(_x=g,Yl=document.createElement("canvas").getContext("2d",{willReadFrequently:_x})),Yl.canvas.width=l,Yl.canvas.height=c,Yl.drawImage(i,0,0,l,c),i=Yl.canvas}const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=Ys.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),i);const f=dt().getBool("WEBGL_PACK")?new Zot(h):new Yot(h),p=e.runWebGLProgram(f,[d],"int32");return e.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,g=fo(u),m=Jn(i.shape,r.shape,l,h,c,d,!1,g);let x;const v=[],y=o!=null,b=a!=null,w=f==="leakyrelu",_=()=>{const S=[i,r],T=(I,A)=>{if(A==="NCHW"&&I.shape.length===1&&I.shape[0]!==1){const D=Bt({inputs:{x:I},backend:e,attrs:{shape:[I.shape[0],1,1]}});return v.push(D),D}return I};if(y&&S.push(T(o,u)),b&&S.push(T(a,u)),w){const I=e.makeTensorInfo([],"float32",Ko(p,"float32"));S.push(I),v.push(I)}return S};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))x=mR({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&g==="channelsLast"&&dt().getBool("WEBGL_EXP_CONV")){const S=f?bh(f,!0):null,T=new pR(m,y,S,b,w),I=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],A=_();x=e.runWebGLProgram(T,A,"float32",I)}else if(dt().getBool("WEBGL_CONV_IM2COL"))x=gR({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const S=f?bh(f,!1):null,T=new fR(m,y,S,b,w),I=_();x=e.runWebGLProgram(T,I,"float32")}const C=Bt({inputs:{x},backend:e,attrs:{shape:m.outShape}});return v.push(x),v.forEach(S=>e.disposeIntermediateTensorInfo(S)),C}const eat={kernelName:Np,backendName:"webgl",kernelFunc:tat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n,p=[];let g=u;g==null&&(g=[1,1]),P(as(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=Jn(i.shape,r.shape,l,g,c,h,!0),x=dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,v=d?bh(d,x):null,y=[i,r],b=o!=null,w=a!=null,_=d==="leakyrelu";if(b&&y.push(o),w&&y.push(a),_){const I=e.makeTensorInfo([],"float32",Ko(f,"float32"));y.push(I),p.push(I)}let C;x?C=new bR(m,b,v,w,_):C=new vR(m,b,v,w,_);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],T=e.runWebGLProgram(C,y,"float32",S);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),T}const sat={kernelName:kI,backendName:"webgl",kernelFunc:nat};class iat{constructor(t,e,n,i){this.sliceDim=t,this.strides=e,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=n;const r=Ye(n.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rat(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=i.shape,o=r[r.length-1],a=gt(n.shape),[l,c,u,h]=ry(n,i),d=Bt({inputs:{x:i},backend:e,attrs:{shape:[c,o]}}),f=Bt({inputs:{x:n},backend:e,attrs:{shape:[gt(n.shape)/u,u]}});if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const x=e.readSync(i.dataId),v=e.bufferSync(n),y=gnt(x,v,n.dtype,c,o,u,h,n.shape,a);return e.makeTensorInfo(l,n.dtype,y.values)}const p=new iat(o,h,[c,u],n.shape),g=e.runWebGLProgram(p,[f,d],f.dtype),m=Bt({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const oat={kernelName:bI,backendName:"webgl",kernelFunc:rat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aat{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Ye(this.rank),i=lat(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function lat(s,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s.length;i++)i===2?n.push("index"):n.push(`${e[i]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n,l=be(o,i.shape)[0];if(dt().get("DEBUG")){const v=e.readSync(r.dataId),y=i.shape[l];for(let b=0;b<v.length;++b){const w=v[b];P(w<=y-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${y-1}]`)}}const c=hw(i,r,l,a),u=gt(r.shape),h=[],d=Bt({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Bt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const v=e.bufferSync(f),y=e.bufferSync(d),b=xnt(y,v,p);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(c.outputShape,b.dtype,b.values)}const g=new aat(d.shape,p),m=e.runWebGLProgram(g,[d,f],d.dtype);h.push(m);const x=Bt({inputs:{x:m},backend:e,attrs:{shape:c.outputShape}});return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const cat={kernelName:Wm,backendName:"webgl",kernelFunc:_R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uat="return float(a > b);",hat=`
  return vec4(greaterThan(a, b));
`,dat=ts({opSnippet:uat,packedOpSnippet:hat,cpuKernelImpl:vnt,dtype:"bool"}),fat={kernelName:Gm,backendName:"webgl",kernelFunc:dat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pat="return float(a >= b);",mat=`
  return vec4(greaterThanEqual(a, b));
`,gat=ts({opSnippet:pat,packedOpSnippet:mat,dtype:"bool",cpuKernelImpl:bnt}),xat={kernelName:Jh,backendName:"webgl",kernelFunc:gat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vat(s){const{inputs:t,backend:e}=s,{input:n}=t;return wR(n,!0,e)}const bat={kernelName:kb,backendName:"webgl",kernelFunc:vat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yat="return float(!isnan(x) && !isinf(x));",wat=Ae({opSnippet:yat,dtype:"bool"}),_at={kernelName:td,backendName:"webgl",kernelFunc:wat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sat="return float(isinf(x));",Cat=Ae({opSnippet:Sat,dtype:"bool"}),Tat={kernelName:ed,backendName:"webgl",kernelFunc:Cat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iat="return float(isnan(x));",Eat=Ae({opSnippet:Iat,dtype:"bool"}),Mat={kernelName:nd,backendName:"webgl",kernelFunc:Eat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kat="return float(a < b);",Aat=`
  return vec4(lessThan(a, b));
`,Nat=ts({opSnippet:kat,packedOpSnippet:Aat,cpuKernelImpl:ynt,dtype:"bool"}),Rat={kernelName:qm,backendName:"webgl",kernelFunc:Nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dat="return float(a <= b);",$at=`
  return vec4(lessThanEqual(a, b));
`,Lat=ts({opSnippet:Dat,packedOpSnippet:$at,cpuKernelImpl:wnt,dtype:"bool"}),Fat={kernelName:jm,backendName:"webgl",kernelFunc:Lat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pat(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=_nt(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const Oat={kernelName:yI,backendName:"webgl",kernelFunc:Pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zat=fu+`
  return x < 0.0 ? 0./0. : log(x);
`,Bat=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Uat=Ae({opSnippet:zat,packedOpSnippet:Bat,cpuKernelImpl:Snt}),Vat={kernelName:sd,backendName:"webgl",kernelFunc:Uat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wat=fu+`
  return log(1.0 + x);
`,Gat=Ae({opSnippet:Wat}),Hat={kernelName:id,backendName:"webgl",kernelFunc:Gat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qat="return float(a >= 1.0 && b >= 1.0);",jat=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Xat=ts({opSnippet:qat,packedOpSnippet:jat,dtype:"bool"}),Kat={kernelName:Xm,backendName:"webgl",kernelFunc:Xat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yat="return float(!(x >= 1.0));",Zat=Ae({opSnippet:Yat}),Jat={kernelName:Km,backendName:"webgl",kernelFunc:Zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qat="return float(a >= 1.0 || b >= 1.0);",tlt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,elt=ts({opSnippet:Qat,packedOpSnippet:tlt,dtype:"bool"}),nlt={kernelName:Ym,backendName:"webgl",kernelFunc:elt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class slt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ilt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rlt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n,c=dt().getBool("WEBGL_PACK_NORMALIZATION")?new ilt(i.shape,r,o,a,l):new slt(i.shape,r,o,a,l);return e.runWebGLProgram(c,[i],i.dtype)},olt={kernelName:Zm,backendName:"webgl",kernelFunc:rlt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class alt{constructor(t,e,n,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const llt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n,h=new alt(i.shape,a,l,c,u);return e.runWebGLProgram(h,[i,r,o],i.dtype)},clt={kernelName:Nb,backendName:"webgl",kernelFunc:llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ult(s,t,e,n){const i=gt(t),o=gt(s.shape)/i,a=Bt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Sl(a,s.dtype,"max",n),c=Bt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=i.shape.length,l=be(r,i.shape);let c=l;const u=un(c,a),h=u!=null,d=e.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const y=e.texData.get(f.dataId).values,b=new Array(a);for(let C=0;C<b.length;C++)b[C]=i.shape[u[C]];const w=Kw(y,i.shape,i.dtype,u,b);f=e.makeTensorInfo(b,i.dtype);const _=e.texData.get(f.dataId);_.values=w}else f=t0(i,u,e);c=bn(c.length,a)}Qn("max",c,a);const[p,g]=Vn(f.shape,c);let m=p;o&&(m=vn(p,l));let x;if(d){const y=e.texData.get(f.dataId).values,b=Cnt(y,gt(g),m,i.dtype);x=e.makeTensorInfo(m,i.dtype);const w=e.texData.get(x.dataId);w.values=b}else x=ult(f,g,m,e);return h&&e.disposeIntermediateTensorInfo(f),x}const hlt={kernelName:Jm,backendName:"webgl",kernelFunc:SR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dlt=Yw+`
  return max(a, b);
`,flt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Kd+`
  return result;
`,plt=ts({opSnippet:dlt,packedOpSnippet:flt,cpuKernelImpl:Tnt}),mlt={kernelName:rd,backendName:"webgl",kernelFunc:plt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function glt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;jd(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(as(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Ri(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))return Ws({inputs:{x:i},backend:e});const h=new yh(u,"max",!1);return e.runWebGLProgram(h,[i],i.dtype)}const xlt={kernelName:Qm,backendName:"webgl",kernelFunc:glt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vlt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=n,u=[1,1,1],h=ho(i.shape,r,o,u,a,c,l),d=new Jw(h,"max",!1);return e.runWebGLProgram(d,[i],i.dtype)}const blt={kernelName:tg,backendName:"webgl",kernelFunc:vlt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ylt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,i=t.dilationHeight,r=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=r-1-t.padInfo.top,l=o-1-t.padInfo.left,c=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class wlt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,f=u-1-t.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _lt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=ho(o.shape,a,l,h,c,u),f=new Jw(d,"max",!0),p=e.runWebGLProgram(f,[o],o.dtype),g=new wlt(d),m=e.runWebGLProgram(g,[i,p],o.dtype);return e.disposeIntermediateTensorInfo(p),m}const Slt={kernelName:Db,backendName:"webgl",kernelFunc:_lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Clt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;jd([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=Ri(a.shape,l,c,1,u,h),f=!0,p=new yh(d,"max",f),g=e.runWebGLProgram(p,[a],a.dtype),m=new ylt(d),x=e.runWebGLProgram(m,[i,g],a.dtype);return e.disposeIntermediateTensorInfo(g),x}const Tlt={kernelName:Rb,backendName:"webgl",kernelFunc:Clt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ilt(s,t,e,n){let i=new yh(e,"max",!1);const r=n.runWebGLProgram(i,[s],"float32");i=new yh(e,"max",!0,!0,t);const o=n.runWebGLProgram(i,[s],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Elt={kernelName:wI,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;P(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const c=[1,1];P(as(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Ri(n.shape,i,r,c,o),[h,d]=Ilt(n,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mlt(s,t,e,n){const i=gt(t),o=gt(s.shape)/i,a=Bt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Sl(a,"float32","mean",n),c=Bt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const klt={kernelName:eg,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{keepDims:i,axis:r}=t,o=e,a=n.shape.length,l=be(r,n.shape);let c=l;const u=un(c,a),h=u!=null,d=o.shouldExecuteOnCPU([n]),f=[];let p=n;if(h){if(d){const b=o.texData.get(p.dataId).values,w=new Array(a);for(let S=0;S<w.length;S++)w[S]=n.shape[u[S]];const _=Kw(b,n.shape,n.dtype,u,w);p=o.makeTensorInfo(w,n.dtype);const C=o.texData.get(p.dataId);C.values=_}else p=t0(n,u,o);f.push(p),c=bn(c.length,a)}Qn("sum",c,a);const[g,m]=Vn(p.shape,c);let x=g;i&&(x=vn(g,l));const v=Mlt(p,m,x,o);for(const y of f)o.disposeIntermediateTensorInfo(y);return v}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Alt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=be(r,i.shape);let c=l;const u=un(c,a);let h=i;u!=null&&(h=fs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=bn(c.length,i.shape.length)),Qn("min",c,a);const[d,f]=Vn(h.shape,c),p=gt(f),g=Bt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Sl(g,g.dtype,"min",e);let x;if(o){const v=vn(d,l);x=Bt({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=Bt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const Nlt={kernelName:ng,backendName:"webgl",kernelFunc:Alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rlt=Yw+`
  return min(a, b);
`,Dlt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Kd+`
  return result;
`,$lt=ts({opSnippet:Rlt,packedOpSnippet:Dlt,cpuKernelImpl:Int}),Llt={kernelName:od,backendName:"webgl",kernelFunc:$lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Flt{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const i=t.length,r=Ye(i),o=e.map(u=>u[0]).join(","),a=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=n==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Plt{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,g)=>p[0]+t[g]+p[1]);const i=t.length,r=Ye(i),o=e.map(p=>p[0]).join(","),a=e.map((p,g)=>p[0]+t[g]).join(","),l=hs("rc",i),c=hs("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1;let f="";if(i===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Olt=({inputs:s,backend:t,attrs:e})=>{const{x:n}=s,{paddings:i,mode:r}=e,o=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Plt(n.shape,i,r):new Flt(n.shape,i,r);return t.runWebGLProgram(o,[n],n.dtype)},zlt={kernelName:sg,backendName:"webgl",kernelFunc:Olt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Blt=`if (b == 0.0) return NAN;
  return mod(a, b);`,Ult=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Kd+`
  return result;
`,Vlt=ts({opSnippet:Blt,packedOpSnippet:Ult}),Wlt={kernelName:ad,backendName:"webgl",kernelFunc:Vlt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Glt{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hlt=`
if (a == b) {
  return 1.0;
};
return a / b;`,qlt=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,CR=ts({opSnippet:Hlt,packedOpSnippet:qlt,checkOutOfBounds:!0}),jlt={kernelName:Hh,backendName:"webgl",kernelFunc:CR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT="return a - b;",TR=ts({opSnippet:pT,packedOpSnippet:pT,supportsComplex:!0,cpuKernelImpl:qnt}),Xlt={kernelName:Sd,backendName:"webgl",kernelFunc:TR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=be([r],i.shape),a=SR({inputs:{x:i},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=vn(a.shape,o),c=Bt({inputs:{x:a},backend:e,attrs:{shape:l}}),u=TR({inputs:{a:i,b:c},backend:e}),h=yR({inputs:{x:u},backend:e}),d=e0({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),f=Bt({inputs:{x:d},backend:e,attrs:{shape:l}}),p=CR({inputs:{a:h,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}const Klt={kernelName:wg,backendName:"webgl",kernelFunc:IR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ylt(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n,l=a?i:IR({inputs:{logits:i},backend:e,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new Glt(c,u,r),d=[[o]],f=e.runWebGLProgram(h,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),f}const Zlt={kernelName:_I,backendName:"webgl",kernelFunc:Ylt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jlt=$i+`
  return -x;
`,Qlt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function tct(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])){const r=e.texData.get(n.dataId),[o,a]=Mnt(r.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,o)}let i;return dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Na(n.shape,Qlt):i=new so(n.shape,Jlt),e.runWebGLProgram(i,[n],n.dtype)}const ect={kernelName:ig,backendName:"webgl",kernelFunc:tct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nct=Py;function sct(s){Ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),{selectedIndices:h}=nct(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const ict={kernelName:$b,backendName:"webgl",kernelFunc:sct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rct=Oy;function oct(s){Ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=rct(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const act={kernelName:Lb,backendName:"webgl",kernelFunc:oct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lct=zy;function cct(s){Ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=lct(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const uct={kernelName:Fb,backendName:"webgl",kernelFunc:cct};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hct{constructor(t,e,n,i){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dct=s=>{const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n,c=gt(i.shape),u=new hct(c,o,a,l),h=Bt({inputs:{x:i},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(u,[h],r);e.disposeIntermediateTensorInfo(h);const f=[...i.shape,o],p=Bt({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(d),p},fct={kernelName:ag,backendName:"webgl",kernelFunc:dct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rm(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="complex64"){const i=Zd({inputs:{input:n},backend:e}),r=rm({inputs:{x:i},backend:e}),o=n0({inputs:{input:n},backend:e}),a=rm({inputs:{x:o},backend:e}),l=ia({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Jd({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}const pct={kernelName:Cg,backendName:"webgl",kernelFunc:rm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=Zd({inputs:{input:n},backend:e}),r=ER({inputs:{x:i},backend:e}),o=n0({inputs:{input:n},backend:e}),a=rm({inputs:{x:o},backend:e}),l=ia({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Jd({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}const mct={kernelName:og,backendName:"webgl",kernelFunc:ER};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gct(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return $v({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{Ni(r,u.shape,"All tensors passed to stack must have matching shapes"),P(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=$v({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=dR({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const xct={kernelName:lg,backendName:"webgl",kernelFunc:gct};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vct{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const i=t.length,r=Ye(i),o=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bct{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const i=t.length,r=Ye(i),o=e.map(g=>g[0]).join(","),a=e.map((g,m)=>g[0]+t[m]).join(","),l=hs("rc",i),c=hs("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let g=0,m=i===1?2:4;g<m;g++)p+=`
        ${d[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;if(gt(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return Jd({backend:e,attrs:{shape:c,value:o,dtype:i.dtype}})}const a=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bct(i.shape,r,o):new vct(i.shape,r,o),l=[[o]];return e.runWebGLProgram(a,[i],i.dtype,l)},yct={kernelName:cg,backendName:"webgl",kernelFunc:MR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wct=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,_ct=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Kd+`
  return result;
`,Sct=ts({opSnippet:wct,packedOpSnippet:_ct}),Cct={kernelName:cd,backendName:"webgl",kernelFunc:Sct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=[],c=be(r,i.shape);let u=c;const h=un(u,a);let d=i;h!=null&&(d=fs({inputs:{x:i},backend:e,attrs:{perm:h}}),u=bn(u.length,a),l.push(d)),Qn("prod",u,a);let f;if(e.shouldExecuteOnCPU([d])){const p=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:x}=Ant(d.shape,d.dtype,p,u);f=e.makeTensorInfo(m,x,g)}else{const[p,g]=Vn(d.shape,u),m=gt(g),x=Bt({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),v=ey(i.dtype),y=Sl(x,v,"prod",e);f=Bt({inputs:{x:y},backend:e,attrs:{shape:p}}),l.push(x),l.push(y)}if(o){l.push(f);const p=vn(f.shape,c);f=Bt({inputs:{x:f},backend:e,attrs:{shape:p}})}return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const Ict={kernelName:hg,backendName:"webgl",kernelFunc:Tct};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ect(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:a}=n,l=i.map(x=>e.readSync(x.dataId)),c=i.map(x=>x.shape),u=e.readSync(r.dataId),h=e.readSync(o.dataId),[d,f,p]=Nnt(l,c,u,r.shape,r.dtype,h,o.shape,a),g=d.map(x=>e.makeTensorInfo([x.length],"int32",x)),m=e.makeTensorInfo(p,r.dtype,f);return g.concat([m])}const Mct={kernelName:SI,backendName:"webgl",kernelFunc:Ect};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kct(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=Rnt(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const Act={kernelName:CI,backendName:"webgl",kernelFunc:kct};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nct(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a.map(m=>e.readSync(m.dataId)),f=a.map(m=>m.shape),[p,g]=Dnt(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const Rct={kernelName:TI,backendName:"webgl",kernelFunc:Nct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR=s=>{const{backend:t,attrs:e}=s,{start:n,stop:i,step:r,dtype:o}=e,a=$nt(n,i,r,o);return t.makeTensorInfo([a.length],o,a)},Dct={kernelName:Pb,backendName:"webgl",kernelFunc:kR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ct="return 1.0 / x;",Lct=Ae({opSnippet:$ct}),Fct={kernelName:ud,backendName:"webgl",kernelFunc:Lct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pct=$i+`
  return (x < 0.0) ? 0.0 : x;
`,Oct=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zct=Ae({opSnippet:Pct,packedOpSnippet:Oct}),Bct={kernelName:hd,backendName:"webgl",kernelFunc:zct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uct=$i+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Vct=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Wct=Ae({opSnippet:Uct,packedOpSnippet:Vct}),Gct={kernelName:dd,backendName:"webgl",kernelFunc:Wct};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hct{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qct{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jct(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qct(i.shape,l,c,r,o):new Hct(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],"float32")}const Xct={kernelName:pg,backendName:"webgl",kernelFunc:jct};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kct{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yct(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new Kct(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const Zct={kernelName:Bb,backendName:"webgl",kernelFunc:Yct};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jct{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qct{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tut(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qct(i.shape,l,c,r,o):new Jct(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],i.dtype)}const eut={kernelName:fg,backendName:"webgl",kernelFunc:tut};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nut{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sut(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new nut(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const iut={kernelName:zb,backendName:"webgl",kernelFunc:sut};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rut{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const i=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,r=t.map((a,l)=>i(l)).join(","),o=Ye(n);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class out{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const i=hs("rc",n),r=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Ye(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${o}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function u(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function h(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){const g=t.map((v,y)=>f(y,p)),m=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${x}))`}function f(p,g){return e.indexOf(p)!==-1&&t[p]!==1?`${t[p]} - ${g[p]} - 1`:`${g[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aut(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n,o=i.shape.length,a=be(r,i.shape);if(o===0)return Ws({inputs:{x:i},backend:e});const l=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new out(i.shape,a):new rut(i.shape,a);return e.runWebGLProgram(l,[i],i.dtype)}const lut={kernelName:mg,backendName:"webgl",kernelFunc:aut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cut{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],i=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uut={kernelName:Qb,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=new cut(n.shape,r),[c,u]=Ky(o,n.shape[1],n.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hut=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,dut=Ae({opSnippet:hut}),fut={kernelName:fd,backendName:"webgl",kernelFunc:dut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const put="return inversesqrt(x);",mut=Ae({opSnippet:put,cpuKernelImpl:Lnt}),gut={kernelName:pd,backendName:"webgl",kernelFunc:mut};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AR{constructor(t,e,n,i,r,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const l=Ye(r.length),c=Ye(o.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";i===1?d="i":i===2&&(d="i, coords[1]");const f=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xut(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Md(r,i,o),d=[h/c,c];if(h===0)return e.makeTensorInfo(o,i.dtype);const f=Bt({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),p=Bt({inputs:{x:r},backend:e,attrs:{shape:[l,c]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),m=new AR(l,a,f.shape.length,p.shape.length,u,d),x=e.runWebGLProgram(m,[p,f,g],p.dtype),v=Bt({inputs:{x},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),v}const vut={kernelName:II,backendName:"webgl",kernelFunc:xut};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class but{constructor(t,e,n,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=dt().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yut(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=new but(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return e.runWebGLProgram(a,[i,r],"int32",l)}const wut={kernelName:EI,backendName:"webgl",kernelFunc:yut};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ut{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let i,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);i=l.join(),r=c.join()}const o=Ye(n);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sut(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t,o=new _ut(n.shape.length,i.shape,i.shape.length);return e.runWebGLProgram(o,[n,i,r],zs(i.dtype,r.dtype))}const Cut={kernelName:gg,backendName:"webgl",kernelFunc:Sut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tut=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Og};
  float scale = ${zg};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Iut=Ae({opSnippet:Tut}),Eut={kernelName:md,backendName:"webgl",kernelFunc:Iut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mut=fu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,kut=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aut=Ae({opSnippet:Mut,packedOpSnippet:kut,cpuKernelImpl:Pnt}),Nut={kernelName:bd,backendName:"webgl",kernelFunc:Aut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rut=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Dut=Ae({opSnippet:Rut}),$ut={kernelName:vd,backendName:"webgl",kernelFunc:Dut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lut=fu+`
  return sin(x);
`,Fut=Ae({opSnippet:Lut}),Put={kernelName:gd,backendName:"webgl",kernelFunc:Fut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Out=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,zut=Ae({opSnippet:Out}),But={kernelName:xd,backendName:"webgl",kernelFunc:zut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uut=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Vut=Ae({opSnippet:Uut}),Wut={kernelName:yd,backendName:"webgl",kernelFunc:Vut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gut=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;P(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,v)=>x*v),l=[[0,0]];l.push(...o);for(let x=1+r.length;x<i.shape.length;++x)l.push([0,0]);const c=[],u=MR({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),h=$d(u.shape,r,a,!1),d=Ld(h.length,r.length,!1),f=Fd(u.shape,r,a,!1),p=Bt({inputs:{x:u},backend:e,attrs:{shape:h}}),g=fs({inputs:{x:p},backend:e,attrs:{perm:d}}),m=Bt({inputs:{x:g},backend:e,attrs:{shape:f}});return c.push(u),c.push(p),c.push(g),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),m},Hut={kernelName:bg,backendName:"webgl",kernelFunc:Gut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qut(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.readSync(n.dataId),l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=e.readSync(o.dataId)[0],[h,d,f,p,g]=znt(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const jut={kernelName:Ub,backendName:"webgl",kernelFunc:qut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xut(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.readSync(i.dataId)),a=e.readSync(n.dataId),l=Array.from(e.readSync(r.dataId)),[c,u,h]=Bnt(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const Kut={kernelName:Vb,backendName:"webgl",kernelFunc:Xut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yut(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=QN(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const Zut={kernelName:Wb,backendName:"webgl",kernelFunc:Yut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jut(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=QN(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const Qut={kernelName:Gb,backendName:"webgl",kernelFunc:Jut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tht(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Md(r,i,a),f=!1;if(r.dtype==="string"){const x=e.bufferSync(i),v=e.bufferSync(r),y=zo(e.readSync(o.dataId)[0]),b=Fnt(x,v,a,d,u,c,l,h,y,f);return e.makeTensorInfo(a,b.dtype,b.values)}const p=new AR(c,l,i.shape.length,r.shape.length,h,[d,1],f),g=e.runWebGLProgram(p,[r,i,o],r.dtype),m=Bt({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),m}const eht={kernelName:MI,backendName:"webgl",kernelFunc:tht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=be(o,i.shape)[0],l=uw(i,r,a),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=pu({inputs:{x:i},backend:e,attrs:{begin:u,size:f}});return u[a]+=d,p})}const sht={kernelName:yg,backendName:"webgl",kernelFunc:nht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT="return sqrt(x);",iht=Ae({opSnippet:mT,packedOpSnippet:mT,cpuKernelImpl:Unt}),rht={kernelName:wd,backendName:"webgl",kernelFunc:iht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oht="return x * x;",aht=Ae({opSnippet:oht}),lht={kernelName:Hb,backendName:"webgl",kernelFunc:aht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT="return (a - b) * (a - b);",cht=ts({opSnippet:gT,packedOpSnippet:gT}),uht={kernelName:_d,backendName:"webgl",kernelFunc:cht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hht({inputs:s,attrs:t,backend:e}){const{x:n}=s,i=$i+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new so(n.shape,i);return e.runWebGLProgram(r,[n],n.dtype)}const dht={kernelName:Ed,backendName:"webgl",kernelFunc:hht};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fht{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const i=n.length,r=Ye(n.length),o=Ye(n.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=n.map((c,u)=>(l++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:v,end:y,strides:b}=uy(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Bt({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){P(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const C=ay(v,y,b),S=pu({inputs:{x:i},backend:e,attrs:{begin:v,size:C}});w=Bt({inputs:{x:S},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(S)}else if(e.shouldExecuteOnCPU([i])){const S=e.readSync(i.dataId),T=ve(i.shape,i.dtype,S),I=Vnt(f,T,b,v);w=e.makeTensorInfo(p,i.dtype,I.values)}else{const S=new fht(v,b,f);w=e.runWebGLProgram(S,[i],i.dtype)}const _=Bt({inputs:{x:w},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(w),_}const mht={kernelName:qb,backendName:"webgl",kernelFunc:pht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ght(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.readSync(u.dataId),f=e.readSync(h.dataId),[p,g]=Wnt(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const xht={kernelName:jb,backendName:"webgl",kernelFunc:ght};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vht(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.readSync(r.dataId),l=e.readSync(o.dataId)[0],[c,u,h]=Gnt(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const bht={kernelName:Xb,backendName:"webgl",kernelFunc:vht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yht(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(r.dataId),a=Hnt(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const wht={kernelName:Kb,backendName:"webgl",kernelFunc:yht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ht="return tan(x);",Sht=Ae({opSnippet:_ht}),Cht={kernelName:Cd,backendName:"webgl",kernelFunc:Sht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tht=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Iht=Ae({opSnippet:Tht}),Eht={kernelName:Td,backendName:"webgl",kernelFunc:Iht};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mht{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const i=Ye(this.rank),r=kht(t);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function kht(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let i=0;i<s.length;i++)n.push(`imod(${e[i]}, ${s[i]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;if(i.dtype==="string"||i.shape.length>5){const l=e.readSync(i.dataId),c=i.dtype==="string"?l.map(d=>zo(d)):l,u=ve(i.shape,i.dtype,c),h=jnt(u,r);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new Mht(i.shape,r);return e.runWebGLProgram(o,[i],i.dtype)}const Aht={kernelName:Id,backendName:"webgl",kernelFunc:NR};class Nht{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Rht{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ga(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function xT(s){let t=1;for(;t<s;)t*=2;return t}function Dht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n,a=dt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=dt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([i])||u<a||r>l){const I=e.readSync(i.dataId),[A,D]=Xnt(I,c,i.dtype,r,o);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(D.shape,D.dtype,D.values)]}if(r===0)return c[c.length-1]=0,[e.makeTensorInfo(c,i.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[i,Jd({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?e.unpackTensor(i):i,g=gt(c)/u,m=Bt({inputs:{x:f},attrs:{shape:[g,u]},backend:e});d&&ga(e,f);const x=xT(r),v=xT(u);let y=null;const b=()=>y===null?[m,m]:[m,y],w=(I,A,D)=>{const M=b(),E=new Nht(D),N=[[u],[y===null?1:0],[Number.NEGATIVE_INFINITY],[I],[A]],z=y;y=e.runWebGLProgram(E,M,"int32",N),ga(e,z)};for(let I=1;I<x;I*=2){const A=I*2;for(let D=I;D>=1;D/=2)w(A,D,[g,v])}for(let I=v;I>x;I/=2){const A=b(),D=new Rht([g,I/2]),E=[[u],[y===null?1:0],[x]],k=y;y=e.runWebGLProgram(D,A,"int32",E),ga(e,k);const N=x/2,z=N*2;for(let L=N;L>=1;L/=2)w(z,L,y.shape)}let _=y;y=pu({inputs:{x:y},backend:e,attrs:{begin:0,size:[g,r]}}),ga(e,_);let C=_R({inputs:{x:m,indices:y},backend:e,attrs:{axis:1,batchDims:1}});ga(e,m);const S=c.slice(0,-1);S.push(r),_=y,y=Bt({inputs:{x:y},attrs:{shape:S},backend:e}),ga(e,_);const T=C;return C=Bt({inputs:{x:C},attrs:{shape:S},backend:e}),ga(e,T),[C,y]}const $ht={kernelName:Yb,backendName:"webgl",kernelFunc:Dht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lht{constructor(t,e,n,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=n==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fht(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=n,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=new Lht(h,d,o,a,l,m);return e.runWebGLProgram(x,[i,r],"float32")}const Pht={kernelName:Zb,backendName:"webgl",kernelFunc:Fht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oht(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;jd(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=n.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=Knt(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const zht={kernelName:Jb,backendName:"webgl",kernelFunc:Oht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bht(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],c=new Array(a-1);let u=0;for(let g=0;g<a;g++)g!==r&&(c[u++]=o.shape[g]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let g=0;g<p.length;g++){d[r]=g;const m=pu({inputs:{x:o},backend:e,attrs:{begin:d,size:f}}),x=Bt({inputs:{x:m},backend:e,attrs:{shape:c}});p[g]=x,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const Uht={kernelName:_g,backendName:"webgl",kernelFunc:Bht};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vht{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,i=t.batchSize,r=t.inSize,o=t.numSegments,a=o*Math.ceil(r/n);this.outputShape=[i,a];const l="0.0",c="sumValue",u=Math.floor(n/4)*4,h=n%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n,a=i.shape.length,l=[];let c=0;const u=un([c],a);let h=i;u!=null&&(h=fs({inputs:{x:i},backend:e,attrs:{perm:u}}),l.push(h),c=bn(1,a)[0]);const d=yM(h.shape,c,o),f=gt([h.shape[c]]),p=Bt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}});l.push(p);const g=ey(i.dtype),m=(b,w,_,C,S)=>{const T=b.shape[0],I=b.shape[1],A=bM(I,S),D={windowSize:A,inSize:I,batchSize:T,numSegments:S},M=new Vht(D,w),E=e.compileAndRun(M,[b,_],C);if(l.push(E),E.shape[1]===S)return E;const k=kR({backend:e,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),N=NR({inputs:{x:k},backend:e,attrs:{reps:[I/A]}});return l.push(k),l.push(N),m(E,w,N,C,S)},x=m(p,"unsortedSegmentSum",r,g,o),v=Bt({inputs:{x},backend:e,attrs:{shape:d}});let y=v;if(u!=null){l.push(v);const b=Zo(u);y=fs({inputs:{x:y},backend:e,attrs:{perm:b}})}return l.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const Ght={kernelName:Sg,backendName:"webgl",kernelFunc:Wht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hht=[Bst,Vst,Hst,Xst,Yst,Qst,eit,sit,ait,cit,dit,mit,vit,_it,Tit,Eit,kit,Dit,Lit,Pit,Uit,Xit,Yit,Jit,irt,ort,urt,Sst,frt,vrt,_rt,Mrt,Art,Rrt,$rt,Frt,zrt,Vrt,Hrt,jrt,Krt,Zrt,tot,not,oot,lot,hot,pot,got,yot,Cot,Mot,Not,$ot,Lot,Pot,zot,Uot,Wot,Hot,Kot,Jot,eat,sat,oat,cat,fat,xat,_st,bat,grt,_at,Tat,Mat,Tst,Rat,Fat,Oat,Vat,Hat,Kat,Jat,nlt,olt,clt,hlt,mlt,xlt,blt,Slt,Tlt,Elt,klt,Nlt,Llt,zlt,Wlt,Zlt,Mst,ect,ict,act,uct,trt,fct,mct,xct,yct,Cct,Est,Ict,Mct,Act,Rct,Dct,ert,jlt,Fct,Bct,Gct,Ast,Xct,Zct,eut,iut,lut,uut,fut,gut,vut,wut,Cut,Eut,Nut,$ut,Put,But,qit,Klt,Wut,Hut,jut,Kut,Zut,Qut,eht,sht,rht,lht,uht,dht,mht,xht,bht,wht,Xlt,Pst,Cht,Eht,Aht,$ht,Pht,Ost,zht,Uht,Ght,pct];for(const s of Hht)AI(s);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qht{constructor(t){jt(this,"canvas");jt(this,"debug",!1);jt(this,"timings",{renderStart:0,renderEnd:0,physicsStart:0,physicsEnd:0,uiStart:0,uiEnd:0});jt(this,"scene");jt(this,"renderer");jt(this,"gameObjects");jt(this,"world");jt(this,"controls");jt(this,"camera");jt(this,"cameraPosition");jt(this,"cameraQuaternion");jt(this,"resizeFunction");jt(this,"callback");jt(this,"ground");jt(this,"raceTrack");this.canvas=t,this.createCamera(),this.scene=new mO,this.addLighting(),this.createRenderer(),this.enableAutoResizer(),this.setupControls(),this.createPhyiscsWorld(),this.callback=()=>{};let e=new tz;const n=()=>{const i=Math.min(e.getDelta(),.03333333333333333);i>0&&this.update(i)};this.renderer.setAnimationLoop(n),this.gameObjects=[],this.ground=new KU,this.addGameObject(this.ground)}update(t){this.timings.physicsStart=performance.now(),this.world.step(t),this.gameObjects.forEach(n=>n.syncMeshesToBodies()),this.timings.physicsEnd=performance.now(),this.timings.uiStart=performance.now(),this.controls.update(),this.cameraPosition.lerp(this.camera.position,1-.9**(t/.016)),this.cameraQuaternion.slerp(this.camera.quaternion,1-.9**(t/.016));const e=this.camera.clone();e.position.copy(this.cameraPosition),e.quaternion.copy(this.cameraQuaternion),this.callback(t),this.timings.uiEnd=performance.now(),this.timings.renderStart=performance.now(),this.renderer.render(this.scene,e),this.timings.renderEnd=performance.now(),this.debug?this.renderDebug(t):this.clearDebug()}requestCallbackBeforeRender(t){this.callback=t}addGameObject(t){this.gameObjects.push(t),t.meshes.forEach(e=>this.scene.add(e)),t.bodies.forEach(e=>this.world.addBody(e)),t.constraints.forEach(e=>this.world.addConstraint(e))}removeGameObject(t){this.gameObjects=this.gameObjects.filter(e=>e!==t),t.meshes.forEach(e=>this.scene.remove(e)),t.bodies.forEach(e=>this.world.removeBody(e)),t.constraints.forEach(e=>this.world.removeConstraint(e))}addLighting(){this.scene.add(new QO(4210752));const t=new JO(16777215,.6);t.position.set(-1.1,1,.9),t.castShadow=!0,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,this.scene.add(t)}createRenderer(){this.renderer=new C2({antialias:!0,canvas:this.canvas}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=i2}createCamera(){this.camera=new mi(70,window.innerWidth/window.innerHeight,.01,100),this.camera.position.z=6,this.camera.position.y=3,this.camera.position.x=6,this.cameraPosition=this.camera.position.clone(),this.cameraQuaternion=this.camera.quaternion.clone()}createPhyiscsWorld(){this.world=new I4,this.world.gravity.set(0,-9.82,0),this.world.allowSleep=!0,this.world.broadphase=new rc(this.world),this.world.broadphase.axisIndex=0}setGravity(t,e,n){this.world.gravity.set(t,e,n)}enableAutoResizer(){if(this.resizeFunction)return;const t=()=>{this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight,!1),this.camera.aspect=this.canvas.offsetWidth/this.canvas.offsetHeight,this.camera.updateProjectionMatrix()};this.resizeFunction=t,window.addEventListener("resize",t),t()}disableAutoResizer(){this.resizeFunction&&window.removeEventListener("resize",this.resizeFunction),this.resizeFunction=void 0}setupControls(){this.controls=new D4(this.camera,this.renderer.domElement),this.controls.enableDamping=!1}renderDebug(t){const e=Lp();document.getElementById("debug-element").innerText=`FPS: ${Math.round(1/t)}
            Delta: ${(t*1e3).toFixed(2)}ms, ${(this.timings.renderEnd-this.timings.renderStart).toFixed(2)}ms render, ${(this.timings.physicsEnd-this.timings.physicsStart).toFixed(2)}ms physics, ${(this.timings.uiEnd-this.timings.uiStart).toFixed(2)}ms UI
            Pysics bodies: ${this.world.bodies.length}
            Physics constraints: ${this.world.constraints.length}
            Game objects: ${this.gameObjects.length}
            Three Meshes: ${this.scene.children.length}
            Three Memory info: ${this.renderer.info.memory.geometries} geometries, ${this.renderer.info.memory.textures} textures
            Render info: ${this.renderer.info.render.calls} calls, ${this.renderer.info.render.frame} frame, ${this.renderer.info.render.lines} lines, ${this.renderer.info.render.points} points, ${this.renderer.info.render.triangles} triangles
            Program info: ${this.renderer.info.programs.length} programs
            Tensorflow: ${e.numBytes} btyes, ${e.numDataBuffers} databuffers, ${e.numTensors} tensors, ${e.unreliable} unreliable`}clearDebug(){document.getElementById("debug-element").innerText=""}}const Zl=[];function jht(s,t=qe){let e;const n=new Set;function i(a){if(Yn(s,a)&&(s=a,e)){const l=!Zl.length;for(const c of n)c[1](),Zl.push(c,s);if(l){for(let c=0;c<Zl.length;c+=2)Zl[c][0](Zl[c+1]);Zl.length=0}}}function r(a){i(a(s))}function o(a,l=qe){const c=[a,l];return n.add(c),n.size===1&&(e=t(i)||qe),a(s),()=>{n.delete(c),n.size===0&&(e(),e=null)}}return{set:i,update:r,subscribe:o}}const RR=jht(null);function Xht(s){let t;return{c(){t=Dt("canvas"),st(t,"class","svelte-1v9nuep")},m(e,n){It(e,t,n),s[1](t)},p:qe,i:qe,o:qe,d(e){e&&Tt(t),s[1](null)}}}function Kht(s,t,e){let n,i;t2(()=>{i=new qht(n),RR.set(i),document.addEventListener("keydown",o=>{o.key==="d"&&(o.ctrlKey||o.metaKey)&&(i.debug=!i.debug,o.preventDefault())})});function r(o){_c[o?"unshift":"push"](()=>{n=o,e(0,n)})}return[n,r]}class Yht extends si{constructor(t){super(),ni(this,t,Kht,Xht,Yn,{})}}function Zht(s){let t,e,n,i=s[0].brushSize+"",r,o,a,l,c;return{c(){t=Dt("label"),e=fe("Road width: "),n=Dt("b"),r=fe(i),o=Jt(),a=Dt("input"),st(t,"for","steps-range"),st(t,"class","block mb-1 text-sm font-medium text-gray-300"),st(a,"id","steps-range"),st(a,"type","range"),st(a,"min","0.8"),st(a,"max","2"),st(a,"step","0.1"),st(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(u,h){It(u,t,h),Et(t,e),Et(t,n),Et(n,r),It(u,o,h),It(u,a,h),an(a,s[0].brushSize),l||(c=[xe(a,"change",s[1]),xe(a,"input",s[1])],l=!0)},p(u,[h]){h&1&&i!==(i=u[0].brushSize+"")&&wn(r,i),h&1&&an(a,u[0].brushSize)},i:qe,o:qe,d(u){u&&Tt(t),u&&Tt(o),u&&Tt(a),l=!1,ei(c)}}}function Jht(s,t,e){let{mode:n}=t;function i(){n.brushSize=bs(this.value),e(0,n)}return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class Qht extends si{constructor(t){super(),ni(this,t,Jht,Zht,Yn,{mode:0})}}function vT(s){let t,e,n,i=s[0].ground.body.material.friction+"",r,o,a,l,c,u,h,d=s[0].raceTrack.barrrierFriction+"",f,p,g,m,x;return{c(){t=Dt("label"),e=fe("Ground friction: "),n=Dt("b"),r=fe(i),o=Jt(),a=Dt("input"),l=Jt(),c=Dt("label"),u=fe("Barrier friction: "),h=Dt("b"),f=fe(d),p=Jt(),g=Dt("input"),st(t,"for","steps-range"),st(t,"class","block mb-1 text-sm font-medium text-gray-300"),st(a,"id","steps-range"),st(a,"type","range"),st(a,"min","0.05"),st(a,"max","1"),st(a,"step","0.02"),st(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(c,"for","steps-range"),st(c,"class","block my-1 text-sm font-medium text-gray-300"),st(g,"id","steps-range"),st(g,"type","range"),st(g,"min","0.0"),st(g,"max","1"),st(g,"step","0.02"),st(g,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(v,y){It(v,t,y),Et(t,e),Et(t,n),Et(n,r),It(v,o,y),It(v,a,y),an(a,s[0].ground.body.material.friction),It(v,l,y),It(v,c,y),Et(c,u),Et(c,h),Et(h,f),It(v,p,y),It(v,g,y),an(g,s[0].raceTrack.barrrierFriction),m||(x=[xe(a,"change",s[1]),xe(a,"input",s[1]),xe(g,"change",s[2]),xe(g,"input",s[2])],m=!0)},p(v,y){y&1&&i!==(i=v[0].ground.body.material.friction+"")&&wn(r,i),y&1&&an(a,v[0].ground.body.material.friction),y&1&&d!==(d=v[0].raceTrack.barrrierFriction+"")&&wn(f,d),y&1&&an(g,v[0].raceTrack.barrrierFriction)},d(v){v&&Tt(t),v&&Tt(o),v&&Tt(a),v&&Tt(l),v&&Tt(c),v&&Tt(p),v&&Tt(g),m=!1,ei(x)}}}function tdt(s){let t,e=s[0]!==null&&vT(s);return{c(){e&&e.c(),t=Pr()},m(n,i){e&&e.m(n,i),It(n,t,i)},p(n,[i]){n[0]!==null?e?e.p(n,i):(e=vT(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:qe,o:qe,d(n){e&&e.d(n),n&&Tt(t)}}}function edt(s,t,e){let{gameWorld:n}=t;function i(){n.ground.body.material.friction=bs(this.value),e(0,n)}function r(){n.raceTrack.barrrierFriction=bs(this.value),e(0,n)}return s.$$set=o=>{"gameWorld"in o&&e(0,n=o.gameWorld)},[n,i,r]}class DR extends si{constructor(t){super(),ni(this,t,edt,tdt,Yn,{gameWorld:0})}}function bT(s,t,e){const n=s.slice();return n[1]=t[e],n[3]=e,n}function yT(s){let t,e,n,i,r=(s[0].completion*100).toFixed(1)+"",o,a,l,c,u,h,d,f,p,g,m=s[0].sensorData.length+"",x,v,y,b,w,_,C,S=s[0].sensorData,T=[];for(let I=0;I<S.length;I+=1)T[I]=wT(bT(s,S,I));return{c(){t=Dt("div"),e=Dt("span"),e.textContent="Track completed",n=Jt(),i=Dt("span"),o=fe(r),a=fe("%"),l=Jt(),c=Dt("div"),u=Dt("div"),h=Jt(),d=Dt("div"),f=Dt("span"),f.textContent="Sensors",p=Jt(),g=Dt("span"),x=fe(m),v=fe(" sensors"),y=Jt();for(let I=0;I<T.length;I+=1)T[I].c();b=Jt(),w=Dt("div"),w.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Velocity: <span id="velocity-element"></span></span>',_=Jt(),C=Dt("hr"),st(e,"class","text-base font-medium text-blue-700 dark:text-white"),st(i,"id","completion-text"),st(i,"class","text-xs font-medium text-blue-700 dark:text-white"),st(t,"class","flex justify-between mb-1"),st(u,"id","completion-bar"),st(u,"class","bg-gradient-to-r from-[#FF0000] via-[#FF5733] to-[#00FF00] bg-[length:100%] h-2.5 rounded-full transition-[width]"),kr(u,"width",s[0].completion*100+"%"),st(c,"class","w-full bg-gray-700 rounded-full h-2.5 mb-3"),st(f,"class","text-base font-medium text-blue-700 dark:text-white"),st(g,"class","text-xs font-medium my-auto text-blue-700 dark:text-white"),st(d,"class","flex justify-between mb-1"),st(w,"class","flex justify-between mt-4 mb-1"),st(C,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(I,A){It(I,t,A),Et(t,e),Et(t,n),Et(t,i),Et(i,o),Et(i,a),It(I,l,A),It(I,c,A),Et(c,u),It(I,h,A),It(I,d,A),Et(d,f),Et(d,p),Et(d,g),Et(g,x),Et(g,v),It(I,y,A);for(let D=0;D<T.length;D+=1)T[D].m(I,A);It(I,b,A),It(I,w,A),It(I,_,A),It(I,C,A)},p(I,A){if(A&1&&r!==(r=(I[0].completion*100).toFixed(1)+"")&&wn(o,r),A&1&&kr(u,"width",I[0].completion*100+"%"),A&1&&m!==(m=I[0].sensorData.length+"")&&wn(x,m),A&1){S=I[0].sensorData;let D;for(D=0;D<S.length;D+=1){const M=bT(I,S,D);T[D]?T[D].p(M,A):(T[D]=wT(M),T[D].c(),T[D].m(b.parentNode,b))}for(;D<T.length;D+=1)T[D].d(1);T.length=S.length}},d(I){I&&Tt(t),I&&Tt(l),I&&Tt(c),I&&Tt(h),I&&Tt(d),I&&Tt(y),QT(T,I),I&&Tt(b),I&&Tt(w),I&&Tt(_),I&&Tt(C)}}}function wT(s){let t,e,n=s[1].distance.toFixed(2)+"",i;return{c(){t=Dt("div"),e=Dt("div"),i=fe(n),st(e,"id","arrow-length-indicator-"+s[3]),st(e,"class","bg-blue-600 mb-px bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"),kr(e,"width",s[1].distance*100+"%"),st(t,"class","w-full bg-gray-200 rounded-full dark:bg-gray-700")},m(r,o){It(r,t,o),Et(t,e),Et(e,i)},p(r,o){o&1&&n!==(n=r[1].distance.toFixed(2)+"")&&wn(i,n),o&1&&kr(e,"width",r[1].distance*100+"%")},d(r){r&&Tt(t)}}}function ndt(s){let t,e=s[0].car&&yT(s);return{c(){e&&e.c(),t=Pr()},m(n,i){e&&e.m(n,i),It(n,t,i)},p(n,[i]){n[0].car?e?e.p(n,i):(e=yT(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:qe,o:qe,d(n){e&&e.d(n),n&&Tt(t)}}}function sdt(s,t,e){let{mode:n}=t;return s.$$set=i=>{"mode"in i&&e(0,n=i.mode)},[n]}class $R extends si{constructor(t){super(),ni(this,t,sdt,ndt,Yn,{mode:0})}}function idt(s){let t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m,x,v,y;return{c(){t=Dt("label"),e=Dt("input"),n=Jt(),i=Dt("div"),r=Jt(),o=Dt("span"),o.textContent="Chase camera",a=Jt(),l=Dt("br"),c=Jt(),u=Dt("label"),h=Dt("input"),d=Jt(),f=Dt("div"),p=Jt(),g=Dt("span"),g.textContent="Visualize sensors",m=Jt(),x=Dt("hr"),st(e,"type","checkbox"),e.__value="",e.value=e.__value,st(e,"id","chase-mode-toggle"),st(e,"class","sr-only peer"),st(i,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),st(o,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),st(t,"for","chase-mode-toggle"),st(t,"class","inline-flex relative items-center cursor-pointer mb-4"),st(h,"type","checkbox"),h.__value="",h.value=h.__value,st(h,"id","show-sensors-toggle"),st(h,"class","sr-only peer"),st(f,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),st(g,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),st(u,"for","show-sensors-toggle"),st(u,"class","inline-flex relative items-center cursor-pointer"),st(x,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(b,w){It(b,t,w),Et(t,e),e.checked=s[0].chaseMode,Et(t,n),Et(t,i),Et(t,r),Et(t,o),Et(t,a),It(b,l,w),It(b,c,w),It(b,u,w),Et(u,h),h.checked=s[0].showSensors,Et(u,d),Et(u,f),Et(u,p),Et(u,g),It(b,m,w),It(b,x,w),v||(y=[xe(e,"change",s[1]),xe(h,"change",s[2])],v=!0)},p(b,[w]){w&1&&(e.checked=b[0].chaseMode),w&1&&(h.checked=b[0].showSensors)},i:qe,o:qe,d(b){b&&Tt(t),b&&Tt(l),b&&Tt(c),b&&Tt(u),b&&Tt(m),b&&Tt(x),v=!1,ei(y)}}}function rdt(s,t,e){let{mode:n}=t;function i(){n.chaseMode=this.checked,e(0,n)}function r(){n.showSensors=this.checked,e(0,n)}return s.$$set=o=>{"mode"in o&&e(0,n=o.mode)},[n,i,r]}class LR extends si{constructor(t){super(),ni(this,t,rdt,idt,Yn,{mode:0})}}function odt(s){let t,e,n,i,r,o,a,l,c,u,h,d;return t=new LR({props:{mode:s[0]}}),n=new $R({props:{mode:s[0]}}),r=new DR({props:{gameWorld:s[0].gameWorld}}),{c(){Fs(t.$$.fragment),e=Jt(),Fs(n.$$.fragment),i=Jt(),Fs(r.$$.fragment),o=Jt(),a=Dt("hr"),l=Jt(),c=Dt("button"),c.textContent="Reset car",st(a,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),st(c,"type","button"),st(c,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900")},m(f,p){Ss(t,f,p),It(f,e,p),Ss(n,f,p),It(f,i,p),Ss(r,f,p),It(f,o,p),It(f,a,p),It(f,l,p),It(f,c,p),u=!0,h||(d=xe(c,"click",s[1]),h=!0)},p(f,[p]){const g={};p&1&&(g.mode=f[0]),t.$set(g);const m={};p&1&&(m.mode=f[0]),n.$set(m);const x={};p&1&&(x.gameWorld=f[0].gameWorld),r.$set(x)},i(f){u||(Te(t.$$.fragment,f),Te(n.$$.fragment,f),Te(r.$$.fragment,f),u=!0)},o(f){De(t.$$.fragment,f),De(n.$$.fragment,f),De(r.$$.fragment,f),u=!1},d(f){Cs(t,f),f&&Tt(e),Cs(n,f),f&&Tt(i),Cs(r,f),f&&Tt(o),f&&Tt(a),f&&Tt(l),f&&Tt(c),h=!1,d()}}}function adt(s,t,e){let{mode:n}=t;const i=()=>{n.respawnCar()};return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class ldt extends si{constructor(t){super(),ni(this,t,adt,odt,Yn,{mode:0})}}var FR={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(s){(function(){var t={}.hasOwnProperty;function e(){for(var n=[],i=0;i<arguments.length;i++){var r=arguments[i];if(!!r){var o=typeof r;if(o==="string"||o==="number")n.push(r);else if(Array.isArray(r)){if(r.length){var a=e.apply(null,r);a&&n.push(a)}}else if(o==="object"){if(r.toString!==Object.prototype.toString&&!r.toString.toString().includes("[native code]")){n.push(r.toString());continue}for(var l in r)t.call(r,l)&&r[l]&&n.push(l)}}}return n.join(" ")}s.exports?(e.default=e,s.exports=e):window.classNames=e})()})(FR);const om=FR.exports;function cdt(s){let t=s[1],e,n,i=s[1]&&Sx(s);return{c(){i&&i.c(),e=Pr()},m(r,o){i&&i.m(r,o),It(r,e,o),n=!0},p(r,o){r[1]?t?Yn(t,r[1])?(i.d(1),i=Sx(r),i.c(),i.m(e.parentNode,e)):i.p(r,o):(i=Sx(r),i.c(),i.m(e.parentNode,e)):t&&(i.d(1),i=null),t=r[1]},i(r){n||(Te(i),n=!0)},o(r){De(i),n=!1},d(r){r&&Tt(e),i&&i.d(r)}}}function udt(s){let t=s[1],e,n,i=s[1]&&Cx(s);return{c(){i&&i.c(),e=Pr()},m(r,o){i&&i.m(r,o),It(r,e,o),n=!0},p(r,o){r[1]?t?Yn(t,r[1])?(i.d(1),i=Cx(r),i.c(),i.m(e.parentNode,e)):i.p(r,o):(i=Cx(r),i.c(),Te(i),i.m(e.parentNode,e)):t&&(Ho(),De(i,1,1,()=>{i=null}),qo()),t=r[1]},i(r){n||(Te(i),n=!0)},o(r){De(i),n=!1},d(r){r&&Tt(e),i&&i.d(r)}}}function Sx(s){let t,e,n,i,r;const o=s[13].default,a=lm(o,s,s[12],null);let l=[s[7],{class:s[6]}],c={};for(let u=0;u<l.length;u+=1)c=Ji(c,l[u]);return{c(){t=Dt(s[1]),a&&a.c(),/-/.test(s[1])?yp(t,c):bp(t,c)},m(u,h){It(u,t,h),a&&a.m(t,null),s[23](t),n=!0,i||(r=[KT(e=s[4].call(null,t,s[5])),xe(t,"mouseenter",s[18]),xe(t,"mouseleave",s[19]),xe(t,"focusin",s[20]),xe(t,"focusout",s[21])],i=!0)},p(u,h){a&&a.p&&(!n||h&4096)&&um(a,o,u,u[12],n?cm(o,u[12],h,null):hm(u[12]),null),c=dm(l,[h&128&&u[7],(!n||h&64)&&{class:u[6]}]),/-/.test(u[1])?yp(t,c):bp(t,c),e&&Sr(e.update)&&h&32&&e.update.call(null,u[5])},i(u){n||(Te(a,u),n=!0)},o(u){De(a,u),n=!1},d(u){u&&Tt(t),a&&a.d(u),s[23](null),i=!1,ei(r)}}}function Cx(s){let t,e,n,i,r,o;const a=s[13].default,l=lm(a,s,s[12],null);let c=[s[7],{class:s[6]}],u={};for(let h=0;h<c.length;h+=1)u=Ji(u,c[h]);return{c(){t=Dt(s[1]),l&&l.c(),/-/.test(s[1])?yp(t,u):bp(t,u)},m(h,d){It(h,t,d),l&&l.m(t,null),s[22](t),i=!0,r||(o=[KT(e=s[4].call(null,t,s[5])),xe(t,"mouseenter",s[14]),xe(t,"mouseleave",s[15]),xe(t,"focusin",s[16]),xe(t,"focusout",s[17])],r=!0)},p(h,d){s=h,l&&l.p&&(!i||d&4096)&&um(l,a,s,s[12],i?cm(a,s[12],d,null):hm(s[12]),null),u=dm(c,[d&128&&s[7],(!i||d&64)&&{class:s[6]}]),/-/.test(s[1])?yp(t,u):bp(t,u),e&&Sr(e.update)&&d&32&&e.update.call(null,s[5])},i(h){i||(Te(l,h),th(()=>{n||(n=g1(t,s[2],s[3],!0)),n.run(1)}),i=!0)},o(h){De(l,h),n||(n=g1(t,s[2],s[3],!1)),n.run(0),i=!1},d(h){h&&Tt(t),l&&l.d(h),s[22](null),h&&n&&n.end(),r=!1,ei(o)}}}function hdt(s){let t,e,n,i;const r=[udt,cdt],o=[];function a(l,c){return l[2]?0:1}return t=a(s),e=o[t]=r[t](s),{c(){e.c(),n=Pr()},m(l,c){o[t].m(l,c),It(l,n,c),i=!0},p(l,[c]){let u=t;t=a(l),t===u?o[t].p(l,c):(Ho(),De(o[u],1,1,()=>{o[u]=null}),qo(),e=o[t],e?e.p(l,c):(e=o[t]=r[t](l),e.c()),Te(e,1),e.m(n.parentNode,n))},i(l){i||(Te(e),i=!0)},o(l){De(e),i=!1},d(l){o[t].d(l),l&&Tt(n)}}}function ddt(s,t,e){const n=["tag","color","rounded","border","shadow","transition","params","node","use","options"];let i=wc(t,n),{$$slots:r={},$$scope:o}=t;p1("background",!0);let{tag:a="div"}=t,{color:l="default"}=t,{rounded:c=!1}=t,{border:u=!1}=t,{shadow:h=!1}=t,{transition:d=void 0}=t,{params:f={}}=t,{node:p=void 0}=t,{use:g=qe}=t,{options:m={}}=t;const x={gray:"bg-gray-100 dark:bg-gray-200 ",red:"bg-red-100 dark:bg-red-200",yellow:"bg-yellow-100 dark:bg-yellow-200 ",green:"bg-green-100 dark:bg-green-200 ",indigo:"bg-indigo-100 dark:bg-indigo-200 ",purple:"bg-purple-100 dark:bg-purple-200 ",pink:"bg-pink-100 dark:bg-pink-200 ",blue:"bg-blue-100 dark:bg-blue-200 ",light:"bg-gray-50 dark:bg-gray-700",dark:"bg-gray-100 dark:bg-gray-700",default:"bg-white dark:bg-gray-800",dropdown:"bg-white dark:bg-gray-700",navbar:"bg-white dark:bg-gray-900",navbarUl:"bg-gray-50 dark:bg-gray-800",form:"bg-gray-50 dark:bg-gray-700",primary:"bg-primary-100 dark:bg-primary-200 ",none:""},v={gray:"text-gray-700 dark:text-gray-800",red:"text-red-700 dark:text-red-800",yellow:"text-yellow-700 dark:text-yellow-800",green:"text-green-700 dark:text-green-800",indigo:"text-indigo-700 dark:text-indigo-800",purple:"text-purple-700 dark:text-purple-800",pink:"text-pink-700 dark:text-pink-800",blue:"text-blue-700 dark:text-blue-800",light:"text-gray-700 dark:text-gray-300",dark:"text-gray-700 dark:text-gray-300",default:"text-gray-500 dark:text-gray-400",dropdown:"text-gray-700 dark:text-gray-200",navbar:"text-gray-700 dark:text-gray-200",navbarUl:"text-gray-700 dark:text-gray-400",form:"text-gray-900 dark:text-white",primary:"text-primary-700 dark:text-primary-800",none:""},y={gray:"border-gray-500 dark:bg-gray-200 ",red:"border-red-500 dark:bg-red-200 ",yellow:"border-yellow-500 dark:bg-tellow-200 ",green:"border-green-500 dark:bg-green-200 ",indigo:"border-indigo-500 dark:bg-indigo-200 ",purple:"border-purple-500 dark:bg-purple-200 ",pink:"border-pink-500 dark:bg-pink-200 ",blue:"border-blue-500 dark:bg-blue-200 ",light:"border-gray-500",dark:"border-gray-500",default:"border-gray-200 dark:border-gray-700",dropdown:"border-gray-100 dark:border-gray-700",navbar:"border-gray-100 dark:border-gray-700",navbarUl:"border-gray-100 dark:border-gray-700",form:"border-gray-300 dark:border-gray-700",primary:"border-primary-500 dark:bg-primary-200 ",none:""};let b;function w(k){es.call(this,s,k)}function _(k){es.call(this,s,k)}function C(k){es.call(this,s,k)}function S(k){es.call(this,s,k)}function T(k){es.call(this,s,k)}function I(k){es.call(this,s,k)}function A(k){es.call(this,s,k)}function D(k){es.call(this,s,k)}function M(k){_c[k?"unshift":"push"](()=>{p=k,e(0,p)})}function E(k){_c[k?"unshift":"push"](()=>{p=k,e(0,p)})}return s.$$set=k=>{e(27,t=Ji(Ji({},t),yc(k))),e(7,i=wc(t,n)),"tag"in k&&e(1,a=k.tag),"color"in k&&e(8,l=k.color),"rounded"in k&&e(9,c=k.rounded),"border"in k&&e(10,u=k.border),"shadow"in k&&e(11,h=k.shadow),"transition"in k&&e(2,d=k.transition),"params"in k&&e(3,f=k.params),"node"in k&&e(0,p=k.node),"use"in k&&e(4,g=k.use),"options"in k&&e(5,m=k.options),"$$scope"in k&&e(12,o=k.$$scope)},s.$$.update=()=>{s.$$.dirty&256&&p1("color",l),e(6,b=om(x[l],v[l],c&&(l==="dropdown"?"rounded":"rounded-lg"),u&&"border",y[l],h&&"shadow-md",t.class))},t=yc(t),[p,a,d,f,g,m,b,i,l,c,u,h,o,r,w,_,C,S,T,I,A,D,M,E]}class fdt extends si{constructor(t){super(),ni(this,t,ddt,hdt,Yn,{tag:1,color:8,rounded:9,border:10,shadow:11,transition:2,params:3,node:0,use:4,options:5})}}var Ps="top",Mi="bottom",ki="right",Os="left",Qw="auto",Qd=[Ps,Mi,ki,Os],Hc="start",_h="end",pdt="clippingParents",PR="viewport",Nu="popper",mdt="reference",_T=Qd.reduce(function(s,t){return s.concat([t+"-"+Hc,t+"-"+_h])},[]),OR=[].concat(Qd,[Qw]).reduce(function(s,t){return s.concat([t,t+"-"+Hc,t+"-"+_h])},[]),gdt="beforeRead",xdt="read",vdt="afterRead",bdt="beforeMain",ydt="main",wdt="afterMain",_dt="beforeWrite",Sdt="write",Cdt="afterWrite",Tdt=[gdt,xdt,vdt,bdt,ydt,wdt,_dt,Sdt,Cdt];function Fr(s){return s?(s.nodeName||"").toLowerCase():null}function Li(s){if(s==null)return window;if(s.toString()!=="[object Window]"){var t=s.ownerDocument;return t&&t.defaultView||window}return s}function ol(s){var t=Li(s).Element;return s instanceof t||s instanceof Element}function Ci(s){var t=Li(s).HTMLElement;return s instanceof t||s instanceof HTMLElement}function t1(s){if(typeof ShadowRoot>"u")return!1;var t=Li(s).ShadowRoot;return s instanceof t||s instanceof ShadowRoot}function Idt(s){var t=s.state;Object.keys(t.elements).forEach(function(e){var n=t.styles[e]||{},i=t.attributes[e]||{},r=t.elements[e];!Ci(r)||!Fr(r)||(Object.assign(r.style,n),Object.keys(i).forEach(function(o){var a=i[o];a===!1?r.removeAttribute(o):r.setAttribute(o,a===!0?"":a)}))})}function Edt(s){var t=s.state,e={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,e.popper),t.styles=e,t.elements.arrow&&Object.assign(t.elements.arrow.style,e.arrow),function(){Object.keys(t.elements).forEach(function(n){var i=t.elements[n],r=t.attributes[n]||{},o=Object.keys(t.styles.hasOwnProperty(n)?t.styles[n]:e[n]),a=o.reduce(function(l,c){return l[c]="",l},{});!Ci(i)||!Fr(i)||(Object.assign(i.style,a),Object.keys(r).forEach(function(l){i.removeAttribute(l)}))})}}const Mdt={name:"applyStyles",enabled:!0,phase:"write",fn:Idt,effect:Edt,requires:["computeStyles"]};function Mr(s){return s.split("-")[0]}var Oa=Math.max,am=Math.min,qc=Math.round;function Lv(){var s=navigator.userAgentData;return s!=null&&s.brands?s.brands.map(function(t){return t.brand+"/"+t.version}).join(" "):navigator.userAgent}function zR(){return!/^((?!chrome|android).)*safari/i.test(Lv())}function jc(s,t,e){t===void 0&&(t=!1),e===void 0&&(e=!1);var n=s.getBoundingClientRect(),i=1,r=1;t&&Ci(s)&&(i=s.offsetWidth>0&&qc(n.width)/s.offsetWidth||1,r=s.offsetHeight>0&&qc(n.height)/s.offsetHeight||1);var o=ol(s)?Li(s):window,a=o.visualViewport,l=!zR()&&e,c=(n.left+(l&&a?a.offsetLeft:0))/i,u=(n.top+(l&&a?a.offsetTop:0))/r,h=n.width/i,d=n.height/r;return{width:h,height:d,top:u,right:c+h,bottom:u+d,left:c,x:c,y:u}}function e1(s){var t=jc(s),e=s.offsetWidth,n=s.offsetHeight;return Math.abs(t.width-e)<=1&&(e=t.width),Math.abs(t.height-n)<=1&&(n=t.height),{x:s.offsetLeft,y:s.offsetTop,width:e,height:n}}function BR(s,t){var e=t.getRootNode&&t.getRootNode();if(s.contains(t))return!0;if(e&&t1(e)){var n=t;do{if(n&&s.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function uo(s){return Li(s).getComputedStyle(s)}function kdt(s){return["table","td","th"].indexOf(Fr(s))>=0}function ra(s){return((ol(s)?s.ownerDocument:s.document)||window.document).documentElement}function s0(s){return Fr(s)==="html"?s:s.assignedSlot||s.parentNode||(t1(s)?s.host:null)||ra(s)}function ST(s){return!Ci(s)||uo(s).position==="fixed"?null:s.offsetParent}function Adt(s){var t=/firefox/i.test(Lv()),e=/Trident/i.test(Lv());if(e&&Ci(s)){var n=uo(s);if(n.position==="fixed")return null}var i=s0(s);for(t1(i)&&(i=i.host);Ci(i)&&["html","body"].indexOf(Fr(i))<0;){var r=uo(i);if(r.transform!=="none"||r.perspective!=="none"||r.contain==="paint"||["transform","perspective"].indexOf(r.willChange)!==-1||t&&r.willChange==="filter"||t&&r.filter&&r.filter!=="none")return i;i=i.parentNode}return null}function tf(s){for(var t=Li(s),e=ST(s);e&&kdt(e)&&uo(e).position==="static";)e=ST(e);return e&&(Fr(e)==="html"||Fr(e)==="body"&&uo(e).position==="static")?t:e||Adt(s)||t}function n1(s){return["top","bottom"].indexOf(s)>=0?"x":"y"}function Zu(s,t,e){return Oa(s,am(t,e))}function Ndt(s,t,e){var n=Zu(s,t,e);return n>e?e:n}function UR(){return{top:0,right:0,bottom:0,left:0}}function VR(s){return Object.assign({},UR(),s)}function WR(s,t){return t.reduce(function(e,n){return e[n]=s,e},{})}var Rdt=function(t,e){return t=typeof t=="function"?t(Object.assign({},e.rects,{placement:e.placement})):t,VR(typeof t!="number"?t:WR(t,Qd))};function Ddt(s){var t,e=s.state,n=s.name,i=s.options,r=e.elements.arrow,o=e.modifiersData.popperOffsets,a=Mr(e.placement),l=n1(a),c=[Os,ki].indexOf(a)>=0,u=c?"height":"width";if(!(!r||!o)){var h=Rdt(i.padding,e),d=e1(r),f=l==="y"?Ps:Os,p=l==="y"?Mi:ki,g=e.rects.reference[u]+e.rects.reference[l]-o[l]-e.rects.popper[u],m=o[l]-e.rects.reference[l],x=tf(r),v=x?l==="y"?x.clientHeight||0:x.clientWidth||0:0,y=g/2-m/2,b=h[f],w=v-d[u]-h[p],_=v/2-d[u]/2+y,C=Zu(b,_,w),S=l;e.modifiersData[n]=(t={},t[S]=C,t.centerOffset=C-_,t)}}function $dt(s){var t=s.state,e=s.options,n=e.element,i=n===void 0?"[data-popper-arrow]":n;i!=null&&(typeof i=="string"&&(i=t.elements.popper.querySelector(i),!i)||!BR(t.elements.popper,i)||(t.elements.arrow=i))}const Ldt={name:"arrow",enabled:!0,phase:"main",fn:Ddt,effect:$dt,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Xc(s){return s.split("-")[1]}var Fdt={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Pdt(s){var t=s.x,e=s.y,n=window,i=n.devicePixelRatio||1;return{x:qc(t*i)/i||0,y:qc(e*i)/i||0}}function CT(s){var t,e=s.popper,n=s.popperRect,i=s.placement,r=s.variation,o=s.offsets,a=s.position,l=s.gpuAcceleration,c=s.adaptive,u=s.roundOffsets,h=s.isFixed,d=o.x,f=d===void 0?0:d,p=o.y,g=p===void 0?0:p,m=typeof u=="function"?u({x:f,y:g}):{x:f,y:g};f=m.x,g=m.y;var x=o.hasOwnProperty("x"),v=o.hasOwnProperty("y"),y=Os,b=Ps,w=window;if(c){var _=tf(e),C="clientHeight",S="clientWidth";if(_===Li(e)&&(_=ra(e),uo(_).position!=="static"&&a==="absolute"&&(C="scrollHeight",S="scrollWidth")),_=_,i===Ps||(i===Os||i===ki)&&r===_h){b=Mi;var T=h&&_===w&&w.visualViewport?w.visualViewport.height:_[C];g-=T-n.height,g*=l?1:-1}if(i===Os||(i===Ps||i===Mi)&&r===_h){y=ki;var I=h&&_===w&&w.visualViewport?w.visualViewport.width:_[S];f-=I-n.width,f*=l?1:-1}}var A=Object.assign({position:a},c&&Fdt),D=u===!0?Pdt({x:f,y:g}):{x:f,y:g};if(f=D.x,g=D.y,l){var M;return Object.assign({},A,(M={},M[b]=v?"0":"",M[y]=x?"0":"",M.transform=(w.devicePixelRatio||1)<=1?"translate("+f+"px, "+g+"px)":"translate3d("+f+"px, "+g+"px, 0)",M))}return Object.assign({},A,(t={},t[b]=v?g+"px":"",t[y]=x?f+"px":"",t.transform="",t))}function Odt(s){var t=s.state,e=s.options,n=e.gpuAcceleration,i=n===void 0?!0:n,r=e.adaptive,o=r===void 0?!0:r,a=e.roundOffsets,l=a===void 0?!0:a,c={placement:Mr(t.placement),variation:Xc(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:i,isFixed:t.options.strategy==="fixed"};t.modifiersData.popperOffsets!=null&&(t.styles.popper=Object.assign({},t.styles.popper,CT(Object.assign({},c,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:o,roundOffsets:l})))),t.modifiersData.arrow!=null&&(t.styles.arrow=Object.assign({},t.styles.arrow,CT(Object.assign({},c,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})}const zdt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Odt,data:{}};var rp={passive:!0};function Bdt(s){var t=s.state,e=s.instance,n=s.options,i=n.scroll,r=i===void 0?!0:i,o=n.resize,a=o===void 0?!0:o,l=Li(t.elements.popper),c=[].concat(t.scrollParents.reference,t.scrollParents.popper);return r&&c.forEach(function(u){u.addEventListener("scroll",e.update,rp)}),a&&l.addEventListener("resize",e.update,rp),function(){r&&c.forEach(function(u){u.removeEventListener("scroll",e.update,rp)}),a&&l.removeEventListener("resize",e.update,rp)}}const Udt={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:Bdt,data:{}};var Vdt={left:"right",right:"left",bottom:"top",top:"bottom"};function xp(s){return s.replace(/left|right|bottom|top/g,function(t){return Vdt[t]})}var Wdt={start:"end",end:"start"};function TT(s){return s.replace(/start|end/g,function(t){return Wdt[t]})}function s1(s){var t=Li(s),e=t.pageXOffset,n=t.pageYOffset;return{scrollLeft:e,scrollTop:n}}function i1(s){return jc(ra(s)).left+s1(s).scrollLeft}function Gdt(s,t){var e=Li(s),n=ra(s),i=e.visualViewport,r=n.clientWidth,o=n.clientHeight,a=0,l=0;if(i){r=i.width,o=i.height;var c=zR();(c||!c&&t==="fixed")&&(a=i.offsetLeft,l=i.offsetTop)}return{width:r,height:o,x:a+i1(s),y:l}}function Hdt(s){var t,e=ra(s),n=s1(s),i=(t=s.ownerDocument)==null?void 0:t.body,r=Oa(e.scrollWidth,e.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),o=Oa(e.scrollHeight,e.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),a=-n.scrollLeft+i1(s),l=-n.scrollTop;return uo(i||e).direction==="rtl"&&(a+=Oa(e.clientWidth,i?i.clientWidth:0)-r),{width:r,height:o,x:a,y:l}}function r1(s){var t=uo(s),e=t.overflow,n=t.overflowX,i=t.overflowY;return/auto|scroll|overlay|hidden/.test(e+i+n)}function GR(s){return["html","body","#document"].indexOf(Fr(s))>=0?s.ownerDocument.body:Ci(s)&&r1(s)?s:GR(s0(s))}function Ju(s,t){var e;t===void 0&&(t=[]);var n=GR(s),i=n===((e=s.ownerDocument)==null?void 0:e.body),r=Li(n),o=i?[r].concat(r.visualViewport||[],r1(n)?n:[]):n,a=t.concat(o);return i?a:a.concat(Ju(s0(o)))}function Fv(s){return Object.assign({},s,{left:s.x,top:s.y,right:s.x+s.width,bottom:s.y+s.height})}function qdt(s,t){var e=jc(s,!1,t==="fixed");return e.top=e.top+s.clientTop,e.left=e.left+s.clientLeft,e.bottom=e.top+s.clientHeight,e.right=e.left+s.clientWidth,e.width=s.clientWidth,e.height=s.clientHeight,e.x=e.left,e.y=e.top,e}function IT(s,t,e){return t===PR?Fv(Gdt(s,e)):ol(t)?qdt(t,e):Fv(Hdt(ra(s)))}function jdt(s){var t=Ju(s0(s)),e=["absolute","fixed"].indexOf(uo(s).position)>=0,n=e&&Ci(s)?tf(s):s;return ol(n)?t.filter(function(i){return ol(i)&&BR(i,n)&&Fr(i)!=="body"}):[]}function Xdt(s,t,e,n){var i=t==="clippingParents"?jdt(s):[].concat(t),r=[].concat(i,[e]),o=r[0],a=r.reduce(function(l,c){var u=IT(s,c,n);return l.top=Oa(u.top,l.top),l.right=am(u.right,l.right),l.bottom=am(u.bottom,l.bottom),l.left=Oa(u.left,l.left),l},IT(s,o,n));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function HR(s){var t=s.reference,e=s.element,n=s.placement,i=n?Mr(n):null,r=n?Xc(n):null,o=t.x+t.width/2-e.width/2,a=t.y+t.height/2-e.height/2,l;switch(i){case Ps:l={x:o,y:t.y-e.height};break;case Mi:l={x:o,y:t.y+t.height};break;case ki:l={x:t.x+t.width,y:a};break;case Os:l={x:t.x-e.width,y:a};break;default:l={x:t.x,y:t.y}}var c=i?n1(i):null;if(c!=null){var u=c==="y"?"height":"width";switch(r){case Hc:l[c]=l[c]-(t[u]/2-e[u]/2);break;case _h:l[c]=l[c]+(t[u]/2-e[u]/2);break}}return l}function Sh(s,t){t===void 0&&(t={});var e=t,n=e.placement,i=n===void 0?s.placement:n,r=e.strategy,o=r===void 0?s.strategy:r,a=e.boundary,l=a===void 0?pdt:a,c=e.rootBoundary,u=c===void 0?PR:c,h=e.elementContext,d=h===void 0?Nu:h,f=e.altBoundary,p=f===void 0?!1:f,g=e.padding,m=g===void 0?0:g,x=VR(typeof m!="number"?m:WR(m,Qd)),v=d===Nu?mdt:Nu,y=s.rects.popper,b=s.elements[p?v:d],w=Xdt(ol(b)?b:b.contextElement||ra(s.elements.popper),l,u,o),_=jc(s.elements.reference),C=HR({reference:_,element:y,strategy:"absolute",placement:i}),S=Fv(Object.assign({},y,C)),T=d===Nu?S:_,I={top:w.top-T.top+x.top,bottom:T.bottom-w.bottom+x.bottom,left:w.left-T.left+x.left,right:T.right-w.right+x.right},A=s.modifiersData.offset;if(d===Nu&&A){var D=A[i];Object.keys(I).forEach(function(M){var E=[ki,Mi].indexOf(M)>=0?1:-1,k=[Ps,Mi].indexOf(M)>=0?"y":"x";I[M]+=D[k]*E})}return I}function Kdt(s,t){t===void 0&&(t={});var e=t,n=e.placement,i=e.boundary,r=e.rootBoundary,o=e.padding,a=e.flipVariations,l=e.allowedAutoPlacements,c=l===void 0?OR:l,u=Xc(n),h=u?a?_T:_T.filter(function(p){return Xc(p)===u}):Qd,d=h.filter(function(p){return c.indexOf(p)>=0});d.length===0&&(d=h);var f=d.reduce(function(p,g){return p[g]=Sh(s,{placement:g,boundary:i,rootBoundary:r,padding:o})[Mr(g)],p},{});return Object.keys(f).sort(function(p,g){return f[p]-f[g]})}function Ydt(s){if(Mr(s)===Qw)return[];var t=xp(s);return[TT(s),t,TT(t)]}function Zdt(s){var t=s.state,e=s.options,n=s.name;if(!t.modifiersData[n]._skip){for(var i=e.mainAxis,r=i===void 0?!0:i,o=e.altAxis,a=o===void 0?!0:o,l=e.fallbackPlacements,c=e.padding,u=e.boundary,h=e.rootBoundary,d=e.altBoundary,f=e.flipVariations,p=f===void 0?!0:f,g=e.allowedAutoPlacements,m=t.options.placement,x=Mr(m),v=x===m,y=l||(v||!p?[xp(m)]:Ydt(m)),b=[m].concat(y).reduce(function(rt,lt){return rt.concat(Mr(lt)===Qw?Kdt(t,{placement:lt,boundary:u,rootBoundary:h,padding:c,flipVariations:p,allowedAutoPlacements:g}):lt)},[]),w=t.rects.reference,_=t.rects.popper,C=new Map,S=!0,T=b[0],I=0;I<b.length;I++){var A=b[I],D=Mr(A),M=Xc(A)===Hc,E=[Ps,Mi].indexOf(D)>=0,k=E?"width":"height",N=Sh(t,{placement:A,boundary:u,rootBoundary:h,altBoundary:d,padding:c}),z=E?M?ki:Os:M?Mi:Ps;w[k]>_[k]&&(z=xp(z));var L=xp(z),$=[];if(r&&$.push(N[D]<=0),a&&$.push(N[z]<=0,N[L]<=0),$.every(function(rt){return rt})){T=A,S=!1;break}C.set(A,$)}if(S)for(var W=p?3:1,q=function(lt){var Y=b.find(function(vt){var xt=C.get(vt);if(xt)return xt.slice(0,lt).every(function(mt){return mt})});if(Y)return T=Y,"break"},G=W;G>0;G--){var j=q(G);if(j==="break")break}t.placement!==T&&(t.modifiersData[n]._skip=!0,t.placement=T,t.reset=!0)}}const Jdt={name:"flip",enabled:!0,phase:"main",fn:Zdt,requiresIfExists:["offset"],data:{_skip:!1}};function ET(s,t,e){return e===void 0&&(e={x:0,y:0}),{top:s.top-t.height-e.y,right:s.right-t.width+e.x,bottom:s.bottom-t.height+e.y,left:s.left-t.width-e.x}}function MT(s){return[Ps,ki,Mi,Os].some(function(t){return s[t]>=0})}function Qdt(s){var t=s.state,e=s.name,n=t.rects.reference,i=t.rects.popper,r=t.modifiersData.preventOverflow,o=Sh(t,{elementContext:"reference"}),a=Sh(t,{altBoundary:!0}),l=ET(o,n),c=ET(a,i,r),u=MT(l),h=MT(c);t.modifiersData[e]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:h},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":h})}const tft={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:Qdt};function eft(s,t,e){var n=Mr(s),i=[Os,Ps].indexOf(n)>=0?-1:1,r=typeof e=="function"?e(Object.assign({},t,{placement:s})):e,o=r[0],a=r[1];return o=o||0,a=(a||0)*i,[Os,ki].indexOf(n)>=0?{x:a,y:o}:{x:o,y:a}}function nft(s){var t=s.state,e=s.options,n=s.name,i=e.offset,r=i===void 0?[0,0]:i,o=OR.reduce(function(u,h){return u[h]=eft(h,t.rects,r),u},{}),a=o[t.placement],l=a.x,c=a.y;t.modifiersData.popperOffsets!=null&&(t.modifiersData.popperOffsets.x+=l,t.modifiersData.popperOffsets.y+=c),t.modifiersData[n]=o}const sft={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:nft};function ift(s){var t=s.state,e=s.name;t.modifiersData[e]=HR({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})}const rft={name:"popperOffsets",enabled:!0,phase:"read",fn:ift,data:{}};function oft(s){return s==="x"?"y":"x"}function aft(s){var t=s.state,e=s.options,n=s.name,i=e.mainAxis,r=i===void 0?!0:i,o=e.altAxis,a=o===void 0?!1:o,l=e.boundary,c=e.rootBoundary,u=e.altBoundary,h=e.padding,d=e.tether,f=d===void 0?!0:d,p=e.tetherOffset,g=p===void 0?0:p,m=Sh(t,{boundary:l,rootBoundary:c,padding:h,altBoundary:u}),x=Mr(t.placement),v=Xc(t.placement),y=!v,b=n1(x),w=oft(b),_=t.modifiersData.popperOffsets,C=t.rects.reference,S=t.rects.popper,T=typeof g=="function"?g(Object.assign({},t.rects,{placement:t.placement})):g,I=typeof T=="number"?{mainAxis:T,altAxis:T}:Object.assign({mainAxis:0,altAxis:0},T),A=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,D={x:0,y:0};if(!!_){if(r){var M,E=b==="y"?Ps:Os,k=b==="y"?Mi:ki,N=b==="y"?"height":"width",z=_[b],L=z+m[E],$=z-m[k],W=f?-S[N]/2:0,q=v===Hc?C[N]:S[N],G=v===Hc?-S[N]:-C[N],j=t.elements.arrow,rt=f&&j?e1(j):{width:0,height:0},lt=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:UR(),Y=lt[E],vt=lt[k],xt=Zu(0,C[N],rt[N]),mt=y?C[N]/2-W-xt-Y-I.mainAxis:q-xt-Y-I.mainAxis,ft=y?-C[N]/2+W+xt+vt+I.mainAxis:G+xt+vt+I.mainAxis,it=t.elements.arrow&&tf(t.elements.arrow),tt=it?b==="y"?it.clientTop||0:it.clientLeft||0:0,ut=(M=A==null?void 0:A[b])!=null?M:0,bt=z+mt-ut-tt,Rt=z+ft-ut,Ct=Zu(f?am(L,bt):L,z,f?Oa($,Rt):$);_[b]=Ct,D[b]=Ct-z}if(a){var Ut,Ot=b==="x"?Ps:Os,Ht=b==="x"?Mi:ki,se=_[w],re=w==="y"?"height":"width",V=se+m[Ot],F=se-m[Ht],ct=[Ps,Os].indexOf(x)!==-1,_t=(Ut=A==null?void 0:A[w])!=null?Ut:0,At=ct?V:se-C[re]-S[re]-_t+I.altAxis,Lt=ct?se+C[re]+S[re]-_t-I.altAxis:F,Gt=f&&ct?Ndt(At,se,Lt):Zu(f?At:V,se,f?Lt:F);_[w]=Gt,D[w]=Gt-se}t.modifiersData[n]=D}}const lft={name:"preventOverflow",enabled:!0,phase:"main",fn:aft,requiresIfExists:["offset"]};function cft(s){return{scrollLeft:s.scrollLeft,scrollTop:s.scrollTop}}function uft(s){return s===Li(s)||!Ci(s)?s1(s):cft(s)}function hft(s){var t=s.getBoundingClientRect(),e=qc(t.width)/s.offsetWidth||1,n=qc(t.height)/s.offsetHeight||1;return e!==1||n!==1}function dft(s,t,e){e===void 0&&(e=!1);var n=Ci(t),i=Ci(t)&&hft(t),r=ra(t),o=jc(s,i,e),a={scrollLeft:0,scrollTop:0},l={x:0,y:0};return(n||!n&&!e)&&((Fr(t)!=="body"||r1(r))&&(a=uft(t)),Ci(t)?(l=jc(t,!0),l.x+=t.clientLeft,l.y+=t.clientTop):r&&(l.x=i1(r))),{x:o.left+a.scrollLeft-l.x,y:o.top+a.scrollTop-l.y,width:o.width,height:o.height}}function fft(s){var t=new Map,e=new Set,n=[];s.forEach(function(r){t.set(r.name,r)});function i(r){e.add(r.name);var o=[].concat(r.requires||[],r.requiresIfExists||[]);o.forEach(function(a){if(!e.has(a)){var l=t.get(a);l&&i(l)}}),n.push(r)}return s.forEach(function(r){e.has(r.name)||i(r)}),n}function pft(s){var t=fft(s);return Tdt.reduce(function(e,n){return e.concat(t.filter(function(i){return i.phase===n}))},[])}function mft(s){var t;return function(){return t||(t=new Promise(function(e){Promise.resolve().then(function(){t=void 0,e(s())})})),t}}function gft(s){var t=s.reduce(function(e,n){var i=e[n.name];return e[n.name]=i?Object.assign({},i,n,{options:Object.assign({},i.options,n.options),data:Object.assign({},i.data,n.data)}):n,e},{});return Object.keys(t).map(function(e){return t[e]})}var kT={placement:"bottom",modifiers:[],strategy:"absolute"};function AT(){for(var s=arguments.length,t=new Array(s),e=0;e<s;e++)t[e]=arguments[e];return!t.some(function(n){return!(n&&typeof n.getBoundingClientRect=="function")})}function xft(s){s===void 0&&(s={});var t=s,e=t.defaultModifiers,n=e===void 0?[]:e,i=t.defaultOptions,r=i===void 0?kT:i;return function(a,l,c){c===void 0&&(c=r);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},kT,r),modifiersData:{},elements:{reference:a,popper:l},attributes:{},styles:{}},h=[],d=!1,f={state:u,setOptions:function(x){var v=typeof x=="function"?x(u.options):x;g(),u.options=Object.assign({},r,u.options,v),u.scrollParents={reference:ol(a)?Ju(a):a.contextElement?Ju(a.contextElement):[],popper:Ju(l)};var y=pft(gft([].concat(n,u.options.modifiers)));return u.orderedModifiers=y.filter(function(b){return b.enabled}),p(),f.update()},forceUpdate:function(){if(!d){var x=u.elements,v=x.reference,y=x.popper;if(!!AT(v,y)){u.rects={reference:dft(v,tf(y),u.options.strategy==="fixed"),popper:e1(y)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(I){return u.modifiersData[I.name]=Object.assign({},I.data)});for(var b=0;b<u.orderedModifiers.length;b++){if(u.reset===!0){u.reset=!1,b=-1;continue}var w=u.orderedModifiers[b],_=w.fn,C=w.options,S=C===void 0?{}:C,T=w.name;typeof _=="function"&&(u=_({state:u,options:S,name:T,instance:f})||u)}}}},update:mft(function(){return new Promise(function(m){f.forceUpdate(),m(u)})}),destroy:function(){g(),d=!0}};if(!AT(a,l))return f;f.setOptions(c).then(function(m){!d&&c.onFirstUpdate&&c.onFirstUpdate(m)});function p(){u.orderedModifiers.forEach(function(m){var x=m.name,v=m.options,y=v===void 0?{}:v,b=m.effect;if(typeof b=="function"){var w=b({state:u,name:x,instance:f,options:y}),_=function(){};h.push(w||_)}})}function g(){h.forEach(function(m){return m()}),h=[]}return f}}var vft=[Udt,rft,zdt,Mdt,sft,Jdt,lft,Ldt,tft],bft=xft({defaultModifiers:vft});function yft(){const s=Ov();return(t,e,n)=>{const i=s.$$.callbacks[t];if(i){const r=new CustomEvent(t,{detail:n});e.dispatchEvent(r),i.slice().forEach(o=>{o.call(s,r)})}}}function NT(s){let t;return{c(){t=Dt("div")},m(e,n){It(e,t,n),s[19](t)},p:qe,d(e){e&&Tt(t),s[19](null)}}}function RT(s){let t,e;const n=[{use:s[8]},{options:s[3]},{role:"tooltip"},{tabIndex:s[1]?-1:void 0},s[9],{class:om("z-10 outline-none",s[10].class)}];let i={$$slots:{default:[wft]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Ji(i,n[r]);return t=new fdt({props:i}),t.$on("focusin",function(){Sr(Io(s[1],s[6]))&&Io(s[1],s[6]).apply(this,arguments)}),t.$on("focusout",function(){Sr(Io(s[1],s[7]))&&Io(s[1],s[7]).apply(this,arguments)}),t.$on("mouseenter",function(){Sr(Io(s[1]&&!s[4],s[6]))&&Io(s[1]&&!s[4],s[6]).apply(this,arguments)}),t.$on("mouseleave",function(){Sr(Io(s[1]&&!s[4],s[7]))&&Io(s[1]&&!s[4],s[7]).apply(this,arguments)}),{c(){Fs(t.$$.fragment)},m(r,o){Ss(t,r,o),e=!0},p(r,o){s=r;const a=o&1802?dm(n,[o&256&&{use:s[8]},o&8&&{options:s[3]},n[2],o&2&&{tabIndex:s[1]?-1:void 0},o&512&&n2(s[9]),o&1024&&{class:om("z-10 outline-none",s[10].class)}]):{};o&1048580&&(a.$$scope={dirty:o,ctx:s}),t.$set(a)},i(r){e||(Te(t.$$.fragment,r),e=!0)},o(r){De(t.$$.fragment,r),e=!1},d(r){Cs(t,r)}}}function DT(s){let t;return{c(){t=Dt("div"),st(t,"data-popper-arrow",""),st(t,"class","tooltip-arrow border dark:border-gray-100")},m(e,n){It(e,t,n)},d(e){e&&Tt(t)}}}function wft(s){let t,e,n;const i=s[18].default,r=lm(i,s,s[20],null);let o=s[2]&&DT();return{c(){r&&r.c(),t=Jt(),o&&o.c(),e=Pr()},m(a,l){r&&r.m(a,l),It(a,t,l),o&&o.m(a,l),It(a,e,l),n=!0},p(a,l){r&&r.p&&(!n||l&1048576)&&um(r,i,a,a[20],n?cm(i,a[20],l,null):hm(a[20]),null),a[2]?o||(o=DT(),o.c(),o.m(e.parentNode,e)):o&&(o.d(1),o=null)},i(a){n||(Te(r,a),n=!0)},o(a){De(r,a),n=!1},d(a){r&&r.d(a),a&&Tt(t),o&&o.d(a),a&&Tt(e)}}}function _ft(s){let t,e,n,i=!s[3]&&NT(s),r=s[0]&&s[3]&&RT(s);return{c(){i&&i.c(),t=Jt(),r&&r.c(),e=Pr()},m(o,a){i&&i.m(o,a),It(o,t,a),r&&r.m(o,a),It(o,e,a),n=!0},p(o,[a]){o[3]?i&&(i.d(1),i=null):i?i.p(o,a):(i=NT(o),i.c(),i.m(t.parentNode,t)),o[0]&&o[3]?r?(r.p(o,a),a&9&&Te(r,1)):(r=RT(o),r.c(),Te(r,1),r.m(e.parentNode,e)):r&&(Ho(),De(r,1,1,()=>{r=null}),qo())},i(o){n||(Te(r),n=!0)},o(o){De(r),n=!1},d(o){i&&i.d(o),o&&Tt(t),r&&r.d(o),o&&Tt(e)}}}function Io(s,t){return s&&t}function Sft(s,t,e){const n=["activeContent","arrow","offset","placement","trigger","triggeredBy","strategy","open","yOnly"];let i=wc(t,n),{$$slots:r={},$$scope:o}=t,{activeContent:a=!1}=t,{arrow:l=!0}=t,{offset:c=8}=t,{placement:u="top"}=t,{trigger:h="hover"}=t,{triggeredBy:d=void 0}=t,{strategy:f="absolute"}=t,{open:p=!1}=t,{yOnly:g=!1}=t;const m=yft();let x,v,y,b=[],w,_=!1;const C=()=>(_=!0,setTimeout(()=>_=!1,250)),S=E=>{v===void 0&&console.error("trigger undefined"),b.includes(E.target)&&v!==E.target&&(e(3,v=E.target),C()),x&&E.type==="focusin"&&!p&&C(),e(0,p=x&&E.type==="click"&&!_?!p:!0)},T=E=>E.matches&&E.matches(":hover"),I=E=>E.contains&&E.contains(document.activeElement),A=E=>{a?setTimeout(()=>{var N;const k=Object.values((N=w==null?void 0:w.state.elements)!=null?N:{});E.type==="mouseleave"&&k.some(T)||E.type==="focusout"&&k.some(I)||e(0,p=!1)},100):e(0,p=!1)};function D(E,k){return e(17,w=bft(k,E,{placement:u,strategy:f,modifiers:[{name:"offset",options:{offset:({reference:N,popper:z})=>[g?z.width/2-N.width/2-N.x:0,c]}},{name:"eventListeners",enabled:p},{name:"flip",enabled:!1}]})),{update(N){e(17,w.state.elements.reference=N,w),w.update()},destroy(){w.destroy()}}}t2(()=>{const E=[["focusin",S,!0],["focusout",A,!0],["click",S,x],["mouseenter",S,!x],["mouseleave",A,!x]];return d?b=[...document.querySelectorAll(d)]:b=y.previousElementSibling?[y.previousElementSibling]:[],b.length||console.error("No triggers found."),b.forEach(k=>{k.tabIndex<0&&(k.tabIndex=0);for(const[N,z,L]of E)L&&k.addEventListener(N,z)}),e(3,v=b[0]),()=>{b.forEach(k=>{if(k)for(const[N,z]of E)k.removeEventListener(N,z)})}});function M(E){_c[E?"unshift":"push"](()=>{y=E,e(5,y)})}return s.$$set=E=>{e(10,t=Ji(Ji({},t),yc(E))),e(9,i=wc(t,n)),"activeContent"in E&&e(1,a=E.activeContent),"arrow"in E&&e(2,l=E.arrow),"offset"in E&&e(11,c=E.offset),"placement"in E&&e(12,u=E.placement),"trigger"in E&&e(13,h=E.trigger),"triggeredBy"in E&&e(14,d=E.triggeredBy),"strategy"in E&&e(15,f=E.strategy),"open"in E&&e(0,p=E.open),"yOnly"in E&&e(16,g=E.yOnly),"$$scope"in E&&e(20,o=E.$$scope)},s.$$.update=()=>{s.$$.dirty&8192&&e(4,x=h==="click"),s.$$.dirty&9&&m("show",v,p),s.$$.dirty&135168&&w&&w.setOptions({placement:u})},t=yc(t),[p,a,l,v,x,y,S,A,D,i,t,c,u,h,d,f,g,w,r,M,o]}class Cft extends si{constructor(t){super(),ni(this,t,Sft,_ft,Yn,{activeContent:1,arrow:2,offset:11,placement:12,trigger:13,triggeredBy:14,strategy:15,open:0,yOnly:16})}}function Tft(s){let t;const e=s[4].default,n=lm(e,s,s[6],null);return{c(){n&&n.c()},m(i,r){n&&n.m(i,r),t=!0},p(i,r){n&&n.p&&(!t||r&64)&&um(n,e,i,i[6],t?cm(e,i[6],r,null):hm(i[6]),null)},i(i){t||(Te(n,i),t=!0)},o(i){De(n,i),t=!1},d(i){n&&n.d(i)}}}function Ift(s){let t,e;const n=[{"data-tooltip":!0},{rounded:!0},{border:!0},{shadow:!0},s[1],{class:s[0]}];let i={$$slots:{default:[Tft]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Ji(i,n[r]);return t=new Cft({props:i}),t.$on("show",s[5]),{c(){Fs(t.$$.fragment)},m(r,o){Ss(t,r,o),e=!0},p(r,[o]){const a=o&3?dm(n,[n[0],n[1],n[2],n[3],o&2&&n2(r[1]),o&1&&{class:r[0]}]):{};o&64&&(a.$$scope={dirty:o,ctx:r}),t.$set(a)},i(r){e||(Te(t.$$.fragment,r),e=!0)},o(r){De(t.$$.fragment,r),e=!1},d(r){Cs(t,r)}}}function Eft(s,t,e){const n=["style","defaultClass"];let i=wc(t,n),{$$slots:r={},$$scope:o}=t,{style:a="auto"}=t,{defaultClass:l="py-2 px-3 text-sm font-medium"}=t;const c={dark:"border-gray-800 bg-gray-900 text-white dark:bg-gray-700 dark:border-gray-600",light:"border-gray-200 bg-white text-gray-900",auto:"border-gray-200 bg-white text-gray-900 dark:bg-gray-700 dark:text-white dark:border-gray-600",custom:""};let u;function h(d){es.call(this,s,d)}return s.$$set=d=>{e(8,t=Ji(Ji({},t),yc(d))),e(1,i=wc(t,n)),"style"in d&&e(2,a=d.style),"defaultClass"in d&&e(3,l=d.defaultClass),"$$scope"in d&&e(6,o=d.$$scope)},s.$$.update=()=>{i.color?e(2,a="custom"):e(1,i.color="none",i),e(0,u=om("tooltip",l,c[a],t.class))},t=yc(t),[u,i,a,l,r,h,o]}class qR extends si{constructor(t){super(),ni(this,t,Eft,Ift,Yn,{style:2,defaultClass:3})}}function $T(s){let t,e,n,i,r,o,a=s[0].generationCount+"",l,c,u,h,d,f,p,g=s[0].isTraining&&LT(s);return{c(){t=Dt("button"),e=Dt("div"),n=Jt(),i=Dt("p"),r=fe("Generation "),o=Dt("b"),l=fe(a),u=Jt(),g&&g.c(),h=Pr(),st(e,"id","generation-progress-bar"),st(e,"class","max-w-full h-full block absolute top-0 left-0 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-full z-[-1]"),kr(e,"width",s[0].timeLeft/s[0].lastMaxRunTime*100+"%"),st(i,"class","text-gray-300 mix-blend-difference"),st(t,"type","button"),st(t,"data-tooltip-target","tooltip-gen-progress"),st(t,"class",c="w-full overflow-clip "+(s[0].isTraining?"hover:opacity-80":"cursor-not-allowed")+" transition-opacity duration-300 ease-in-out block mx-auto text-md border border-white rounded-full relative font-medium text-center my-3")},m(m,x){It(m,t,x),Et(t,e),Et(t,n),Et(t,i),Et(i,r),Et(i,o),Et(o,l),It(m,u,x),g&&g.m(m,x),It(m,h,x),d=!0,f||(p=xe(t,"click",s[3]),f=!0)},p(m,x){(!d||x&1)&&kr(e,"width",m[0].timeLeft/m[0].lastMaxRunTime*100+"%"),(!d||x&1)&&a!==(a=m[0].generationCount+"")&&wn(l,a),(!d||x&1&&c!==(c="w-full overflow-clip "+(m[0].isTraining?"hover:opacity-80":"cursor-not-allowed")+" transition-opacity duration-300 ease-in-out block mx-auto text-md border border-white rounded-full relative font-medium text-center my-3"))&&st(t,"class",c),m[0].isTraining?g?x&1&&Te(g,1):(g=LT(m),g.c(),Te(g,1),g.m(h.parentNode,h)):g&&(Ho(),De(g,1,1,()=>{g=null}),qo())},i(m){d||(Te(g),d=!0)},o(m){De(g),d=!1},d(m){m&&Tt(t),m&&Tt(u),g&&g.d(m),m&&Tt(h),f=!1,p()}}}function LT(s){let t,e;return t=new qR({props:{triggeredBy:"[data-tooltip-target='tooltip-gen-progress']",placement:"left",$$slots:{default:[Mft]},$$scope:{ctx:s}}}),{c(){Fs(t.$$.fragment)},m(n,i){Ss(t,n,i),e=!0},i(n){e||(Te(t.$$.fragment,n),e=!0)},o(n){De(t.$$.fragment,n),e=!1},d(n){Cs(t,n)}}}function Mft(s){let t;return{c(){t=fe("Click to skip to the next generation")},m(e,n){It(e,t,n)},d(e){e&&Tt(t)}}}function FT(s){let t,e=s[0].isTraining?"Stop training":s[0].generationCount===1?"Start training":"Resume training",n,i,r,o,a,l,c=(s[0].generationCount!==1||s[0].isTraining)&&$T(s);return{c(){t=Dt("button"),n=fe(e),i=Jt(),c&&c.c(),r=Pr(),st(t,"type","button"),st(t,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 transition-colors duration-200 ease-in-out")},m(u,h){It(u,t,h),Et(t,n),It(u,i,h),c&&c.m(u,h),It(u,r,h),o=!0,a||(l=xe(t,"click",s[2]),a=!0)},p(u,h){(!o||h&1)&&e!==(e=u[0].isTraining?"Stop training":u[0].generationCount===1?"Start training":"Resume training")&&wn(n,e),u[0].generationCount!==1||u[0].isTraining?c?(c.p(u,h),h&1&&Te(c,1)):(c=$T(u),c.c(),Te(c,1),c.m(r.parentNode,r)):c&&(Ho(),De(c,1,1,()=>{c=null}),qo())},i(u){o||(Te(c),o=!0)},o(u){De(c),o=!1},d(u){u&&Tt(t),u&&Tt(i),c&&c.d(u),u&&Tt(r),a=!1,l()}}}function kft(s){let t;return{c(){t=Dt("div"),t.textContent=`Decrease the population size if you're experiencing lag. This will
            only take effect after you reset the population with the button down
            below.`,st(t,"class","max-w-sm text-justify")},m(e,n){It(e,t,n)},p:qe,d(e){e&&Tt(t)}}}function Aft(s){let t=s[1],e,n,i,r,o=s[0].maxRunTime+"",a,l,c,u,h,d,f,p,g=Math.round(s[0].topRatio*100)+"",m,x,v,y,b,w,_,C,S=Math.round(s[0].crossoverRate*100)+"",T,I,A,D,M,E,k,N,z=Math.round(s[0].mutationRate*100)+"",L,$,W,q,G,j,rt,lt,Y=Math.round(s[0].mutationStrength*100)+"",vt,xt,mt,ft,it,tt,ut,bt=s[0].populationSize+"",Rt,Ct,Ut,Ot,Ht,se,re,V,F,ct,_t,At,Lt,Gt=FT(s);return Ht=new qR({props:{placement:"left",$$slots:{default:[kft]},$$scope:{ctx:s}}}),{c(){Gt.c(),e=Jt(),n=Dt("label"),i=fe("Time per generation: "),r=Dt("b"),a=fe(o),l=fe(" seconds"),c=Jt(),u=Dt("input"),h=Jt(),d=Dt("label"),f=fe("Do crossover with top "),p=Dt("b"),m=fe(g),x=fe("%"),v=Jt(),y=Dt("input"),b=Jt(),w=Dt("label"),_=fe("Crossover rate: "),C=Dt("b"),T=fe(S),I=fe("%"),A=Jt(),D=Dt("input"),M=Jt(),E=Dt("label"),k=fe("Mutation rate: "),N=Dt("b"),L=fe(z),$=fe("%"),W=Jt(),q=Dt("input"),G=Jt(),j=Dt("label"),rt=fe("Mutation strength: "),lt=Dt("b"),vt=fe(Y),xt=Jt(),mt=Dt("input"),ft=Jt(),it=Dt("label"),tt=fe("Population size: "),ut=Dt("b"),Rt=fe(bt),Ct=Jt(),Ut=Dt("span"),Ut.textContent="!",Ot=Jt(),Fs(Ht.$$.fragment),se=Jt(),re=Dt("input"),V=Jt(),F=Dt("div"),ct=Dt("button"),ct.innerHTML='<span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Reset population</span>',st(n,"for","max-run-time-range"),st(n,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),st(u,"id","max-run-time-range"),st(u,"type","range"),st(u,"min","2"),st(u,"max","120"),st(u,"step","1"),st(u,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(d,"for","top-ratio-range"),st(d,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),st(y,"id","top-ratio-range"),st(y,"type","range"),st(y,"min","0.01"),st(y,"max","1.0"),st(y,"step","0.01"),st(y,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(w,"for","crossover-rate-range"),st(w,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),st(D,"id","crossover-rate-range"),st(D,"type","range"),st(D,"min","0.0"),st(D,"max","1.0"),st(D,"step","0.01"),st(D,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(E,"for","mutation-rate-range"),st(E,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),st(q,"id","mutation-rate-range"),st(q,"type","range"),st(q,"min","0.0"),st(q,"max","1.0"),st(q,"step","0.01"),st(q,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(j,"for","mutation-strength-range"),st(j,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),st(mt,"id","mutation-strength-range"),st(mt,"type","range"),st(mt,"min","0.0"),st(mt,"max","0.15"),st(mt,"step","0.01"),st(mt,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(Ut,"class","inline-flex my-auto my-auto justify-center items-center ml-2 w-[1.25em] h-[1.25em] font-bold text-black bg-orange-300 rounded-full"),st(it,"for","population-size-range"),st(it,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),st(re,"id","population-size-range"),st(re,"type","range"),st(re,"min","10"),st(re,"max","200"),st(re,"step","10"),st(re,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),st(ct,"class","inline-flex items-center justify-center p-0.5 overflow-hidden font-bold text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400"),st(F,"class","block mt-5 mx-auto text-center")},m(O,X){Gt.m(O,X),It(O,e,X),It(O,n,X),Et(n,i),Et(n,r),Et(r,a),Et(n,l),It(O,c,X),It(O,u,X),an(u,s[0].maxRunTime),It(O,h,X),It(O,d,X),Et(d,f),Et(d,p),Et(p,m),Et(d,x),It(O,v,X),It(O,y,X),an(y,s[0].topRatio),It(O,b,X),It(O,w,X),Et(w,_),Et(w,C),Et(C,T),Et(w,I),It(O,A,X),It(O,D,X),an(D,s[0].crossoverRate),It(O,M,X),It(O,E,X),Et(E,k),Et(E,N),Et(N,L),Et(E,$),It(O,W,X),It(O,q,X),an(q,s[0].mutationRate),It(O,G,X),It(O,j,X),Et(j,rt),Et(j,lt),Et(lt,vt),It(O,xt,X),It(O,mt,X),an(mt,s[0].mutationStrength),It(O,ft,X),It(O,it,X),Et(it,tt),Et(it,ut),Et(ut,Rt),Et(it,Ct),Et(it,Ut),Et(it,Ot),Ss(Ht,it,null),It(O,se,X),It(O,re,X),an(re,s[0].populationSize),It(O,V,X),It(O,F,X),Et(F,ct),_t=!0,At||(Lt=[xe(u,"change",s[4]),xe(u,"input",s[4]),xe(y,"change",s[5]),xe(y,"input",s[5]),xe(D,"change",s[6]),xe(D,"input",s[6]),xe(q,"change",s[7]),xe(q,"input",s[7]),xe(mt,"change",s[8]),xe(mt,"input",s[8]),xe(re,"change",s[9]),xe(re,"input",s[9]),xe(ct,"click",s[10])],At=!0)},p(O,[X]){X&2&&Yn(t,t=O[1])?(Ho(),De(Gt,1,1,qe),qo(),Gt=FT(O),Gt.c(),Te(Gt,1),Gt.m(e.parentNode,e)):Gt.p(O,X),(!_t||X&1)&&o!==(o=O[0].maxRunTime+"")&&wn(a,o),X&1&&an(u,O[0].maxRunTime),(!_t||X&1)&&g!==(g=Math.round(O[0].topRatio*100)+"")&&wn(m,g),X&1&&an(y,O[0].topRatio),(!_t||X&1)&&S!==(S=Math.round(O[0].crossoverRate*100)+"")&&wn(T,S),X&1&&an(D,O[0].crossoverRate),(!_t||X&1)&&z!==(z=Math.round(O[0].mutationRate*100)+"")&&wn(L,z),X&1&&an(q,O[0].mutationRate),(!_t||X&1)&&Y!==(Y=Math.round(O[0].mutationStrength*100)+"")&&wn(vt,Y),X&1&&an(mt,O[0].mutationStrength),(!_t||X&1)&&bt!==(bt=O[0].populationSize+"")&&wn(Rt,bt);const Pt={};X&4096&&(Pt.$$scope={dirty:X,ctx:O}),Ht.$set(Pt),X&1&&an(re,O[0].populationSize)},i(O){_t||(Te(Gt),Te(Ht.$$.fragment,O),_t=!0)},o(O){De(Gt),De(Ht.$$.fragment,O),_t=!1},d(O){Gt.d(O),O&&Tt(e),O&&Tt(n),O&&Tt(c),O&&Tt(u),O&&Tt(h),O&&Tt(d),O&&Tt(v),O&&Tt(y),O&&Tt(b),O&&Tt(w),O&&Tt(A),O&&Tt(D),O&&Tt(M),O&&Tt(E),O&&Tt(W),O&&Tt(q),O&&Tt(G),O&&Tt(j),O&&Tt(xt),O&&Tt(mt),O&&Tt(ft),O&&Tt(it),Cs(Ht),O&&Tt(se),O&&Tt(re),O&&Tt(V),O&&Tt(F),At=!1,ei(Lt)}}}function Nft(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTrainPanel=r;const o=()=>{n.isTraining?n.stopTraining():n.startTraining(),n.rerenderTrainPanel()},a=()=>{n.isTraining&&e(0,n.timeLeft=0,n)};function l(){n.maxRunTime=bs(this.value),e(0,n)}function c(){n.topRatio=bs(this.value),e(0,n)}function u(){n.crossoverRate=bs(this.value),e(0,n)}function h(){n.mutationRate=bs(this.value),e(0,n)}function d(){n.mutationStrength=bs(this.value),e(0,n)}function f(){n.populationSize=bs(this.value),e(0,n)}const p=()=>{n.resetPopulation()};return s.$$set=g=>{"mode"in g&&e(0,n=g.mode)},[n,i,o,a,l,c,u,h,d,f,p]}class Rft extends si{constructor(t){super(),ni(this,t,Nft,Aft,Yn,{mode:0})}}const PT=[0,-15,15,-30,30,-45,45,-60,60,-75,75,-90,90].map(s=>s*Math.PI/180).sort(function(s,t){return s-t}),fr=8;class Ch extends Qv{constructor(t,e,n,i,r,o=1,a=.25,l=.1){super();const c=new dl({friction:a,restitution:l}),u=new cl(.1,.1,.2),h=new nn(u,i);h.castShadow=!0,h.receiveShadow=!0,h.position.x=t,h.position.y=e,h.position.z=n,h.updateMatrix(),this.meshes.push(h),this.carBodyMesh=h;const d=new Eh(new R(.05,.05,.1)),f=new qt({mass:o/2,allowSleep:!1,collisionFilterGroup:fr,collisionFilterMask:~fr});f.addShape(d),f.position.x=h.position.x,f.position.y=h.position.y,f.position.z=h.position.z,this.bodies.push(f);const p=new Ea(.033,.033,.02,16);p.rotateZ(Math.PI/2);const g=new nn(p,r);g.castShadow=!0,g.receiveShadow=!0,g.position.x=-.1+h.position.x,g.position.y=-.05+h.position.y,g.position.z=-.1+h.position.z,this.meshes.push(g),this.wheelLFMesh=g;const m=new $f(.033),x=new qt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:fr,collisionFilterMask:~fr});x.addShape(m),x.position.x=g.position.x,x.position.y=g.position.y,x.position.z=g.position.z,this.bodies.push(x);const v=new Ea(.033,.033,.02,16);v.rotateZ(Math.PI/2);const y=new nn(v,r);y.castShadow=!0,y.receiveShadow=!0,y.position.x=.1+h.position.x,y.position.y=-.05+h.position.y,y.position.z=-.1+h.position.z,this.meshes.push(y),this.wheelRFMesh=y;const b=new $f(.033),w=new qt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:fr,collisionFilterMask:~fr});w.addShape(b),w.position.x=y.position.x,w.position.y=y.position.y,w.position.z=y.position.z,this.bodies.push(w);const _=new Ea(.04,.04,.033);_.rotateZ(Math.PI/2);const C=new nn(_,r);C.castShadow=!0,C.receiveShadow=!0,C.position.x=-.1+h.position.x,C.position.y=-.05+h.position.y,C.position.z=.1+h.position.z,this.meshes.push(C),this.wheelLBMesh=C;const S=new $f(.04),T=new qt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:fr,collisionFilterMask:~fr});T.addShape(S),T.position.x=C.position.x,T.position.y=C.position.y,T.position.z=C.position.z,this.bodies.push(T);const I=new Ea(.04,.04,.033);I.rotateZ(Math.PI/2);const A=new nn(I,r);A.castShadow=!0,A.receiveShadow=!0,A.position.x=.1+h.position.x,A.position.y=-.05+h.position.y,A.position.z=.1+h.position.z,this.meshes.push(A),this.wheelRBMesh=A;const D=new $f(.04),M=new qt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:fr,collisionFilterMask:~fr});M.addShape(D),M.position.x=A.position.x,M.position.y=A.position.y,M.position.z=A.position.z,this.bodies.push(M);const E=new R(1,0,0),k=new R(1,0,0),N=new R(1,0,0),z=new R(1,0,0);this.constraintLF=new Df(f,x,{pivotA:new R(-.1,-.05,-.1),axisA:E,maxForce:.99}),this.constraints.push(this.constraintLF),this.constraintRF=new Df(f,w,{pivotA:new R(.1,-.05,-.1),axisA:k,maxForce:.99}),this.constraints.push(this.constraintRF),this.constraintLB=new Df(f,T,{pivotA:new R(-.1,-.05,.1),axisA:N,maxForce:.99}),this.constraints.push(this.constraintLB),this.constraintRB=new Df(f,M,{pivotA:new R(.1,-.05,.1),axisA:z,maxForce:.99}),this.constraints.push(this.constraintRB),this.accelMotorForce=.004,this.brakeMotorForce=1,this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.enableMotor(),this.constraintRB.enableMotor()}getSensorRays(){const t=this.getForwardDir(),e=this.getSideDir();let n=this.carBodyMesh.position.clone().add(t.clone().multiplyScalar(.1));return PT.map(i=>{let r=t.clone().multiplyScalar(Math.cos(i)).add(e.clone().multiplyScalar(Math.sin(i))),o=n.clone().add(e.clone().multiplyScalar(.05*Math.sin(i))),a=new L2(o,r,.01,1);return a.layers.set(ib),a.firstHitOnly=!0,a})}getSensorData(t){return this.getSensorRays().map(n=>{let i=n.intersectObjects([t.raceTrack.barrierMesh,t.ground.mesh],!1),r=i.length>0?i[0].distance/n.far:1,o=n.ray.origin,a=n.ray.direction;return{distance:r,origin:o,direction:a}})}static get sensorNumber(){return PT.length}getForwardVelocity(){let t=this.getForwardDir();t.y=0,t.normalize();let e=this.bodies[0].velocity;return t.x*e.x+t.z*e.z}getPosition(){return this.carBodyMesh.position.clone()}getForwardDir(){let t=this.wheelLFMesh.position.clone().sub(this.wheelLBMesh.position).normalize(),e=this.wheelRFMesh.position.clone().sub(this.wheelRBMesh.position).normalize();return t.clone().add(e).divideScalar(2)}getSideDir(){let t=this.wheelLBMesh.position.clone().sub(this.wheelRBMesh.position).normalize(),e=this.wheelLFMesh.position.clone().sub(this.wheelRFMesh.position).normalize();return t.clone().add(e).divideScalar(2)}rotateY(t){const e=this.getPosition();this.bodies.forEach(n=>{const i=new H(n.position.x,n.position.y,n.position.z).sub(e);i.applyAxisAngle(new H(0,1,0),t),n.position.set(i.x+e.x,i.y+e.y,i.z+e.z),n.quaternion=n.quaternion.mult(new mn().setFromAxisAngle(new R(0,1,0),-t))})}applyInput(t,e,n,i,r){t&&!n&&(this.constraintLB.setMotorSpeed(100),this.constraintRB.setMotorSpeed(100)),n&&!t&&(this.constraintLB.setMotorSpeed(-20),this.constraintRB.setMotorSpeed(-20)),(!t&&!n||t&&n)&&(this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0)),e&&!i&&(this.constraintLF.axisA.z=-.25,this.constraintRF.axisA.z=-.25),i&&!e&&(this.constraintLF.axisA.z=.25,this.constraintRF.axisA.z=.25),(!e&&!i||e&&i)&&(this.constraintLF.axisA.z=0,this.constraintRF.axisA.z=0),r?(this.constraintLB.setMotorMaxForce(this.brakeMotorForce),this.constraintRB.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0),this.constraintLF.enableMotor(),this.constraintRF.enableMotor(),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLF.setMotorSpeed(0),this.constraintRF.setMotorSpeed(0)):(this.constraintLF.disableMotor(),this.constraintRF.disableMotor(),this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce))}dispose(){this.meshes.forEach(t=>t.geometry.dispose())}}const Dft=new D2,$ft=new ul({color:2236962});class jR{constructor(t){jt(this,"gameWorld");jt(this,"car");jt(this,"keyupHandler");jt(this,"keydownHandler");jt(this,"arrowHelpers",[]);jt(this,"sensorData",[]);jt(this,"chaseMode",!0);jt(this,"W",!1);jt(this,"A",!1);jt(this,"S",!1);jt(this,"D",!1);jt(this,"SPACE",!1);jt(this,"_showSensors",!1);jt(this,"completion",0);this.gameWorld=t,this.keydownHandler=e=>{switch(e.key){case"w":this.W=!0,e.preventDefault();break;case"a":this.A=!0,e.preventDefault();break;case"s":this.S=!0,e.preventDefault();break;case"d":this.D=!0,e.preventDefault();break;case" ":this.SPACE=!0,e.preventDefault();break}},this.keyupHandler=e=>{switch(e.key){case"w":this.W=!1,e.preventDefault();break;case"a":this.A=!1,e.preventDefault();break;case"s":this.S=!1,e.preventDefault();break;case"d":this.D=!1,e.preventDefault();break;case" ":this.SPACE=!1,e.preventDefault();break}}}update(t){var e;if((e=this.car)==null||e.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.car){this.sensorData=this.car.getSensorData(this.gameWorld),this.sensorData.forEach((i,r)=>{const o=this.arrowHelpers[r];o.setLength(i.distance,.05,.03),o.setDirection(i.direction),o.position.copy(i.origin),o.updateMatrix();const a=document.getElementById("arrow-length-indicator-"+r);a&&(a.style.width=i.distance*100+"%",a.innerText=i.distance.toFixed(2))});const n=this.car.getPosition();this.completion=this.gameWorld.raceTrack.amountCompleted(n.x,n.z),document.getElementById("completion-text").innerText=(this.completion*100).toFixed(1)+"%",document.getElementById("completion-bar").style.width=this.completion*100+"%"}if(this.car&&(document.getElementById("velocity-element").innerText=this.car.getForwardVelocity().toFixed(2)),this.chaseMode&&this.car){this.gameWorld.controls.target=this.car.getPosition(),this.gameWorld.controls.target.y+=.2;let n=this.car.getForwardDir();n.y=0,n.normalize(),n.multiplyScalar(-.5),n.y=.2,this.gameWorld.camera.position.copy(this.car.getPosition()),this.gameWorld.camera.position.add(n)}}get showSensors(){return this._showSensors}set showSensors(t){this._showSensors=t,this.arrowHelpers.forEach(e=>{e.visible=t})}removeCar(){this.car&&(this.gameWorld.removeGameObject(this.car),this.car.dispose()),delete this.car,this.arrowHelpers.forEach(t=>{this.gameWorld.scene.remove(t),t.dispose()}),this.arrowHelpers=[],this.sensorData=[],this.completion=0}respawnCar(){this.removeCar(),this.car=new Ch(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,Dft,$ft,5,.25,.1),this.car.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(this.car),this.arrowHelpers=this.car.getSensorRays().map(t=>{const e=t.ray.direction;e.normalize();const n=t.ray.origin,i=e.length(),r=16776960,o=new ez(e,n,i,r);return o.visible=this.showSensors,this.gameWorld.scene.add(o),o}),this.sensorData=this.car.getSensorData(this.gameWorld)}activate(){this.W=this.A=this.S=this.D=this.SPACE=!1,this.respawnCar(),document.addEventListener("keydown",this.keydownHandler),document.addEventListener("keyup",this.keyupHandler)}deactivate(){this.removeCar(),document.removeEventListener("keydown",this.keydownHandler),document.removeEventListener("keyup",this.keyupHandler)}}_W("cpu");var ws=(s=>(s[s.Teach=0]="Teach",s[s.Demonstrate=1]="Demonstrate",s[s.None=2]="None",s))(ws||{});const Lft=Ch,Fft=5;class Pft extends jR{constructor(e){super(e);jt(this,"inputSize");jt(this,"model");jt(this,"_state",2);jt(this,"previousState",2);jt(this,"recording",[]);jt(this,"storedRecording",[]);jt(this,"isCurrentlyFitting",!1);jt(this,"currentLoss",0);jt(this,"epochsDone",0);jt(this,"_numberOfEpochs",40);jt(this,"_batchSize",32);jt(this,"_hiddenLayerSize",10);this.inputSize=Lft.sensorNumber+1,this.generateNetwork()}generateNetwork(){this.model&&this.model.dispose(),this.model=ak({layers:[Yp({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"tanh"}),Yp({units:Fft,activation:"softmax"})]}),this.model.compile({optimizer:"adam",loss:"binaryCrossentropy"})}recordButtonPressed(){this.respawnCar(),this.state=0,this.recording=[],this.rerenderTeachPanel()}discardButtonPressed(){this.state=2,this.recording=[],this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}startAIDemonstration(){this.state=1,this.recording=[],this.respawnCar(),this.rerenderTeachPanel()}stopAIDemonstration(){this.state=2,this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}storeRecording(){this.storedRecording.push(...this.recording),this.recording=[],this.rerenderTeachPanel()}async trainFromStored(){const e=this.storedRecording.map(o=>[...o.sensordDistances,o.forwardVelocity]),n=this.storedRecording.map(o=>o.action),i=Xu(e),r=Xu(n);this.isCurrentlyFitting=!0,await this.model.fit(i,r,{epochs:this.numberOfEpochs,callbacks:{onEpochEnd:(o,a)=>{this.currentLoss=a.loss,this.epochsDone=o+1,this.rerenderTeachPanel()},onTrainEnd:()=>{this.isCurrentlyFitting=!1,this.rerenderTeachPanel()}}}),i.dispose(),r.dispose()}update(e){if(super.update(e),this.state===0&&this.car){const n=this.car.getPosition();this.gameWorld.raceTrack.isFinished(n.x,n.z)?(this.state=2,this.removeCar(),this.rerenderTeachPanel(),this.gameWorld.controls.reset()):(this.recording.push({sensordDistances:this.sensorData.map(i=>i.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}if(this.state===1&&this.car){const n=Xu([[...this.sensorData.map(o=>o.distance),this.car.getForwardVelocity()]]),i=this.model.predict(n),r=i.arraySync()[0].map(o=>o>=.5);this.car.applyInput(...r),n.dispose(),i.dispose(),(this.W||this.A||this.S||this.D||this.SPACE)&&(this.car.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.recording.push({sensordDistances:this.sensorData.map(o=>o.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}}removeCar(){super.removeCar()}respawnCar(){super.respawnCar()}activate(){super.activate(),this.removeCar()}deactivate(){super.deactivate(),this.removeCar(),this.state=2,this.recording=[]}get numberOfEpochs(){return this._numberOfEpochs}set numberOfEpochs(e){e==null||e<1||(this._numberOfEpochs=Math.floor(e))}get batchSize(){return this._batchSize}set batchSize(e){e==null||e<1||(this._batchSize=Math.floor(e))}get hiddenLayerSize(){return this._hiddenLayerSize}set hiddenLayerSize(e){e==null||e<1||(this._hiddenLayerSize=Math.floor(e),this.generateNetwork())}get state(){return this._state}set state(e){e!==this._state&&(this.previousState=this._state,this._state=e)}rerenderTeachPanel(){window.rerenderTeachPanel()}}function OT(s){let t,e,n,i=s[0].recording.length+"",r,o,a=s[0].state===ws.Teach||s[0].previousState===ws.Teach?"inputs recorded":"corrections recorded",l;return{c(){t=Dt("div"),e=Dt("span"),n=Dt("span"),r=fe(i),o=fe(`
            \xA0`),l=fe(a),st(n,"id","recorded-count-span"),st(e,"class","text-base font-medium text-blue-700 dark:text-white"),kr(t,"display","hidden"),st(t,"class","flex mt-4 mb-1")},m(c,u){It(c,t,u),Et(t,e),Et(e,n),Et(n,r),Et(t,o),Et(t,l)},p(c,u){u&1&&i!==(i=c[0].recording.length+"")&&wn(r,i),u&1&&a!==(a=c[0].state===ws.Teach||c[0].previousState===ws.Teach?"inputs recorded":"corrections recorded")&&wn(l,a)},d(c){c&&Tt(t)}}}function zT(s){let t,e,n,i;return{c(){t=Dt("div"),e=Dt("button"),e.innerHTML='<span class="relative py-1 px-2 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Store recording</span>',st(e,"class","inline-flex items-center text-center justify-center p-0.5 mb-0 overflow-hidden text-xs font-medium text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-pink-300 group-hover:via-purple-300 group-hover:to-indigo-400 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400 block mx-auto"),st(t,"class","block mx-auto text-center")},m(r,o){It(r,t,o),Et(t,e),n||(i=xe(e,"click",s[4]),n=!0)},p:qe,d(r){r&&Tt(t),n=!1,i()}}}function BT(s){let t,e,n;return{c(){t=Dt("button"),t.textContent="Train from stored inputs",st(t,"type","button"),st(t,"class","block text-red-700 hover:text-white mx-auto border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-xs px-2 py-1 text-center mb-0 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900")},m(i,r){It(i,t,r),e||(n=xe(t,"click",s[5]),e=!0)},p:qe,d(i){i&&Tt(t),e=!1,n()}}}function UT(s){let t,e,n,i=s[0].currentLoss.toFixed(4)+"",r,o,a,l=s[0].epochsDone+"",c,u,h=s[0].numberOfEpochs+"",d,f,p,g,m;return{c(){t=Dt("div"),e=Dt("span"),n=fe("Loss: "),r=fe(i),o=Jt(),a=Dt("span"),c=fe(l),u=fe(" / "),d=fe(h),f=fe(" epochs"),p=Jt(),g=Dt("div"),m=Dt("div"),st(e,"class","text-sm font-light text-blue-700 dark:text-white"),st(a,"class","text-sm font-medium text-blue-700 dark:text-white"),st(t,"class","flex justify-between mb-1"),st(m,"class","bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 h-2.5 rounded-full"),kr(m,"width",s[0].epochsDone/s[0].numberOfEpochs*100+"%"),st(g,"class","w-full bg-gray-700 rounded-full h-2.5")},m(x,v){It(x,t,v),Et(t,e),Et(e,n),Et(e,r),Et(t,o),Et(t,a),Et(a,c),Et(a,u),Et(a,d),Et(a,f),It(x,p,v),It(x,g,v),Et(g,m)},p(x,v){v&1&&i!==(i=x[0].currentLoss.toFixed(4)+"")&&wn(r,i),v&1&&l!==(l=x[0].epochsDone+"")&&wn(c,l),v&1&&h!==(h=x[0].numberOfEpochs+"")&&wn(d,h),v&1&&kr(m,"width",x[0].epochsDone/x[0].numberOfEpochs*100+"%")},d(x){x&&Tt(t),x&&Tt(p),x&&Tt(g)}}}function VT(s){let t,e,n=s[0].state==ws.None?"New recording":"Discard",i,r,o,a,l,c,u,h,d,f,p=s[0].storedRecording.length+"",g,m,x,v,y,b,w,_,C,S,T,I,A,D,M,E,k,N,z,L,$,W,q,G,j,rt,lt,Y,vt=(s[0].state!=ws.None||s[0].recording.length>0)&&OT(s),xt=s[0].state==ws.None&&s[0].recording.length>0&&zT(s),mt=s[0].storedRecording.length>0&&!s[0].isCurrentlyFitting&&BT(s),ft=s[0].isCurrentlyFitting&&UT(s);return $=new LR({props:{mode:s[0]}}),q=new $R({props:{mode:s[0]}}),j=new DR({props:{gameWorld:s[0].gameWorld}}),{c(){t=Dt("div"),e=Dt("button"),i=fe(n),r=Jt(),o=Dt("button"),o.textContent="Test AI car",a=Jt(),vt&&vt.c(),l=Jt(),xt&&xt.c(),c=Jt(),u=Dt("hr"),h=Jt(),d=Dt("div"),f=Dt("span"),g=fe(p),m=fe(" inputs stored."),x=Jt(),mt&&mt.c(),v=Jt(),ft&&ft.c(),y=Jt(),b=Dt("ul"),w=Dt("li"),w.textContent="Epochs",_=Jt(),C=Dt("input"),S=Jt(),T=Dt("li"),T.textContent="Batch size",I=Jt(),A=Dt("input"),D=Jt(),M=Dt("li"),M.textContent="Hidden layer units",E=Jt(),k=Dt("input"),N=Jt(),z=Dt("hr"),L=Jt(),Fs($.$$.fragment),W=Jt(),Fs(q.$$.fragment),G=Jt(),Fs(j.$$.fragment),st(e,"type","button"),st(e,"class","focus:outline-none text-white grow flex-1 transition py-1 px-2 text-sm focus:ring-red-300 font-bold rounded-l-lg border border-gray-200 focus:z-10 focus:ring-1 bg-red-600 border-gray-600 text-white hover:text-white hover:bg-red-700"),st(o,"type","button"),st(o,"class","text-purple-700 hover:text-white grow flex-1 transition border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-bold rounded-r-lg text-sm px-2 py-1 text-center dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900"),st(t,"class","flex rounded-md shadow-sm"),st(t,"role","group"),st(u,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),st(f,"class","text-base font-medium text-blue-700 dark:text-white"),kr(d,"display","hidden"),st(d,"class","flex justify-between mt-4 mb-1"),st(w,"class","col-span-2 py-2 px-2 rounded-tl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),st(C,"type","number"),st(C,"min","1"),st(C,"max","1000000"),st(C,"step","1"),st(C,"pattern","\\d+"),st(C,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-tr-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),st(T,"class","col-span-2 py-2 px-2 border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),st(A,"type","number"),st(A,"min","1"),st(A,"max","256"),st(A,"step","1"),st(A,"pattern","\\d+"),st(A,"class","col-span-1 p-1 text-gray-900 bg-gray-50 border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),st(M,"class","col-span-2 py-2 px-2 rounded-bl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),st(k,"type","number"),st(k,"min","1"),st(k,"max","1024"),st(k,"step","1"),st(k,"pattern","\\d+"),st(k,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-br-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),st(b,"class","w-100 mt-4 grid grid-cols-3 flex-row flex-wrap text-sm font-bold rounded-xl border border-gray-600"),st(z,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(it,tt){It(it,t,tt),Et(t,e),Et(e,i),Et(t,r),Et(t,o),It(it,a,tt),vt&&vt.m(it,tt),It(it,l,tt),xt&&xt.m(it,tt),It(it,c,tt),It(it,u,tt),It(it,h,tt),It(it,d,tt),Et(d,f),Et(f,g),Et(f,m),It(it,x,tt),mt&&mt.m(it,tt),It(it,v,tt),ft&&ft.m(it,tt),It(it,y,tt),It(it,b,tt),Et(b,w),Et(b,_),Et(b,C),an(C,s[0].numberOfEpochs),Et(b,S),Et(b,T),Et(b,I),Et(b,A),an(A,s[0].batchSize),Et(b,D),Et(b,M),Et(b,E),Et(b,k),an(k,s[0].hiddenLayerSize),It(it,N,tt),It(it,z,tt),It(it,L,tt),Ss($,it,tt),It(it,W,tt),Ss(q,it,tt),It(it,G,tt),Ss(j,it,tt),rt=!0,lt||(Y=[xe(e,"click",s[2]),xe(o,"click",s[3]),xe(C,"input",s[6]),xe(A,"input",s[7]),xe(k,"input",s[8])],lt=!0)},p(it,tt){(!rt||tt&1)&&n!==(n=it[0].state==ws.None?"New recording":"Discard")&&wn(i,n),it[0].state!=ws.None||it[0].recording.length>0?vt?vt.p(it,tt):(vt=OT(it),vt.c(),vt.m(l.parentNode,l)):vt&&(vt.d(1),vt=null),it[0].state==ws.None&&it[0].recording.length>0?xt?xt.p(it,tt):(xt=zT(it),xt.c(),xt.m(c.parentNode,c)):xt&&(xt.d(1),xt=null),(!rt||tt&1)&&p!==(p=it[0].storedRecording.length+"")&&wn(g,p),it[0].storedRecording.length>0&&!it[0].isCurrentlyFitting?mt?mt.p(it,tt):(mt=BT(it),mt.c(),mt.m(v.parentNode,v)):mt&&(mt.d(1),mt=null),it[0].isCurrentlyFitting?ft?ft.p(it,tt):(ft=UT(it),ft.c(),ft.m(y.parentNode,y)):ft&&(ft.d(1),ft=null),tt&1&&bs(C.value)!==it[0].numberOfEpochs&&an(C,it[0].numberOfEpochs),tt&1&&bs(A.value)!==it[0].batchSize&&an(A,it[0].batchSize),tt&1&&bs(k.value)!==it[0].hiddenLayerSize&&an(k,it[0].hiddenLayerSize);const ut={};tt&1&&(ut.mode=it[0]),$.$set(ut);const bt={};tt&1&&(bt.mode=it[0]),q.$set(bt);const Rt={};tt&1&&(Rt.gameWorld=it[0].gameWorld),j.$set(Rt)},i(it){rt||(Te($.$$.fragment,it),Te(q.$$.fragment,it),Te(j.$$.fragment,it),rt=!0)},o(it){De($.$$.fragment,it),De(q.$$.fragment,it),De(j.$$.fragment,it),rt=!1},d(it){it&&Tt(t),it&&Tt(a),vt&&vt.d(it),it&&Tt(l),xt&&xt.d(it),it&&Tt(c),it&&Tt(u),it&&Tt(h),it&&Tt(d),it&&Tt(x),mt&&mt.d(it),it&&Tt(v),ft&&ft.d(it),it&&Tt(y),it&&Tt(b),it&&Tt(N),it&&Tt(z),it&&Tt(L),Cs($,it),it&&Tt(W),Cs(q,it),it&&Tt(G),Cs(j,it),lt=!1,ei(Y)}}}function Oft(s){let t=s[1],e,n,i=VT(s);return{c(){i.c(),e=Pr()},m(r,o){i.m(r,o),It(r,e,o),n=!0},p(r,[o]){o&2&&Yn(t,t=r[1])?(Ho(),De(i,1,1,qe),qo(),i=VT(r),i.c(),Te(i,1),i.m(e.parentNode,e)):i.p(r,o)},i(r){n||(Te(i),n=!0)},o(r){De(i),n=!1},d(r){r&&Tt(e),i.d(r)}}}function zft(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTeachPanel=r;const o=()=>{n.state==ws.None?n.recordButtonPressed():n.state==ws.Teach&&n.discardButtonPressed()},a=()=>{n.state==ws.None?n.startAIDemonstration():n.state==ws.Demonstrate&&n.stopAIDemonstration()},l=()=>{n.storeRecording()},c=()=>{n.trainFromStored()};function u(){n.numberOfEpochs=bs(this.value),e(0,n)}function h(){n.batchSize=bs(this.value),e(0,n)}function d(){n.hiddenLayerSize=bs(this.value),e(0,n)}return s.$$set=f=>{"mode"in f&&e(0,n=f.mode)},[n,i,o,a,l,c,u,h,d]}class Bft extends si{constructor(t){super(),ni(this,t,zft,Oft,Yn,{mode:0})}}const vp=new Xv(.45,.5,32,1);vp.rotateX(Math.PI/2);const o1=new ll({color:0,side:Ds});o1.depthTest=!1;o1.depthWrite=!1;const a1=new ll({color:16753920,side:Ds});a1.depthTest=!1;a1.depthWrite=!1;const XR=new ll({color:65280,side:Ds});XR.depthTest=!1;XR.depthWrite=!1;const l1=new ll({color:255,side:Ds});l1.depthTest=!1;l1.depthWrite=!1;class Uft{constructor(t){jt(this,"gameWorld");jt(this,"raycaster");jt(this,"pointer");jt(this,"ring");jt(this,"brushSize",1);jt(this,"onPointerMove");jt(this,"onMouseUp");jt(this,"onMouseDown");jt(this,"mouseDown");jt(this,"rings");jt(this,"road");jt(this,"roadPoints");this.gameWorld=t,this.roadPoints=[new H(4,0,4),new H(-4,0,4),new H(-4,0,0),new H(4,0,0),new H(4,0,-4),new H(-4,0,-4)],this.road=new DS(this.roadPoints,1),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road,this.raycaster=new L2,this.pointer=new kt(0,0),this.onPointerMove=e=>{this.pointer.x=e.offsetX/this.gameWorld.canvas.offsetWidth*2-1,this.pointer.y=-(e.offsetY/this.gameWorld.canvas.offsetHeight)*2+1},this.ring=new nn(vp,o1),this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.ring.castShadow=!1,this.ring.receiveShadow=!1,this.ring.renderOrder=999,this.rings=[],this.mouseDown=!1,this.onMouseUp=e=>{e.button===0&&this.endDrawing(),document.removeEventListener("mouseup",this.onMouseUp)},this.onMouseDown=e=>{e.button===0&&(this.startDrawing(),document.addEventListener("mouseup",this.onMouseUp))}}startDrawing(){this.mouseDown=!0;const t=new nn(vp,a1);t.scale.set(this.brushSize,this.brushSize,this.brushSize),t.castShadow=!1,t.receiveShadow=!1,t.renderOrder=999,t.position.copy(this.ring.position),this.rings=[t],this.gameWorld.scene.add(t)}addDrawing(){if(this.rings.some(n=>this.ring.position.distanceTo(n.position)<this.brushSize))return;const e=new nn(vp,l1);e.scale.set(this.brushSize,this.brushSize,this.brushSize),e.castShadow=!1,e.receiveShadow=!1,e.renderOrder=999,e.position.copy(this.ring.position),this.rings.push(e),this.gameWorld.scene.add(e)}endDrawing(){this.mouseDown=!1,this.rings.length>3&&(this.gameWorld.removeGameObject(this.road),this.road.dispose(),this.roadPoints=this.rings.map(t=>t.position),this.road=new DS(this.roadPoints,this.brushSize),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road),this.rings.forEach(t=>{this.gameWorld.scene.remove(t)}),this.rings=[]}update(t){this.raycaster.setFromCamera(this.pointer,this.gameWorld.camera);const e=this.raycaster.intersectObjects([this.gameWorld.ground.mesh]);if(e.length>0){const n=e[0].point;this.ring.position.set(n.x,n.y,n.z),this.ring.visible=!0}else this.ring.visible=!1;this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.mouseDown&&this.addDrawing(),this.gameWorld.controls.target.set(0,0,0)}activate(){this.gameWorld.controls.maxPolarAngle=0,this.gameWorld.controls.minAzimuthAngle=0,this.gameWorld.controls.maxAzimuthAngle=0,this.gameWorld.controls.minDistance=8,this.gameWorld.controls.maxDistance=8,this.gameWorld.controls.target.set(0,0,0),this.ring.visible=!1,this.gameWorld.scene.add(this.ring),this.gameWorld.canvas.addEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.addEventListener("mousedown",this.onMouseDown)}deactivate(){this.gameWorld.controls.maxPolarAngle=Math.PI,this.gameWorld.controls.minAzimuthAngle=1/0,this.gameWorld.controls.maxAzimuthAngle=1/0,this.gameWorld.controls.minDistance=0,this.gameWorld.controls.maxDistance=50,this.gameWorld.controls.reset(),this.gameWorld.scene.remove(this.ring),this.gameWorld.canvas.removeEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.removeEventListener("mousedown",this.onMouseDown)}}const WT=new D2,GT=new ul({color:2236962}),Vft=Ch,Wft=5;class Gft{constructor(t){jt(this,"gameWorld");jt(this,"inputSize");jt(this,"isTraining",!1);jt(this,"populationSize",50);jt(this,"maxRunTime",20);jt(this,"lastMaxRunTime",20);jt(this,"population",[]);jt(this,"hiddenLayerSize",10);jt(this,"timeLeft",0);jt(this,"topRatio",.5);jt(this,"crossoverRate",.25);jt(this,"mutationRate",.05);jt(this,"mutationStrength",.02);jt(this,"generationCount",1);this.gameWorld=t,this.inputSize=Vft.sensorNumber+1}generatePopulation(){this.population=[];for(let t=0;t<this.populationSize;t++)this.population.push(this.generateAgent())}startTraining(){this.isTraining=!0,this.population.length===0?this.generatePopulation():this.resetCars(),this.timeLeft=this.maxRunTime,this.lastMaxRunTime=this.timeLeft}stopTraining(){this.isTraining=!1,this.timeLeft=this.maxRunTime,this.lastMaxRunTime=this.timeLeft,this.resetCars()}resetPopulation(){this.stopTraining(),this.removeCars(),this.population.forEach(t=>{t.car.dispose(),t.model.dispose()}),this.population=[],this.generationCount=1,this.generatePopulation(),this.rerenderTrainPanel()}update(t){this.isTraining&&(this.timeLeft-=t,this.timeLeft<=0&&(this.doRankingAndCrossover(),this.timeLeft=this.maxRunTime,this.lastMaxRunTime=this.timeLeft,this.resetCars(),this.generationCount++,this.rerenderTrainPanel()),this.population.forEach(e=>{const n=e.car.getSensorData(this.gameWorld),i=e.car.getForwardVelocity(),r=Xu([[...n.map(c=>c.distance),i]]),o=e.model.predict(r),a=o.arraySync()[0].map(c=>c>=.5);e.car.applyInput(...a),r.dispose(),o.dispose();const l=e.car.getPosition();e.fitness=this.gameWorld.raceTrack.amountCompleted(l.x,l.z)}),document.getElementById("generation-progress-bar").style.width=`${this.timeLeft/this.lastMaxRunTime*100}%`)}doRankingAndCrossover(){this.population.forEach(t=>{const e=t.car.getPosition();t.fitness=this.gameWorld.raceTrack.amountCompleted(e.x,e.z)}),this.population.sort((t,e)=>e.fitness-t.fitness),at(()=>{for(let t=Math.round(this.population.length*this.topRatio);t<this.population.length;t++){if(Math.random()>=this.crossoverRate)continue;const e=this.population[Math.floor(Math.random()*this.population.length*this.topRatio)],n=this.population[Math.floor(Math.random()*this.population.length*this.topRatio)],i=this.population[t],r=Math.random();for(let o=0;o<i.model.weights.length;o++){const a=i.model.weights[o],l=e.model.weights[o],c=n.model.weights[o];a.val.assign(l.val.mul(r).add(c.val.mul(1-r)))}}for(let t=0;t<this.population.length;t++)Math.random()>=this.mutationRate||this.population[t].model.weights.forEach(e=>{const n=mv(e.shape,0,this.mutationStrength);e.val.assign(e.val.add(n))})})}activate(){this.gameWorld.controls.reset()}deactivate(){this.stopTraining(),this.removeCars()}removeCars(){this.population.forEach(t=>{this.gameWorld.removeGameObject(t.car)})}resetCars(){this.population.forEach(t=>{this.gameWorld.removeGameObject(t.car),t.car.dispose();const e=new Ch(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,WT,GT,5,.25,.1);e.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(e),t.car=e,t.fitness=0})}generateAgent(){const t=new Ch(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,WT,GT,5,.25,.1);t.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(t);const e=ak({layers:[Yp({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"tanh"}),Yp({units:Wft,activation:"softmax"})]});return e.compile({optimizer:"adam",loss:"binaryCrossentropy"}),e.weights.forEach(n=>{const i=mv(n.shape);n.val.assign(i),i.dispose()}),{car:t,model:e,fitness:0}}rerenderTrainPanel(){window.rerenderTrainPanel()}}function HT(s,t,e){const n=s.slice();return n[7]=t[e],n[9]=e,n}function qT(s){let t,e=s[7]+"",n,i,r,o,a;function l(){return s[5](s[9])}return{c(){t=Dt("button"),n=fe(e),i=Jt(),st(t,"type","button"),st(t,"class",r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")},m(c,u){It(c,t,u),Et(t,n),Et(t,i),o||(a=xe(t,"click",l),o=!0)},p(c,u){s=c,u&1&&r!==(r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")&&st(t,"class",r)},d(c){c&&Tt(t),o=!1,a()}}}function Hft(s){let t,e,n,i,r,o=s[1],a=[];for(let u=0;u<o.length;u+=1)a[u]=qT(HT(s,o,u));var l=s[2][s[0]];function c(u){return{props:{mode:u[3][u[0]]}}}return l&&(i=d1(l,c(s))),{c(){t=Dt("div");for(let u=0;u<a.length;u+=1)a[u].c();e=Jt(),n=Dt("div"),i&&Fs(i.$$.fragment),st(t,"class","sticky top-0 z-50 inline-flex rounded-md shadow-sm w-full"),st(t,"role","group"),st(n,"class","p-4")},m(u,h){It(u,t,h);for(let d=0;d<a.length;d+=1)a[d].m(t,null);It(u,e,h),It(u,n,h),i&&Ss(i,n,null),r=!0},p(u,[h]){if(h&19){o=u[1];let f;for(f=0;f<o.length;f+=1){const p=HT(u,o,f);a[f]?a[f].p(p,h):(a[f]=qT(p),a[f].c(),a[f].m(t,null))}for(;f<a.length;f+=1)a[f].d(1);a.length=o.length}const d={};if(h&1&&(d.mode=u[3][u[0]]),l!==(l=u[2][u[0]])){if(i){Ho();const f=i;De(f.$$.fragment,1,0,()=>{Cs(f,1)}),qo()}l?(i=d1(l,c(u)),Fs(i.$$.fragment),Te(i.$$.fragment,1),Ss(i,n,null)):i=null}else l&&i.$set(d)},i(u){r||(i&&Te(i.$$.fragment,u),r=!0)},o(u){i&&De(i.$$.fragment,u),r=!1},d(u){u&&Tt(t),QT(a,u),u&&Tt(e),u&&Tt(n),i&&Cs(i)}}}const qft=2;function jft(s,t,e){const n=["Draw","Play","Train","Teach"],i=[Qht,ldt,Rft,Bft],r=[];let o=-1,a;RR.subscribe(u=>{u&&(a=u,r.push(new Uft(a)),r.push(new jR(a)),r.push(new Gft(a)),r.push(new Pft(a)),l(qft))});function l(u){o!==u&&(o!==-1&&r[o].deactivate(),e(0,o=u),r[o].activate(),a.requestCallbackBeforeRender(r[o].update.bind(r[o])))}return[o,n,i,r,l,u=>l(u)]}class Xft extends si{constructor(t){super(),ni(this,t,jft,Hft,Yn,{})}}function Kft(s){let t,e,n,i,r,o,a,l,c;return r=new Yht({}),l=new Xft({}),{c(){t=Dt("main"),e=Dt("div"),n=Dt("div"),i=Jt(),Fs(r.$$.fragment),o=Jt(),a=Dt("div"),Fs(l.$$.fragment),st(n,"id","debug-element"),st(n,"class","fixed top-0 left-0 p-2 pointer-events-none font-mono"),st(e,"id","canvas-pane"),st(e,"class","svelte-k4hl9j"),st(a,"id","menu-pane"),st(a,"class","overflow-x-hidden overflow-y-auto p-0 m-0 svelte-k4hl9j"),st(t,"class","svelte-k4hl9j")},m(u,h){It(u,t,h),Et(t,e),Et(e,n),Et(e,i),Ss(r,e,null),Et(t,o),Et(t,a),Ss(l,a,null),c=!0},p:qe,i(u){c||(Te(r.$$.fragment,u),Te(l.$$.fragment,u),c=!0)},o(u){De(r.$$.fragment,u),De(l.$$.fragment,u),c=!1},d(u){u&&Tt(t),Cs(r),Cs(l)}}}class Yft extends si{constructor(t){super(),ni(this,t,null,Kft,Yn,{})}}new Yft({target:document.getElementById("app")});
