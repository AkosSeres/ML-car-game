var uN=Object.defineProperty;var hN=(s,t,e)=>t in s?uN(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var Qt=(s,t,e)=>(hN(s,typeof t!="symbol"?t+"":t,e),e);function dN(s,t){for(var e=0;e<t.length;e++){const n=t[e];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in s)){const r=Object.getOwnPropertyDescriptor(n,i);r&&Object.defineProperty(s,i,r.get?r:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();function an(){}function vC(s){return s()}function nw(){return Object.create(null)}function Kr(s){s.forEach(vC)}function wC(s){return typeof s=="function"}function gi(s,t){return s!=s?t==t:s!==t||s&&typeof s=="object"||typeof s=="function"}function fN(s){return Object.keys(s).length===0}function Ot(s,t){s.appendChild(t)}function Kt(s,t,e){s.insertBefore(t,e||null)}function Ht(s){s.parentNode.removeChild(s)}function SC(s,t){for(let e=0;e<s.length;e+=1)s[e]&&s[e].d(t)}function qt(s){return document.createElement(s)}function We(s){return document.createTextNode(s)}function he(){return We(" ")}function P0(){return We("")}function Un(s,t,e,n){return s.addEventListener(t,e,n),()=>s.removeEventListener(t,e,n)}function vt(s,t,e){e==null?s.removeAttribute(t):s.getAttribute(t)!==e&&s.setAttribute(t,e)}function Vr(s){return s===""?null:+s}function pN(s){return Array.from(s.childNodes)}function Es(s,t){t=""+t,s.wholeText!==t&&(s.data=t)}function ei(s,t){s.value=t==null?"":t}function So(s,t,e,n){e===null?s.style.removeProperty(t):s.style.setProperty(t,e,n?"important":"")}function sw(s,t){return new s(t)}let wu;function fu(s){wu=s}function mN(){if(!wu)throw new Error("Function called outside component initialization");return wu}function gN(s){mN().$$.on_mount.push(s)}const nu=[],Ix=[],Sf=[],iw=[],xN=Promise.resolve();let Ex=!1;function yN(){Ex||(Ex=!0,xN.then(_C))}function Mx(s){Sf.push(s)}const hg=new Set;let yd=0;function _C(){const s=wu;do{for(;yd<nu.length;){const t=nu[yd];yd++,fu(t),bN(t.$$)}for(fu(null),nu.length=0,yd=0;Ix.length;)Ix.pop()();for(let t=0;t<Sf.length;t+=1){const e=Sf[t];hg.has(e)||(hg.add(e),e())}Sf.length=0}while(nu.length);for(;iw.length;)iw.pop()();Ex=!1,hg.clear(),fu(s)}function bN(s){if(s.fragment!==null){s.update(),Kr(s.before_update);const t=s.dirty;s.dirty=[-1],s.fragment&&s.fragment.p(s.ctx,t),s.after_update.forEach(Mx)}}const _f=new Set;let oa;function CC(){oa={r:0,c:[],p:oa}}function TC(){oa.r||Kr(oa.c),oa=oa.p}function Bs(s,t){s&&s.i&&(_f.delete(s),s.i(t))}function di(s,t,e,n){if(s&&s.o){if(_f.has(s))return;_f.add(s),oa.c.push(()=>{_f.delete(s),n&&(e&&s.d(1),n())}),s.o(t)}else n&&n()}function hr(s){s&&s.c()}function Fi(s,t,e,n){const{fragment:i,after_update:r}=s.$$;i&&i.m(t,e),n||Mx(()=>{const o=s.$$.on_mount.map(vC).filter(wC);s.$$.on_destroy?s.$$.on_destroy.push(...o):Kr(o),s.$$.on_mount=[]}),r.forEach(Mx)}function Li(s,t){const e=s.$$;e.fragment!==null&&(Kr(e.on_destroy),e.fragment&&e.fragment.d(t),e.on_destroy=e.fragment=null,e.ctx=[])}function vN(s,t){s.$$.dirty[0]===-1&&(nu.push(s),yN(),s.$$.dirty.fill(0)),s.$$.dirty[t/31|0]|=1<<t%31}function wr(s,t,e,n,i,r,o,a=[-1]){const l=wu;fu(s);const c=s.$$={fragment:null,ctx:[],props:r,update:an,not_equal:i,bound:nw(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(l?l.$$.context:[])),callbacks:nw(),dirty:a,skip_bound:!1,root:t.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=e?e(s,t.props||{},(h,d,...f)=>{const p=f.length?f[0]:d;return c.ctx&&i(c.ctx[h],c.ctx[h]=p)&&(!c.skip_bound&&c.bound[h]&&c.bound[h](p),u&&vN(s,h)),d}):[],c.update(),u=!0,Kr(c.before_update),c.fragment=n?n(c.ctx):!1,t.target){if(t.hydrate){const h=pN(t.target);c.fragment&&c.fragment.l(h),h.forEach(Ht)}else c.fragment&&c.fragment.c();t.intro&&Bs(s.$$.fragment),Fi(s,t.target,t.anchor,t.customElement),_C()}fu(l)}class Sr{$destroy(){Li(this,1),this.$destroy=an}$on(t,e){if(!wC(e))return an;const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const i=n.indexOf(e);i!==-1&&n.splice(i,1)}}$set(t){this.$$set&&!fN(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const O0="146",ll={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},cl={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},wN=0,rw=1,SN=2,IC=1,EC=2,su=3,_o=0,Us=1,Cs=2,po=0,Gl=1,ow=2,aw=3,lw=4,_N=5,$l=100,CN=101,TN=102,cw=103,uw=104,IN=200,EN=201,MN=202,AN=203,MC=204,AC=205,kN=206,NN=207,RN=208,$N=209,DN=210,FN=0,LN=1,PN=2,Ax=3,ON=4,zN=5,BN=6,UN=7,yp=0,VN=1,WN=2,Wr=0,GN=1,HN=2,qN=3,XN=4,jN=5,kC=300,Ql=301,tc=302,kx=303,Nx=304,bp=306,Rx=1e3,Ni=1001,$x=1002,ws=1003,hw=1004,dw=1005,ni=1006,KN=1007,vp=1008,wa=1009,YN=1010,ZN=1011,NC=1012,JN=1013,aa=1014,la=1015,Su=1016,QN=1017,tR=1018,Hl=1020,eR=1021,nR=1022,Ri=1023,sR=1024,iR=1025,ma=1026,ec=1027,rR=1028,oR=1029,aR=1030,lR=1031,cR=1033,dg=33776,fg=33777,pg=33778,mg=33779,fw=35840,pw=35841,mw=35842,gw=35843,uR=36196,xw=37492,yw=37496,bw=37808,vw=37809,ww=37810,Sw=37811,_w=37812,Cw=37813,Tw=37814,Iw=37815,Ew=37816,Mw=37817,Aw=37818,kw=37819,Nw=37820,Rw=37821,$w=36492,Sa=3e3,un=3001,hR=3200,dR=3201,wp=0,fR=1,Pr="srgb",ca="srgb-linear",gg=7680,pR=519,Dw=35044,Fw="300 es",Dx=1035;class Va{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const ss=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],xg=Math.PI/180,Lw=180/Math.PI;function wc(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ss[s&255]+ss[s>>8&255]+ss[s>>16&255]+ss[s>>24&255]+"-"+ss[t&255]+ss[t>>8&255]+"-"+ss[t>>16&15|64]+ss[t>>24&255]+"-"+ss[e&63|128]+ss[e>>8&255]+"-"+ss[e>>16&255]+ss[e>>24&255]+ss[n&255]+ss[n>>8&255]+ss[n>>16&255]+ss[n>>24&255]).toLowerCase()}function Yn(s,t,e){return Math.max(t,Math.min(e,s))}function mR(s,t){return(s%t+t)%t}function yg(s,t,e){return(1-e)*s+e*t}function Pw(s){return(s&s-1)===0&&s!==0}function Fx(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function bd(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Fs(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class Tt{constructor(t=0,e=0){Tt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class oi{constructor(){oi.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=r,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],x=i[6],y=i[1],v=i[4],b=i[7],w=i[2],_=i[5],C=i[8];return r[0]=o*g+a*y+l*w,r[3]=o*m+a*v+l*_,r[6]=o*x+a*b+l*C,r[1]=c*g+u*y+h*w,r[4]=c*m+u*v+h*_,r[7]=c*x+u*b+h*C,r[2]=d*g+f*y+p*w,r[5]=d*m+f*v+p*_,r[8]=d*x+f*b+p*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*r*u+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*r,f=c*r-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return t[0]=h*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=d*g,t[4]=(u*e-i*l)*g,t[5]=(i*r-a*e)*g,t[6]=f*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=e*r+n*l,i[3]=e*o+n*c,i[6]=e*a+n*u,i[1]=-n*r+e*l,i[4]=-n*o+e*c,i[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function RC(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Df(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function ga(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Cf(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const bg={[Pr]:{[ca]:ga},[ca]:{[Pr]:Cf}},Si={legacyMode:!0,get workingColorSpace(){return ca},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.legacyMode||t===e||!t||!e)return s;if(bg[t]&&bg[t][e]!==void 0){const n=bg[t][e];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}},$C={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mn={r:0,g:0,b:0},_i={h:0,s:0,l:0},vd={h:0,s:0,l:0};function vg(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function wd(s,t){return t.r=s.r,t.g=s.g,t.b=s.b,t}class Pe{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Pr){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Si.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=ca){return this.r=t,this.g=e,this.b=n,Si.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=ca){if(t=mR(t,1),e=Yn(e,0,1),n=Yn(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=vg(o,r,t+1/3),this.g=vg(o,r,t),this.b=vg(o,r,t-1/3)}return Si.toWorkingColorSpace(this,i),this}setStyle(t,e=Pr){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Si.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Si.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,u,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Si.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Si.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=Pr){const n=$C[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ga(t.r),this.g=ga(t.g),this.b=ga(t.b),this}copyLinearToSRGB(t){return this.r=Cf(t.r),this.g=Cf(t.g),this.b=Cf(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Pr){return Si.fromWorkingColorSpace(wd(this,Mn),t),Yn(Mn.r*255,0,255)<<16^Yn(Mn.g*255,0,255)<<8^Yn(Mn.b*255,0,255)<<0}getHexString(t=Pr){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ca){Si.fromWorkingColorSpace(wd(this,Mn),e);const n=Mn.r,i=Mn.g,r=Mn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=ca){return Si.fromWorkingColorSpace(wd(this,Mn),e),t.r=Mn.r,t.g=Mn.g,t.b=Mn.b,t}getStyle(t=Pr){return Si.fromWorkingColorSpace(wd(this,Mn),t),t!==Pr?`color(${t} ${Mn.r} ${Mn.g} ${Mn.b})`:`rgb(${Mn.r*255|0},${Mn.g*255|0},${Mn.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(_i),_i.h+=t,_i.s+=e,_i.l+=n,this.setHSL(_i.h,_i.s,_i.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(_i),t.getHSL(vd);const n=yg(_i.h,vd.h,e),i=yg(_i.s,vd.s,e),r=yg(_i.l,vd.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Pe.NAMES=$C;let ul;class DC{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{ul===void 0&&(ul=Df("canvas")),ul.width=t.width,ul.height=t.height;const n=ul.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=ul}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Df("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=ga(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(ga(e[n]/255)*255):e[n]=ga(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class FC{constructor(t=null){this.isSource=!0,this.uuid=wc(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(wg(i[o].image)):r.push(wg(i[o]))}else r=wg(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function wg(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?DC.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let gR=0;class Bi extends Va{constructor(t=Bi.DEFAULT_IMAGE,e=Bi.DEFAULT_MAPPING,n=Ni,i=Ni,r=ni,o=vp,a=Ri,l=wa,c=1,u=Sa){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:gR++}),this.uuid=wc(),this.name="",this.source=new FC(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Tt(0,0),this.repeat=new Tt(1,1),this.center=new Tt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new oi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==kC)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Rx:t.x=t.x-Math.floor(t.x);break;case Ni:t.x=t.x<0?0:1;break;case $x:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Rx:t.y=t.y-Math.floor(t.y);break;case Ni:t.y=t.y<0?0:1;break;case $x:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Bi.DEFAULT_IMAGE=null;Bi.DEFAULT_MAPPING=kC;class Wn{constructor(t=0,e=0,n=0,i=1){Wn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+x-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(c+1)/2,b=(f+1)/2,w=(x+1)/2,_=(u+d)/4,C=(h+g)/4,S=(p+m)/4;return v>b&&v>w?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=_/n,r=C/n):b>w?b<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(b),n=_/i,r=S/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=C/r,i=S/r),this.set(n,i,r,e),this}let y=Math.sqrt((m-p)*(m-p)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(h-g)/y,this.z=(d-u)/y,this.w=Math.acos((c+f+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _a extends Va{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Wn(0,0,t,e),this.scissorTest=!1,this.viewport=new Wn(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new Bi(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ni,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new FC(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class LC extends Bi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ws,this.minFilter=ws,this.wrapR=Ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class xR extends Bi{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ws,this.minFilter=ws,this.wrapR=Ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ca{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],g=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=g;return}if(h!==g||l!==d||c!==f||u!==p){let m=1-a;const x=l*d+c*f+u*p+h*g,y=x>=0?1:-1,v=1-x*x;if(v>Number.EPSILON){const w=Math.sqrt(v),_=Math.atan2(w,x*y);m=Math.sin(m*_)/w,a=Math.sin(a*_)/w}const b=a*y;if(l=l*m+d*b,c=c*m+f*b,u=u*m+p*b,h=h*m+g*b,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Yn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-n*c,this._z=r*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class W{constructor(t=0,e=0,n=0){W.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ow.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ow.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-r*i,h=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+u*-a-h*-o,this.y=u*l+d*-o+h*-r-c*-a,this.z=h*l+d*-a+c*-o-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Sg.copy(this).projectOnVector(t),this.sub(Sg)}reflect(t){return this.sub(Sg.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Yn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Sg=new W,Ow=new Ca;class Hi{constructor(t=new W(1/0,1/0,1/0),e=new W(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],h=t[l+1],d=t[l+2];u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),h=t.getY(l),d=t.getZ(l);u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ho.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)Ho.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Ho)}else n.boundingBox===null&&n.computeBoundingBox(),_g.copy(n.boundingBox),_g.applyMatrix4(t.matrixWorld),this.union(_g);const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ho),Ho.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Vc),Sd.subVectors(this.max,Vc),hl.subVectors(t.a,Vc),dl.subVectors(t.b,Vc),fl.subVectors(t.c,Vc),eo.subVectors(dl,hl),no.subVectors(fl,dl),qo.subVectors(hl,fl);let e=[0,-eo.z,eo.y,0,-no.z,no.y,0,-qo.z,qo.y,eo.z,0,-eo.x,no.z,0,-no.x,qo.z,0,-qo.x,-eo.y,eo.x,0,-no.y,no.x,0,-qo.y,qo.x,0];return!Cg(e,hl,dl,fl,Sd)||(e=[1,0,0,0,1,0,0,0,1],!Cg(e,hl,dl,fl,Sd))?!1:(_d.crossVectors(eo,no),e=[_d.x,_d.y,_d.z],Cg(e,hl,dl,fl,Sd))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ho.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Ho).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Tr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Tr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Tr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Tr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Tr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Tr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Tr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Tr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Tr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Tr=[new W,new W,new W,new W,new W,new W,new W,new W],Ho=new W,_g=new Hi,hl=new W,dl=new W,fl=new W,eo=new W,no=new W,qo=new W,Vc=new W,Sd=new W,_d=new W,Xo=new W;function Cg(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Xo.fromArray(s,r);const a=i.x*Math.abs(Xo.x)+i.y*Math.abs(Xo.y)+i.z*Math.abs(Xo.z),l=t.dot(Xo),c=e.dot(Xo),u=n.dot(Xo);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const yR=new Hi,Wc=new W,Tg=new W;class Gu{constructor(t=new W,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):yR.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Wc.subVectors(t,this.center);const e=Wc.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Wc,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Tg.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Wc.copy(t.center).add(Tg)),this.expandByPoint(Wc.copy(t.center).sub(Tg))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ir=new W,Ig=new W,Cd=new W,so=new W,Eg=new W,Td=new W,Mg=new W;class Sp{constructor(t=new W,e=new W(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ir)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ir.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ir.copy(this.direction).multiplyScalar(e).add(this.origin),Ir.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Ig.copy(t).add(e).multiplyScalar(.5),Cd.copy(e).sub(t).normalize(),so.copy(this.origin).sub(Ig);const r=t.distanceTo(e)*.5,o=-this.direction.dot(Cd),a=so.dot(this.direction),l=-so.dot(Cd),c=so.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=r*u,h>=0)if(d>=-p)if(d<=p){const g=1/u;h*=g,d*=g,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Cd).multiplyScalar(d).add(Ig),f}intersectSphere(t,e){Ir.subVectors(t.center,this.origin);const n=Ir.dot(this.direction),i=Ir.dot(Ir)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),u>=0?(r=(t.min.y-d.y)*u,o=(t.max.y-d.y)*u):(r=(t.max.y-d.y)*u,o=(t.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-d.z)*h,l=(t.max.z-d.z)*h):(a=(t.max.z-d.z)*h,l=(t.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ir)!==null}intersectTriangle(t,e,n,i,r){Eg.subVectors(e,t),Td.subVectors(n,t),Mg.crossVectors(Eg,Td);let o=this.direction.dot(Mg),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;so.subVectors(this.origin,t);const l=a*this.direction.dot(Td.crossVectors(so,Td));if(l<0)return null;const c=a*this.direction.dot(Eg.cross(so));if(c<0||l+c>o)return null;const u=-a*so.dot(Mg);return u<0?null:this.at(u/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class je{constructor(){je.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m){const x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=o,x[9]=a,x[13]=l,x[2]=c,x[6]=u,x[10]=h,x[14]=d,x[3]=f,x[7]=p,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new je().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/pl.setFromMatrixColumn(t,0).length(),r=1/pl.setFromMatrixColumn(t,1).length(),o=1/pl.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-g*c,e[9]=-a*l,e[2]=g-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d+g*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=g+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d-g*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=g-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+g,e[1]=l*h,e[5]=g*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=g-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-g*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+g,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=g*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(bR,t,vR)}lookAt(t,e,n){const i=this.elements;return Ls.subVectors(t,e),Ls.lengthSq()===0&&(Ls.z=1),Ls.normalize(),io.crossVectors(n,Ls),io.lengthSq()===0&&(Math.abs(n.z)===1?Ls.x+=1e-4:Ls.z+=1e-4,Ls.normalize(),io.crossVectors(n,Ls)),io.normalize(),Id.crossVectors(Ls,io),i[0]=io.x,i[4]=Id.x,i[8]=Ls.x,i[1]=io.y,i[5]=Id.y,i[9]=Ls.y,i[2]=io.z,i[6]=Id.z,i[10]=Ls.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],x=n[14],y=n[3],v=n[7],b=n[11],w=n[15],_=i[0],C=i[4],S=i[8],T=i[12],I=i[1],M=i[5],$=i[9],E=i[13],A=i[2],k=i[6],R=i[10],B=i[14],L=i[3],D=i[7],V=i[11],q=i[15];return r[0]=o*_+a*I+l*A+c*L,r[4]=o*C+a*M+l*k+c*D,r[8]=o*S+a*$+l*R+c*V,r[12]=o*T+a*E+l*B+c*q,r[1]=u*_+h*I+d*A+f*L,r[5]=u*C+h*M+d*k+f*D,r[9]=u*S+h*$+d*R+f*V,r[13]=u*T+h*E+d*B+f*q,r[2]=p*_+g*I+m*A+x*L,r[6]=p*C+g*M+m*k+x*D,r[10]=p*S+g*$+m*R+x*V,r[14]=p*T+g*E+m*B+x*q,r[3]=y*_+v*I+b*A+w*L,r[7]=y*C+v*M+b*k+w*D,r[11]=y*S+v*$+b*R+w*V,r[15]=y*T+v*E+b*B+w*q,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],g=t[7],m=t[11],x=t[15];return p*(+r*l*h-i*c*h-r*a*d+n*c*d+i*a*f-n*l*f)+g*(+e*l*f-e*c*d+r*o*d-i*o*f+i*c*u-r*l*u)+m*(+e*c*h-e*a*f-r*o*h+n*o*f+r*a*u-n*c*u)+x*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],g=t[13],m=t[14],x=t[15],y=h*m*c-g*d*c+g*l*f-a*m*f-h*l*x+a*d*x,v=p*d*c-u*m*c-p*l*f+o*m*f+u*l*x-o*d*x,b=u*g*c-p*h*c+p*a*f-o*g*f-u*a*x+o*h*x,w=p*h*l-u*g*l-p*a*d+o*g*d+u*a*m-o*h*m,_=e*y+n*v+i*b+r*w;if(_===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/_;return t[0]=y*C,t[1]=(g*d*r-h*m*r-g*i*f+n*m*f+h*i*x-n*d*x)*C,t[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*x+n*l*x)*C,t[3]=(h*l*r-a*d*r-h*i*c+n*d*c+a*i*f-n*l*f)*C,t[4]=v*C,t[5]=(u*m*r-p*d*r+p*i*f-e*m*f-u*i*x+e*d*x)*C,t[6]=(p*l*r-o*m*r-p*i*c+e*m*c+o*i*x-e*l*x)*C,t[7]=(o*d*r-u*l*r+u*i*c-e*d*c-o*i*f+e*l*f)*C,t[8]=b*C,t[9]=(p*h*r-u*g*r-p*n*f+e*g*f+u*n*x-e*h*x)*C,t[10]=(o*g*r-p*a*r+p*n*c-e*g*c-o*n*x+e*a*x)*C,t[11]=(u*a*r-o*h*r-u*n*c+e*h*c+o*n*f-e*a*f)*C,t[12]=w*C,t[13]=(u*g*i-p*h*i+p*n*d-e*g*d-u*n*m+e*h*m)*C,t[14]=(p*a*i-o*g*i-p*n*l+e*g*l+o*n*m-e*a*m)*C,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*C,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,u=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,u=o+o,h=a+a,d=r*c,f=r*u,p=r*h,g=o*u,m=o*h,x=a*h,y=l*c,v=l*u,b=l*h,w=n.x,_=n.y,C=n.z;return i[0]=(1-(g+x))*w,i[1]=(f+b)*w,i[2]=(p-v)*w,i[3]=0,i[4]=(f-b)*_,i[5]=(1-(d+x))*_,i[6]=(m+y)*_,i[7]=0,i[8]=(p+v)*C,i[9]=(m-y)*C,i[10]=(1-(d+g))*C,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=pl.set(i[0],i[1],i[2]).length();const o=pl.set(i[4],i[5],i[6]).length(),a=pl.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Ci.copy(this);const c=1/r,u=1/o,h=1/a;return Ci.elements[0]*=c,Ci.elements[1]*=c,Ci.elements[2]*=c,Ci.elements[4]*=u,Ci.elements[5]*=u,Ci.elements[6]*=u,Ci.elements[8]*=h,Ci.elements[9]*=h,Ci.elements[10]*=h,e.setFromRotationMatrix(Ci),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-i),u=(e+t)/(e-t),h=(n+i)/(n-i),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,o){const a=this.elements,l=1/(e-t),c=1/(n-i),u=1/(o-r),h=(e+t)*l,d=(n+i)*c,f=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const pl=new W,Ci=new je,bR=new W(0,0,0),vR=new W(1,1,1),io=new W,Id=new W,Ls=new W,zw=new je,Bw=new Ca;class Hu{constructor(t=0,e=0,n=0,i=Hu.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(Yn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Yn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Yn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Yn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Yn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Yn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return zw.makeRotationFromQuaternion(t),this.setFromRotationMatrix(zw,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Bw.setFromEuler(this),this.setFromQuaternion(Bw,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Hu.DefaultOrder="XYZ";Hu.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class z0{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let wR=0;const Uw=new W,ml=new Ca,Er=new je,Ed=new W,Gc=new W,SR=new W,_R=new Ca,Vw=new W(1,0,0),Ww=new W(0,1,0),Gw=new W(0,0,1),CR={type:"added"},Hw={type:"removed"};class Gn extends Va{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:wR++}),this.uuid=wc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Gn.DefaultUp.clone();const t=new W,e=new Hu,n=new Ca,i=new W(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new je},normalMatrix:{value:new oi}}),this.matrix=new je,this.matrixWorld=new je,this.matrixAutoUpdate=Gn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Gn.DefaultMatrixWorldAutoUpdate,this.layers=new z0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ml.setFromAxisAngle(t,e),this.quaternion.multiply(ml),this}rotateOnWorldAxis(t,e){return ml.setFromAxisAngle(t,e),this.quaternion.premultiply(ml),this}rotateX(t){return this.rotateOnAxis(Vw,t)}rotateY(t){return this.rotateOnAxis(Ww,t)}rotateZ(t){return this.rotateOnAxis(Gw,t)}translateOnAxis(t,e){return Uw.copy(t).applyQuaternion(this.quaternion),this.position.add(Uw.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Vw,t)}translateY(t){return this.translateOnAxis(Ww,t)}translateZ(t){return this.translateOnAxis(Gw,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Er.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Ed.copy(t):Ed.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Gc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Er.lookAt(Gc,Ed,this.up):Er.lookAt(Ed,Gc,this.up),this.quaternion.setFromRotationMatrix(Er),i&&(Er.extractRotation(i.matrixWorld),ml.setFromRotationMatrix(Er),this.quaternion.premultiply(ml.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(CR)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Hw)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Hw)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Er.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Er.multiply(t.parent.matrixWorld)),t.applyMatrix4(Er),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gc,t,SR),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gc,_R,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(t.shapes,h)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Gn.DefaultUp=new W(0,1,0);Gn.DefaultMatrixAutoUpdate=!0;Gn.DefaultMatrixWorldAutoUpdate=!0;const Ti=new W,Mr=new W,Ag=new W,Ar=new W,gl=new W,xl=new W,qw=new W,kg=new W,Ng=new W,Rg=new W;class ii{constructor(t=new W,e=new W,n=new W){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Ti.subVectors(t,e),i.cross(Ti);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ti.subVectors(i,e),Mr.subVectors(n,e),Ag.subVectors(t,e);const o=Ti.dot(Ti),a=Ti.dot(Mr),l=Ti.dot(Ag),c=Mr.dot(Mr),u=Mr.dot(Ag),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Ar),Ar.x>=0&&Ar.y>=0&&Ar.x+Ar.y<=1}static getUV(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,Ar),l.set(0,0),l.addScaledVector(r,Ar.x),l.addScaledVector(o,Ar.y),l.addScaledVector(a,Ar.z),l}static isFrontFacing(t,e,n,i){return Ti.subVectors(n,e),Mr.subVectors(t,e),Ti.cross(Mr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ti.subVectors(this.c,this.b),Mr.subVectors(this.a,this.b),Ti.cross(Mr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ii.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ii.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return ii.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return ii.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ii.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;gl.subVectors(i,n),xl.subVectors(r,n),kg.subVectors(t,n);const l=gl.dot(kg),c=xl.dot(kg);if(l<=0&&c<=0)return e.copy(n);Ng.subVectors(t,i);const u=gl.dot(Ng),h=xl.dot(Ng);if(u>=0&&h<=u)return e.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(gl,o);Rg.subVectors(t,r);const f=gl.dot(Rg),p=xl.dot(Rg);if(p>=0&&f<=p)return e.copy(r);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),e.copy(n).addScaledVector(xl,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return qw.subVectors(r,i),a=(h-u)/(h-u+(f-p)),e.copy(i).addScaledVector(qw,a);const x=1/(m+g+d);return o=g*x,a=d*x,e.copy(n).addScaledVector(gl,o).addScaledVector(xl,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let TR=0;class ko extends Va{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:TR++}),this.uuid=wc(),this.name="",this.type="Material",this.blending=Gl,this.side=_o,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=MC,this.blendDst=AC,this.blendEquation=$l,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ax,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pR,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=gg,this.stencilZFail=gg,this.stencilZPass=gg,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Gl&&(n.blending=this.blending),this.side!==_o&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Wa extends ko{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=yp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const wn=new W,Md=new Tt;class Vs{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Dw,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Md.fromBufferAttribute(this,e),Md.applyMatrix3(t),this.setXY(e,Md.x,Md.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyMatrix3(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyMatrix4(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyNormalMatrix(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.transformDirection(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=bd(e,this.array)),e}setX(t,e){return this.normalized&&(e=Fs(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=bd(e,this.array)),e}setY(t,e){return this.normalized&&(e=Fs(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=bd(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Fs(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=bd(e,this.array)),e}setW(t,e){return this.normalized&&(e=Fs(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Fs(e,this.array),n=Fs(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Fs(e,this.array),n=Fs(n,this.array),i=Fs(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=Fs(e,this.array),n=Fs(n,this.array),i=Fs(i,this.array),r=Fs(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Dw&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class PC extends Vs{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class OC extends Vs{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class ln extends Vs{constructor(t,e,n){super(new Float32Array(t),e,n)}}let IR=0;const Ys=new je,$g=new Gn,yl=new W,Ps=new Hi,Hc=new Hi,Bn=new W;class ts extends Va{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:IR++}),this.uuid=wc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(RC(t)?OC:PC)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new oi().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ys.makeRotationFromQuaternion(t),this.applyMatrix4(Ys),this}rotateX(t){return Ys.makeRotationX(t),this.applyMatrix4(Ys),this}rotateY(t){return Ys.makeRotationY(t),this.applyMatrix4(Ys),this}rotateZ(t){return Ys.makeRotationZ(t),this.applyMatrix4(Ys),this}translate(t,e,n){return Ys.makeTranslation(t,e,n),this.applyMatrix4(Ys),this}scale(t,e,n){return Ys.makeScale(t,e,n),this.applyMatrix4(Ys),this}lookAt(t){return $g.lookAt(t),$g.updateMatrix(),this.applyMatrix4($g.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(yl).negate(),this.translate(yl.x,yl.y,yl.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ln(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Hi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new W(-1/0,-1/0,-1/0),new W(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Ps.setFromBufferAttribute(r),this.morphTargetsRelative?(Bn.addVectors(this.boundingBox.min,Ps.min),this.boundingBox.expandByPoint(Bn),Bn.addVectors(this.boundingBox.max,Ps.max),this.boundingBox.expandByPoint(Bn)):(this.boundingBox.expandByPoint(Ps.min),this.boundingBox.expandByPoint(Ps.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Gu);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new W,1/0);return}if(t){const n=this.boundingSphere.center;if(Ps.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];Hc.setFromBufferAttribute(a),this.morphTargetsRelative?(Bn.addVectors(Ps.min,Hc.min),Ps.expandByPoint(Bn),Bn.addVectors(Ps.max,Hc.max),Ps.expandByPoint(Bn)):(Ps.expandByPoint(Hc.min),Ps.expandByPoint(Hc.max))}Ps.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Bn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Bn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Bn.fromBufferAttribute(a,c),l&&(yl.fromBufferAttribute(t,c),Bn.add(yl)),i=Math.max(i,n.distanceToSquared(Bn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Vs(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let I=0;I<a;I++)c[I]=new W,u[I]=new W;const h=new W,d=new W,f=new W,p=new Tt,g=new Tt,m=new Tt,x=new W,y=new W;function v(I,M,$){h.fromArray(i,I*3),d.fromArray(i,M*3),f.fromArray(i,$*3),p.fromArray(o,I*2),g.fromArray(o,M*2),m.fromArray(o,$*2),d.sub(h),f.sub(h),g.sub(p),m.sub(p);const E=1/(g.x*m.y-m.x*g.y);!isFinite(E)||(x.copy(d).multiplyScalar(m.y).addScaledVector(f,-g.y).multiplyScalar(E),y.copy(f).multiplyScalar(g.x).addScaledVector(d,-m.x).multiplyScalar(E),c[I].add(x),c[M].add(x),c[$].add(x),u[I].add(y),u[M].add(y),u[$].add(y))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let I=0,M=b.length;I<M;++I){const $=b[I],E=$.start,A=$.count;for(let k=E,R=E+A;k<R;k+=3)v(n[k+0],n[k+1],n[k+2])}const w=new W,_=new W,C=new W,S=new W;function T(I){C.fromArray(r,I*3),S.copy(C);const M=c[I];w.copy(M),w.sub(C.multiplyScalar(C.dot(M))).normalize(),_.crossVectors(S,M);const E=_.dot(u[I])<0?-1:1;l[I*4]=w.x,l[I*4+1]=w.y,l[I*4+2]=w.z,l[I*4+3]=E}for(let I=0,M=b.length;I<M;++I){const $=b[I],E=$.start,A=$.count;for(let k=E,R=E+A;k<R;k+=3)T(n[k+0]),T(n[k+1]),T(n[k+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Vs(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new W,r=new W,o=new W,a=new W,l=new W,c=new W,u=new W,h=new W;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),g=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,g),o.fromBufferAttribute(e,m),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Bn.fromBufferAttribute(t,e),Bn.normalize(),t.setXYZ(e,Bn.x,Bn.y,Bn.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*u;for(let x=0;x<u;x++)d[p++]=c[f++]}return new Vs(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ts,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(t.data))}u.length>0&&(i[l]=u,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const r=t.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Xw=new je,bl=new Sp,Dg=new Gu,ro=new W,oo=new W,ao=new W,Fg=new W,Lg=new W,Pg=new W,Ad=new W,kd=new W,Nd=new W,Rd=new Tt,$d=new Tt,Dd=new Tt,Og=new W,Fd=new W;class Je extends Gn{constructor(t=new ts,e=new Wa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Dg.copy(n.boundingSphere),Dg.applyMatrix4(r),t.ray.intersectsSphere(Dg)===!1)||(Xw.copy(r).invert(),bl.copy(t.ray).applyMatrix4(Xw),n.boundingBox!==null&&bl.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],y=i[x.materialIndex],v=Math.max(x.start,p.start),b=Math.min(a.count,Math.min(x.start+x.count,p.start+p.count));for(let w=v,_=b;w<_;w+=3){const C=a.getX(w),S=a.getX(w+1),T=a.getX(w+2);o=Ld(this,y,t,bl,l,c,u,h,d,C,S,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let x=g,y=m;x<y;x+=3){const v=a.getX(x),b=a.getX(x+1),w=a.getX(x+2);o=Ld(this,i,t,bl,l,c,u,h,d,v,b,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],y=i[x.materialIndex],v=Math.max(x.start,p.start),b=Math.min(l.count,Math.min(x.start+x.count,p.start+p.count));for(let w=v,_=b;w<_;w+=3){const C=w,S=w+1,T=w+2;o=Ld(this,y,t,bl,l,c,u,h,d,C,S,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let x=g,y=m;x<y;x+=3){const v=x,b=x+1,w=x+2;o=Ld(this,i,t,bl,l,c,u,h,d,v,b,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}}}function ER(s,t,e,n,i,r,o,a){let l;if(t.side===Us?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,t.side!==Cs,a),l===null)return null;Fd.copy(a),Fd.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(Fd);return c<e.near||c>e.far?null:{distance:c,point:Fd.clone(),object:s}}function Ld(s,t,e,n,i,r,o,a,l,c,u,h){ro.fromBufferAttribute(i,c),oo.fromBufferAttribute(i,u),ao.fromBufferAttribute(i,h);const d=s.morphTargetInfluences;if(r&&d){Ad.set(0,0,0),kd.set(0,0,0),Nd.set(0,0,0);for(let p=0,g=r.length;p<g;p++){const m=d[p],x=r[p];m!==0&&(Fg.fromBufferAttribute(x,c),Lg.fromBufferAttribute(x,u),Pg.fromBufferAttribute(x,h),o?(Ad.addScaledVector(Fg,m),kd.addScaledVector(Lg,m),Nd.addScaledVector(Pg,m)):(Ad.addScaledVector(Fg.sub(ro),m),kd.addScaledVector(Lg.sub(oo),m),Nd.addScaledVector(Pg.sub(ao),m)))}ro.add(Ad),oo.add(kd),ao.add(Nd)}s.isSkinnedMesh&&(s.boneTransform(c,ro),s.boneTransform(u,oo),s.boneTransform(h,ao));const f=ER(s,t,e,n,ro,oo,ao,Og);if(f){a&&(Rd.fromBufferAttribute(a,c),$d.fromBufferAttribute(a,u),Dd.fromBufferAttribute(a,h),f.uv=ii.getUV(Og,ro,oo,ao,Rd,$d,Dd,new Tt)),l&&(Rd.fromBufferAttribute(l,c),$d.fromBufferAttribute(l,u),Dd.fromBufferAttribute(l,h),f.uv2=ii.getUV(Og,ro,oo,ao,Rd,$d,Dd,new Tt));const p={a:c,b:u,c:h,normal:new W,materialIndex:0};ii.getNormal(ro,oo,ao,p.normal),f.face=p}return f}class Ga extends ts{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new ln(c,3)),this.setAttribute("normal",new ln(u,3)),this.setAttribute("uv",new ln(h,2));function p(g,m,x,y,v,b,w,_,C,S,T){const I=b/C,M=w/S,$=b/2,E=w/2,A=_/2,k=C+1,R=S+1;let B=0,L=0;const D=new W;for(let V=0;V<R;V++){const q=V*M-E;for(let G=0;G<k;G++){const K=G*I-$;D[g]=K*y,D[m]=q*v,D[x]=A,c.push(D.x,D.y,D.z),D[g]=0,D[m]=0,D[x]=_>0?1:-1,u.push(D.x,D.y,D.z),h.push(G/C),h.push(1-V/S),B+=1}}for(let V=0;V<S;V++)for(let q=0;q<C;q++){const G=d+q+k*V,K=d+q+k*(V+1),ot=d+(q+1)+k*(V+1),ht=d+(q+1)+k*V;l.push(G,K,ht),l.push(K,ot,ht),L+=6}a.addGroup(f,L,T),f+=L,d+=B}}static fromJSON(t){return new Ga(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function nc(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function hs(s){const t={};for(let e=0;e<s.length;e++){const n=nc(s[e]);for(const i in n)t[i]=n[i]}return t}function MR(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}const AR={clone:nc,merge:hs};var kR=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,NR=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ta extends ko{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=kR,this.fragmentShader=NR,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=nc(t.uniforms),this.uniformsGroups=MR(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class zC extends Gn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new je,this.projectionMatrix=new je,this.projectionMatrixInverse=new je}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class si extends zC{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Lw*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(xg*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Lw*2*Math.atan(Math.tan(xg*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(xg*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const vl=90,wl=1;class RR extends Gn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new si(vl,wl,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new W(1,0,0)),this.add(i);const r=new si(vl,wl,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new W(-1,0,0)),this.add(r);const o=new si(vl,wl,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new W(0,1,0)),this.add(o);const a=new si(vl,wl,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new W(0,-1,0)),this.add(a);const l=new si(vl,wl,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new W(0,0,1)),this.add(l);const c=new si(vl,wl,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new W(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,u=t.getRenderTarget(),h=t.toneMapping,d=t.xr.enabled;t.toneMapping=Wr,t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.toneMapping=h,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class BC extends Bi{constructor(t,e,n,i,r,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:Ql,super(t,e,n,i,r,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class $R extends _a{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new BC(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:ni}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ga(5,5,5),r=new Ta({name:"CubemapFromEquirect",uniforms:nc(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Us,blending:po});r.uniforms.tEquirect.value=e;const o=new Je(i,r),a=e.minFilter;return e.minFilter===vp&&(e.minFilter=ni),new RR(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const zg=new W,DR=new W,FR=new oi;class Or{constructor(t=new W(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=zg.subVectors(n,e).cross(DR.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(zg),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||FR.getNormalMatrix(t),i=this.coplanarPoint(zg).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Sl=new Gu,Pd=new W;class B0{constructor(t=new Or,e=new Or,n=new Or,i=new Or,r=new Or,o=new Or){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],p=n[10],g=n[11],m=n[12],x=n[13],y=n[14],v=n[15];return e[0].setComponents(a-i,h-l,g-d,v-m).normalize(),e[1].setComponents(a+i,h+l,g+d,v+m).normalize(),e[2].setComponents(a+r,h+c,g+f,v+x).normalize(),e[3].setComponents(a-r,h-c,g-f,v-x).normalize(),e[4].setComponents(a-o,h-u,g-p,v-y).normalize(),e[5].setComponents(a+o,h+u,g+p,v+y).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Sl.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Sl)}intersectsSprite(t){return Sl.center.set(0,0,0),Sl.radius=.7071067811865476,Sl.applyMatrix4(t.matrixWorld),this.intersectsSphere(Sl)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Pd.x=i.normal.x>0?t.max.x:t.min.x,Pd.y=i.normal.y>0?t.max.y:t.min.y,Pd.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Pd)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function UC(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function LR(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,d=c.usage,f=s.createBuffer();s.bindBuffer(u,f),s.bufferData(u,h,d),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,f=u.updateRange;s.bindBuffer(h,c),f.count===-1?s.bufferSubData(h,0,d):(e?s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class _p extends ts{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,d=e/l,f=[],p=[],g=[],m=[];for(let x=0;x<u;x++){const y=x*d-o;for(let v=0;v<c;v++){const b=v*h-r;p.push(b,-y,0),g.push(0,0,1),m.push(v/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let y=0;y<a;y++){const v=y+c*x,b=y+c*(x+1),w=y+1+c*(x+1),_=y+1+c*x;f.push(v,b,_),f.push(b,w,_)}this.setIndex(f),this.setAttribute("position",new ln(p,3)),this.setAttribute("normal",new ln(g,3)),this.setAttribute("uv",new ln(m,2))}static fromJSON(t){return new _p(t.width,t.height,t.widthSegments,t.heightSegments)}}var PR=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,OR=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zR=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,BR=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,UR=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,VR=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,WR="vec3 transformed = vec3( position );",GR=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,HR=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,qR=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,XR=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,jR=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,KR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,YR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,ZR=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,JR=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,QR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,t$=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,e$=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,n$=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,s$=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,i$=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,r$=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,o$=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,a$=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,l$=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,c$="gl_FragColor = linearToOutputTexel( gl_FragColor );",u$=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,h$=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,d$=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,f$=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,p$=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,m$=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,g$=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,x$=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,y$=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,b$=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,v$=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,w$=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,S$=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,_$=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,C$=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,T$=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,I$=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,E$=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,M$=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,A$=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,k$=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,N$=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,R$=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,$$=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,D$=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,F$=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,L$=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,P$=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,O$=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,z$=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,B$=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,U$=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,V$=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,W$=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,G$=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,H$=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,q$=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,X$=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,j$=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,K$=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Y$=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Z$=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,J$=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Q$=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,tD=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,eD=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,nD=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,sD=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,iD=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,rD=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,oD=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,aD=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,lD=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,cD=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,uD=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,hD=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,dD=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,fD=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,pD=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,mD=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,gD=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,xD=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,yD=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,bD=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,vD=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,wD=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,SD=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,_D=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,CD=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,TD=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ID=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,ED=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,MD=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,AD=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,kD=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,ND=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,RD=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,$D=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,DD=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const FD=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,LD=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,PD=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,OD=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zD=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,BD=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,UD=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,VD=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,WD=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,GD=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,HD=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,qD=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,XD=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,jD=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,KD=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,YD=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZD=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,JD=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QD=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,t3=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,e3=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,n3=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,s3=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,i3=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,r3=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,o3=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a3=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,l3=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,c3=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,u3=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,h3=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,d3=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,f3=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,p3=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,be={alphamap_fragment:PR,alphamap_pars_fragment:OR,alphatest_fragment:zR,alphatest_pars_fragment:BR,aomap_fragment:UR,aomap_pars_fragment:VR,begin_vertex:WR,beginnormal_vertex:GR,bsdfs:HR,iridescence_fragment:qR,bumpmap_pars_fragment:XR,clipping_planes_fragment:jR,clipping_planes_pars_fragment:KR,clipping_planes_pars_vertex:YR,clipping_planes_vertex:ZR,color_fragment:JR,color_pars_fragment:QR,color_pars_vertex:t$,color_vertex:e$,common:n$,cube_uv_reflection_fragment:s$,defaultnormal_vertex:i$,displacementmap_pars_vertex:r$,displacementmap_vertex:o$,emissivemap_fragment:a$,emissivemap_pars_fragment:l$,encodings_fragment:c$,encodings_pars_fragment:u$,envmap_fragment:h$,envmap_common_pars_fragment:d$,envmap_pars_fragment:f$,envmap_pars_vertex:p$,envmap_physical_pars_fragment:I$,envmap_vertex:m$,fog_vertex:g$,fog_pars_vertex:x$,fog_fragment:y$,fog_pars_fragment:b$,gradientmap_pars_fragment:v$,lightmap_fragment:w$,lightmap_pars_fragment:S$,lights_lambert_fragment:_$,lights_lambert_pars_fragment:C$,lights_pars_begin:T$,lights_toon_fragment:E$,lights_toon_pars_fragment:M$,lights_phong_fragment:A$,lights_phong_pars_fragment:k$,lights_physical_fragment:N$,lights_physical_pars_fragment:R$,lights_fragment_begin:$$,lights_fragment_maps:D$,lights_fragment_end:F$,logdepthbuf_fragment:L$,logdepthbuf_pars_fragment:P$,logdepthbuf_pars_vertex:O$,logdepthbuf_vertex:z$,map_fragment:B$,map_pars_fragment:U$,map_particle_fragment:V$,map_particle_pars_fragment:W$,metalnessmap_fragment:G$,metalnessmap_pars_fragment:H$,morphcolor_vertex:q$,morphnormal_vertex:X$,morphtarget_pars_vertex:j$,morphtarget_vertex:K$,normal_fragment_begin:Y$,normal_fragment_maps:Z$,normal_pars_fragment:J$,normal_pars_vertex:Q$,normal_vertex:tD,normalmap_pars_fragment:eD,clearcoat_normal_fragment_begin:nD,clearcoat_normal_fragment_maps:sD,clearcoat_pars_fragment:iD,iridescence_pars_fragment:rD,output_fragment:oD,packing:aD,premultiplied_alpha_fragment:lD,project_vertex:cD,dithering_fragment:uD,dithering_pars_fragment:hD,roughnessmap_fragment:dD,roughnessmap_pars_fragment:fD,shadowmap_pars_fragment:pD,shadowmap_pars_vertex:mD,shadowmap_vertex:gD,shadowmask_pars_fragment:xD,skinbase_vertex:yD,skinning_pars_vertex:bD,skinning_vertex:vD,skinnormal_vertex:wD,specularmap_fragment:SD,specularmap_pars_fragment:_D,tonemapping_fragment:CD,tonemapping_pars_fragment:TD,transmission_fragment:ID,transmission_pars_fragment:ED,uv_pars_fragment:MD,uv_pars_vertex:AD,uv_vertex:kD,uv2_pars_fragment:ND,uv2_pars_vertex:RD,uv2_vertex:$D,worldpos_vertex:DD,background_vert:FD,background_frag:LD,backgroundCube_vert:PD,backgroundCube_frag:OD,cube_vert:zD,cube_frag:BD,depth_vert:UD,depth_frag:VD,distanceRGBA_vert:WD,distanceRGBA_frag:GD,equirect_vert:HD,equirect_frag:qD,linedashed_vert:XD,linedashed_frag:jD,meshbasic_vert:KD,meshbasic_frag:YD,meshlambert_vert:ZD,meshlambert_frag:JD,meshmatcap_vert:QD,meshmatcap_frag:t3,meshnormal_vert:e3,meshnormal_frag:n3,meshphong_vert:s3,meshphong_frag:i3,meshphysical_vert:r3,meshphysical_frag:o3,meshtoon_vert:a3,meshtoon_frag:l3,points_vert:c3,points_frag:u3,shadow_vert:h3,shadow_frag:d3,sprite_vert:f3,sprite_frag:p3},$t={common:{diffuse:{value:new Pe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new oi},uv2Transform:{value:new oi},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Tt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Pe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Pe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new oi}},sprite:{diffuse:{value:new Pe(16777215)},opacity:{value:1},center:{value:new Tt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new oi}}},ir={basic:{uniforms:hs([$t.common,$t.specularmap,$t.envmap,$t.aomap,$t.lightmap,$t.fog]),vertexShader:be.meshbasic_vert,fragmentShader:be.meshbasic_frag},lambert:{uniforms:hs([$t.common,$t.specularmap,$t.envmap,$t.aomap,$t.lightmap,$t.emissivemap,$t.bumpmap,$t.normalmap,$t.displacementmap,$t.fog,$t.lights,{emissive:{value:new Pe(0)}}]),vertexShader:be.meshlambert_vert,fragmentShader:be.meshlambert_frag},phong:{uniforms:hs([$t.common,$t.specularmap,$t.envmap,$t.aomap,$t.lightmap,$t.emissivemap,$t.bumpmap,$t.normalmap,$t.displacementmap,$t.fog,$t.lights,{emissive:{value:new Pe(0)},specular:{value:new Pe(1118481)},shininess:{value:30}}]),vertexShader:be.meshphong_vert,fragmentShader:be.meshphong_frag},standard:{uniforms:hs([$t.common,$t.envmap,$t.aomap,$t.lightmap,$t.emissivemap,$t.bumpmap,$t.normalmap,$t.displacementmap,$t.roughnessmap,$t.metalnessmap,$t.fog,$t.lights,{emissive:{value:new Pe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:be.meshphysical_vert,fragmentShader:be.meshphysical_frag},toon:{uniforms:hs([$t.common,$t.aomap,$t.lightmap,$t.emissivemap,$t.bumpmap,$t.normalmap,$t.displacementmap,$t.gradientmap,$t.fog,$t.lights,{emissive:{value:new Pe(0)}}]),vertexShader:be.meshtoon_vert,fragmentShader:be.meshtoon_frag},matcap:{uniforms:hs([$t.common,$t.bumpmap,$t.normalmap,$t.displacementmap,$t.fog,{matcap:{value:null}}]),vertexShader:be.meshmatcap_vert,fragmentShader:be.meshmatcap_frag},points:{uniforms:hs([$t.points,$t.fog]),vertexShader:be.points_vert,fragmentShader:be.points_frag},dashed:{uniforms:hs([$t.common,$t.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:be.linedashed_vert,fragmentShader:be.linedashed_frag},depth:{uniforms:hs([$t.common,$t.displacementmap]),vertexShader:be.depth_vert,fragmentShader:be.depth_frag},normal:{uniforms:hs([$t.common,$t.bumpmap,$t.normalmap,$t.displacementmap,{opacity:{value:1}}]),vertexShader:be.meshnormal_vert,fragmentShader:be.meshnormal_frag},sprite:{uniforms:hs([$t.sprite,$t.fog]),vertexShader:be.sprite_vert,fragmentShader:be.sprite_frag},background:{uniforms:{uvTransform:{value:new oi},t2D:{value:null}},vertexShader:be.background_vert,fragmentShader:be.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:be.backgroundCube_vert,fragmentShader:be.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:be.cube_vert,fragmentShader:be.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:be.equirect_vert,fragmentShader:be.equirect_frag},distanceRGBA:{uniforms:hs([$t.common,$t.displacementmap,{referencePosition:{value:new W},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:be.distanceRGBA_vert,fragmentShader:be.distanceRGBA_frag},shadow:{uniforms:hs([$t.lights,$t.fog,{color:{value:new Pe(0)},opacity:{value:1}}]),vertexShader:be.shadow_vert,fragmentShader:be.shadow_frag}};ir.physical={uniforms:hs([ir.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Tt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Pe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Tt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Pe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Pe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:be.meshphysical_vert,fragmentShader:be.meshphysical_frag};function m3(s,t,e,n,i,r,o){const a=new Pe(0);let l=r===!0?0:1,c,u,h=null,d=0,f=null;function p(m,x){let y=!1,v=x.isScene===!0?x.background:null;v&&v.isTexture&&(v=(x.backgroundBlurriness>0?e:t).get(v));const b=s.xr,w=b.getSession&&b.getSession();w&&w.environmentBlendMode==="additive"&&(v=null),v===null?g(a,l):v&&v.isColor&&(g(v,1),y=!0),(s.autoClear||y)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),v&&(v.isCubeTexture||v.mapping===bp)?(u===void 0&&(u=new Je(new Ga(1,1,1),new Ta({name:"BackgroundCubeMaterial",uniforms:nc(ir.backgroundCube.uniforms),vertexShader:ir.backgroundCube.vertexShader,fragmentShader:ir.backgroundCube.fragmentShader,side:Us,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(_,C,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,(h!==v||d!==v.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=v,d=v.version,f=s.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new Je(new _p(2,2),new Ta({name:"BackgroundMaterial",uniforms:nc(ir.background.uniforms),vertexShader:ir.background.vertexShader,fragmentShader:ir.background.fragmentShader,side:_o,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||d!==v.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,h=v,d=v.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function g(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(m,x=1){a.set(m),l=x,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:p}}function g3(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,u=!1;function h(A,k,R,B,L){let D=!1;if(o){const V=g(B,R,k);c!==V&&(c=V,f(c.object)),D=x(A,B,R,L),D&&y(A,B,R,L)}else{const V=k.wireframe===!0;(c.geometry!==B.id||c.program!==R.id||c.wireframe!==V)&&(c.geometry=B.id,c.program=R.id,c.wireframe=V,D=!0)}L!==null&&e.update(L,34963),(D||u)&&(u=!1,S(A,k,R,B),L!==null&&s.bindBuffer(34963,e.get(L).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(A){return n.isWebGL2?s.bindVertexArray(A):r.bindVertexArrayOES(A)}function p(A){return n.isWebGL2?s.deleteVertexArray(A):r.deleteVertexArrayOES(A)}function g(A,k,R){const B=R.wireframe===!0;let L=a[A.id];L===void 0&&(L={},a[A.id]=L);let D=L[k.id];D===void 0&&(D={},L[k.id]=D);let V=D[B];return V===void 0&&(V=m(d()),D[B]=V),V}function m(A){const k=[],R=[],B=[];for(let L=0;L<i;L++)k[L]=0,R[L]=0,B[L]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:R,attributeDivisors:B,object:A,attributes:{},index:null}}function x(A,k,R,B){const L=c.attributes,D=k.attributes;let V=0;const q=R.getAttributes();for(const G in q)if(q[G].location>=0){const ot=L[G];let ht=D[G];if(ht===void 0&&(G==="instanceMatrix"&&A.instanceMatrix&&(ht=A.instanceMatrix),G==="instanceColor"&&A.instanceColor&&(ht=A.instanceColor)),ot===void 0||ot.attribute!==ht||ht&&ot.data!==ht.data)return!0;V++}return c.attributesNum!==V||c.index!==B}function y(A,k,R,B){const L={},D=k.attributes;let V=0;const q=R.getAttributes();for(const G in q)if(q[G].location>=0){let ot=D[G];ot===void 0&&(G==="instanceMatrix"&&A.instanceMatrix&&(ot=A.instanceMatrix),G==="instanceColor"&&A.instanceColor&&(ot=A.instanceColor));const ht={};ht.attribute=ot,ot&&ot.data&&(ht.data=ot.data),L[G]=ht,V++}c.attributes=L,c.attributesNum=V,c.index=B}function v(){const A=c.newAttributes;for(let k=0,R=A.length;k<R;k++)A[k]=0}function b(A){w(A,0)}function w(A,k){const R=c.newAttributes,B=c.enabledAttributes,L=c.attributeDivisors;R[A]=1,B[A]===0&&(s.enableVertexAttribArray(A),B[A]=1),L[A]!==k&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](A,k),L[A]=k)}function _(){const A=c.newAttributes,k=c.enabledAttributes;for(let R=0,B=k.length;R<B;R++)k[R]!==A[R]&&(s.disableVertexAttribArray(R),k[R]=0)}function C(A,k,R,B,L,D){n.isWebGL2===!0&&(R===5124||R===5125)?s.vertexAttribIPointer(A,k,R,L,D):s.vertexAttribPointer(A,k,R,B,L,D)}function S(A,k,R,B){if(n.isWebGL2===!1&&(A.isInstancedMesh||B.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;v();const L=B.attributes,D=R.getAttributes(),V=k.defaultAttributeValues;for(const q in D){const G=D[q];if(G.location>=0){let K=L[q];if(K===void 0&&(q==="instanceMatrix"&&A.instanceMatrix&&(K=A.instanceMatrix),q==="instanceColor"&&A.instanceColor&&(K=A.instanceColor)),K!==void 0){const ot=K.normalized,ht=K.itemSize,J=e.get(K);if(J===void 0)continue;const gt=J.buffer,mt=J.type,bt=J.bytesPerElement;if(K.isInterleavedBufferAttribute){const pt=K.data,st=pt.stride,et=K.offset;if(pt.isInstancedInterleavedBuffer){for(let ct=0;ct<G.locationSize;ct++)w(G.location+ct,pt.meshPerAttribute);A.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let ct=0;ct<G.locationSize;ct++)b(G.location+ct);s.bindBuffer(34962,gt);for(let ct=0;ct<G.locationSize;ct++)C(G.location+ct,ht/G.locationSize,mt,ot,st*bt,(et+ht/G.locationSize*ct)*bt)}else{if(K.isInstancedBufferAttribute){for(let pt=0;pt<G.locationSize;pt++)w(G.location+pt,K.meshPerAttribute);A.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=K.meshPerAttribute*K.count)}else for(let pt=0;pt<G.locationSize;pt++)b(G.location+pt);s.bindBuffer(34962,gt);for(let pt=0;pt<G.locationSize;pt++)C(G.location+pt,ht/G.locationSize,mt,ot,ht*bt,ht/G.locationSize*pt*bt)}}else if(V!==void 0){const ot=V[q];if(ot!==void 0)switch(ot.length){case 2:s.vertexAttrib2fv(G.location,ot);break;case 3:s.vertexAttrib3fv(G.location,ot);break;case 4:s.vertexAttrib4fv(G.location,ot);break;default:s.vertexAttrib1fv(G.location,ot)}}}}_()}function T(){$();for(const A in a){const k=a[A];for(const R in k){const B=k[R];for(const L in B)p(B[L].object),delete B[L];delete k[R]}delete a[A]}}function I(A){if(a[A.id]===void 0)return;const k=a[A.id];for(const R in k){const B=k[R];for(const L in B)p(B[L].object),delete B[L];delete k[R]}delete a[A.id]}function M(A){for(const k in a){const R=a[k];if(R[A.id]===void 0)continue;const B=R[A.id];for(const L in B)p(B[L].object),delete B[L];delete R[A.id]}}function $(){E(),u=!0,c!==l&&(c=l,f(c.object))}function E(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:$,resetDefaultState:E,dispose:T,releaseStatesOfGeometry:I,releaseStatesOfProgram:M,initAttributes:v,enableAttribute:b,disableUnusedAttributes:_}}function x3(s,t,e,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,u){s.drawArrays(r,c,u),e.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,f;if(i)d=s,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,c,u,h),e.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function y3(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const C=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(C){if(C==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=s.getParameter(34930),d=s.getParameter(35660),f=s.getParameter(3379),p=s.getParameter(34076),g=s.getParameter(34921),m=s.getParameter(36347),x=s.getParameter(36348),y=s.getParameter(36349),v=d>0,b=o||t.has("OES_texture_float"),w=v&&b,_=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:b,floatVertexTextures:w,maxSamples:_}}function b3(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new Or,a=new oi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const p=h.length!==0||d||n!==0||i;return i=d,e=u(h,f,0),n=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,d,f){const p=h.clippingPlanes,g=h.clipIntersection,m=h.clipShadows,x=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?u(null):c();else{const y=r?0:n,v=y*4;let b=x.clippingState||null;l.value=b,b=u(p,d,v,f);for(let w=0;w!==v;++w)b[w]=e[w];x.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,d,f,p){const g=h!==null?h.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const x=f+g*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(m===null||m.length<x)&&(m=new Float32Array(x));for(let v=0,b=f;v!==g;++v,b+=4)o.copy(h[v]).applyMatrix4(y,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,m}}function v3(s){let t=new WeakMap;function e(o,a){return a===kx?o.mapping=Ql:a===Nx&&(o.mapping=tc),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===kx||a===Nx)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new $R(l.height/2);return c.fromEquirectangularTexture(s,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class VC extends zC{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Ol=4,jw=[.125,.215,.35,.446,.526,.582],ea=20,Bg=new VC,Kw=new Pe;let Ug=null;const Qo=(1+Math.sqrt(5))/2,_l=1/Qo,Yw=[new W(1,1,1),new W(-1,1,1),new W(1,1,-1),new W(-1,1,-1),new W(0,Qo,_l),new W(0,Qo,-_l),new W(_l,0,Qo),new W(-_l,0,Qo),new W(Qo,_l,0),new W(-Qo,_l,0)];class Zw{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Ug=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=t1(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Qw(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Ug),t.scissorTest=!1,Od(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Ql||t.mapping===tc?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Ug=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:ni,minFilter:ni,generateMipmaps:!1,type:Su,format:Ri,encoding:Sa,depthBuffer:!1},i=Jw(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Jw(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=w3(r)),this._blurMaterial=S3(r,t,e)}return i}_compileMaterial(t){const e=new Je(this._lodPlanes[0],t);this._renderer.compile(e,Bg)}_sceneToCubeUV(t,e,n,i){const a=new si(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(Kw),u.toneMapping=Wr,u.autoClear=!1;const f=new Wa({name:"PMREM.Background",side:Us,depthWrite:!1,depthTest:!1}),p=new Je(new Ga,f);let g=!1;const m=t.background;m?m.isColor&&(f.color.copy(m),t.background=null,g=!0):(f.color.copy(Kw),g=!0);for(let x=0;x<6;x++){const y=x%3;y===0?(a.up.set(0,l[x],0),a.lookAt(c[x],0,0)):y===1?(a.up.set(0,0,l[x]),a.lookAt(0,c[x],0)):(a.up.set(0,l[x],0),a.lookAt(0,0,c[x]));const v=this._cubeSize;Od(i,y*v,x>2?v:0,v,v),u.setRenderTarget(i),g&&u.render(p,a),u.render(t,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=d,u.autoClear=h,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Ql||t.mapping===tc;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=t1()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Qw());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new Je(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;Od(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,Bg)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Yw[(i-1)%Yw.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new Je(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*ea-1),g=r/p,m=isFinite(r)?1+Math.floor(u*g):ea;m>ea&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${ea}`);const x=[];let y=0;for(let C=0;C<ea;++C){const S=C/g,T=Math.exp(-S*S/2);x.push(T),C===0?y+=T:C<m&&(y+=2*T)}for(let C=0;C<x.length;C++)x[C]=x[C]/y;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=x,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-n;const b=this._sizeLods[i],w=3*b*(i>v-Ol?i-v+Ol:0),_=4*(this._cubeSize-b);Od(e,w,_,3*b,2*b),l.setRenderTarget(e),l.render(h,Bg)}}function w3(s){const t=[],e=[],n=[];let i=s;const r=s-Ol+1+jw.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>s-Ol?l=jw[o-s+Ol-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,g=3,m=2,x=1,y=new Float32Array(g*p*f),v=new Float32Array(m*p*f),b=new Float32Array(x*p*f);for(let _=0;_<f;_++){const C=_%3*2/3-1,S=_>2?0:-1,T=[C,S,0,C+2/3,S,0,C+2/3,S+1,0,C,S,0,C+2/3,S+1,0,C,S+1,0];y.set(T,g*p*_),v.set(d,m*p*_);const I=[_,_,_,_,_,_];b.set(I,x*p*_)}const w=new ts;w.setAttribute("position",new Vs(y,g)),w.setAttribute("uv",new Vs(v,m)),w.setAttribute("faceIndex",new Vs(b,x)),t.push(w),i>Ol&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Jw(s,t,e){const n=new _a(s,t,e);return n.texture.mapping=bp,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Od(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function S3(s,t,e){const n=new Float32Array(ea),i=new W(0,1,0);return new Ta({name:"SphericalGaussianBlur",defines:{n:ea,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:U0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:po,depthTest:!1,depthWrite:!1})}function Qw(){return new Ta({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:U0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:po,depthTest:!1,depthWrite:!1})}function t1(){return new Ta({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:U0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:po,depthTest:!1,depthWrite:!1})}function U0(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function _3(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===kx||l===Nx,u=l===Ql||l===tc;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=t.get(a);return e===null&&(e=new Zw(s)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),t.set(a,h),h.texture}else{if(t.has(a))return t.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){e===null&&(e=new Zw(s));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function C3(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function T3(s,t,e,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(h){const d=h.attributes;for(const p in d)t.update(d[p],34962);const f=h.morphAttributes;for(const p in f){const g=f[p];for(let m=0,x=g.length;m<x;m++)t.update(g[m],34962)}}function c(h){const d=[],f=h.index,p=h.attributes.position;let g=0;if(f!==null){const y=f.array;g=f.version;for(let v=0,b=y.length;v<b;v+=3){const w=y[v+0],_=y[v+1],C=y[v+2];d.push(w,_,_,C,C,w)}}else{const y=p.array;g=p.version;for(let v=0,b=y.length/3-1;v<b;v+=3){const w=v+0,_=v+1,C=v+2;d.push(w,_,_,C,C,w)}}const m=new(RC(d)?OC:PC)(d,1);m.version=g;const x=r.get(h);x&&t.remove(x),r.set(h,m)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function I3(s,t,e,n){const i=n.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,f){s.drawElements(r,f,a,d*l),e.update(f,r,1)}function h(d,f,p){if(p===0)return;let g,m;if(i)g=s,m="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](r,f,a,d*l,p),e.update(f,r,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function E3(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function M3(s,t){return s[0]-t[0]}function A3(s,t){return Math.abs(t[1])-Math.abs(s[1])}function k3(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new Wn,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,d){const f=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=g!==void 0?g.length:0;let x=r.get(u);if(x===void 0||x.count!==m){let R=function(){A.dispose(),r.delete(u),u.removeEventListener("dispose",R)};var p=R;x!==void 0&&x.texture.dispose();const b=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,_=u.morphAttributes.color!==void 0,C=u.morphAttributes.position||[],S=u.morphAttributes.normal||[],T=u.morphAttributes.color||[];let I=0;b===!0&&(I=1),w===!0&&(I=2),_===!0&&(I=3);let M=u.attributes.position.count*I,$=1;M>t.maxTextureSize&&($=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);const E=new Float32Array(M*$*4*m),A=new LC(E,M,$,m);A.type=la,A.needsUpdate=!0;const k=I*4;for(let B=0;B<m;B++){const L=C[B],D=S[B],V=T[B],q=M*$*4*B;for(let G=0;G<L.count;G++){const K=G*k;b===!0&&(o.fromBufferAttribute(L,G),E[q+K+0]=o.x,E[q+K+1]=o.y,E[q+K+2]=o.z,E[q+K+3]=0),w===!0&&(o.fromBufferAttribute(D,G),E[q+K+4]=o.x,E[q+K+5]=o.y,E[q+K+6]=o.z,E[q+K+7]=0),_===!0&&(o.fromBufferAttribute(V,G),E[q+K+8]=o.x,E[q+K+9]=o.y,E[q+K+10]=o.z,E[q+K+11]=V.itemSize===4?o.w:1)}}x={count:m,texture:A,size:new Tt(M,$)},r.set(u,x),u.addEventListener("dispose",R)}let y=0;for(let b=0;b<f.length;b++)y+=f[b];const v=u.morphTargetsRelative?1:1-y;d.getUniforms().setValue(s,"morphTargetBaseInfluence",v),d.getUniforms().setValue(s,"morphTargetInfluences",f),d.getUniforms().setValue(s,"morphTargetsTexture",x.texture,e),d.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const g=f===void 0?0:f.length;let m=n[u.id];if(m===void 0||m.length!==g){m=[];for(let w=0;w<g;w++)m[w]=[w,0];n[u.id]=m}for(let w=0;w<g;w++){const _=m[w];_[0]=w,_[1]=f[w]}m.sort(A3);for(let w=0;w<8;w++)w<g&&m[w][1]?(a[w][0]=m[w][0],a[w][1]=m[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(M3);const x=u.morphAttributes.position,y=u.morphAttributes.normal;let v=0;for(let w=0;w<8;w++){const _=a[w],C=_[0],S=_[1];C!==Number.MAX_SAFE_INTEGER&&S?(x&&u.getAttribute("morphTarget"+w)!==x[C]&&u.setAttribute("morphTarget"+w,x[C]),y&&u.getAttribute("morphNormal"+w)!==y[C]&&u.setAttribute("morphNormal"+w,y[C]),i[w]=S,v+=S):(x&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),y&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),i[w]=0)}const b=u.morphTargetsRelative?1:1-v;d.getUniforms().setValue(s,"morphTargetBaseInfluence",b),d.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function N3(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);return i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const WC=new Bi,GC=new LC,HC=new xR,qC=new BC,e1=[],n1=[],s1=new Float32Array(16),i1=new Float32Array(9),r1=new Float32Array(4);function Sc(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=e1[i];if(r===void 0&&(r=new Float32Array(i),e1[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Fn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Ln(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function Cp(s,t){let e=n1[t];e===void 0&&(e=new Int32Array(t),n1[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function R3(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function $3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fn(e,t))return;s.uniform2fv(this.addr,t),Ln(e,t)}}function D3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Fn(e,t))return;s.uniform3fv(this.addr,t),Ln(e,t)}}function F3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fn(e,t))return;s.uniform4fv(this.addr,t),Ln(e,t)}}function L3(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Ln(e,t)}else{if(Fn(e,n))return;r1.set(n),s.uniformMatrix2fv(this.addr,!1,r1),Ln(e,n)}}function P3(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Ln(e,t)}else{if(Fn(e,n))return;i1.set(n),s.uniformMatrix3fv(this.addr,!1,i1),Ln(e,n)}}function O3(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Ln(e,t)}else{if(Fn(e,n))return;s1.set(n),s.uniformMatrix4fv(this.addr,!1,s1),Ln(e,n)}}function z3(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function B3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fn(e,t))return;s.uniform2iv(this.addr,t),Ln(e,t)}}function U3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Fn(e,t))return;s.uniform3iv(this.addr,t),Ln(e,t)}}function V3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fn(e,t))return;s.uniform4iv(this.addr,t),Ln(e,t)}}function W3(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function G3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fn(e,t))return;s.uniform2uiv(this.addr,t),Ln(e,t)}}function H3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Fn(e,t))return;s.uniform3uiv(this.addr,t),Ln(e,t)}}function q3(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fn(e,t))return;s.uniform4uiv(this.addr,t),Ln(e,t)}}function X3(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||WC,i)}function j3(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||HC,i)}function K3(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||qC,i)}function Y3(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||GC,i)}function Z3(s){switch(s){case 5126:return R3;case 35664:return $3;case 35665:return D3;case 35666:return F3;case 35674:return L3;case 35675:return P3;case 35676:return O3;case 5124:case 35670:return z3;case 35667:case 35671:return B3;case 35668:case 35672:return U3;case 35669:case 35673:return V3;case 5125:return W3;case 36294:return G3;case 36295:return H3;case 36296:return q3;case 35678:case 36198:case 36298:case 36306:case 35682:return X3;case 35679:case 36299:case 36307:return j3;case 35680:case 36300:case 36308:case 36293:return K3;case 36289:case 36303:case 36311:case 36292:return Y3}}function J3(s,t){s.uniform1fv(this.addr,t)}function Q3(s,t){const e=Sc(t,this.size,2);s.uniform2fv(this.addr,e)}function tF(s,t){const e=Sc(t,this.size,3);s.uniform3fv(this.addr,e)}function eF(s,t){const e=Sc(t,this.size,4);s.uniform4fv(this.addr,e)}function nF(s,t){const e=Sc(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function sF(s,t){const e=Sc(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function iF(s,t){const e=Sc(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function rF(s,t){s.uniform1iv(this.addr,t)}function oF(s,t){s.uniform2iv(this.addr,t)}function aF(s,t){s.uniform3iv(this.addr,t)}function lF(s,t){s.uniform4iv(this.addr,t)}function cF(s,t){s.uniform1uiv(this.addr,t)}function uF(s,t){s.uniform2uiv(this.addr,t)}function hF(s,t){s.uniform3uiv(this.addr,t)}function dF(s,t){s.uniform4uiv(this.addr,t)}function fF(s,t,e){const n=this.cache,i=t.length,r=Cp(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||WC,r[o])}function pF(s,t,e){const n=this.cache,i=t.length,r=Cp(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||HC,r[o])}function mF(s,t,e){const n=this.cache,i=t.length,r=Cp(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||qC,r[o])}function gF(s,t,e){const n=this.cache,i=t.length,r=Cp(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||GC,r[o])}function xF(s){switch(s){case 5126:return J3;case 35664:return Q3;case 35665:return tF;case 35666:return eF;case 35674:return nF;case 35675:return sF;case 35676:return iF;case 5124:case 35670:return rF;case 35667:case 35671:return oF;case 35668:case 35672:return aF;case 35669:case 35673:return lF;case 5125:return cF;case 36294:return uF;case 36295:return hF;case 36296:return dF;case 35678:case 36198:case 36298:case 36306:case 35682:return fF;case 35679:case 36299:case 36307:return pF;case 35680:case 36300:case 36308:case 36293:return mF;case 36289:case 36303:case 36311:case 36292:return gF}}class yF{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Z3(e.type)}}class bF{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=xF(e.type)}}class vF{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const Vg=/(\w+)(\])?(\[|\.)?/g;function o1(s,t){s.seq.push(t),s.map[t.id]=t}function wF(s,t,e){const n=s.name,i=n.length;for(Vg.lastIndex=0;;){const r=Vg.exec(n),o=Vg.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){o1(e,c===void 0?new yF(a,s,t):new bF(a,s,t));break}else{let h=e.map[a];h===void 0&&(h=new vF(a),o1(e,h)),e=h}}}class Tf{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);wF(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function a1(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let SF=0;function _F(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function CF(s){switch(s){case Sa:return["Linear","( value )"];case un:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function l1(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+_F(s.getShaderSource(t),o)}else return i}function TF(s,t){const e=CF(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function IF(s,t){let e;switch(t){case GN:e="Linear";break;case HN:e="Reinhard";break;case qN:e="OptimizedCineon";break;case XN:e="ACESFilmic";break;case jN:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function EF(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(iu).join(`
`)}function MF(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function AF(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function iu(s){return s!==""}function c1(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function u1(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const kF=/^[ \t]*#include +<([\w\d./]+)>/gm;function Lx(s){return s.replace(kF,NF)}function NF(s,t){const e=be[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return Lx(e)}const RF=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function h1(s){return s.replace(RF,$F)}function $F(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function d1(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function DF(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===IC?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===EC?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===su&&(t="SHADOWMAP_TYPE_VSM"),t}function FF(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Ql:case tc:t="ENVMAP_TYPE_CUBE";break;case bp:t="ENVMAP_TYPE_CUBE_UV";break}return t}function LF(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case tc:t="ENVMAP_MODE_REFRACTION";break}return t}function PF(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case yp:t="ENVMAP_BLENDING_MULTIPLY";break;case VN:t="ENVMAP_BLENDING_MIX";break;case WN:t="ENVMAP_BLENDING_ADD";break}return t}function OF(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function zF(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=DF(e),c=FF(e),u=LF(e),h=PF(e),d=OF(e),f=e.isWebGL2?"":EF(e),p=MF(r),g=i.createProgram();let m,x,y=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[p].filter(iu).join(`
`),m.length>0&&(m+=`
`),x=[f,p].filter(iu).join(`
`),x.length>0&&(x+=`
`)):(m=[d1(e),"#define SHADER_NAME "+e.shaderName,p,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(iu).join(`
`),x=[f,d1(e),"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Wr?"#define TONE_MAPPING":"",e.toneMapping!==Wr?be.tonemapping_pars_fragment:"",e.toneMapping!==Wr?IF("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",be.encodings_pars_fragment,TF("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(iu).join(`
`)),o=Lx(o),o=c1(o,e),o=u1(o,e),a=Lx(a),a=c1(a,e),a=u1(a,e),o=h1(o),a=h1(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",e.glslVersion===Fw?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Fw?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const v=y+m+o,b=y+x+a,w=a1(i,35633,v),_=a1(i,35632,b);if(i.attachShader(g,w),i.attachShader(g,_),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const T=i.getProgramInfoLog(g).trim(),I=i.getShaderInfoLog(w).trim(),M=i.getShaderInfoLog(_).trim();let $=!0,E=!0;if(i.getProgramParameter(g,35714)===!1){$=!1;const A=l1(i,w,"vertex"),k=l1(i,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+T+`
`+A+`
`+k)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(I===""||M==="")&&(E=!1);E&&(this.diagnostics={runnable:$,programLog:T,vertexShader:{log:I,prefix:m},fragmentShader:{log:M,prefix:x}})}i.deleteShader(w),i.deleteShader(_);let C;this.getUniforms=function(){return C===void 0&&(C=new Tf(i,g)),C};let S;return this.getAttributes=function(){return S===void 0&&(S=AF(i,g)),S},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=SF++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=_,this}let BF=0;class UF{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new VF(t),e.set(t,n)),n}}class VF{constructor(t){this.id=BF++,this.code=t,this.usedTimes=0}}function WF(s,t,e,n,i,r,o){const a=new z0,l=new UF,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(S,T,I,M,$){const E=M.fog,A=$.geometry,k=S.isMeshStandardMaterial?M.environment:null,R=(S.isMeshStandardMaterial?e:t).get(S.envMap||k),B=!!R&&R.mapping===bp?R.image.height:null,L=p[S.type];S.precision!==null&&(f=i.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const D=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,V=D!==void 0?D.length:0;let q=0;A.morphAttributes.position!==void 0&&(q=1),A.morphAttributes.normal!==void 0&&(q=2),A.morphAttributes.color!==void 0&&(q=3);let G,K,ot,ht;if(L){const st=ir[L];G=st.vertexShader,K=st.fragmentShader}else G=S.vertexShader,K=S.fragmentShader,l.update(S),ot=l.getVertexShaderID(S),ht=l.getFragmentShaderID(S);const J=s.getRenderTarget(),gt=S.alphaTest>0,mt=S.clearcoat>0,bt=S.iridescence>0;return{isWebGL2:u,shaderID:L,shaderName:S.type,vertexShader:G,fragmentShader:K,defines:S.defines,customVertexShaderID:ot,customFragmentShaderID:ht,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,instancing:$.isInstancedMesh===!0,instancingColor:$.isInstancedMesh===!0&&$.instanceColor!==null,supportsVertexTextures:d,outputEncoding:J===null?s.outputEncoding:J.isXRRenderTarget===!0?J.texture.encoding:Sa,map:!!S.map,matcap:!!S.matcap,envMap:!!R,envMapMode:R&&R.mapping,envMapCubeUVHeight:B,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===fR,tangentSpaceNormalMap:S.normalMapType===wp,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===un,clearcoat:mt,clearcoatMap:mt&&!!S.clearcoatMap,clearcoatRoughnessMap:mt&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:mt&&!!S.clearcoatNormalMap,iridescence:bt,iridescenceMap:bt&&!!S.iridescenceMap,iridescenceThicknessMap:bt&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:S.transparent===!1&&S.blending===Gl,alphaMap:!!S.alphaMap,alphaTest:gt,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!A.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!A.attributes.color&&A.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||S.transmission>0||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||S.sheen>0||!!S.sheenColorMap||!!S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!E,useFog:S.fog===!0,fogExp2:E&&E.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:h,skinning:$.isSkinnedMesh===!0,morphTargets:A.morphAttributes.position!==void 0,morphNormals:A.morphAttributes.normal!==void 0,morphColors:A.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:q,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:S.toneMapped?s.toneMapping:Wr,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===Cs,flipSided:S.side===Us,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function m(S){const T=[];if(S.shaderID?T.push(S.shaderID):(T.push(S.customVertexShaderID),T.push(S.customFragmentShaderID)),S.defines!==void 0)for(const I in S.defines)T.push(I),T.push(S.defines[I]);return S.isRawShaderMaterial===!1&&(x(T,S),y(T,S),T.push(s.outputEncoding)),T.push(S.customProgramCacheKey),T.join()}function x(S,T){S.push(T.precision),S.push(T.outputEncoding),S.push(T.envMapMode),S.push(T.envMapCubeUVHeight),S.push(T.combine),S.push(T.vertexUvs),S.push(T.fogExp2),S.push(T.sizeAttenuation),S.push(T.morphTargetsCount),S.push(T.morphAttributeCount),S.push(T.numDirLights),S.push(T.numPointLights),S.push(T.numSpotLights),S.push(T.numSpotLightMaps),S.push(T.numHemiLights),S.push(T.numRectAreaLights),S.push(T.numDirLightShadows),S.push(T.numPointLightShadows),S.push(T.numSpotLightShadows),S.push(T.numSpotLightShadowsWithMaps),S.push(T.shadowMapType),S.push(T.toneMapping),S.push(T.numClippingPlanes),S.push(T.numClipIntersection),S.push(T.depthPacking)}function y(S,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.map&&a.enable(4),T.matcap&&a.enable(5),T.envMap&&a.enable(6),T.lightMap&&a.enable(7),T.aoMap&&a.enable(8),T.emissiveMap&&a.enable(9),T.bumpMap&&a.enable(10),T.normalMap&&a.enable(11),T.objectSpaceNormalMap&&a.enable(12),T.tangentSpaceNormalMap&&a.enable(13),T.clearcoat&&a.enable(14),T.clearcoatMap&&a.enable(15),T.clearcoatRoughnessMap&&a.enable(16),T.clearcoatNormalMap&&a.enable(17),T.iridescence&&a.enable(18),T.iridescenceMap&&a.enable(19),T.iridescenceThicknessMap&&a.enable(20),T.displacementMap&&a.enable(21),T.specularMap&&a.enable(22),T.roughnessMap&&a.enable(23),T.metalnessMap&&a.enable(24),T.gradientMap&&a.enable(25),T.alphaMap&&a.enable(26),T.alphaTest&&a.enable(27),T.vertexColors&&a.enable(28),T.vertexAlphas&&a.enable(29),T.vertexUvs&&a.enable(30),T.vertexTangents&&a.enable(31),T.uvsVertexOnly&&a.enable(32),S.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.skinning&&a.enable(4),T.morphTargets&&a.enable(5),T.morphNormals&&a.enable(6),T.morphColors&&a.enable(7),T.premultipliedAlpha&&a.enable(8),T.shadowMapEnabled&&a.enable(9),T.physicallyCorrectLights&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.specularIntensityMap&&a.enable(15),T.specularColorMap&&a.enable(16),T.transmission&&a.enable(17),T.transmissionMap&&a.enable(18),T.thicknessMap&&a.enable(19),T.sheen&&a.enable(20),T.sheenColorMap&&a.enable(21),T.sheenRoughnessMap&&a.enable(22),T.decodeVideoTexture&&a.enable(23),T.opaque&&a.enable(24),S.push(a.mask)}function v(S){const T=p[S.type];let I;if(T){const M=ir[T];I=AR.clone(M.uniforms)}else I=S.uniforms;return I}function b(S,T){let I;for(let M=0,$=c.length;M<$;M++){const E=c[M];if(E.cacheKey===T){I=E,++I.usedTimes;break}}return I===void 0&&(I=new zF(s,T,S,r),c.push(I)),I}function w(S){if(--S.usedTimes===0){const T=c.indexOf(S);c[T]=c[c.length-1],c.pop(),S.destroy()}}function _(S){l.remove(S)}function C(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:v,acquireProgram:b,releaseProgram:w,releaseShaderCache:_,programs:c,dispose:C}}function GF(){let s=new WeakMap;function t(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function e(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function HF(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function f1(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function p1(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(h,d,f,p,g,m){let x=s[t];return x===void 0?(x={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:g,group:m},s[t]=x):(x.id=h.id,x.object=h,x.geometry=d,x.material=f,x.groupOrder=p,x.renderOrder=h.renderOrder,x.z=g,x.group=m),t++,x}function a(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.push(x):f.transparent===!0?i.push(x):e.push(x)}function l(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.unshift(x):f.transparent===!0?i.unshift(x):e.unshift(x)}function c(h,d){e.length>1&&e.sort(h||HF),n.length>1&&n.sort(d||f1),i.length>1&&i.sort(d||f1)}function u(){for(let h=t,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function qF(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new p1,s.set(n,[o])):i>=r.length?(o=new p1,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function XF(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new W,color:new Pe};break;case"SpotLight":e={position:new W,direction:new W,color:new Pe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new W,color:new Pe,distance:0,decay:0};break;case"HemisphereLight":e={direction:new W,skyColor:new Pe,groundColor:new Pe};break;case"RectAreaLight":e={color:new Pe,position:new W,halfWidth:new W,halfHeight:new W};break}return s[t.id]=e,e}}}function jF(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Tt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Tt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Tt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let KF=0;function YF(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function ZF(s,t){const e=new XF,n=jF(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new W);const r=new W,o=new je,a=new je;function l(u,h){let d=0,f=0,p=0;for(let M=0;M<9;M++)i.probe[M].set(0,0,0);let g=0,m=0,x=0,y=0,v=0,b=0,w=0,_=0,C=0,S=0;u.sort(YF);const T=h!==!0?Math.PI:1;for(let M=0,$=u.length;M<$;M++){const E=u[M],A=E.color,k=E.intensity,R=E.distance,B=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)d+=A.r*k*T,f+=A.g*k*T,p+=A.b*k*T;else if(E.isLightProbe)for(let L=0;L<9;L++)i.probe[L].addScaledVector(E.sh.coefficients[L],k);else if(E.isDirectionalLight){const L=e.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity*T),E.castShadow){const D=E.shadow,V=n.get(E);V.shadowBias=D.bias,V.shadowNormalBias=D.normalBias,V.shadowRadius=D.radius,V.shadowMapSize=D.mapSize,i.directionalShadow[g]=V,i.directionalShadowMap[g]=B,i.directionalShadowMatrix[g]=E.shadow.matrix,b++}i.directional[g]=L,g++}else if(E.isSpotLight){const L=e.get(E);L.position.setFromMatrixPosition(E.matrixWorld),L.color.copy(A).multiplyScalar(k*T),L.distance=R,L.coneCos=Math.cos(E.angle),L.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),L.decay=E.decay,i.spot[x]=L;const D=E.shadow;if(E.map&&(i.spotLightMap[C]=E.map,C++,D.updateMatrices(E),E.castShadow&&S++),i.spotLightMatrix[x]=D.matrix,E.castShadow){const V=n.get(E);V.shadowBias=D.bias,V.shadowNormalBias=D.normalBias,V.shadowRadius=D.radius,V.shadowMapSize=D.mapSize,i.spotShadow[x]=V,i.spotShadowMap[x]=B,_++}x++}else if(E.isRectAreaLight){const L=e.get(E);L.color.copy(A).multiplyScalar(k),L.halfWidth.set(E.width*.5,0,0),L.halfHeight.set(0,E.height*.5,0),i.rectArea[y]=L,y++}else if(E.isPointLight){const L=e.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity*T),L.distance=E.distance,L.decay=E.decay,E.castShadow){const D=E.shadow,V=n.get(E);V.shadowBias=D.bias,V.shadowNormalBias=D.normalBias,V.shadowRadius=D.radius,V.shadowMapSize=D.mapSize,V.shadowCameraNear=D.camera.near,V.shadowCameraFar=D.camera.far,i.pointShadow[m]=V,i.pointShadowMap[m]=B,i.pointShadowMatrix[m]=E.shadow.matrix,w++}i.point[m]=L,m++}else if(E.isHemisphereLight){const L=e.get(E);L.skyColor.copy(E.color).multiplyScalar(k*T),L.groundColor.copy(E.groundColor).multiplyScalar(k*T),i.hemi[v]=L,v++}}y>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=$t.LTC_FLOAT_1,i.rectAreaLTC2=$t.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=$t.LTC_HALF_1,i.rectAreaLTC2=$t.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const I=i.hash;(I.directionalLength!==g||I.pointLength!==m||I.spotLength!==x||I.rectAreaLength!==y||I.hemiLength!==v||I.numDirectionalShadows!==b||I.numPointShadows!==w||I.numSpotShadows!==_||I.numSpotMaps!==C)&&(i.directional.length=g,i.spot.length=x,i.rectArea.length=y,i.point.length=m,i.hemi.length=v,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=_+C-S,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=S,I.directionalLength=g,I.pointLength=m,I.spotLength=x,I.rectAreaLength=y,I.hemiLength=v,I.numDirectionalShadows=b,I.numPointShadows=w,I.numSpotShadows=_,I.numSpotMaps=C,i.version=KF++)}function c(u,h){let d=0,f=0,p=0,g=0,m=0;const x=h.matrixWorldInverse;for(let y=0,v=u.length;y<v;y++){const b=u[y];if(b.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),d++}else if(b.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),p++}else if(b.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),a.identity(),o.copy(b.matrixWorld),o.premultiply(x),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(b.isPointLight){const w=i.point[f];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),f++}else if(b.isHemisphereLight){const w=i.hemi[m];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(x),m++}}}return{setup:l,setupView:c,state:i}}function m1(s,t){const e=new ZF(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function JF(s,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new m1(s,t),e.set(r,[l])):o>=a.length?(l=new m1(s,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class QF extends ko{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=hR,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class tL extends ko{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new W,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const eL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function sL(s,t,e){let n=new B0;const i=new Tt,r=new Tt,o=new Wn,a=new QF({depthPacking:dR}),l=new tL,c={},u=e.maxTextureSize,h={0:Us,1:_o,2:Cs},d=new Ta({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Tt},radius:{value:4}},vertexShader:eL,fragmentShader:nL}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new ts;p.setAttribute("position",new Vs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Je(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=IC,this.render=function(b,w,_){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const C=s.getRenderTarget(),S=s.getActiveCubeFace(),T=s.getActiveMipmapLevel(),I=s.state;I.setBlending(po),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let M=0,$=b.length;M<$;M++){const E=b[M],A=E.shadow;if(A===void 0){console.warn("THREE.WebGLShadowMap:",E,"has no shadow.");continue}if(A.autoUpdate===!1&&A.needsUpdate===!1)continue;i.copy(A.mapSize);const k=A.getFrameExtents();if(i.multiply(k),r.copy(A.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/k.x),i.x=r.x*k.x,A.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/k.y),i.y=r.y*k.y,A.mapSize.y=r.y)),A.map===null){const B=this.type!==su?{minFilter:ws,magFilter:ws}:{};A.map=new _a(i.x,i.y,B),A.map.texture.name=E.name+".shadowMap",A.camera.updateProjectionMatrix()}s.setRenderTarget(A.map),s.clear();const R=A.getViewportCount();for(let B=0;B<R;B++){const L=A.getViewport(B);o.set(r.x*L.x,r.y*L.y,r.x*L.z,r.y*L.w),I.viewport(o),A.updateMatrices(E,B),n=A.getFrustum(),v(w,_,A.camera,E,this.type)}A.isPointLightShadow!==!0&&this.type===su&&x(A,_),A.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(C,S,T)};function x(b,w){const _=t.update(g);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,f.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new _a(i.x,i.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,s.setRenderTarget(b.mapPass),s.clear(),s.renderBufferDirect(w,null,_,d,g,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,s.setRenderTarget(b.map),s.clear(),s.renderBufferDirect(w,null,_,f,g,null)}function y(b,w,_,C,S,T){let I=null;const M=_.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(M!==void 0?I=M:I=_.isPointLight===!0?l:a,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const $=I.uuid,E=w.uuid;let A=c[$];A===void 0&&(A={},c[$]=A);let k=A[E];k===void 0&&(k=I.clone(),A[E]=k),I=k}return I.visible=w.visible,I.wireframe=w.wireframe,T===su?I.side=w.shadowSide!==null?w.shadowSide:w.side:I.side=w.shadowSide!==null?w.shadowSide:h[w.side],I.alphaMap=w.alphaMap,I.alphaTest=w.alphaTest,I.clipShadows=w.clipShadows,I.clippingPlanes=w.clippingPlanes,I.clipIntersection=w.clipIntersection,I.displacementMap=w.displacementMap,I.displacementScale=w.displacementScale,I.displacementBias=w.displacementBias,I.wireframeLinewidth=w.wireframeLinewidth,I.linewidth=w.linewidth,_.isPointLight===!0&&I.isMeshDistanceMaterial===!0&&(I.referencePosition.setFromMatrixPosition(_.matrixWorld),I.nearDistance=C,I.farDistance=S),I}function v(b,w,_,C,S){if(b.visible===!1)return;if(b.layers.test(w.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&S===su)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,b.matrixWorld);const M=t.update(b),$=b.material;if(Array.isArray($)){const E=M.groups;for(let A=0,k=E.length;A<k;A++){const R=E[A],B=$[R.materialIndex];if(B&&B.visible){const L=y(b,B,C,_.near,_.far,S);s.renderBufferDirect(_,null,M,L,b,R)}}}else if($.visible){const E=y(b,$,C,_.near,_.far,S);s.renderBufferDirect(_,null,M,E,b,null)}}const I=b.children;for(let M=0,$=I.length;M<$;M++)v(I[M],w,_,C,S)}}function iL(s,t,e){const n=e.isWebGL2;function i(){let tt=!1;const yt=new Wn;let kt=null;const Wt=new Wn(0,0,0,0);return{setMask:function(oe){kt!==oe&&!tt&&(s.colorMask(oe,oe,oe,oe),kt=oe)},setLocked:function(oe){tt=oe},setClear:function(oe,De,zn,ns,Vo){Vo===!0&&(oe*=ns,De*=ns,zn*=ns),yt.set(oe,De,zn,ns),Wt.equals(yt)===!1&&(s.clearColor(oe,De,zn,ns),Wt.copy(yt))},reset:function(){tt=!1,kt=null,Wt.set(-1,0,0,0)}}}function r(){let tt=!1,yt=null,kt=null,Wt=null;return{setTest:function(oe){oe?gt(2929):mt(2929)},setMask:function(oe){yt!==oe&&!tt&&(s.depthMask(oe),yt=oe)},setFunc:function(oe){if(kt!==oe){switch(oe){case FN:s.depthFunc(512);break;case LN:s.depthFunc(519);break;case PN:s.depthFunc(513);break;case Ax:s.depthFunc(515);break;case ON:s.depthFunc(514);break;case zN:s.depthFunc(518);break;case BN:s.depthFunc(516);break;case UN:s.depthFunc(517);break;default:s.depthFunc(515)}kt=oe}},setLocked:function(oe){tt=oe},setClear:function(oe){Wt!==oe&&(s.clearDepth(oe),Wt=oe)},reset:function(){tt=!1,yt=null,kt=null,Wt=null}}}function o(){let tt=!1,yt=null,kt=null,Wt=null,oe=null,De=null,zn=null,ns=null,Vo=null;return{setTest:function(en){tt||(en?gt(2960):mt(2960))},setMask:function(en){yt!==en&&!tt&&(s.stencilMask(en),yt=en)},setFunc:function(en,Cr,js){(kt!==en||Wt!==Cr||oe!==js)&&(s.stencilFunc(en,Cr,js),kt=en,Wt=Cr,oe=js)},setOp:function(en,Cr,js){(De!==en||zn!==Cr||ns!==js)&&(s.stencilOp(en,Cr,js),De=en,zn=Cr,ns=js)},setLocked:function(en){tt=en},setClear:function(en){Vo!==en&&(s.clearStencil(en),Vo=en)},reset:function(){tt=!1,yt=null,kt=null,Wt=null,oe=null,De=null,zn=null,ns=null,Vo=null}}}const a=new i,l=new r,c=new o,u=new WeakMap,h=new WeakMap;let d={},f={},p=new WeakMap,g=[],m=null,x=!1,y=null,v=null,b=null,w=null,_=null,C=null,S=null,T=!1,I=null,M=null,$=null,E=null,A=null;const k=s.getParameter(35661);let R=!1,B=0;const L=s.getParameter(7938);L.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL (\d)/.exec(L)[1]),R=B>=1):L.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),R=B>=2);let D=null,V={};const q=s.getParameter(3088),G=s.getParameter(2978),K=new Wn().fromArray(q),ot=new Wn().fromArray(G);function ht(tt,yt,kt){const Wt=new Uint8Array(4),oe=s.createTexture();s.bindTexture(tt,oe),s.texParameteri(tt,10241,9728),s.texParameteri(tt,10240,9728);for(let De=0;De<kt;De++)s.texImage2D(yt+De,0,6408,1,1,0,6408,5121,Wt);return oe}const J={};J[3553]=ht(3553,3553,1),J[34067]=ht(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),gt(2929),l.setFunc(Ax),Ct(!1),Ut(rw),gt(2884),St(po);function gt(tt){d[tt]!==!0&&(s.enable(tt),d[tt]=!0)}function mt(tt){d[tt]!==!1&&(s.disable(tt),d[tt]=!1)}function bt(tt,yt){return f[tt]!==yt?(s.bindFramebuffer(tt,yt),f[tt]=yt,n&&(tt===36009&&(f[36160]=yt),tt===36160&&(f[36009]=yt)),!0):!1}function pt(tt,yt){let kt=g,Wt=!1;if(tt)if(kt=p.get(yt),kt===void 0&&(kt=[],p.set(yt,kt)),tt.isWebGLMultipleRenderTargets){const oe=tt.texture;if(kt.length!==oe.length||kt[0]!==36064){for(let De=0,zn=oe.length;De<zn;De++)kt[De]=36064+De;kt.length=oe.length,Wt=!0}}else kt[0]!==36064&&(kt[0]=36064,Wt=!0);else kt[0]!==1029&&(kt[0]=1029,Wt=!0);Wt&&(e.isWebGL2?s.drawBuffers(kt):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(kt))}function st(tt){return m!==tt?(s.useProgram(tt),m=tt,!0):!1}const et={[$l]:32774,[CN]:32778,[TN]:32779};if(n)et[cw]=32775,et[uw]=32776;else{const tt=t.get("EXT_blend_minmax");tt!==null&&(et[cw]=tt.MIN_EXT,et[uw]=tt.MAX_EXT)}const ct={[IN]:0,[EN]:1,[MN]:768,[MC]:770,[DN]:776,[RN]:774,[kN]:772,[AN]:769,[AC]:771,[$N]:775,[NN]:773};function St(tt,yt,kt,Wt,oe,De,zn,ns){if(tt===po){x===!0&&(mt(3042),x=!1);return}if(x===!1&&(gt(3042),x=!0),tt!==_N){if(tt!==y||ns!==T){if((v!==$l||_!==$l)&&(s.blendEquation(32774),v=$l,_=$l),ns)switch(tt){case Gl:s.blendFuncSeparate(1,771,1,771);break;case ow:s.blendFunc(1,1);break;case aw:s.blendFuncSeparate(0,769,0,1);break;case lw:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",tt);break}else switch(tt){case Gl:s.blendFuncSeparate(770,771,1,771);break;case ow:s.blendFunc(770,1);break;case aw:s.blendFuncSeparate(0,769,0,1);break;case lw:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",tt);break}b=null,w=null,C=null,S=null,y=tt,T=ns}return}oe=oe||yt,De=De||kt,zn=zn||Wt,(yt!==v||oe!==_)&&(s.blendEquationSeparate(et[yt],et[oe]),v=yt,_=oe),(kt!==b||Wt!==w||De!==C||zn!==S)&&(s.blendFuncSeparate(ct[kt],ct[Wt],ct[De],ct[zn]),b=kt,w=Wt,C=De,S=zn),y=tt,T=null}function At(tt,yt){tt.side===Cs?mt(2884):gt(2884);let kt=tt.side===Us;yt&&(kt=!kt),Ct(kt),tt.blending===Gl&&tt.transparent===!1?St(po):St(tt.blending,tt.blendEquation,tt.blendSrc,tt.blendDst,tt.blendEquationAlpha,tt.blendSrcAlpha,tt.blendDstAlpha,tt.premultipliedAlpha),l.setFunc(tt.depthFunc),l.setTest(tt.depthTest),l.setMask(tt.depthWrite),a.setMask(tt.colorWrite);const Wt=tt.stencilWrite;c.setTest(Wt),Wt&&(c.setMask(tt.stencilWriteMask),c.setFunc(tt.stencilFunc,tt.stencilRef,tt.stencilFuncMask),c.setOp(tt.stencilFail,tt.stencilZFail,tt.stencilZPass)),Jt(tt.polygonOffset,tt.polygonOffsetFactor,tt.polygonOffsetUnits),tt.alphaToCoverage===!0?gt(32926):mt(32926)}function Ct(tt){I!==tt&&(tt?s.frontFace(2304):s.frontFace(2305),I=tt)}function Ut(tt){tt!==wN?(gt(2884),tt!==M&&(tt===rw?s.cullFace(1029):tt===SN?s.cullFace(1028):s.cullFace(1032))):mt(2884),M=tt}function zt(tt){tt!==$&&(R&&s.lineWidth(tt),$=tt)}function Jt(tt,yt,kt){tt?(gt(32823),(E!==yt||A!==kt)&&(s.polygonOffset(yt,kt),E=yt,A=kt)):mt(32823)}function ce(tt){tt?gt(3089):mt(3089)}function xe(tt){tt===void 0&&(tt=33984+k-1),D!==tt&&(s.activeTexture(tt),D=tt)}function U(tt,yt,kt){kt===void 0&&(D===null?kt=33984+k-1:kt=D);let Wt=V[kt];Wt===void 0&&(Wt={type:void 0,texture:void 0},V[kt]=Wt),(Wt.type!==tt||Wt.texture!==yt)&&(D!==kt&&(s.activeTexture(kt),D=kt),s.bindTexture(tt,yt||J[tt]),Wt.type=tt,Wt.texture=yt)}function P(){const tt=V[D];tt!==void 0&&tt.type!==void 0&&(s.bindTexture(tt.type,null),tt.type=void 0,tt.texture=void 0)}function ut(){try{s.compressedTexImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function It(){try{s.compressedTexImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Mt(){try{s.texSubImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Nt(){try{s.texSubImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function ne(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function H(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function nt(){try{s.texStorage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Ft(){try{s.texStorage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Vt(){try{s.texImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Pt(){try{s.texImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function se(tt){K.equals(tt)===!1&&(s.scissor(tt.x,tt.y,tt.z,tt.w),K.copy(tt))}function ee(tt){ot.equals(tt)===!1&&(s.viewport(tt.x,tt.y,tt.z,tt.w),ot.copy(tt))}function Te(tt,yt){let kt=h.get(yt);kt===void 0&&(kt=new WeakMap,h.set(yt,kt));let Wt=kt.get(tt);Wt===void 0&&(Wt=s.getUniformBlockIndex(yt,tt.name),kt.set(tt,Wt))}function Me(tt,yt){const Wt=h.get(yt).get(tt);u.get(tt)!==Wt&&(s.uniformBlockBinding(yt,Wt,tt.__bindingPointIndex),u.set(tt,Wt))}function Be(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},D=null,V={},f={},p=new WeakMap,g=[],m=null,x=!1,y=null,v=null,b=null,w=null,_=null,C=null,S=null,T=!1,I=null,M=null,$=null,E=null,A=null,K.set(0,0,s.canvas.width,s.canvas.height),ot.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:gt,disable:mt,bindFramebuffer:bt,drawBuffers:pt,useProgram:st,setBlending:St,setMaterial:At,setFlipSided:Ct,setCullFace:Ut,setLineWidth:zt,setPolygonOffset:Jt,setScissorTest:ce,activeTexture:xe,bindTexture:U,unbindTexture:P,compressedTexImage2D:ut,compressedTexImage3D:It,texImage2D:Vt,texImage3D:Pt,updateUBOMapping:Te,uniformBlockBinding:Me,texStorage2D:nt,texStorage3D:Ft,texSubImage2D:Mt,texSubImage3D:Nt,compressedTexSubImage2D:ne,compressedTexSubImage3D:H,scissor:se,viewport:ee,reset:Be}}function rL(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(typeof navigator>"u"?"":navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(U,P){return x?new OffscreenCanvas(U,P):Df("canvas")}function v(U,P,ut,It){let Mt=1;if((U.width>It||U.height>It)&&(Mt=It/Math.max(U.width,U.height)),Mt<1||P===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap){const Nt=P?Fx:Math.floor,ne=Nt(Mt*U.width),H=Nt(Mt*U.height);g===void 0&&(g=y(ne,H));const nt=ut?y(ne,H):g;return nt.width=ne,nt.height=H,nt.getContext("2d").drawImage(U,0,0,ne,H),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+U.width+"x"+U.height+") to ("+ne+"x"+H+")."),nt}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+U.width+"x"+U.height+")."),U;return U}function b(U){return Pw(U.width)&&Pw(U.height)}function w(U){return a?!1:U.wrapS!==Ni||U.wrapT!==Ni||U.minFilter!==ws&&U.minFilter!==ni}function _(U,P){return U.generateMipmaps&&P&&U.minFilter!==ws&&U.minFilter!==ni}function C(U){s.generateMipmap(U)}function S(U,P,ut,It,Mt=!1){if(a===!1)return P;if(U!==null){if(s[U]!==void 0)return s[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Nt=P;return P===6403&&(ut===5126&&(Nt=33326),ut===5131&&(Nt=33325),ut===5121&&(Nt=33321)),P===33319&&(ut===5126&&(Nt=33328),ut===5131&&(Nt=33327),ut===5121&&(Nt=33323)),P===6408&&(ut===5126&&(Nt=34836),ut===5131&&(Nt=34842),ut===5121&&(Nt=It===un&&Mt===!1?35907:32856),ut===32819&&(Nt=32854),ut===32820&&(Nt=32855)),(Nt===33325||Nt===33326||Nt===33327||Nt===33328||Nt===34842||Nt===34836)&&t.get("EXT_color_buffer_float"),Nt}function T(U,P,ut){return _(U,ut)===!0||U.isFramebufferTexture&&U.minFilter!==ws&&U.minFilter!==ni?Math.log2(Math.max(P.width,P.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?P.mipmaps.length:1}function I(U){return U===ws||U===hw||U===dw?9728:9729}function M(U){const P=U.target;P.removeEventListener("dispose",M),E(P),P.isVideoTexture&&p.delete(P)}function $(U){const P=U.target;P.removeEventListener("dispose",$),k(P)}function E(U){const P=n.get(U);if(P.__webglInit===void 0)return;const ut=U.source,It=m.get(ut);if(It){const Mt=It[P.__cacheKey];Mt.usedTimes--,Mt.usedTimes===0&&A(U),Object.keys(It).length===0&&m.delete(ut)}n.remove(U)}function A(U){const P=n.get(U);s.deleteTexture(P.__webglTexture);const ut=U.source,It=m.get(ut);delete It[P.__cacheKey],o.memory.textures--}function k(U){const P=U.texture,ut=n.get(U),It=n.get(P);if(It.__webglTexture!==void 0&&(s.deleteTexture(It.__webglTexture),o.memory.textures--),U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let Mt=0;Mt<6;Mt++)s.deleteFramebuffer(ut.__webglFramebuffer[Mt]),ut.__webglDepthbuffer&&s.deleteRenderbuffer(ut.__webglDepthbuffer[Mt]);else{if(s.deleteFramebuffer(ut.__webglFramebuffer),ut.__webglDepthbuffer&&s.deleteRenderbuffer(ut.__webglDepthbuffer),ut.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ut.__webglMultisampledFramebuffer),ut.__webglColorRenderbuffer)for(let Mt=0;Mt<ut.__webglColorRenderbuffer.length;Mt++)ut.__webglColorRenderbuffer[Mt]&&s.deleteRenderbuffer(ut.__webglColorRenderbuffer[Mt]);ut.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ut.__webglDepthRenderbuffer)}if(U.isWebGLMultipleRenderTargets)for(let Mt=0,Nt=P.length;Mt<Nt;Mt++){const ne=n.get(P[Mt]);ne.__webglTexture&&(s.deleteTexture(ne.__webglTexture),o.memory.textures--),n.remove(P[Mt])}n.remove(P),n.remove(U)}let R=0;function B(){R=0}function L(){const U=R;return U>=l&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+l),R+=1,U}function D(U){const P=[];return P.push(U.wrapS),P.push(U.wrapT),P.push(U.wrapR||0),P.push(U.magFilter),P.push(U.minFilter),P.push(U.anisotropy),P.push(U.internalFormat),P.push(U.format),P.push(U.type),P.push(U.generateMipmaps),P.push(U.premultiplyAlpha),P.push(U.flipY),P.push(U.unpackAlignment),P.push(U.encoding),P.join()}function V(U,P){const ut=n.get(U);if(U.isVideoTexture&&ce(U),U.isRenderTargetTexture===!1&&U.version>0&&ut.__version!==U.version){const It=U.image;if(It===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(It.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{mt(ut,U,P);return}}e.bindTexture(3553,ut.__webglTexture,33984+P)}function q(U,P){const ut=n.get(U);if(U.version>0&&ut.__version!==U.version){mt(ut,U,P);return}e.bindTexture(35866,ut.__webglTexture,33984+P)}function G(U,P){const ut=n.get(U);if(U.version>0&&ut.__version!==U.version){mt(ut,U,P);return}e.bindTexture(32879,ut.__webglTexture,33984+P)}function K(U,P){const ut=n.get(U);if(U.version>0&&ut.__version!==U.version){bt(ut,U,P);return}e.bindTexture(34067,ut.__webglTexture,33984+P)}const ot={[Rx]:10497,[Ni]:33071,[$x]:33648},ht={[ws]:9728,[hw]:9984,[dw]:9986,[ni]:9729,[KN]:9985,[vp]:9987};function J(U,P,ut){if(ut?(s.texParameteri(U,10242,ot[P.wrapS]),s.texParameteri(U,10243,ot[P.wrapT]),(U===32879||U===35866)&&s.texParameteri(U,32882,ot[P.wrapR]),s.texParameteri(U,10240,ht[P.magFilter]),s.texParameteri(U,10241,ht[P.minFilter])):(s.texParameteri(U,10242,33071),s.texParameteri(U,10243,33071),(U===32879||U===35866)&&s.texParameteri(U,32882,33071),(P.wrapS!==Ni||P.wrapT!==Ni)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(U,10240,I(P.magFilter)),s.texParameteri(U,10241,I(P.minFilter)),P.minFilter!==ws&&P.minFilter!==ni&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const It=t.get("EXT_texture_filter_anisotropic");if(P.type===la&&t.has("OES_texture_float_linear")===!1||a===!1&&P.type===Su&&t.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(s.texParameterf(U,It.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function gt(U,P){let ut=!1;U.__webglInit===void 0&&(U.__webglInit=!0,P.addEventListener("dispose",M));const It=P.source;let Mt=m.get(It);Mt===void 0&&(Mt={},m.set(It,Mt));const Nt=D(P);if(Nt!==U.__cacheKey){Mt[Nt]===void 0&&(Mt[Nt]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ut=!0),Mt[Nt].usedTimes++;const ne=Mt[U.__cacheKey];ne!==void 0&&(Mt[U.__cacheKey].usedTimes--,ne.usedTimes===0&&A(P)),U.__cacheKey=Nt,U.__webglTexture=Mt[Nt].texture}return ut}function mt(U,P,ut){let It=3553;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(It=35866),P.isData3DTexture&&(It=32879);const Mt=gt(U,P),Nt=P.source;e.bindTexture(It,U.__webglTexture,33984+ut);const ne=n.get(Nt);if(Nt.version!==ne.__version||Mt===!0){e.activeTexture(33984+ut),s.pixelStorei(37440,P.flipY),s.pixelStorei(37441,P.premultiplyAlpha),s.pixelStorei(3317,P.unpackAlignment),s.pixelStorei(37443,0);const H=w(P)&&b(P.image)===!1;let nt=v(P.image,H,!1,u);nt=xe(P,nt);const Ft=b(nt)||a,Vt=r.convert(P.format,P.encoding);let Pt=r.convert(P.type),se=S(P.internalFormat,Vt,Pt,P.encoding,P.isVideoTexture);J(It,P,Ft);let ee;const Te=P.mipmaps,Me=a&&P.isVideoTexture!==!0,Be=ne.__version===void 0||Mt===!0,tt=T(P,nt,Ft);if(P.isDepthTexture)se=6402,a?P.type===la?se=36012:P.type===aa?se=33190:P.type===Hl?se=35056:se=33189:P.type===la&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===ma&&se===6402&&P.type!==NC&&P.type!==aa&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=aa,Pt=r.convert(P.type)),P.format===ec&&se===6402&&(se=34041,P.type!==Hl&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=Hl,Pt=r.convert(P.type))),Be&&(Me?e.texStorage2D(3553,1,se,nt.width,nt.height):e.texImage2D(3553,0,se,nt.width,nt.height,0,Vt,Pt,null));else if(P.isDataTexture)if(Te.length>0&&Ft){Me&&Be&&e.texStorage2D(3553,tt,se,Te[0].width,Te[0].height);for(let yt=0,kt=Te.length;yt<kt;yt++)ee=Te[yt],Me?e.texSubImage2D(3553,yt,0,0,ee.width,ee.height,Vt,Pt,ee.data):e.texImage2D(3553,yt,se,ee.width,ee.height,0,Vt,Pt,ee.data);P.generateMipmaps=!1}else Me?(Be&&e.texStorage2D(3553,tt,se,nt.width,nt.height),e.texSubImage2D(3553,0,0,0,nt.width,nt.height,Vt,Pt,nt.data)):e.texImage2D(3553,0,se,nt.width,nt.height,0,Vt,Pt,nt.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){Me&&Be&&e.texStorage3D(35866,tt,se,Te[0].width,Te[0].height,nt.depth);for(let yt=0,kt=Te.length;yt<kt;yt++)ee=Te[yt],P.format!==Ri?Vt!==null?Me?e.compressedTexSubImage3D(35866,yt,0,0,0,ee.width,ee.height,nt.depth,Vt,ee.data,0,0):e.compressedTexImage3D(35866,yt,se,ee.width,ee.height,nt.depth,0,ee.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Me?e.texSubImage3D(35866,yt,0,0,0,ee.width,ee.height,nt.depth,Vt,Pt,ee.data):e.texImage3D(35866,yt,se,ee.width,ee.height,nt.depth,0,Vt,Pt,ee.data)}else{Me&&Be&&e.texStorage2D(3553,tt,se,Te[0].width,Te[0].height);for(let yt=0,kt=Te.length;yt<kt;yt++)ee=Te[yt],P.format!==Ri?Vt!==null?Me?e.compressedTexSubImage2D(3553,yt,0,0,ee.width,ee.height,Vt,ee.data):e.compressedTexImage2D(3553,yt,se,ee.width,ee.height,0,ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Me?e.texSubImage2D(3553,yt,0,0,ee.width,ee.height,Vt,Pt,ee.data):e.texImage2D(3553,yt,se,ee.width,ee.height,0,Vt,Pt,ee.data)}else if(P.isDataArrayTexture)Me?(Be&&e.texStorage3D(35866,tt,se,nt.width,nt.height,nt.depth),e.texSubImage3D(35866,0,0,0,0,nt.width,nt.height,nt.depth,Vt,Pt,nt.data)):e.texImage3D(35866,0,se,nt.width,nt.height,nt.depth,0,Vt,Pt,nt.data);else if(P.isData3DTexture)Me?(Be&&e.texStorage3D(32879,tt,se,nt.width,nt.height,nt.depth),e.texSubImage3D(32879,0,0,0,0,nt.width,nt.height,nt.depth,Vt,Pt,nt.data)):e.texImage3D(32879,0,se,nt.width,nt.height,nt.depth,0,Vt,Pt,nt.data);else if(P.isFramebufferTexture){if(Be)if(Me)e.texStorage2D(3553,tt,se,nt.width,nt.height);else{let yt=nt.width,kt=nt.height;for(let Wt=0;Wt<tt;Wt++)e.texImage2D(3553,Wt,se,yt,kt,0,Vt,Pt,null),yt>>=1,kt>>=1}}else if(Te.length>0&&Ft){Me&&Be&&e.texStorage2D(3553,tt,se,Te[0].width,Te[0].height);for(let yt=0,kt=Te.length;yt<kt;yt++)ee=Te[yt],Me?e.texSubImage2D(3553,yt,0,0,Vt,Pt,ee):e.texImage2D(3553,yt,se,Vt,Pt,ee);P.generateMipmaps=!1}else Me?(Be&&e.texStorage2D(3553,tt,se,nt.width,nt.height),e.texSubImage2D(3553,0,0,0,Vt,Pt,nt)):e.texImage2D(3553,0,se,Vt,Pt,nt);_(P,Ft)&&C(It),ne.__version=Nt.version,P.onUpdate&&P.onUpdate(P)}U.__version=P.version}function bt(U,P,ut){if(P.image.length!==6)return;const It=gt(U,P),Mt=P.source;e.bindTexture(34067,U.__webglTexture,33984+ut);const Nt=n.get(Mt);if(Mt.version!==Nt.__version||It===!0){e.activeTexture(33984+ut),s.pixelStorei(37440,P.flipY),s.pixelStorei(37441,P.premultiplyAlpha),s.pixelStorei(3317,P.unpackAlignment),s.pixelStorei(37443,0);const ne=P.isCompressedTexture||P.image[0].isCompressedTexture,H=P.image[0]&&P.image[0].isDataTexture,nt=[];for(let yt=0;yt<6;yt++)!ne&&!H?nt[yt]=v(P.image[yt],!1,!0,c):nt[yt]=H?P.image[yt].image:P.image[yt],nt[yt]=xe(P,nt[yt]);const Ft=nt[0],Vt=b(Ft)||a,Pt=r.convert(P.format,P.encoding),se=r.convert(P.type),ee=S(P.internalFormat,Pt,se,P.encoding),Te=a&&P.isVideoTexture!==!0,Me=Nt.__version===void 0||It===!0;let Be=T(P,Ft,Vt);J(34067,P,Vt);let tt;if(ne){Te&&Me&&e.texStorage2D(34067,Be,ee,Ft.width,Ft.height);for(let yt=0;yt<6;yt++){tt=nt[yt].mipmaps;for(let kt=0;kt<tt.length;kt++){const Wt=tt[kt];P.format!==Ri?Pt!==null?Te?e.compressedTexSubImage2D(34069+yt,kt,0,0,Wt.width,Wt.height,Pt,Wt.data):e.compressedTexImage2D(34069+yt,kt,ee,Wt.width,Wt.height,0,Wt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Te?e.texSubImage2D(34069+yt,kt,0,0,Wt.width,Wt.height,Pt,se,Wt.data):e.texImage2D(34069+yt,kt,ee,Wt.width,Wt.height,0,Pt,se,Wt.data)}}}else{tt=P.mipmaps,Te&&Me&&(tt.length>0&&Be++,e.texStorage2D(34067,Be,ee,nt[0].width,nt[0].height));for(let yt=0;yt<6;yt++)if(H){Te?e.texSubImage2D(34069+yt,0,0,0,nt[yt].width,nt[yt].height,Pt,se,nt[yt].data):e.texImage2D(34069+yt,0,ee,nt[yt].width,nt[yt].height,0,Pt,se,nt[yt].data);for(let kt=0;kt<tt.length;kt++){const oe=tt[kt].image[yt].image;Te?e.texSubImage2D(34069+yt,kt+1,0,0,oe.width,oe.height,Pt,se,oe.data):e.texImage2D(34069+yt,kt+1,ee,oe.width,oe.height,0,Pt,se,oe.data)}}else{Te?e.texSubImage2D(34069+yt,0,0,0,Pt,se,nt[yt]):e.texImage2D(34069+yt,0,ee,Pt,se,nt[yt]);for(let kt=0;kt<tt.length;kt++){const Wt=tt[kt];Te?e.texSubImage2D(34069+yt,kt+1,0,0,Pt,se,Wt.image[yt]):e.texImage2D(34069+yt,kt+1,ee,Pt,se,Wt.image[yt])}}}_(P,Vt)&&C(34067),Nt.__version=Mt.version,P.onUpdate&&P.onUpdate(P)}U.__version=P.version}function pt(U,P,ut,It,Mt){const Nt=r.convert(ut.format,ut.encoding),ne=r.convert(ut.type),H=S(ut.internalFormat,Nt,ne,ut.encoding);n.get(P).__hasExternalTextures||(Mt===32879||Mt===35866?e.texImage3D(Mt,0,H,P.width,P.height,P.depth,0,Nt,ne,null):e.texImage2D(Mt,0,H,P.width,P.height,0,Nt,ne,null)),e.bindFramebuffer(36160,U),Jt(P)?d.framebufferTexture2DMultisampleEXT(36160,It,Mt,n.get(ut).__webglTexture,0,zt(P)):(Mt===3553||Mt>=34069&&Mt<=34074)&&s.framebufferTexture2D(36160,It,Mt,n.get(ut).__webglTexture,0),e.bindFramebuffer(36160,null)}function st(U,P,ut){if(s.bindRenderbuffer(36161,U),P.depthBuffer&&!P.stencilBuffer){let It=33189;if(ut||Jt(P)){const Mt=P.depthTexture;Mt&&Mt.isDepthTexture&&(Mt.type===la?It=36012:Mt.type===aa&&(It=33190));const Nt=zt(P);Jt(P)?d.renderbufferStorageMultisampleEXT(36161,Nt,It,P.width,P.height):s.renderbufferStorageMultisample(36161,Nt,It,P.width,P.height)}else s.renderbufferStorage(36161,It,P.width,P.height);s.framebufferRenderbuffer(36160,36096,36161,U)}else if(P.depthBuffer&&P.stencilBuffer){const It=zt(P);ut&&Jt(P)===!1?s.renderbufferStorageMultisample(36161,It,35056,P.width,P.height):Jt(P)?d.renderbufferStorageMultisampleEXT(36161,It,35056,P.width,P.height):s.renderbufferStorage(36161,34041,P.width,P.height),s.framebufferRenderbuffer(36160,33306,36161,U)}else{const It=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let Mt=0;Mt<It.length;Mt++){const Nt=It[Mt],ne=r.convert(Nt.format,Nt.encoding),H=r.convert(Nt.type),nt=S(Nt.internalFormat,ne,H,Nt.encoding),Ft=zt(P);ut&&Jt(P)===!1?s.renderbufferStorageMultisample(36161,Ft,nt,P.width,P.height):Jt(P)?d.renderbufferStorageMultisampleEXT(36161,Ft,nt,P.width,P.height):s.renderbufferStorage(36161,nt,P.width,P.height)}}s.bindRenderbuffer(36161,null)}function et(U,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,U),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),V(P.depthTexture,0);const It=n.get(P.depthTexture).__webglTexture,Mt=zt(P);if(P.depthTexture.format===ma)Jt(P)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,It,0,Mt):s.framebufferTexture2D(36160,36096,3553,It,0);else if(P.depthTexture.format===ec)Jt(P)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,It,0,Mt):s.framebufferTexture2D(36160,33306,3553,It,0);else throw new Error("Unknown depthTexture format")}function ct(U){const P=n.get(U),ut=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!P.__autoAllocateDepthBuffer){if(ut)throw new Error("target.depthTexture not supported in Cube render targets");et(P.__webglFramebuffer,U)}else if(ut){P.__webglDepthbuffer=[];for(let It=0;It<6;It++)e.bindFramebuffer(36160,P.__webglFramebuffer[It]),P.__webglDepthbuffer[It]=s.createRenderbuffer(),st(P.__webglDepthbuffer[It],U,!1)}else e.bindFramebuffer(36160,P.__webglFramebuffer),P.__webglDepthbuffer=s.createRenderbuffer(),st(P.__webglDepthbuffer,U,!1);e.bindFramebuffer(36160,null)}function St(U,P,ut){const It=n.get(U);P!==void 0&&pt(It.__webglFramebuffer,U,U.texture,36064,3553),ut!==void 0&&ct(U)}function At(U){const P=U.texture,ut=n.get(U),It=n.get(P);U.addEventListener("dispose",$),U.isWebGLMultipleRenderTargets!==!0&&(It.__webglTexture===void 0&&(It.__webglTexture=s.createTexture()),It.__version=P.version,o.memory.textures++);const Mt=U.isWebGLCubeRenderTarget===!0,Nt=U.isWebGLMultipleRenderTargets===!0,ne=b(U)||a;if(Mt){ut.__webglFramebuffer=[];for(let H=0;H<6;H++)ut.__webglFramebuffer[H]=s.createFramebuffer()}else{if(ut.__webglFramebuffer=s.createFramebuffer(),Nt)if(i.drawBuffers){const H=U.texture;for(let nt=0,Ft=H.length;nt<Ft;nt++){const Vt=n.get(H[nt]);Vt.__webglTexture===void 0&&(Vt.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&U.samples>0&&Jt(U)===!1){const H=Nt?P:[P];ut.__webglMultisampledFramebuffer=s.createFramebuffer(),ut.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,ut.__webglMultisampledFramebuffer);for(let nt=0;nt<H.length;nt++){const Ft=H[nt];ut.__webglColorRenderbuffer[nt]=s.createRenderbuffer(),s.bindRenderbuffer(36161,ut.__webglColorRenderbuffer[nt]);const Vt=r.convert(Ft.format,Ft.encoding),Pt=r.convert(Ft.type),se=S(Ft.internalFormat,Vt,Pt,Ft.encoding,U.isXRRenderTarget===!0),ee=zt(U);s.renderbufferStorageMultisample(36161,ee,se,U.width,U.height),s.framebufferRenderbuffer(36160,36064+nt,36161,ut.__webglColorRenderbuffer[nt])}s.bindRenderbuffer(36161,null),U.depthBuffer&&(ut.__webglDepthRenderbuffer=s.createRenderbuffer(),st(ut.__webglDepthRenderbuffer,U,!0)),e.bindFramebuffer(36160,null)}}if(Mt){e.bindTexture(34067,It.__webglTexture),J(34067,P,ne);for(let H=0;H<6;H++)pt(ut.__webglFramebuffer[H],U,P,36064,34069+H);_(P,ne)&&C(34067),e.unbindTexture()}else if(Nt){const H=U.texture;for(let nt=0,Ft=H.length;nt<Ft;nt++){const Vt=H[nt],Pt=n.get(Vt);e.bindTexture(3553,Pt.__webglTexture),J(3553,Vt,ne),pt(ut.__webglFramebuffer,U,Vt,36064+nt,3553),_(Vt,ne)&&C(3553)}e.unbindTexture()}else{let H=3553;(U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(a?H=U.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(H,It.__webglTexture),J(H,P,ne),pt(ut.__webglFramebuffer,U,P,36064,H),_(P,ne)&&C(H),e.unbindTexture()}U.depthBuffer&&ct(U)}function Ct(U){const P=b(U)||a,ut=U.isWebGLMultipleRenderTargets===!0?U.texture:[U.texture];for(let It=0,Mt=ut.length;It<Mt;It++){const Nt=ut[It];if(_(Nt,P)){const ne=U.isWebGLCubeRenderTarget?34067:3553,H=n.get(Nt).__webglTexture;e.bindTexture(ne,H),C(ne),e.unbindTexture()}}}function Ut(U){if(a&&U.samples>0&&Jt(U)===!1){const P=U.isWebGLMultipleRenderTargets?U.texture:[U.texture],ut=U.width,It=U.height;let Mt=16384;const Nt=[],ne=U.stencilBuffer?33306:36096,H=n.get(U),nt=U.isWebGLMultipleRenderTargets===!0;if(nt)for(let Ft=0;Ft<P.length;Ft++)e.bindFramebuffer(36160,H.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Ft,36161,null),e.bindFramebuffer(36160,H.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Ft,3553,null,0);e.bindFramebuffer(36008,H.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,H.__webglFramebuffer);for(let Ft=0;Ft<P.length;Ft++){Nt.push(36064+Ft),U.depthBuffer&&Nt.push(ne);const Vt=H.__ignoreDepthValues!==void 0?H.__ignoreDepthValues:!1;if(Vt===!1&&(U.depthBuffer&&(Mt|=256),U.stencilBuffer&&(Mt|=1024)),nt&&s.framebufferRenderbuffer(36008,36064,36161,H.__webglColorRenderbuffer[Ft]),Vt===!0&&(s.invalidateFramebuffer(36008,[ne]),s.invalidateFramebuffer(36009,[ne])),nt){const Pt=n.get(P[Ft]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Pt,0)}s.blitFramebuffer(0,0,ut,It,0,0,ut,It,Mt,9728),f&&s.invalidateFramebuffer(36008,Nt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),nt)for(let Ft=0;Ft<P.length;Ft++){e.bindFramebuffer(36160,H.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Ft,36161,H.__webglColorRenderbuffer[Ft]);const Vt=n.get(P[Ft]).__webglTexture;e.bindFramebuffer(36160,H.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Ft,3553,Vt,0)}e.bindFramebuffer(36009,H.__webglMultisampledFramebuffer)}}function zt(U){return Math.min(h,U.samples)}function Jt(U){const P=n.get(U);return a&&U.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function ce(U){const P=o.render.frame;p.get(U)!==P&&(p.set(U,P),U.update())}function xe(U,P){const ut=U.encoding,It=U.format,Mt=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||U.format===Dx||ut!==Sa&&(ut===un?a===!1?t.has("EXT_sRGB")===!0&&It===Ri?(U.format=Dx,U.minFilter=ni,U.generateMipmaps=!1):P=DC.sRGBToLinear(P):(It!==Ri||Mt!==wa)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ut)),P}this.allocateTextureUnit=L,this.resetTextureUnits=B,this.setTexture2D=V,this.setTexture2DArray=q,this.setTexture3D=G,this.setTextureCube=K,this.rebindTextures=St,this.setupRenderTarget=At,this.updateRenderTargetMipmap=Ct,this.updateMultisampleRenderTarget=Ut,this.setupDepthRenderbuffer=ct,this.setupFrameBufferTexture=pt,this.useMultisampledRTT=Jt}function oL(s,t,e){const n=e.isWebGL2;function i(r,o=null){let a;if(r===wa)return 5121;if(r===QN)return 32819;if(r===tR)return 32820;if(r===YN)return 5120;if(r===ZN)return 5122;if(r===NC)return 5123;if(r===JN)return 5124;if(r===aa)return 5125;if(r===la)return 5126;if(r===Su)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===eR)return 6406;if(r===Ri)return 6408;if(r===sR)return 6409;if(r===iR)return 6410;if(r===ma)return 6402;if(r===ec)return 34041;if(r===rR)return 6403;if(r===nR)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===Dx)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===oR)return 36244;if(r===aR)return 33319;if(r===lR)return 33320;if(r===cR)return 36249;if(r===dg||r===fg||r===pg||r===mg)if(o===un)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===dg)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===fg)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===pg)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===mg)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===dg)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===fg)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===pg)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===mg)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===fw||r===pw||r===mw||r===gw)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===fw)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===pw)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===mw)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===gw)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===uR)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===xw||r===yw)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===xw)return o===un?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===yw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===bw||r===vw||r===ww||r===Sw||r===_w||r===Cw||r===Tw||r===Iw||r===Ew||r===Mw||r===Aw||r===kw||r===Nw||r===Rw)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===bw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===vw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===ww)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Sw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===_w)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Cw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Tw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Iw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Ew)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Mw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Aw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===kw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Nw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Rw)return o===un?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===$w)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===$w)return o===un?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===Hl?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class aL extends si{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class zd extends Gn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const lL={type:"move"};class Wg{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new zd,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new zd,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new W,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new W),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new zd,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new W,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new W),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const m=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const y=new zd;y.matrixAutoUpdate=!1,y.visible=!1,c.joints[g.jointName]=y,c.add(y)}const x=c.joints[g.jointName];m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=m.radius),x.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(lL)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class cL extends Bi{constructor(t,e,n,i,r,o,a,l,c,u){if(u=u!==void 0?u:ma,u!==ma&&u!==ec)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===ma&&(n=aa),n===void 0&&u===ec&&(n=Hl),super(null,i,r,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ws,this.minFilter=l!==void 0?l:ws,this.flipY=!1,this.generateMipmaps=!1}}class uL extends Va{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,d=null,f=null;const p=e.getContextAttributes();let g=null,m=null;const x=[],y=[],v=new si;v.layers.enable(1),v.viewport=new Wn;const b=new si;b.layers.enable(2),b.viewport=new Wn;const w=[v,b],_=new aL;_.layers.enable(1),_.layers.enable(2);let C=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(D){let V=x[D];return V===void 0&&(V=new Wg,x[D]=V),V.getTargetRaySpace()},this.getControllerGrip=function(D){let V=x[D];return V===void 0&&(V=new Wg,x[D]=V),V.getGripSpace()},this.getHand=function(D){let V=x[D];return V===void 0&&(V=new Wg,x[D]=V),V.getHandSpace()};function T(D){const V=y.indexOf(D.inputSource);if(V===-1)return;const q=x[V];q!==void 0&&q.dispatchEvent({type:D.type,data:D.inputSource})}function I(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",I),i.removeEventListener("inputsourceschange",M);for(let D=0;D<x.length;D++){const V=y[D];V!==null&&(y[D]=null,x[D].disconnect(V))}C=null,S=null,t.setRenderTarget(g),d=null,h=null,u=null,i=null,m=null,L.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(D){r=D,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(D){a=D,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(D){l=D},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function(D){if(i=D,i!==null){if(g=t.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",I),i.addEventListener("inputsourceschange",M),p.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const V={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,V),i.updateRenderState({baseLayer:d}),m=new _a(d.framebufferWidth,d.framebufferHeight,{format:Ri,type:wa,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let V=null,q=null,G=null;p.depth&&(G=p.stencil?35056:33190,V=p.stencil?ec:ma,q=p.stencil?Hl:aa);const K={colorFormat:32856,depthFormat:G,scaleFactor:r};u=new XRWebGLBinding(i,e),h=u.createProjectionLayer(K),i.updateRenderState({layers:[h]}),m=new _a(h.textureWidth,h.textureHeight,{format:Ri,type:wa,depthTexture:new cL(h.textureWidth,h.textureHeight,q,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const ot=t.properties.get(m);ot.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),L.setContext(i),L.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function M(D){for(let V=0;V<D.removed.length;V++){const q=D.removed[V],G=y.indexOf(q);G>=0&&(y[G]=null,x[G].dispatchEvent({type:"disconnected",data:q}))}for(let V=0;V<D.added.length;V++){const q=D.added[V];let G=y.indexOf(q);if(G===-1){for(let ot=0;ot<x.length;ot++)if(ot>=y.length){y.push(q),G=ot;break}else if(y[ot]===null){y[ot]=q,G=ot;break}if(G===-1)break}const K=x[G];K&&K.dispatchEvent({type:"connected",data:q})}}const $=new W,E=new W;function A(D,V,q){$.setFromMatrixPosition(V.matrixWorld),E.setFromMatrixPosition(q.matrixWorld);const G=$.distanceTo(E),K=V.projectionMatrix.elements,ot=q.projectionMatrix.elements,ht=K[14]/(K[10]-1),J=K[14]/(K[10]+1),gt=(K[9]+1)/K[5],mt=(K[9]-1)/K[5],bt=(K[8]-1)/K[0],pt=(ot[8]+1)/ot[0],st=ht*bt,et=ht*pt,ct=G/(-bt+pt),St=ct*-bt;V.matrixWorld.decompose(D.position,D.quaternion,D.scale),D.translateX(St),D.translateZ(ct),D.matrixWorld.compose(D.position,D.quaternion,D.scale),D.matrixWorldInverse.copy(D.matrixWorld).invert();const At=ht+ct,Ct=J+ct,Ut=st-St,zt=et+(G-St),Jt=gt*J/Ct*At,ce=mt*J/Ct*At;D.projectionMatrix.makePerspective(Ut,zt,Jt,ce,At,Ct)}function k(D,V){V===null?D.matrixWorld.copy(D.matrix):D.matrixWorld.multiplyMatrices(V.matrixWorld,D.matrix),D.matrixWorldInverse.copy(D.matrixWorld).invert()}this.updateCamera=function(D){if(i===null)return;_.near=b.near=v.near=D.near,_.far=b.far=v.far=D.far,(C!==_.near||S!==_.far)&&(i.updateRenderState({depthNear:_.near,depthFar:_.far}),C=_.near,S=_.far);const V=D.parent,q=_.cameras;k(_,V);for(let K=0;K<q.length;K++)k(q[K],V);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),D.matrix.copy(_.matrix),D.matrix.decompose(D.position,D.quaternion,D.scale);const G=D.children;for(let K=0,ot=G.length;K<ot;K++)G[K].updateMatrixWorld(!0);q.length===2?A(_,v,b):_.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(D){h!==null&&(h.fixedFoveation=D),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=D)};let R=null;function B(D,V){if(c=V.getViewerPose(l||o),f=V,c!==null){const q=c.views;d!==null&&(t.setRenderTargetFramebuffer(m,d.framebuffer),t.setRenderTarget(m));let G=!1;q.length!==_.cameras.length&&(_.cameras.length=0,G=!0);for(let K=0;K<q.length;K++){const ot=q[K];let ht=null;if(d!==null)ht=d.getViewport(ot);else{const gt=u.getViewSubImage(h,ot);ht=gt.viewport,K===0&&(t.setRenderTargetTextures(m,gt.colorTexture,h.ignoreDepthValues?void 0:gt.depthStencilTexture),t.setRenderTarget(m))}let J=w[K];J===void 0&&(J=new si,J.layers.enable(K),J.viewport=new Wn,w[K]=J),J.matrix.fromArray(ot.transform.matrix),J.projectionMatrix.fromArray(ot.projectionMatrix),J.viewport.set(ht.x,ht.y,ht.width,ht.height),K===0&&_.matrix.copy(J.matrix),G===!0&&_.cameras.push(J)}}for(let q=0;q<x.length;q++){const G=y[q],K=x[q];G!==null&&K!==void 0&&K.update(G,V,l||o)}R&&R(D,V),f=null}const L=new UC;L.setAnimationLoop(B),this.setAnimationLoop=function(D){R=D},this.dispose=function(){}}}function hL(s,t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,y,v){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),h(g,m),m.isMeshPhysicalMaterial&&d(g,m,v)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),p(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,x,y):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Us&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Us&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const b=s.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*b}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let y;m.map?y=m.map:m.specularMap?y=m.specularMap:m.displacementMap?y=m.displacementMap:m.normalMap?y=m.normalMap:m.bumpMap?y=m.bumpMap:m.roughnessMap?y=m.roughnessMap:m.metalnessMap?y=m.metalnessMap:m.alphaMap?y=m.alphaMap:m.emissiveMap?y=m.emissiveMap:m.clearcoatMap?y=m.clearcoatMap:m.clearcoatNormalMap?y=m.clearcoatNormalMap:m.clearcoatRoughnessMap?y=m.clearcoatRoughnessMap:m.iridescenceMap?y=m.iridescenceMap:m.iridescenceThicknessMap?y=m.iridescenceThicknessMap:m.specularIntensityMap?y=m.specularIntensityMap:m.specularColorMap?y=m.specularColorMap:m.transmissionMap?y=m.transmissionMap:m.thicknessMap?y=m.thicknessMap:m.sheenColorMap?y=m.sheenColorMap:m.sheenRoughnessMap&&(y=m.sheenRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),g.uvTransform.value.copy(y.matrix));let v;m.aoMap?v=m.aoMap:m.lightMap&&(v=m.lightMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uv2Transform.value.copy(v.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,x,y){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=y*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let v;m.map?v=m.map:m.alphaMap&&(v=m.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===Us&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function dL(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(35375):0;function l(y,v){const b=v.program;n.uniformBlockBinding(y,b)}function c(y,v){let b=i[y.id];b===void 0&&(p(y),b=u(y),i[y.id]=b,y.addEventListener("dispose",m));const w=v.program;n.updateUBOMapping(y,w);const _=t.render.frame;r[y.id]!==_&&(d(y),r[y.id]=_)}function u(y){const v=h();y.__bindingPointIndex=v;const b=s.createBuffer(),w=y.__size,_=y.usage;return s.bindBuffer(35345,b),s.bufferData(35345,w,_),s.bindBuffer(35345,null),s.bindBufferBase(35345,v,b),b}function h(){for(let y=0;y<a;y++)if(o.indexOf(y)===-1)return o.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const v=i[y.id],b=y.uniforms,w=y.__cache;s.bindBuffer(35345,v);for(let _=0,C=b.length;_<C;_++){const S=b[_];if(f(S,_,w)===!0){const T=S.value,I=S.__offset;typeof T=="number"?(S.__data[0]=T,s.bufferSubData(35345,I,S.__data)):(S.value.isMatrix3?(S.__data[0]=S.value.elements[0],S.__data[1]=S.value.elements[1],S.__data[2]=S.value.elements[2],S.__data[3]=S.value.elements[0],S.__data[4]=S.value.elements[3],S.__data[5]=S.value.elements[4],S.__data[6]=S.value.elements[5],S.__data[7]=S.value.elements[0],S.__data[8]=S.value.elements[6],S.__data[9]=S.value.elements[7],S.__data[10]=S.value.elements[8],S.__data[11]=S.value.elements[0]):T.toArray(S.__data),s.bufferSubData(35345,I,S.__data))}}s.bindBuffer(35345,null)}function f(y,v,b){const w=y.value;if(b[v]===void 0)return typeof w=="number"?b[v]=w:b[v]=w.clone(),!0;if(typeof w=="number"){if(b[v]!==w)return b[v]=w,!0}else{const _=b[v];if(_.equals(w)===!1)return _.copy(w),!0}return!1}function p(y){const v=y.uniforms;let b=0;const w=16;let _=0;for(let C=0,S=v.length;C<S;C++){const T=v[C],I=g(T);if(T.__data=new Float32Array(I.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=b,C>0){_=b%w;const M=w-_;_!==0&&M-I.boundary<0&&(b+=w-_,T.__offset=b)}b+=I.storage}return _=b%w,_>0&&(b+=w-_),y.__size=b,y.__cache={},this}function g(y){const v=y.value,b={boundary:0,storage:0};return typeof v=="number"?(b.boundary=4,b.storage=4):v.isVector2?(b.boundary=8,b.storage=8):v.isVector3||v.isColor?(b.boundary=16,b.storage=12):v.isVector4?(b.boundary=16,b.storage=16):v.isMatrix3?(b.boundary=48,b.storage=48):v.isMatrix4?(b.boundary=64,b.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),b}function m(y){const v=y.target;v.removeEventListener("dispose",m);const b=o.indexOf(v.__bindingPointIndex);o.splice(b,1),s.deleteBuffer(i[v.id]),delete i[v.id],delete r[v.id]}function x(){for(const y in i)s.deleteBuffer(i[y]);o=[],i={},r={}}return{bind:l,update:c,dispose:x}}function fL(){const s=Df("canvas");return s.style.display="block",s}function XC(s={}){this.isWebGLRenderer=!0;const t=s.canvas!==void 0?s.canvas:fL(),e=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;e!==null?u=e.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let h=null,d=null;const f=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Sa,this.physicallyCorrectLights=!1,this.toneMapping=Wr,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,x=0,y=0,v=null,b=-1,w=null;const _=new Wn,C=new Wn;let S=null,T=t.width,I=t.height,M=1,$=null,E=null;const A=new Wn(0,0,T,I),k=new Wn(0,0,T,I);let R=!1;const B=new B0;let L=!1,D=!1,V=null;const q=new je,G=new Tt,K=new W,ot={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ht(){return v===null?M:1}let J=e;function gt(z,at){for(let xt=0;xt<z.length;xt++){const it=z[xt],wt=t.getContext(it,at);if(wt!==null)return wt}return null}try{const z={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${O0}`),t.addEventListener("webglcontextlost",se,!1),t.addEventListener("webglcontextrestored",ee,!1),t.addEventListener("webglcontextcreationerror",Te,!1),J===null){const at=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&at.shift(),J=gt(at,z),J===null)throw gt(at)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(z){throw console.error("THREE.WebGLRenderer: "+z.message),z}let mt,bt,pt,st,et,ct,St,At,Ct,Ut,zt,Jt,ce,xe,U,P,ut,It,Mt,Nt,ne,H,nt,Ft;function Vt(){mt=new C3(J),bt=new y3(J,mt,s),mt.init(bt),H=new oL(J,mt,bt),pt=new iL(J,mt,bt),st=new E3,et=new GF,ct=new rL(J,mt,pt,et,bt,H,st),St=new v3(g),At=new _3(g),Ct=new LR(J,bt),nt=new g3(J,mt,Ct,bt),Ut=new T3(J,Ct,st,nt),zt=new N3(J,Ut,Ct,st),Mt=new k3(J,bt,ct),P=new b3(et),Jt=new WF(g,St,At,mt,bt,nt,P),ce=new hL(g,et),xe=new qF,U=new JF(mt,bt),It=new m3(g,St,At,pt,zt,u,o),ut=new sL(g,zt,bt),Ft=new dL(J,st,bt,pt),Nt=new x3(J,mt,st,bt),ne=new I3(J,mt,st,bt),st.programs=Jt.programs,g.capabilities=bt,g.extensions=mt,g.properties=et,g.renderLists=xe,g.shadowMap=ut,g.state=pt,g.info=st}Vt();const Pt=new uL(g,J);this.xr=Pt,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const z=mt.get("WEBGL_lose_context");z&&z.loseContext()},this.forceContextRestore=function(){const z=mt.get("WEBGL_lose_context");z&&z.restoreContext()},this.getPixelRatio=function(){return M},this.setPixelRatio=function(z){z!==void 0&&(M=z,this.setSize(T,I,!1))},this.getSize=function(z){return z.set(T,I)},this.setSize=function(z,at,xt){if(Pt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=z,I=at,t.width=Math.floor(z*M),t.height=Math.floor(at*M),xt!==!1&&(t.style.width=z+"px",t.style.height=at+"px"),this.setViewport(0,0,z,at)},this.getDrawingBufferSize=function(z){return z.set(T*M,I*M).floor()},this.setDrawingBufferSize=function(z,at,xt){T=z,I=at,M=xt,t.width=Math.floor(z*xt),t.height=Math.floor(at*xt),this.setViewport(0,0,z,at)},this.getCurrentViewport=function(z){return z.copy(_)},this.getViewport=function(z){return z.copy(A)},this.setViewport=function(z,at,xt,it){z.isVector4?A.set(z.x,z.y,z.z,z.w):A.set(z,at,xt,it),pt.viewport(_.copy(A).multiplyScalar(M).floor())},this.getScissor=function(z){return z.copy(k)},this.setScissor=function(z,at,xt,it){z.isVector4?k.set(z.x,z.y,z.z,z.w):k.set(z,at,xt,it),pt.scissor(C.copy(k).multiplyScalar(M).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(z){pt.setScissorTest(R=z)},this.setOpaqueSort=function(z){$=z},this.setTransparentSort=function(z){E=z},this.getClearColor=function(z){return z.copy(It.getClearColor())},this.setClearColor=function(){It.setClearColor.apply(It,arguments)},this.getClearAlpha=function(){return It.getClearAlpha()},this.setClearAlpha=function(){It.setClearAlpha.apply(It,arguments)},this.clear=function(z=!0,at=!0,xt=!0){let it=0;z&&(it|=16384),at&&(it|=256),xt&&(it|=1024),J.clear(it)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",se,!1),t.removeEventListener("webglcontextrestored",ee,!1),t.removeEventListener("webglcontextcreationerror",Te,!1),xe.dispose(),U.dispose(),et.dispose(),St.dispose(),At.dispose(),zt.dispose(),nt.dispose(),Ft.dispose(),Jt.dispose(),Pt.dispose(),Pt.removeEventListener("sessionstart",Wt),Pt.removeEventListener("sessionend",oe),V&&(V.dispose(),V=null),De.stop()};function se(z){z.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function ee(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const z=st.autoReset,at=ut.enabled,xt=ut.autoUpdate,it=ut.needsUpdate,wt=ut.type;Vt(),st.autoReset=z,ut.enabled=at,ut.autoUpdate=xt,ut.needsUpdate=it,ut.type=wt}function Te(z){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",z.statusMessage)}function Me(z){const at=z.target;at.removeEventListener("dispose",Me),Be(at)}function Be(z){tt(z),et.remove(z)}function tt(z){const at=et.get(z).programs;at!==void 0&&(at.forEach(function(xt){Jt.releaseProgram(xt)}),z.isShaderMaterial&&Jt.releaseShaderCache(z))}this.renderBufferDirect=function(z,at,xt,it,wt,ae){at===null&&(at=ot);const pe=wt.isMesh&&wt.matrixWorld.determinant()<0,we=oN(z,at,xt,it,wt);pt.setMaterial(it,pe);let ye=xt.index;const Fe=xt.attributes.position;if(ye===null){if(Fe===void 0||Fe.count===0)return}else if(ye.count===0)return;let _e=1;it.wireframe===!0&&(ye=Ut.getWireframeAttribute(xt),_e=2),nt.setup(wt,it,we,xt,ye);let Ae,cn=Nt;ye!==null&&(Ae=Ct.get(ye),cn=ne,cn.setIndex(Ae));const Wo=ye!==null?ye.count:Fe.count,rl=xt.drawRange.start*_e,ol=xt.drawRange.count*_e,Ki=ae!==null?ae.start*_e:0,Le=ae!==null?ae.count*_e:1/0,al=Math.max(rl,Ki),vn=Math.min(Wo,rl+ol,Ki+Le)-1,Ks=Math.max(0,vn-al+1);if(Ks!==0){if(wt.isMesh)it.wireframe===!0?(pt.setLineWidth(it.wireframeLinewidth*ht()),cn.setMode(1)):cn.setMode(4);else if(wt.isLine){let to=it.linewidth;to===void 0&&(to=1),pt.setLineWidth(to*ht()),wt.isLineSegments?cn.setMode(1):wt.isLineLoop?cn.setMode(2):cn.setMode(3)}else wt.isPoints?cn.setMode(0):wt.isSprite&&cn.setMode(4);if(wt.isInstancedMesh)cn.renderInstances(al,Ks,wt.count);else if(xt.isInstancedBufferGeometry){const to=Math.min(xt.instanceCount,xt._maxInstanceCount);cn.renderInstances(al,Ks,to)}else cn.render(al,Ks)}},this.compile=function(z,at){function xt(it,wt,ae){it.transparent===!0&&it.side===Cs?(it.side=Us,it.needsUpdate=!0,js(it,wt,ae),it.side=_o,it.needsUpdate=!0,js(it,wt,ae),it.side=Cs):js(it,wt,ae)}d=U.get(z),d.init(),p.push(d),z.traverseVisible(function(it){it.isLight&&it.layers.test(at.layers)&&(d.pushLight(it),it.castShadow&&d.pushShadow(it))}),d.setupLights(g.physicallyCorrectLights),z.traverse(function(it){const wt=it.material;if(wt)if(Array.isArray(wt))for(let ae=0;ae<wt.length;ae++){const pe=wt[ae];xt(pe,z,it)}else xt(wt,z,it)}),p.pop(),d=null};let yt=null;function kt(z){yt&&yt(z)}function Wt(){De.stop()}function oe(){De.start()}const De=new UC;De.setAnimationLoop(kt),typeof self<"u"&&De.setContext(self),this.setAnimationLoop=function(z){yt=z,Pt.setAnimationLoop(z),z===null?De.stop():De.start()},Pt.addEventListener("sessionstart",Wt),Pt.addEventListener("sessionend",oe),this.render=function(z,at){if(at!==void 0&&at.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),at.parent===null&&at.matrixWorldAutoUpdate===!0&&at.updateMatrixWorld(),Pt.enabled===!0&&Pt.isPresenting===!0&&(Pt.cameraAutoUpdate===!0&&Pt.updateCamera(at),at=Pt.getCamera()),z.isScene===!0&&z.onBeforeRender(g,z,at,v),d=U.get(z,p.length),d.init(),p.push(d),q.multiplyMatrices(at.projectionMatrix,at.matrixWorldInverse),B.setFromProjectionMatrix(q),D=this.localClippingEnabled,L=P.init(this.clippingPlanes,D,at),h=xe.get(z,f.length),h.init(),f.push(h),zn(z,at,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort($,E),L===!0&&P.beginShadows();const xt=d.state.shadowsArray;if(ut.render(xt,z,at),L===!0&&P.endShadows(),this.info.autoReset===!0&&this.info.reset(),It.render(h,z),d.setupLights(g.physicallyCorrectLights),at.isArrayCamera){const it=at.cameras;for(let wt=0,ae=it.length;wt<ae;wt++){const pe=it[wt];ns(h,z,pe,pe.viewport)}}else ns(h,z,at);v!==null&&(ct.updateMultisampleRenderTarget(v),ct.updateRenderTargetMipmap(v)),z.isScene===!0&&z.onAfterRender(g,z,at),nt.resetDefaultState(),b=-1,w=null,p.pop(),p.length>0?d=p[p.length-1]:d=null,f.pop(),f.length>0?h=f[f.length-1]:h=null};function zn(z,at,xt,it){if(z.visible===!1)return;if(z.layers.test(at.layers)){if(z.isGroup)xt=z.renderOrder;else if(z.isLOD)z.autoUpdate===!0&&z.update(at);else if(z.isLight)d.pushLight(z),z.castShadow&&d.pushShadow(z);else if(z.isSprite){if(!z.frustumCulled||B.intersectsSprite(z)){it&&K.setFromMatrixPosition(z.matrixWorld).applyMatrix4(q);const pe=zt.update(z),we=z.material;we.visible&&h.push(z,pe,we,xt,K.z,null)}}else if((z.isMesh||z.isLine||z.isPoints)&&(z.isSkinnedMesh&&z.skeleton.frame!==st.render.frame&&(z.skeleton.update(),z.skeleton.frame=st.render.frame),!z.frustumCulled||B.intersectsObject(z))){it&&K.setFromMatrixPosition(z.matrixWorld).applyMatrix4(q);const pe=zt.update(z),we=z.material;if(Array.isArray(we)){const ye=pe.groups;for(let Fe=0,_e=ye.length;Fe<_e;Fe++){const Ae=ye[Fe],cn=we[Ae.materialIndex];cn&&cn.visible&&h.push(z,pe,cn,xt,K.z,Ae)}}else we.visible&&h.push(z,pe,we,xt,K.z,null)}}const ae=z.children;for(let pe=0,we=ae.length;pe<we;pe++)zn(ae[pe],at,xt,it)}function ns(z,at,xt,it){const wt=z.opaque,ae=z.transmissive,pe=z.transparent;d.setupLightsView(xt),ae.length>0&&Vo(wt,at,xt),it&&pt.viewport(_.copy(it)),wt.length>0&&en(wt,at,xt),ae.length>0&&en(ae,at,xt),pe.length>0&&en(pe,at,xt),pt.buffers.depth.setTest(!0),pt.buffers.depth.setMask(!0),pt.buffers.color.setMask(!0),pt.setPolygonOffset(!1)}function Vo(z,at,xt){const it=bt.isWebGL2;V===null&&(V=new _a(1,1,{generateMipmaps:!0,type:mt.has("EXT_color_buffer_half_float")?Su:wa,minFilter:vp,samples:it&&r===!0?4:0})),g.getDrawingBufferSize(G),it?V.setSize(G.x,G.y):V.setSize(Fx(G.x),Fx(G.y));const wt=g.getRenderTarget();g.setRenderTarget(V),g.clear();const ae=g.toneMapping;g.toneMapping=Wr,en(z,at,xt),g.toneMapping=ae,ct.updateMultisampleRenderTarget(V),ct.updateRenderTargetMipmap(V),g.setRenderTarget(wt)}function en(z,at,xt){const it=at.isScene===!0?at.overrideMaterial:null;for(let wt=0,ae=z.length;wt<ae;wt++){const pe=z[wt],we=pe.object,ye=pe.geometry,Fe=it===null?pe.material:it,_e=pe.group;we.layers.test(xt.layers)&&Cr(we,at,xt,ye,Fe,_e)}}function Cr(z,at,xt,it,wt,ae){z.onBeforeRender(g,at,xt,it,wt,ae),z.modelViewMatrix.multiplyMatrices(xt.matrixWorldInverse,z.matrixWorld),z.normalMatrix.getNormalMatrix(z.modelViewMatrix),wt.onBeforeRender(g,at,xt,it,z,ae),wt.transparent===!0&&wt.side===Cs?(wt.side=Us,wt.needsUpdate=!0,g.renderBufferDirect(xt,at,it,wt,z,ae),wt.side=_o,wt.needsUpdate=!0,g.renderBufferDirect(xt,at,it,wt,z,ae),wt.side=Cs):g.renderBufferDirect(xt,at,it,wt,z,ae),z.onAfterRender(g,at,xt,it,wt,ae)}function js(z,at,xt){at.isScene!==!0&&(at=ot);const it=et.get(z),wt=d.state.lights,ae=d.state.shadowsArray,pe=wt.state.version,we=Jt.getParameters(z,wt.state,ae,at,xt),ye=Jt.getProgramCacheKey(we);let Fe=it.programs;it.environment=z.isMeshStandardMaterial?at.environment:null,it.fog=at.fog,it.envMap=(z.isMeshStandardMaterial?At:St).get(z.envMap||it.environment),Fe===void 0&&(z.addEventListener("dispose",Me),Fe=new Map,it.programs=Fe);let _e=Fe.get(ye);if(_e!==void 0){if(it.currentProgram===_e&&it.lightsStateVersion===pe)return tw(z,we),_e}else we.uniforms=Jt.getUniforms(z),z.onBuild(xt,we,g),z.onBeforeCompile(we,g),_e=Jt.acquireProgram(we,ye),Fe.set(ye,_e),it.uniforms=we.uniforms;const Ae=it.uniforms;(!z.isShaderMaterial&&!z.isRawShaderMaterial||z.clipping===!0)&&(Ae.clippingPlanes=P.uniform),tw(z,we),it.needsLights=lN(z),it.lightsStateVersion=pe,it.needsLights&&(Ae.ambientLightColor.value=wt.state.ambient,Ae.lightProbe.value=wt.state.probe,Ae.directionalLights.value=wt.state.directional,Ae.directionalLightShadows.value=wt.state.directionalShadow,Ae.spotLights.value=wt.state.spot,Ae.spotLightShadows.value=wt.state.spotShadow,Ae.rectAreaLights.value=wt.state.rectArea,Ae.ltc_1.value=wt.state.rectAreaLTC1,Ae.ltc_2.value=wt.state.rectAreaLTC2,Ae.pointLights.value=wt.state.point,Ae.pointLightShadows.value=wt.state.pointShadow,Ae.hemisphereLights.value=wt.state.hemi,Ae.directionalShadowMap.value=wt.state.directionalShadowMap,Ae.directionalShadowMatrix.value=wt.state.directionalShadowMatrix,Ae.spotShadowMap.value=wt.state.spotShadowMap,Ae.spotLightMatrix.value=wt.state.spotLightMatrix,Ae.spotLightMap.value=wt.state.spotLightMap,Ae.pointShadowMap.value=wt.state.pointShadowMap,Ae.pointShadowMatrix.value=wt.state.pointShadowMatrix);const cn=_e.getUniforms(),Wo=Tf.seqWithValue(cn.seq,Ae);return it.currentProgram=_e,it.uniformsList=Wo,_e}function tw(z,at){const xt=et.get(z);xt.outputEncoding=at.outputEncoding,xt.instancing=at.instancing,xt.skinning=at.skinning,xt.morphTargets=at.morphTargets,xt.morphNormals=at.morphNormals,xt.morphColors=at.morphColors,xt.morphTargetsCount=at.morphTargetsCount,xt.numClippingPlanes=at.numClippingPlanes,xt.numIntersection=at.numClipIntersection,xt.vertexAlphas=at.vertexAlphas,xt.vertexTangents=at.vertexTangents,xt.toneMapping=at.toneMapping}function oN(z,at,xt,it,wt){at.isScene!==!0&&(at=ot),ct.resetTextureUnits();const ae=at.fog,pe=it.isMeshStandardMaterial?at.environment:null,we=v===null?g.outputEncoding:v.isXRRenderTarget===!0?v.texture.encoding:Sa,ye=(it.isMeshStandardMaterial?At:St).get(it.envMap||pe),Fe=it.vertexColors===!0&&!!xt.attributes.color&&xt.attributes.color.itemSize===4,_e=!!it.normalMap&&!!xt.attributes.tangent,Ae=!!xt.morphAttributes.position,cn=!!xt.morphAttributes.normal,Wo=!!xt.morphAttributes.color,rl=it.toneMapped?g.toneMapping:Wr,ol=xt.morphAttributes.position||xt.morphAttributes.normal||xt.morphAttributes.color,Ki=ol!==void 0?ol.length:0,Le=et.get(it),al=d.state.lights;if(L===!0&&(D===!0||z!==w)){const Ds=z===w&&it.id===b;P.setState(it,z,Ds)}let vn=!1;it.version===Le.__version?(Le.needsLights&&Le.lightsStateVersion!==al.state.version||Le.outputEncoding!==we||wt.isInstancedMesh&&Le.instancing===!1||!wt.isInstancedMesh&&Le.instancing===!0||wt.isSkinnedMesh&&Le.skinning===!1||!wt.isSkinnedMesh&&Le.skinning===!0||Le.envMap!==ye||it.fog===!0&&Le.fog!==ae||Le.numClippingPlanes!==void 0&&(Le.numClippingPlanes!==P.numPlanes||Le.numIntersection!==P.numIntersection)||Le.vertexAlphas!==Fe||Le.vertexTangents!==_e||Le.morphTargets!==Ae||Le.morphNormals!==cn||Le.morphColors!==Wo||Le.toneMapping!==rl||bt.isWebGL2===!0&&Le.morphTargetsCount!==Ki)&&(vn=!0):(vn=!0,Le.__version=it.version);let Ks=Le.currentProgram;vn===!0&&(Ks=js(it,at,wt));let to=!1,Uc=!1,lg=!1;const us=Ks.getUniforms(),Go=Le.uniforms;if(pt.useProgram(Ks.program)&&(to=!0,Uc=!0,lg=!0),it.id!==b&&(b=it.id,Uc=!0),to||w!==z){if(us.setValue(J,"projectionMatrix",z.projectionMatrix),bt.logarithmicDepthBuffer&&us.setValue(J,"logDepthBufFC",2/(Math.log(z.far+1)/Math.LN2)),w!==z&&(w=z,Uc=!0,lg=!0),it.isShaderMaterial||it.isMeshPhongMaterial||it.isMeshToonMaterial||it.isMeshStandardMaterial||it.envMap){const Ds=us.map.cameraPosition;Ds!==void 0&&Ds.setValue(J,K.setFromMatrixPosition(z.matrixWorld))}(it.isMeshPhongMaterial||it.isMeshToonMaterial||it.isMeshLambertMaterial||it.isMeshBasicMaterial||it.isMeshStandardMaterial||it.isShaderMaterial)&&us.setValue(J,"isOrthographic",z.isOrthographicCamera===!0),(it.isMeshPhongMaterial||it.isMeshToonMaterial||it.isMeshLambertMaterial||it.isMeshBasicMaterial||it.isMeshStandardMaterial||it.isShaderMaterial||it.isShadowMaterial||wt.isSkinnedMesh)&&us.setValue(J,"viewMatrix",z.matrixWorldInverse)}if(wt.isSkinnedMesh){us.setOptional(J,wt,"bindMatrix"),us.setOptional(J,wt,"bindMatrixInverse");const Ds=wt.skeleton;Ds&&(bt.floatVertexTextures?(Ds.boneTexture===null&&Ds.computeBoneTexture(),us.setValue(J,"boneTexture",Ds.boneTexture,ct),us.setValue(J,"boneTextureSize",Ds.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const cg=xt.morphAttributes;if((cg.position!==void 0||cg.normal!==void 0||cg.color!==void 0&&bt.isWebGL2===!0)&&Mt.update(wt,xt,it,Ks),(Uc||Le.receiveShadow!==wt.receiveShadow)&&(Le.receiveShadow=wt.receiveShadow,us.setValue(J,"receiveShadow",wt.receiveShadow)),it.isMeshGouraudMaterial&&it.envMap!==null&&(Go.envMap.value=ye,Go.flipEnvMap.value=ye.isCubeTexture&&ye.isRenderTargetTexture===!1?-1:1),Uc&&(us.setValue(J,"toneMappingExposure",g.toneMappingExposure),Le.needsLights&&aN(Go,lg),ae&&it.fog===!0&&ce.refreshFogUniforms(Go,ae),ce.refreshMaterialUniforms(Go,it,M,I,V),Tf.upload(J,Le.uniformsList,Go,ct)),it.isShaderMaterial&&it.uniformsNeedUpdate===!0&&(Tf.upload(J,Le.uniformsList,Go,ct),it.uniformsNeedUpdate=!1),it.isSpriteMaterial&&us.setValue(J,"center",wt.center),us.setValue(J,"modelViewMatrix",wt.modelViewMatrix),us.setValue(J,"normalMatrix",wt.normalMatrix),us.setValue(J,"modelMatrix",wt.matrixWorld),it.isShaderMaterial||it.isRawShaderMaterial){const Ds=it.uniformsGroups;for(let ug=0,cN=Ds.length;ug<cN;ug++)if(bt.isWebGL2){const ew=Ds[ug];Ft.update(ew,Ks),Ft.bind(ew,Ks)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Ks}function aN(z,at){z.ambientLightColor.needsUpdate=at,z.lightProbe.needsUpdate=at,z.directionalLights.needsUpdate=at,z.directionalLightShadows.needsUpdate=at,z.pointLights.needsUpdate=at,z.pointLightShadows.needsUpdate=at,z.spotLights.needsUpdate=at,z.spotLightShadows.needsUpdate=at,z.rectAreaLights.needsUpdate=at,z.hemisphereLights.needsUpdate=at}function lN(z){return z.isMeshLambertMaterial||z.isMeshToonMaterial||z.isMeshPhongMaterial||z.isMeshStandardMaterial||z.isShadowMaterial||z.isShaderMaterial&&z.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return v},this.setRenderTargetTextures=function(z,at,xt){et.get(z.texture).__webglTexture=at,et.get(z.depthTexture).__webglTexture=xt;const it=et.get(z);it.__hasExternalTextures=!0,it.__hasExternalTextures&&(it.__autoAllocateDepthBuffer=xt===void 0,it.__autoAllocateDepthBuffer||mt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),it.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(z,at){const xt=et.get(z);xt.__webglFramebuffer=at,xt.__useDefaultFramebuffer=at===void 0},this.setRenderTarget=function(z,at=0,xt=0){v=z,x=at,y=xt;let it=!0,wt=null,ae=!1,pe=!1;if(z){const ye=et.get(z);ye.__useDefaultFramebuffer!==void 0?(pt.bindFramebuffer(36160,null),it=!1):ye.__webglFramebuffer===void 0?ct.setupRenderTarget(z):ye.__hasExternalTextures&&ct.rebindTextures(z,et.get(z.texture).__webglTexture,et.get(z.depthTexture).__webglTexture);const Fe=z.texture;(Fe.isData3DTexture||Fe.isDataArrayTexture||Fe.isCompressedArrayTexture)&&(pe=!0);const _e=et.get(z).__webglFramebuffer;z.isWebGLCubeRenderTarget?(wt=_e[at],ae=!0):bt.isWebGL2&&z.samples>0&&ct.useMultisampledRTT(z)===!1?wt=et.get(z).__webglMultisampledFramebuffer:wt=_e,_.copy(z.viewport),C.copy(z.scissor),S=z.scissorTest}else _.copy(A).multiplyScalar(M).floor(),C.copy(k).multiplyScalar(M).floor(),S=R;if(pt.bindFramebuffer(36160,wt)&&bt.drawBuffers&&it&&pt.drawBuffers(z,wt),pt.viewport(_),pt.scissor(C),pt.setScissorTest(S),ae){const ye=et.get(z.texture);J.framebufferTexture2D(36160,36064,34069+at,ye.__webglTexture,xt)}else if(pe){const ye=et.get(z.texture),Fe=at||0;J.framebufferTextureLayer(36160,36064,ye.__webglTexture,xt||0,Fe)}b=-1},this.readRenderTargetPixels=function(z,at,xt,it,wt,ae,pe){if(!(z&&z.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let we=et.get(z).__webglFramebuffer;if(z.isWebGLCubeRenderTarget&&pe!==void 0&&(we=we[pe]),we){pt.bindFramebuffer(36160,we);try{const ye=z.texture,Fe=ye.format,_e=ye.type;if(Fe!==Ri&&H.convert(Fe)!==J.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ae=_e===Su&&(mt.has("EXT_color_buffer_half_float")||bt.isWebGL2&&mt.has("EXT_color_buffer_float"));if(_e!==wa&&H.convert(_e)!==J.getParameter(35738)&&!(_e===la&&(bt.isWebGL2||mt.has("OES_texture_float")||mt.has("WEBGL_color_buffer_float")))&&!Ae){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}at>=0&&at<=z.width-it&&xt>=0&&xt<=z.height-wt&&J.readPixels(at,xt,it,wt,H.convert(Fe),H.convert(_e),ae)}finally{const ye=v!==null?et.get(v).__webglFramebuffer:null;pt.bindFramebuffer(36160,ye)}}},this.copyFramebufferToTexture=function(z,at,xt=0){const it=Math.pow(2,-xt),wt=Math.floor(at.image.width*it),ae=Math.floor(at.image.height*it);ct.setTexture2D(at,0),J.copyTexSubImage2D(3553,xt,0,0,z.x,z.y,wt,ae),pt.unbindTexture()},this.copyTextureToTexture=function(z,at,xt,it=0){const wt=at.image.width,ae=at.image.height,pe=H.convert(xt.format),we=H.convert(xt.type);ct.setTexture2D(xt,0),J.pixelStorei(37440,xt.flipY),J.pixelStorei(37441,xt.premultiplyAlpha),J.pixelStorei(3317,xt.unpackAlignment),at.isDataTexture?J.texSubImage2D(3553,it,z.x,z.y,wt,ae,pe,we,at.image.data):at.isCompressedTexture?J.compressedTexSubImage2D(3553,it,z.x,z.y,at.mipmaps[0].width,at.mipmaps[0].height,pe,at.mipmaps[0].data):J.texSubImage2D(3553,it,z.x,z.y,pe,we,at.image),it===0&&xt.generateMipmaps&&J.generateMipmap(3553),pt.unbindTexture()},this.copyTextureToTexture3D=function(z,at,xt,it,wt=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ae=z.max.x-z.min.x+1,pe=z.max.y-z.min.y+1,we=z.max.z-z.min.z+1,ye=H.convert(it.format),Fe=H.convert(it.type);let _e;if(it.isData3DTexture)ct.setTexture3D(it,0),_e=32879;else if(it.isDataArrayTexture)ct.setTexture2DArray(it,0),_e=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}J.pixelStorei(37440,it.flipY),J.pixelStorei(37441,it.premultiplyAlpha),J.pixelStorei(3317,it.unpackAlignment);const Ae=J.getParameter(3314),cn=J.getParameter(32878),Wo=J.getParameter(3316),rl=J.getParameter(3315),ol=J.getParameter(32877),Ki=xt.isCompressedTexture?xt.mipmaps[0]:xt.image;J.pixelStorei(3314,Ki.width),J.pixelStorei(32878,Ki.height),J.pixelStorei(3316,z.min.x),J.pixelStorei(3315,z.min.y),J.pixelStorei(32877,z.min.z),xt.isDataTexture||xt.isData3DTexture?J.texSubImage3D(_e,wt,at.x,at.y,at.z,ae,pe,we,ye,Fe,Ki.data):xt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),J.compressedTexSubImage3D(_e,wt,at.x,at.y,at.z,ae,pe,we,ye,Ki.data)):J.texSubImage3D(_e,wt,at.x,at.y,at.z,ae,pe,we,ye,Fe,Ki),J.pixelStorei(3314,Ae),J.pixelStorei(32878,cn),J.pixelStorei(3316,Wo),J.pixelStorei(3315,rl),J.pixelStorei(32877,ol),wt===0&&it.generateMipmaps&&J.generateMipmap(_e),pt.unbindTexture()},this.initTexture=function(z){z.isCubeTexture?ct.setTextureCube(z,0):z.isData3DTexture?ct.setTexture3D(z,0):z.isDataArrayTexture||z.isCompressedArrayTexture?ct.setTexture2DArray(z,0):ct.setTexture2D(z,0),pt.unbindTexture()},this.resetState=function(){x=0,y=0,v=null,pt.reset(),nt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class pL extends XC{}pL.prototype.isWebGL1Renderer=!0;class mL extends Gn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class jC extends ko{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Pe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const g1=new W,x1=new W,y1=new je,Gg=new Sp,Bd=new Gu;class gL extends Gn{constructor(t=new ts,e=new jC){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)g1.fromBufferAttribute(e,i-1),x1.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=g1.distanceTo(x1);t.setAttribute("lineDistance",new ln(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Bd.copy(n.boundingSphere),Bd.applyMatrix4(i),Bd.radius+=r,t.ray.intersectsSphere(Bd)===!1)return;y1.copy(i).invert(),Gg.copy(t.ray).applyMatrix4(y1);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new W,u=new W,h=new W,d=new W,f=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(p!==null){const x=Math.max(0,o.start),y=Math.min(p.count,o.start+o.count);for(let v=x,b=y-1;v<b;v+=f){const w=p.getX(v),_=p.getX(v+1);if(c.fromBufferAttribute(m,w),u.fromBufferAttribute(m,_),Gg.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const S=t.ray.origin.distanceTo(d);S<t.near||S>t.far||e.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),y=Math.min(m.count,o.start+o.count);for(let v=x,b=y-1;v<b;v+=f){if(c.fromBufferAttribute(m,v),u.fromBufferAttribute(m,v+1),Gg.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const _=t.ray.origin.distanceTo(d);_<t.near||_>t.far||e.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class _r{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=e||(o.isVector2?new Tt:new W);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new W,i=[],r=[],o=[],a=new W,l=new je;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new W)}r[0]=new W,o[0]=new W;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Yn(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(Yn(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(f=-f);for(let p=1;p<=t;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class V0 extends _r{constructor(t=0,e=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new Tt,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class xL extends V0{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function W0(){let s=0,t=0,e=0,n=0;function i(r,o,a,l){s=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let d=(o-r)/c-(a-r)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+t*r+e*o+n*a}}}const Ud=new W,Hg=new W0,qg=new W0,Xg=new W0;class Px extends _r{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new W){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(Ud.subVectors(i[0],i[1]).add(i[0]),c=Ud);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(Ud.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=Ud),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),Hg.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,g,m),qg.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,g,m),Xg.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,g,m)}else this.curveType==="catmullrom"&&(Hg.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),qg.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),Xg.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(Hg.calc(l),qg.calc(l),Xg.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new W().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function b1(s,t,e,n,i){const r=(n-t)*.5,o=(i-e)*.5,a=s*s,l=s*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*s+e}function yL(s,t){const e=1-s;return e*e*t}function bL(s,t){return 2*(1-s)*s*t}function vL(s,t){return s*s*t}function pu(s,t,e,n){return yL(s,t)+bL(s,e)+vL(s,n)}function wL(s,t){const e=1-s;return e*e*e*t}function SL(s,t){const e=1-s;return 3*e*e*s*t}function _L(s,t){return 3*(1-s)*s*s*t}function CL(s,t){return s*s*s*t}function mu(s,t,e,n,i){return wL(s,t)+SL(s,e)+_L(s,n)+CL(s,i)}class KC extends _r{constructor(t=new Tt,e=new Tt,n=new Tt,i=new Tt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Tt){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(mu(t,i.x,r.x,o.x,a.x),mu(t,i.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class TL extends _r{constructor(t=new W,e=new W,n=new W,i=new W){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new W){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(mu(t,i.x,r.x,o.x,a.x),mu(t,i.y,r.y,o.y,a.y),mu(t,i.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class G0 extends _r{constructor(t=new Tt,e=new Tt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Tt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Tt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class IL extends _r{constructor(t=new W,e=new W){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new W){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class YC extends _r{constructor(t=new Tt,e=new Tt,n=new Tt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Tt){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(pu(t,i.x,r.x,o.x),pu(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class EL extends _r{constructor(t=new W,e=new W,n=new W){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new W){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(pu(t,i.x,r.x,o.x),pu(t,i.y,r.y,o.y),pu(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ZC extends _r{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Tt){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(b1(a,l.x,c.x,u.x,h.x),b1(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Tt().fromArray(i))}return this}}var JC=Object.freeze({__proto__:null,ArcCurve:xL,CatmullRomCurve3:Px,CubicBezierCurve:KC,CubicBezierCurve3:TL,EllipseCurve:V0,LineCurve:G0,LineCurve3:IL,QuadraticBezierCurve:YC,QuadraticBezierCurve3:EL,SplineCurve:ZC});class ML extends _r{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new G0(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new JC[i.type]().fromJSON(i))}return this}}class Ox extends ML{constructor(t){super(),this.type="Path",this.currentPoint=new Tt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new G0(this.currentPoint.clone(),new Tt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new YC(this.currentPoint.clone(),new Tt(t,e),new Tt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,o){const a=new KC(this.currentPoint.clone(),new Tt(t,e),new Tt(n,i),new Tt(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new ZC(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,r,o),this}absarc(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this}ellipse(t,e,n,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,r,o,a,l),this}absellipse(t,e,n,i,r,o,a,l){const c=new V0(t,e,n,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Ff extends ts{constructor(t=1,e=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new W,u=new Tt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=e;h++,d+=3){const f=n+h/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[d]/t+1)/2,u.y=(o[d+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new ln(o,3)),this.setAttribute("normal",new ln(a,3)),this.setAttribute("uv",new ln(l,2))}static fromJSON(t){return new Ff(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class ua extends ts{constructor(t=1,e=1,n=1,i=8,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const g=[],m=n/2;let x=0;y(),o===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(u),this.setAttribute("position",new ln(h,3)),this.setAttribute("normal",new ln(d,3)),this.setAttribute("uv",new ln(f,2));function y(){const b=new W,w=new W;let _=0;const C=(e-t)/n;for(let S=0;S<=r;S++){const T=[],I=S/r,M=I*(e-t)+t;for(let $=0;$<=i;$++){const E=$/i,A=E*l+a,k=Math.sin(A),R=Math.cos(A);w.x=M*k,w.y=-I*n+m,w.z=M*R,h.push(w.x,w.y,w.z),b.set(k,C,R).normalize(),d.push(b.x,b.y,b.z),f.push(E,1-I),T.push(p++)}g.push(T)}for(let S=0;S<i;S++)for(let T=0;T<r;T++){const I=g[T][S],M=g[T+1][S],$=g[T+1][S+1],E=g[T][S+1];u.push(I,M,E),u.push(M,$,E),_+=6}c.addGroup(x,_,0),x+=_}function v(b){const w=p,_=new Tt,C=new W;let S=0;const T=b===!0?t:e,I=b===!0?1:-1;for(let $=1;$<=i;$++)h.push(0,m*I,0),d.push(0,I,0),f.push(.5,.5),p++;const M=p;for(let $=0;$<=i;$++){const A=$/i*l+a,k=Math.cos(A),R=Math.sin(A);C.x=T*R,C.y=m*I,C.z=T*k,h.push(C.x,C.y,C.z),d.push(0,I,0),_.x=k*.5+.5,_.y=R*.5*I+.5,f.push(_.x,_.y),p++}for(let $=0;$<i;$++){const E=w+$,A=M+$;b===!0?u.push(A,A+1,E):u.push(A+1,A,E),S+=3}c.addGroup(x,S,b===!0?1:2),x+=S}}static fromJSON(t){return new ua(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Lf extends Ox{constructor(t){super(t),this.uuid=wc(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Ox().fromJSON(i))}return this}}const AL={triangulate:function(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=QC(s,0,i,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,d,f;if(n&&(r=DL(s,t,r,e)),s.length>80*e){a=c=s[0],l=u=s[1];for(let p=e;p<i;p+=e)h=s[p],d=s[p+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=f!==0?32767/f:0}return _u(r,o,e,a,l,f,0),o}};function QC(s,t,e,n,i){let r,o;if(i===HL(s,t,e,n)>0)for(r=t;r<e;r+=n)o=v1(r,s[r],s[r+1],o);else for(r=e-n;r>=t;r-=n)o=v1(r,s[r],s[r+1],o);return o&&Tp(o,o.next)&&(Tu(o),o=o.next),o}function Ia(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Tp(e,e.next)||on(e.prev,e,e.next)===0)){if(Tu(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function _u(s,t,e,n,i,r,o){if(!s)return;!o&&r&&zL(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?NL(s,n,i,r):kL(s)){t.push(l.i/e|0),t.push(s.i/e|0),t.push(c.i/e|0),Tu(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=RL(Ia(s),t,e),_u(s,t,e,n,i,r,2)):o===2&&$L(s,t,e,n,i,r):_u(Ia(s),t,e,n,i,r,1);break}}}function kL(s){const t=s.prev,e=s,n=s.next;if(on(t,e,n)>=0)return!1;const i=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<r?i<o?i:o:r<o?r:o,h=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==t;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&zl(i,a,r,l,o,c,p.x,p.y)&&on(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function NL(s,t,e,n){const i=s.prev,r=s,o=s.next;if(on(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,u=i.y,h=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=u<h?u<d?u:d:h<d?h:d,g=a>l?a>c?a:c:l>c?l:c,m=u>h?u>d?u:d:h>d?h:d,x=zx(f,p,t,e,n),y=zx(g,m,t,e,n);let v=s.prevZ,b=s.nextZ;for(;v&&v.z>=x&&b&&b.z<=y;){if(v.x>=f&&v.x<=g&&v.y>=p&&v.y<=m&&v!==i&&v!==o&&zl(a,u,l,h,c,d,v.x,v.y)&&on(v.prev,v,v.next)>=0||(v=v.prevZ,b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&zl(a,u,l,h,c,d,b.x,b.y)&&on(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;v&&v.z>=x;){if(v.x>=f&&v.x<=g&&v.y>=p&&v.y<=m&&v!==i&&v!==o&&zl(a,u,l,h,c,d,v.x,v.y)&&on(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;b&&b.z<=y;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&zl(a,u,l,h,c,d,b.x,b.y)&&on(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function RL(s,t,e){let n=s;do{const i=n.prev,r=n.next.next;!Tp(i,r)&&tT(i,n,n.next,r)&&Cu(i,r)&&Cu(r,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),Tu(n),Tu(n.next),n=s=r),n=n.next}while(n!==s);return Ia(n)}function $L(s,t,e,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&VL(o,a)){let l=eT(o,a);o=Ia(o,o.next),l=Ia(l,l.next),_u(o,t,e,n,i,r,0),_u(l,t,e,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function DL(s,t,e,n){const i=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:s.length,c=QC(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(UL(c));for(i.sort(FL),r=0;r<i.length;r++)e=LL(i[r],e);return e}function FL(s,t){return s.x-t.x}function LL(s,t){const e=PL(s,t);if(!e)return t;const n=eT(e,s);return Ia(n,n.next),Ia(e,e.next)}function PL(s,t){let e=t,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=r&&d>n&&(n=d,i=e.x<e.next.x?e:e.next,d===r))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,h;e=i;do r>=e.x&&e.x>=l&&r!==e.x&&zl(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(h=Math.abs(o-e.y)/(r-e.x),Cu(e,s)&&(h<u||h===u&&(e.x>i.x||e.x===i.x&&OL(i,e)))&&(i=e,u=h)),e=e.next;while(e!==a);return i}function OL(s,t){return on(s.prev,s,t.prev)<0&&on(t.next,s,s.next)<0}function zL(s,t,e,n){let i=s;do i.z===0&&(i.z=zx(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,BL(i)}function BL(s){let t,e,n,i,r,o,a,l,c=1;do{for(e=s,s=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;e=n}r.nextZ=null,c*=2}while(o>1);return s}function zx(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function UL(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function zl(s,t,e,n,i,r,o,a){return(i-o)*(t-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(i-o)*(n-a)}function VL(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!WL(s,t)&&(Cu(s,t)&&Cu(t,s)&&GL(s,t)&&(on(s.prev,s,t.prev)||on(s,t.prev,t))||Tp(s,t)&&on(s.prev,s,s.next)>0&&on(t.prev,t,t.next)>0)}function on(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Tp(s,t){return s.x===t.x&&s.y===t.y}function tT(s,t,e,n){const i=Wd(on(s,t,e)),r=Wd(on(s,t,n)),o=Wd(on(e,n,s)),a=Wd(on(e,n,t));return!!(i!==r&&o!==a||i===0&&Vd(s,e,t)||r===0&&Vd(s,n,t)||o===0&&Vd(e,s,n)||a===0&&Vd(e,t,n))}function Vd(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Wd(s){return s>0?1:s<0?-1:0}function WL(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&tT(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function Cu(s,t){return on(s.prev,s,s.next)<0?on(s,t,s.next)>=0&&on(s,s.prev,t)>=0:on(s,t,s.prev)<0||on(s,s.next,t)<0}function GL(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function eT(s,t){const e=new Bx(s.i,s.x,s.y),n=new Bx(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function v1(s,t,e,n){const i=new Bx(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Tu(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Bx(s,t,e){this.i=s,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function HL(s,t,e,n){let i=0;for(let r=t,o=e-n;r<e;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class mo{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return mo.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];w1(t),S1(n,t);let o=t.length;e.forEach(w1);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,S1(n,e[l]);const a=AL.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function w1(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function S1(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class H0 extends ts{constructor(t=new Lf([new Tt(.5,.5),new Tt(-.5,.5),new Tt(-.5,-.5),new Tt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new ln(i,3)),this.setAttribute("uv",new ln(r,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1,h=e.depth!==void 0?e.depth:1;let d=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.bevelThickness!==void 0?e.bevelThickness:.2,p=e.bevelSize!==void 0?e.bevelSize:f-.1,g=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const x=e.extrudePath,y=e.UVGenerator!==void 0?e.UVGenerator:qL;let v,b=!1,w,_,C,S;x&&(v=x.getSpacedPoints(u),b=!0,d=!1,w=x.computeFrenetFrames(u,!1),_=new W,C=new W,S=new W),d||(m=0,f=0,p=0,g=0);const T=a.extractPoints(c);let I=T.shape;const M=T.holes;if(!mo.isClockWise(I)){I=I.reverse();for(let et=0,ct=M.length;et<ct;et++){const St=M[et];mo.isClockWise(St)&&(M[et]=St.reverse())}}const E=mo.triangulateShape(I,M),A=I;for(let et=0,ct=M.length;et<ct;et++){const St=M[et];I=I.concat(St)}function k(et,ct,St){return ct||console.error("THREE.ExtrudeGeometry: vec does not exist"),ct.clone().multiplyScalar(St).add(et)}const R=I.length,B=E.length;function L(et,ct,St){let At,Ct,Ut;const zt=et.x-ct.x,Jt=et.y-ct.y,ce=St.x-et.x,xe=St.y-et.y,U=zt*zt+Jt*Jt,P=zt*xe-Jt*ce;if(Math.abs(P)>Number.EPSILON){const ut=Math.sqrt(U),It=Math.sqrt(ce*ce+xe*xe),Mt=ct.x-Jt/ut,Nt=ct.y+zt/ut,ne=St.x-xe/It,H=St.y+ce/It,nt=((ne-Mt)*xe-(H-Nt)*ce)/(zt*xe-Jt*ce);At=Mt+zt*nt-et.x,Ct=Nt+Jt*nt-et.y;const Ft=At*At+Ct*Ct;if(Ft<=2)return new Tt(At,Ct);Ut=Math.sqrt(Ft/2)}else{let ut=!1;zt>Number.EPSILON?ce>Number.EPSILON&&(ut=!0):zt<-Number.EPSILON?ce<-Number.EPSILON&&(ut=!0):Math.sign(Jt)===Math.sign(xe)&&(ut=!0),ut?(At=-Jt,Ct=zt,Ut=Math.sqrt(U)):(At=zt,Ct=Jt,Ut=Math.sqrt(U/2))}return new Tt(At/Ut,Ct/Ut)}const D=[];for(let et=0,ct=A.length,St=ct-1,At=et+1;et<ct;et++,St++,At++)St===ct&&(St=0),At===ct&&(At=0),D[et]=L(A[et],A[St],A[At]);const V=[];let q,G=D.concat();for(let et=0,ct=M.length;et<ct;et++){const St=M[et];q=[];for(let At=0,Ct=St.length,Ut=Ct-1,zt=At+1;At<Ct;At++,Ut++,zt++)Ut===Ct&&(Ut=0),zt===Ct&&(zt=0),q[At]=L(St[At],St[Ut],St[zt]);V.push(q),G=G.concat(q)}for(let et=0;et<m;et++){const ct=et/m,St=f*Math.cos(ct*Math.PI/2),At=p*Math.sin(ct*Math.PI/2)+g;for(let Ct=0,Ut=A.length;Ct<Ut;Ct++){const zt=k(A[Ct],D[Ct],At);gt(zt.x,zt.y,-St)}for(let Ct=0,Ut=M.length;Ct<Ut;Ct++){const zt=M[Ct];q=V[Ct];for(let Jt=0,ce=zt.length;Jt<ce;Jt++){const xe=k(zt[Jt],q[Jt],At);gt(xe.x,xe.y,-St)}}}const K=p+g;for(let et=0;et<R;et++){const ct=d?k(I[et],G[et],K):I[et];b?(C.copy(w.normals[0]).multiplyScalar(ct.x),_.copy(w.binormals[0]).multiplyScalar(ct.y),S.copy(v[0]).add(C).add(_),gt(S.x,S.y,S.z)):gt(ct.x,ct.y,0)}for(let et=1;et<=u;et++)for(let ct=0;ct<R;ct++){const St=d?k(I[ct],G[ct],K):I[ct];b?(C.copy(w.normals[et]).multiplyScalar(St.x),_.copy(w.binormals[et]).multiplyScalar(St.y),S.copy(v[et]).add(C).add(_),gt(S.x,S.y,S.z)):gt(St.x,St.y,h/u*et)}for(let et=m-1;et>=0;et--){const ct=et/m,St=f*Math.cos(ct*Math.PI/2),At=p*Math.sin(ct*Math.PI/2)+g;for(let Ct=0,Ut=A.length;Ct<Ut;Ct++){const zt=k(A[Ct],D[Ct],At);gt(zt.x,zt.y,h+St)}for(let Ct=0,Ut=M.length;Ct<Ut;Ct++){const zt=M[Ct];q=V[Ct];for(let Jt=0,ce=zt.length;Jt<ce;Jt++){const xe=k(zt[Jt],q[Jt],At);b?gt(xe.x,xe.y+v[u-1].y,v[u-1].x+St):gt(xe.x,xe.y,h+St)}}}ot(),ht();function ot(){const et=i.length/3;if(d){let ct=0,St=R*ct;for(let At=0;At<B;At++){const Ct=E[At];mt(Ct[2]+St,Ct[1]+St,Ct[0]+St)}ct=u+m*2,St=R*ct;for(let At=0;At<B;At++){const Ct=E[At];mt(Ct[0]+St,Ct[1]+St,Ct[2]+St)}}else{for(let ct=0;ct<B;ct++){const St=E[ct];mt(St[2],St[1],St[0])}for(let ct=0;ct<B;ct++){const St=E[ct];mt(St[0]+R*u,St[1]+R*u,St[2]+R*u)}}n.addGroup(et,i.length/3-et,0)}function ht(){const et=i.length/3;let ct=0;J(A,ct),ct+=A.length;for(let St=0,At=M.length;St<At;St++){const Ct=M[St];J(Ct,ct),ct+=Ct.length}n.addGroup(et,i.length/3-et,1)}function J(et,ct){let St=et.length;for(;--St>=0;){const At=St;let Ct=St-1;Ct<0&&(Ct=et.length-1);for(let Ut=0,zt=u+m*2;Ut<zt;Ut++){const Jt=R*Ut,ce=R*(Ut+1),xe=ct+At+Jt,U=ct+Ct+Jt,P=ct+Ct+ce,ut=ct+At+ce;bt(xe,U,P,ut)}}}function gt(et,ct,St){l.push(et),l.push(ct),l.push(St)}function mt(et,ct,St){pt(et),pt(ct),pt(St);const At=i.length/3,Ct=y.generateTopUV(n,i,At-3,At-2,At-1);st(Ct[0]),st(Ct[1]),st(Ct[2])}function bt(et,ct,St,At){pt(et),pt(ct),pt(At),pt(ct),pt(St),pt(At);const Ct=i.length/3,Ut=y.generateSideWallUV(n,i,Ct-6,Ct-3,Ct-2,Ct-1);st(Ut[0]),st(Ut[1]),st(Ut[3]),st(Ut[1]),st(Ut[2]),st(Ut[3])}function pt(et){i.push(l[et*3+0]),i.push(l[et*3+1]),i.push(l[et*3+2])}function st(et){r.push(et.x),r.push(et.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return XL(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,o=t.shapes.length;r<o;r++){const a=e[t.shapes[r]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new JC[i.type]().fromJSON(i)),new H0(n,t.options)}}const qL={generateTopUV:function(s,t,e,n,i){const r=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new Tt(r,o),new Tt(a,l),new Tt(c,u)]},generateSideWallUV:function(s,t,e,n,i,r){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],h=t[n*3+2],d=t[i*3],f=t[i*3+1],p=t[i*3+2],g=t[r*3],m=t[r*3+1],x=t[r*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new Tt(o,1-l),new Tt(c,1-h),new Tt(d,1-p),new Tt(g,1-x)]:[new Tt(a,1-l),new Tt(u,1-h),new Tt(f,1-p),new Tt(m,1-x)]}};function XL(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];e.shapes.push(r.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class q0 extends ts{constructor(t=.5,e=1,n=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=t;const d=(e-t)/i,f=new W,p=new Tt;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const x=r+m/n*o;f.x=h*Math.cos(x),f.y=h*Math.sin(x),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,u.push(p.x,p.y)}h+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let x=0;x<n;x++){const y=x+m,v=y,b=y+n+1,w=y+n+2,_=y+1;a.push(v,b,_),a.push(b,w,_)}}this.setIndex(a),this.setAttribute("position",new ln(l,3)),this.setAttribute("normal",new ln(c,3)),this.setAttribute("uv",new ln(u,2))}static fromJSON(t){return new q0(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class X0 extends ts{constructor(t=new Lf([new Tt(0,.5),new Tt(-.5,-.5),new Tt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new ln(i,3)),this.setAttribute("normal",new ln(r,3)),this.setAttribute("uv",new ln(o,2));function c(u){const h=i.length/3,d=u.extractPoints(e);let f=d.shape;const p=d.holes;mo.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,x=p.length;m<x;m++){const y=p[m];mo.isClockWise(y)===!0&&(p[m]=y.reverse())}const g=mo.triangulateShape(f,p);for(let m=0,x=p.length;m<x;m++){const y=p[m];f=f.concat(y)}for(let m=0,x=f.length;m<x;m++){const y=f[m];i.push(y.x,y.y,0),r.push(0,0,1),o.push(y.x,y.y)}for(let m=0,x=g.length;m<x;m++){const y=g[m],v=y[0]+h,b=y[1]+h,w=y[2]+h;n.push(v,b,w),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return jL(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const o=e[t.shapes[i]];n.push(o)}return new X0(n,t.curveSegments)}}function jL(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class Ha extends ko{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Pe(16777215),this.specular=new Pe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wp,this.normalScale=new Tt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=yp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class nT extends ko{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wp,this.normalScale=new Tt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class KL extends ko{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wp,this.normalScale=new Tt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=yp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class sT extends Gn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Pe(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const jg=new je,_1=new W,C1=new W;class YL{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Tt(512,512),this.map=null,this.mapPass=null,this.matrix=new je,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new B0,this._frameExtents=new Tt(1,1),this._viewportCount=1,this._viewports=[new Wn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;_1.setFromMatrixPosition(t.matrixWorld),e.position.copy(_1),C1.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(C1),e.updateMatrixWorld(),jg.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jg),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(jg)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class ZL extends YL{constructor(){super(new VC(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class JL extends sT{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Gn.DefaultUp),this.updateMatrix(),this.target=new Gn,this.shadow=new ZL}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class QL extends sT{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class tP{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=T1(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=T1();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function T1(){return(typeof performance>"u"?Date:performance).now()}class iT{constructor(t,e,n=0,i=1/0){this.ray=new Sp(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new z0,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Ux(t,this,n,e),n.sort(I1),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Ux(t[i],this,n,e);return n.sort(I1),n}}function I1(s,t){return s.distance-t.distance}function Ux(s,t,e,n){if(s.layers.test(t.layers)&&s.raycast(t,e),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)Ux(i[r],t,e,!0)}}class E1{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Yn(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const M1=new W,Gd=new W;class Gr{constructor(t=new W,e=new W){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){M1.subVectors(t,this.start),Gd.subVectors(this.end,this.start);const n=Gd.dot(Gd);let r=Gd.dot(M1)/n;return e&&(r=Yn(r,0,1)),r}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const A1=new W;let Hd,Kg;class eP extends Gn{constructor(t=new W(0,0,1),e=new W(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Hd===void 0&&(Hd=new ts,Hd.setAttribute("position",new ln([0,0,0,0,1,0],3)),Kg=new ua(0,.5,1,5,1),Kg.translate(0,-.5,0)),this.position.copy(e),this.line=new gL(Hd,new jC({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Je(Kg,new Wa({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{A1.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(A1,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:O0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=O0);class $i{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new N);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new N);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new $i);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],u=n[4],h=n[5],d=n[6],f=n[7],p=n[8],g=i[0],m=i[1],x=i[2],y=i[3],v=i[4],b=i[5],w=i[6],_=i[7],C=i[8];return r[0]=o*g+a*y+l*w,r[1]=o*m+a*v+l*_,r[2]=o*x+a*b+l*C,r[3]=c*g+u*y+h*w,r[4]=c*m+u*v+h*_,r[5]=c*x+u*b+h*C,r[6]=d*g+f*y+p*w,r[7]=d*m+f*v+p*_,r[8]=d*x+f*b+p*C,e}scale(t,e){e===void 0&&(e=new $i);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new N);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=t.x,r[3+4*1]=t.y,r[3+4*2]=t.z;let l=3;const c=l;let u;const h=4;let d;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){u=h;do d=h-u,r[d+i*o]+=r[d+i*a];while(--u);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const f=r[o+i*a]/r[o+i*o];u=h;do d=h-u,r[d+i*a]=d<=o?0:r[d+i*a]-r[d+i*o]*f;while(--u)}}while(--l);if(e.z=r[2*i+3]/r[2*i+2],e.y=(r[1*i+3]-r[1*i+2]*e.z)/r[1*i+1],e.x=(r[0*i+3]-r[0*i+2]*e.z-r[0*i+1]*e.y)/r[0*i+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new $i);const e=3,n=6,i=nP;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const u=n;let h;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=u;do h=u-c,i[h+n*r]+=i[h+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const d=i[r+n*o]/i[r+n*r];c=u;do h=u-c,i[h+n*o]=h<=r?0:i[h+n*o]-i[h+n*r]*d;while(--c)}}while(--a);r=2;do{o=r-1;do{const d=i[r+n*o]/i[r+n*r];c=n;do h=n-c,i[h+n*o]=i[h+n*o]-i[h+n*r]*d;while(--c)}while(o--)}while(--r);r=2;do{const d=1/i[r+n*r];c=n;do h=n-c,i[h+n*r]=i[h+n*r]*d;while(--c)}while(r--);r=2;do{o=2;do{if(h=i[e+o+n*r],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(r,o,h)}while(o--)}while(r--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,u=e*a,h=e*l,d=n*a,f=n*l,p=i*l,g=r*o,m=r*a,x=r*l,y=this.elements;return y[3*0+0]=1-(d+p),y[3*0+1]=u-x,y[3*0+2]=h+m,y[3*1+0]=u+x,y[3*1+1]=1-(c+p),y[3*1+2]=f-g,y[3*2+0]=h-m,y[3*2+1]=f+g,y[3*2+2]=1-(c+d),this}transpose(t){t===void 0&&(t=new $i);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const nP=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class N{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new N);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new N(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new N(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new $i([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new N);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new N);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new N),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new N),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new N),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=sP,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=iP;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(k1),k1.almostEquals(t,e)}clone(){return new N(this.x,this.y,this.z)}}N.ZERO=new N(0,0,0);N.UNIT_X=new N(1,0,0);N.UNIT_Y=new N(0,1,0);N.UNIT_Z=new N(0,0,1);const sP=new N,iP=new N,k1=new N;class Hs{constructor(t){t===void 0&&(t={}),this.lowerBound=new N,this.upperBound=new N,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,N1),c=N1),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new Hs().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,u=this.upperBound;t.copy(c),e.set(u.x,c.y,c.z),n.set(u.x,u.y,c.z),i.set(c.x,u.y,u.z),r.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(t,e){const n=R1,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=R1,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,u=(this.upperBound.y-n.y)*r,h=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,f=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(h,d)),p=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(h,d));return!(p<0||f>p)}}const N1=new N,R1=[new N,new N,new N,new N,new N,new N,new N,new N];class $1{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class rT{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,t)}return this}}class hn{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new N),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=rP,i=oP;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new hn);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,u=t.w;return e.x=n*u+o*a+i*c-r*l,e.y=i*u+o*l+r*a-n*c,e.z=r*u+o*c+n*l-i*a,e.w=o*u-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new hn);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new hn),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new N);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*n+a*r-l*i,h=c*i+l*n-o*r,d=c*r+o*i-a*n,f=-o*n-a*i-l*r;return e.x=u*c+f*-o+h*-l-d*-a,e.y=h*c+f*-a+d*-o-u*-l,e.z=d*c+f*-l+u*-a-h*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(e){case"YZX":const u=o*a+l*c;if(u>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),u<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const h=o*o,d=a*a,f=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*f),i=Math.asin(2*u),r=Math.atan2(2*o*c-2*a*l,1-2*h-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),u=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="YXZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="ZXY"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="ZYX"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="YZX"?(this.x=l*o*a+r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a-l*c*u):i==="XZY"&&(this.x=l*o*a-r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a+l*c*u),this}clone(){return new hn(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new hn);const i=this.x,r=this.y,o=this.z,a=this.w;let l=t.x,c=t.y,u=t.z,h=t.w,d,f,p,g,m;return f=i*l+r*c+o*u+a*h,f<0&&(f=-f,l=-l,c=-c,u=-u,h=-h),1-f>1e-6?(d=Math.acos(f),p=Math.sin(d),g=Math.sin((1-e)*d)/p,m=Math.sin(e*d)/p):(g=1-e,m=e),n.x=g*i+m*l,n.y=g*r+m*c,n.z=g*o+m*u,n.w=g*a+m*h,n}integrate(t,e,n,i){i===void 0&&(i=new hn);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,u=this.z,h=this.w,d=e*.5;return i.x+=d*(r*h+o*u-a*c),i.y+=d*(o*h+a*l-r*u),i.z+=d*(a*h+r*c-o*l),i.w+=d*(-r*l-o*c-a*u),i}}const rP=new N,oP=new N,aP={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Gt{constructor(t){t===void 0&&(t={}),this.id=Gt.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Gt.idCounter=0;Gt.types=aP;class $e{constructor(t){t===void 0&&(t={}),this.position=new N,this.quaternion=new hn,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return $e.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return $e.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new N),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new N),n.vsub(t,i),e.conjugate(D1),D1.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new N),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new N),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new N),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const D1=new hn;class gu extends Gt{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:Gt.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new N;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let u=!1;for(let h=0;h!==n.length;h++)if(n[h].almostEquals(i)||n[h].almostEquals(i)){u=!0;break}u||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new N;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[t].length;i++)console.warn(`.vertices[${this.faces[t][i]}] = Vec3(${this.vertices[this.faces[t][i]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];gu.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new N,o=new N;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const u=new N;let h=-1,d=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),r.vmult(u,u);const g=u.dot(o);g>d&&(d=g,h=p)}const f=[];for(let p=0;p<n.faces[h].length;p++){const g=n.vertices[n.faces[h][p]],m=new N;m.copy(g),r.vmult(m,m),i.vadd(m,m),f.push(m)}h>=0&&this.clipFaceAgainstHull(o,t,e,f,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new N,u=new N,h=new N,d=new N,f=new N,p=new N;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let x=0;x!==m.uniqueAxes.length;x++){n.vmult(m.uniqueAxes[x],c);const y=m.testSepAxis(c,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(c))}else{const x=a?a.length:m.faces.length;for(let y=0;y<x;y++){const v=a?a[y]:y;c.copy(m.faceNormals[v]),n.vmult(c,c);const b=m.testSepAxis(c,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(c))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){r.vmult(t.uniqueAxes[x],u);const y=m.testSepAxis(u,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(u))}else{const x=l?l.length:t.faces.length;for(let y=0;y<x;y++){const v=l?l[y]:y;u.copy(t.faceNormals[v]),r.vmult(u,u);const b=m.testSepAxis(u,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(u))}}for(let x=0;x!==m.uniqueEdges.length;x++){n.vmult(m.uniqueEdges[x],d);for(let y=0;y!==t.uniqueEdges.length;y++)if(r.vmult(t.uniqueEdges[y],f),d.cross(f,p),!p.almostZero()){p.normalize();const v=m.testSepAxis(p,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(p))}}return i.vsub(e,h),h.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){const a=this;gu.project(a,t,n,i,Yg),gu.project(e,t,r,o,Zg);const l=Yg[0],c=Yg[1],u=Zg[0],h=Zg[1];if(l<h||u<c)return!1;const d=l-h,f=u-c;return d<f?d:f}calculateLocalInertia(t,e){const n=new N,i=new N;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new N,c=new N,u=new N,h=new N,d=new N,f=new N,p=new N,g=new N,m=this,x=[],y=i,v=x;let b=-1,w=Number.MAX_VALUE;for(let I=0;I<m.faces.length;I++){l.copy(m.faceNormals[I]),n.vmult(l,l);const M=l.dot(t);M<w&&(w=M,b=I)}if(b<0)return;const _=m.faces[b];_.connectedFaces=[];for(let I=0;I<m.faces.length;I++)for(let M=0;M<m.faces[I].length;M++)_.indexOf(m.faces[I][M])!==-1&&I!==b&&_.connectedFaces.indexOf(I)===-1&&_.connectedFaces.push(I);const C=_.length;for(let I=0;I<C;I++){const M=m.vertices[_[I]],$=m.vertices[_[(I+1)%C]];M.vsub($,c),u.copy(c),n.vmult(u,u),e.vadd(u,u),h.copy(this.faceNormals[b]),n.vmult(h,h),e.vadd(h,h),u.cross(h,d),d.negate(d),f.copy(M),n.vmult(f,f),e.vadd(f,f);const E=_.connectedFaces[I];p.copy(this.faceNormals[E]);const A=this.getPlaneConstantOfFace(E);g.copy(p),n.vmult(g,g);const k=A-g.dot(e);for(this.clipFaceAgainstPlane(y,v,g,k);y.length;)y.shift();for(;v.length;)y.push(v.shift())}p.copy(this.faceNormals[b]);const S=this.getPlaneConstantOfFace(b);g.copy(p),n.vmult(g,g);const T=S-g.dot(e);for(let I=0;I<y.length;I++){let M=g.dot(y[I])+T;if(M<=r&&(console.log(`clamped: depth=${M} to minDist=${r}`),M=r),M<=o){const $=y[I];if(M<=1e-6){const E={point:$,normal:g,depth:M};a.push(E)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let u=0;u<a;u++){if(c=t[u],o=n.dot(c)+i,r<0)if(o<0){const h=new N;h.copy(c),e.push(h)}else{const h=new N;l.lerp(c,r/(r-o),h),e.push(h)}else if(o<0){const h=new N;l.lerp(c,r/(r-o),h),e.push(h),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new N);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new N);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,u,h,d=new N;for(let f=0;f<r.length;f++){d.copy(r[f]),e.vmult(d,d),t.vadd(d,d);const p=d;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(a===void 0||p.y<a)&&(a=p.y),(u===void 0||p.y>u)&&(u=p.y),(l===void 0||p.z<l)&&(l=p.z),(h===void 0||p.z>h)&&(h=p.z)}n.set(o,a,l),i.set(c,u,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new N);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new N;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=e[n[a][0]],u=new N;t.vsub(c,u);const h=l.dot(u),d=new N;o.vsub(c,d);const f=l.dot(d);if(h<0&&f>0||h>0&&f<0)return!1}return r?1:-1}static project(t,e,n,i,r){const o=t.vertices.length,a=lP;let l=0,c=0;const u=cP,h=t.vertices;u.setZero(),$e.vectorToLocalFrame(n,i,e,a),$e.pointToLocalFrame(n,i,u,u);const d=u.dot(a);c=l=h[0].dot(a);for(let f=1;f<o;f++){const p=h[f].dot(a);p>l&&(l=p),p<c&&(c=p)}if(c-=d,l-=d,c>l){const f=c;c=l,l=f}r[0]=l,r[1]=c}}const Yg=[],Zg=[];new N;const lP=new N,cP=new N;class qu extends Gt{constructor(t){super({type:Gt.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=N,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new gu({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new N),qu.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)lo.set(r[o][0],r[o][1],r[o][2]),e.vmult(lo,lo),t.vadd(lo,lo),n(lo.x,lo.y,lo.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;Yi[0].set(r.x,r.y,r.z),Yi[1].set(-r.x,r.y,r.z),Yi[2].set(-r.x,-r.y,r.z),Yi[3].set(-r.x,-r.y,-r.z),Yi[4].set(r.x,-r.y,-r.z),Yi[5].set(r.x,r.y,-r.z),Yi[6].set(-r.x,r.y,-r.z),Yi[7].set(r.x,-r.y,r.z);const o=Yi[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=Yi[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,u=l.y,h=l.z;c>i.x&&(i.x=c),u>i.y&&(i.y=u),h>i.z&&(i.z=h),c<n.x&&(n.x=c),u<n.y&&(n.y=u),h<n.z&&(n.z=h)}}}const lo=new N,Yi=[new N,new N,new N,new N,new N,new N,new N,new N],j0={DYNAMIC:1,STATIC:2,KINEMATIC:4},K0={AWAKE:0,SLEEPY:1,SLEEPING:2};class Bt extends rT{constructor(t){t===void 0&&(t={}),super(),this.id=Bt.idCounter++,this.index=-1,this.world=null,this.vlambda=new N,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new N,this.previousPosition=new N,this.interpolatedPosition=new N,this.initPosition=new N,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new N,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new N,this.force=new N;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?Bt.STATIC:Bt.DYNAMIC,typeof t.type==typeof Bt.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=Bt.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new N,this.quaternion=new hn,this.initQuaternion=new hn,this.previousQuaternion=new hn,this.interpolatedQuaternion=new hn,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new N,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new N,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new N,this.invInertia=new N,this.invInertiaWorld=new $i,this.invMassSolve=0,this.invInertiaSolve=new N,this.invInertiaWorldSolve=new $i,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new N(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new N(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new Hs,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new N,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=Bt.AWAKE,this.wakeUpAfterNarrowphase=!1,t===Bt.SLEEPING&&this.dispatchEvent(Bt.wakeupEvent)}sleep(){this.sleepState=Bt.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===Bt.AWAKE&&n<i?(this.sleepState=Bt.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(Bt.sleepyEvent)):e===Bt.SLEEPY&&n>i?this.wakeUp():e===Bt.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(Bt.sleepEvent))}}updateSolveMassProperties(){this.sleepState===Bt.SLEEPING||this.type===Bt.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new N),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new N),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new N),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new N),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new N,r=new hn;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=uP,o=hP,a=this.quaternion,l=this.aabb,c=dP;for(let u=0;u!==i;u++){const h=t[u];a.vmult(e[u],r),r.vadd(this.position,r),a.mult(n[u],o),h.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=fP,i=pP;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new N),this.type!==Bt.DYNAMIC)return;this.sleepState===Bt.SLEEPING&&this.wakeUp();const n=gP;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new N),this.type!==Bt.DYNAMIC)return;const n=xP,i=yP;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===Bt.DYNAMIC&&(this.sleepState===Bt.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new N),this.type!==Bt.DYNAMIC)return;this.sleepState===Bt.SLEEPING&&this.wakeUp();const n=e,i=bP;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=vP;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new N),this.type!==Bt.DYNAMIC)return;const n=wP,i=SP;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=_P;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),qu.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new N;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===Bt.DYNAMIC||this.type===Bt.KINEMATIC)||this.sleepState===Bt.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,h=this.invInertiaWorld,d=this.linearFactor,f=u*t;i.x+=a.x*f*d.x,i.y+=a.y*f*d.y,i.z+=a.z*f*d.z;const p=h.elements,g=this.angularFactor,m=l.x*g.x,x=l.y*g.y,y=l.z*g.z;r.x+=t*(p[0]*m+p[1]*x+p[2]*y),r.y+=t*(p[3]*m+p[4]*x+p[5]*y),r.z+=t*(p[6]*m+p[7]*x+p[8]*y),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}Bt.idCounter=0;Bt.COLLIDE_EVENT_NAME="collide";Bt.DYNAMIC=j0.DYNAMIC;Bt.STATIC=j0.STATIC;Bt.KINEMATIC=j0.KINEMATIC;Bt.AWAKE=K0.AWAKE;Bt.SLEEPY=K0.SLEEPY;Bt.SLEEPING=K0.SLEEPING;Bt.wakeupEvent={type:"wakeup"};Bt.sleepyEvent={type:"sleepy"};Bt.sleepEvent={type:"sleep"};const uP=new N,hP=new hn,dP=new Hs,fP=new $i,pP=new $i,mP=new $i,gP=new N,xP=new N,yP=new N,bP=new N,vP=new N,wP=new N,SP=new N,_P=new N;class CP{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&Bt.STATIC)!==0||t.sleepState===Bt.SLEEPING)&&((e.type&Bt.STATIC)!==0||e.sleepState===Bt.SLEEPING))}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=TP;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=IP,i=EP,r=MP,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,u=l<c?`${l},${c}`:`${c},${l}`;n[u]=a,n.keys.push(u)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new N;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const TP=new N;new N;new hn;new N;const IP={keys:[]},EP=[],MP=[];new N;new N;new N;class AP extends CP{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class Pf{constructor(){this.rayFromWorld=new N,this.rayToWorld=new N,this.hitNormalWorld=new N,this.hitPointWorld=new N,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let oT,aT,lT,cT,uT,hT,dT;const Y0={CLOSEST:1,ANY:2,ALL:4};oT=Gt.types.SPHERE;aT=Gt.types.PLANE;lT=Gt.types.BOX;cT=Gt.types.CYLINDER;uT=Gt.types.CONVEXPOLYHEDRON;hT=Gt.types.HEIGHTFIELD;dT=Gt.types.TRIMESH;class Sn{get[oT](){return this._intersectSphere}get[aT](){return this._intersectPlane}get[lT](){return this._intersectBox}get[cT](){return this._intersectConvex}get[uT](){return this._intersectConvex}get[hT](){return this._intersectHeightfield}get[dT](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new N),e===void 0&&(e=new N),this.from=t.clone(),this.to=e.clone(),this.direction=new N,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Sn.ANY,this.result=new Pf,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||Sn.ANY,this.result=e.result||new Pf,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(F1),Jg.length=0,t.broadphase.aabbQuery(t,F1,Jg),this.intersectBodies(Jg),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const i=kP,r=NP;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if(!(n&&!l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){const r=this.from;if(HP(r,this.direction,n)>t.boundingSphereRadius)return;const a=this[t.type];a&&a.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new N(0,0,1);e.vmult(c,c);const u=new N;o.vsub(n,u);const h=u.dot(c);a.vsub(n,u);const d=u.dot(c);if(h*d>0||o.distanceTo(a)<h)return;const f=c.dot(l);if(Math.abs(f)<this.precision)return;const p=new N,g=new N,m=new N;o.vsub(n,p);const x=-c.dot(p)/f;l.scale(x,g),o.vadd(g,m),this.reportIntersection(c,m,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){t.data,t.elementSize;const o=RP;o.from.copy(this.from),o.to.copy(this.to),$e.pointToLocalFrame(n,e,o.from,o.from),$e.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=$P;let l,c,u,h;l=c=0,u=h=t.data.length-1;const d=new Hs;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),u=Math.min(u,a[0]+1),h=Math.min(h,a[1]+1);for(let f=l;f<u;f++)for(let p=c;p<h;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),$e.pointToWorldFrame(n,e,t.pillarOffset,qd),this._intersectConvex(t.pillarConvex,e,qd,i,r,L1),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),$e.pointToWorldFrame(n,e,t.pillarOffset,qd),this._intersectConvex(t.pillarConvex,e,qd,i,r,L1)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),h=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,d=u**2-4*c*h,f=DP,p=FP;if(!(d<0))if(d===0)o.lerp(a,d,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1);else{const g=(-u-Math.sqrt(d))/(2*c),m=(-u+Math.sqrt(d))/(2*c);if(g>=0&&g<=1&&(o.lerp(a,g,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=LP,l=P1,c=o&&o.faceList||null,u=t.faces,h=t.vertices,d=t.faceNormals,f=this.direction,p=this.from,g=this.to,m=p.distanceTo(g),x=c?c.length:u.length,y=this.result;for(let v=0;!y.shouldStop&&v<x;v++){const b=c?c[v]:v,w=u[b],_=d[b],C=e,S=n;l.copy(h[w[0]]),C.vmult(l,l),l.vadd(S,l),l.vsub(p,l),C.vmult(_,a);const T=f.dot(a);if(Math.abs(T)<this.precision)continue;const I=a.dot(l)/T;if(!(I<0)){f.scale(I,bs),bs.vadd(p,bs),Ii.copy(h[w[0]]),C.vmult(Ii,Ii),S.vadd(Ii,Ii);for(let M=1;!y.shouldStop&&M<w.length-1;M++){Zi.copy(h[w[M]]),Ji.copy(h[w[M+1]]),C.vmult(Zi,Zi),C.vmult(Ji,Ji),S.vadd(Zi,Zi),S.vadd(Ji,Ji);const $=bs.distanceTo(p);!(Sn.pointInTriangle(bs,Ii,Zi,Ji)||Sn.pointInTriangle(bs,Zi,Ii,Ji))||$>m||this.reportIntersection(a,bs,r,i,b)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=PP,l=WP,c=GP,u=P1,h=OP,d=zP,f=BP,p=VP,g=UP,m=t.indices;t.vertices;const x=this.from,y=this.to,v=this.direction;c.position.copy(n),c.quaternion.copy(e),$e.vectorToLocalFrame(n,e,v,h),$e.pointToLocalFrame(n,e,x,d),$e.pointToLocalFrame(n,e,y,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,h),h.normalize();const b=d.distanceSquared(f);t.tree.rayQuery(this,c,l);for(let w=0,_=l.length;!this.result.shouldStop&&w!==_;w++){const C=l[w];t.getNormal(C,a),t.getVertex(m[C*3],Ii),Ii.vsub(d,u);const S=h.dot(a),T=a.dot(u)/S;if(T<0)continue;h.scale(T,bs),bs.vadd(d,bs),t.getVertex(m[C*3+1],Zi),t.getVertex(m[C*3+2],Ji);const I=bs.distanceSquared(d);!(Sn.pointInTriangle(bs,Zi,Ii,Ji)||Sn.pointInTriangle(bs,Ii,Zi,Ji))||I>b||($e.vectorToWorldFrame(e,a,g),$e.pointToWorldFrame(n,e,bs,p),this.reportIntersection(g,p,r,i,C))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r<"u"?r:-1,this.mode){case Sn.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case Sn.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case Sn.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(t,e,n,i){i.vsub(e,na),n.vsub(e,qc),t.vsub(e,Qg);const r=na.dot(na),o=na.dot(qc),a=na.dot(Qg),l=qc.dot(qc),c=qc.dot(Qg);let u,h;return(u=l*a-o*c)>=0&&(h=r*c-o*a)>=0&&u+h<r*l-o*o}}Sn.CLOSEST=Y0.CLOSEST;Sn.ANY=Y0.ANY;Sn.ALL=Y0.ALL;const F1=new Hs,Jg=[],qc=new N,Qg=new N,kP=new N,NP=new hn,bs=new N,Ii=new N,Zi=new N,Ji=new N;new N;new Pf;const L1={faceList:[0]},qd=new N,RP=new Sn,$P=[],DP=new N,FP=new N,LP=new N;new N;new N;const P1=new N,PP=new N,OP=new N,zP=new N,BP=new N,UP=new N,VP=new N;new Hs;const WP=[],GP=new $e,na=new N,Xd=new N;function HP(s,t,e){e.vsub(s,na);const n=na.dot(t);return t.scale(n,Xd),Xd.vadd(s,Xd),e.distanceTo(Xd)}class fT{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class Ip{constructor(t,e,n){n===void 0&&(n={}),n=fT.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Ip.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Ip.idCounter=0;class O1{constructor(){this.spatial=new N,this.rotational=new N}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class qa{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=qa.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new O1,this.jacobianElementB=new O1,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*t-i*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,u=i.invMassSolve;return r.scale(c,z1),a.scale(u,B1),n.invInertiaWorldSolve.vmult(o,U1),i.invInertiaWorldSolve.vmult(l,V1),t.multiplyVectors(z1,U1)+e.multiplyVectors(B1,V1)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,jd),c+=jd.dot(t.rotational),l.vmult(e.rotational,jd),c+=jd.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=qP;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}qa.idCounter=0;const z1=new N,B1=new N,U1=new N,V1=new N,jd=new N,qP=new N;class If extends qa{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new N,this.rj=new N,this.ni=new N}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=XP,c=jP,u=i.velocity,h=i.angularVelocity;i.force,i.torque;const d=r.velocity,f=r.angularVelocity;r.force,r.torque;const p=KP,g=this.jacobianElementA,m=this.jacobianElementB,x=this.ni;o.cross(x,l),a.cross(x,c),x.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(x),m.rotational.copy(c),p.copy(r.position),p.vadd(a,p),p.vsub(i.position,p),p.vsub(o,p);const y=x.dot(p),v=this.restitution+1,b=v*d.dot(x)-v*u.dot(x)+f.dot(c)-h.dot(l),w=this.computeGiMf();return-y*e-b*n-t*w}getImpactVelocityAlongNormal(){const t=YP,e=ZP,n=JP,i=QP,r=tO;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const XP=new N,jP=new N,KP=new N,YP=new N,ZP=new N,JP=new N,QP=new N,tO=new N;class eO extends Ip{constructor(t,e,n,i,r){e===void 0&&(e=new N),i===void 0&&(i=new N),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new If(t,n),a=this.equationY=new If(t,n),l=this.equationZ=new If(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}new N;new N;class W1 extends qa{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new N(1,0,0),this.axisB=n.axisB?n.axisB.clone():new N(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=nO,a=sO,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.maxAngle)-i.dot(r),h=this.computeGW(),d=this.computeGiMf();return-u*e-h*n-t*d}}const nO=new N,sO=new N;new N;new N;new N;new N;class iO extends qa{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new N,this.axisB=new N,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*e-t*l}}class Kd extends eO{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new N,o=n.pivotB?n.pivotB.clone():new N;super(t,r,e,o,i),(this.axisA=n.axisA?n.axisA.clone():new N(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new N(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new W1(t,e,n),u=this.rotationalEquation2=new W1(t,e,n),h=this.motorEquation=new iO(t,e,i);h.enabled=!1,this.equations.push(c,u,h)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=rO,a=oO,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const rO=new N,oO=new N;class G1 extends qa{constructor(t,e,n){super(t,e,-n,n),this.ri=new N,this.rj=new N,this.t=new N}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=aO,o=lO,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),h=this.computeGiMf();return-u*e-t*h}}const aO=new N,lO=new N;class Ep{constructor(t,e,n){n=fT.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Ep.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Ep.idCounter=0;class Xa{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=Xa.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}Xa.idCounter=0;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new Sn;new N;new N;new N;new N(1,0,0),new N(0,1,0),new N(0,0,1);new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;class Yd extends Gt{constructor(t){if(super({type:Gt.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new N);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}new N;new N;new N;new N;new N;new N;new N;new N;new N;class cO extends Gt{constructor(){super({type:Gt.types.PLANE}),this.worldNormal=new N,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new N),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,i){kr.set(0,0,1),e.vmult(kr,kr);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),kr.x===1?i.x=t.x:kr.x===-1&&(n.x=t.x),kr.y===1?i.y=t.y:kr.y===-1&&(n.y=t.y),kr.z===1?i.z=t.z:kr.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const kr=new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new N;new Hs;new N;new Hs;new N;new N;new N;new N;new N;new N;new N;new Hs;new N;new $e;new Hs;class uO{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class hO extends uO{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,u=t;let h,d,f,p,g,m;if(a!==0)for(let b=0;b!==c;b++)l[b].updateSolveMassProperties();const x=fO,y=pO,v=dO;x.length=a,y.length=a,v.length=a;for(let b=0;b!==a;b++){const w=o[b];v[b]=0,y[b]=w.computeB(u),x[b]=1/w.computeC()}if(a!==0){for(let _=0;_!==c;_++){const C=l[_],S=C.vlambda,T=C.wlambda;S.set(0,0,0),T.set(0,0,0)}for(n=0;n!==i;n++){p=0;for(let _=0;_!==a;_++){const C=o[_];h=y[_],d=x[_],m=v[_],g=C.computeGWlambda(),f=d*(h-g-C.eps*m),m+f<C.minForce?f=C.minForce-m:m+f>C.maxForce&&(f=C.maxForce-m),v[_]+=f,p+=f>0?f:-f,C.addToWlambda(f)}if(p*p<r)break}for(let _=0;_!==c;_++){const C=l[_],S=C.velocity,T=C.angularVelocity;C.vlambda.vmul(C.linearFactor,C.vlambda),S.vadd(C.vlambda,S),C.wlambda.vmul(C.angularFactor,C.wlambda),T.vadd(C.wlambda,T)}let b=o.length;const w=1/u;for(;b--;)o[b].multiplier=v[b]*w}return n}}const dO=[],fO=[],pO=[];Bt.STATIC;class mO{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class gO extends mO{constructor(){super(...arguments),this.type=N}constructObject(){return new N}}const Ze={sphereSphere:Gt.types.SPHERE,spherePlane:Gt.types.SPHERE|Gt.types.PLANE,boxBox:Gt.types.BOX|Gt.types.BOX,sphereBox:Gt.types.SPHERE|Gt.types.BOX,planeBox:Gt.types.PLANE|Gt.types.BOX,convexConvex:Gt.types.CONVEXPOLYHEDRON,sphereConvex:Gt.types.SPHERE|Gt.types.CONVEXPOLYHEDRON,planeConvex:Gt.types.PLANE|Gt.types.CONVEXPOLYHEDRON,boxConvex:Gt.types.BOX|Gt.types.CONVEXPOLYHEDRON,sphereHeightfield:Gt.types.SPHERE|Gt.types.HEIGHTFIELD,boxHeightfield:Gt.types.BOX|Gt.types.HEIGHTFIELD,convexHeightfield:Gt.types.CONVEXPOLYHEDRON|Gt.types.HEIGHTFIELD,sphereParticle:Gt.types.PARTICLE|Gt.types.SPHERE,planeParticle:Gt.types.PLANE|Gt.types.PARTICLE,boxParticle:Gt.types.BOX|Gt.types.PARTICLE,convexParticle:Gt.types.PARTICLE|Gt.types.CONVEXPOLYHEDRON,cylinderCylinder:Gt.types.CYLINDER,sphereCylinder:Gt.types.SPHERE|Gt.types.CYLINDER,planeCylinder:Gt.types.PLANE|Gt.types.CYLINDER,boxCylinder:Gt.types.BOX|Gt.types.CYLINDER,convexCylinder:Gt.types.CONVEXPOLYHEDRON|Gt.types.CYLINDER,heightfieldCylinder:Gt.types.HEIGHTFIELD|Gt.types.CYLINDER,particleCylinder:Gt.types.PARTICLE|Gt.types.CYLINDER,sphereTrimesh:Gt.types.SPHERE|Gt.types.TRIMESH,planeTrimesh:Gt.types.PLANE|Gt.types.TRIMESH};class xO{get[Ze.sphereSphere](){return this.sphereSphere}get[Ze.spherePlane](){return this.spherePlane}get[Ze.boxBox](){return this.boxBox}get[Ze.sphereBox](){return this.sphereBox}get[Ze.planeBox](){return this.planeBox}get[Ze.convexConvex](){return this.convexConvex}get[Ze.sphereConvex](){return this.sphereConvex}get[Ze.planeConvex](){return this.planeConvex}get[Ze.boxConvex](){return this.boxConvex}get[Ze.sphereHeightfield](){return this.sphereHeightfield}get[Ze.boxHeightfield](){return this.boxHeightfield}get[Ze.convexHeightfield](){return this.convexHeightfield}get[Ze.sphereParticle](){return this.sphereParticle}get[Ze.planeParticle](){return this.planeParticle}get[Ze.boxParticle](){return this.boxParticle}get[Ze.convexParticle](){return this.convexParticle}get[Ze.cylinderCylinder](){return this.convexConvex}get[Ze.sphereCylinder](){return this.sphereConvex}get[Ze.planeCylinder](){return this.planeConvex}get[Ze.boxCylinder](){return this.boxConvex}get[Ze.convexCylinder](){return this.convexConvex}get[Ze.heightfieldCylinder](){return this.heightfieldCylinder}get[Ze.particleCylinder](){return this.particleCylinder}get[Ze.sphereTrimesh](){return this.sphereTrimesh}get[Ze.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new gO,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new If(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,u=i.material||e.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=r.material||n.material,h=o.material||i.material;if(u&&h&&u.friction>=0&&h.friction>=0&&(c=u.friction*h.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let f=n.invMass+i.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,g=p.length?p.pop():new G1(n,i,d*f),m=p.length?p.pop():new G1(n,i,d*f);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-d*f,g.maxForce=m.maxForce=d*f,g.ri.copy(t.ri),g.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=t.enabled,e.push(g,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];jo.setZero(),Cl.setZero(),Tl.setZero();const r=e.bi;e.bj;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?(jo.vadd(e.ni,jo),Cl.vadd(e.ri,Cl),Tl.vadd(e.rj,Tl)):(jo.vsub(e.ni,jo),Cl.vadd(e.rj,Cl),Tl.vadd(e.ri,Tl));const o=1/t;Cl.scale(o,n.ri),Tl.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),jo.normalize(),jo.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=vO,c=wO,u=yO,h=bO;for(let d=0,f=t.length;d!==f;d++){const p=t[d],g=e[d];let m=null;p.material&&g.material&&(m=n.getContactMaterial(p.material,g.material)||null);const x=p.type&Bt.KINEMATIC&&g.type&Bt.STATIC||p.type&Bt.STATIC&&g.type&Bt.KINEMATIC||p.type&Bt.KINEMATIC&&g.type&Bt.KINEMATIC;for(let y=0;y<p.shapes.length;y++){p.quaternion.mult(p.shapeOrientations[y],l),p.quaternion.vmult(p.shapeOffsets[y],u),u.vadd(p.position,u);const v=p.shapes[y];for(let b=0;b<g.shapes.length;b++){g.quaternion.mult(g.shapeOrientations[b],c),g.quaternion.vmult(g.shapeOffsets[b],h),h.vadd(g.position,h);const w=g.shapes[b];if(!(v.collisionFilterMask&w.collisionFilterGroup&&w.collisionFilterMask&v.collisionFilterGroup)||u.distanceTo(h)>v.boundingSphereRadius+w.boundingSphereRadius)continue;let _=null;v.material&&w.material&&(_=n.getContactMaterial(v.material,w.material)||null),this.currentContactMaterial=_||m||n.defaultContactMaterial;const C=v.type|w.type,S=this[C];if(S){let T=!1;v.type<w.type?T=S.call(this,v,w,u,h,l,c,p,g,v,w,x):T=S.call(this,w,v,h,u,c,l,g,p,v,w,x),T&&x&&(n.shapeOverlapKeeper.set(v.id,w.id),n.bodyOverlapKeeper.set(p.id,g.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,u,h){if(h)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,u);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,u,h){const d=this.createContactEquation(a,l,t,e,c,u);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,Zd),d.ni.scale(d.ni.dot(Zd),H1),Zd.vsub(H1,d.rj),-Zd.dot(d.ni)<=t.radius){if(h)return!0;const f=d.ri,p=d.rj;f.vadd(n,f),f.vsub(a.position,f),p.vadd(i,p),p.vsub(l.position,p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}sphereBox(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool,f=XO;n.vsub(i,Jd),e.getSideNormals(f,o);const p=t.radius;let g=!1;const m=KO,x=YO,y=ZO;let v=null,b=0,w=0,_=0,C=null;for(let R=0,B=f.length;R!==B&&g===!1;R++){const L=GO;L.copy(f[R]);const D=L.length();L.normalize();const V=Jd.dot(L);if(V<D+p&&V>0){const q=HO,G=qO;q.copy(f[(R+1)%3]),G.copy(f[(R+2)%3]);const K=q.length(),ot=G.length();q.normalize(),G.normalize();const ht=Jd.dot(q),J=Jd.dot(G);if(ht<K&&ht>-K&&J<ot&&J>-ot){const gt=Math.abs(V-D-p);if((C===null||gt<C)&&(C=gt,w=ht,_=J,v=D,m.copy(L),x.copy(q),y.copy(G),b++,h))return!0}}}if(b){g=!0;const R=this.createContactEquation(a,l,t,e,c,u);m.scale(-p,R.ri),R.ni.copy(m),R.ni.negate(R.ni),m.scale(v,m),x.scale(w,x),m.vadd(x,m),y.scale(_,y),m.vadd(y,R.rj),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(i,R.rj),R.rj.vsub(l.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}let S=d.get();const T=jO;for(let R=0;R!==2&&!g;R++)for(let B=0;B!==2&&!g;B++)for(let L=0;L!==2&&!g;L++)if(S.set(0,0,0),R?S.vadd(f[0],S):S.vsub(f[0],S),B?S.vadd(f[1],S):S.vsub(f[1],S),L?S.vadd(f[2],S):S.vsub(f[2],S),i.vadd(S,T),T.vsub(n,T),T.lengthSquared()<p*p){if(h)return!0;g=!0;const D=this.createContactEquation(a,l,t,e,c,u);D.ri.copy(T),D.ri.normalize(),D.ni.copy(D.ri),D.ri.scale(p,D.ri),D.rj.copy(S),D.ri.vadd(n,D.ri),D.ri.vsub(a.position,D.ri),D.rj.vadd(i,D.rj),D.rj.vsub(l.position,D.rj),this.result.push(D),this.createFrictionEquationsFromContact(D,this.frictionResult)}d.release(S),S=null;const I=d.get(),M=d.get(),$=d.get(),E=d.get(),A=d.get(),k=f.length;for(let R=0;R!==k&&!g;R++)for(let B=0;B!==k&&!g;B++)if(R%3!==B%3){f[B].cross(f[R],I),I.normalize(),f[R].vadd(f[B],M),$.copy(n),$.vsub(M,$),$.vsub(i,$);const L=$.dot(I);I.scale(L,E);let D=0;for(;D===R%3||D===B%3;)D++;A.copy(n),A.vsub(E,A),A.vsub(M,A),A.vsub(i,A);const V=Math.abs(L),q=A.length();if(V<f[D].length()&&q<p){if(h)return!0;g=!0;const G=this.createContactEquation(a,l,t,e,c,u);M.vadd(E,G.rj),G.rj.copy(G.rj),A.negate(G.ni),G.ni.normalize(),G.ri.copy(G.rj),G.ri.vadd(i,G.ri),G.ri.vsub(n,G.ri),G.ri.normalize(),G.ri.scale(p,G.ri),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult)}}d.release(I,M,$,E,A)}planeBox(t,e,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}convexConvex(t,e,n,i,r,o,a,l,c,u,h,d,f){const p=dz;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,p,d,f)){const g=[],m=fz;t.clipAgainstHull(n,r,e,i,o,p,-100,100,g);let x=0;for(let y=0;y!==g.length;y++){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u),b=v.ri,w=v.rj;p.negate(v.ni),g[y].normal.negate(m),m.scale(g[y].depth,m),g[y].point.vadd(m,b),w.copy(g[y].point),b.vsub(n,b),w.vsub(i,w),b.vadd(n,b),b.vsub(a.position,b),w.vadd(i,w),w.vsub(l.position,w),this.result.push(v),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool;n.vsub(i,JO);const f=e.faceNormals,p=e.faces,g=e.vertices,m=t.radius;let x=!1;for(let y=0;y!==g.length;y++){const v=g[y],b=nz;o.vmult(v,b),i.vadd(b,b);const w=ez;if(b.vsub(n,w),w.lengthSquared()<m*m){if(h)return!0;x=!0;const _=this.createContactEquation(a,l,t,e,c,u);_.ri.copy(w),_.ri.normalize(),_.ni.copy(_.ri),_.ri.scale(m,_.ri),b.vsub(i,_.rj),_.ri.vadd(n,_.ri),_.ri.vsub(a.position,_.ri),_.rj.vadd(i,_.rj),_.rj.vsub(l.position,_.rj),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult);return}}for(let y=0,v=p.length;y!==v&&x===!1;y++){const b=f[y],w=p[y],_=sz;o.vmult(b,_);const C=iz;o.vmult(g[w[0]],C),C.vadd(i,C);const S=rz;_.scale(-m,S),n.vadd(S,S);const T=oz;S.vsub(C,T);const I=T.dot(_),M=az;if(n.vsub(C,M),I<0&&M.dot(_)>0){const $=[];for(let E=0,A=w.length;E!==A;E++){const k=d.get();o.vmult(g[w[E]],k),i.vadd(k,k),$.push(k)}if(WO($,_,n)){if(h)return!0;x=!0;const E=this.createContactEquation(a,l,t,e,c,u);_.scale(-m,E.ri),_.negate(E.ni);const A=d.get();_.scale(-I,A);const k=d.get();_.scale(-m,k),n.vsub(i,E.rj),E.rj.vadd(k,E.rj),E.rj.vadd(A,E.rj),E.rj.vadd(i,E.rj),E.rj.vsub(l.position,E.rj),E.ri.vadd(n,E.ri),E.ri.vsub(a.position,E.ri),d.release(A),d.release(k),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);for(let R=0,B=$.length;R!==B;R++)d.release($[R]);return}else for(let E=0;E!==w.length;E++){const A=d.get(),k=d.get();o.vmult(g[w[(E+1)%w.length]],A),o.vmult(g[w[(E+2)%w.length]],k),i.vadd(A,A),i.vadd(k,k);const R=QO;k.vsub(A,R);const B=tz;R.unit(B);const L=d.get(),D=d.get();n.vsub(A,D);const V=D.dot(B);B.scale(V,L),L.vadd(A,L);const q=d.get();if(L.vsub(n,q),V>0&&V*V<R.lengthSquared()&&q.lengthSquared()<m*m){if(h)return!0;const G=this.createContactEquation(a,l,t,e,c,u);L.vsub(i,G.rj),L.vsub(n,G.ni),G.ni.normalize(),G.ni.scale(m,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult);for(let K=0,ot=$.length;K!==ot;K++)d.release($[K]);d.release(A),d.release(k),d.release(L),d.release(q),d.release(D);return}d.release(A),d.release(k),d.release(L),d.release(q),d.release(D)}for(let E=0,A=$.length;E!==A;E++)d.release($[E])}}}planeConvex(t,e,n,i,r,o,a,l,c,u,h){const d=lz,f=cz;f.set(0,0,1),r.vmult(f,f);let p=0;const g=uz;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,g),f.dot(g)<=0){if(h)return!0;const y=this.createContactEquation(a,l,t,e,c,u),v=hz;f.scale(f.dot(g),v),d.vsub(v,v),v.vsub(n,y.ri),y.ni.copy(f),d.vsub(i,y.rj),y.ri.vadd(n,y.ri),y.ri.vsub(a.position,y.ri),y.rj.vadd(i,y.rj),y.rj.vsub(l.position,y.rj),this.result.push(y),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(y,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}sphereHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=t.radius,p=e.elementSize,g=Tz,m=Cz;$e.pointToLocalFrame(i,o,n,m);let x=Math.floor((m.x-f)/p)-1,y=Math.ceil((m.x+f)/p)+1,v=Math.floor((m.y-f)/p)-1,b=Math.ceil((m.y+f)/p)+1;if(y<0||b<0||x>d.length||v>d[0].length)return;x<0&&(x=0),y<0&&(y=0),v<0&&(v=0),b<0&&(b=0),x>=d.length&&(x=d.length-1),y>=d.length&&(y=d.length-1),b>=d[0].length&&(b=d[0].length-1),v>=d[0].length&&(v=d[0].length-1);const w=[];e.getRectMinMax(x,v,y,b,w);const _=w[0],C=w[1];if(m.z-f>C||m.z+f<_)return;const S=this.result;for(let T=x;T<y;T++)for(let I=v;I<b;I++){const M=S.length;let $=!1;if(e.getConvexTrianglePillar(T,I,!1),$e.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&($=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&$||(e.getConvexTrianglePillar(T,I,!0),$e.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&($=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&$))return!0;if(S.length-M>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=e.elementSize,p=t.boundingSphereRadius,g=Sz,m=_z,x=wz;$e.pointToLocalFrame(i,o,n,x);let y=Math.floor((x.x-p)/f)-1,v=Math.ceil((x.x+p)/f)+1,b=Math.floor((x.y-p)/f)-1,w=Math.ceil((x.y+p)/f)+1;if(v<0||w<0||y>d.length||b>d[0].length)return;y<0&&(y=0),v<0&&(v=0),b<0&&(b=0),w<0&&(w=0),y>=d.length&&(y=d.length-1),v>=d.length&&(v=d.length-1),w>=d[0].length&&(w=d[0].length-1),b>=d[0].length&&(b=d[0].length-1);const _=[];e.getRectMinMax(y,b,v,w,_);const C=_[0],S=_[1];if(!(x.z-p>S||x.z+p<C))for(let T=y;T<v;T++)for(let I=b;I<w;I++){let M=!1;if(e.getConvexTrianglePillar(T,I,!1),$e.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&M||(e.getConvexTrianglePillar(T,I,!0),$e.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&M))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,u,h){const d=xz;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(h)return!0;const p=this.createContactEquation(l,a,e,t,c,u);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,u,h){const d=pz;d.set(0,0,1),a.quaternion.vmult(d,d);const f=mz;if(i.vsub(a.position,f),d.dot(f)<=0){if(h)return!0;const g=this.createContactEquation(l,a,e,t,c,u);g.ni.copy(d),g.ni.negate(g.ni),g.ri.set(0,0,0);const m=gz;d.scale(d.dot(i),m),i.vsub(m,m),g.rj.copy(m),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexParticle(t,e,n,i,r,o,a,l,c,u,h){let d=-1;const f=bz,p=vz;let g=null;const m=yz;if(m.copy(i),m.vsub(n,m),r.conjugate(q1),q1.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let x=0,y=t.faces.length;x!==y;x++){const v=[t.worldVertices[t.faces[x][0]]],b=t.worldFaceNormals[x];i.vsub(v[0],X1);const w=-b.dot(X1);if(g===null||Math.abs(w)<Math.abs(g)){if(h)return!0;g=w,d=x,f.copy(b)}}if(d!==-1){const x=this.createContactEquation(l,a,e,t,c,u);f.scale(g,p),p.vadd(i,p),p.vsub(n,p),x.rj.copy(p),f.negate(x.ni),x.ri.set(0,0,0);const y=x.ri,v=x.rj;y.vadd(i,y),y.vsub(l.position,y),v.vadd(n,v),v.vsub(a.position,v),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,u,h)}particleCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexParticle(e,t,i,n,o,r,l,a,c,u,h)}sphereTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=AO,f=kO,p=NO,g=RO,m=$O,x=DO,y=OO,v=MO,b=IO,w=zO;$e.pointToLocalFrame(i,o,n,m);const _=t.radius;y.lowerBound.set(m.x-_,m.y-_,m.z-_),y.upperBound.set(m.x+_,m.y+_,m.z+_),e.getTrianglesInAABB(y,w);const C=EO,S=t.radius*t.radius;for(let E=0;E<w.length;E++)for(let A=0;A<3;A++)if(e.getVertex(e.indices[w[E]*3+A],C),C.vsub(m,b),b.lengthSquared()<=S){if(v.copy(C),$e.pointToWorldFrame(i,o,v,C),C.vsub(n,b),h)return!0;let k=this.createContactEquation(a,l,t,e,c,u);k.ni.copy(b),k.ni.normalize(),k.ri.copy(k.ni),k.ri.scale(t.radius,k.ri),k.ri.vadd(n,k.ri),k.ri.vsub(a.position,k.ri),k.rj.copy(C),k.rj.vsub(l.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}for(let E=0;E<w.length;E++)for(let A=0;A<3;A++){e.getVertex(e.indices[w[E]*3+A],d),e.getVertex(e.indices[w[E]*3+(A+1)%3],f),f.vsub(d,p),m.vsub(f,x);const k=x.dot(p);m.vsub(d,x);let R=x.dot(p);if(R>0&&k<0&&(m.vsub(d,x),g.copy(p),g.normalize(),R=x.dot(g),g.scale(R,x),x.vadd(d,x),x.distanceTo(m)<t.radius)){if(h)return!0;const L=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,L.ni),L.ni.normalize(),L.ni.scale(t.radius,L.ri),L.ri.vadd(n,L.ri),L.ri.vsub(a.position,L.ri),$e.pointToWorldFrame(i,o,x,x),x.vsub(l.position,L.rj),$e.vectorToWorldFrame(o,L.ni,L.ni),$e.vectorToWorldFrame(o,L.ri,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}const T=FO,I=LO,M=PO,$=TO;for(let E=0,A=w.length;E!==A;E++){e.getTriangleVertices(w[E],T,I,M),e.getNormal(w[E],$),m.vsub(T,x);let k=x.dot($);if($.scale(k,x),m.vsub(x,x),k=x.distanceTo(m),Sn.pointInTriangle(x,T,I,M)&&k<t.radius){if(h)return!0;let R=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,R.ni),R.ni.normalize(),R.ni.scale(t.radius,R.ri),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),$e.pointToWorldFrame(i,o,x,x),x.vsub(l.position,R.rj),$e.vectorToWorldFrame(o,R.ni,R.ni),$e.vectorToWorldFrame(o,R.ri,R.ri),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}}w.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=new N,f=SO;f.set(0,0,1),r.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,d);const g=new N;g.copy(d),$e.pointToWorldFrame(i,o,g,d);const m=_O;if(d.vsub(n,m),f.dot(m)<=0){if(h)return!0;const y=this.createContactEquation(a,l,t,e,c,u);y.ni.copy(f);const v=CO;f.scale(m.dot(f),v),d.vsub(v,v),y.ri.copy(v),y.ri.vsub(a.position,y.ri),y.rj.copy(d),y.rj.vsub(l.position,y.rj),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}}}}const jo=new N,Cl=new N,Tl=new N,yO=new N,bO=new N,vO=new hn,wO=new hn,SO=new N,_O=new N,CO=new N,TO=new N,IO=new N;new N;const EO=new N,MO=new N,AO=new N,kO=new N,NO=new N,RO=new N,$O=new N,DO=new N,FO=new N,LO=new N,PO=new N,OO=new Hs,zO=[],Zd=new N,H1=new N,BO=new N,UO=new N,VO=new N;function WO(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=BO;s[(r+1)%i].vsub(o,a);const l=UO;a.cross(t,l);const c=VO;e.vsub(o,c);const u=l.dot(c);if(n===null||u>0&&n===!0||u<=0&&n===!1){n===null&&(n=u>0);continue}else return!1}return!0}const Jd=new N,GO=new N,HO=new N,qO=new N,XO=[new N,new N,new N,new N,new N,new N],jO=new N,KO=new N,YO=new N,ZO=new N,JO=new N,QO=new N,tz=new N,ez=new N,nz=new N,sz=new N,iz=new N,rz=new N,oz=new N,az=new N;new N;new N;const lz=new N,cz=new N,uz=new N,hz=new N,dz=new N,fz=new N,pz=new N,mz=new N,gz=new N,xz=new N,q1=new hn,yz=new N;new N;const bz=new N,X1=new N,vz=new N,wz=new N,Sz=new N,_z=[0],Cz=new N,Tz=new N;class j1{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const u=n[l];for(;u>i[a];)a++;c=u===i[a],c||K1(t,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=i[l];for(;u>n[a];)a++;c=n[a]===u,c||K1(e,u)}}}function K1(s,t){s.push((t&4294901760)>>16,t&65535)}const tx=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class Iz{constructor(){this.data={keys:[]}}get(t,e){const n=tx(t,e);return this.data[n]}set(t,e,n){const i=tx(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=tx(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class Ez extends rT{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new N,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new N,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new AP,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new hO,this.constraints=[],this.narrowphase=new xO(this),this.collisionMatrix=new $1,this.collisionMatrixPrevious=new $1,this.bodyOverlapKeeper=new j1,this.shapeOverlapKeeper=new j1,this.contactmaterials=[],this.contactMaterialTable=new Iz,this.defaultMaterial=new Xa("default"),this.defaultContactMaterial=new Ep(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Pf?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=Sn.ALL,n.from=t,n.to=e,n.callback=i,ex.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=Sn.ANY,n.from=t,n.to=e,n.result=i,ex.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=Sn.CLOSEST,n.from=t,n.to=e,n.result=i,ex.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof Bt&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=An.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const i=n-this.lastCallTime;this.step(t,i,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=An.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!(An.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=Rz,i=$z,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,h=Bt.DYNAMIC;let d=-1/0;const f=this.constraints,p=Nz;l.length();const g=l.x,m=l.y,x=l.z;let y=0;for(c&&(d=An.now()),y=0;y!==r;y++){const E=o[y];if(E.type===h){const A=E.force,k=E.mass;A.x+=k*g,A.y+=k*m,A.z+=k*x}}for(let E=0,A=this.subsystems.length;E!==A;E++)this.subsystems[E].update();c&&(d=An.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(u.broadphase=An.now()-d);let v=f.length;for(y=0;y!==v;y++){const E=f[y];if(!E.collideConnected)for(let A=n.length-1;A>=0;A-=1)(E.bodyA===n[A]&&E.bodyB===i[A]||E.bodyB===n[A]&&E.bodyA===i[A])&&(n.splice(A,1),i.splice(A,1))}this.collisionMatrixTick(),c&&(d=An.now());const b=kz,w=e.length;for(y=0;y!==w;y++)b.push(e[y]);e.length=0;const _=this.frictionEquations.length;for(y=0;y!==_;y++)p.push(this.frictionEquations[y]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,b,this.frictionEquations,p),c&&(u.narrowphase=An.now()-d),c&&(d=An.now()),y=0;y<this.frictionEquations.length;y++)a.addEquation(this.frictionEquations[y]);const C=e.length;for(let E=0;E!==C;E++){const A=e[E],k=A.bi,R=A.bj,B=A.si,L=A.sj;let D;if(k.material&&R.material?D=this.getContactMaterial(k.material,R.material)||this.defaultContactMaterial:D=this.defaultContactMaterial,D.friction,k.material&&R.material&&(k.material.friction>=0&&R.material.friction>=0&&k.material.friction*R.material.friction,k.material.restitution>=0&&R.material.restitution>=0&&(A.restitution=k.material.restitution*R.material.restitution)),a.addEquation(A),k.allowSleep&&k.type===Bt.DYNAMIC&&k.sleepState===Bt.SLEEPING&&R.sleepState===Bt.AWAKE&&R.type!==Bt.STATIC){const V=R.velocity.lengthSquared()+R.angularVelocity.lengthSquared(),q=R.sleepSpeedLimit**2;V>=q*2&&(k.wakeUpAfterNarrowphase=!0)}if(R.allowSleep&&R.type===Bt.DYNAMIC&&R.sleepState===Bt.SLEEPING&&k.sleepState===Bt.AWAKE&&k.type!==Bt.STATIC){const V=k.velocity.lengthSquared()+k.angularVelocity.lengthSquared(),q=k.sleepSpeedLimit**2;V>=q*2&&(R.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(k,R,!0),this.collisionMatrixPrevious.get(k,R)||(Xc.body=R,Xc.contact=A,k.dispatchEvent(Xc),Xc.body=k,R.dispatchEvent(Xc)),this.bodyOverlapKeeper.set(k.id,R.id),this.shapeOverlapKeeper.set(B.id,L.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=An.now()-d,d=An.now()),y=0;y!==r;y++){const E=o[y];E.wakeUpAfterNarrowphase&&(E.wakeUp(),E.wakeUpAfterNarrowphase=!1)}for(v=f.length,y=0;y!==v;y++){const E=f[y];E.update();for(let A=0,k=E.equations.length;A!==k;A++){const R=E.equations[A];a.addEquation(R)}}a.solve(t,this),c&&(u.solve=An.now()-d),a.removeAllEquations();const S=Math.pow;for(y=0;y!==r;y++){const E=o[y];if(E.type&h){const A=S(1-E.linearDamping,t),k=E.velocity;k.scale(A,k);const R=E.angularVelocity;if(R){const B=S(1-E.angularDamping,t);R.scale(B,R)}}}this.dispatchEvent(Az),c&&(d=An.now());const I=this.stepnumber%(this.quatNormalizeSkip+1)===0,M=this.quatNormalizeFast;for(y=0;y!==r;y++)o[y].integrate(t,I,M);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=An.now()-d),this.stepnumber+=1,this.dispatchEvent(Mz);let $=!0;if(this.allowSleep)for($=!1,y=0;y!==r;y++){const E=o[y];E.sleepTick(this.time),E.sleepState!==Bt.SLEEPING&&($=!0)}this.hasActiveBodies=$}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Nr,Rr),t){for(let r=0,o=Nr.length;r<o;r+=2)jc.bodyA=this.getBodyById(Nr[r]),jc.bodyB=this.getBodyById(Nr[r+1]),this.dispatchEvent(jc);jc.bodyA=jc.bodyB=null}if(e){for(let r=0,o=Rr.length;r<o;r+=2)Kc.bodyA=this.getBodyById(Rr[r]),Kc.bodyB=this.getBodyById(Rr[r+1]),this.dispatchEvent(Kc);Kc.bodyA=Kc.bodyB=null}Nr.length=Rr.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(Nr,Rr),n){for(let r=0,o=Nr.length;r<o;r+=2){const a=this.getShapeById(Nr[r]),l=this.getShapeById(Nr[r+1]);$r.shapeA=a,$r.shapeB=l,a&&($r.bodyA=a.body),l&&($r.bodyB=l.body),this.dispatchEvent($r)}$r.bodyA=$r.bodyB=$r.shapeA=$r.shapeB=null}if(i){for(let r=0,o=Rr.length;r<o;r+=2){const a=this.getShapeById(Rr[r]),l=this.getShapeById(Rr[r+1]);Dr.shapeA=a,Dr.shapeB=l,a&&(Dr.bodyA=a.body),l&&(Dr.bodyB=l.body),this.dispatchEvent(Dr)}Dr.bodyA=Dr.bodyB=Dr.shapeA=Dr.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new Hs;const ex=new Sn,An=globalThis.performance||{};if(!An.now){let s=Date.now();An.timing&&An.timing.navigationStart&&(s=An.timing.navigationStart),An.now=()=>Date.now()-s}new N;const Mz={type:"postStep"},Az={type:"preStep"},Xc={type:Bt.COLLIDE_EVENT_NAME,body:null,contact:null},kz=[],Nz=[],Rz=[],$z=[],Nr=[],Rr=[],jc={type:"beginContact",bodyA:null,bodyB:null},Kc={type:"endContact",bodyA:null,bodyB:null},$r={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Dr={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Y1={type:"change"},nx={type:"start"},Z1={type:"end"};class Dz extends Va{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new W,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ll.ROTATE,MIDDLE:ll.DOLLY,RIGHT:ll.PAN},this.touches={ONE:cl.ROTATE,TWO:cl.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(H){H.addEventListener("keydown",xe),this._domElementKeyEvents=H},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Y1),n.update(),r=i.NONE},this.update=function(){const H=new W,nt=new Ca().setFromUnitVectors(t.up,new W(0,1,0)),Ft=nt.clone().invert(),Vt=new W,Pt=new Ca,se=2*Math.PI;return function(){const Te=n.object.position;H.copy(Te).sub(n.target),H.applyQuaternion(nt),a.setFromVector3(H),n.autoRotate&&r===i.NONE&&T(C()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Me=n.minAzimuthAngle,Be=n.maxAzimuthAngle;return isFinite(Me)&&isFinite(Be)&&(Me<-Math.PI?Me+=se:Me>Math.PI&&(Me-=se),Be<-Math.PI?Be+=se:Be>Math.PI&&(Be-=se),Me<=Be?a.theta=Math.max(Me,Math.min(Be,a.theta)):a.theta=a.theta>(Me+Be)/2?Math.max(Me,a.theta):Math.min(Be,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),H.setFromSpherical(a),H.applyQuaternion(Ft),Te.copy(n.target).add(H),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||Vt.distanceToSquared(n.object.position)>o||8*(1-Pt.dot(n.object.quaternion))>o?(n.dispatchEvent(Y1),Vt.copy(n.object.position),Pt.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ut),n.domElement.removeEventListener("pointerdown",St),n.domElement.removeEventListener("pointercancel",Ut),n.domElement.removeEventListener("wheel",ce),n.domElement.removeEventListener("pointermove",At),n.domElement.removeEventListener("pointerup",Ct),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",xe)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new E1,l=new E1;let c=1;const u=new W;let h=!1;const d=new Tt,f=new Tt,p=new Tt,g=new Tt,m=new Tt,x=new Tt,y=new Tt,v=new Tt,b=new Tt,w=[],_={};function C(){return 2*Math.PI/60/60*n.autoRotateSpeed}function S(){return Math.pow(.95,n.zoomSpeed)}function T(H){l.theta-=H}function I(H){l.phi-=H}const M=function(){const H=new W;return function(Ft,Vt){H.setFromMatrixColumn(Vt,0),H.multiplyScalar(-Ft),u.add(H)}}(),$=function(){const H=new W;return function(Ft,Vt){n.screenSpacePanning===!0?H.setFromMatrixColumn(Vt,1):(H.setFromMatrixColumn(Vt,0),H.crossVectors(n.object.up,H)),H.multiplyScalar(Ft),u.add(H)}}(),E=function(){const H=new W;return function(Ft,Vt){const Pt=n.domElement;if(n.object.isPerspectiveCamera){const se=n.object.position;H.copy(se).sub(n.target);let ee=H.length();ee*=Math.tan(n.object.fov/2*Math.PI/180),M(2*Ft*ee/Pt.clientHeight,n.object.matrix),$(2*Vt*ee/Pt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(M(Ft*(n.object.right-n.object.left)/n.object.zoom/Pt.clientWidth,n.object.matrix),$(Vt*(n.object.top-n.object.bottom)/n.object.zoom/Pt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function A(H){n.object.isPerspectiveCamera?c/=H:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*H)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(H){n.object.isPerspectiveCamera?c*=H:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/H)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(H){d.set(H.clientX,H.clientY)}function B(H){y.set(H.clientX,H.clientY)}function L(H){g.set(H.clientX,H.clientY)}function D(H){f.set(H.clientX,H.clientY),p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const nt=n.domElement;T(2*Math.PI*p.x/nt.clientHeight),I(2*Math.PI*p.y/nt.clientHeight),d.copy(f),n.update()}function V(H){v.set(H.clientX,H.clientY),b.subVectors(v,y),b.y>0?A(S()):b.y<0&&k(S()),y.copy(v),n.update()}function q(H){m.set(H.clientX,H.clientY),x.subVectors(m,g).multiplyScalar(n.panSpeed),E(x.x,x.y),g.copy(m),n.update()}function G(H){H.deltaY<0?k(S()):H.deltaY>0&&A(S()),n.update()}function K(H){let nt=!1;switch(H.code){case n.keys.UP:E(0,n.keyPanSpeed),nt=!0;break;case n.keys.BOTTOM:E(0,-n.keyPanSpeed),nt=!0;break;case n.keys.LEFT:E(n.keyPanSpeed,0),nt=!0;break;case n.keys.RIGHT:E(-n.keyPanSpeed,0),nt=!0;break}nt&&(H.preventDefault(),n.update())}function ot(){if(w.length===1)d.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),nt=.5*(w[0].pageY+w[1].pageY);d.set(H,nt)}}function ht(){if(w.length===1)g.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),nt=.5*(w[0].pageY+w[1].pageY);g.set(H,nt)}}function J(){const H=w[0].pageX-w[1].pageX,nt=w[0].pageY-w[1].pageY,Ft=Math.sqrt(H*H+nt*nt);y.set(0,Ft)}function gt(){n.enableZoom&&J(),n.enablePan&&ht()}function mt(){n.enableZoom&&J(),n.enableRotate&&ot()}function bt(H){if(w.length==1)f.set(H.pageX,H.pageY);else{const Ft=ne(H),Vt=.5*(H.pageX+Ft.x),Pt=.5*(H.pageY+Ft.y);f.set(Vt,Pt)}p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const nt=n.domElement;T(2*Math.PI*p.x/nt.clientHeight),I(2*Math.PI*p.y/nt.clientHeight),d.copy(f)}function pt(H){if(w.length===1)m.set(H.pageX,H.pageY);else{const nt=ne(H),Ft=.5*(H.pageX+nt.x),Vt=.5*(H.pageY+nt.y);m.set(Ft,Vt)}x.subVectors(m,g).multiplyScalar(n.panSpeed),E(x.x,x.y),g.copy(m)}function st(H){const nt=ne(H),Ft=H.pageX-nt.x,Vt=H.pageY-nt.y,Pt=Math.sqrt(Ft*Ft+Vt*Vt);v.set(0,Pt),b.set(0,Math.pow(v.y/y.y,n.zoomSpeed)),A(b.y),y.copy(v)}function et(H){n.enableZoom&&st(H),n.enablePan&&pt(H)}function ct(H){n.enableZoom&&st(H),n.enableRotate&&bt(H)}function St(H){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(H.pointerId),n.domElement.addEventListener("pointermove",At),n.domElement.addEventListener("pointerup",Ct)),It(H),H.pointerType==="touch"?U(H):zt(H))}function At(H){n.enabled!==!1&&(H.pointerType==="touch"?P(H):Jt(H))}function Ct(H){Mt(H),w.length===0&&(n.domElement.releasePointerCapture(H.pointerId),n.domElement.removeEventListener("pointermove",At),n.domElement.removeEventListener("pointerup",Ct)),n.dispatchEvent(Z1),r=i.NONE}function Ut(H){Mt(H)}function zt(H){let nt;switch(H.button){case 0:nt=n.mouseButtons.LEFT;break;case 1:nt=n.mouseButtons.MIDDLE;break;case 2:nt=n.mouseButtons.RIGHT;break;default:nt=-1}switch(nt){case ll.DOLLY:if(n.enableZoom===!1)return;B(H),r=i.DOLLY;break;case ll.ROTATE:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enablePan===!1)return;L(H),r=i.PAN}else{if(n.enableRotate===!1)return;R(H),r=i.ROTATE}break;case ll.PAN:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enableRotate===!1)return;R(H),r=i.ROTATE}else{if(n.enablePan===!1)return;L(H),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(nx)}function Jt(H){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;D(H);break;case i.DOLLY:if(n.enableZoom===!1)return;V(H);break;case i.PAN:if(n.enablePan===!1)return;q(H);break}}function ce(H){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(H.preventDefault(),n.dispatchEvent(nx),G(H),n.dispatchEvent(Z1))}function xe(H){n.enabled===!1||n.enablePan===!1||K(H)}function U(H){switch(Nt(H),w.length){case 1:switch(n.touches.ONE){case cl.ROTATE:if(n.enableRotate===!1)return;ot(),r=i.TOUCH_ROTATE;break;case cl.PAN:if(n.enablePan===!1)return;ht(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case cl.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;gt(),r=i.TOUCH_DOLLY_PAN;break;case cl.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;mt(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(nx)}function P(H){switch(Nt(H),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;bt(H),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;pt(H),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;et(H),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ct(H),n.update();break;default:r=i.NONE}}function ut(H){n.enabled!==!1&&H.preventDefault()}function It(H){w.push(H)}function Mt(H){delete _[H.pointerId];for(let nt=0;nt<w.length;nt++)if(w[nt].pointerId==H.pointerId){w.splice(nt,1);return}}function Nt(H){let nt=_[H.pointerId];nt===void 0&&(nt=new Tt,_[H.pointerId]=nt),nt.set(H.pageX,H.pageY)}function ne(H){const nt=H.pointerId===w[0].pointerId?w[1]:w[0];return _[nt.pointerId]}n.domElement.addEventListener("contextmenu",ut),n.domElement.addEventListener("pointerdown",St),n.domElement.addEventListener("pointercancel",Ut),n.domElement.addEventListener("wheel",ce,{passive:!1}),this.update()}}class Z0{constructor(){this.meshes=[],this.bodies=[],this.constraints=[]}syncMeshesToBodies(){this.meshes.forEach((t,e)=>{t.position.x=this.bodies[e].position.x,t.position.y=this.bodies[e].position.y,t.position.z=this.bodies[e].position.z,t.quaternion.x=this.bodies[e].quaternion.x,t.quaternion.y=this.bodies[e].quaternion.y,t.quaternion.z=this.bodies[e].quaternion.z,t.quaternion.w=this.bodies[e].quaternion.w})}}var ja=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Fz(s){var t=s.default;if(typeof t=="function"){var e=function(){return t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),e}function Ui(s,t){this.current=s,this.next=t,this._inNormal=this.inwardsNormal(),this._outNormal=this.outwardsNormal()}Ui.prototype.outwardsNormal=function(){var s=this.inwardsNormal();return[-s[0],-s[1]]};Ui.prototype.inwardsNormal=function(){var s=this.next[0]-this.current[0],t=this.next[1]-this.current[1],e=Math.sqrt(s*s+t*t);if(e===0)throw new Error("Vertices overlap");return[-t/e,s/e]};Ui.prototype.offset=function(s,t){return Ui.offsetEdge(this.current,this.next,s,t)};Ui.prototype.inverseOffset=function(s,t){return Ui.offsetEdge(this.next,this.current,s,t)};Ui.offsetEdge=function(s,t,e,n){return new Ui([s[0]+e,s[1]+n],[t[0]+e,t[1]+n])};Ui.prototype.inverse=function(){return new Ui(this.next,this.current)};var Lz=Ui,pT={exports:{}},xi={exports:{}},mT={NORMAL:0,NON_CONTRIBUTING:1,SAME_TRANSITION:2,DIFFERENT_TRANSITION:3},J0={exports:{}};J0.exports=Iu;J0.exports.default=Iu;function Iu(s,t){if(!(this instanceof Iu))return new Iu(s,t);if(this.data=s||[],this.length=this.data.length,this.compare=t||Pz,this.length>0)for(var e=(this.length>>1)-1;e>=0;e--)this._down(e)}function Pz(s,t){return s<t?-1:s>t?1:0}Iu.prototype={push:function(s){this.data.push(s),this.length++,this._up(this.length-1)},pop:function(){if(this.length!==0){var s=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),s}},peek:function(){return this.data[0]},_up:function(s){for(var t=this.data,e=this.compare,n=t[s];s>0;){var i=s-1>>1,r=t[i];if(e(n,r)>=0)break;t[s]=r,s=i}t[s]=n},_down:function(s){for(var t=this.data,e=this.compare,n=this.length>>1,i=t[s];s<n;){var r=(s<<1)+1,o=r+1,a=t[r];if(o<this.length&&e(t[o],a)<0&&(r=o,a=t[o]),e(a,i)>=0)break;t[s]=a,s=r}t[s]=i}};function qi(){}qi.prototype.clear=function(){this._root=null,this.size=0};qi.prototype.find=function(s){for(var t=this._root;t!==null;){var e=this._comparator(s,t.data);if(e===0)return t.data;t=t.get_child(e>0)}return null};qi.prototype.findIter=function(s){for(var t=this._root,e=this.iterator();t!==null;){var n=this._comparator(s,t.data);if(n===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(n>0)}return null};qi.prototype.lowerBound=function(s){for(var t=this._root,e=this.iterator(),n=this._comparator;t!==null;){var i=n(s,t.data);if(i===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(i>0)}for(var r=e._ancestors.length-1;r>=0;--r)if(t=e._ancestors[r],n(s,t.data)<0)return e._cursor=t,e._ancestors.length=r,e;return e._ancestors.length=0,e};qi.prototype.upperBound=function(s){for(var t=this.lowerBound(s),e=this._comparator;t.data()!==null&&e(t.data(),s)===0;)t.next();return t};qi.prototype.min=function(){var s=this._root;if(s===null)return null;for(;s.left!==null;)s=s.left;return s.data};qi.prototype.max=function(){var s=this._root;if(s===null)return null;for(;s.right!==null;)s=s.right;return s.data};qi.prototype.iterator=function(){return new _c(this)};qi.prototype.each=function(s){for(var t=this.iterator(),e;(e=t.next())!==null;)if(s(e)===!1)return};qi.prototype.reach=function(s){for(var t=this.iterator(),e;(e=t.prev())!==null;)if(s(e)===!1)return};function _c(s){this._tree=s,this._ancestors=[],this._cursor=null}_c.prototype.data=function(){return this._cursor!==null?this._cursor.data:null};_c.prototype.next=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._minNode(s)}else if(this._cursor.right===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.right===t)}else this._ancestors.push(this._cursor),this._minNode(this._cursor.right);return this._cursor!==null?this._cursor.data:null};_c.prototype.prev=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._maxNode(s)}else if(this._cursor.left===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.left===t)}else this._ancestors.push(this._cursor),this._maxNode(this._cursor.left);return this._cursor!==null?this._cursor.data:null};_c.prototype._minNode=function(s){for(;s.left!==null;)this._ancestors.push(s),s=s.left;this._cursor=s};_c.prototype._maxNode=function(s){for(;s.right!==null;)this._ancestors.push(s),s=s.right;this._cursor=s};var gT=qi,Oz=gT;function ql(s){this.data=s,this.left=null,this.right=null,this.red=!0}ql.prototype.get_child=function(s){return s?this.right:this.left};ql.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Mp(s){this._root=null,this._comparator=s,this.size=0}Mp.prototype=new Oz;Mp.prototype.insert=function(s){var t=!1;if(this._root===null)this._root=new ql(s),t=!0,this.size++;else{var e=new ql(void 0),n=0,i=0,r=null,o=e,a=null,l=this._root;for(o.right=this._root;;){if(l===null?(l=new ql(s),a.set_child(n,l),t=!0,this.size++):ti(l.left)&&ti(l.right)&&(l.red=!0,l.left.red=!1,l.right.red=!1),ti(l)&&ti(a)){var c=o.right===r;l===a.get_child(i)?o.set_child(c,Eu(r,!i)):o.set_child(c,xT(r,!i))}var u=this._comparator(l.data,s);if(u===0)break;i=n,n=u<0,r!==null&&(o=r),r=a,a=l,l=l.get_child(n)}this._root=e.right}return this._root.red=!1,t};Mp.prototype.remove=function(s){if(this._root===null)return!1;var t=new ql(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=null,o=1;e.get_child(o)!==null;){var a=o;i=n,n=e,e=e.get_child(o);var l=this._comparator(s,e.data);if(o=l>0,l===0&&(r=e),!ti(e)&&!ti(e.get_child(o))){if(ti(e.get_child(!o))){var c=Eu(e,o);n.set_child(a,c),n=c}else if(!ti(e.get_child(!o))){var u=n.get_child(!a);if(u!==null)if(!ti(u.get_child(!a))&&!ti(u.get_child(a)))n.red=!1,u.red=!0,e.red=!0;else{var h=i.right===n;ti(u.get_child(a))?i.set_child(h,xT(n,a)):ti(u.get_child(!a))&&i.set_child(h,Eu(n,a));var d=i.get_child(h);d.red=!0,e.red=!0,d.left.red=!1,d.right.red=!1}}}}return r!==null&&(r.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this.size--),this._root=t.right,this._root!==null&&(this._root.red=!1),r!==null};function ti(s){return s!==null&&s.red}function Eu(s,t){var e=s.get_child(!t);return s.set_child(!t,e.get_child(t)),e.set_child(t,s),s.red=!0,e.red=!1,e}function xT(s,t){return s.set_child(!t,Eu(s.get_child(!t),!t)),Eu(s,t)}var zz=Mp,Bz=gT;function Mu(s){this.data=s,this.left=null,this.right=null}Mu.prototype.get_child=function(s){return s?this.right:this.left};Mu.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Ap(s){this._root=null,this._comparator=s,this.size=0}Ap.prototype=new Bz;Ap.prototype.insert=function(s){if(this._root===null)return this._root=new Mu(s),this.size++,!0;for(var t=0,e=null,n=this._root;;){if(n===null)return n=new Mu(s),e.set_child(t,n),ret=!0,this.size++,!0;if(this._comparator(n.data,s)===0)return!1;t=this._comparator(n.data,s)<0,e=n,n=n.get_child(t)}};Ap.prototype.remove=function(s){if(this._root===null)return!1;var t=new Mu(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=1;e.get_child(r)!==null;){n=e,e=e.get_child(r);var o=this._comparator(s,e.data);r=o>0,o===0&&(i=e)}return i!==null?(i.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this._root=t.right,this.size--,!0):!1};var Uz=Ap,Vz={RBTree:zz,BinTree:Uz},Q0=function(t,e,n){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])},J1=Q0,Wz=mT;function yT(s,t,e,n,i){this.left=t,this.point=s,this.otherEvent=e,this.isSubject=n,this.type=i||Wz.NORMAL,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.inResult=!1,this.resultInOut=!1}yT.prototype={isBelow:function(s){return this.left?J1(this.point,this.otherEvent.point,s)>0:J1(this.otherEvent.point,this.point,s)>0},isAbove:function(s){return!this.isBelow(s)},isVertical:function(){return this.point[0]===this.otherEvent.point[0]}};var Gz=yT,Hz=Q0,bT=function(t,e){var n=t.point,i=e.point;return n[0]>i[0]?1:n[0]<i[0]?-1:n[1]!==i[1]?n[1]>i[1]?1:-1:qz(t,e,n)};function qz(s,t,e,n){return s.left!==t.left?s.left?1:-1:Hz(e,s.otherEvent.point,t.otherEvent.point)!==0?s.isBelow(t.otherEvent.point)?-1:1:!s.isSubject&&t.isSubject?1:-1}var vT=function(t,e){return t[0]===e[0]&&t[1]===e[1]},Q1=Q0,tS=bT,sx=vT,Xz=function(t,e){if(t===e)return 0;if(Q1(t.point,t.otherEvent.point,e.point)!==0||Q1(t.point,t.otherEvent.point,e.otherEvent.point)!==0)return sx(t.point,e.point)?t.isBelow(e.otherEvent.point)?-1:1:t.point[0]===e.point[0]?t.point[1]<e.point[1]?-1:1:tS(t,e)===1?e.isAbove(t.point)?-1:1:t.isBelow(e.point)?-1:1;if(t.isSubject===e.isSubject){if(sx(t.point,e.point))return sx(t.otherEvent.point,e.otherEvent.point)?0:t.contourId>e.contourId?1:-1}else return t.isSubject?-1:1;return tS(t,e)===1?1:-1},eS=1e-9;function Qd(s,t){return s[0]*t[1]-s[1]*t[0]}function Yc(s,t){return s[0]*t[0]+s[1]*t[1]}var jz=function(s,t,e,n,i){var r=[t[0]-s[0],t[1]-s[1]],o=[n[0]-e[0],n[1]-e[1]];function a(b,w,_){return[b[0]+w*_[0],b[1]+w*_[1]]}var l=[e[0]-s[0],e[1]-s[1]],c=Qd(r,o),u=c*c,h=Yc(r,r),d=Yc(o,o);if(u>eS*h*d){var f=Qd(l,o)/c;if(f<0||f>1)return null;var p=Qd(l,r)/c;return p<0||p>1||i?null:[a(s,f,r)]}var g=Yc(l,l);if(c=Qd(l,r),u=c*c,u>eS*h*g)return null;var m=Yc(r,l)/h,x=m+Yc(r,o)/h,y=Math.min(m,x),v=Math.max(m,x);return y<=1&&v>=0?y===1?i?null:[a(s,y>0?y:0,r)]:v===0?i?null:[a(s,v<1?v:1,r)]:i&&y===0&&v===1?null:[a(s,y>0?y:0,r),a(s,v<1?v:1,r)]:null},Ea=0,sc=1,Ma=2,Xu=3,Of=[],ha=mT,Kz=J0.exports,Yz=Vz.RBTree,zf=Gz,ic=bT,Zz=Xz,Jz=jz,er=vT,nS=Math.max,Vx=Math.min;function Qz(s,t,e,n,i,r){var o=new zf(s,!1,void 0,e),a=new zf(t,!1,o,e);o.otherEvent=a,o.contourId=a.contourId=n,ic(o,a)>0?a.left=!0:o.left=!0,r[0]=Vx(r[0],s[0]),r[1]=Vx(r[1],s[1]),r[2]=nS(r[2],s[0]),r[3]=nS(r[3],s[1]),i.push(o),i.push(a)}var Wx=0;function Gx(s,t,e,n,i){var r,o;if(typeof s[0][0]=="number")for(r=0,o=s.length-1;r<o;r++)Qz(s[r],s[r+1],t,e+1,n,i);else for(r=0,o=s.length;r<o;r++)Wx++,Gx(s[r],t,Wx,n,i)}function wT(s,t,e,n){var i=new Kz(null,ic);return Wx=0,Gx(s,!0,0,i,e),Gx(t,!1,0,i,n),i}function Dl(s,t,e,n){t===null?(s.inOut=!1,s.otherInOut=!0):s.isSubject===t.isSubject?(s.inOut=!t.inOut,s.otherInOut=t.otherInOut):(s.inOut=!t.otherInOut,s.otherInOut=t.isVertical()?!t.inOut:t.inOut),t&&(s.prevInResult=!sS(t,n)||t.isVertical()?t.prevInResult:t),s.inResult=sS(s,n)}function sS(s,t){switch(s.type){case ha.NORMAL:switch(t){case Ea:return!s.otherInOut;case sc:return s.otherInOut;case Ma:return s.isSubject&&s.otherInOut||!s.isSubject&&!s.otherInOut;case Xu:return!0}case ha.SAME_TRANSITION:return t===Ea||t===sc;case ha.DIFFERENT_TRANSITION:return t===Ma;case ha.NON_CONTRIBUTING:return!1}return!1}function Ef(s,t,e){var n=Jz(s.point,s.otherEvent.point,t.point,t.otherEvent.point),i=n?n.length:0;if(i===0||i===1&&(er(s.point,t.point)||er(s.otherEvent.point,t.otherEvent.point)))return 0;if(i===2&&s.isSubject===t.isSubject)return s.contourId===t.contourId&&console.warn("Edges of the same polygon overlap",s.point,s.otherEvent.point,t.point,t.otherEvent.point),0;if(i===1)return!er(s.point,n[0])&&!er(s.otherEvent.point,n[0])&&Fr(s,n[0],e),!er(t.point,n[0])&&!er(t.otherEvent.point,n[0])&&Fr(t,n[0],e),1;var r=[],o=!1,a=!1;return er(s.point,t.point)?o=!0:ic(s,t)===1?r.push(t,s):r.push(s,t),er(s.otherEvent.point,t.otherEvent.point)?a=!0:ic(s.otherEvent,t.otherEvent)===1?r.push(t.otherEvent,s.otherEvent):r.push(s.otherEvent,t.otherEvent),o&&a||o?(s.type=ha.NON_CONTRIBUTING,t.type=s.inOut===t.inOut?ha.SAME_TRANSITION:ha.DIFFERENT_TRANSITION,o&&!a&&Fr(r[0].otherEvent,r[1].point,e),2):a?(Fr(r[0],r[1].point,e),3):r[0]!==r[3].otherEvent?(Fr(r[0],r[1].point,e),Fr(r[1],r[2].point,e),3):(Fr(r[0],r[1].point,e),Fr(r[3].otherEvent,r[2].point,e),3)}function Fr(s,t,e){var n=new zf(t,!1,s,s.isSubject),i=new zf(t,!0,s.otherEvent,s.isSubject);return er(s.point,s.otherEvent.point)&&console.warn("what is that?",s),n.contourId=i.contourId=s.contourId,ic(i,s.otherEvent)>0&&(s.otherEvent.left=!0,i.left=!1),s.otherEvent.otherEvent=i,s.otherEvent=n,e.push(i),e.push(n),e}function ST(s,t,e,n,i,r){for(var a=[],c,u,o=new Yz(Zz),a=[],l=Vx(n[2],i[2]),c,u;s.length;){var h=s.pop();if(a.push(h),r===Ea&&h.point[0]>l||r===Ma&&h.point[0]>n[2])break;if(h.left){if(o.insert(h),u=o.findIter(h),c=o.findIter(h),h.iterator=o.findIter(h),!c||!u){console.log("brute");var d=tB(o);c=d[0],u=d[1]}if(c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),Dl(h,c.data(),o,r),u.data()&&Ef(h,u.data(),s)===2&&(Dl(h,c.data(),o,r),Dl(h,u.data(),o,r)),c.data()&&Ef(c.data(),h,s)===2){var f=o.findIter(c.data());f.data()!==o.min()?f.prev():(f=o.findIter(o.max()),f.next()),Dl(c.data(),f.data(),o,r),Dl(h,c.data(),o,r)}}else{if(h=h.otherEvent,u=o.findIter(h),c=o.findIter(h),!(c&&u))continue;c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),o.remove(h),u.data()&&c.data()&&Ef(c.data(),u.data(),s)}}return a}function tB(s,t){for(var e=s.iterator(),n=s.iterator(),i=s.iterator(),r;(r=i.next())!==null&&(e.next(),n.next(),r!==event););return[e,n]}function eB(s,t,e){var n=s[t];s[t]=s[e],s[e]=n}function nB(s){return s.reverse()}function iS(s){return Object.prototype.toString.call(s)==="[object Array]"}function rS(s,t){return iS(s[0])&&!iS(s[0][0])&&(s=[s]),s[t]=[],s}function sB(s){var t,e,n,i=[];for(e=0,n=s.length;e<n;e++)t=s[e],(t.left&&t.inResult||!t.left&&t.otherEvent.inResult)&&i.push(t);for(var r=!1;!r;)for(r=!0,e=0,n=i.length;e<n;e++)e+1<n&&ic(i[e],i[e+1])===1&&(eB(i,e,e+1),r=!1);for(e=0,n=i.length;e<n;e++)i[e].pos=e;for(e=0,n=i.length;e<n;e++)if(!i[e].left){var o=i[e].pos;i[e].pos=i[e].otherEvent.pos,i[e].otherEvent.pos=o}return i}function iB(s){var t,e,n=sB(s),i=Array(n.length),r=[],o=[],a=[],l={};for(t=0,e=n.length;t<e;t++)if(!i[t]){var c=[];r.push(c);var u=r.length-1;if(o.push(0),a.push(-1),n[t].prevInResult){var h=n[t].prevInResult.contourId;n[t].prevInResult.resultInOut?l[h]&&(rS(r[a[h]],u),a[u]=a[h],o[u]=o[h],l[u]=!0):(rS(r[h],u),a[u]=h,o[u]=o[h]+1,l[u]=!0)}var d=t,f=n[t].point;for(c.push(f);d>=t;)i[d]=!0,n[d].left?(n[d].resultInOut=!1,n[d].contourId=u):(n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u),d=n[d].pos,i[d]=!0,c.push(n[d].point),d=rB(d,n,i);d=d===-1?t:d,i[d]=i[n[d].pos]=!0,n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u,o[u]&1&&nB(c)}return r}function rB(s,t,e){for(var n=s+1,i=t.length;n<i&&er(t[n].point,t[s].point);)if(e[n])n=n+1;else return n;for(n=s-1;e[n];)n=n-1;return n}function oB(s,t,e){var n=null;return s.length*t.length===0&&(e===Ea?n=Of:e===Ma?n=s:(e===sc||e===Xu)&&(n=s.length===0?t:s)),n}function aB(s,t,e,n,i){var r=null;return(e[0]>n[2]||n[0]>e[2]||e[1]>n[3]||n[1]>e[3])&&(i===Ea?r=Of:i===Ma?r=s:(i===sc||i===Xu)&&(r=s.concat(t))),r}function ju(s,t,e){var n=oB(s,t,e);if(n)return n===Of?null:n;var i=[1/0,1/0,-1/0,-1/0],r=[1/0,1/0,-1/0,-1/0],o=wT(s,t,i,r);if(n=aB(s,t,i,r,e),n)return n===Of?null:n;var a=ST(o,s,t,i,r,e);return iB(a)}xi.exports=ju;xi.exports.union=function(s,t){return ju(s,t,sc)};xi.exports.diff=function(s,t){return ju(s,t,Ma)};xi.exports.xor=function(s,t){return ju(s,t,Xu)};xi.exports.intersection=function(s,t){return ju(s,t,Ea)};xi.exports.operations={INTERSECTION:Ea,DIFFERENCE:Ma,UNION:sc,XOR:Xu};xi.exports.fillQueue=wT;xi.exports.computeFields=Dl;xi.exports.subdivideSegments=ST;xi.exports.divideSegment=Fr;xi.exports.possibleIntersection=Ef;(function(s){s.exports=xi.exports})(pT);var Ku={},lB=Ku.isArray=Array.isArray||function(s){return Object.prototype.toString.call(s)==="[object Array]"},ix=Ku.isNonEmptyArray=function(s){return lB(s)&&s.length};Ku.equals=function(t,e){return t[0]===e[0]&&t[1]===e[1]};Ku.orientRings=function s(t,e,n){e=e||0;var i,r;if(ix(t)&&typeof t[0][0]=="number"){var o=0,a=t;for(i=0,r=a.length;i<r;i++){var l=a[i],c=a[(i+1)%r];o+=l[0]*c[1],o-=c[0]*l[1]}(!n&&o>0||n&&o<0)&&a.reverse()}else for(i=0,r=t.length;i<r;i++)s(t[i],e+1,i>0);if(e===0&&ix(t)&&ix(t[0])&&typeof t[0][0][0]=="number"){var u=t[0].slice(0,1)[0];t[0].pop(),t[0].push([u[0],u[1]])}return t};var cB=Lz,Au=pT.exports,ty=Ku,ku=ty.isArray,_T=ty.equals,Cc=ty.orientRings;function qn(s,t){this.vertices=null,this.edges=null,this._closed=!1,this._distance=0,s&&this.data(s),this._arcSegments=t!==void 0?t:5}qn.prototype.data=function(s){if(this._edges=[],!ku(s))throw new Error("Offset requires at least one coodinate to work with");return ku(s)&&typeof s[0]=="number"?this.vertices=s:(this.vertices=Cc(s),this._processContour(this.vertices,this._edges)),this};qn.prototype._processContour=function(s,t){var e,n;if(ku(s[0])&&typeof s[0][0]=="number")for(n=s.length,_T(s[0],s[n-1])&&(n-=1),e=0;e<n;e++)t.push(new cB(s[e],s[(e+1)%n]));else for(e=0,n=s.length;e<n;e++)t.push([]),this._processContour(s[e],t[t.length-1])};qn.prototype.arcSegments=function(s){return this._arcSegments=s,this};qn.prototype.validate=function(s){var t=s.length;return typeof s[0]=="number"?[s]:(s[0][0]===s[t-1][0]&&s[0][1]===s[t-1][1]&&t>1&&(s=s.slice(0,t-1),this._closed=!0),s)};qn.prototype.createArc=function(s,t,e,n,i,r,o){var a=Math.PI*2,l=Math.atan2(n[1]-t[1],n[0]-t[0]),c=Math.atan2(i[1]-t[1],i[0]-t[0]);r%2===0&&(r-=1),l<0&&(l+=a),c<0&&(c+=a);var u=l>c?l-c:l+a-c,h=(o?-u:a-u)/r;s.push(n);for(var d=1;d<r;++d)u=l+h*d,s.push([t[0]+Math.cos(u)*e,t[1]+Math.sin(u)*e]);return s.push(i),s};qn.prototype.distance=function(s,t){return this._distance=s||0,this};qn.degreesToUnits=function(s,t){switch(t){case"miles":s=s/69.047;break;case"feet":s=s/364568;break;case"kilometers":s=s/111.12;break;case"meters":case"metres":s=s/111120;break}return s};qn.prototype.ensureLastPoint=function(s){return _T(s[0],s[s.length-1])||s.push([s[0][0],s[0][1]]),s};qn.prototype.offset=function(s){return this.distance(s),this._distance===0?this.vertices:this._distance>0?this.margin(this._distance):this.padding(-this._distance)};qn.prototype._offsetSegment=function(s,t,e,n){for(var i=[],r=[e.offset(e._inNormal[0]*n,e._inNormal[1]*n),e.inverseOffset(e._outNormal[0]*n,e._outNormal[1]*n)],o=0,a=2;o<a;o++){var l=r[o],c=r[(o+a-1)%a];this.createArc(i,o===0?s:t,n,c.next,l.current,this._arcSegments,!0)}return i};qn.prototype.margin=function(s){if(this.distance(s),typeof this.vertices[0]=="number")return this.offsetPoint(this._distance);if(s===0)return this.vertices;var t=this.offsetLines(this._distance);return t=Au.union(this.vertices,t),Cc(t)};qn.prototype.padding=function(s){if(this.distance(s),this._distance===0)return this.ensureLastPoint(this.vertices);if(this.vertices.length===2&&typeof this.vertices[0]=="number")return this.vertices;var t=this.offsetLines(this._distance),e=Au.diff(this.vertices,t);return Cc(e)};qn.prototype.offsetLine=function(s){return s===0?this.vertices:Cc(this.offsetLines(s))};qn.prototype.offsetLines=function(s){if(s<0)throw new Error("Cannot apply negative margin to the line");var t;if(this.distance(s),ku(this.vertices[0])&&typeof this.vertices[0][0]!="number")for(var e=0,n=this._edges.length;e<n;e++)t=e===0?this.offsetContour(this.vertices[e],this._edges[e]):Au.union(t,this.offsetContour(this.vertices[e],this._edges[e]));else t=this.vertices.length===1?this.offsetPoint():this.offsetContour(this.vertices,this._edges);return t};qn.prototype.offsetContour=function(s,t){var e,n,i;if(ku(s[0])&&typeof s[0][0]=="number")for(n=0,i=s.length-1;n<i;n++){var r=this.ensureLastPoint(this._offsetSegment(s[n],s[n+1],t[n],this._distance));e=n===0?[this.ensureLastPoint(r)]:Au.union(e,this.ensureLastPoint(r))}else for(n=0,i=t.length;n<i;n++)e=n===0?this.offsetContour(s[n],t[n]):Au.union(e,this.offsetContour(s[n],t[n]));return e};qn.prototype.offsetPoint=function(s){this.distance(s);var t=this._arcSegments*2,e=[],n=this.vertices,i=this._distance,r=0;t%2===0&&t++;for(var o=0;o<t;o++)r+=2*Math.PI/t,e.push([n[0]+i*Math.cos(r),n[1]+i*Math.sin(r)]);return Cc([this.ensureLastPoint(e)])};qn.orientRings=Cc;var uB=qn;function hB(s,t=!1){const e=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new ts;let c=0;for(let u=0;u<s.length;++u){const h=s[u];let d=0;if(e!==(h.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in h.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(h.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in h.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(h.morphAttributes[f])}if(t){let f;if(e)f=h.index.count;else if(h.attributes.position!==void 0)f=h.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,u),c+=f}}if(e){let u=0;const h=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)h.push(f.getX(p)+u);u+=s[d].attributes.position.count}l.setIndex(h)}for(const u in r){const h=oS(r[u]);if(!h)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+u+" attribute."),null;l.setAttribute(u,h)}for(const u in o){const h=o[u][0].length;if(h===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[u]=[];for(let d=0;d<h;++d){const f=[];for(let g=0;g<o[u].length;++g)f.push(o[u][g][d]);const p=oS(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+u+" morphAttribute."),null;l.morphAttributes[u].push(p)}}return l}function oS(s){let t,e,n,i=0;for(let a=0;a<s.length;++a){const l=s[a];if(l.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(t===void 0&&(t=l.array.constructor),t!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=l.itemSize),e!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=l.normalized),n!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;i+=l.array.length}const r=new t(i);let o=0;for(let a=0;a<s.length;++a)r.set(s[a].array,o),o+=s[a].array.length;return new Vs(r,e,n)}const CT=0,dB=1,fB=2,aS=2,rx=1.25,lS=1,Mf=6*4+4+4,Hx=65535,pB=Math.pow(2,-24);class tf{constructor(){}}function cr(s,t,e){return e.min.x=t[s],e.min.y=t[s+1],e.min.z=t[s+2],e.max.x=t[s+3],e.max.y=t[s+4],e.max.z=t[s+5],e}function cS(s){let t=-1,e=-1/0;for(let n=0;n<3;n++){const i=s[n+3]-s[n];i>e&&(e=i,t=n)}return t}function uS(s,t){t.set(s)}function hS(s,t,e){let n,i;for(let r=0;r<3;r++){const o=r+3;n=s[r],i=t[r],e[r]=n<i?n:i,n=s[o],i=t[o],e[o]=n>i?n:i}}function ef(s,t,e){for(let n=0;n<3;n++){const i=t[s+2*n],r=t[s+2*n+1],o=i-r,a=i+r;o<e[n]&&(e[n]=o),a>e[n+3]&&(e[n+3]=a)}}function Zc(s){const t=s[3]-s[0],e=s[4]-s[1],n=s[5]-s[2];return 2*(t*e+e*n+n*t)}function mB(s,t){if(!s.index){const e=s.attributes.position.count,n=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;let i;e>65535?i=new Uint32Array(new n(4*e)):i=new Uint16Array(new n(2*e)),s.setIndex(new Vs(i,1));for(let r=0;r<e;r++)i[r]=r}}function gB(s){if(!s.groups||!s.groups.length)return[{offset:0,count:s.index.count/3}];const t=[],e=new Set;for(const i of s.groups)e.add(i.start),e.add(i.start+i.count);const n=Array.from(e.values()).sort((i,r)=>i-r);for(let i=0;i<n.length-1;i++){const r=n[i],o=n[i+1];t.push({offset:r/3,count:(o-r)/3})}return t}function ox(s,t,e,n,i=null){let r=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,u=-1/0,h=1/0,d=1/0,f=1/0,p=-1/0,g=-1/0,m=-1/0;const x=i!==null;for(let y=t*6,v=(t+e)*6;y<v;y+=6){const b=s[y+0],w=s[y+1],_=b-w,C=b+w;_<r&&(r=_),C>l&&(l=C),x&&b<h&&(h=b),x&&b>p&&(p=b);const S=s[y+2],T=s[y+3],I=S-T,M=S+T;I<o&&(o=I),M>c&&(c=M),x&&S<d&&(d=S),x&&S>g&&(g=S);const $=s[y+4],E=s[y+5],A=$-E,k=$+E;A<a&&(a=A),k>u&&(u=k),x&&$<f&&(f=$),x&&$>m&&(m=$)}n[0]=r,n[1]=o,n[2]=a,n[3]=l,n[4]=c,n[5]=u,x&&(i[0]=h,i[1]=d,i[2]=f,i[3]=p,i[4]=g,i[5]=m)}function xB(s,t,e,n){let i=1/0,r=1/0,o=1/0,a=-1/0,l=-1/0,c=-1/0;for(let u=t*6,h=(t+e)*6;u<h;u+=6){const d=s[u+0];d<i&&(i=d),d>a&&(a=d);const f=s[u+2];f<r&&(r=f),f>l&&(l=f);const p=s[u+4];p<o&&(o=p),p>c&&(c=p)}n[0]=i,n[1]=r,n[2]=o,n[3]=a,n[4]=l,n[5]=c}function yB(s,t,e,n,i){let r=e,o=e+n-1;const a=i.pos,l=i.axis*2;for(;;){for(;r<=o&&t[r*6+l]<a;)r++;for(;r<=o&&t[o*6+l]>=a;)o--;if(r<o){for(let c=0;c<3;c++){let u=s[r*3+c];s[r*3+c]=s[o*3+c],s[o*3+c]=u;let h=t[r*6+c*2+0];t[r*6+c*2+0]=t[o*6+c*2+0],t[o*6+c*2+0]=h;let d=t[r*6+c*2+1];t[r*6+c*2+1]=t[o*6+c*2+1],t[o*6+c*2+1]=d}r++,o--}else return r}}const Lr=32,bB=(s,t)=>s.candidate-t.candidate,co=new Array(Lr).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),nf=new Float32Array(6);function vB(s,t,e,n,i,r){let o=-1,a=0;if(r===CT)o=cS(t),o!==-1&&(a=(t[o]+t[o+3])/2);else if(r===dB)o=cS(s),o!==-1&&(a=wB(e,n,i,o));else if(r===fB){const l=Zc(s);let c=rx*i;const u=n*6,h=(n+i)*6;for(let d=0;d<3;d++){const f=t[d],m=(t[d+3]-f)/Lr;if(i<Lr/4){const x=[...co];x.length=i;let y=0;for(let b=u;b<h;b+=6,y++){const w=x[y];w.candidate=e[b+2*d],w.count=0;const{bounds:_,leftCacheBounds:C,rightCacheBounds:S}=w;for(let T=0;T<3;T++)S[T]=1/0,S[T+3]=-1/0,C[T]=1/0,C[T+3]=-1/0,_[T]=1/0,_[T+3]=-1/0;ef(b,e,_)}x.sort(bB);let v=i;for(let b=0;b<v;b++){const w=x[b];for(;b+1<v&&x[b+1].candidate===w.candidate;)x.splice(b+1,1),v--}for(let b=u;b<h;b+=6){const w=e[b+2*d];for(let _=0;_<v;_++){const C=x[_];w>=C.candidate?ef(b,e,C.rightCacheBounds):(ef(b,e,C.leftCacheBounds),C.count++)}}for(let b=0;b<v;b++){const w=x[b],_=w.count,C=i-w.count,S=w.leftCacheBounds,T=w.rightCacheBounds;let I=0;_!==0&&(I=Zc(S)/l);let M=0;C!==0&&(M=Zc(T)/l);const $=lS+rx*(I*_+M*C);$<c&&(o=d,c=$,a=w.candidate)}}else{for(let v=0;v<Lr;v++){const b=co[v];b.count=0,b.candidate=f+m+v*m;const w=b.bounds;for(let _=0;_<3;_++)w[_]=1/0,w[_+3]=-1/0}for(let v=u;v<h;v+=6){let _=~~((e[v+2*d]-f)/m);_>=Lr&&(_=Lr-1);const C=co[_];C.count++,ef(v,e,C.bounds)}const x=co[Lr-1];uS(x.bounds,x.rightCacheBounds);for(let v=Lr-2;v>=0;v--){const b=co[v],w=co[v+1];hS(b.bounds,w.rightCacheBounds,b.rightCacheBounds)}let y=0;for(let v=0;v<Lr-1;v++){const b=co[v],w=b.count,_=b.bounds,S=co[v+1].rightCacheBounds;w!==0&&(y===0?uS(_,nf):hS(_,nf,nf)),y+=w;let T=0,I=0;y!==0&&(T=Zc(nf)/l);const M=i-y;M!==0&&(I=Zc(S)/l);const $=lS+rx*(T*y+I*M);$<c&&(o=d,c=$,a=b.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${r} used.`);return{axis:o,pos:a}}function wB(s,t,e,n){let i=0;for(let r=t,o=t+e;r<o;r++)i+=s[r*6+n*2];return i/e}function SB(s,t){const e=s.attributes.position,n=s.index.array,i=n.length/3,r=new Float32Array(i*6),o=e.normalized,a=e.array,l=e.offset||0;let c=3;e.isInterleavedBufferAttribute&&(c=e.data.stride);const u=["getX","getY","getZ"];for(let h=0;h<i;h++){const d=h*3,f=h*6;let p,g,m;o?(p=n[d+0],g=n[d+1],m=n[d+2]):(p=n[d+0]*c+l,g=n[d+1]*c+l,m=n[d+2]*c+l);for(let x=0;x<3;x++){let y,v,b;o?(y=e[u[x]](p),v=e[u[x]](g),b=e[u[x]](m)):(y=a[p+x],v=a[g+x],b=a[m+x]);let w=y;v<w&&(w=v),b<w&&(w=b);let _=y;v>_&&(_=v),b>_&&(_=b);const C=(_-w)/2,S=x*2;r[f+S+0]=w+C,r[f+S+1]=C+(Math.abs(w)+C)*pB,w<t[x]&&(t[x]=w),_>t[x+3]&&(t[x+3]=_)}}return r}function _B(s,t){function e(x){d&&d(x/f)}function n(x,y,v,b=null,w=0){if(!p&&w>=l&&(p=!0,c&&(console.warn(`MeshBVH: Max depth of ${l} reached when generating BVH. Consider increasing maxDepth.`),console.warn(s))),v<=u||w>=l)return e(y+v),x.offset=y,x.count=v,x;const _=vB(x.boundingData,b,o,y,v,h);if(_.axis===-1)return e(y+v),x.offset=y,x.count=v,x;const C=yB(a,o,y,v,_);if(C===y||C===y+v)e(y+v),x.offset=y,x.count=v;else{x.splitAxis=_.axis;const S=new tf,T=y,I=C-y;x.left=S,S.boundingData=new Float32Array(6),ox(o,T,I,S.boundingData,r),n(S,T,I,r,w+1);const M=new tf,$=C,E=v-I;x.right=M,M.boundingData=new Float32Array(6),ox(o,$,E,M.boundingData,r),n(M,$,E,r,w+1)}return x}mB(s,t);const i=new Float32Array(6),r=new Float32Array(6),o=SB(s,i),a=s.index.array,l=t.maxDepth,c=t.verbose,u=t.maxLeafTris,h=t.strategy,d=t.onProgress,f=s.index.count/3;let p=!1;const g=[],m=gB(s);if(m.length===1){const x=m[0],y=new tf;y.boundingData=i,xB(o,x.offset,x.count,r),n(y,x.offset,x.count,r),g.push(y)}else for(let x of m){const y=new tf;y.boundingData=new Float32Array(6),ox(o,x.offset,x.count,y.boundingData,r),n(y,x.offset,x.count,r),g.push(y)}return g}function CB(s,t){const e=_B(s,t);let n,i,r;const o=[],a=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let u=0;u<e.length;u++){const h=e[u];let d=l(h);const f=new a(Mf*d);n=new Float32Array(f),i=new Uint32Array(f),r=new Uint16Array(f),c(0,h),o.push(f)}return o;function l(u){return u.count?1:1+l(u.left)+l(u.right)}function c(u,h){const d=u/4,f=u/2,p=!!h.count,g=h.boundingData;for(let m=0;m<6;m++)n[d+m]=g[m];if(p){const m=h.offset,x=h.count;return i[d+6]=m,r[f+14]=x,r[f+15]=Hx,u+Mf}else{const m=h.left,x=h.right,y=h.splitAxis;let v;if(v=c(u+Mf,m),v/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return i[d+6]=v/4,v=c(v,x),i[d+7]=y,v}}}class mr{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let n=1/0,i=-1/0;for(let r=0,o=t.length;r<o;r++){const l=t[r][e];n=l<n?l:n,i=l>i?l:i}this.min=n,this.max=i}setFromPoints(t,e){let n=1/0,i=-1/0;for(let r=0,o=e.length;r<o;r++){const a=e[r],l=t.dot(a);n=l<n?l:n,i=l>i?l:i}this.min=n,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}mr.prototype.setFromBox=function(){const s=new W;return function(e,n){const i=n.min,r=n.max;let o=1/0,a=-1/0;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let u=0;u<=1;u++){s.x=i.x*l+r.x*(1-l),s.y=i.y*c+r.y*(1-c),s.z=i.z*u+r.z*(1-u);const h=e.dot(s);o=Math.min(h,o),a=Math.max(h,a)}this.min=o,this.max=a}}();(function(){const s=new mr;return function(e,n){const i=e.points,r=e.satAxes,o=e.satBounds,a=n.points,l=n.satAxes,c=n.satBounds;for(let u=0;u<3;u++){const h=o[u],d=r[u];if(s.setFromPoints(d,a),h.isSeparated(s))return!1}for(let u=0;u<3;u++){const h=c[u],d=l[u];if(s.setFromPoints(d,i),h.isSeparated(s))return!1}}})();const TB=function(){const s=new W,t=new W,e=new W;return function(i,r,o){const a=i.start,l=s,c=r.start,u=t;e.subVectors(a,c),s.subVectors(i.end,i.start),t.subVectors(r.end,r.start);const h=e.dot(u),d=u.dot(l),f=u.dot(u),p=e.dot(l),m=l.dot(l)*f-d*d;let x,y;m!==0?x=(h*d-p*f)/m:x=0,y=(h+x*d)/f,o.x=x,o.y=y}}(),ey=function(){const s=new Tt,t=new W,e=new W;return function(i,r,o,a){TB(i,r,s);let l=s.x,c=s.y;if(l>=0&&l<=1&&c>=0&&c<=1){i.at(l,o),r.at(c,a);return}else if(l>=0&&l<=1){c<0?r.at(0,a):r.at(1,a),i.closestPointToPoint(a,!0,o);return}else if(c>=0&&c<=1){l<0?i.at(0,o):i.at(1,o),r.closestPointToPoint(o,!0,a);return}else{let u;l<0?u=i.start:u=i.end;let h;c<0?h=r.start:h=r.end;const d=t,f=e;if(i.closestPointToPoint(h,!0,t),r.closestPointToPoint(u,!0,e),d.distanceToSquared(h)<=f.distanceToSquared(u)){o.copy(d),a.copy(h);return}else{o.copy(u),a.copy(f);return}}}}(),IB=function(){const s=new W,t=new W,e=new Or,n=new Gr;return function(r,o){const{radius:a,center:l}=r,{a:c,b:u,c:h}=o;if(n.start=c,n.end=u,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a||(n.start=c,n.end=h,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a)||(n.start=u,n.end=h,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a))return!0;const g=o.getPlane(e);if(Math.abs(g.distanceToPoint(l))<=a){const x=g.projectPoint(l,t);if(o.containsPoint(x))return!0}return!1}}(),EB=1e-15;function Il(s){return Math.abs(s)<EB}class qr extends ii{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new W),this.satBounds=new Array(4).fill().map(()=>new mr),this.points=[this.a,this.b,this.c],this.sphere=new Gu,this.plane=new Or,this.needsUpdate=!0}intersectsSphere(t){return IB(t,this)}update(){const t=this.a,e=this.b,n=this.c,i=this.points,r=this.satAxes,o=this.satBounds,a=r[0],l=o[0];this.getNormal(a),l.setFromPoints(a,i);const c=r[1],u=o[1];c.subVectors(t,e),u.setFromPoints(c,i);const h=r[2],d=o[2];h.subVectors(e,n),d.setFromPoints(h,i);const f=r[3],p=o[3];f.subVectors(n,t),p.setFromPoints(f,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}qr.prototype.closestPointToSegment=function(){const s=new W,t=new W,e=new Gr;return function(i,r=null,o=null){const{start:a,end:l}=i,c=this.points;let u,h=1/0;for(let d=0;d<3;d++){const f=(d+1)%3;e.start.copy(c[d]),e.end.copy(c[f]),ey(e,i,s,t),u=s.distanceToSquared(t),u<h&&(h=u,r&&r.copy(s),o&&o.copy(t))}return this.closestPointToPoint(a,s),u=a.distanceToSquared(s),u<h&&(h=u,r&&r.copy(s),o&&o.copy(a)),this.closestPointToPoint(l,s),u=l.distanceToSquared(s),u<h&&(h=u,r&&r.copy(s),o&&o.copy(l)),Math.sqrt(h)}}();qr.prototype.intersectsTriangle=function(){const s=new qr,t=new Array(3),e=new Array(3),n=new mr,i=new mr,r=new W,o=new W,a=new W,l=new W,c=new Gr,u=new Gr,h=new Gr;return function(f,p=null){this.needsUpdate&&this.update(),f.isExtendedTriangle?f.needsUpdate&&f.update():(s.copy(f),s.update(),f=s);const g=this.plane,m=f.plane;if(Math.abs(g.normal.dot(m.normal))>1-1e-10){const x=this.satBounds,y=this.satAxes;e[0]=f.a,e[1]=f.b,e[2]=f.c;for(let w=0;w<4;w++){const _=x[w],C=y[w];if(n.setFromPoints(C,e),_.isSeparated(n))return!1}const v=f.satBounds,b=f.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let w=0;w<4;w++){const _=v[w],C=b[w];if(n.setFromPoints(C,t),_.isSeparated(n))return!1}for(let w=0;w<4;w++){const _=y[w];for(let C=0;C<4;C++){const S=b[C];if(r.crossVectors(_,S),n.setFromPoints(r,t),i.setFromPoints(r,e),n.isSeparated(i))return!1}}return p&&(console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),p.start.set(0,0,0),p.end.set(0,0,0)),!0}else{const x=this.points;let y=!1,v=0;for(let E=0;E<3;E++){const A=x[E],k=x[(E+1)%3];c.start.copy(A),c.end.copy(k),c.delta(o);const R=y?u.start:u.end,B=Il(m.distanceToPoint(A));if(Il(m.normal.dot(o))&&B){u.copy(c),v=2;break}if((m.intersectLine(c,R)||B)&&!Il(R.distanceTo(k))){if(v++,y)break;y=!0}}if(v===1&&this.containsPoint(u.end))return p&&(p.start.copy(u.end),p.end.copy(u.end)),!0;if(v!==2)return!1;const b=f.points;let w=!1,_=0;for(let E=0;E<3;E++){const A=b[E],k=b[(E+1)%3];c.start.copy(A),c.end.copy(k),c.delta(a);const R=w?h.start:h.end,B=Il(g.distanceToPoint(A));if(Il(g.normal.dot(a))&&B){h.copy(c),_=2;break}if((g.intersectLine(c,R)||B)&&!Il(R.distanceTo(k))){if(_++,w)break;w=!0}}if(_===1&&this.containsPoint(h.end))return p&&(p.start.copy(h.end),p.end.copy(h.end)),!0;if(_!==2)return!1;if(u.delta(o),h.delta(a),o.dot(a)<0){let E=h.start;h.start=h.end,h.end=E}const C=u.start.dot(o),S=u.end.dot(o),T=h.start.dot(o),I=h.end.dot(o),M=S<T,$=C<I;return C!==I&&T!==S&&M===$?!1:(p&&(l.subVectors(u.start,h.start),l.dot(o)>0?p.start.copy(u.start):p.start.copy(h.start),l.subVectors(u.end,h.end),l.dot(o)<0?p.end.copy(u.end):p.end.copy(h.end)),!0)}}}();qr.prototype.distanceToPoint=function(){const s=new W;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();qr.prototype.distanceToTriangle=function(){const s=new W,t=new W,e=["a","b","c"],n=new Gr,i=new Gr;return function(o,a=null,l=null){const c=a||l?n:null;if(this.intersectsTriangle(o,c))return(a||l)&&(a&&c.getCenter(a),l&&c.getCenter(l)),0;let u=1/0;for(let h=0;h<3;h++){let d;const f=e[h],p=o[f];this.closestPointToPoint(p,s),d=p.distanceToSquared(s),d<u&&(u=d,a&&a.copy(s),l&&l.copy(p));const g=this[f];o.closestPointToPoint(g,s),d=g.distanceToSquared(s),d<u&&(u=d,a&&a.copy(g),l&&l.copy(s))}for(let h=0;h<3;h++){const d=e[h],f=e[(h+1)%3];n.set(this[d],this[f]);for(let p=0;p<3;p++){const g=e[p],m=e[(p+1)%3];i.set(o[g],o[m]),ey(n,i,s,t);const x=s.distanceToSquared(t);x<u&&(u=x,a&&a.copy(s),l&&l.copy(t))}}return Math.sqrt(u)}}();class gr{constructor(t,e,n){this.isOrientedBox=!0,this.min=new W,this.max=new W,this.matrix=new je,this.invMatrix=new je,this.points=new Array(8).fill().map(()=>new W),this.satAxes=new Array(3).fill().map(()=>new W),this.satBounds=new Array(3).fill().map(()=>new mr),this.alignedSatBounds=new Array(3).fill().map(()=>new mr),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),n&&this.matrix.copy(n)}set(t,e,n){this.min.copy(t),this.max.copy(e),this.matrix.copy(n),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}gr.prototype.update=function(){return function(){const t=this.matrix,e=this.min,n=this.max,i=this.points;for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)for(let h=0;h<=1;h++){const d=1*c|2*u|4*h,f=i[d];f.x=c?n.x:e.x,f.y=u?n.y:e.y,f.z=h?n.z:e.z,f.applyMatrix4(t)}const r=this.satBounds,o=this.satAxes,a=i[0];for(let c=0;c<3;c++){const u=o[c],h=r[c],d=1<<c,f=i[d];u.subVectors(a,f),h.setFromPoints(u,i)}const l=this.alignedSatBounds;l[0].setFromPointsField(i,"x"),l[1].setFromPointsField(i,"y"),l[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();gr.prototype.intersectsBox=function(){const s=new mr;return function(e){this.needsUpdate&&this.update();const n=e.min,i=e.max,r=this.satBounds,o=this.satAxes,a=this.alignedSatBounds;if(s.min=n.x,s.max=i.x,a[0].isSeparated(s)||(s.min=n.y,s.max=i.y,a[1].isSeparated(s))||(s.min=n.z,s.max=i.z,a[2].isSeparated(s)))return!1;for(let l=0;l<3;l++){const c=o[l],u=r[l];if(s.setFromBox(c,e),u.isSeparated(s))return!1}return!0}}();gr.prototype.intersectsTriangle=function(){const s=new qr,t=new Array(3),e=new mr,n=new mr,i=new W;return function(o){this.needsUpdate&&this.update(),o.isExtendedTriangle?o.needsUpdate&&o.update():(s.copy(o),s.update(),o=s);const a=this.satBounds,l=this.satAxes;t[0]=o.a,t[1]=o.b,t[2]=o.c;for(let d=0;d<3;d++){const f=a[d],p=l[d];if(e.setFromPoints(p,t),f.isSeparated(e))return!1}const c=o.satBounds,u=o.satAxes,h=this.points;for(let d=0;d<3;d++){const f=c[d],p=u[d];if(e.setFromPoints(p,h),f.isSeparated(e))return!1}for(let d=0;d<3;d++){const f=l[d];for(let p=0;p<4;p++){const g=u[p];if(i.crossVectors(f,g),e.setFromPoints(i,t),n.setFromPoints(i,h),e.isSeparated(n))return!1}}return!0}}();gr.prototype.closestPointToPoint=function(){return function(t,e){return this.needsUpdate&&this.update(),e.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e}}();gr.prototype.distanceToPoint=function(){const s=new W;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();gr.prototype.distanceToBox=function(){const s=["x","y","z"],t=new Array(12).fill().map(()=>new Gr),e=new Array(12).fill().map(()=>new Gr),n=new W,i=new W;return function(o,a=0,l=null,c=null){if(this.needsUpdate&&this.update(),this.intersectsBox(o))return(l||c)&&(o.getCenter(i),this.closestPointToPoint(i,n),o.closestPointToPoint(n,i),l&&l.copy(n),c&&c.copy(i)),0;const u=a*a,h=o.min,d=o.max,f=this.points;let p=1/0;for(let m=0;m<8;m++){const x=f[m];i.copy(x).clamp(h,d);const y=x.distanceToSquared(i);if(y<p&&(p=y,l&&l.copy(x),c&&c.copy(i),y<u))return Math.sqrt(y)}let g=0;for(let m=0;m<3;m++)for(let x=0;x<=1;x++)for(let y=0;y<=1;y++){const v=(m+1)%3,b=(m+2)%3,w=x<<v|y<<b,_=1<<m|x<<v|y<<b,C=f[w],S=f[_];t[g].set(C,S);const I=s[m],M=s[v],$=s[b],E=e[g],A=E.start,k=E.end;A[I]=h[I],A[M]=x?h[M]:d[M],A[$]=y?h[$]:d[M],k[I]=d[I],k[M]=x?h[M]:d[M],k[$]=y?h[$]:d[M],g++}for(let m=0;m<=1;m++)for(let x=0;x<=1;x++)for(let y=0;y<=1;y++){i.x=m?d.x:h.x,i.y=x?d.y:h.y,i.z=y?d.z:h.z,this.closestPointToPoint(i,n);const v=i.distanceToSquared(n);if(v<p&&(p=v,l&&l.copy(n),c&&c.copy(i),v<u))return Math.sqrt(v)}for(let m=0;m<12;m++){const x=t[m];for(let y=0;y<12;y++){const v=e[y];ey(x,v,n,i);const b=n.distanceToSquared(i);if(b<p&&(p=b,l&&l.copy(n),c&&c.copy(i),b<u))return Math.sqrt(b)}}return Math.sqrt(p)}}();const sf=new W,rf=new W,of=new W,dS=new Tt,fS=new Tt,pS=new Tt,mS=new W;function MB(s,t,e,n,i,r){let o;return r===Us?o=s.intersectTriangle(n,e,t,!0,i):o=s.intersectTriangle(t,e,n,r!==Cs,i),o===null?null:{distance:s.origin.distanceTo(i),point:i.clone()}}function AB(s,t,e,n,i,r,o){sf.fromBufferAttribute(t,n),rf.fromBufferAttribute(t,i),of.fromBufferAttribute(t,r);const a=MB(s,sf,rf,of,mS,o);if(a){e&&(dS.fromBufferAttribute(e,n),fS.fromBufferAttribute(e,i),pS.fromBufferAttribute(e,r),a.uv=ii.getUV(mS,sf,rf,of,dS,fS,pS,new Tt));const l={a:n,b:i,c:r,normal:new W,materialIndex:0};ii.getNormal(sf,rf,of,l.normal),a.face=l,a.faceIndex=n}return a}function TT(s,t,e,n,i){const r=n*3,o=s.index.getX(r),a=s.index.getX(r+1),l=s.index.getX(r+2),c=AB(e,s.attributes.position,s.attributes.uv,o,a,l,t);return c?(c.faceIndex=n,i&&i.push(c),c):null}function kB(s,t,e,n,i,r){for(let o=n,a=n+i;o<a;o++)TT(s,t,e,o,r)}function NB(s,t,e,n,i){let r=1/0,o=null;for(let a=n,l=n+i;a<l;a++){const c=TT(s,t,e,a);c&&c.distance<r&&(o=c,r=c.distance)}return o}function gS(s,t,e){return s===null||(s.point.applyMatrix4(t.matrixWorld),s.distance=s.point.distanceTo(e.ray.origin),s.object=t,s.distance<e.near||s.distance>e.far)?null:s}function rr(s,t,e,n){const i=s.a,r=s.b,o=s.c;let a=t,l=t+1,c=t+2;e&&(a=e.getX(t),l=e.getX(t+1),c=e.getX(t+2)),i.x=n.getX(a),i.y=n.getY(a),i.z=n.getZ(a),r.x=n.getX(l),r.y=n.getY(l),r.z=n.getZ(l),o.x=n.getX(c),o.y=n.getY(c),o.z=n.getZ(c)}function xS(s,t,e,n,i,r,o){const a=e.index,l=e.attributes.position;for(let c=s,u=t+s;c<u;c++)if(rr(o,c*3,a,l),o.needsUpdate=!0,n(o,c,i,r))return!0;return!1}class IT{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}function uo(s,t){return t[s+15]===65535}function Xl(s,t){return t[s+6]}function Nu(s,t){return t[s+14]}function Ru(s){return s+8}function $u(s,t){return t[s+6]}function RB(s,t){return t[s+7]}const Bl=new Hi,Bf=new W,$B=["x","y","z"];function qx(s,t,e,n,i){let r=s*2,o=Tc,a=go,l=xo;if(uo(r,a)){const u=Xl(s,l),h=Nu(r,a);kB(t,e,n,u,h,i)}else{const u=Ru(s);Uf(u,o,n,Bf)&&qx(u,t,e,n,i);const h=$u(s,l);Uf(h,o,n,Bf)&&qx(h,t,e,n,i)}}function Xx(s,t,e,n){let i=s*2,r=Tc,o=go,a=xo;if(uo(i,o)){const c=Xl(s,a),u=Nu(i,o);return NB(t,e,n,c,u)}else{const c=RB(s,a),u=$B[c],d=n.direction[u]>=0;let f,p;d?(f=Ru(s),p=$u(s,a)):(f=$u(s,a),p=Ru(s));const m=Uf(f,r,n,Bf)?Xx(f,t,e,n):null;if(m){const v=m.point[u];if(d?v<=r[p+c]:v>=r[p+c+3])return m}const y=Uf(p,r,n,Bf)?Xx(p,t,e,n):null;return m&&y?m.distance<=y.distance?m:y:m||y||null}}const DB=function(){let s,t;const e=[],n=new IT(()=>new Hi);return function(...o){s=n.getPrimitive(),t=n.getPrimitive(),e.push(s,t);const a=i(...o);n.releasePrimitive(s),n.releasePrimitive(t),e.pop(),e.pop();const l=e.length;return l>0&&(t=e[l-1],s=e[l-2]),a};function i(r,o,a,l,c=null,u=0,h=0){function d(v){let b=v*2,w=go,_=xo;for(;!uo(b,w);)v=Ru(v),b=v*2;return Xl(v,_)}function f(v){let b=v*2,w=go,_=xo;for(;!uo(b,w);)v=$u(v,_),b=v*2;return Xl(v,_)+Nu(b,w)}let p=r*2,g=Tc,m=go,x=xo;if(uo(p,m)){const v=Xl(r,x),b=Nu(p,m);return cr(r,g,s),l(v,b,!1,h,u+r,s)}else{const v=Ru(r),b=$u(r,x);let w=v,_=b,C,S,T,I;if(c&&(T=s,I=t,cr(w,g,T),cr(_,g,I),C=c(T),S=c(I),S<C)){w=b,_=v;const B=C;C=S,S=B,T=I}T||(T=s,cr(w,g,T));const M=uo(w*2,m),$=a(T,M,C,h+1,u+w);let E;if($===aS){const B=d(w),D=f(w)-B;E=l(B,D,!0,h+1,u+w,T)}else E=$&&i(w,o,a,l,c,u,h+1);if(E)return!0;I=t,cr(_,g,I);const A=uo(_*2,m),k=a(I,A,S,h+1,u+_);let R;if(k===aS){const B=d(_),D=f(_)-B;R=l(B,D,!0,h+1,u+_,I)}else R=k&&i(_,o,a,l,c,u,h+1);return!!R}}}(),FB=function(){const s=new qr,t=new qr,e=new je,n=new gr,i=new gr;return function r(o,a,l,c,u=null){let h=o*2,d=Tc,f=go,p=xo;if(u===null&&(l.boundingBox||l.computeBoundingBox(),n.set(l.boundingBox.min,l.boundingBox.max,c),u=n),uo(h,f)){const m=a,x=m.index,y=m.attributes.position,v=l.index,b=l.attributes.position,w=Xl(o,p),_=Nu(h,f);if(e.copy(c).invert(),l.boundsTree)return cr(o,d,i),i.matrix.copy(e),i.needsUpdate=!0,l.boundsTree.shapecast({intersectsBounds:S=>i.intersectsBox(S),intersectsTriangle:S=>{S.a.applyMatrix4(c),S.b.applyMatrix4(c),S.c.applyMatrix4(c),S.needsUpdate=!0;for(let T=w*3,I=(_+w)*3;T<I;T+=3)if(rr(t,T,x,y),t.needsUpdate=!0,S.intersectsTriangle(t))return!0;return!1}});for(let C=w*3,S=_+w*3;C<S;C+=3){rr(s,C,x,y),s.a.applyMatrix4(e),s.b.applyMatrix4(e),s.c.applyMatrix4(e),s.needsUpdate=!0;for(let T=0,I=v.count;T<I;T+=3)if(rr(t,T,v,b),t.needsUpdate=!0,s.intersectsTriangle(t))return!0}}else{const m=o+8,x=p[o+6];return cr(m,d,Bl),!!(u.intersectsBox(Bl)&&r(m,a,l,c,u)||(cr(x,d,Bl),u.intersectsBox(Bl)&&r(x,a,l,c,u)))}}}();function Uf(s,t,e,n){return cr(s,t,Bl),e.intersectBox(Bl,n)}const jx=[];let Af,Tc,go,xo;function ru(s){Af&&jx.push(Af),Af=s,Tc=new Float32Array(s),go=new Uint16Array(s),xo=new Uint32Array(s)}function af(){Af=null,Tc=null,go=null,xo=null,jx.length&&ru(jx.pop())}const ax=Symbol("skip tree generation"),lx=new Hi,cx=new Hi,El=new je,Ko=new gr,Jc=new gr,Qc=new W,lf=new W,LB=new W,PB=new W,OB=new W,yS=new Hi,Qi=new IT(()=>new qr);class xu{static serialize(t,e={}){if(e.isBufferGeometry)return console.warn("MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature."),xu.serialize(arguments[0],{cloneBuffers:arguments[2]===void 0?!0:arguments[2]});e={cloneBuffers:!0,...e};const n=t.geometry,i=t._roots,r=n.getIndex();let o;return e.cloneBuffers?o={roots:i.map(a=>a.slice()),index:r.array.slice()}:o={roots:i,index:r.array},o}static deserialize(t,e,n={}){if(typeof n=="boolean")return console.warn("MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature."),xu.deserialize(arguments[0],arguments[1],{setIndex:arguments[2]===void 0?!0:arguments[2]});n={setIndex:!0,...n};const{index:i,roots:r}=t,o=new xu(e,{...n,[ax]:!0});if(o._roots=r,n.setIndex){const a=e.getIndex();if(a===null){const l=new Vs(t.index,1,!1);e.setIndex(l)}else a.array!==i&&(a.array.set(i),a.needsUpdate=!0)}return o}constructor(t,e={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(e=Object.assign({strategy:CT,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,[ax]:!1},e),e.useSharedArrayBuffer&&typeof SharedArrayBuffer>"u")throw new Error("MeshBVH: SharedArrayBuffer is not available.");this._roots=null,e[ax]||(this._roots=CB(t,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new Hi))),this.geometry=t}refit(t=null){t&&Array.isArray(t)&&(t=new Set(t));const e=this.geometry,n=e.index.array,i=e.attributes.position;let r,o,a,l,c=0;const u=this._roots;for(let d=0,f=u.length;d<f;d++)r=u[d],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),h(0,c),c+=r.byteLength;function h(d,f,p=!1){const g=d*2;if(a[g+15]===Hx){const x=o[d+6],y=a[g+14];let v=1/0,b=1/0,w=1/0,_=-1/0,C=-1/0,S=-1/0;for(let T=3*x,I=3*(x+y);T<I;T++){const M=n[T],$=i.getX(M),E=i.getY(M),A=i.getZ(M);$<v&&(v=$),$>_&&(_=$),E<b&&(b=E),E>C&&(C=E),A<w&&(w=A),A>S&&(S=A)}return l[d+0]!==v||l[d+1]!==b||l[d+2]!==w||l[d+3]!==_||l[d+4]!==C||l[d+5]!==S?(l[d+0]=v,l[d+1]=b,l[d+2]=w,l[d+3]=_,l[d+4]=C,l[d+5]=S,!0):!1}else{const x=d+8,y=o[d+6],v=x+f,b=y+f;let w=p,_=!1,C=!1;t?w||(_=t.has(v),C=t.has(b),w=!_&&!C):(_=!0,C=!0);const S=w||_,T=w||C;let I=!1;S&&(I=h(x,f,w));let M=!1;T&&(M=h(y,f,w));const $=I||M;if($)for(let E=0;E<3;E++){const A=x+E,k=y+E,R=l[A],B=l[A+3],L=l[k],D=l[k+3];l[d+E]=R<L?R:L,l[d+E+3]=B>D?B:D}return $}}}traverse(t,e=0){const n=this._roots[e],i=new Uint32Array(n),r=new Uint16Array(n);o(0);function o(a,l=0){const c=a*2,u=r[c+15]===Hx;if(u){const h=i[a+6],d=r[c+14];t(l,u,new Float32Array(n,a*4,6),h,d)}else{const h=a+Mf/4,d=i[a+6],f=i[a+7];t(l,u,new Float32Array(n,a*4,6),f)||(o(h,l+1),o(d,l+1))}}}raycast(t,e=_o){const n=this._roots,i=this.geometry,r=[],o=e.isMaterial,a=Array.isArray(e),l=i.groups,c=o?e.side:e;for(let u=0,h=n.length;u<h;u++){const d=a?e[l[u].materialIndex].side:c,f=r.length;if(ru(n[u]),qx(0,i,d,t,r),af(),a){const p=l[u].materialIndex;for(let g=f,m=r.length;g<m;g++)r[g].face.materialIndex=p}}return r}raycastFirst(t,e=_o){const n=this._roots,i=this.geometry,r=e.isMaterial,o=Array.isArray(e);let a=null;const l=i.groups,c=r?e.side:e;for(let u=0,h=n.length;u<h;u++){const d=o?e[l[u].materialIndex].side:c;ru(n[u]);const f=Xx(0,i,d,t);af(),f!=null&&(a==null||f.distance<a.distance)&&(a=f,o&&(f.face.materialIndex=l[u].materialIndex))}return a}intersectsGeometry(t,e){const n=this.geometry;let i=!1;for(const r of this._roots)if(ru(r),i=FB(0,n,t,e),af(),i)break;return i}shapecast(t,e,n){const i=this.geometry;if(t instanceof Function){if(e){const d=e;e=(f,p,g,m)=>{const x=p*3;return d(f,x,x+1,x+2,g,m)}}t={boundsTraverseOrder:n,intersectsBounds:t,intersectsTriangle:e,intersectsRange:null},console.warn("MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.")}const r=Qi.getPrimitive();let{boundsTraverseOrder:o,intersectsBounds:a,intersectsRange:l,intersectsTriangle:c}=t;if(l&&c){const d=l;l=(f,p,g,m,x)=>d(f,p,g,m,x)?!0:xS(f,p,i,c,g,m,r)}else l||(c?l=(d,f,p,g)=>xS(d,f,i,c,p,g,r):l=(d,f,p)=>p);let u=!1,h=0;for(const d of this._roots){if(ru(d),u=DB(0,i,a,l,o,h),af(),u)break;h+=d.byteLength}return Qi.releasePrimitive(r),u}bvhcast(t,e,n){let{intersectsRanges:i,intersectsTriangles:r}=n;const o=this.geometry.index,a=this.geometry.attributes.position,l=t.geometry.index,c=t.geometry.attributes.position;El.copy(e).invert();const u=Qi.getPrimitive(),h=Qi.getPrimitive();if(r){let p=function(g,m,x,y,v,b,w,_){for(let C=x,S=x+y;C<S;C++){rr(h,C*3,l,c),h.a.applyMatrix4(e),h.b.applyMatrix4(e),h.c.applyMatrix4(e),h.needsUpdate=!0;for(let T=g,I=g+m;T<I;T++)if(rr(u,T*3,o,a),u.needsUpdate=!0,r(u,h,T,C,v,b,w,_))return!0}return!1};var f=p;if(i){const g=i;i=function(m,x,y,v,b,w,_,C){return g(m,x,y,v,b,w,_,C)?!0:p(m,x,y,v,b,w,_,C)}}else i=p}t.getBoundingBox(cx),cx.applyMatrix4(e);const d=this.shapecast({intersectsBounds:p=>cx.intersectsBox(p),intersectsRange:(p,g,m,x,y,v)=>(lx.copy(v),lx.applyMatrix4(El),t.shapecast({intersectsBounds:b=>lx.intersectsBox(b),intersectsRange:(b,w,_,C,S)=>i(p,g,b,w,x,y,C,S)}))});return Qi.releasePrimitive(u),Qi.releasePrimitive(h),d}intersectsBox(t,e){return Ko.set(t.min,t.max,e),Ko.needsUpdate=!0,this.shapecast({intersectsBounds:n=>Ko.intersectsBox(n),intersectsTriangle:n=>Ko.intersectsTriangle(n)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,n={},i={},r=0,o=1/0){t.boundingBox||t.computeBoundingBox(),Ko.set(t.boundingBox.min,t.boundingBox.max,e),Ko.needsUpdate=!0;const a=this.geometry,l=a.attributes.position,c=a.index,u=t.attributes.position,h=t.index,d=Qi.getPrimitive(),f=Qi.getPrimitive();let p=lf,g=LB,m=null,x=null;i&&(m=PB,x=OB);let y=1/0,v=null,b=null;return El.copy(e).invert(),Jc.matrix.copy(El),this.shapecast({boundsTraverseOrder:w=>Ko.distanceToBox(w),intersectsBounds:(w,_,C)=>C<y&&C<o?(_&&(Jc.min.copy(w.min),Jc.max.copy(w.max),Jc.needsUpdate=!0),!0):!1,intersectsRange:(w,_)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:C=>Jc.distanceToBox(C),intersectsBounds:(C,S,T)=>T<y&&T<o,intersectsRange:(C,S)=>{for(let T=C*3,I=(C+S)*3;T<I;T+=3){rr(f,T,h,u),f.a.applyMatrix4(e),f.b.applyMatrix4(e),f.c.applyMatrix4(e),f.needsUpdate=!0;for(let M=w*3,$=(w+_)*3;M<$;M+=3){rr(d,M,c,l),d.needsUpdate=!0;const E=d.distanceToTriangle(f,p,m);if(E<y&&(g.copy(p),x&&x.copy(m),y=E,v=M/3,b=T/3),E<r)return!0}}}});{const C=h?h.count:u.count;for(let S=0,T=C;S<T;S+=3){rr(f,S,h,u),f.a.applyMatrix4(e),f.b.applyMatrix4(e),f.c.applyMatrix4(e),f.needsUpdate=!0;for(let I=w*3,M=(w+_)*3;I<M;I+=3){rr(d,I,c,l),d.needsUpdate=!0;const $=d.distanceToTriangle(f,p,m);if($<y&&(g.copy(p),x&&x.copy(m),y=$,v=I/3,b=S/3),$<r)return!0}}}}}),Qi.releasePrimitive(d),Qi.releasePrimitive(f),y===1/0?null:(n.point?n.point.copy(g):n.point=g.clone(),n.distance=y,n.faceIndex=v,i&&(i.point?i.point.copy(x):i.point=x.clone(),i.point.applyMatrix4(El),g.applyMatrix4(El),i.distance=g.sub(i.point).length(),i.faceIndex=b),n)}closestPointToPoint(t,e={},n=0,i=1/0){const r=n*n,o=i*i;let a=1/0,l=null;if(this.shapecast({boundsTraverseOrder:u=>(Qc.copy(t).clamp(u.min,u.max),Qc.distanceToSquared(t)),intersectsBounds:(u,h,d)=>d<a&&d<o,intersectsTriangle:(u,h)=>{u.closestPointToPoint(t,Qc);const d=t.distanceToSquared(Qc);return d<a&&(lf.copy(Qc),a=d,l=h),d<r}}),a===1/0)return null;const c=Math.sqrt(a);return e.point?e.point.copy(lf):e.point=lf.clone(),e.distance=c,e.faceIndex=l,e}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(n=>{cr(0,new Float32Array(n),yS),t.union(yS)}),t}}const ux=new Sp,bS=new je,zB=Je.prototype.raycast;function BB(s,t){if(this.geometry.boundsTree){if(this.material===void 0)return;bS.copy(this.matrixWorld).invert(),ux.copy(s.ray).applyMatrix4(bS);const e=this.geometry.boundsTree;if(s.firstHitOnly===!0){const n=gS(e.raycastFirst(ux,this.material),this,s);n&&t.push(n)}else{const n=e.raycast(ux,this.material);for(let i=0,r=n.length;i<r;i++){const o=gS(n[i],this,s);o&&t.push(o)}}}else zB.call(this,s,t)}function UB(s){return this.boundsTree=new xu(this,s),this.boundsTree}function VB(){this.boundsTree=null}ts.prototype.computeBoundsTree=UB;ts.prototype.disposeBoundsTree=VB;Je.prototype.raycast=BB;const ny=4,vS=16,ET=.19,WB=new Ga(.04,.04,ET),GB=new Ha({color:16777215}),HB=new KL({color:5329233,wireframe:!1}),qB=new Ha({color:16753920}),XB=new Ha({color:65280});class wS extends Z0{constructor(t,e=1,n=.15){super(),this.roadSpline=new Px(t,!1,"catmullrom",.5),this.roadWidth=e,this.roadLength=this.roadSpline.getLength();let i=new uB,r=new Ha({color:16771584,wireframe:!1,side:Cs});const o=new Bt({mass:0,material:new Xa({friction:.15,restitution:.25})}),a=this.roadSpline.getSpacedPoints(Math.floor(this.roadLength/n));this.pointsIn2D=a.map(S=>new Tt(S.x,S.z));const l=i.data(a.map(S=>[S.x,S.z])).arcSegments(20).offsetLine(e/2).map(S=>S.map(T=>new W(T[0],0,T[1]))),c=l.map(S=>new Px(S,!0,"catmullrom",.05)),u=new Lf(c[0].getSpacedPoints(Math.floor(c[0].getLength()/n)).map(S=>new Tt(S.x,S.z)));for(let S=0;S<l.length;S++){const T=c[S],I=T.getSpacedPoints(Math.floor(T.getLength()/n));S>0&&u.holes.push(new Ox(I.map(M=>new Tt(M.x,M.z))));for(let M=1;M<I.length;M++){let $=I[M].clone().sub(I[M-1]),E=I[M].clone().add(I[M-1]).divideScalar(2);o.addShape(new qu(new N($.length()/2,.2/2,.01/2)),new N(E.x,E.y+.1,E.z),new hn().setFromAxisAngle(new N(0,1,0),Math.atan2(-$.z,$.x)))}}const h=new Lf([new Tt(.2,.005),new Tt(-.2,.005),new Tt(-.2,-.005),new Tt(.2,-.005),new Tt(.2,.005)]),d=c.map(S=>new H0(h,{steps:Math.floor(S.getLength()/n),extrudePath:S})),f=hB(d,!1);f.computeBoundsTree();const p=new Je(f,r);this.barrierMesh=p,p.castShadow=!1,p.receiveShadow=!1,p.layers.enable(ny),this.meshes.push(p);let g=new X0(u),m=new Je(g,HB);m.rotateX(Math.PI/2),m.scale.setZ(-1),m.translateZ(-.01),m.receiveShadow=!0,this.meshes.push(m);let x=this.roadSpline.getLength(),y=Math.floor(x/ET/2);for(let S=1;S<y;S+=2){let T=S/y,I=this.roadSpline.getPointAt(T),M=this.roadSpline.getTangentAt(T),$=new Je(WB,GB);$.receiveShadow=!0,$.castShadow=!1,$.position.x=I.x,$.position.y=I.y,$.position.z=I.z,$.rotateY(Math.atan2(M.x,M.z)),this.meshes.push($)}const v=new Ff(this.roadWidth/2,16);v.rotateX(-Math.PI/2),v.translate(t[0].x,.025,t[0].z);const b=new Je(v,qB);this.meshes.push(b);const w=new Ff(this.roadWidth/2,16);w.rotateX(-Math.PI/2),this.finishX=t[t.length-1].x,this.finishZ=t[t.length-1].z,w.translate(this.finishX,.025,this.finishZ);const _=new Je(w,XB);this.meshes.push(_),o.collisionFilterGroup=vS,o.collisionFilterMask=~vS,this.bodies.push(o),this.barrrierBody=o,this.startX=t[0].x,this.startZ=t[0].z;const C=this.roadSpline.getTangentAt(0);this.startRotation=-Math.atan2(-C.z,C.x)+Math.PI/2,this.endX=t[t.length-1].x,this.endZ=t[t.length-1].z}isFinished(t,e){return(this.finishX-t)**2+(this.finishZ-e)**2<this.roadWidth**2}amountCompleted(t,e){const n=new Tt(t,e),i=this.pointsIn2D.map(r=>r.distanceToSquared(n));return i.indexOf(Math.min(...i))/(this.pointsIn2D.length-1)}syncMeshesToBodies(){}}const jB=new Ha({color:16777215});class KB extends Z0{constructor(t=0,e=100,n=100){super(),this.ylevel=t;const i=new _p(e,n),r=new Je(i,jB);r.rotation.x=-Math.PI/2,r.position.y=t,r.layers.enable(ny),this.mesh=r,this.meshes.push(r);const o=new cO,a=new Bt({mass:0,material:new Xa({friction:.12,restitution:.5})});a.addShape(o),a.quaternion.setFromAxisAngle(new N(1,0,0),-Math.PI/2),a.position.y=t,this.body=a,this.bodies.push(a)}syncMeshesToBodies(){}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB=1e-7,ZB=1e-4;class MT{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class sy{refCount(t){return vs("refCount")}incRef(t){return vs("incRef")}timerAvailable(){return!0}time(t){return vs("time")}read(t){return vs("read")}readSync(t){return vs("readSync")}readToGPU(t,e){return vs("readToGPU")}numDataIds(){return vs("numDataIds")}disposeData(t,e){return vs("disposeData")}write(t,e,n){return vs("write")}move(t,e,n,i,r){return vs("move")}createTensorFromTexture(t,e,n){return vs("createTensorFromTexture")}memory(){return vs("memory")}floatPrecision(){return vs("floatPrecision")}epsilon(){return this.floatPrecision()===32?YB:ZB}dispose(){return vs("dispose")}}function vs(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(s){let t=s.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Fl(s,t,e)}function Aa(s,t,e){return Math.max(s,Math.min(t,e))}function iy(s){return s%2===0?s:s+1}function Fl(s,t,e){const n=s[t];s[t]=s[e],s[e]=n}function QB(s){let t=0;for(let e=0;e<s.length;e++)t+=s[e];return t}function F(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function yi(s,t,e=""){F(Ne(s,t),()=>e+` Shapes ${s} and ${t} must match`)}function AT(s){F(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function rc(s,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(s)||xr(s)&&!e)for(let n=0;n<s.length;++n)rc(s[n],t,e);else t.push(s);return t}function ft(s){if(s.length===0)return 1;let t=s[0];for(let e=1;e<s.length;e++)t*=s[e];return t}function Ne(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let e=0;e<s.length;e++)if(s[e]!==t[e])return!1;return!0}function oc(s){return s%1===0}function Kx(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function jl(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function SS(s,t=i=>0,e,n){return new Promise((i,r)=>{let o=0;const a=()=>{if(s()){i();return}o++;const l=t(o);if(e!=null&&o>=e){r();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function kT(s,t){let e=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)e*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(e===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const i=s.slice();return i[n]=t/e,i}function ge(s,t){const e=t.length;return s=s==null?t.map((n,i)=>i):[].concat(s),F(s.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${s}`),F(s.every(n=>oc(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?e+n:n)}function No(s,t){const e=[],n=[],i=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||i?null:ge(t,s).sort();let o=0;for(let a=0;a<s.length;++a){if(r!=null){if(r[o]===a&&s[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${s[a]}' is not 1`);(r[o]==null||r[o]>a)&&s[a]===1&&(e.push(s[a]),n.push(a)),r[o]<=a&&o++}s[a]!==1&&(e.push(s[a]),n.push(a))}return{newShape:e,keptDims:n}}function Hn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return e}function yn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else if(s==="string")e=new Array(t);else throw new Error(`Unknown data type ${s}`);return e}function t4(s,t){for(let e=0;e<s.length;e++){const n=s[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function e4(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function NT(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function xr(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}function Yx(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function n4(s){if(s==null)return 0;let t=0;return s.forEach(e=>t+=e.length),t}function Yu(s){return typeof s=="string"||s instanceof String}function s4(s){return typeof s=="boolean"}function Zx(s){return typeof s=="number"}function Zu(s){return Array.isArray(s)?Zu(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":Zx(s)?"float32":Yu(s)?"string":s4(s)?"bool":"float32"}function Jx(s){return!!(s&&s.constructor&&s.call&&s.apply)}function Qx(s,t){for(let e=t;e<s;++e)if(s%e===0)return e;return s}function re(s){const t=s.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=s[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*s[n+1];return e}function RT(s,t,e,n=!1){const i=new Array;if(t.length===1){const r=t[0]*(n?2:1);for(let o=0;o<r;o++)i[o]=e[s+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((l,c)=>l*c)*(n?2:1);for(let l=0;l<r;l++)i[l]=RT(s+l*a,o,e,n)}return i}function Pi(s,t,e=!1){if(s.length===0)return t[0];const n=s.reduce((i,r)=>i*r)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return RT(0,s,t,e)}function ry(s,t){const e=Qn(s,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function Qn(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function $T(s,t){const e=s.reduce((n,i)=>n*i,1);if(t==null||t==="float32")return Pi(s,new Float32Array(e));if(t==="int32")return Pi(s,new Int32Array(e));if(t==="bool")return Pi(s,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function DT(s){s.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function dr(s,t,e){if(t===0)return 0;if(t===1)return s[0];let n=s[s.length-1];for(let i=0;i<s.length-1;++i)n+=e[i]*s[i];return n}function Ic(s,t,e){if(t===0)return[];if(t===1)return[s];const n=new Array(t);for(let i=0;i<n.length-1;++i)n[i]=Math.floor(s/e[i]),s-=n[i]*e[i];return n[n.length-1]=s,n}function FT(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _S="tfjsflags";class i4{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=r4,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(lt().getBool("IS_TEST")||lt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){const i=this.urlFlags[t];lt().getBool("IS_TEST")||lt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${i}.`),this.set(t,i)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(FT(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);_S in t&&t[_S].split(",").forEach(n=>{const[i,r]=n.split(":");this.urlFlags[i]=a4(i,r)})}}function r4(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(o4(t,n[0],n[1]),n.join("="))),t}function o4(s,t,e){s[decodeURIComponent(t)]=decodeURIComponent(e||"")}function a4(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function lt(){return LT}let LT=null;function l4(s){LT=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hx;function PT(){if(hx==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");hx=s}return hx}function c4(){const s=PT();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function oy(s,t){const e=c4();if(e.has(s))return e.get(s);{const n=t();return e.set(s,n),e.get(s)}}const kp="Abs",Ju="Acos",Qu="Acosh",Ec="Add",ay="AddN",ly="All",cy="Any",Np="ArgMax",Rp="ArgMin",th="Asin",eh="Asinh",nh="Atan",sh="Atanh",ih="Atan2",$p="AvgPool",uy="AvgPoolGrad",Dp="AvgPool3D",hy="AvgPool3DGrad",Fp="BatchMatMul",Lp="BatchToSpaceND",dy="Bincount",u4="BroadcastTo",OT="BroadcastArgs",rh="Cast",oh="Ceil",ah="ClipByValue",fy="Complex",Pp="ComplexAbs",Op="Concat",zp="Conv2D",py="Conv2DBackpropFilter",Bp="Conv2DBackpropInput",Up="Conv3D",my="Conv3DBackpropFilterV2",gy="Conv3DBackpropInputV2",lh="Cos",ch="Cosh",xy="Cumprod",Vp="Cumsum",yy="CropAndResize",by="DenseBincount",vy="DepthToSpace",Wp="DepthwiseConv2dNative",wy="DepthwiseConv2dNativeBackpropFilter",Sy="DepthwiseConv2dNativeBackpropInput",zT="Diag",Gp="Dilation2D",t0="Dilation2DBackpropInput",e0="Dilation2DBackpropFilter",uh="RealDiv",BT="Einsum",hh="Elu",_y="EluGrad",dh="Erf",Hp="Equal",fh="Exp",qp="ExpandDims",ph="Expm1",Cy="FFT",Ty="Fill",Iy="FlipLeftRight",mh="Floor",gh="FloorDiv",Xp="FusedBatchNorm",jp="GatherV2",UT="GatherNd",Kp="Greater",xh="GreaterEqual",yh="Identity",Ey="IFFT",My="Imag",bh="IsFinite",vh="IsInf",wh="IsNan",Yp="LeakyRelu",Zp="Less",Jp="LessEqual",VT="LinSpace",Sh="Log",_h="Log1p",Qp="LogicalAnd",tm="LogicalNot",em="LogicalOr",h4="LogSoftmax",nm="LRN",Ay="LRNGrad",sm="Max",Ch="Maximum",im="MaxPool",ky="MaxPoolGrad",rm="MaxPool3D",Ny="MaxPool3DGrad",WT="MaxPoolWithArgmax",om="Mean",am="Min",Th="Minimum",lm="MirrorPad",Ih="Mod",GT="Multinomial",Eh="Multiply",cm="Neg",um="NotEqual",Ry="NonMaxSuppressionV3",$y="NonMaxSuppressionV4",Dy="NonMaxSuppressionV5",hm="OnesLike",dm="OneHot",fm="Pack",pm="PadV2",Mh="Pow",mm="Prelu",gm="Prod",HT="RaggedGather",qT="RaggedRange",XT="RaggedTensorToTensor",Fy="Range",Ly="Real",Ah="Reciprocal",kh="Relu",xm="Reshape",ym="ResizeNearestNeighbor",Py="ResizeNearestNeighborGrad",bm="ResizeBilinear",Oy="ResizeBilinearGrad",Nh="Relu6",vm="Reverse",Rh="Round",$h="Rsqrt",jT="ScatterNd",KT="SearchSorted",wm="Select",Dh="Selu",Sm="Slice",Fh="Sin",Lh="Sinh",Ph="Sign",Oh="Sigmoid",zh="Softplus",Bh="Sqrt",_m="Sum",Cm="SpaceToBatchND",Tm="SplitV",Im="Softmax",zy="SparseFillEmptyRows",By="SparseReshape",Uy="SparseSegmentMean",Vy="SparseSegmentSum",YT="SparseToDense",Uh="SquaredDifference",Wy="Square",Gy="StridedSlice",Hy="StringNGrams",qy="StringSplit",Xy="StringToHashBucketFast",Vh="Sub",Wh="Tan",Gh="Tanh",Hh="Tile",jy="TopK",Ky="Transform",Kl="Transpose",Yy="Unique",Em="Unpack",Mm="UnsortedSegmentSum",Am="ZerosLike",qh="Step",d4="FromPixels",Zy="RotateWithOffset",Vf="_FusedMatMul",Wf="FusedConv2D",ZT="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Os(...s){lt().getBool("IS_TEST")||lt().getBool("PROD")||console.warn(...s)}function f4(...s){lt().getBool("IS_TEST")||lt().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gf=oy("kernelRegistry",()=>new Map),n0=oy("gradRegistry",()=>new Map);function CS(s,t){const e=QT(s,t);return Gf.get(e)}function TS(s){return n0.get(s)}function IS(s){const t=Gf.entries(),e=[];for(;;){const{done:n,value:i}=t.next();if(n)break;const[r,o]=i,[a]=r.split("_");a===s&&e.push(o)}return e}function JT(s){const{kernelName:t,backendName:e}=s,n=QT(t,e);Gf.has(n)&&Os(`The kernel '${t}' for backend '${e}' is already registered`),Gf.set(n,s)}function p4(s){const{kernelName:t}=s;n0.has(t)&&lt().getBool("DEBUG")&&Os(`Overriding the gradient for '${t}'`),n0.set(t,s)}function QT(s,t){return`${t}_${s}`}var s0=Ke,ai=null;try{ai=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ke(s,t,e){this.low=s|0,this.high=t|0,this.unsigned=!!e}Ke.prototype.__isLong__;Object.defineProperty(Ke.prototype,"__isLong__",{value:!0});function $s(s){return(s&&s.__isLong__)===!0}Ke.isLong=$s;var ES={},MS={};function Ka(s,t){var e,n,i;return t?(s>>>=0,(i=0<=s&&s<256)&&(n=MS[s],n)?n:(e=Ye(s,(s|0)<0?-1:0,!0),i&&(MS[s]=e),e)):(s|=0,(i=-128<=s&&s<128)&&(n=ES[s],n)?n:(e=Ye(s,s<0?-1:0,!1),i&&(ES[s]=e),e))}Ke.fromInt=Ka;function li(s,t){if(isNaN(s))return t?da:ci;if(t){if(s<0)return da;if(s>=tI)return sI}else{if(s<=-kS)return Ts;if(s+1>=kS)return nI}return s<0?li(-s,t).neg():Ye(s%ac|0,s/ac|0,t)}Ke.fromNumber=li;function Ye(s,t,e){return new Ke(s,t,e)}Ke.fromBits=Ye;var Hf=Math.pow;function Jy(s,t,e){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return ci;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return Jy(s.substring(1),t,e).neg();for(var i=li(Hf(e,8)),r=ci,o=0;o<s.length;o+=8){var a=Math.min(8,s.length-o),l=parseInt(s.substring(o,o+a),e);if(a<8){var c=li(Hf(e,a));r=r.mul(c).add(li(l))}else r=r.mul(i),r=r.add(li(l))}return r.unsigned=t,r}Ke.fromString=Jy;function Xi(s,t){return typeof s=="number"?li(s,t):typeof s=="string"?Jy(s,t):Ye(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}Ke.fromValue=Xi;var AS=1<<16,m4=1<<24,ac=AS*AS,tI=ac*ac,kS=tI/2,NS=Ka(m4),ci=Ka(0);Ke.ZERO=ci;var da=Ka(0,!0);Ke.UZERO=da;var Ul=Ka(1);Ke.ONE=Ul;var eI=Ka(1,!0);Ke.UONE=eI;var i0=Ka(-1);Ke.NEG_ONE=i0;var nI=Ye(-1,2147483647,!1);Ke.MAX_VALUE=nI;var sI=Ye(-1,-1,!0);Ke.MAX_UNSIGNED_VALUE=sI;var Ts=Ye(0,-2147483648,!1);Ke.MIN_VALUE=Ts;var Rt=Ke.prototype;Rt.toInt=function(){return this.unsigned?this.low>>>0:this.low};Rt.toNumber=function(){return this.unsigned?(this.high>>>0)*ac+(this.low>>>0):this.high*ac+(this.low>>>0)};Rt.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ts)){var e=li(t),n=this.div(e),i=n.mul(e).sub(this);return n.toString(t)+i.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var r=li(Hf(t,6),this.unsigned),o=this,a="";;){var l=o.div(r),c=o.sub(l.mul(r)).toInt()>>>0,u=c.toString(t);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Rt.getHighBits=function(){return this.high};Rt.getHighBitsUnsigned=function(){return this.high>>>0};Rt.getLowBits=function(){return this.low};Rt.getLowBitsUnsigned=function(){return this.low>>>0};Rt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ts)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};Rt.isZero=function(){return this.high===0&&this.low===0};Rt.eqz=Rt.isZero;Rt.isNegative=function(){return!this.unsigned&&this.high<0};Rt.isPositive=function(){return this.unsigned||this.high>=0};Rt.isOdd=function(){return(this.low&1)===1};Rt.isEven=function(){return(this.low&1)===0};Rt.equals=function(t){return $s(t)||(t=Xi(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};Rt.eq=Rt.equals;Rt.notEquals=function(t){return!this.eq(t)};Rt.neq=Rt.notEquals;Rt.ne=Rt.notEquals;Rt.lessThan=function(t){return this.comp(t)<0};Rt.lt=Rt.lessThan;Rt.lessThanOrEqual=function(t){return this.comp(t)<=0};Rt.lte=Rt.lessThanOrEqual;Rt.le=Rt.lessThanOrEqual;Rt.greaterThan=function(t){return this.comp(t)>0};Rt.gt=Rt.greaterThan;Rt.greaterThanOrEqual=function(t){return this.comp(t)>=0};Rt.gte=Rt.greaterThanOrEqual;Rt.ge=Rt.greaterThanOrEqual;Rt.compare=function(t){if($s(t)||(t=Xi(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};Rt.comp=Rt.compare;Rt.negate=function(){return!this.unsigned&&this.eq(Ts)?Ts:this.not().add(Ul)};Rt.neg=Rt.negate;Rt.add=function(t){$s(t)||(t=Xi(t));var e=this.high>>>16,n=this.high&65535,i=this.low>>>16,r=this.low&65535,o=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,h=0,d=0,f=0;return f+=r+c,d+=f>>>16,f&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=n+a,u+=h>>>16,h&=65535,u+=e+o,u&=65535,Ye(d<<16|f,u<<16|h,this.unsigned)};Rt.subtract=function(t){return $s(t)||(t=Xi(t)),this.add(t.neg())};Rt.sub=Rt.subtract;Rt.multiply=function(t){if(this.isZero())return ci;if($s(t)||(t=Xi(t)),ai){var e=ai.mul(this.low,this.high,t.low,t.high);return Ye(e,ai.get_high(),this.unsigned)}if(t.isZero())return ci;if(this.eq(Ts))return t.isOdd()?Ts:ci;if(t.eq(Ts))return this.isOdd()?Ts:ci;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(NS)&&t.lt(NS))return li(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,f=0,p=0;return p+=o*u,f+=p>>>16,p&=65535,f+=r*u,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=n*u+i*c+r*l+o*a,h&=65535,Ye(f<<16|p,h<<16|d,this.unsigned)};Rt.mul=Rt.multiply;Rt.divide=function(t){if($s(t)||(t=Xi(t)),t.isZero())throw Error("division by zero");if(ai){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?ai.div_u:ai.div_s)(this.low,this.high,t.low,t.high);return Ye(e,ai.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?da:ci;var n,i,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return da;if(t.gt(this.shru(1)))return eI;r=da}else{if(this.eq(Ts)){if(t.eq(Ul)||t.eq(i0))return Ts;if(t.eq(Ts))return Ul;var o=this.shr(1);return n=o.div(t).shl(1),n.eq(ci)?t.isNegative()?Ul:i0:(i=this.sub(t.mul(n)),r=n.add(i.div(t)),r)}else if(t.eq(Ts))return this.unsigned?da:ci;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=ci}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:Hf(2,a-48),c=li(n),u=c.mul(t);u.isNegative()||u.gt(i);)n-=l,c=li(n,this.unsigned),u=c.mul(t);c.isZero()&&(c=Ul),r=r.add(c),i=i.sub(u)}return r};Rt.div=Rt.divide;Rt.modulo=function(t){if($s(t)||(t=Xi(t)),ai){var e=(this.unsigned?ai.rem_u:ai.rem_s)(this.low,this.high,t.low,t.high);return Ye(e,ai.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};Rt.mod=Rt.modulo;Rt.rem=Rt.modulo;Rt.not=function(){return Ye(~this.low,~this.high,this.unsigned)};Rt.and=function(t){return $s(t)||(t=Xi(t)),Ye(this.low&t.low,this.high&t.high,this.unsigned)};Rt.or=function(t){return $s(t)||(t=Xi(t)),Ye(this.low|t.low,this.high|t.high,this.unsigned)};Rt.xor=function(t){return $s(t)||(t=Xi(t)),Ye(this.low^t.low,this.high^t.high,this.unsigned)};Rt.shiftLeft=function(t){return $s(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Ye(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Ye(0,this.low<<t-32,this.unsigned)};Rt.shl=Rt.shiftLeft;Rt.shiftRight=function(t){return $s(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Ye(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Ye(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};Rt.shr=Rt.shiftRight;Rt.shiftRightUnsigned=function(t){if($s(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return Ye(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Ye(e,0,this.unsigned):Ye(e>>>t-32,0,this.unsigned)};Rt.shru=Rt.shiftRightUnsigned;Rt.shr_u=Rt.shiftRightUnsigned;Rt.toSigned=function(){return this.unsigned?Ye(this.low,this.high,!1):this};Rt.toUnsigned=function(){return this.unsigned?this:Ye(this.low,this.high,!0)};Rt.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};Rt.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};Rt.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Ke.fromBytes=function(t,e,n){return n?Ke.fromBytesLE(t,e):Ke.fromBytesBE(t,e)};Ke.fromBytesLE=function(t,e){return new Ke(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Ke.fromBytesBE=function(t,e){return new Ke(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const g4=dN({__proto__:null,default:s0},[s0]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa=s0||g4;function km(s){return sa.fromString(s,!0,16)}const iI=km("c3a5c85c97cb3127"),ta=km("b492b66fbe98f273"),is=km("9ae16a3b2f90404f");function r0(s){return s.xor(s.shru(47))}function rI(s,t,e){const n=s.slice(t,t+e);return sa.fromBytes(Array.from(n),!0,!0)}function Ve(s,t){return rI(s,t,8)}function RS(s,t){return rI(s,t,4)}function Rn(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function yo(s,t,e=km("9ddfea08eb382d69")){let n=s.xor(t).mul(e);n=n.xor(n.shru(47));let i=t.xor(n).mul(e);return i=i.xor(i.shru(47)),i=i.mul(e),i}function x4(s,t,e,n,i,r){i=i.add(s),r=Rn(r.add(i).add(n),21);const o=i;return i=i.add(t),i=i.add(e),r=r.add(Rn(i,44)),[i.add(n),r.add(o)]}function cf(s,t,e,n){return x4(Ve(s,t),Ve(s,t+8),Ve(s,t+16),Ve(s,t+24),e,n)}function y4(s,t=s.length){if(t>=8){const e=is.add(t*2),n=Ve(s,0).add(is),i=Ve(s,t-8),r=Rn(i,37).mul(e).add(n),o=Rn(n,25).add(i).mul(e);return yo(r,o,e)}if(t>=4){const e=is.add(t*2),n=RS(s,0);return yo(n.shl(3).add(t),RS(s,t-4),e)}if(t>0){const e=s[0],n=s[t>>1],i=s[t-1],r=e+(n<<8),o=t+(i<<2);return r0(is.mul(r).xor(iI.mul(o))).mul(is)}return is}function b4(s,t=s.length){const e=is.add(t*2),n=Ve(s,0).mul(ta),i=Ve(s,8),r=Ve(s,t-8).mul(e),o=Ve(s,t-16).mul(is);return yo(Rn(n.add(i),43).add(Rn(r,30)).add(o),n.add(Rn(i.add(is),18)).add(r),e)}function v4(s,t=s.length){const e=is.add(t*2),n=Ve(s,0).mul(is),i=Ve(s,8),r=Ve(s,t-8).mul(e),o=Ve(s,t-16).mul(is),a=Rn(n.add(i),43).add(Rn(r,30)).add(o),l=yo(a,n.add(Rn(i.add(is),18)).add(r),e),c=Ve(s,16).mul(e),u=Ve(s,24),h=a.add(Ve(s,t-32)).mul(e),d=l.add(Ve(s,t-24)).mul(e);return yo(Rn(c.add(u),43).add(Rn(h,30)).add(d),c.add(Rn(u.add(n),18)).add(h),e)}function w4(s,t=s.length){const e=sa.fromNumber(81,!0);if(t<=32)return t<=16?y4(s,t):b4(s,t);if(t<=64)return v4(s,t);let n=e,i=e.mul(ta).add(113),r=r0(i.mul(is).add(113)).mul(is),o=[sa.UZERO,sa.UZERO],a=[sa.UZERO,sa.UZERO];n=n.mul(is).add(Ve(s,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do n=Rn(n.add(i).add(o[0]).add(Ve(s,l+8)),37).mul(ta),i=Rn(i.add(o[1]).add(Ve(s,l+48)),42).mul(ta),n=n.xor(a[1]),i=i.add(o[0]).add(Ve(s,l+40)),r=Rn(r.add(a[0]),33).mul(ta),o=cf(s,l,o[1].mul(ta),n.add(a[0])),a=cf(s,l+32,r.add(a[1]),i.add(Ve(s,l+16))),[r,n]=[n,r],l+=64;while(l!==c);const h=ta.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),n=Rn(n.add(i).add(o[0]).add(Ve(s,l+8)),37).mul(h),i=Rn(i.add(o[1]).add(Ve(s,l+48)),42).mul(h),n=n.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(Ve(s,l+40))),r=Rn(r.add(a[0]),33).mul(h),o=cf(s,l,o[1].mul(h),n.add(a[0])),a=cf(s,l+32,r.add(a[1]),i.add(Ve(s,l+16))),[r,n]=[n,r],yo(yo(o[0],a[0],h).add(r0(i).mul(iI)).add(r),yo(o[1],a[1],h).add(n),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(s,t){return t==="string"?bo(s):Ya([s],t)}function S4(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function Ya(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=rc(s)),lt().getBool("DEBUG")&&t4(s,t),S4(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const e=new Uint8Array(s.length);for(let n=0;n<e.length;++n)Math.round(s[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function ds(){return lt().platform.now()}function bo(s,t="utf-8"){return t=t||"utf-8",lt().platform.encode(s,t)}function Co(s,t="utf-8"){return t=t||"utf-8",lt().platform.decode(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _4{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new T4)}profileKernel(t,e,n){let i;const r=()=>{i=n()};let o;const a=ds();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const c of i)c.dataSync();o=Promise.resolve({kernelMs:ds()-a})}if(lt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<i.length;c++){const u=i[c];u.data().then(h=>{C4(h,u.dtype,t)})}return{kernelName:t,outputs:i,inputs:e,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:i,inputs:r,extraInfo:o}=t;n.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],r,l[2])})})}}function C4(s,t,e){if(t!=="float32")return!1;for(let n=0;n<s.length;n++){const i=s[n];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${e}'`),!0}return!1}class T4{logKernelProfile(t,e,n,i,r,o){const a=typeof i=="number"?jl(`${i}ms`,9):i.error,l=jl(t,25),c=e.rank,u=e.size,h=jl(e.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const g=p.shape||e.shape,m=g.length;d+=`${f}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(s,t,e){const n={},i={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<s.length;l++){const c=s[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<t.length;p++)if(n[d.id]){c.outputs.forEach(g=>n[g.id]=!0),f=!0,i[c.id]=!0;break}if(f)break}}const r={};r[e.id]=!0;const o={};for(let l=s.length-1;l>=0;l--){const c=s[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<s.length;l++){const c=s[l];if(i[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];n[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function E4(s,t,e,n){for(let i=t.length-1;i>=0;i--){const r=t[i],o=[];if(r.outputs.forEach(l=>{const c=s[l.id];c!=null?o.push(c):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Ne(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(s[u.id]==null)s[u.id]=c;else{const h=s[u.id];s[u.id]=n(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S=20,tu=3,dx=7;function M4(s,t,e,n){const i=re(t),r=A4(s,t,e,i),o=t.length,a=kf(s,t,e,i,r),l=["Tensor"];return n&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function A4(s,t,e,n){const i=ft(t),r=n[n.length-1],o=new Array(r).fill(0),a=t.length,l=e==="complex64"?au(s):s;if(a>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],ou(l[u+h],0,e).length)}return o}function ou(s,t,e){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(dx))} + ${parseFloat(s[1].toFixed(dx))}j`:Yu(s)?n=`'${s}'`:e==="bool"?n=oI(s):n=parseFloat(s.toFixed(dx)).toString(),jl(n,t)}function oI(s){return s===0?"false":"true"}function kf(s,t,e,n,i,r=!0){const o=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const g=au(s);return[ou(g[0],0,e)]}return e==="bool"?[oI(s[0])]:[s[0].toString()]}if(l===1){if(a>$S){const m=tu*o;let x=Array.from(s.slice(0,m)),y=Array.from(s.slice((a-tu)*o,a*o));return e==="complex64"&&(x=au(x),y=au(y)),["["+x.map((v,b)=>ou(v,i[b],e)).join(", ")+", ..., "+y.map((v,b)=>ou(v,i[a-tu+b],e)).join(", ")+"]"]}return["["+(e==="complex64"?au(s):Array.from(s)).map((m,x)=>ou(m,i[x],e)).join(", ")+"]"]}const c=t.slice(1),u=n.slice(1),h=n[0]*o,d=[];if(a>$S){for(let g=0;g<tu;g++){const m=g*h,x=m+h;d.push(...kf(s.slice(m,x),c,e,u,i,!1))}d.push("...");for(let g=a-tu;g<a;g++){const m=g*h,x=m+h;d.push(...kf(s.slice(m,x),c,e,u,i,g===a-1))}}else for(let g=0;g<a;g++){const m=g*h,x=m+h;d.push(...kf(s.slice(m,x),c,e,u,i,g===a-1))}const f=l===2?",":"";d[0]="["+d[0]+f;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+f;let p=`,
`;for(let g=2;g<l;g++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function au(s){const t=[];for(let e=0;e<s.length;e+=2)t.push([s[e],s[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ft(t),n!=null){const i=n.length;F(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||yn(e,this.size),this.strides=re(t)}set(t,...e){e.length===0&&(e=[0]),F(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const i of t){if(i<0||i>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let n=t[t.length-1];for(let i=0;i<t.length-1;++i)n+=this.strides[i]*t[i];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Mi().makeTensor(this.values,this.shape,this.dtype)}}let Mi=null,Ll=null;function k4(s){Mi=s}function N4(s){Ll=s}class xn{constructor(t,e,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ft(t),this.strides=re(t),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ll.buffer(this.shape,this.dtype,t)}bufferSync(){return Ll.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Pi(this.shape,t,this.dtype==="complex64")}arraySync(){return Pi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Mi().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(n=>Co(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Mi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Mi().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Co(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Mi().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Mi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ll.print(this,t)}clone(){return this.throwIfDisposed(),Ll.clone(this)}toString(t=!1){const e=this.dataSync();return M4(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ll.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Mi().makeVariable(this,t,e,n)}}Object.defineProperty(xn,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function dt(){return oy("Tensor",()=>xn)}dt();class qf extends xn{constructor(t,e,n,i){super(t.shape,t.dtype,t.dataId,i),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Ne(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Mi().disposeTensor(this),this.dataId=t.dataId,Mi().incRef(this,null)}dispose(){Mi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(qf,Symbol.hasInstance,{value:s=>s instanceof xn&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var DS;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(DS||(DS={}));var o0;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(o0||(o0={}));var a0;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(a0||(a0={}));var l0;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(l0||(l0={}));var c0;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(c0||(c0={}));const R4={float32:l0,int32:o0,bool:a0,complex64:c0};function Ms(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return R4[s][t]}function Qy(s){return Ms(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(s,t){if(s.dtype===t.dtype)return[s,t];const e=Ms(s.dtype,t.dtype);return[s.cast(e),t.cast(e)]}function aI(s){const t=[];return lI(s,t,new Set),t}function lI(s,t,e){if(s==null)return;if(s instanceof xn){t.push(s);return}if(!$4(s))return;const n=s;for(const i in n){const r=n[i];e.has(r)||(e.add(r),lI(r,t,e))}}function $4(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fx(s){return s.kernelName!=null}class FS{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class lc{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new FS}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Os(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new _4(this.backendInstance),!0}setupRegisteredKernels(){IS(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){IS(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(n&&!(n instanceof sy)&&typeof n.then=="function"){const i=++this.pendingBackendInitId,r=n.then(o=>i<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Os(`Initialization of backend ${t} failed`),Os(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Os(`Initialization of backend ${t} failed`),Os(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:i,asyncInit:r}=this.initializeBackend(n);if(r||i)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),i=n.backend,r=this.readSync(e),o=i.refCount(e);i.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=e(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(t,e,n){t();try{const i=n();return e(),i}catch(i){throw e(),i}}nextTensorId(){return lc.nextTensorId++}nextVariableId(){return lc.nextVariableId++}clone(t){const e=Y.runKernel(yh,{x:t}),n={x:t},i=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return Y.runKernel(rh,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[e],i,r,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(CS(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const i=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-e-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=fx(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(fx(t)){const{kernelName:p,inputs:g,attrs:m}=t;this.backendName==null&&this.backend;const x=CS(p,this.backendName);F(x!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const y=this.backend.numDataIds();l=x.kernelFunc({inputs:g,attrs:m,backend:this.backend});const v=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,y,v);const b=v.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(p,g,b);n=this.saveTensorsForBackwardMode(w)}return b}}else{const{forwardFunc:p}=t,g=m=>{!i||(n=m.map(x=>this.keep(this.clone(x))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,g));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,x),x}}const{inputs:u,attrs:h}=t,d=fx(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),i&&this.addTapeNode(c,u,e,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:e.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){const i=TS(t);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(F(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=r.map(c=>e[c]);const l=n.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(t,e,n,i){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let r=t;n==="string"&&Yu(t[0])&&(r=t.map(l=>bo(l)));const o=i.write(r,e,n),a=new xn(e,n,o,this.nextTensorId());if(this.trackTensor(a,i),n==="string"){const l=this.state.tensorInfo.get(o),c=n4(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,n,i){n=n||"float32";const r={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:i,dtype:r}=t,o=new xn(i,r,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==t.dtype&&(t=t.cast(i));const r=new qf(t,e,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*Yx(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof qf||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const n=t.size*Yx(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},l=TS(t);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=n[h],f=Qn(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=aI(t),n=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!n.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(t,e,n,i=!1){if(F(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));F(r instanceof xn,()=>"The result y returned by f() must be a tensor.");const o=I4(this.state.activeTape,e,r);if(!i&&o.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=n==null?D4(r.shape):n,E4(a,o,c=>this.tidy(c),F4);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(t){return F(Jx(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{F(e.every(a=>a instanceof xn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const i={};e.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(n=t(...e,l),F(n.value instanceof xn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(Jx(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(a,l)=>{const c=n.gradFunc(a,l),u=Array.isArray(c)?c:[c];F(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(u.every(d=>d instanceof xn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=ds(),n=await this.backend.time(t);return n.wallMs=ds()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new FS;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}lc.nextTensorId=0;lc.nextVariableId=0;function D4(s){const t=ry(ft(s),"float32");return Y.makeTensor(t,s,"float32")}function cI(){const s=PT();if(s._tfengine==null){const t=new i4(s);s._tfengine=new lc(t)}return l4(s._tfengine.ENV),k4(()=>s._tfengine),s._tfengine}const Y=cI();function F4(s,t){const e={a:s,b:t};return Y.runKernel(Ec,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(){return typeof navigator<"u"&&navigator!=null}function uI(s){if(s||L4()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=s;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function hI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const As=lt();As.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});As.registerFlag("IS_BROWSER",()=>hI());As.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");As.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));As.registerFlag("PROD",()=>!1);As.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>As.getBool("DEBUG"));As.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);As.registerFlag("IS_TEST",()=>!1);As.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);As.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);As.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);As.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);As.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nm(s,t){let e=s;if(xr(s))return t==="string"?[]:[s.length];if(typeof s=="object"&&"texture"in s){const i=s.channels||"RGBA";return[s.height,s.width*i.length]}if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(e)||xr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(s)&&lt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&dI(s,n,[]),n}function dI(s,t,e){if(e=e||[],!Array.isArray(s)&&!xr(s)){F(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${s.length} elements`),F(s.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const n=t.slice(1);for(let i=0;i<s.length;++i)dI(s[i],n,e.concat(i))}function LS(s,t,e,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${s} tensor, but got ${t} tensor`)}}function O(s,t,e,n="numeric"){if(s instanceof xn)return LS(n,s.dtype,t,e),s;let i=Zu(s);if(i!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(i=n),LS(n,i,t,e),s==null||!xr(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const r=Nm(s,i);!xr(s)&&!Array.isArray(s)&&(s=[s]);const a=i!=="string"?Ya(s,i):rc(s,[],!0);return Y.makeTensor(a,r,i)}function fI(s,t,e,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,o)=>O(r,`${t}[${o}]`,e,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4="__op";function Z(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const n=s[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+P4;const i=(...r)=>{Y.startScope(e);try{const o=n(...r);return FT(o)&&console.error("Cannot return a Promise inside of tidy."),Y.endScope(o),o}catch(o){throw Y.endScope(null),o}};return Object.defineProperty(i,"name",{value:e,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(s,t){const e=O(s,"real","complex"),n=O(t,"imag","complex");yi(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);const i={real:e,imag:n};return Y.runKernel(fy,i)}const cc=Z({complex_:O4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rm(s,t,e,n){if(n==null&&(n=Zu(s)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof s=="object"&&"texture"in s){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return s.channels=s.channels||"RGBA",Y.backend.createTensorFromTexture(s,t||e,n)}if(!xr(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){DT(t);const i=ft(t),r=ft(e);F(i===r,()=>`Based on the provided shape, [${t}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<e.length;++o){const a=e[o],l=o===e.length-1?a!==ft(t.slice(o)):!0;F(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!xr(s)&&!Array.isArray(s)&&(s=[s]),t=t||e,s=n!=="string"?Ya(s,n):rc(s,[],!0),Y.makeTensor(s,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yu(s,t,e){const n=Nm(s,e);return Rm(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PS=4;async function OS(s,t){const e=[],n=[],i=Array.isArray(s)?s.map(o=>o.name):Object.keys(s);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(s)?s[o].tensor:s[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,x)=>m+x.length,0)+PS*d.length,p=new Uint8Array(f);let g=0;for(let m=0;m<d.length;m++){const x=d[m],y=new Uint8Array(new Uint32Array([x.length]).buffer);p.set(y,g),g+=PS,p.set(x,g),g+=x.length}h(p)});n.push(u)}else n.push(l.data());t!=null&&(c.group=t),e.push(c)}const r=await Promise.all(n);return{data:z4(r),specs:e}}function z4(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const e=[];s.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(t);let i=0;return e.forEach(r=>{n.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),n.buffer}const tb=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function zS(s){return tb?Buffer.byteLength(s):new Blob([s]).size}function B4(s){if(tb)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function U4(s){if(tb){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const t=atob(s),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function pI(s){if(s.length===1)return s[0];let t=0;s.forEach(i=>{t+=i.byteLength});const e=new Uint8Array(t);let n=0;return s.forEach(i=>{e.set(new Uint8Array(i),n),n+=i.byteLength}),e.buffer}function mI(s,t){const e={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(e.signature=s.signature),s.userDefinedMetadata!=null&&(e.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(e.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(e.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(e.trainingConfig=s.trainingConfig),e}function V4(s,t,e){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function W4(s,t){let e,n;return s.weightsManifest!=null&&([e,n]=await t(s.weightsManifest)),V4(s,e,n)}function $m(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:zS(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:zS(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function G4(s){const t=[];for(const e of s)t.push(...e.weights);return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return kn.instance==null&&(kn.instance=new kn),kn.instance}static registerSaveRouter(t){kn.getInstance().saveRouters.push(t)}static registerLoadRouter(t){kn.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return kn.getHandlers(t,"save")}static getLoadHandlers(t,e){return kn.getHandlers(t,"load",e)}static getHandlers(t,e,n){const i=[];return(e==="load"?kn.getInstance().loadRouters:kn.getInstance().saveRouters).forEach(o=>{const a=o(t,n);a!==null&&i.push(a)}),i}}const H4=s=>kn.getSaveHandlers(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0="tensorflowjs",h0=1,fa="models_store",ho="model_info_store";function gI(){if(!lt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function d0(s){const t=s.result;t.createObjectStore(fa,{keyPath:"modelPath"}),t.createObjectStore(ho,{keyPath:"modelPath"})}class ka{constructor(t){if(this.indexedDB=gI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,i)=>{const r=this.indexedDB.open(u0,h0);r.onupgradeneeded=()=>d0(r),r.onsuccess=()=>{const o=r.result;if(e==null){const a=o.transaction(fa,"readonly"),c=a.objectStore(fa).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=u=>(o.close(),i(c.error)),a.oncomplete=()=>o.close()}else{const a=$m(e),l=o.transaction(ho,"readwrite");let c=l.objectStore(ho);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=o.transaction(fa,"readwrite");const f=h.objectStore(fa).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(ho);const g=c.delete(this.modelPath);g.onsuccess=()=>(o.close(),i(f.error)),g.onerror=m=>(o.close(),i(f.error))}},u.onerror=d=>(o.close(),i(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}ka.URL_SCHEME="indexeddb://";const xI=s=>lt().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(ka.URL_SCHEME)?q4(s.slice(ka.URL_SCHEME.length)):null;kn.registerSaveRouter(xI);kn.registerLoadRouter(xI);function q4(s){return new ka(s)}function X4(s){return s.startsWith(ka.URL_SCHEME)?s.slice(ka.URL_SCHEME.length):s}class j4{constructor(){this.indexedDB=gI()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(u0,h0);n.onupgradeneeded=()=>d0(n),n.onsuccess=()=>{const i=n.result,r=i.transaction(ho,"readonly"),a=r.objectStore(ho).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(i.close(),e(a.error)),r.oncomplete=()=>i.close()},n.onerror=i=>e(n.error)})}async removeModel(t){return t=X4(t),new Promise((e,n)=>{const i=this.indexedDB.open(u0,h0);i.onupgradeneeded=()=>d0(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(ho,"readwrite"),a=o.objectStore(ho),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),h=()=>{c=r.transaction(fa,"readwrite");const f=c.objectStore(fa).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=p=>n(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),n(l.error))}},l.onerror=u=>(r.close(),n(l.error)),o.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>n(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br="/",Pl="tensorflowjs_models",yI="info",K4="model_topology",Y4="weight_specs",Z4="weight_data",J4="model_metadata";function bI(s){return{info:[Pl,s,yI].join(Br),topology:[Pl,s,K4].join(Br),weightSpecs:[Pl,s,Y4].join(Br),weightData:[Pl,s,Z4].join(Br),modelMetadata:[Pl,s,J4].join(Br)}}function vI(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function Q4(s){const t=s.split(Br);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(Br)}function tU(s){return s.startsWith(Na.URL_SCHEME)?s.slice(Na.URL_SCHEME.length):s}class Na{constructor(t){if(!lt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=bI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),i=$m(t);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,B4(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw vI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=U4(o),e}}Na.URL_SCHEME="localstorage://";const wI=s=>lt().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Na.URL_SCHEME)?eU(s.slice(Na.URL_SCHEME.length)):null;kn.registerSaveRouter(wI);kn.registerLoadRouter(wI);function eU(s){return new Na(s)}class nU{constructor(){F(lt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Pl+Br,n=Br+yI;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(e)&&r.endsWith(n)){const o=Q4(r);t[o]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=tU(t);const e=bI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return vI(e),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS="://";class sr{constructor(){this.managers={}}static getInstance(){return sr.instance==null&&(sr.instance=new sr),sr.instance}static registerManager(t,e){F(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(BS)&&(t=t.slice(0,t.indexOf(BS))),F(t.length>0,()=>"scheme must not be an empty string.");const n=sr.getInstance();F(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=sr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(sr.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sU{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!lt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const i=this.functionRefs[n.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(lt().get("IS_BROWSER")){lt().setPlatform("browser",new sU);try{sr.registerManager(Na.URL_SCHEME,new nU)}catch{}try{sr.registerManager(ka.URL_SCHEME,new j4)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU={importFetch:()=>require("node-fetch")};let px;class rU{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return lt().global.fetch!=null?lt().global.fetch(t,e):(px==null&&(px=iU.importFetch()),px(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}lt().get("IS_NODE")&&!lt().get("IS_BROWSER")&&lt().setPlatform("node",new rU);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(s,t="float32",e){return t=t||"float32",DT(s),new Zn(s,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(s,t){const e=O(s,"x","cast");if(!e4(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:e},i={dtype:t};return Y.runKernel(rh,n,i)}const Lt=Z({cast_:oU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(s){const e={x:O(s,"x","clone","string_or_numeric")};return Y.runKernel(yh,e)}const xa=Z({clone_:aU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cI();const cU={buffer:me,cast:Lt,clone:xa,print:lU};N4(cU);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU="model",hU=".json",dU=".weights.bin";function US(s){return new Promise(t=>setTimeout(t)).then(s)}class Ra{constructor(t){if(!lt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ra.URL_SCHEME)&&(t=t.slice(Ra.URL_SCHEME.length)),(t==null||t.length===0)&&(t=uU),this.modelJsonFileName=t+hU,this.weightDataFileName=t+dU}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=mI(t,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await US(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await US(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:$m(t)}}}}Ra.URL_SCHEME="downloads://";const fU=s=>lt().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ra.URL_SCHEME)?pU(s.slice(Ra.URL_SCHEME.length)):null;kn.registerSaveRouter(fU);function pU(s="model"){return new Ra(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(s,t,e,n){o(s),e=e==null?0:e,n=n==null?1:n,a(e,n);let i=0;const r=l=>(l.then(c=>{const u=e+ ++i/s.length*(n-e);return t(u),c}),l);function o(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),F(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mU(s,t){t==null&&(t={});const e=t.fetchFunc==null?lt().platform.fetch:t.fetchFunc,n=s.map(h=>e(h,t.requestInit,{isBinary:!0})),i=0,r=.5,a=(t.onProgress==null?await Promise.all(n):await VS(n,t.onProgress,i,r)).map(h=>h.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(a):await VS(a,t.onProgress,l,c)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU="application/octet-stream",xU="application/json";class eb{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(F(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=lt().platform.fetch,F(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&F(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],i=mI(t,n);e.body.append("model.json",new Blob([JSON.stringify(i)],{type:xU}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:gU}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:$m(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const n=e.modelTopology,i=e.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return W4(e,r=>this.loadWeights(r))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=yU(e),r=this.weightPathPrefix||n,o=G4(t),a=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(r+h+i);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await mU(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,pI(c)]}}eb.URL_SCHEME_REGEX=/^https?:\/\//;function yU(s){const t=s.lastIndexOf("/"),e=s.lastIndexOf("?"),n=s.substring(0,t),i=e>t?s.substring(e):"";return[n+"/",i]}function WS(s){return s.match(eb.URL_SCHEME_REGEX)!=null}const SI=(s,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(s)?e=s.every(n=>WS(n)):e=WS(s),e)return bU(s,t)}return null};kn.registerSaveRouter(SI);kn.registerLoadRouter(SI);function bU(s,t){return new eb(s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(s,t,e=!1,n=!1){let i=O(s,"a","matMul"),r=O(t,"b","matMul");[i,r]=fn(i,r);const o={a:i,b:r},a={transposeA:e,transposeB:n};return Y.runKernel(Fp,o,a)}const ke=Z({matMul_:vU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(s,t,e=1,n=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:O(s,"indices","oneHot","int32")},a={dtype:i,depth:t,onValue:e,offValue:n};return Y.runKernel(dm,o,a)}const _I=Z({oneHot_:wU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(){return Y}function Xf(){return Y.memory()}function rt(s,t){return Y.tidy(s,t)}function ve(s){aI(s).forEach(e=>e.dispose())}function yr(s){return Y.keep(s)}function SU(s){return Y.setBackend(s)}function CI(s,t,e=1){return Y.registerBackend(s,t,e)}function _U(){return Y.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(s){const e={input:O(s,"input","imag")};return Y.runKernel(My,e)}const nb=Z({imag_:CU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(s){const e={x:O(s,"x","neg")};return Y.runKernel(cm,e)}const sn=Z({neg_:TU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(s){const e={input:O(s,"input","real")};return Y.runKernel(Ly,e)}const jf=Z({real_:IU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(s,t,e){const n=O(s,"x","transpose");if(t==null&&(t=n.shape.map((o,a)=>a).reverse()),F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(o=>{F(o>=0&&o<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const i={x:n},r={perm:t};return n.dtype==="complex64"?rt(()=>{let o=jf(n),a=nb(n);return o=Y.runKernel(Kl,{x:o},r),a=Y.runKernel(Kl,{x:a},r),e&&(a=sn(a)),cc(o,a)}):Y.runKernel(Kl,i,r)}const Ce=Z({transpose_:EU});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uc(s,t){const e=s.length,n=[];for(let i=0;i<e;i++){const r=e-1-i,o=s[r]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(r)}return n}function En(s,t){const e=[];for(let n=0;n<t.length;n++){const i=s[s.length-n-1],r=t.length-n-1,o=t[r];(i==null||i===1&&o>1)&&e.unshift(r)}return e}function de(s,t){const e=[],n=Math.max(s.length,t.length);for(let i=0;i<n;i++){let r=s[s.length-i-1];r==null&&(r=1);let o=t[t.length-i-1];if(o==null&&(o=1),r===1)e.unshift(o);else if(o===1)e.unshift(r);else if(r!==o){const a=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(a)}else e.unshift(r)}return e}function sb(s,t){const e=s.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(ft(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const i=t.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=s.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<e;++h)c*=a[h],l.push(a[h]);const u=[...re(s.shape).map(h=>h/c),1].slice(0,r);return[l,o,c,u]}function TI(s,t,e){const n=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${i}.`;if(e.rank<i)throw new Error(r+` update.rank < ${i}. `);if(s.length<n+(e.rank-i))throw new Error(r+` Output shape length < ${n+(e.rank-i)}`);if(e.rank!==i+s.length-n)throw new Error(r+` update.rank != ${i+s.length-n}`);for(let o=0;o<i;++o)if(e.shape[o]!==t.shape[o])throw new Error(r+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-i;++o)if(e.shape[o+i]!==s[o+n])throw new Error(r+` updates.shape[${o+i}] (${e.shape[o+i]}) != shape[${o+i}] (${s[o+i]})`)}function MU(s,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}TI(e,t,s)}function Xh(s,t,e){const n=t.shape.length,i=n>1?t.shape[n-1]:1,r=e.length;let o=1;for(let h=i;h<r;++h)o*=e[h];const a=i<1?1:i,l=ft(t.shape)/a,c=[...re(e.slice(0,i)),1],u=ft(e);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f0=-2,AU=-1;function ib(s,t,e){const n=s.shape.length;F(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),F(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let i=0;i<n;++i)F(t[i]+e[i]<=s.shape[i],()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${s.shape[i]})`)}function kU(s){const t=[];let e=0;for(;s>0;)s&1&&t.push(e),s/=2,e++;return t}function rb(s,t,e){const n=[];for(let i=0;i<s.length;i++)n[i]=Math.ceil((t[i]-s[i])/e[i]);return n}function II(s,t,e,n){const i=[...s];for(let r=i.length;r<n.length;r++)i.push(1);for(let r=0;r<e;r++)r===0?i[t]=1:(i.splice(t,0,1),i.pop());return i}function EI(s,t,e){return e<=s?e:e-(t-1)}function MI(s,t){const e=[];for(let n=0;n<s;n++)e.push(t+n);return e}function NU(s,t,e,n,i,r,o,a,l){const c=s.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const f=t[0],p=e+1;u=AI(o,f,p,n,s),h=kI(a,f,p,i,s),d=II(r,f,p,s)}else for(let f=0;f<c;f++)u[f]=RI(o,n,r,s,f,l),h[f]=$I(a,i,r,s,f,l),d[f]=NI(r,f,l);return{begin:u,end:h,strides:d}}function AI(s,t,e,n,i){const r=[...i],o=MI(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=EI(t,e,a);let c=n[l];s&1<<l&&(c=0),r[a]=c}return r}function kI(s,t,e,n,i){const r=[...i],o=MI(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=EI(t,e,a);let c=n[l];s&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=Aa(0,r[a],i[a])}return r}function NI(s,t,e){let n=s[t];return(e&1<<t||n==null)&&(n=1),n}function RI(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),o=Aa(0,o,l-1),o}function $I(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),a>0?o=Aa(0,o,l):o=Aa(-1,o,l-1),o}function ob(s,t,e){let n=e.length;for(let i=0;i<e.length;i++)if(e[i]>1){n=i;break}for(let i=n+1;i<e.length;i++)if(t[i]>0||e[i]!==s[i])return!1;return!0}function ab(s,t){let e=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)e+=s[n]*t[n];return e}function Dm(s,t,e){let n;const i=s.shape.length;typeof t=="number"?n=[t,...new Array(i-1).fill(0)]:t.length<i?n=t.concat(new Array(i-t.length).fill(0)):n=t.slice(),n.forEach(o=>{F(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(i).fill(-1):typeof e=="number"?r=[e,...new Array(i-1).fill(-1)]:e.length<i?r=e.concat(new Array(i-e.length).fill(-1)):r=e,r=r.map((o,a)=>o>=0?o:(F(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),s.shape[a]-n[a])),[n,r]}function lb(s,t,e,n,i,r,o,a,l){let c;if(n==null?(c=new Array(t.length),c.fill(1)):c=n,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let v=0;v<h.dims;v++)u&&(1<<v&a)!==0&&h.numAddAxisAfterEllipsis++,1<<v&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};RU(h,d);let f=!0,p=!0,g=!0;const m=[],x=[];for(let v=0;v<s.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<v),w=s[v];if(w===-1){m.push(b?1:-1);continue}const _=[d.beginMask&1<<v,d.endMask&1<<v],C=[d.strides[v]>0?0:-1,d.strides[v]>0?w:w-1];if(b&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[v]===1;const S=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(b){const $=d.begin[v]<0?w+d.begin[v]:d.begin[v];if(d.begin[v]=$,d.end[v]=d.begin[v]+1,$<0||$>=w)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=GS(d.begin[v],0,d.strides[v],w,_,C),d.end[v]=GS(d.end[v],1,d.strides[v],w,_,C);const M=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===w;f=f&&M,p=p&&(v===0&&d.strides[v]===1||M)}else f=f&&d.strides[v]===1&&S,p=p&&(v===0&&d.strides[v]===1||S);let T,I=!1;if(d.beginValid&&d.endValid?(T=d.end[v]-d.begin[v],I=!0):b?(T=1,I=!0):S&&w>=0&&(d.strides[v]<0?T=-w:T=w,I=!0),I){let M;T===0||T<0!=d.strides[v]<0?M=0:M=Math.trunc(T/d.strides[v])+(T%d.strides[v]!==0?1:0),m.push(M)}else m.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){const b=d.finalShapeGatherIndices[v];b>=0?x.push(m[b]):b===f0&&x.push(1)}return{finalShapeSparse:x.filter((v,b)=>d.finalShapeGatherIndices[b]!==f0),finalShape:x,isIdentity:f,sliceDim0:p,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function RU(s,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=s.begin!=null,t.endValid=s.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const i=Math.min(t.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,t.dims);for(;e<i;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&s.newAxisMask)t.finalShapeGatherIndices.push(f0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);s.begin!=null&&(t.begin[e]=s.begin[n]),s.end!=null&&(t.end[e]=s.end[n]),t.strides[e]=s.strides[n],s.beginMask&1<<n&&(t.beginMask|=1<<e),s.endMask&1<<n&&(t.endMask|=1<<e),s.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(AU),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function GS(s,t,e,n,i,r){if(i[t])return e>0?r[t]:r[t+1&1];{const o=s<0?n+s:s;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const $U=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:ib,maskToAxes:kU,computeOutShape:rb,stridesWithElidedDims:II,getNormalizedAxes:NU,startIndicesWithElidedDims:AI,stopIndicesWithElidedDims:kI,stridesForAxis:NI,startForAxis:RI,stopForAxis:$I,isSliceContinous:ob,computeFlatOffset:ab,parseSliceParams:Dm,sliceInfo:lb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mc{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ri{constructor(){this.classNameMap={}}static getMap(){return ri.instance==null&&(ri.instance=new ri),ri.instance}static register(t){ri.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function _t(s){F(s.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),F(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ri.register(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(s,t){let e=O(s,"a","add"),n=O(t,"b","add");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(Ec,i)}const Et=Z({add_:DU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(s,t){let e=O(s,"a","floorDiv"),n=O(t,"b","floorDiv");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(gh,i)}const DI=Z({floorDiv_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(s,t){let e=O(s,"a","div"),n=O(t,"b","div");if([e,n]=fn(e,n),e.dtype==="int32"&&n.dtype==="int32")return DI(e,n);const i={a:e,b:n},r={};return Y.runKernel(uh,i,r)}const ie=Z({div_:LU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(s,t){let e=O(s,"a","mul"),n=O(t,"b","mul");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(Eh,i)}const X=Z({mul_:PU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(s){const t=O(s,"x","abs");if(t.dtype==="complex64"){const e={x:t};return Y.runKernel(Pp,e)}else{const e={x:t};return Y.runKernel(kp,e)}}const Nn=Z({abs_:OU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(s){const e={x:O(s,"x","acos")};return Y.runKernel(Ju,e)}const BU=Z({acos_:zU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(s){const e={x:O(s,"x","acosh")};return Y.runKernel(Qu,e)}const VU=Z({acosh_:UU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(s,t=null,e=!1){const i={x:O(s,"x","all","bool")},r={axis:t,keepDims:e};return Y.runKernel(ly,i,r)}const FI=Z({all_:WU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(s,t=null,e=!1){const i={x:O(s,"x","any","bool")},r={axis:t,keepDims:e};return Y.runKernel(cy,i,r)}const p0=Z({any_:GU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(s,t=0){const n={x:O(s,"x","argMax")},i={axis:t};return Y.runKernel(Np,n,i)}const Du=Z({argMax_:HU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(s,t=0){const n={x:O(s,"x","argMin")},i={axis:t};return Y.runKernel(Rp,n,i)}const XU=Z({argMin_:qU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(s){const e={x:O(s,"x","asin")};return Y.runKernel(th,e)}const KU=Z({asin_:jU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(s){const e={x:O(s,"x","asinh")};return Y.runKernel(eh,e)}const ZU=Z({asinh_:YU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(s){const e={x:O(s,"x","atan")};return Y.runKernel(nh,e)}const QU=Z({atan_:JU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(s,t){let e=O(s,"a","atan2"),n=O(t,"b","atan2");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(ih,i)}const eV=Z({atan2_:tV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(s){const e={x:O(s,"x","atanh")};return Y.runKernel(sh,e)}const sV=Z({atanh_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jh(s,t,e,n,i="NHWC",r){const o=s[3],a=[...t,o],l=Zr(i);return Xn(s,a,e,r,n,null,null,l)}function bi(s,t,e,n,i,r,o="channelsLast"){const[a,l]=Kf(t);let c;if(o==="channelsLast")c=[a,l,s[3],s[3]];else if(o==="channelsFirst")c=[a,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Xn(s,c,e,n,i,r,!1,o)}function Yr(s,t,e,n,i,r,o="NDHWC"){const[a,l,c]=m0(t);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,s[4],s[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return $o(s,u,e,n,i,!1,h,r)}function Xn(s,t,e,n,i,r,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=s;else if(a==="channelsFirst")[l,h,c,u]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=t,[g,m]=Kf(e),[x,y]=Kf(n),v=Yl(d,x),b=Yl(f,y),{padInfo:w,outHeight:_,outWidth:C}=oV(i,c,u,g,m,v,b,r,a),S=o?p*h:p;let T;return a==="channelsFirst"?T=[l,S,_,C]:a==="channelsLast"&&(T=[l,_,C,S]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:_,outWidth:C,outChannels:S,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:y,inShape:s,outShape:T,filterShape:t}}function $o(s,t,e,n,i,r=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=s;else if(o==="channelsFirst")[l,d,c,u,h]=s;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,g,,m]=t,[x,y,v]=m0(e),[b,w,_]=m0(n),C=Yl(f,b),S=Yl(p,w),T=Yl(g,_),{padInfo:I,outDepth:M,outHeight:$,outWidth:E}=aV(i,c,u,h,x,y,v,C,S,T,a),A=r?m*d:m;let k;return o==="channelsFirst"?k=[l,A,M,$,E]:o==="channelsLast"&&(k=[l,M,$,E,A]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:M,outHeight:$,outWidth:E,outChannels:A,padInfo:I,strideDepth:x,strideHeight:y,strideWidth:v,filterDepth:f,filterHeight:p,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:b,dilationHeight:w,dilationWidth:_,inShape:s,outShape:k,filterShape:t}}function iV(s,t,e,n,i){n==null&&(n=cb(s,t,e));const r=s[0],o=s[1],a=ya((r-t+2*n)/e+1,i),l=ya((o-t+2*n)/e+1,i);return[a,l]}function rV(s,t,e,n,i,r){i==null&&(i=cb(s,t,n));const o=s[0],a=s[1],l=s[2],c=ya((o-t+2*i)/n+1,r),u=ya((a-t+2*i)/n+1,r),h=ya((l-t+2*i)/n+1,r);return[c,u,h,e]}function cb(s,t,e,n=1){const i=Yl(t,n);return Math.floor((s[0]*(e-1)-e+i)/2)}function Kf(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function m0(s){return typeof s=="number"?[s,s,s]:s}function Yl(s,t){return t<=1?s:s+(s-1)*(t-1)}function oV(s,t,e,n,i,r,o,a,l){let c,u,h;if(typeof s=="number"){c={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=iV([t,e],r,n,s,a);u=f[0],h=f[1]}else if(s==="same"){u=Math.ceil(t/n),h=Math.ceil(e/i);const d=Math.max(0,(u-1)*n+r-t),f=Math.max(0,(h-1)*i+o-e),p=Math.floor(d/2),g=d-p,m=Math.floor(f/2),x=f-m;c={top:p,bottom:g,left:m,right:x,type:"SAME"}}else if(s==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/n),h=Math.ceil((e-o+1)/i);else if(typeof s=="object"){const d=l==="channelsLast"?s[1][0]:s[2][0],f=l==="channelsLast"?s[1][1]:s[2][1],p=l==="channelsLast"?s[2][0]:s[3][0],g=l==="channelsLast"?s[2][1]:s[3][1];c={top:d,bottom:f,left:p,right:g,type:d===0&&f===0&&p===0&&g===0?"VALID":"EXPLICIT"},u=ya((t-r+d+f)/n+1,a),h=ya((e-o+p+g)/i+1,a)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:c,outHeight:u,outWidth:h}}function aV(s,t,e,n,i,r,o,a,l,c,u){let h,d,f,p;if(typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const m=rV([t,e,n,1],a,1,i,s,u);d=m[0],f=m[1],p=m[2]}else if(s==="same"){d=Math.ceil(t/i),f=Math.ceil(e/r),p=Math.ceil(n/o);const g=(d-1)*i+a-t,m=(f-1)*r+l-e,x=(p-1)*o+c-n,y=Math.floor(g/2),v=g-y,b=Math.floor(m/2),w=m-b,_=Math.floor(x/2),C=x-_;h={top:b,bottom:w,left:_,right:C,front:y,back:v,type:"SAME"}}else if(s==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-a+1)/i),f=Math.ceil((e-l+1)/r),p=Math.ceil((n-c+1)/o);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function ya(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function $a(s){const[t,e,n]=Kf(s);return t===1&&e===1&&n===1}function es(s,t){return $a(s)||$a(t)}function Zr(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function xs(s,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")F(oc(t),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(i=>{F(oc(i),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${i}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(s,t){const n={x:O(s,"x","reshape","string_or_numeric")},i={shape:t};return Y.runKernel(xm,n,i)}const Q=Z({reshape_:lV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(s,t,e,n,i){const r=O(s,"x","avgPool","float32"),o=1;F(es(e,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),F(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),xs("avgPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i};let h=Y.runKernel($p,c,u);return h=Lt(h,r.dtype),l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ub=Z({avgPool_:cV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(s,t,e,n,i,r="NDHWC"){const o=O(s,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xs("avgPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r};let h=Y.runKernel(Dp,c,u);return h=Lt(h,a.dtype),l?Q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const hV=Z({avgPool3d_:uV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(s,t=0){F(s.length>=1,()=>"Pass at least one tensor to concat");const e=fI(s,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return xa(e[0]);const n=e,i={axis:t};return Y.runKernel(Op,n,i)}const Jn=Z({concat_:dV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(s){const e={x:O(s,"x","sigmoid","float32")};return Y.runKernel(Oh,e)}const Ac=Z({sigmoid_:fV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(s,t,e){const n=O(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const i={x:n},r={begin:t,size:e};return Y.runKernel(Sm,i,r)}const ze=Z({slice_:pV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(s){const e={x:O(s,"x","tanh","float32")};return Y.runKernel(Gh,e)}const hb=Z({tanh_:mV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(s,t,e){const n=O(s,"x","batchToSpaceND"),i=t.reduce((a,l)=>a*l);F(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),F(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),F(n.shape[0]%i===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`);const r={x:n},o={blockShape:t,crops:e};return Y.runKernel(Lp,r,o)}const db=Z({batchToSpaceND_:gV});function xV(s){let t;return s.rank===0||s.rank===1?t=Q(s,[1,1,1,s.size]):s.rank===2?t=Q(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(s,t,e,n,i,r){r==null&&(r=.001);const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;n!=null&&(u=O(n,"offset","batchNorm")),F(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:xV(o),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:r},p=Y.runKernel(Xp,d,f);return Q(p,o.shape)}const Fm=Z({batchNorm_:yV});function bV(s,t,e,n,i,r){const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;return n!=null&&(u=O(n,"offset","batchNorm")),F(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),F(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Fm(o,a,l,u,c,r)}const vV=Z({batchNorm2d_:bV});function wV(s,t,e,n,i,r){const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;return n!=null&&(u=O(n,"offset","batchNorm")),F(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),F(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Fm(o,a,l,u,c,r)}const SV=Z({batchNorm3d_:wV});function _V(s,t,e,n,i,r){const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;return n!=null&&(u=O(n,"offset","batchNorm")),F(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),F(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Fm(o,a,l,u,c,r)}const CV=Z({batchNorm4d_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(s,t,e){const n=O(s,"x","bincount"),i=O(t,"weights","bincount");F(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),F(e>=0,()=>`size must be non-negative, but got ${e}.`),F(i.size===n.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${i.shape}.`);const r={x:n,weights:i},o={size:e};return Y.runKernel(dy,r,o)}const IV=Z({bincount_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(s,t){let e=O(s,"broadcastTo","x");const n=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=Q(e,c)}const i=e.shape,r=Array.from(t);for(let c=t.length-1;c>=0;c--)if(i[c]===t[c])r[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return xa(e);const a={x:e},l={reps:r};return Y.runKernel(Hh,a,l)}const bu=Z({broadcastTo_:EV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(s){const e={x:O(s,"x","ceil","float32")};return Y.runKernel(oh,e)}const AV=Z({ceil_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kh(s,t,e){const n={shape:s,value:t,dtype:e};return Y.runKernel(Ty,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(s,t,e){const n=O(s,"x","clipByValue");if(F(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Kh(n.shape,t,n.dtype);const i={x:n},r={clipValueMin:t,clipValueMax:e};return Y.runKernel(ah,i,r)}const Gs=Z({clipByValue_:kV});function NV(s){return Jn(s,0)}const RV=Z({concat1d_:NV});function $V(s,t){return Jn(s,t)}const DV=Z({concat2d_:$V});function FV(s,t){return Jn(s,t)}const LV=Z({concat3d_:FV});function PV(s,t){return Jn(s,t)}const OV=Z({concat4d_:PV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(s,t,e,n,i="NHWC",r=[1,1],o){const a=O(s,"x","conv2d","float32"),l=O(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),xs("conv2d",n,o);const h=i==="NHWC"?c.shape[3]:c.shape[1];F(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),F(es(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=Y.runKernel(zp,d,f);return u?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Da=Z({conv2d_:zV});function BV(s,t,e,n,i="NWC",r=1,o){const a=O(s,"x","conv1d"),l=O(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1]])),F(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),xs("conv1d",n,o),F(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(es(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),F(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=Q(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Q(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=Da(d,h,[1,e],n,"NHWC",[1,r],o);return u?Q(m,[m.shape[2],m.shape[3]]):Q(m,[m.shape[0],m.shape[2],m.shape[3]])}const LI=Z({conv1d_:BV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(s,t,e,n,i,r="NHWC",o){F(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,l=t,c=!1;t.rank===3&&(c=!0,l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,s[0],s[1],s[2]]),F(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];F(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),F(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),xs("conv2dDerInput",i,o);const d={dy:l,filter:e},f={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},p=Y.runKernel(Bp,d,f);return c?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const fb=Z({conv2DBackpropInput_:UV});function VV(s,t,e,n,i,r){const o=O(s,"x","conv2dTranspose"),a=O(t,"filter","conv2dTranspose");return fb(e,o,a,n,i,"NHWC",r)}const PI=Z({conv2dTranspose_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(s,t,e,n,i="NDHWC",r=[1,1,1]){const o=O(s,"x","conv3d"),a=O(t,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(es(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),F(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:e,pad:n,dataFormat:i,dilations:r},d=Y.runKernel(Up,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const GV=Z({conv3d_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(s,t,e,n,i){F(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let r=s,o=t,a=!1;t.rank===4&&(a=!0,o=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],c=o.shape[4];F(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),F(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),F(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),F(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),F(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:o,filter:e},h={pad:i,strides:n,inputShape:r},d=Y.runKernel(gy,u,h);return a?Q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const OI=Z({conv3DBackpropInput_:HV});function qV(s,t,e,n,i){const r=O(s,"x","conv3dTranspose"),o=O(t,"filter","conv3dTranspose");return OI(e,r,o,n,i)}const XV=Z({conv3dTranspose_:qV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(s){const e={x:O(s,"x","cos","float32")};return Y.runKernel(lh,e)}const pb=Z({cos_:jV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(s){const e={x:O(s,"x","cosh","float32")};return Y.runKernel(ch,e)}const zI=Z({cosh_:KV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(s,t=0,e=!1,n=!1){const r={x:O(s,"x","cumprod")},o={axis:t,exclusive:e,reverse:n};return Y.runKernel(xy,r,o)}const g0=Z({cumprod_:YV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(s,t=0,e=!1,n=!1){const r={x:O(s,"x","cumsum")},o={axis:t,exclusive:e,reverse:n};return Y.runKernel(Vp,r,o)}const BI=Z({cumsum_:ZV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(s,t,e,n=!1){const i=O(s,"x","denseBincount"),r=O(t,"weights","denseBincount");F(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),F(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),F(e>=0,()=>`size must be non-negative, but got ${e}.`),F(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:e,binaryOutput:n};return Y.runKernel(by,o,a)}const HS=Z({denseBincount_:JV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(s,t,e="NHWC"){const n=O(s,"x","depthToSpace","float32"),i=e==="NHWC"?n.shape[1]:n.shape[2],r=e==="NHWC"?n.shape[2]:n.shape[3],o=e==="NHWC"?n.shape[3]:n.shape[1];F(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),F(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t}  for depthToSpace with input shape
    ${n.shape}`),F(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${n.shape}`),F(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${n.shape}`);const a={x:n},l={blockSize:t,dataFormat:e};return Y.runKernel(vy,a,l)}const tW=Z({depthToSpace_:QV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(s,t,e,n,i="NHWC",r=[1,1],o){const a=O(s,"x","depthwiseConv2d","float32"),l=O(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];F(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),xs("depthwiseConv2d",n,o);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=Y.runKernel(Wp,d,f);return u?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const mb=Z({depthwiseConv2d_:eW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(s,t,e,n,i=[1,1],r="NHWC"){const o=O(s,"x","dilation2d"),a=O(t,"filter","dilation2d");F(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),F(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,c=!1;o.rank===3&&(l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:e,pad:n,dilations:i},d=Y.runKernel(Gp,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const sW=Z({dilation2d_:nW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(s,t){let e=O(s,"a","equal","string_or_numeric"),n=O(t,"b","equal","string_or_numeric");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Hp,i)}const br=Z({equal_:iW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(s,t,e){const n=O(t,"a","where"),i=O(e,"b","where"),r=O(s,"condition","where","bool"),o=de(de(r.shape,n.shape),i.shape),a=bu(r,o),l=bu(n,o),c=bu(i,o),u={condition:a,t:l,e:c};return Y.runKernel(wm,u)}const ks=Z({where_:rW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(s){const e={x:O(s,"x","zerosLike")};return Y.runKernel(Am,e)}const Ie=Z({zerosLike_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(s,t){let e=O(s,"a","div"),n=O(t,"b","div");[e,n]=fn(e,n);const i=ie(e,n),r=Ie(i),o=br(n,r);return ks(o,r,i)}const lW=Z({divNoNan_:aW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(s,t){const e=O(s,"t1","dot"),n=O(t,"t2","dot");F((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);const i=e.rank===1?e.size:e.shape[1],r=n.rank===1?n.size:n.shape[0];if(F(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),e.rank===1&&n.rank===1){const o=Q(e,[1,-1]),a=Q(n,[-1,1]),l=ke(o,a);return Q(l,[])}else if(e.rank===1&&n.rank===2){const o=Q(e,[1,-1]),a=Q(n,[n.shape[0],n.shape[1]]),l=ke(o,a);return Q(l,[l.size])}else if(e.rank===2&&n.rank===1){const o=Q(n,[-1,1]),a=ke(e,o);return Q(a,[a.size])}else{const o=Q(n,[n.shape[0],n.shape[1]]);return ke(e,o)}}const uW=Z({dot_:cW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(s){const e={x:O(s,"x","elu","float32")};return Y.runKernel(hh,e)}const Lm=Z({elu_:hW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(s){let t=O(s,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Lt(t,"float32"));const e={x:t};return Y.runKernel(dh,e)}const fW=Z({erf_:dW});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(s,t){for(let e=0;e<s.length;++e)if(s[s.length-e-1]!==t-1-e)return!1;return!0}function UI(s,t,e){const n=s.length+t.length,i=[];let r=0,o=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?i.push(s[r++]):i.push(t[o++]);return i}function Pn(s,t){const e=[],n=s.length;for(let r=0;r<n;r++)t.indexOf(r)===-1&&e.push(s[r]);const i=t.map(r=>s[r]);return[e,i]}function pn(s,t){const e=t.map(n=>1);return UI(s,e,t)}function jn(s,t,e){F(gb(t,e),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function rn(s,t){if(gb(s,t))return null;const e=[];for(let n=0;n<t;++n)s.indexOf(n)===-1&&e.push(n);return s.forEach(n=>e.push(n)),e}function Do(s){return s.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function mn(s,t){const e=[];for(let n=t-s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(s,t=null,e=!1){const i={x:O(s,"x","max")},r={reductionIndices:t,keepDims:e};return Y.runKernel(sm,i,r)}const Oi=Z({max_:pW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(s,t=null,e=!1){const i={x:O(s,"x","min")},r={axis:t,keepDims:e};return Y.runKernel(am,i,r)}const Yf=Z({min_:mW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(s,t){let e=O(s,"base","pow"),n=O(t,"exp","pow");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(Mh,i)}const hc=Z({pow_:gW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(s,t){if((xr(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&xr(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Rm(s,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(s){const e={x:O(s,"x","sqrt","float32")};return Y.runKernel(Bh,e)}const os=Z({sqrt_:xW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(s){const t=O(s,"x","square"),e={};return Y.runKernel("Square",{x:t},e)}const Ge=Z({square_:yW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(s,t=null,e=!1){let n=O(s,"x","sum");n.dtype==="bool"&&(n=Lt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return Y.runKernel(_m,i,r)}const Yt=Z({sum_:bW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(s,t="euclidean",e=null,n=!1){s=O(s,"x","norm");const i=VI(s,t,e);let r=i.shape;if(n){const o=ge(e,s.shape);r=pn(i.shape,o)}return Q(i,r)}function VI(s,t,e=null){if(s.rank===0)return Nn(s);if(s.rank!==1&&e===null)return VI(Q(s,[-1]),t,e);if(s.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Yt(Nn(s),e);if(t===1/0)return Oi(Nn(s),e);if(t===-1/0)return Yf(Nn(s),e);if(t==="euclidean"||t===2)return os(Yt(hc(Nn(s),le(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Oi(Yt(Nn(s),e[0]),e[1]-1);if(t===1/0)return Oi(Yt(Nn(s),e[1]),e[0]);if(t===-1/0)return Yf(Yt(Nn(s),e[1]),e[0]);if(t==="fro"||t==="euclidean")return os(Yt(Ge(s),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Pm=Z({norm_:vW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(s,t=null,e=!1){return Pm(s,"euclidean",t,e)}const SW=Z({euclideanNorm_:wW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(s){const e={x:O(s,"x","exp")};return Y.runKernel(fh,e)}const fi=Z({exp_:_W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(s,t=0){const e=O(s,"x","expandDims","string_or_numeric");F(t<=e.rank,()=>"Axis must be <= rank of the tensor");const n={input:e},i={dim:t};return Y.runKernel(qp,n,i)}const Ss=Z({expandDims_:CW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(s){const e={x:O(s,"x","expm1")};return Y.runKernel(ph,e)}const IW=Z({expm1_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(s,t){const e=O(s,"x","tile","string_or_numeric");F(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const n={x:e},i={reps:t};return Y.runKernel(Hh,n,i)}const Di=Z({tile_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(s,t,e,n="float32"){t==null&&(t=s);const i=me([s,t],n),r=s<=t?s:t;for(let a=0;a<r;++a)i.set(1,a,a);const o=Q(i.toTensor(),[s,t]);if(e==null)return o;if(e.length===1)return Di(Ss(o,0),[e[0],1,1]);if(e.length===2)return Di(Ss(Ss(o,0),0),[e[0],e[1],1,1]);if(e.length===3)return Di(Ss(Ss(Ss(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const WI=Z({eye_:MW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(s){const e={x:O(s,"x","floor","float32")};return Y.runKernel(mh,e)}const Om=Z({floor_:AW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(s,t,e=0,n=0){const i=O(s,"x","gather"),r=O(t,"indices","gather","int32"),o={x:i,indices:r},a={axis:e,batchDims:n};return Y.runKernel(jp,o,a)}const xb=Z({gather_:kW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(s,t){let e=O(s,"a","greater","string_or_numeric"),n=O(t,"b","greater","string_or_numeric");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Kp,i)}const qs=Z({greater_:NW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(s,t){let e=O(s,"a","greaterEqual","string_or_numeric"),n=O(t,"b","greaterEqual","string_or_numeric");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(xh,i)}const Za=Z({greaterEqual_:RW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(s){const e={x:O(s,"x","isFinite")};return Y.runKernel(bh,e)}const DW=Z({isFinite_:$W});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(s){const e={x:O(s,"x","isInf")};return Y.runKernel(vh,e)}const LW=Z({isInf_:FW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s){const e={x:O(s,"x","isNaN")};return Y.runKernel(wh,e)}const OW=Z({isNaN_:PW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(s,t=.2){const n={x:O(s,"x","leakyRelu")},i={alpha:t};return Y.runKernel(Yp,n,i)}const yb=Z({leakyRelu_:zW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(s,t){let e=O(s,"a","less","string_or_numeric"),n=O(t,"b","less","string_or_numeric");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Zp,i)}const GI=Z({less_:BW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(s,t){let e=O(s,"a","lessEqual","string_or_numeric"),n=O(t,"b","lessEqual","string_or_numeric");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Jp,i)}const kc=Z({lessEqual_:UW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(s,t=5,e=1,n=1,i=.5){const r=O(s,"x","localResponseNormalization");F(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),F(oc(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},c={depthRadius:t,bias:e,alpha:n,beta:i},u=Y.runKernel(nm,l,c);return a?Q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const WW=Z({localResponseNormalization_:VW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(s){const e={x:O(s,"x","log","float32")};return Y.runKernel(Sh,e)}const pi=Z({log_:GW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(s){const e={x:O(s,"x","log1p")};return Y.runKernel(_h,e)}const bb=Z({log1p_:HW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(s,t){F(Jx(s),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(c=>c instanceof qf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in Y.registeredVariables)t.push(Y.registeredVariables[c])}const n=e?t.filter(c=>!c.trainable):null,i=t.length;t=t.filter(c=>c.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=Y.gradients(s,t,null,r);F(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),n!=null&&n.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Fa(s){return Y.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s){const e={x:O(s,"x","softplus")};return Y.runKernel(zh,e)}const Yh=Z({softplus_:XW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(s){const t=O(s,"x","logSigmoid");return Fa(n=>({value:sn(Yh(sn(n))),gradFunc:o=>X(o,Ac(sn(n)))}))(t)}const KW=Z({logSigmoid_:jW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(s,t){let e=O(s,"a","sub"),n=O(t,"b","sub");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(Vh,i)}const Zt=Z({sub_:YW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(s,t=-1){const e=O(s,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Fa((i,r)=>{const a=Oi(i,t,!0),l=Zt(i,a),c=Zt(Lt(l,"float32"),pi(Yt(fi(l),t,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,g=fi(f);return Zt(h,X(Yt(h,t,p),g))}}})(e)}const HI=Z({logSoftmax_:ZW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(s,t=null,e=!1){const n=O(s,"x","logSumExp"),i=ge(t,n.shape),r=Oi(n,i,!0),o=Zt(n,r),a=fi(o),l=Yt(a,i),c=pi(l),u=Et(Q(r,c.shape),c);if(e){const h=pn(u.shape,i);return Q(u,h)}return u}const qI=Z({logSumExp_:JW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(s,t){const e=O(s,"a","logicalAnd","bool"),n=O(t,"b","logicalAnd","bool");de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Qp,i)}const Xr=Z({logicalAnd_:QW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(s){const e={x:O(s,"x","logicalNot","bool")};return Y.runKernel(tm,e)}const vb=Z({logicalNot_:tG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(s,t){const e=O(s,"a","logicalOr","bool"),n=O(t,"b","logicalOr","bool");de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(em,i)}const XI=Z({logicalOr_:eG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(s,t){const e=O(s,"a","logicalXor","bool"),n=O(t,"b","logicalXor","bool");return de(e.shape,n.shape),Xr(XI(s,t),vb(Xr(s,t)))}const sG=Z({logicalXor_:nG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(s,t,e,n,i){const r=O(s,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),F(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),F(es(e,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),xs("maxPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i},h=Y.runKernel(im,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const wb=Z({maxPool_:iG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(s,t=[1,1,1],e,n,i,r="NDHWC"){const o=O(s,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xs("maxPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r},h=Y.runKernel(rm,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const oG=Z({maxPool3d_:rG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(s,t){let e=O(s,"a","maximum"),n=O(t,"b","maximum");[e,n]=fn(e,n),e.dtype==="bool"&&(e=Lt(e,"int32"),n=Lt(n,"int32")),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Ch,i)}const Fo=Z({maximum_:aG});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(s,t=null,e=!1){const i={x:O(s,"x","mean")},r={axis:t,keepDims:e};return Y.runKernel(om,i,r)}const dn=Z({mean_:lG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(s,t="float32"){if(t==="complex64"){const n=$n(s,"float32"),i=$n(s,"float32");return cc(n,i)}const e=Qn(ft(s),t);return Y.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(s,t="float32"){if(t==="complex64"){const n=Lo(s,"float32"),i=$n(s,"float32");return cc(n,i)}const e=ry(ft(s),t);return Y.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(s,t){let e=O(s,"a","minimum"),n=O(t,"b","minimum");[e,n]=fn(e,n),e.dtype==="bool"&&(e=Lt(e,"int32"),n=Lt(n,"int32")),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(Th,i)}const zm=Z({minimum_:cG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(s,t,e){F(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const n=O(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);const i=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)F(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[a][0]>=0&&t[a][0]<=n.shape[a]-i&&t[a][1]>=0&&t[a][1]<=n.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-i} or less than 0 for input of shape ${n.shape}`);const r={paddings:t,mode:e},o={x:n};return Y.runKernel(lm,o,r)}const hG=Z({mirrorPad_:uG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(s,t){let e=O(s,"a","mod"),n=O(t,"b","mod");[e,n]=fn(e,n);const i={a:e,b:n};return Y.runKernel(Ih,i)}const fG=Z({mod_:dG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(s,t=null,e=!1){s=O(s,"x","moments");const n=ge(t,s.shape),i=dn(s,n,e);let r=i.shape;e||(r=pn(i.shape,n));const o=Ge(Zt(Lt(s,"float32"),Q(i,r))),a=dn(o,n,e);return{mean:i,variance:a}}const Sb=Z({moments_:pG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(s,t){let e=O(s,"a","notEqual","string_or_numeric"),n=O(t,"b","notEqual","string_or_numeric");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n};return Y.runKernel(um,i)}const Fu=Z({notEqual_:mG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(s){const e={x:O(s,"x","onesLike")};return Y.runKernel(hm,e)}const mi=Z({onesLike_:gG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(s,t,e=0){const n=O(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:e},r={x:n};return Y.runKernel(pm,r,i)}const _b=Z({pad_:xG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(s,t,e){const n=O(s,"x","spaceToBatchND");F(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),F(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),F(n.shape.reduce((o,a,l)=>l>0&&l<=t.length?o&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const i={x:n},r={blockShape:t,paddings:e};return Y.runKernel(Cm,i,r)}const Cb=Z({spaceToBatchND_:yG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bG(s,t,e,n,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),n===0&&(n="valid");const a=O(s,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(es(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=bi(l.shape,t,r,i,n),h=[u.dilationHeight,u.dilationWidth];let d;n==="same"?d=wG([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,g]=vG([u.inHeight,u.inWidth],h,d),m=f?n:"valid",x=f?l:Cb(l,h,p),v=(e==="avg"?()=>ub(x,t,r,m,o):()=>wb(x,t,r,m,o))(),b=f?v:db(v,h,g);return c?Q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function vG(s,t,e){const n=e.map(u=>u[0]),i=e.map(u=>u[1]),r=s.concat(n,i),o=t.map((u,h)=>(u-r[h]%u)%u),a=i.map((u,h)=>u+o[h]),l=t.map((u,h)=>[n[h],a[h]]),c=t.map((u,h)=>[0,o[h]]);return[l,c]}function wG(s,t){const n=s.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),i=n.map(o=>Math.floor(o/2)),r=n.map((o,a)=>o-i[a]);return n.map((o,a)=>[i[a],r[a]])}const SG=Z({pool_:bG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(s,t){const e=O(s,"x","prelu"),n=O(t,"alpha","prelu"),i={x:e,alpha:n};return Y.runKernel(mm,i)}const Tb=Z({prelu_:_G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(s,t=null,e=!1){let n=O(s,"x","prod");n.dtype==="bool"&&(n=Lt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return Y.runKernel(gm,i,r)}const TG=Z({prod_:CG});var jI={exports:{}};(function(s){(function(t,e,n){function i(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(ja,s,!1)})(jI);var KI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(ja,s,!1)})(KI);var YI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(ja,s,!1)})(YI);var ZI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(ja,s,!1)})(ZI);var JI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,g,m,x=[],y=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,y=Math.max(y,h.length)),p=0,g=-32;g<y;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=m+1640531527|0,d=x[g&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(x[(h&&h.length||0)&127]=-1),p=127,g=4*128;g>0;--g)f=x[p+34&127],d=x[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,x[p]=f^d;u.w=m,u.X=x,u.i=p}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(ja,s,!1)})(JI);var QI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(ja,s,!1)})(QI);var t2={exports:{}};const IG={},EG=Object.freeze(Object.defineProperty({__proto__:null,default:IG},Symbol.toStringTag,{value:"Module"})),MG=Fz(EG);(function(s){(function(t,e,n){var i=256,r=6,o=52,a="random",l=n.pow(i,r),c=n.pow(2,o),u=c*2,h=i-1,d;function f(b,w,_){var C=[];w=w==!0?{entropy:!0}:w||{};var S=x(m(w.entropy?[b,v(e)]:b==null?y():b,3),C),T=new p(C),I=function(){for(var M=T.g(r),$=l,E=0;M<c;)M=(M+E)*i,$*=i,E=T.g(1);for(;M>=u;)M/=2,$/=2,E>>>=1;return(M+E)/$};return I.int32=function(){return T.g(4)|0},I.quick=function(){return T.g(4)/4294967296},I.double=I,x(v(T.S),e),(w.pass||_||function(M,$,E,A){return A&&(A.S&&g(A,T),M.state=function(){return g(T,{})}),E?(n[a]=M,$):M})(I,S,"global"in w?w.global:this==n,w.state)}function p(b){var w,_=b.length,C=this,S=0,T=C.i=C.j=0,I=C.S=[];for(_||(b=[_++]);S<i;)I[S]=S++;for(S=0;S<i;S++)I[S]=I[T=h&T+b[S%_]+(w=I[S])],I[T]=w;(C.g=function(M){for(var $,E=0,A=C.i,k=C.j,R=C.S;M--;)$=R[A=h&A+1],E=E*i+R[h&(R[A]=R[k=h&k+$])+(R[k]=$)];return C.i=A,C.j=k,E})(i)}function g(b,w){return w.i=b.i,w.j=b.j,w.S=b.S.slice(),w}function m(b,w){var _=[],C=typeof b,S;if(w&&C=="object")for(S in b)try{_.push(m(b[S],w-1))}catch{}return _.length?_:C=="string"?b:b+"\0"}function x(b,w){for(var _=b+"",C,S=0;S<_.length;)w[h&S]=h&(C^=w[h&S]*19)+_.charCodeAt(S++);return v(w)}function y(){try{var b;return d&&(b=d.randomBytes)?b=b(i):(b=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(b)),v(b)}catch{var w=t.navigator,_=w&&w.plugins;return[+new Date,t,_,t.screen,v(e)]}}function v(b){return String.fromCharCode.apply(0,b)}if(x(n.random(),e),s.exports){s.exports=f;try{d=MG}catch{}}else n["seed"+a]=f})(typeof self<"u"?self:ja,[],Math)})(t2);var AG=jI.exports,kG=KI.exports,NG=YI.exports,RG=ZI.exports,$G=JI.exports,DG=QI.exports,Ja=t2.exports;Ja.alea=AG;Ja.xor128=kG;Ja.xorwow=NG;Ja.xorshift7=RG;Ja.xor4096=$G;Ja.tychei=DG;var Ib=Ja;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e2{constructor(t,e,n,i,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=Ib.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let t,e,n=!1;for(;!n;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*i*a,e=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class FG{constructor(t=0,e=1,n,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ib.alea(i)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new e2(t,e,n,!1,i),o=me(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const x0=Z({randomNormal_:LG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(s,t=0,e=1,n="float32",i){const r=me(s,n),o=new FG(t,e,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const Bm=Z({randomUniform_:PG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(s,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");const i={start:s,stop:t,step:e,dtype:n};return Y.runKernel(Fy,{},i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OG(s){const e={x:O(s,"x","reciprocal")};return Y.runKernel(Ah,e)}const zG=Z({reciprocal_:OG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(s){const e={x:O(s,"x","relu")};return Y.runKernel(kh,e)}const Jr=Z({relu_:BG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(s){const e={x:O(s,"x","relu6")};return Y.runKernel(Nh,e)}const n2=Z({relu6_:UG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(s,t){const n={x:O(s,"x","reverse")},i={dims:t};return Y.runKernel(vm,n,i)}const La=Z({reverse_:VG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(s){const e={x:O(s,"x","round")};return Y.runKernel(Rh,e)}const s2=Z({round_:WG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(s){const e={x:O(s,"x","rsqrt","float32")};return Y.runKernel($h,e)}const i2=Z({rsqrt_:GG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(s){const e={x:O(s,"x","selu")};return Y.runKernel(Dh,e)}const r2=Z({selu_:HG});function qG(s,t,e,n,i,r=[1,1],o="NHWC"){const a=O(s,"x","separableConv2d"),l=O(t,"depthwiseFilter","separableConv2d"),c=O(e,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),F(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];F(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=mb(u,l,n,i,o,r),m=Da(p,c,1,"valid",o);return h?Q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const o2=Z({separableConv2d_:qG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(s){const e={x:O(s,"x","sign")};return Y.runKernel(Ph,e)}const jG=Z({sign_:XG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(s){const e={x:O(s,"x","sin","float32")};return Y.runKernel(Fh,e)}const a2=Z({sin_:KG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(s){const e={x:O(s,"x","sinh")};return Y.runKernel(Lh,e)}const l2=Z({sinh_:YG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s,t,e){const n=O(s,"x","slice1d");return F(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),ze(n,[t],[e])}const Eb=Z({slice1d_:ZG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(s,t,e){const n=O(s,"x","slice2d");return F(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),ze(n,t,e)}const c2=Z({slice2d_:JG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(s,t,e){const n=O(s,"x","slice3d");return F(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),ze(n,t,e)}const Mb=Z({slice3d_:QG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(s,t,e){const n=O(s,"x","slice4d");return F(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),ze(n,t,e)}const Jf=Z({slice4d_:tH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(s,t=-1){const e=O(s,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const n={logits:e},i={dim:t};return Y.runKernel(Im,n,i)}const Ab=Z({softmax_:eH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(s){F(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return Y.runKernel(Cy,t)}const u2=Z({fft_:nH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(s){F(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return Y.runKernel(Ey,t)}const y0=Z({ifft_:sH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(s){const t=s.shape[s.shape.length-1],e=s.size/t;let n;if(t<=2){const i=Q(s,[e,t]);n=y0(i)}else{const i=[e,2*(t-1)],r=Q(jf(s),[e,t]),o=Q(nb(s),[e,t]),a=La(ze(r,[0,1],[e,t-2]),1),l=X(La(ze(o,[0,1],[e,t-2]),1),le(-1)),c=Jn([r,a],1),u=Jn([o,l],1),h=Q(cc(c,u),[i[0],i[1]]);n=y0(h)}if(n=jf(n),s.rank===3&&s.shape[0]!==0){const i=n,r=s.shape[0];n=Q(n,[r,n.shape[0]/r,n.shape[1]]),i.dispose()}return n}const rH=Z({irfft_:iH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(s,t,e=0){const i={x:O(s,"x","split")},r={numOrSizeSplits:t,axis:e};return Y.runKernel(Tm,i,r)}const Ws=Z({split_:oH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(s,t){F(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let e=s.shape[s.shape.length-1];const n=s.size/e;let i;if(t!=null&&t<e){const p=s.shape.map(m=>0),g=s.shape.map(m=>m);g[s.shape.length-1]=t,i=ze(s,p,g),e=t}else if(t!=null&&t>e){const p=s.shape.map(g=>g);p[s.shape.length-1]=t-e,i=Jn([s,$n(p)],s.shape.length-1),e=t}else i=s;const r=Ie(i),o=Q(cc(i,r),[n,e]),a=u2(o),l=Math.floor(e/2)+1,c=jf(a),u=nb(a),h=Ws(c,[l,e-l],c.shape.length-1),d=Ws(u,[l,e-l],u.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=l,Q(cc(h[0],d[0]),f)}const h2=Z({rfft_:aH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(s,t){let e=O(s,"a","squaredDifference"),n=O(t,"b","squaredDifference");[e,n]=fn(e,n),de(e.shape,n.shape);const i={a:e,b:n},r={};return Y.runKernel(Uh,i,r)}const d2=Z({squaredDifference_:lH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(s,t){const e=O(s,"x","squeeze","string_or_numeric");return Q(e,No(e.shape,t).newShape)}const Zh=Z({squeeze_:cH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(s,t=0){const e=fI(s,"tensors","stack","string_or_numeric");F(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&F(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const n=e,i={axis:t};return Y.runKernel(fm,n,i)}const Pa=Z({stack_:uH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(s,t=0){const n={x:O(s,"x","step")},i={alpha:t};return Y.runKernel(qh,n,i)}const Jh=Z({step_:hH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s,t,e,n,i=0,r=0,o=0,a=0,l=0){const u={x:O(s,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:n,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return Y.runKernel(Gy,u,h)}const fH=Z({stridedSlice_:dH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(s){const e={x:O(s,"x","tan","float32")};return Y.runKernel(Wh,e)}const mH=Z({tan_:pH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(s,t){AT(s);const e=Nm(s,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Rm(s,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(s,t,e){if(AT(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=Nm(s,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Rm(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(s,t=1,e=!0){const n=O(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const r={x:n},o={k:t,sorted:e},[a,l]=Y.runKernel(jy,r,o);return{values:a,indices:l}}const xH=Z({topk_:gH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new e2(t,e,n,!0,i),o=me(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const f2=Z({truncatedNormal_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s,t=0){const e=O(s,"x","unique","string_or_numeric");F(e.rank>0,()=>"The input tensor must be at least 1D");const n={x:e},i={axis:t},[r,o]=Y.runKernel(Yy,n,i);return{values:r,indices:o}}const vH=Z({unique_:bH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(s,t,e){const n=O(s,"x","unsortedSegmentSum"),i=O(t,"segmentIds","unsortedSegmentSum","int32");F(oc(e),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:i},o={numSegments:e};return Y.runKernel(Mm,r,o)}const p2=Z({unsortedSegmentSum_:wH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(s,t=0){const e=O(s,"x","unstack","string_or_numeric");F(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const n={value:e},i={axis:t};return Y.runKernel(Em,n,i)}const dc=Z({unstack_:SH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(s,t=!0,e,n){return Y.makeVariable(s,t,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(s,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const n=me(s,"int32"),i=me([e.length,s.length],"int32");for(let r=0;r<e.length;r++){const o=n.indexToLoc(e[r]),a=r*s.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(s,t){if(t==null)return s.shape.slice();if(Ne(s.shape,t))return t;if(s.shape.length===t.length){const e=[];for(let n=0;n<s.shape.length;n++)t[n]==null&&s.shape[n]!=null?e.push(s.shape[n]):e.push(t[n]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(s,t,e,n){const i=O(s,"x","dropout");if(F(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof xn?i.clone():i;const r=CH(i,e),o=1-t,a=ie(Om(Et(Bm(r,0,1,"float32",n),o)),o);return X(i,a)}const IH=Z({dropout_:TH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function g2(s,t,e){const n=1-s%2,i=new Float32Array(s);for(let r=0;r<s;++r){const o=2*Math.PI*r/(s+n-1);i[r]=t-e*Math.cos(o)}return Is(i,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(s,t,e,n,i,r="NHWC",o){let a=s;s.rank===3&&(a=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];F(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),F(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),xs("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:e};return Y.runKernel(py,h,d)}const kb=Z({conv2DBackpropFilter_:MH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nb(s,t,e){if(e==null||e==="linear")return s;if(e==="relu")return X(s,Jh(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Rb(s,t){let e=t;const n=En(s.shape,t.shape);return n.length>0&&(e=Yt(e,n)),Q(e,s.shape)}function $b(s,t,e,n){if(t==="linear")return s;if(t==="relu")return Jr(s);if(t==="elu")return Lm(s);if(t==="relu6")return n2(s);if(t==="prelu")return Tb(s,e);if(t==="leakyrelu")return yb(s,n);if(t==="sigmoid")return Ac(s);throw new Error(`Unknown fused activation ${t}.`)}const Db=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH({x:s,filter:t,strides:e,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Db(Y.state.gradientDepth,l)===!1){F(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=Da(s,t,e,n,i,r,o);return a!=null&&(_=Et(_,a)),$b(_,l,c,u)}const h=O(s,"x","conv2d","float32"),d=O(t,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=Q(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),F(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),xs("fused conv2d",n,o);const g=i==="NHWC"?f.shape[3]:f.shape[1];F(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),F(es(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const m=Xn(f.shape,d.shape,e,r,n,o);let x;a!=null&&(x=O(a,"bias","fused conv2d"),[x]=fn(x,h),i==="NHWC"?de(m.outShape,x.shape):(F(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),F(x.shape.length===0||x.shape[0]===m.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let y;if(c!=null){const _=c.shape;if(F(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)F(_[0]===1||_[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${m.outChannels}).`);else if(_.length===3)try{de(_,m.outShape)}catch{const S=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(S)}y=O(c,"prelu weights","fused conv2d")}const v=(_,C)=>{F(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[S,T,I,M]=C,$=Nb(_,I,l);F($a(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const E=fb(T.shape,$,S,e,n),A=kb(T,$,S.shape,e,n),k=[E,A];if(M!=null){const R=Rb(M,$);k.push(R)}return k},b={x:f,filter:d,bias:x,preluActivationWeights:y},w={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Fa((C,S,T)=>{let I=Y.runKernel(Wf,b,w);return T([S,C,I]),p&&(I=Q(I,[I.shape[1],I.shape[2],I.shape[3]])),{value:I,gradFunc:v}})(f,d):Fa((C,S,T,I)=>{let M=Y.runKernel(Wf,b,w);return I([S,C,M,T]),p&&(M=Q(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:v}})(f,d,x)}const kH=Z({fusedConv2d_:AH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(s,t,e,n,i,r=[1,1],o){let a=s;s.rank===3&&(a=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,filterShape:e};return Y.runKernel(wy,c,u)}const RH=Z({depthwiseConv2dNativeBackpropFilter_:NH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(s,t,e,n,i,r=[1,1],o){let a=t,l=!1;t.rank===3&&(l=!0,a=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,inputShape:s},h=Y.runKernel(Sy,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const DH=Z({depthwiseConv2dNativeBackpropInput_:$H});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH({a:s,b:t,transposeA:e=!1,transposeB:n=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Db(Y.state.gradientDepth,r)===!1){let M=ke(s,t,e,n);return i!=null&&(M=Et(M,i)),$b(M,r,o,a)}let l=O(s,"a","fused matMul"),c=O(t,"b","fused matMul");[l,c]=fn(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),g=c.shape.slice(0,-2),m=ft(p),x=ft(g);F(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${n} must match.`);const v=de(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),b=e?Q(l,[m,u,d]):Q(l,[m,d,u]),w=n?Q(c,[x,f,h]):Q(c,[x,h,f]);let _;i!=null&&(_=O(i,"bias","fused matMul"),[_]=fn(_,l),de(v,_.shape));let C;o!=null&&(C=O(o,"prelu weights","fused matMul"));const S=(M,$)=>{const[E,A,k,R]=$,B=Nb(Q(M,k.shape),k,r);let L,D;if(!e&&!n?(L=ke(B,A,!1,!0),D=ke(E,B,!0,!1)):!e&&n?(L=ke(B,A,!1,!1),D=ke(B,E,!0,!1)):e&&!n?(L=ke(A,B,!1,!0),D=ke(E,B,!1,!1)):(L=ke(A,B,!0,!0),D=ke(B,E,!0,!0)),i!=null){const V=Rb(R,B);return[L,D,V]}else return[L,D]},T={a:b,b:w,bias:_,preluActivationWeights:C},I={transposeA:e,transposeB:n,activation:r,leakyreluAlpha:a};return i==null?Fa(($,E,A)=>{const k=Y.runKernel(Vf,T,I);return A([$,E,k]),{value:Q(k,v),gradFunc:S}})(b,w):Fa(($,E,A,k)=>{const R=Y.runKernel(Vf,T,I);return k([$,E,R,A]),{value:Q(R,v),gradFunc:S}})(b,w,_)}const qS=Z({fusedMatMul_:FH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(s){return g2(s,.54,.46)}const Nut=Z({hammingWindow_:LH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(s){return g2(s,.5,.5)}const OH=Z({hannWindow_:PH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(s,t,e,n=!1,i=0){let r=0;const o=[];for(;r+t<=s.size;)o.push(ze(s,r,t)),r+=e;if(n)for(;r<s.size;){const a=r+t-s.size,l=Jn([ze(s,r,t-a),Kh([a],i)]);o.push(l),r+=e}return o.length===0?Nf([],[0,t]):Q(Jn(o),[o.length,t])}const BH=Z({frame_:zH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(s,t,e,n,i=OH){n==null&&(n=EH(t));const r=BH(s,t,e),o=X(r,i(t));return h2(o,n)}const Rut=Z({stft_:UH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(s,t,e,n,i="bilinear",r=0){const o=O(s,"image","cropAndResize"),a=O(t,"boxes","cropAndResize","float32"),l=O(e,"boxInd","cropAndResize","int32"),c=a.shape[0];F(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),F(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),F(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),F(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),F(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),F(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:n};return Y.runKernel(yy,u,h)}const WH=Z({cropAndResize_:VH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(s){const t=O(s,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return Y.runKernel(Iy,e,{})}const HH=Z({flipLeftRight_:GH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(s){const t=O(s,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];F(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),F(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const i=new Array(t.rank);return i.fill(1,0,e),i[e]=3,Di(t,i)}const XH=Z({grayscaleToRGB_:qH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(s,t,e=0,n=.5){const i=O(s,"image","rotateWithOffset","float32");F(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:t,fillValue:e,center:n};return Y.runKernel(Zy,r,o)}const KH=Z({rotateWithOffset_:jH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nc(s,t,e,n,i,r){n==null&&(n=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=s.shape[0];return e=Math.min(e,o),F(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),F(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),F(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),F(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=O(s,"boxes","nonMaxSuppression","float32"),o=O(t,"scores","nonMaxSuppression","float32"),a=Nc(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:n,scoreThreshold:i};return Y.runKernel(Ry,{boxes:r,scores:o},l)}const ZH=Z({nonMaxSuppression_:YH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(s,t,e){const n=QH(s,t,e),i=n<0?-(n+1):n;s.splice(i,0,t)}function QH(s,t,e){return e5(s,t,e||t5)}function t5(s,t){return s>t?1:s<t?-1:0}function e5(s,t,e){let n=0,i=s.length,r=0,o=!1;for(;n<i;){r=n+(i-n>>>1);const a=e(t,s[r]);a>0?n=r+1:(i=r,o=!a)}return o?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(s,t,e,n,i){return Ob(s,t,e,n,i,0)}function Lb(s,t,e,n,i,r){return Ob(s,t,e,n,i,0,!1,r,!0)}function Pb(s,t,e,n,i,r){return Ob(s,t,e,n,i,r,!0)}function Ob(s,t,e,n,i,r,o=!1,a=!1,l=!1){const c=[];for(let m=0;m<t.length;m++)t[m]>i&&c.push({score:t[m],boxIndex:m,suppressBeginIndex:0});c.sort(XS);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<e&&c.length>0;){const m=c.pop(),{score:x,boxIndex:y,suppressBeginIndex:v}=m;if(x<i)break;let b=!1;for(let w=h.length-1;w>=v;--w){const _=n5(s,y,h[w]);if(_>=n){b=!0;break}if(m.score=m.score*s5(n,u,_),m.score<=i)break}m.suppressBeginIndex=h.length,b||(m.score===x?(h.push(y),d.push(m.score)):m.score>i&&JH(c,m,XS))}const f=h.length,p=e-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=f),g}function n5(s,t,e){const n=s.subarray(t*4,t*4+4),i=s.subarray(e*4,e*4+4),r=Math.min(n[0],n[2]),o=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(a-r)*(l-o),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const g=Math.max(r,c),m=Math.max(o,u),x=Math.min(a,h),y=Math.min(l,d),v=Math.max(x-g,0)*Math.max(y-m,0);return v/(f+p-v)}function s5(s,t,e){const n=Math.exp(t*e*e);return e<=s?n:0}function XS(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function i5(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=O(s,"boxes","nonMaxSuppressionAsync"),o=O(t,"scores","nonMaxSuppressionAsync"),a=Nc(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=Fb(c,u,e,n,i);return r!==s&&r.dispose(),o!==t&&o.dispose(),Is(h,"int32")}const r5=i5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=O(s,"boxes","nonMaxSuppression"),a=O(t,"scores","nonMaxSuppression"),l=Nc(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r},h=Y.runKernel(Dy,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const a5=Z({nonMaxSuppressionWithScore_:o5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function l5(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=O(s,"boxes","nonMaxSuppressionAsync"),a=O(t,"scores","nonMaxSuppressionAsync"),l=Nc(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=Pb(u,h,e,n,i,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Is(d,"int32"),selectedScores:Is(f)}}const c5=l5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=O(s,"boxes","nonMaxSuppression"),a=O(t,"scores","nonMaxSuppression"),l=Nc(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},p=Y.runKernel($y,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const h5=Z({nonMaxSuppressionPadded_:u5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function d5(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=O(s,"boxes","nonMaxSuppressionAsync"),a=O(t,"scores","nonMaxSuppressionAsync"),l=Nc(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:g}=Lb(d,f,c,u,h,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Is(p,"int32"),validOutputs:le(g,"int32")}}const f5=d5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(s,t,e=!1,n=!1){const i=O(s,"images","resizeBilinear");F(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=Q(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=Y.runKernel(bm,a,l);return o?Q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const x2=Z({resizeBilinear_:p5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(s,t,e=!1,n=!1){const i=O(s,"images","resizeNearestNeighbor");F(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=Q(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=Y.runKernel(ym,a,l);return o?Q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const y2=Z({resizeNearestNeighbor_:m5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(s,t="binary",e=!1,n=.5){const i=O(s,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let c=X(Is([n]),255),u,h,d,f;if(F(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),F(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),F(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),F(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),i.shape[2]===3){[u,h,d]=Ws(i,[1,1,1],-1);const m=X(u,r),x=X(h,o),y=X(d,a);f=Et(Et(m,x),y)}else f=s;if(t==="otsu"){const m=IV(Lt(s2(f),"int32"),yu([]),256);c=x5(m,l)}const p=e?kc(f,c):qs(f,c);return Lt(X(p,255),"int32")}function x5(s,t){let e=Is([-1]),n=Is([0]),i=Is([0]),r,o,a,l,c,u;for(let h=0;h<s.size-1;h++){r=ze(s,0,h+1),o=ze(s,h+1),c=ie(Yt(r),t),u=ie(Yt(o),t);const d=Yt(X(r,Zf(0,r.size)));a=ie(d,Yt(r));const f=Kh(o.shape,r.size),p=Et(Zf(0,o.size),f),g=X(o,p);l=ie(Yt(g),Yt(o));const m=Zt(a,l),x=Zt(a,l),y=X(c,u);i=X(X(y,m),x);const v=qs(i,n);n=ks(v,i,n),e=ks(v,Is([h]),e)}return e}const y5=Z({threshold_:g5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(s,t,e="nearest",n="constant",i=0,r){const o=O(s,"image","transform","float32"),a=O(t,"transforms","transform","float32");F(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),F(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},c={interpolation:e,fillMode:n,fillValue:i,outputShape:r};return Y.runKernel(Ky,l,c)}const v5=Z({transform_:b5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(s,t,e){F(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const n=O(s,"a","bandPart");F(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const i=n.shape,[r,o]=n.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(e<=o))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`);t<0&&(t=r),e<0&&(e=o);const a=Q(Zf(0,r,1,"int32"),[-1,1]),l=Zf(0,o,1,"int32"),c=Zt(a,l),u=Xr(kc(c,le(+t,"int32")),Za(c,le(-e,"int32"))),h=$n([r,o],n.dtype);return Q(Pa(dc(Q(n,[-1,r,o])).map(d=>ks(u,d,h))),i)}const S5=Z({bandPart_:w5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(s){let t;if(Array.isArray(s)){t=!1,F(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=s[0].shape[0];for(let r=1;r<s.length;++r)F(s[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${i})`)}else t=!0,s=Ws(s,s.shape[0],0).map(i=>Zh(i,[0]));F(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const e=[],n=s;for(let i=0;i<s.length;++i)e.push(Y.tidy(()=>{let r=n[i];if(i>0)for(let o=0;o<i;++o){const a=X(Yt(X(e[o],r)),e[o]);r=Zt(r,a)}return ie(r,Pm(r,"euclidean"))}));return t?Pa(e,0):e}const C5=Z({gramSchmidt_:_5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T5(s,t=!1){if(F(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return jS(s,t);{const e=s.shape.slice(0,s.shape.length-2).reduce((l,c)=>l*c),n=dc(Q(s,[e,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),i=[],r=[];n.forEach(l=>{const[c,u]=jS(l,t);i.push(c),r.push(u)});const o=Q(Pa(i,0),s.shape),a=Q(Pa(r,0),s.shape);return[o,a]}}function jS(s,t=!1){return Y.tidy(()=>{F(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const e=s.shape[0],n=s.shape[1];let i=WI(e),r=xa(s);const o=Nf([[1]],[1,1]);let a=xa(o);const l=e>=n?n:e;for(let c=0;c<l;++c){const u=r,h=a,d=i;[a,r,i]=Y.tidy(()=>{const f=ze(r,[c,c],[e-c,1]),p=Pm(f),g=ze(r,[c,c],[1,1]),m=ks(qs(g,0),Nf([[-1]]),Nf([[1]])),x=Zt(g,X(m,p)),y=ie(f,x);y.shape[0]===1?a=xa(o):a=Jn([o,ze(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const v=sn(ie(ke(m,x),p)),b=ze(r,[c,0],[e-c,n]),w=X(v,a),_=Ce(a);if(c===0)r=Zt(b,ke(w,ke(_,b)));else{const T=Zt(b,ke(w,ke(_,b)));r=Jn([ze(r,[0,0],[c,n]),T],0)}const C=Ce(w),S=ze(i,[0,c],[e,i.shape[1]-c]);if(c===0)i=Zt(S,ke(ke(S,a),C));else{const T=Zt(S,ke(ke(S,a),C));i=Jn([ze(i,[0,0],[e,c]),T],1)}return[a,r,i]}),ve([u,h,d])}return!t&&e>n&&(i=ze(i,[0,0],[e,n]),r=ze(r,[0,0],[n,n])),[i,r]})}const I5=Z({qr_:T5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ms;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ms||(ms={}));function E5(s,t,e=ms.SUM_BY_NONZERO_WEIGHTS){const n=O(s,"losses","computeWeightedLoss");let i=null;t!=null&&(i=O(t,"weights","computeWeightedLoss"));const r=i==null?n:X(n,i);if(e===ms.NONE)return r;if(e===ms.SUM)return Yt(r);if(e===ms.MEAN){if(i==null)return dn(r);{const o=n.size/i.size,a=ie(Yt(r),Yt(i));return o>1?ie(a,le(o)):a}}if(e===ms.SUM_BY_NONZERO_WEIGHTS){if(i==null)return ie(Yt(r),le(n.size));{const o=X(i,Lo(n.shape)),a=Lt(Yt(Fu(o,le(0))),"float32");return ie(Yt(r),a)}}throw Error(`Unknown reduction: ${e}`)}const Po=Z({computeWeightedLoss_:E5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(s,t,e,n=ms.SUM_BY_NONZERO_WEIGHTS){const i=O(s,"labels","absoluteDifference"),r=O(t,"predictions","absoluteDifference");let o=null;e!=null&&(o=O(e,"weights","absoluteDifference")),yi(i.shape,r.shape,"Error in absoluteDifference: ");const a=Nn(Zt(i,r));return Po(a,o,n)}const $ut=Z({absoluteDifference_:M5});function A5(s,t,e,n,i=ms.SUM_BY_NONZERO_WEIGHTS){const r=O(s,"labels","cosineDistance"),o=O(t,"predictions","cosineDistance");let a=null;n!=null&&(a=O(n,"weights","cosineDistance")),yi(r.shape,o.shape,"Error in cosineDistance: ");const l=le(1),c=Zt(l,Yt(X(r,o),e,!0));return Po(c,a,i)}const Dut=Z({cosineDistance_:A5});function k5(s,t,e,n=ms.SUM_BY_NONZERO_WEIGHTS){let i=O(s,"labels","hingeLoss");const r=O(t,"predictions","hingeLoss");let o=null;e!=null&&(o=O(e,"weights","hingeLoss")),yi(i.shape,r.shape,"Error in hingeLoss: ");const a=le(1);i=Zt(X(le(2),i),a);const l=Jr(Zt(a,X(i,r)));return Po(l,o,n)}const Fut=Z({hingeLoss_:k5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(s,t,e,n=1,i=ms.SUM_BY_NONZERO_WEIGHTS){const r=O(s,"labels","huberLoss"),o=O(t,"predictions","huberLoss");let a=null;e!=null&&(a=O(e,"weights","huberLoss")),yi(r.shape,o.shape,"Error in huberLoss: ");const l=le(n),c=Nn(Zt(o,r)),u=zm(c,l),h=Zt(c,u),d=Et(X(le(.5),Ge(u)),X(l,h));return Po(d,a,i)}const Lut=Z({huberLoss_:N5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(s,t,e,n=1e-7,i=ms.SUM_BY_NONZERO_WEIGHTS){const r=O(s,"labels","logLoss"),o=O(t,"predictions","logLoss");let a=null;e!=null&&(a=O(e,"weights","logLoss")),yi(r.shape,o.shape,"Error in logLoss: ");const l=le(1),c=le(n),u=sn(X(r,pi(Et(o,c)))),h=X(Zt(l,r),pi(Et(Zt(l,o),c))),d=Zt(u,h);return Po(d,a,i)}const Put=Z({logLoss_:R5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(s,t,e,n=ms.SUM_BY_NONZERO_WEIGHTS){const i=O(s,"labels","meanSquaredError"),r=O(t,"predictions","meanSquaredError");let o=null;e!=null&&(o=O(e,"weights","meanSquaredError")),yi(i.shape,r.shape,"Error in meanSquaredError: ");const a=d2(i,r);return Po(a,o,n)}const Out=Z({meanSquaredError_:$5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(s,t){const e=O(s,"labels","sigmoidCrossEntropyWithLogits"),n=O(t,"logits","sigmoidCrossEntropyWithLogits");yi(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Jr(n),r=X(n,e),o=bb(fi(sn(Nn(n))));return Et(Zt(i,r),o)}function F5(s,t,e,n=0,i=ms.SUM_BY_NONZERO_WEIGHTS){let r=O(s,"multiClassLabels","sigmoidCrossEntropy");const o=O(t,"logits","sigmoidCrossEntropy");let a=null;if(e!=null&&(a=O(e,"weights","sigmoidCrossEntropy")),yi(r.shape,o.shape,"Error in sigmoidCrossEntropy: "),n>0){const c=le(n),u=le(1),h=le(.5);r=Et(X(r,Zt(u,c)),X(h,c))}const l=D5(r,o);return Po(l,a,i)}const zut=Z({sigmoidCrossEntropy_:F5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L5(s,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Fa((i,r,o)=>{const l=qI(r,[e],!0),c=Zt(Lt(r,"float32"),l);o([i,c]);const u=sn(X(c,i));return{value:Yt(u,[e]),gradFunc:(f,p)=>{const[g,m]=p,x=pn(f.shape,[e]);return[X(Q(f,x),Zt(Lt(g,"float32"),fi(m))),X(Q(f,x),Zt(fi(m),Lt(g,"float32")))]}}})(s,t)}function P5(s,t,e,n=0,i=ms.SUM_BY_NONZERO_WEIGHTS){let r=O(s,"onehotLabels","softmaxCrossEntropy");const o=O(t,"logits","softmaxCrossEntropy");let a=null;if(e!=null&&(a=O(e,"weights","softmaxCrossEntropy")),yi(r.shape,o.shape,"Error in softmaxCrossEntropy: "),n>0){const c=le(n),u=le(1),h=le(r.shape[1]);r=Et(X(r,Zt(u,c)),ie(c,h))}const l=L5(r,o);return Po(l,a,i)}const But=Z({softmaxCrossEntropy_:P5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(s,t,e,n){const i=O(s,"indices","sparseFillEmptyRows","int32"),r=O(t,"values","sparseFillEmptyRows"),o=O(e,"denseShape","sparseFillEmptyRows","int32"),a=O(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:i,values:r,denseShape:o,defaultValue:a},c=Y.runKernel(zy,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const Uut=Z({sparseFillEmptyRows_:O5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(s,t,e){const n=O(s,"inputIndices","sparseReshape","int32"),i=O(t,"inputShape","sparseReshape","int32"),r=O(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const o={inputIndices:n,inputShape:i,newShape:r},a=Y.runKernel(By,o);return{outputIndices:a[0],outputShape:a[1]}}const Vut=Z({sparseReshape_:z5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(s,t,e){const n=O(s,"data","sparseSegmentMean"),i=O(t,"indices","sparseSegmentMean","int32"),r=O(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return Y.runKernel(Uy,o)}const Wut=Z({sparseSegmentMean_:B5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5(s,t,e){const n=O(s,"data","sparseSegmentSum"),i=O(t,"indices","sparseSegmentSum","int32"),r=O(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return Y.runKernel(Vy,o)}const Gut=Z({sparseSegmentSum_:U5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V5(s,t,e,n,i,r,o,a){const l=O(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=O(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:e,nGramWidths:n,leftPad:i,rightPad:r,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:c},d=Y.runKernel(Hy,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const Hut=Z({stringNGrams_:V5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(s,t,e=!0){const n=O(s,"input","stringSplit","string"),i=O(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:e},o={input:n,delimiter:i},a=Y.runKernel(qy,o,r);return{indices:a[0],values:a[1],shape:a[2]}}const qut=Z({stringSplit_:W5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(s,t){const e=O(s,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:e};return Y.runKernel(Xy,i,n)}const Xut=Z({stringToHashBucketFast_:G5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vl={flipLeftRight:HH,grayscaleToRGB:XH,resizeNearestNeighbor:y2,resizeBilinear:x2,rotateWithOffset:KH,cropAndResize:WH,nonMaxSuppression:ZH,nonMaxSuppressionAsync:r5,nonMaxSuppressionWithScore:a5,nonMaxSuppressionWithScoreAsync:c5,nonMaxSuppressionPadded:h5,nonMaxSuppressionPaddedAsync:f5,threshold:y5,transform:v5},H5={bandPart:S5,gramSchmidt:C5,qr:I5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oo extends Mc{minimize(t,e=!1,n){const{value:i,grads:r}=this.computeGradients(t,n);if(n!=null){const o=n.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return ve(r),e?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return qW(t,e)}dispose(){this.iterations_!=null&&ve(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:le(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Oo,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zb extends Oo{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Y.registeredVariables[n],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accum_grad`,variable:rt(()=>Ie(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${n}/accum_var`,variable:rt(()=>Ie(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;rt(()=>{const u=Et(X(l,this.rho),X(Ge(a),1-this.rho)),h=X(ie(os(Et(c,this.epsilon)),os(Et(l,this.epsilon))),a),d=Et(X(c,this.rho),X(Ge(h),1-this.rho));l.assign(u),c.assign(d);const f=Et(X(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ve(this.accumulatedGrads.map(t=>t.variable)),ve(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}zb.className="Adadelta";_t(zb);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bb extends Oo{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Y.registeredVariables[n];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accumulator`,variable:rt(()=>Kh(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[i].tensor:t[n];if(o==null)return;const a=this.accumulatedGrads[i].variable;rt(()=>{const l=Et(a,Ge(o));a.assign(l);const c=Et(X(ie(o,os(Et(l,Y.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ve(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Bb.className="Adagrad";_t(Bb);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ub extends Oo{constructor(t,e,n,i=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],rt(()=>{this.accBeta1=le(e).variable(),this.accBeta2=le(n).variable()}),i==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);rt(()=>{const n=Zt(1,this.accBeta1),i=Zt(1,this.accBeta2);e.forEach((r,o)=>{const a=Y.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:rt(()=>Ie(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:rt(()=>Ie(a).variable(l))});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Et(X(u,this.beta1),X(c,1-this.beta1)),f=Et(X(h,this.beta2),X(Ge(c),1-this.beta2)),p=ie(d,n),g=ie(f,i);u.assign(d),h.assign(f);const m=Et(X(ie(p,Et(os(g),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(X(this.accBeta1,this.beta1)),this.accBeta2.assign(X(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ve(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&ve(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),rt(()=>{this.accBeta1.assign(hc(this.beta1,this.iterations_+1)),this.accBeta2.assign(hc(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Ub.className="Adam";_t(Ub);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vb extends Oo{constructor(t,e,n,i=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],rt(()=>{this.iteration=le(0).variable(),this.accBeta1=le(e).variable()}),i==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);rt(()=>{const n=Zt(1,this.accBeta1),i=ie(-this.learningRate,Et(X(this.iteration,this.decay),1));e.forEach((r,o)=>{const a=Y.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:Ie(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:Ie(a).variable(l)});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Et(X(u,this.beta1),X(c,1-this.beta1)),f=X(h,this.beta2),p=Nn(c),g=Fo(f,p);u.assign(d),h.assign(g);const m=Et(X(ie(i,n),ie(d,Et(g,this.epsilon))),a);a.assign(m)}),this.iteration.assign(Et(this.iteration,1)),this.accBeta1.assign(X(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ve(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&ve(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Vb.className="Adamax";_t(Vb);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Um extends Oo{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Array.isArray(t)?t[i].tensor:t[n];if(r==null)return;const o=Y.registeredVariables[n];rt(()=>{const a=Et(X(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=yr(le(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Um.className="SGD";_t(Um);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wb extends Um{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=le(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Y.registeredVariables[n];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${n}/momentum`,variable:rt(()=>Ie(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(t)?t[i].tensor:t[n];a!=null&&rt(()=>{let l;const c=Et(X(this.m,o),a);this.useNesterov?l=Et(X(this.c,Et(a,X(c,this.m))),r):l=Et(X(this.c,c),r),o.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ve(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Wb.className="Momentum";_t(Wb);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gb extends Oo{constructor(t,e=.9,n=0,i=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=Y.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Y.registeredVariables[n],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${n}/rms`,variable:rt(()=>Ie(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${n}/momentum`,variable:rt(()=>Ie(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${n}/mg`,variable:rt(()=>Ie(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,c=this.accumulatedMoments[i].variable;rt(()=>{const u=Et(X(l,this.decay),X(Ge(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=Et(X(h,this.decay),X(a,1-this.decay)),f=ie(X(a,this.learningRate),os(Zt(u,Et(Ge(d),this.epsilon)))),p=Et(X(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const g=Zt(r,p);r.assign(g)}else{const h=Et(X(l,this.decay),X(Ge(a),1-this.decay)),d=Et(X(c,this.momentum),ie(X(a,this.learningRate),os(Et(h,this.epsilon))));l.assign(h),c.assign(d);const f=Zt(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ve(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ve(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&ve(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Gb.className="RMSProp";_t(Gb);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yo{static sgd(t){return new Um(t)}static momentum(t,e,n=!1){return new Wb(t,e,n)}static rmsprop(t,e=.9,n=0,i=null,r=!1){return new Gb(t,e,n,i,r)}static adam(t=.001,e=.9,n=.999,i=null){return new Ub(t,e,n,i)}static adadelta(t=.001,e=.95,n=null){return new zb(t,e,n)}static adamax(t=.002,e=.9,n=.999,i=null,r=0){return new Vb(t,e,n,i,r)}static adagrad(t,e=.1){return new Bb(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ml={sgd:Yo.sgd,momentum:Yo.momentum,adadelta:Yo.adadelta,adagrad:Yo.adagrad,rmsprop:Yo.rmsprop,adamax:Yo.adamax,adam:Yo.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s())();function b2(){return new Promise(s=>q5(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hb(s,t){const e=s[0].length;s.forEach((i,r)=>{F(i.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),F(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const n=s[0];s.forEach((i,r)=>{for(let o=0;o<e;o++)F(o===t||i[o]===n[o],()=>`Error in concat${e}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function fr(s,t){const e=s[0].slice();for(let n=1;n<s.length;n++)e[t]+=s[n][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ai;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(Ai||(Ai={}));function v2(s,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<s+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(s+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${s+e.length}, but shape.rank = ${n.length}`);for(let i=1;i<e.length;++i){const r=e[i],o=n[n.length-e.length+i],a=n[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+s}] = ${r} but shape[${i+s}] = ${a}`)}else n[o]=r}return n}function w2(s){const t={FIRST_DIM_SIZE:Ai.FIRST_DIM_SIZE,VALUE_ROWIDS:Ai.VALUE_ROWIDS,ROW_LENGTHS:Ai.ROW_LENGTHS,ROW_SPLITS:Ai.ROW_SPLITS,ROW_LIMITS:Ai.ROW_LIMITS,ROW_STARTS:Ai.ROW_STARTS},e=[];for(const n of s)if(n in t)e.push(t[n]);else break;return e}function S2(s){return s.length===0?0:s[0]===Ai.FIRST_DIM_SIZE?s.length-1:s.length}function _2(s,t){if(s==null||t==null)return;const e=s.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let i=0;i<Math.min(e,n-1);++i){const r=s[i],o=t[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-s.length}] = ${r} but ragged tensor input.flatValues.shape[${i-s.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qb=30;function Vm(s){return s<=qb?s:Qx(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xb(s,t,e){const n=e*(typeof s=="number"?s:s[0]),i=t*(typeof s=="number"?s:s[1]);return[n,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qh(s,t,e,n=!0){let i=[];if(n)i=i.concat(t.slice(0)),i.push(s[0]/e),i=i.concat(s.slice(1));else{i=i.concat(s[0]);const r=t.length;for(let o=0;o<r;++o)i=i.concat([s[o+1]/t[o],t[o]]);i=i.concat(s.slice(r+1))}return i}function td(s,t,e=!0){const n=[];if(e){n.push(t);for(let i=t+1;i<s;++i)i<=2*t?(n.push(i),n.push(i-(t+1))):n.push(i)}else{const i=[],r=[];for(let o=1;o<s;++o)o>=t*2+1||o%2===1?r.push(o):i.push(o);n.push(...i),n.push(0),n.push(...r)}return n}function ed(s,t,e,n=!0){const i=[];n?i.push(s[0]/e):i.push(s[0]*e);for(let r=1;r<s.length;++r)r<=t.length?n?i.push(t[r-1]*s[r]):i.push(s[r]/t[r-1]):i.push(s[r]);return i}function jb(s,t){const e=[0];for(let n=0;n<t;++n)e.push(s[n][0]);return e}function Kb(s,t,e){const n=s.slice(0,1);for(let i=0;i<e;++i)n.push(s[i+1]-t[i][0]-t[i][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wm=1.7580993408473768,Gm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yb=.3275911,Zb=.254829592,Jb=-.284496736,Qb=1.421413741,tv=-1.453152027,ev=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const e=new Float32Array(s.length*2);for(let n=0;n<e.length;n+=2)e[n]=s[n/2],e[n+1]=t[n/2];return e}function C2(s){const t=new Float32Array(s.length/2),e=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)t[n/2]=s[n],e[n/2]=s[n+1];return{real:t,imag:e}}function T2(s){const t=Math.ceil(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=0;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function I2(s){const t=Math.floor(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=2;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function nv(s,t){const e=s[t*2],n=s[t*2+1];return{real:e,imag:n}}function E2(s,t,e,n){s[n*2]=t,s[n*2+1]=e}function M2(s,t){const e=new Float32Array(s/2),n=new Float32Array(s/2);for(let i=0;i<Math.ceil(s/2);i++){const r=(t?2:-2)*Math.PI*(i/s);e[i]=Math.cos(r),n[i]=Math.sin(r)}return{real:e,imag:n}}function A2(s,t,e){const n=(e?2:-2)*Math.PI*(s/t),i=Math.cos(n),r=Math.sin(n);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mx="->",X5=/->/g,KS=",",YS="...";function sv(s,t){s=s.replace(/\s/g,"");const e=(s.length-s.replace(X5,"").length)/mx.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${mx}").`);const[n,i]=s.split(mx);F(n.indexOf(YS)===-1,()=>`The ellipsis notation ("${YS}") is not supported yet.`);const r=n.split(KS),o=r.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const f=i[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<n.length;++d){const f=n[d];a.indexOf(f)===-1&&f!==KS&&a.push(f)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const c=a.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function iv(s,t){let e=new Array(s);e.fill(-1);for(let i=0;i<t.length;++i)e[t[i]]=i;const n=[];for(let i=0;i<s;++i)e[i]===-1&&n.push(i);return e=e.filter(i=>i!==-1),{permutationIndices:e,expandDims:n}}function rv(s,t,e){const n=new Array(s);for(let i=0;i<e.length;++i){const r=e[i].shape;for(let o=0;o<t[i].length;++o)n[t[i][o]]===void 0?n[t[i][o]]=r[o]:F(n[t[i][o]]===r[o],()=>`Expected dimension ${n[t[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function ov(s,t){const e=s,n=[];let i=0;s.length===0&&e.push(-1),i=s.length+1;for(let o=0;o<i;++o)n.push([]);const r=[];for(let o=0;o<e.length;++o){const a=e[o],l=j5(t,a);for(const c of l)r.indexOf(c)===-1&&(n[o].push(c),r.push(c))}return{path:e,steps:n}}function av(s){return s.every((t,e)=>t===e)}function j5(s,t){const e=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function lv(s,t,e=0){let n=[];if(typeof t=="number")F(s.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(s.shape[e]/t);else{const i=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);F(i<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const o=t.reduce((a,l)=>l>0?a+l:a);t[r]=s.shape[e]-o}F(s.shape[e]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function N2(s,t){return`indices(${s}, 0) is invalid: ${t} < 0`}function R2(s,t,e){return`indices(${s}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(s,t){return`only one output dimension may be -1, not both ${s} and ${t}`}function D2(s,t){return`size ${s} must be non-negative, not ${t}`}function F2(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function L2(s,t){const e=ft(s),n=ft(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${t}`}function P2(s,t){const e=ft(s),n=ft(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0(){return"segment ids must be >= 0"}function O2(){return"segment ids are not increasing"}function z2(s,t){return`Segment id ${s} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function B2(s,t,e){return`Bad: indices[${s}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(s,t){let e=!1,n;for(s<=qb?(n=s,e=!0):n=Qx(s,Math.floor(Math.sqrt(s)));!e;)n>t||n===s?e=!0:n=Qx(s,n+1);return n}function V2(s,t,e){const n=[],i=s.length;for(let r=0;r<i;r++)r!==t?n.push(s[r]):n.push(e);return n}function cv(s,t,e,n){const i=t.shape.length,r=s.shape.length;if(n!==0&&(n<-i||n>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${n}`);if(n<0&&(n+=i),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let h=0;h<n;++h)if(s.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${s.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=s.shape[e],a=[];let l=1,c=1,u=1;for(let h=0;h<n;++h)a.push(s.shape[h]),l*=s.shape[h];for(let h=n;h<e;h++)a.push(s.shape[h]),c*=s.shape[h];for(let h=n;h<i;h++)a.push(t.shape[h]);for(let h=e+1;h<r;h++)a.push(s.shape[h]),u*=s.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const K5=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:U2,computeOutShape:V2,collectGatherOpShapeInfo:cv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(s){try{return s.map(t=>Co(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function W2(s){return s.map(t=>bo(t))}const Y5=Object.freeze(Object.defineProperty({__proto__:null,slice_util:$U,segment_util:K5,fromUint8ToStringArray:Oa,fromStringArrayToUint8:W2,upcastType:Ms,axesAreInnerMostDims:gb,combineLocations:UI,computeOutAndReduceShapes:Pn,expandShapeToKeepDim:pn,assertAxesAreInnerMostDims:jn,getAxesPermutation:rn,getUndoAxesPermutation:Do,getInnerMostAxes:mn,getBroadcastDims:uc,getReductionAxes:En,assertAndGetBroadcastShape:de,assertParamsConsistent:Hb,computeOutShape:fr,computeDilation2DInfo:jh,computePool2DInfo:bi,computePool3DInfo:Yr,computeConv2DInfo:Xn,computeConv3DInfo:$o,computeDefaultPad:cb,tupleValuesAreOne:$a,eitherStridesOrDilationsAreOne:es,convertConv2DDataFormat:Zr,checkPadOnDimRoundingMode:xs,getFusedDyActivation:Nb,getFusedBiasGradient:Rb,applyActivation:$b,shouldFuse:Db,get RowPartitionType(){return Ai},combineRaggedTensorToTensorShapes:v2,getRowPartitionTypesHelper:w2,getRaggedRank:S2,validateDefaultValueShape:_2,PARALLELIZE_THRESHOLD:qb,computeOptimalWindowSize:Vm,getImageCenter:Xb,getReshaped:Qh,getPermuted:td,getReshapedPermuted:ed,getSliceBeginCoords:jb,getSliceSize:Kb,prepareAndValidate:sb,validateUpdateShape:TI,validateInput:MU,calculateShapes:Xh,SELU_SCALEALPHA:Wm,SELU_SCALE:Gm,ERF_P:Yb,ERF_A1:Zb,ERF_A2:Jb,ERF_A3:Qb,ERF_A4:tv,ERF_A5:ev,warn:Os,log:f4,mergeRealAndImagArrays:jr,splitRealAndImagArrays:C2,complexWithEvenIndex:T2,complexWithOddIndex:I2,getComplexWithIndex:nv,assignToTypedArray:E2,exponents:M2,exponent:A2,decodeEinsumEquation:sv,getEinsumPermutation:iv,checkEinsumDimSizes:rv,getEinsumComputePath:ov,isIdentityPermutation:av,prepareSplitSize:lv,getSparseFillEmptyRowsIndicesDenseShapeMismatch:k2,getSparseFillEmptyRowsNegativeIndexErrorMessage:N2,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:R2,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:$2,getSparseReshapeNegativeOutputDimErrorMessage:D2,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:F2,getSparseReshapeInputOutputMultipleErrorMessage:L2,getSparseReshapeInputOutputMismatchErrorMessage:P2,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:b0,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:O2,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:z2,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:B2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G2={kernelName:kp,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,Jh(Lt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5={kernelName:Ju,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=Ge(Lt(e,"float32")),i=os(Zt(le(1),n));return sn(ie(s,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5={kernelName:Qu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=os(Zt(Ge(Lt(e,"float32")),1));return ie(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5={kernelName:Ec,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{let a=s;const l=En(e.shape,i);return l.length>0&&(a=Yt(a,l)),Q(a,e.shape)},b:()=>{let a=s;const l=En(n.shape,i);return l.length>0&&(a=Yt(a,l)),Q(a,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6={kernelName:ay,saveAllInputs:!0,gradFunc:(s,t)=>{const e={};return t.forEach((n,i)=>{e[i]=()=>s.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:Np,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Ie(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:Rp,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Ie(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:th,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,os(Zt(le(1),Ge(Lt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:eh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=os(Et(le(1),Ge(Lt(e,"float32"))));return ie(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:ih,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{const a=Et(Ge(e),Ge(n));let l=X(s,ie(n,a));const c=En(e.shape,i);return c.length>0&&(l=Yt(l,c)),Q(l,e.shape)},b:()=>{const a=Et(Ge(e),Ge(n));let l=sn(X(s,ie(e,a)));const c=En(n.shape,i);return c.length>0&&(l=Yt(l,c)),Q(l,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={kernelName:nh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,Et(Ge(Lt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6={kernelName:sh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,Zt(le(1),Ge(Lt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(s,t,e,n,i,r){const o=O(s,"dy","avgPool3dGrad"),a=O(t,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),F(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),F(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),xs("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:e,strides:n,pad:i,dimRoundingMode:r},f=Y.runKernel(hy,h,d);return u?Q(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const c6=Z({avgPool3dGrad_:l6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:Dp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:a}=e;return{x:()=>c6(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(s,t,e,n,i){const r=O(s,"dy","avgPoolGrad"),o=O(t,"input","avgPoolGrad");F(o.rank===r.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${r.rank})`);let a=o,l=r,c=!1;o.rank===3&&(c=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),F(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),F(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:e,strides:n,pad:i},d=Y.runKernel(uy,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const d6=Z({avgPoolGrad_:h6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6={kernelName:$p,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o}=e;return{x:()=>d6(s,n,i,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:Fp,inputsToSave:["a","b"],gradFunc:(s,t,e)=>{const[n,i]=t,{transposeA:r,transposeB:o}=e;return!r&&!o?{a:()=>ke(s,i,!1,!0),b:()=>ke(n,s,!0,!1)}:!r&&o?{a:()=>ke(s,i,!1,!1),b:()=>ke(s,n,!0,!1)}:r&&!o?{a:()=>ke(i,s,!1,!0),b:()=>ke(n,s,!1,!1)}:{a:()=>ke(i,s,!0,!0),b:()=>ke(s,n,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6={kernelName:Lp,gradFunc:(s,t,e)=>{const{blockShape:n,crops:i}=e;return{x:()=>Cb(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6={kernelName:u4,gradFunc:(s,t,e)=>{const n=e,i=n.inputShape,r=n.shape,o=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])o[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>Yt(s,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:rh,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:oh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:ah,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{clipValueMin:i,clipValueMax:r}=e;return{x:()=>ks(Xr(Za(n,i),kc(n,r)),s,Ie(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:Pp,inputsToSave:["x"],gradFunc:G2.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6={kernelName:Op,saveAllInputs:!0,gradFunc:(s,t,e)=>{const n=t.map(l=>l.shape),{axis:i}=e,r=ge(i,t[0].shape)[0],o=n.map(l=>l[r]);return Ws(s,o,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:zp,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{dilations:r,strides:o,pad:a,dataFormat:l}=e;return F($a(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>fb(n.shape,s,i,o,a,l),filter:()=>kb(n,s,i.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:Bp,inputsToSave:["dy","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{strides:r,pad:o,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Da(s,i,r,o,a,1,l),filter:()=>kb(s,n,i.shape,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(s,t,e,n,i){let r=s;s.rank===4&&(r=Q(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let o=t;o.rank===4&&(o=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),F(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),F(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),F(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),F(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:r,dy:o},l={strides:n,pad:i,filterShape:e};return Y.runKernel(my,a,l)}const T6=Z({conv3DBackpropFilter_:C6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:Up,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r}=e;F($a(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);const[o,a]=t;return{x:()=>OI(o.shape,s,a,i,r),filter:()=>T6(o,s,a.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6={kernelName:lh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(sn(a2(Lt(e,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:ch,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(l2(Lt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:Vp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i,exclusive:r,reverse:o}=e;return{x:()=>{const a=rn([i],n.rank);let l=BI(s,i,r,!o);return a!=null&&(l=Ce(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:Wp,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r,dimRoundingMode:o}=e,a=n==null?[1,1]:n;F($a(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return F(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),F(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),F(es(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),xs("depthwiseConv2d",r,o),{x:()=>DH(l.shape,s,c,i,r,a,o),filter:()=>RH(l,s,c.shape,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:Gp,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,r={x:n,filter:i,dy:s},o={x:n,filter:i,dy:s};return{x:()=>Y.runKernel(t0,r,e),filter:()=>Y.runKernel(e0,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:hh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t,n={dy:s,y:e};return{x:()=>Y.runKernel(_y,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:dh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=X(fi(sn(Ge(e))),2/Math.sqrt(Math.PI));return{x:()=>X(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:fh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:qp,inputsToSave:["input"],gradFunc:(s,t)=>{const[e]=t;return{input:()=>Q(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6={kernelName:ph,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,fi(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:mh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:gh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{const a=ie(s,Lt(n,"float32")),l=En(e.shape,i);return l.length>0?Q(Yt(a,l),e.shape):a},b:()=>{let a=X(s,Lt(e,"float32"));const l=En(n.shape,i);l.length>0&&(a=Q(Yt(a,l),n.shape));const c=Ge(n);return sn(ie(a,Lt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6={kernelName:Xp,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,e)=>{const{varianceEpsilon:n}=e,[i,r,o,a]=t,l=a==null?le(1):a,c=En(r.shape,i.shape),u=[];if(r.rank===1){for(let b=0;b<i.shape.length-1;++b)u.push(i.shape[b]);u.push(1)}const h=Zt(i,r),d=X(s,l),f=i2(Et(o,le(n))),p=X(X(X(f,f),f),le(-.5));return{x:()=>r.rank===1?Q(X(X(s,Di(Q(f,[1,1,1,r.shape[0]]),u)),l),i.shape):Q(X(X(s,f),l),i.shape),mean:()=>{let b=X(X(f,le(-1)),d);return r.rank===1&&(b=Yt(b,c)),Q(b,r.shape)},variance:()=>{let b=X(X(p,h),d);return r.rank===1&&(b=Yt(b,c)),Q(b,r.shape)},scale:()=>{const b=X(h,f);let w=X(s,b);return r.rank===1&&(w=Yt(w,c)),Q(w,r.shape)},offset:()=>{let b=s;return r.rank===1&&(b=Yt(b,c)),Q(b,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:jp,inputsToSave:["x","indices"],gradFunc:(s,t,e)=>{const[n,i]=t,{axis:r}=e,o=ge(r,n.shape)[0];return{x:()=>{const l=n.shape,c=i.size,u=l.slice(0,o),h=u.length,d=l.slice(r,l.length).slice(1),f=d.length,p=ZS(0,h),g=ZS(h+1,h+1+f),m=JS([u,[c],d]),x=Q(s,m),y=Q(i,[c]),v=JS([[h],p,g]),b=Ce(x,v);let w=p2(b,y,n.shape[o]);const _=Do(v);return w=Ce(w,_),w},indices:()=>i}}};function ZS(s,t){const e=[];for(let n=s;n<t;++n)e.push(n);return e}function JS(s){const t=[];for(let e=0;e<s.length;++e)for(let n=0;n<s[e].length;++n)t.push(s[e][n]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6={kernelName:xh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>Ie(e),b:()=>Ie(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6={kernelName:yh,gradFunc:s=>({x:()=>Lt(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6={kernelName:bh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6={kernelName:vh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:wh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={kernelName:Yp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{alpha:i}=e,r=qs(n,0);return{x:()=>ks(r,s,X(s,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6={kernelName:_h,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,Et(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:Sh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,Lt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:h4,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;return{logits:()=>{const o=fi(n);return Zt(s,X(Yt(s,i,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(s,t,e,n=5,i=1,r=1,o=.5){const a={x:s,y:t,dy:e},l={depthRadius:n,bias:i,alpha:r,beta:o};return Y.runKernel(Ay,a,l)}const Z6=Z({localResponseNormalizationBackprop_:Y6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:nm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{depthRadius:r,bias:o,alpha:a,beta:l}=e;return{x:()=>Z6(n,i,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(s,t,e,n){return t.rank<e.rank&&(t=Q(t,pn(t.shape,n))),s.rank<e.rank&&(s=Q(s,pn(s.shape,n))),{x:()=>X(s,Lt(br(e,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS={kernelName:sm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{reductionIndices:i}=n,r=t[0],o=t[1],a=ge(i,r.shape),l=H2(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:Ch,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>X(s,Lt(Za(e,n),"float32")),b:()=>X(s,Lt(GI(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(s,t,e,n,i,r,o){const a=O(s,"dy","maxPool3dGrad"),l=O(t,"input","maxPool3dGrad"),c=O(e,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=Q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=Q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Q(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),F(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),xs("maxPool3dGrad",r,o);const p={dy:u,input:h,output:d},g={filterSize:n,strides:i,pad:r,dimRoundingMode:o},m=Y.runKernel(Ny,p,g);return f?Q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const eq=Z({maxPool3dGrad_:tq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq={kernelName:rm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=e;return{x:()=>eq(s,n,i,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(s,t,e,n,i,r,o){const a=O(s,"dy","maxPoolGrad"),l=O(t,"input","maxPoolGrad"),c=O(e,"output","maxPoolGrad");F(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),F(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),F(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),xs("maxPoolGrad",r,o);const u={dy:a,input:l,output:c},h={filterSize:n,strides:i,pad:r,dimRoundingMode:o};return Y.runKernel(ky,u,h)}const iq=Z({maxPoolGrad_:sq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq={kernelName:im,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>iq(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq={kernelName:om,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e,r=ge(i,n.shape),a=Pn(n.shape,r)[1],l=ft(a);return{x:()=>{const u=n.shape.slice();r.forEach(f=>{u[f]=1});const h=Q(s,u);return ie(X(h,Lo(n.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq={kernelName:am,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{axis:i}=n,[r,o]=t,a=ge(i,r.shape),l=H2(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lq={kernelName:Th,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>X(s,Lt(kc(e,n),"float32")),b:()=>X(s,Lt(qs(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq={kernelName:lm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>ze(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq={kernelName:Ih,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{const a=En(e.shape,i);return a.length>0?Q(Yt(s,a),e.shape):s},b:()=>{const a=X(s,sn(Om(ie(e,n)))),l=En(n.shape,i);return l.length>0?Q(Yt(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq={kernelName:Eh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{const a=X(s,Lt(n,"float32")),l=En(e.shape,i);return l.length>0?Q(Yt(a,l),e.shape):a},b:()=>{const a=X(s,Lt(e,"float32")),l=En(n.shape,i);return l.length>0?Q(Yt(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq={kernelName:cm,gradFunc:s=>({x:()=>sn(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq={kernelName:dm,inputsToSave:["indices"],gradFunc:(s,t)=>{const e=t[0];return{indices:()=>$n(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq={kernelName:hm,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq={kernelName:fm,saveAllInputs:!0,gradFunc:(s,t,e)=>{const{axis:n}=e;return dc(s,n).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t_={kernelName:pm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>ze(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq={kernelName:Mh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[e,n,i]=t,r=e,o=n,a=de(r.shape,o.shape);return{a:()=>{const u=Lt(o,"float32");let h=X(s,X(u,hc(r,Zt(u,le(1)))));const d=En(r.shape,a);return d.length>0&&(h=Yt(h,d)),Q(h,r.shape)},b:()=>{const u=qs(r,0),h=ks(u,pi(r),Ie(r));let d=X(s,X(i,h));const f=En(o.shape,a);return f.length>0&&(d=Yt(d,f)),Q(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xq={kernelName:mm,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[e,n]=t,i=qs(e,0);return{x:()=>ks(i,s,X(s,n)),alpha:()=>{let r=ks(i,Ie(s),X(s,e));const o=En(n.shape,s.shape);return o.length>0&&(r=Yt(r,o)),Q(r,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(s,t,e){const n=s.shape.slice();n[e]=1;const i=Q(t,n),r=g0(s,e,!0,!1),o=g0(s,e,!0,!0),a=X(r,o);return X(i,a)}function bq(s,t,e){const n=s.shape.length,i=n-e.length,r=rn(e,n);let o=s;r!=null&&(o=Ce(s,r));const a=o.shape.slice(),c=a.splice(n-e.length,e.length).reduce((d,f)=>d*f,1);a.push(c);const u=o.reshape(a);let h=yq(u,t,i);if(h=h.reshape(o.shape),r!=null){const d=Do(r);h=Ce(h,d)}return h}const vq={kernelName:gm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;let r=[];return i==null?r=n.shape.map((o,a)=>a):typeof i=="number"?r=[i]:r=i,{x:()=>bq(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq={kernelName:uh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{const a=ie(s,Lt(n,"float32")),l=En(e.shape,i);return l.length>0?Q(Yt(a,l),e.shape):a},b:()=>{let a=X(s,Lt(e,"float32"));const l=En(n.shape,i);l.length>0&&(a=Q(Yt(a,l),n.shape));const c=Ge(n);return sn(ie(a,Lt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq={kernelName:Ah,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,sn(Ge(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q={kernelName:Nh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=X(kc(e,6),Jh(e));return{x:()=>X(s,Lt(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:kh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,Lt(Jh(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq={kernelName:xm,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Q(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={kernelName:bm,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>Y.runKernel(Oy,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq={kernelName:ym,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>Y.runKernel(Py,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={kernelName:vm,gradFunc:(s,t,e)=>{const{dims:n}=e,i=ge(n,s.shape);return{x:()=>La(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq={kernelName:Rh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:$h,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>sn(ie(s,X(hc(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq={kernelName:wm,inputsToSave:["condition"],gradFunc:(s,t)=>{const[e]=t;return{condition:()=>Lt(Ie(e),"float32"),t:()=>X(s,Lt(e,s.dtype)),e:()=>X(s,Lt(vb(e),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq={kernelName:Dh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=qs(e,le(0)),i=le(Wm),r=le(Gm),o=X(s,r),a=X(X(s,i),fi(Lt(e,"float32")));return ks(n,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q={kernelName:Oh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,X(e,Zt(le(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq={kernelName:Ph,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq={kernelName:Fh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(pb(Lt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq={kernelName:Lh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(zI(Lt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pq={kernelName:Sm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{begin:i,size:r}=e,o=n.shape,[a,l]=Dm(n,i,r),c=[];for(let u=0;u<s.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>_b(s,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:Im,outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{dim:i}=e,r=!0,o=X(s,n);return{logits:()=>Zt(o,X(Yt(o,[i],r),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zq={kernelName:zh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,Ac(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e_={kernelName:Cm,gradFunc:(s,t,e)=>{const{blockShape:n,paddings:i}=e;return{x:()=>db(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n_={kernelName:Tm,gradFunc:(s,t,e)=>{const{axis:n}=e;return{x:()=>Jn(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq={kernelName:Bh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,X(os(Lt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq={kernelName:Wy,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(s,X(Lt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq={kernelName:Uh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=le(2);return{a:()=>X(s,X(i,Zt(e,n))),b:()=>X(s,X(i,Zt(n,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq={kernelName:qh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq={kernelName:Vh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(e.shape,n.shape);return{a:()=>{let a=s;const l=En(e.shape,i);return l.length>0&&(a=Yt(a,l)),Q(a,e.shape)},b:()=>{let a=s;const l=En(n.shape,i);return l.length>0&&(a=Yt(a,l)),Q(sn(a),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq={kernelName:_m,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,i=n.shape.slice(),{axis:r}=e;ge(r,n.shape).forEach(c=>{i[c]=1});const a=Q(s,i),l=X(a,Lo(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq={kernelName:Wh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ie(s,Ge(pb(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq={kernelName:Gh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>X(Zt(le(1),Ge(e)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq={kernelName:Hh,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{reps:i}=e;return{x:()=>{let o=Ie(n);if(n.rank===1)for(let a=0;a<i[0];++a)o=Et(o,ze(s,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)o=Et(o,ze(s,[a*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)o=Et(o,ze(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)for(let u=0;u<i[3];++u)o=Et(o,ze(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2],u*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq={kernelName:Kl,gradFunc:(s,t,e)=>{const n=e,{perm:i}=n,r=Do(i);return{x:()=>Ce(s,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq={kernelName:Em,gradFunc:(s,t,e)=>{const n=e,{axis:i}=n;return{value:()=>Pa(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zq={kernelName:Mm,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Jq(s,e)}}};function Jq(s,t){const e=Fo(t,Ie(t)),n=xb(s,e);let i=Za(t,le(0,"int32"));const r=n.rank-i.rank;for(let a=0;a<r;++a)i=Ss(i,a+1);i=Xr(i,Lo(n.shape,"bool"));const o=Ie(n);return ks(i,n,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq={kernelName:Am,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8=[G2,Z5,J5,Q5,t6,e6,n6,s6,i6,r6,o6,a6,u6,f6,p6,m6,g6,x6,y6,b6,v6,w6,_6,S6,I6,E6,M6,A6,k6,N6,wq,R6,$6,D6,F6,L6,O6,P6,z6,B6,U6,V6,W6,G6,H6,q6,X6,j6,K6,J6,QS,QS,Q6,nq,rq,oq,aq,lq,cq,uq,hq,dq,fq,pq,mq,t_,t_,gq,xq,vq,Sq,_q,Cq,Tq,Iq,Eq,Mq,Aq,kq,Nq,Rq,$q,Dq,Fq,Lq,Pq,Oq,zq,e_,e_,n_,n_,Bq,Vq,Uq,Wq,Gq,Hq,qq,Xq,jq,Kq,Yq,Zq,Qq];for(const s of t8)p4(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.abs=function(){return this.throwIfDisposed(),Nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acos=function(){return this.throwIfDisposed(),BU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acosh=function(){return this.throwIfDisposed(),VU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.add=function(s){return this.throwIfDisposed(),Et(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.all=function(s,t){return this.throwIfDisposed(),FI(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.any=function(s,t){return this.throwIfDisposed(),p0(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMax=function(s){return this.throwIfDisposed(),Du(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMin=function(s){return this.throwIfDisposed(),XU(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asScalar=function(){return this.throwIfDisposed(),F(this.size===1,()=>"The array must have only 1 element."),Q(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asType=function(s){return this.throwIfDisposed(),Lt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as1D=function(){return this.throwIfDisposed(),Q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as2D=function(s,t){return this.throwIfDisposed(),Q(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as3D=function(s,t,e){return this.throwIfDisposed(),Q(this,[s,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as4D=function(s,t,e,n){return this.throwIfDisposed(),Q(this,[s,t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as5D=function(s,t,e,n,i){return this.throwIfDisposed(),Q(this,[s,t,e,n,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asin=function(){return this.throwIfDisposed(),KU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asinh=function(){return this.throwIfDisposed(),ZU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan=function(){return this.throwIfDisposed(),QU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan2=function(s){return this.throwIfDisposed(),eV(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atanh=function(){return this.throwIfDisposed(),sV(this)};dt().prototype.avgPool=function(s,t,e,n){return this.throwIfDisposed(),ub(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),db(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchNorm=function(s,t,e,n,i){return this.throwIfDisposed(),Fm(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.broadcastTo=function(s){return this.throwIfDisposed(),bu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cast=function(s){return this.throwIfDisposed(),Lt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ceil=function(){return this.throwIfDisposed(),AV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),Gs(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof xn&&(s=[s]),Jn([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv1d=function(s,t,e,n,i,r){return this.throwIfDisposed(),LI(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2dTranspose=function(s,t,e,n,i){return this.throwIfDisposed(),PI(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),Da(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cos=function(){return this.throwIfDisposed(),pb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cosh=function(){return this.throwIfDisposed(),zI(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumprod=function(s,t,e){return this.throwIfDisposed(),g0(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumsum=function(s,t,e){return this.throwIfDisposed(),BI(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),tW(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthwiseConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),mb(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dilation2d=function(s,t,e,n,i){return this.throwIfDisposed(),sW(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.divNoNan=function(s){return this.throwIfDisposed(),lW(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.div=function(s){return this.throwIfDisposed(),ie(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dot=function(s){return this.throwIfDisposed(),uW(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.elu=function(){return this.throwIfDisposed(),Lm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.equal=function(s){return this.throwIfDisposed(),br(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.erf=function(){return this.throwIfDisposed(),fW(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.euclideanNorm=function(s,t){return this.throwIfDisposed(),SW(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.exp=function(){return this.throwIfDisposed(),fi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expandDims=function(s){return this.throwIfDisposed(),Ss(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expm1=function(){return this.throwIfDisposed(),IW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.fft=function(){return this.throwIfDisposed(),u2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.flatten=function(){return this.throwIfDisposed(),Q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floor=function(){return this.throwIfDisposed(),Om(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floorDiv=function(s){return this.throwIfDisposed(),DI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.gather=function(s,t){return this.throwIfDisposed(),xb(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greaterEqual=function(s){return this.throwIfDisposed(),Za(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greater=function(s){return this.throwIfDisposed(),qs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ifft=function(){return this.throwIfDisposed(),y0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.irfft=function(){return this.throwIfDisposed(),rH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isFinite=function(){return this.throwIfDisposed(),DW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isInf=function(){return this.throwIfDisposed(),LW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isNaN=function(){return this.throwIfDisposed(),OW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.leakyRelu=function(s){return this.throwIfDisposed(),yb(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.lessEqual=function(s){return this.throwIfDisposed(),kc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.less=function(s){return this.throwIfDisposed(),GI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.localResponseNormalization=function(s,t,e,n){return this.throwIfDisposed(),WW(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSigmoid=function(){return this.throwIfDisposed(),KW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSoftmax=function(s){return this.throwIfDisposed(),HI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),qI(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log=function(){return this.throwIfDisposed(),pi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log1p=function(){return this.throwIfDisposed(),bb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalAnd=function(s){return this.throwIfDisposed(),Xr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalNot=function(){return this.throwIfDisposed(),vb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalOr=function(s){return this.throwIfDisposed(),XI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalXor=function(s){return this.throwIfDisposed(),sG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.matMul=function(s,t,e){return this.throwIfDisposed(),ke(this,s,t,e)};dt().prototype.maxPool=function(s,t,e,n){return this.throwIfDisposed(),wb(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.max=function(s,t){return this.throwIfDisposed(),Oi(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.maximum=function(s){return this.throwIfDisposed(),Fo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mean=function(s,t){return this.throwIfDisposed(),dn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.min=function(s,t){return this.throwIfDisposed(),Yf(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.minimum=function(s){return this.throwIfDisposed(),zm(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),hG(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mod=function(s){return this.throwIfDisposed(),fG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mul=function(s){return this.throwIfDisposed(),X(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.neg=function(){return this.throwIfDisposed(),sn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.norm=function(s,t,e){return this.throwIfDisposed(),Pm(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.notEqual=function(s){return this.throwIfDisposed(),Fu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.oneHot=function(s,t=1,e=0){return this.throwIfDisposed(),_I(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.onesLike=function(){return this.throwIfDisposed(),mi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pad=function(s,t){return this.throwIfDisposed(),_b(this,s,t)};dt().prototype.pool=function(s,t,e,n,i,r){return this.throwIfDisposed(),SG(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pow=function(s){return this.throwIfDisposed(),hc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prelu=function(s){return this.throwIfDisposed(),Tb(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prod=function(s,t){return this.throwIfDisposed(),TG(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reciprocal=function(){return this.throwIfDisposed(),zG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu=function(){return this.throwIfDisposed(),Jr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu6=function(){return this.throwIfDisposed(),n2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshapeAs=function(s){return this.throwIfDisposed(),Q(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshape=function(s){return this.throwIfDisposed(),Q(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeBilinear=function(s,t,e){return this.throwIfDisposed(),x2(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeNearestNeighbor=function(s,t,e){return this.throwIfDisposed(),y2(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reverse=function(s){return this.throwIfDisposed(),La(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rfft=function(){return this.throwIfDisposed(),h2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.round=function(){return this.throwIfDisposed(),s2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rsqrt=function(){return this.throwIfDisposed(),i2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.selu=function(){return this.throwIfDisposed(),r2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.separableConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),o2(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sigmoid=function(){return this.throwIfDisposed(),Ac(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sign=function(){return this.throwIfDisposed(),jG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sin=function(){return this.throwIfDisposed(),a2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sinh=function(){return this.throwIfDisposed(),l2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.slice=function(s,t){return this.throwIfDisposed(),ze(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softmax=function(s){return this.throwIfDisposed(),Ab(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softplus=function(){return this.throwIfDisposed(),Yh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),Cb(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.split=function(s,t){return this.throwIfDisposed(),Ws(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sqrt=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.square=function(){return this.throwIfDisposed(),Ge(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squaredDifference=function(s){return this.throwIfDisposed(),d2(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squeeze=function(s){return this.throwIfDisposed(),Zh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stack=function(s,t){this.throwIfDisposed();const e=s instanceof xn?[this,s]:[this,...s];return Pa(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.step=function(s){return this.throwIfDisposed(),Jh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stridedSlice=function(s,t,e,n,i,r,o,a){return this.throwIfDisposed(),fH(this,s,t,e,n,i,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sub=function(s){return this.throwIfDisposed(),Zt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sum=function(s,t){return this.throwIfDisposed(),Yt(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tan=function(){return this.throwIfDisposed(),mH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tanh=function(){return this.throwIfDisposed(),hb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tile=function(s){return this.throwIfDisposed(),Di(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toBool=function(){return this.throwIfDisposed(),Lt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toFloat=function(){return this.throwIfDisposed(),Lt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toInt=function(){return this.throwIfDisposed(),Lt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.topk=function(s,t){return this.throwIfDisposed(),xH(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.transpose=function(s){return this.throwIfDisposed(),Ce(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unique=function(s){return this.throwIfDisposed(),vH(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),p2(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unstack=function(s){return this.throwIfDisposed(),dc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.where=function(s,t){return this.throwIfDisposed(),ks(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.zerosLike=function(){return this.throwIfDisposed(),Ie(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class or extends Error{constructor(t){super(t),Object.setPrototypeOf(this,or.prototype)}}class ui extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ui.prototype)}}class j extends Error{constructor(t){super(t),Object.setPrototypeOf(this,j.prototype)}}class fe extends Error{constructor(t){super(t),Object.setPrototypeOf(this,fe.prototype)}}class uv extends Error{constructor(t){super(t),Object.setPrototypeOf(this,uv.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q2{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function za(s,t){if(Array.isArray(s)){let e=[];for(let n=0;n<t;n++)e=e.concat(s);return e}else{const e=new Array(t);return e.fill(s),e}}function ar(s,t){if(!s)throw new uv(t)}function s_(s,t){let e=0;for(const n of s)n===t&&e++;return e}function fs(s){return s.length===1?s[0]:s}function Xe(s){return Array.isArray(s)?s:[s]}function zr(s){const e=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function ia(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Zs={};function hv(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function v0(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>v0(t));else{const t=Object.keys(s);for(const e of t){const n=s[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?s[e]=n.value:v0(n))}}}function nd(s,t={},e={},n="object",i=!1){if(typeof s=="string"){const r=s;let o;if(r in e)o=e[r];else if(r in Zs)o=Zs[r];else if(o=t[r],o==null)throw new j(`Unknown ${n}: ${s}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const r=s;if(r.className==null||r.config==null)throw new j(`${n}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const o=r.className;let a,l;if(o in e?[a,l]=e[o]:o in Zs?[a,l]=Zs.className:o in t&&([a,l]=t[o]),a==null)throw new j(`Unknown ${n}: ${o}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(Zs))c[f]=Zs[f];for(const f of Object.keys(e))c[f]=e[f];const u=r.config;u.customObjects=c;const h=Object.assign({},Zs);for(const f of Object.keys(e))Zs[f]=e[f];v0(r.config);const d=l(a,r.config,e,i);return Zs=Object.assign({},h),d}else{const c=Object.assign({},Zs);for(const h of Object.keys(e))Zs[h]=e[h];const u=new a(r.config);return Zs=Object.assign({},c),u}}}function e8(s,t){return s<t?-1:s>t?1:0}function uf(s,t){return-1*e8(s,t)}function vo(s){if(s==null)return s;const t=[];for(const e of s)t.indexOf(e)===-1&&t.push(e);return t}function n8(s){if(s==null)throw new j(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function Qa(s,t,e){if(e!=null&&s.indexOf(e)<0)throw new j(`${e} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function dv(s,t,e=0,n=1/0){return ar(e>=0),ar(n>=e),Array.isArray(s)&&s.length>=e&&s.length<=n&&s.every(i=>typeof i===t)}function Dn(s,t){Array.isArray(s)?(F(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((e,n)=>Dn(e,`element ${n+1} of ${t}`))):F(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${X2(s)}.`)}function X2(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>X2(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function s8(s,t,e){let n=e!=null?e():ds(),i;return(...o)=>{const a=e!=null?e():ds();return a-n<t||(n=a,i=s(...o)),i}}function j2(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let i8=0;function K2(){return i8++}const hf={};function Hm(s=""){return s in hf||(hf[s]=0),hf[s]+=1,s+hf[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const r8=["channelsFirst","channelsLast"],o8=["nearest","bilinear"],a8=["valid","same","causal"],l8=["max","avg"],c8=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Al=new Map;function gn(s){Qa(r8,"DataFormat",s)}function u8(s){Qa(o8,"InterpolationFormat",s)}function Xs(s){Qa(a8,"PaddingMode",s)}function Y2(s){Qa(l8,"PoolMode",s)}const vu=[],i_="/";function ba(s,t){vu.push(s);try{const e=t();return vu.pop(),e}catch(e){throw vu.pop(),e}}function h8(){return vu.length===0?"":vu.join(i_)+i_}function Z2(s){if(!Q2(s))throw new Error("Not a valid tensor name: '"+s+"'");return h8()+s}function J2(s){if(!Q2(s))throw new Error("Not a valid tensor name: '"+s+"'");Al.has(s)||Al.set(s,0);const t=Al.get(s);if(Al.set(s,Al.get(s)+1),t>0){const e=`${s}_${t}`;return Al.set(e,1),e}else return s}const d8=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Q2(s){return!!s.match(d8)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f8(s){return s===parseInt(s.toString(),10)}function wo(s,t,e){t==null&&(t=0),e==null&&(e=s.length);let n=1;for(let i=t;i<e;++i)n*=s[i];return n}function fc(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n<t&&(t=n)}return t}function To(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n>t&&(t=n)}return t}function Vi(s,t){if(t<s)throw new j(`end (${t}) < begin (${s}) is forbidden.`);const e=[];for(let n=s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let gx;function _n(){return gx==null&&(gx=_U().epsilon()),gx}function Wi(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tl(s,t){return Lt(s,t)}function sd(s,t=-1){const e=s.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),Q(s,e)}function p8(s,t){return rt(()=>{if(s.shape.length!==2)throw new j(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const e=sd(s,1);return w0(e,[1,t,1])})}function m8(s){const t=[wo(s.shape)];return Q(s,t)}function g8(s){if(s.rank<=1)throw new j(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],wo(s.shape,1)];return Q(s,t)}function va(s,t,e){return rt(()=>{switch(s.rank){case 1:return Eb(s,t,e);case 2:return c2(s,[t,0],[e,s.shape[1]]);case 3:return Mb(s,[t,0,0],[e,s.shape[1],s.shape[2]]);case 4:return Jf(s,[t,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3]]);case 5:return ze(s,[t,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return ze(s,[t,0,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new j(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function xx(s,t,e){return rt(()=>{switch(s.rank){case 1:return Eb(s,t,e);case 2:return c2(s,[0,t],[s.shape[0],e]);case 3:return Mb(s,[0,0,t],[s.shape[0],s.shape[1],e]);case 4:return Jf(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],e]);default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function df(s,t,e,n){return rt(()=>{switch(s.rank){case 1:return Eb(s,t,e);case 2:switch(n){case 1:return va(s,t,e);case 2:return xx(s,t,e);default:throw new j(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return va(s,t,e);case 2:return Mb(s,[0,t,0],[s.shape[0],e,s.shape[2]]);case 3:return xx(s,t,e);default:throw new j(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return va(s,t,e);case 2:return Jf(s,[0,t,0,0],[s.shape[0],e,s.shape[2],s.shape[3]]);case 3:return Jf(s,[0,0,t,0],[s.shape[0],s.shape[1],e,s.shape[3]]);case 4:return xx(s,t,e);default:throw new j(`The axis is not within the rank of the tensor ${n}`)}default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function fv(s,t=-1){let e;return t<0&&(e=s[0].rank,e!==0?t=e:t=0),t===s[0].rank&&(t=-1),Jn(s,t)}function r_(s,t){switch(s.rank){case 1:return RV([s,t]);case 2:return DV([s,t],0);case 3:return LV([s,t],0);case 4:return OV([s,t],0);default:throw new j(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function w0(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new j(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return Di(s,t)}function qm(s,t=0,e=1,n,i){return x0(s,t,e,n,i)}function pr(s,t,e,n){if(s.rank<2||t.rank<2)throw new fe(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const i=s.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(i!==r)throw new fe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return qS({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?S0(s.rank,n,Wi()):null,activation:e});{const i=s.shape.slice(),r=i.pop();s=Q(s,[-1,r]);const o=t.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:t.rank},(p,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=Q(Ce(t,u),[l,-1]);const h=[...i,...c];return Q(qS({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?S0(s.rank,n,Wi()):null,activation:e}),h)}}function tE(s,t,e){return rt(()=>(Array.isArray(t)?t=Is(t,"int32"):t=Lt(t,"int32"),xb(s,t,e)))}function id(s){return X(s,s)}function S0(s,t,e){const n=t.shape;if(t.rank!==1&&t.rank!==s)throw new j(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1,1,1]):Q(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,1,1,n[0]]):Q(t,[1].concat(n))}else if(s===4){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1,1]):Q(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,1,n[0]]):Q(t,[1].concat(n))}else if(s===3){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1]):Q(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,n[0]]):Q(t,[1].concat(n))}else if(s<3)return t;throw new j(`Unsupported input rank by biasAdd: ${t.rank}`)}function ji(s,t,e){return rt(()=>(e==null&&(e=Wi()),gn(e),Et(s,S0(s.rank,t,e))))}function x8(s,t=1){if(t!==1)throw new fe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Lm(s)}function y8(s){return rt(()=>ie(s,Et(Nn(s),1)))}function eE(s,t,e,n){return rt(()=>IH(s,t,e,n))}function b8(s){return rt(()=>{const t=Et(.5,X(.2,s));return Gs(t,0,1)})}function rd(s,t,e=!1){return e?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const v8=["fanIn","fanOut","fanAvg"],w8=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function S8(s){Qa(v8,"FanMode",s)}function _8(s){Qa(w8,"Distribution",s)}class vi extends Mc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class nE extends vi{apply(t,e){return $n(t,e)}}nE.className="Zeros";_t(nE);class pv extends vi{apply(t,e){return Lo(t,e)}}pv.className="Ones";_t(pv);class sE extends vi{constructor(t){if(super(),typeof t!="object")throw new j(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new j(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return rt(()=>X(le(this.value),Lo(t,e)))}getConfig(){return{value:this.value}}}sE.className="Constant";_t(sE);class iE extends vi{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Bm(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}iE.className="RandomUniform";_t(iE);class rE extends vi{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new fe(`randomNormal does not support dType ${e}.`);return qm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}rE.className="RandomNormal";_t(rE);class oE extends vi{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new fe(`truncatedNormal does not support dType ${e}.`);return f2(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}oE.className="TruncatedNormal";_t(oE);class aE extends vi{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return rt(()=>{if(t.length!==2||t[0]!==t[1])throw new j("Identity matrix initializer can only be used for 2D square matrices.");return X(this.gain,WI(t[0]))})}getConfig(){return{gain:this.gain}}}aE.className="Identity";_t(aE);function C8(s,t="channelsLast"){let e,n;if(gn(t),s.length===2)e=s[0],n=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const i=wo(s,2);e=s[1]*i,n=s[0]*i}else if(t==="channelsLast"){const i=wo(s,0,s.length-2);e=s[s.length-2]*i,n=s[s.length-1]*i}}else{const i=wo(s);e=Math.sqrt(i),n=Math.sqrt(i)}return[e,n]}class Ns extends vi{constructor(t){if(super(),t.scale<0)throw new j(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,S8(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,_8(this.distribution),this.seed=t.seed}apply(t,e){const n=C8(t),i=n[0],r=n[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,i):this.mode==="fanOut"?o/=Math.max(1,r):o/=Math.max(1,(i+r)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new fe(`${this.getClassName()} does not support dType ${e}.`);return f2(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*o);return Bm(t,-a,a,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ns.className="VarianceScaling";_t(Ns);class mv extends Ns{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ns.className}}mv.className="GlorotUniform";_t(mv);class gv extends Ns{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ns.className}}gv.className="GlorotNormal";_t(gv);class xv extends Ns{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ns.className}}xv.className="HeNormal";_t(xv);class yv extends Ns{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ns.className}}yv.className="HeUniform";_t(yv);class bv extends Ns{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ns.className}}bv.className="LeCunNormal";_t(bv);class vv extends Ns{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ns.className}}vv.className="LeCunNormal";_t(vv);class lE extends vi{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new fe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return rt(()=>{if(t.length<2)throw new fe("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const n=t[0]>t[1]?[t[1],t[0]]:t,i=qm(n,0,1,"float32");let r=H5.gramSchmidt(i);return t[0]>t[1]&&(r=Ce(r)),X(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}lE.className="Orthogonal";_t(lE);const o_={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function a_(s,t={}){return nd(s,ri.getMap().classNameMap,t,"initializer")}function nn(s){return hv(s)}function Qe(s){if(typeof s=="string"){const t=s in o_?o_[s]:s;if(t==="GlorotNormal")return new gv;if(t==="GlorotUniform")return new mv;if(t==="HeNormal")return new xv;if(t==="HeUniform")return new yv;if(t==="LeCunNormal")return new bv;if(t==="LeCunUniform")return new vv;{const e={};return e.className=t,e.config={},a_(e)}}else return s instanceof vi?s:a_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _0(s){return Array.isArray(s)&&Array.isArray(s[0])}function Qf(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function ue(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new j(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Re(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new j(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tp(s){let t=0;for(const e of s)e.shape.length===0?t+=1:t+=e.shape.reduce((n,i)=>n*i);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const l_="Variable";class T8{constructor(t,e="float32",n=l_,i=!0,r=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=K2(),n=n==null?l_:n,this.originalName=Z2(n),this.name=J2(this.originalName),this.trainable_=i,this.constraint=r,this.val=_H(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),I8(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function I8(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function C0(s){return s.map(t=>t.read())}function wv(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ur{constructor(t,e,n,i,r,o,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=i,this.callArgs=r,this.outputTensorIndex=a,this.id=K2(),o!=null&&(this.originalName=Z2(o),this.name=J2(this.originalName)),this.rank=e.length}}let E8=0;class Xm{constructor(t,e){this.callArgs=e,this.id=E8++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)n!=null&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let M8=0;class Se extends Mc{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=M8++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const n=this.getClassName();e=zr(n)+"_"+Hm(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),n=[r].concat(t.inputShape)}this.batchInputShape=n;let i=t.dtype;i==null&&(i=t.inputDType),i==null&&(i="float32"),this.dtype=i}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new ui(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new j(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return fs(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return fs(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new or(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new or(`Layer ${this.name} is not connected, no input to return.`);return fs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new or(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new or(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return fs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Xe(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=Xe(this.inputSpec);if(t.length!==e.length)throw new j(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const i=t[n],r=e[n];if(r==null)continue;const o=i.rank;if(r.ndim!=null&&o!==r.ndim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${o}`);if(r.maxNDim!=null&&o>r.maxNDim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${o}`);if(r.minNDim!=null&&o<r.minNDim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${o}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new j(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const a=i.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(r.shape!=null)for(let a=0;a<r.shape.length;++a){const l=r.shape[a],c=i.shape[a];if(l!=null&&c!=null&&l!==c)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Xe(t);let i=!0;for(const o of n)if(!(o instanceof ur)){i=!1;break}let r=!0;for(const o of n)if(o instanceof ur){r=!1;break}if(i===r)throw new j("Arguments to apply() must be all SymbolicTensors or all Tensors");return ba(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of Xe(t))o.push(a.shape);this.build(fs(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let o=this.call(t,e);const a=Xe(o),l=[];for(let c of a)n.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=fs(l),this.activityRegularizer!=null)throw new fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=A8(t),a=this.computeOutputShape(o);let l;const c=k8(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new ur(c,u,this,Xe(t),e,this.name,h)):l=new ur(c,a,this,Xe(t),e,this.name),this.addInboundNode(t,l,null,null,o,a,e),this._refCount++,this.activityRegularizer!=null)throw new fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,i)=>{n!=null&&t[i]!=null&&t[i]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new or(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new or(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ui(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return C0(t?this.trainableWeights:this.weights)}setWeights(t){rt(()=>{const e=this.weights;if(e.length!==t.length)throw new j(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const n=[],i=C0(e);for(let r=0;r<i.length;++r){const o=i[r],a=e[r],l=t[r];if(!Ne(o.shape,l.shape))throw new j(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);n.push([a,l])}wv(n)})}addWeight(t,e,n,i,r,o,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new j(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():Qe("zeros"));const c=i.apply(e,n),u=new T8(c,n,t,o,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Xe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,n,i,r,o,a=null){const l=Xe(t);e=Xe(e),n=Xe(n),i=Xe(i),r=Qf(r),o=Qf(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new Xm({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:n,outputMasks:i,inputShapes:r,outputShapes:o},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function A8(s){s=Xe(s);const t=[];for(const e of s)t.push(e.shape);return fs(t)}function k8(s){return"float32"}function cE(s,t,e){if((t==null||e!=null&&e>0)&&(t=s.sourceLayer,e=s.nodeIndex),t.inboundNodes.length===0)return[s];{const n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{const i=[];for(let r=0;r<n.inboundLayers.length;r++){const o=n.inputTensors[r],a=n.inboundLayers[r],l=n.nodeIndices[r],c=cE(o,a,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class od extends Se{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Hm("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new j("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new j("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new j("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const i=new ur(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new Xm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new j(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}od.className="InputLayer";_t(od);function N8(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new j("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let e=s.dtype;return e==null&&(e="float32"),new od({batchInputShape:t,name:s.name,dtype:e,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R8(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return Lt(t,s.dtype)}catch{throw new j(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class fo{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof fo)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=R8(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new j(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ur){if(this.id2Value[t.id]==null)throw new j(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new j(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof ur){if(this.id2Value[t.id]==null)throw new j(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new j(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&ve(this.id2Mask)}}const ep=new q2,np=new q2;function $8(s){ep!=null&&ep.setMaxEntries(s),np!=null&&np.setMaxEntries(s)}function lu(s,t,e,n){const i=e==null?!1:e.training,r=Array.isArray(s),o=r?s:[s],a=o.map(p=>p.name),l=[],c=t.names();for(const p of a)c.indexOf(p)!==-1?l.push(t.getValue(p)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let h=ep.get(u),d;if(h==null){const p=D8(o,t);h=p.sorted,d=p.recipientCounts,ep.put(u,h),np.put(u,d)}d={},i||Object.assign(d,np.get(u));const f=new fo(t);for(let p=0;p<h.length;++p){if(n!=null){const T=Xf().numTensors;T>n.maxNumTensors&&(n.maxNumTensors=T),T<n.minNumTensors&&(n.minNumTensors=T)}const g=h[p],m=g.sourceLayer;if(m instanceof od)continue;const x=[],y=[],v=[];let b=!1;for(const T of g.inputs){const I=f.getValue(T),M=f.getMask(T);x.push(I),y.push(M),M!=null&&(b=!0),i||(d[T.name]--,d[T.name]===0&&!t.hasKey(T)&&a.indexOf(T.name)===-1&&!I.isDisposed&&T.sourceLayer.stateful!==!0&&v.push(I))}b&&(e=e||{},e.mask=y[0]);const w=Xe(m.apply(x,e));let _=null;m.supportsMasking&&(_=m.computeMask(x,y));const C=L8(g),S=Array.isArray(C)?C:[C];for(let T=0;T<S.length;++T){f.hasKey(S[T])||f.add(S[T],w[T],Array.isArray(_)?_[0]:_);const I=a.indexOf(S[T].name);I!==-1&&(l[I]=w[T])}i||ve(v)}return f.disposeMasks(),r?l:l[0]}function D8(s,t){F(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(s.length===1){const i=c_(s[0],t);e=i.sorted,n=i.recipientMap}else{const i=new Set;for(const r of s){const{sorted:o,recipientMap:a}=c_(r,t);for(const l of o)i.has(l.name)||(e.push(l),i.add(l.name));for(const l in a)n[l]==null&&(n[l]=new Set),a[l].forEach(c=>n[l].add(c))}}return{sorted:e,recipientCounts:F8(n)}}function F8(s){const t={};for(const e in s)t[e]=s[e].size;return t}function c_(s,t){const e=new Set,n=[],i={};for(const a of t.names())e.add(a);const r=[],o=[];for(r.push(s);r.length>0;){const a=r[r.length-1];if(e.has(a.name)){r.pop();continue}const l=o[o.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),n.push(a),e.add(a.name),l&&o.pop();else{o.push(r.length-1);for(const c of a.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(a.name),!e.has(c.name)&&r.push(c)}}return{sorted:n,recipientMap:i}}function L8(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let e=null;for(let n=0;n<s.sourceLayer.inboundNodes.length;++n)for(const i of s.sourceLayer.inboundNodes[n].outputTensors)if(i.id===s.id){e=n;break}t=s.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=lt();P8.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,$8);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sv(s,t){return rt(()=>os(Yt(X(s,s),t,!0)))}class ad extends Mc{getConfig(){return{}}}class uE extends ad{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return rt(()=>{const e=Sv(t,this.axis),n=Gs(e,0,this.maxValue);return X(t,ie(n,Et(_n(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}uE.className="MaxNorm";_t(uE);class hE extends ad{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return rt(()=>ie(t,Et(_n(),Sv(t,this.axis))))}getConfig(){return{axis:this.axis}}}hE.className="UnitNorm";_t(hE);class dE extends ad{apply(t){return Jr(t)}}dE.className="NonNeg";_t(dE);class fE extends ad{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return rt(()=>{const e=Sv(t,this.axis),n=Et(X(this.rate,Gs(e,this.minValue,this.maxValue)),X(1-this.rate,e));return X(t,ie(n,Et(_n(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}fE.className="MinMaxNorm";_t(fE);const u_={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Tn(s){return hv(s)}function h_(s,t={}){return nd(s,ri.getMap().classNameMap,t,"constraint")}function In(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in u_?u_[s]:s,config:{}};return h_(e)}else return s instanceof ad?s:h_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Zo(s){if(s==null)return;const t=[],e=[],n=[];for(const i in s){const r=s[i];if(typeof r!="number"){const o=r;t.push(o.data()),e.push(i),n.push(o)}}if(t.length>0){const i=await Promise.all(t);for(let r=0;r<i.length;++r)s[e[r]]=i[r][0];ve(n)}}function pE(s){if(s!=null)for(const t in s){const e=s[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var d_;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(d_||(d_={}));const O8=125;class Lu{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class z8{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class B8 extends Lu{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const n=e.size==null?0:e.size;this.seen+=n;for(const i in e){const r=e[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*n;else{let o;i in this.totals?o=this.totals[i]:this.totals[i]=0;const a=rt(()=>Et(this.totals[i],X(r,n)));this.totals[i]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:rt(()=>{const i=X(ie(1,this.seen),this.totals[n]);e[n]=i,this.totals[n].dispose(),yr(e[n])}))}}class U8 extends Lu{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const o=this.history[r];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];t.push(l.data()),e.push(r),n.push(a)}}const i=await Promise.all(t);for(let r=0;r<i.length;++r)this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=i[r][0]}}class V8 extends Lu{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||b2,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=O8),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Zx(this.yieldEvery)&&(this.maybeWait=s8(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const i=[];this.yield!=null&&(await Zo(n),i.push(this.yield(t,e,n))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Zo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];this.epochEnd!=null&&(await Zo(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Zo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];this.batchEnd!=null&&(await Zo(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):Zx(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){this.trainBegin!=null&&(await Zo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Zo(t),await this.trainEnd(t))}}function mE(s,t){return s==null&&(s={}),s instanceof Lu?[s]:Array.isArray(s)&&s[0]instanceof Lu?s:Xe(s).map(n=>new V8(n,t))}class Qs{constructor(){}static registerCallbackConstructor(t,e){F(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Qs.checkForDuplicate(e),Qs.constructors[t]==null&&(Qs.constructors[t]=[]),Qs.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Qs.constructors)Qs.constructors[+e].forEach(i=>{if(i===t)throw new j("Duplicate callback constructor.")})}static clear(){Qs.constructors={}}static createCallbacks(t){const e=[];for(const n in Qs.constructors){const i=+n;t>=i&&e.push(...Qs.constructors[i])}return e.map(n=>new n)}}Qs.constructors={};function gE(s,t,e,n,i,r,o,a,l){const c=new U8,u=[new B8,...Qs.createCallbacks(t)];s!=null&&u.push(...s),u.push(c);const h=new z8(u);return h.setParams({epochs:e,initialEpoch:n,samples:i,steps:r,batchSize:o,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hr(s,t={},e=!1){return nd(s,ri.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sp(s,t){return rt(()=>{s.dtype!=="float32"&&(s=Lt(s,"float32"));const e=Yt(id(s),t,!0),n=Kh(e.shape,_n()),i=os(Fo(e,n));return ie(s,i)})}function jm(s,t){return rt(()=>dn(id(Zt(t,s)),-1))}function _v(s,t){return rt(()=>dn(Nn(Zt(t,s)),-1))}function Cv(s,t){return rt(()=>{const e=Zt(s,t),n=Gs(Nn(s),_n(),Number.MAX_VALUE),i=Nn(ie(e,n));return X(100,dn(i,-1))})}function W8(s,t){return rt(()=>{const e=Gs(t,_n(),Number.MAX_VALUE),n=pi(Et(1,e)),i=Gs(s,_n(),Number.MAX_VALUE),r=pi(Et(1,i));return dn(id(Zt(n,r)),-1)})}function G8(s,t){return rt(()=>{const e=Fo(0,Zt(1,X(s,t)));return dn(id(e),-1)})}function H8(s,t){return rt(()=>{const e=Fo(0,Zt(1,X(s,t)));return dn(e,-1)})}function q8(s,t){return rt(()=>{const e=Yt(X(s,t),-1),n=Oi(X(Zt(1,s),t),-1);return Fo(0,Et(1,Zt(n,e)))})}function X8(s,t){return rt(()=>{const e=Math.log(2),n=Zt(t,s),i=Zt(Et(n,Yh(X(-2,n))),e);return dn(i,-1)})}function Pu(s,t,e=!1){return rt(()=>{if(e)t=Ab(t);else{const n=Yt(t,t.shape.length-1,!0);t=ie(t,n)}return t=Gs(t,_n(),1-_n()),sn(Yt(X(Lt(s,"float32"),pi(t)),t.shape.length-1))})}function ip(s,t,e=!1){return rt(()=>{const n=Lt(Om(m8(s)),"int32");t=Gs(t,_n(),1-_n());const i=t.shape,r=Q(_I(n,i[i.length-1]),i);return Pu(r,t,e)})}function j8(s,t){if(!Ne(s.shape,t.shape))throw new j(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return rt(()=>{const e=Jr(t),n=sn(Nn(t));return Et(Zt(e,X(t,s)),bb(fi(n)))})}function Km(s,t){return rt(()=>{let e;return e=Gs(t,_n(),1-_n()),e=pi(ie(e,Zt(1,e))),dn(j8(s,e),-1)})}function K8(s,t){return rt(()=>{const e=Gs(s,_n(),1),n=Gs(t,_n(),1);return Yt(X(s,pi(ie(e,n))),-1)})}function Y8(s,t){return rt(()=>{const e=pi(Et(_n(),t));return dn(Zt(t,X(s,e)),-1)})}function xE(s,t){return rt(()=>{const e=sp(s,-1),n=sp(t,-1),i=X(e,n);return sn(Yt(i,-1))})}const rp={meanSquaredError:jm,meanAbsoluteError:_v,meanAbsolutePercentageError:Cv,meanSquaredLogarithmicError:W8,squaredHinge:G8,hinge:H8,categoricalHinge:q8,logcosh:X8,categoricalCrossentropy:Pu,sparseCategoricalCrossentropy:ip,binaryCrossentropy:Km,kullbackLeiblerDivergence:K8,poisson:Y8,cosineProximity:xE};function yx(s){if(typeof s=="string"){if(s in rp)return rp[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new j(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yE(s,t){return rt(()=>{const e=X(.5,mi(t)),n=tl(qs(t,e),s.dtype);return dn(br(s,n),-1)})}function bE(s,t){return rt(()=>tl(br(Du(s,-1),Du(t,-1)),"float32"))}function Z8(s,t){return rt(()=>Lt(Yt(Xr(br(s,1),br(t,1))),"float32"))}function J8(s,t){return rt(()=>Lt(Yt(Xr(br(s,0),br(t,1))),"float32"))}function Q8(s,t){return rt(()=>{const e=Z8(s,t),n=J8(s,t),i=Et(e,n);return Lt(ks(qs(i,0),ie(e,i),0),"float32")})}function tX(s,t){return Km(s,t)}function eX(s,t){return s.rank===t.rank&&(s=Zh(s,[s.rank-1])),t=Du(t,-1),t.dtype!==s.dtype&&(t=Lt(t,s.dtype)),Lt(br(s,t),"float32")}const nX=jm,sX=jm,iX=_v,rX=_v,oX=Cv,aX=Cv,vE=Pu,lX=xE,wE=ip,op={binaryAccuracy:yE,categoricalAccuracy:bE,precision:Q8,categoricalCrossentropy:vE,sparseCategoricalCrossentropy:wE,mse:nX,MSE:sX,mae:iX,MAE:rX,mape:oX,MAPE:aX,cosine:lX};function cX(s){if(typeof s=="string"&&s in op)return op[s];if(typeof s!="string"&&s!=null)return s;throw new j(`Unknown metric ${s}`)}function ff(s){if(ar(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const e of Object.keys(rp))if(rp[e]===s){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(op))if(op[e]===s){t=e;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uX(s){const t={Adagrad:()=>Ml.adagrad(.01),Adadelta:()=>Ml.adadelta(1,.95,_n()),Adam:()=>Ml.adam(.001,.9,.999,_n()),Adamax:()=>Ml.adamax(.002,.9,.999,_n(),0),RMSProp:()=>Ml.rmsprop(.001,.9,0,_n()),SGD:()=>Ml.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new j(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const f_=1*1024*1024;function p_(s,t,e=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!T0(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const n=JSON.stringify(s);n.length>f_&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${f_}.`)}}function T0(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const e of t)if(typeof e!="string"||!T0(s[e]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!T0(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hX(s,t,e,n=console.log){const i=fX(s),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let o;if(!i){r.push("Receives inputs"),o=[];for(const u in s.nodesByDepth)o.push(...s.nodesByDepth[u])}n("_".repeat(t)),ap(r,e,n),n("=".repeat(t));const a=s.layers;for(let u=0;u<a.length;++u)i?pX(a[u],e,n):mX(a[u],e,o,n),n((u===a.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const l=dX(s),c=tp(s.nonTrainableWeights);n(`Total params: ${l+c}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${c}`),n("_".repeat(t))}function dX(s){let t;return s.collectedTrainableWeights!=null?t=tp(s.collectedTrainableWeights):t=tp(s.trainableWeights),t}function fX(s){let t=!0;const e=[],n=[];for(const i in s.nodesByDepth)e.push(s.nodesByDepth[i]);for(const i of e){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){t=!1;break}n.push(...i)}if(t)for(const i of s.layers){let r=!1;for(const o of i.inboundNodes)if(n.indexOf(o)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function ap(s,t,e=console.log){let n="";for(let i=0;i<s.length;++i)i>0&&(n=n.slice(0,n.length-1)+" "),n+=s[i],n=n.slice(0,t[i]),n+=" ".repeat(t[i]-n.length);e(n)}function pX(s,t,e){let n,i;try{i=s.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{n=JSON.stringify(s.outputShape)}catch{n="multiple"}const r=s.name,o=s.getClassName(),a=[`${r} (${o})`,i,n,s.countParams().toString()];ap(a,t,e)}function mX(s,t,e,n){let i,r;try{r=s.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(s.outputShape)}catch{i="multiple"}const o=[];for(const h of s.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],g=h.tensorIndices[d];o.push(`${f}[${p}][${g}]`)}const a=s.name,l=s.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,r,i,s.countParams().toString(),c];ap(u,t,n);for(let h=1;h<o.length;++h)ap(["","","","",o[h]],t,n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function SE(s,t,e){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof e=="string"}function I0(s,t){if(s===null)return null;if(typeof s=="string")return ia(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];SE(t,i,r)?e.push(r):e.push(I0(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n];if(n==="name"&&typeof i=="string")e[n]=i;else{const r=ia(n);e[r]=I0(i,r)}}return e}}function E0(s,t){if(s==null)return null;if(typeof s=="string")return zr(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];SE(t,i,r)?e.push(r):e.push(E0(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n],r=zr(n);(n==="name"||n==="className")&&typeof i=="string"?e[r]=i:e[r]=E0(i,n)}return e}}/** @license See the LICENSE file. */const _E="4.0.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ei extends Se{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=Hm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],vo(this.inputs).length!==this.inputs.length)throw new j(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);vo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const v=y.sourceLayer,b=y.nodeIndex,w=y.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(w)}for(const y of this.inputs){const v=y.sourceLayer,b=y.nodeIndex,w=y.tensorIndex;ar(b===0,"input layer has >1 nodes"),ar(w===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const v=this.inputLayers[y];if(!(v instanceof od))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const e={},n={},i={},r={},o={},a=[],l=(y,v,b,w,_,C)=>{(w==null||_==null||C==null)&&(w=y.sourceLayer,_=y.nodeIndex,C=y.tensorIndex);const S=w.inboundNodes[_];if(b.indexOf(S)!==-1)throw new ui(`The tensor ${y.name} at layer "${w.name}" is part of a cycle.`);if(v.indexOf(S)!==-1)return;this.containerNodes.add(Ei.nodeKey(w,_)),w.id in o||(o[w.id]=Object.keys(o).length),b.indexOf(S)===-1&&b.push(S);const T=S.inboundLayers.length;for(let I=0;I<T;I++){const M=S.inputTensors[I],$=S.inboundLayers[I],E=S.nodeIndices[I],A=S.tensorIndices[I];l(M,v,b,$,E,A)}for(v.push(S);b.indexOf(S)>=0;)b.splice(b.indexOf(S),1);a.push(S)},c=[],u=[];for(const y of this.outputs)l(y,c,u);const h=a.slice().reverse();for(const y of h){n[y.id]=y,y.id in e||(e[y.id]=0);let v=e[y.id];const b=i[y.outboundLayer.id]==null?0:i[y.outboundLayer.id];v=Math.max(v,b),i[y.outboundLayer.id]=v,r[y.outboundLayer.id]=y.outboundLayer,e[y.id]=v;for(let w=0;w<y.inboundLayers.length;w++){const _=y.inboundLayers[w],C=y.nodeIndices[w],S=_.inboundNodes[C],T=e[S.id]==null?0:e[S.id];e[S.id]=Math.max(v+1,T),n[S.id]=S}}const d={};for(const y in e){const v=e[y];v in d||(d[v]=[]),d[v].push(n[y])}const f={};for(const y in i){const v=i[y];v in f||(f[v]=[]),f[v].push(r[y])}let p=Object.keys(f).map(y=>parseInt(y,10)).sort(uf);this.layers=[];for(const y of p){const v=f[y];v.sort((b,w)=>{const _=o[b.id],C=o[w.id];return _<C?-1:_>C?1:0});for(const b of v)b instanceof Ei&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=f,p=Object.keys(d).map(y=>parseInt(y,10)).sort(uf);const g=this.inputs.slice(),m=[];for(const y of p)for(const v of d[y]){const b=v.outboundLayer;if(b!=null){for(const w of v.inputTensors)if(g.indexOf(w)===-1)throw new ui(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${b.name}". The following previous layers were accessed without issue: ${m}`);for(const w of v.outputTensors)g.push(w);m.push(b.name)}}this.nodesByDepth=d;const x=this.layers.map(y=>y.name);for(const y of x){const v=x.filter(b=>b===y).length;if(v!==1)throw new ui(`The name "${y}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Xm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new j("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let i=0;for(const o of this.layers)for(const a of o.weights){if(n[a.originalName]!=null)throw new j(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,i++}const r=[];for(const o in t){let a=o;if(n[o]==null){const l=o.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[a]!=null)r.push([n[a],t[o]]);else if(e)throw new j(`Provided weight data has no target variable: ${o}`);delete n[a]}if(e){const o=[];for(const a in n)o.push(a);if(o.length>0)throw new j(`${o.length} of ${i} weights are not set: ${o}`)}wv(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${_E}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=E0(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return rt(()=>{t=Xe(t);const n=new fo;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],t[i]);return lu(this.outputs,n,e)})}computeMask(t,e){return rt(()=>{t=Xe(t);let n;return e==null?n=za(null,t.length):n=Xe(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Qf(t);if(e.length!==this.inputLayers.length)throw new j(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";n[u]=c}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(uf);if(i.length>1)for(const a of i){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const m=c.inboundLayers[g],x=c.nodeIndices[g],y=c.tensorIndices[g],v=`${m.name}_${x}_${y}`,b=n[v];h.push(b)}const d=u.computeOutputShape(fs(h)),f=Qf(d),p=u.inboundNodes.indexOf(c);for(let g=0;g<f.length;g++){const m=`${u.name}_${p}_${g}`;n[m]=f[g]}}}const r=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];ar(l in n),r.push(n[l])}return fs(r)}runInternalGraph(t,e){e==null&&(e=za(null,t.length));const n={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];n[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(uf);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const g of d)g.id in n&&p.push(n[g.id]);if(p.length===d.length){let g={},m,x,y,v;if(u.callArgs!=null&&(g=u.callArgs),p.length===1){const[b,w]=p[0];g.mask==null&&(g.mask=w),y=Xe(h.call(b,g)),v=Xe(h.computeMask(b,w)),m=[b],x=[w]}else m=p.map(b=>b[0]),x=p.map(b=>b[1]),g.mask==null&&(g.mask=x),y=Xe(h.call(m,g)),v=Xe(h.computeMask(m,x));if(h.activityRegularizer)throw new fe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<f.length;++b){const w=f[b],_=y[b],C=v[b];n[w.id]=[_,C]}}}}const r=[],o=[],a=[];for(const l of this.outputs){ar(l.id in n,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=n[l.id];a.push(c.shape),r.push(c),o.push(u)}return[r,o,a]}buildNodeConversionMap(t){const e={};let n;for(const i of this.layers){n=i instanceof Ei?1:0;for(let r=0;r<i.inboundNodes.length;r++){const o=Ei.nodeKey(i,r);this.containerNodes.has(o)&&(e[o]=n,n+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new j(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new j("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new j(`No such layer: ${t}`)}calculateLosses(){return rt(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const i=Ei.nodeKey(e,n);this.containerNodes.has(i)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],f=Ei.nodeKey(o,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const x=d.inboundLayers[m],y=d.nodeIndices[m],v=d.tensorIndices[m],b=Ei.nodeKey(x,y);let w=e[b];w==null&&(w=0),g.push([x.name,w,v,p])}c.push(g)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,n.push(u)}t.layers=n;const i=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=Ei.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];i.push([a.name,u,h])}t.inputLayers=i;const r=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=Ei.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];r.push([a.name,u,h])}return t.outputLayers=r,t}static fromConfig(t,e,n={},i=!1){const r={},o={};function a(m,x){m.name in o?o[m.name].push(x):o[m.name]=[x]}function l(m,x){const y=[];let v;for(const b of x){const w=b[0],_=b[1],C=b[2];if(v=b[3]==null?{}:b[3],!(w in r)){a(m,x);return}const S=r[w];if(S.inboundNodes.length<=_){a(m,x);return}const T=S.inboundNodes[_];y.push(T.outputTensors[C])}y.length>0&&m.apply(fs(y),v)}function c(m){const x=m.name,y=Hr(m,e.customObjects!=null?e.customObjects:{});y.setFastWeightInitDuringBuild(i),r[x]=y,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new j(`Corrupted configuration, expected array for nodeData: ${b}`);a(y,b)})}const u=e.name,h=e.layers;for(const m of h)c(m);for(;!n8(o);)for(const m of h){const x=r[m.name];if(x.name in o){const y=o[x.name];delete o[x.name];for(const v of y)l(x,v)}}const d=[],f=[],p=e.inputLayers;for(const m of p){const x=m[0],y=m[1],v=m[2];ar(x in r);const w=r[x].inboundNodes[y].outputTensors;d.push(w[v])}const g=e.outputLayers;for(const m of g){const x=m[0],y=m[1],v=m[2];ar(x in r);const w=r[x].inboundNodes[y].outputTensors;f.push(w[v])}return new t({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new j("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){rt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gX(s,t,e){const n=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(i=>null);if(n===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==n)throw new Error(`Provided ${e} is an array of ${s.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const i=[];return t.forEach(r=>{r in s?i.push(s[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(s)}`)}function CE(s,t){return gX(s,t,"classWeight")}async function TE(s,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const i=rt(()=>{if(s.shape.length===1)return xa(s);if(s.shape.length===2){if(s.shape[1]>1)return Du(s,1);if(s.shape[1]===1)return Q(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());ve(i);const o=[];return r.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(e[a])}),Is(o,"float32")}else return null}function xX(s,t){return X(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yX=32;function IE(s,t){let e,n;const i=t;e=i.xs,n=i.ys,F(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=m_("input",s.inputNames,e),o=m_("output",s.outputNames,n),a=r[0].shape[0];F(r.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),F(o.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let l=0;l<r.length;l++)F(r[l].shape[0]===a,()=>`Batch size mismatch: input ${s.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);for(let l=0;l<o.length;l++)F(o[l].shape[0]===a,()=>`Batch size mismatch: output ${s.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);return{xs:r,ys:o}}function m_(s,t,e){if(e instanceof xn)return[e];if(Array.isArray(e))return F(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),e;{const n=[];for(const i of t){if(e[i]==null)throw new j(`The feature data generated by the dataset lacks the required ${s} key '${i}'.`);n.push(e[i])}return n}}function bX(s){if(s.length===3)throw new fe("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function vX(s,t,e){const n=e.batchesPerEpoch!=null;if(F(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),F(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),F(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const i=e.validationData!=null;let r,o;if(i)if(g_(e.validationData))F(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=bX(e.validationData);r=m.xs,o=m.ys}const a=s.makeTrainFunction(),l=s.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(m=>"val_"+m)):c=l.slice();const u=mE(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:f}=gE(u,h,e.epochs,null,null,wX(t,e),null,i,c);d.setModel(s),s.history=f,await d.onTrainBegin(),s.stopTraining_=!1;let p=e.initialEpoch==null?0:e.initialEpoch,g=await t.iterator();for(;p<e.epochs;){const m={};await d.onEpochBegin(p);let x=0,y=0;for(n||(g=await t.iterator());!n||x<e.batchesPerEpoch;){const v=await g.next();if(n&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:b,ys:w}=IE(s,v.value),_={};_.batch=y,_.size=b[0].shape[0],await d.onBatchBegin(y,_);const C=[];if(e.classWeight!=null){const I=CE(e.classWeight,s.outputNames);for(let M=0;M<I.length;++M)C.push(await TE(w[M],null,I[M]))}const S=b.concat(w).concat(C),T=a(S);ve(S);for(let I=0;I<l.length;++I){const M=l[I],$=T[I];_[M]=$,yr($)}await d.onBatchEnd(y,_),pE(_),y++,x++}if(n?x>=e.batchesPerEpoch:v.done){if(i){let b;g_(e.validationData)?b=Xe(await s.evaluateDataset(e.validationData,{batches:e.validationBatches})):b=Xe(s.evaluate(r,o,{batchSize:e.validationBatchSize==null?yX:e.validationBatchSize,verbose:0}));for(let w=0;w<s.metricsNames.length;++w)m[`val_${s.metricsNames[w]}`]=b[w]}break}if(s.stopTraining_)break}if(await d.onEpochEnd(p,m),p++,s.stopTraining_)break}return await d.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function wX(s,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(s.size)&&(e=s.size),e}function g_(s){return typeof s.iterator=="function"}function SX(s){return typeof s.next=="function"}async function _X(s,t,e){e=e||{};const n=e.batches!=null,i=s.testFunction;let r=[];if(e.verbose>0)throw new fe("Verbose mode is not implemented yet.");F(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=SX(t)?t:await t.iterator();let a=0,l=0;for(;!n||l<e.batches;){const c=await o.next();if(r=rt(()=>{if(c.value){const{xs:u,ys:h}=IE(s,c.value),d=u.concat(h),f=rt(()=>i(d));if(ve(d),l===0)for(let g=0;g<f.length;++g)r.push(le(0));const p=d[0].shape[0];for(let g=0;g<f.length;++g){const m=f[g],x=r[g];r[g]=rt(()=>Et(r[g],X(p,m))),l>0&&ve(x)}ve(f),a+=p,++l}return r}),c.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=ie(r[c],a),ve(u)}return fs(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function M0(s){F(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function cu(s,t,e){return s==null?[null]:Array.isArray(s)?s.map(n=>va(n,t,e-t)):va(s,t,e-t)}function Tv(s,t){return rt(()=>s==null?null:Array.isArray(s)?s.map(e=>Tv(e,t)):tE(s,t.dtype==="int32"?t:Lt(t,"int32")))}function A0(s,t){const e=[];let n=0,i=null;for(;n<s;)i=n+t,i>=s&&(i=s),e.push([n,i]),n=i;return e}async function CX(s,t,e,n,i,r,o,a,l,c,u,h,d,f,p){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),p!=null&&(g=!0,f==null))throw new j("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=s.checkNumSamples(e,i,f,"steps_per_epoch");let x;m!=null&&(x=Vi(0,m)),o==null&&(o=1);const{callbackList:y,history:v}=gE(a,o,r,d,m,f,i,g,h);y.setModel(s),s.history=v,await y.onTrainBegin(),s.stopTraining_=!1;for(let b=d;b<r;++b){await y.onEpochBegin(b);const w={};if(f!=null)throw new fe("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new fe("batch shuffling is not implemneted yet");u&&JB(x);const _=Is(x),C=A0(m,i);for(let S=0;S<C.length;++S){const T={};if(await y.onBatchBegin(S,T),rt(()=>{const I=C[S][0],M=C[S][1],$=va(_,I,M-I);T.batch=S,T.size=M-I;const E=Tv(e,$),A=t(E);for(let k=0;k<n.length;++k){const R=n[k],B=A[k];T[R]=B,yr(B)}if(S===C.length-1&&g){const k=s.testLoop(l,c,i);for(let R=0;R<n.length;++R){const B=n[R],L=k[R];yr(L),w["val_"+B]=L}}}),await y.onBatchEnd(S,T),pE(T),s.stopTraining_)break}_.dispose()}if(await y.onEpochEnd(b,w),s.stopTraining_)break}return await y.onTrainEnd(),await s.history.syncData(),s.history}async function TX(s,t,e,n={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let i,r,o,a,l,c,u,h,d;try{const f=n.batchSize==null?32:n.batchSize;M0(f);const p=!1,g=await s.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,f);i=g[0],r=g[1],d=g[2];let m=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)l=n.validationData[0],c=n.validationData[1];else throw n.validationData.length===3?new fe("validationData including sample weights is not supported yet."):new j(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);const T=!0,I=await s.standardizeUserData(l,c,null,null,T,f);u=I[0],h=I[1],x=u.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;const T=Math.floor(i[0].shape[0]*(1-n.validationSplit)),I=i[0].shape[0];u=cu(i,T,I),o=i,i=cu(i,0,T),h=cu(r,T,I),a=r,r=cu(r,0,T),x=u.concat(h)}else n.validationSteps!=null&&(m=!0);const y=i.concat(r).concat(d);s.checkTrainableWeightsConsistency();const v=s.makeTrainFunction(),b=s.getDedupedMetricsNames();let w,_;m?(s.makeTestFunction(),w=s.testFunction,_=b.slice().concat(b.map(T=>"val_"+T))):(w=null,x=[],_=b.slice());const C=mE(n.callbacks,n.yieldEvery);return await CX(s,v,y,b,f,n.epochs,n.verbose,C,w,x,n.shuffle,_,n.initialEpoch,null,null)}finally{s.isTraining=!1,ki(i,t),ki(r,e),ki(o,t),ki(a,e),ki(u,l),ki(h,c),d!=null&&ve(d)}}function EE(s){const t=[];s instanceof xn&&(s=[s]);for(let e=0;e<s.length;++e){const n=s[e];if(n.rank===1)t.push(sd(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function ki(s,t){if(s==null)return;const e=[];if(t instanceof xn)e.push(t.id);else if(Array.isArray(t))t.forEach(i=>e.push(i.id));else if(t!=null)for(const i in t){const r=t[i];e.push(r.id)}const n=[];if(s instanceof xn)e.indexOf(s.id)===-1&&n.push(s);else if(Array.isArray(s))s.forEach(i=>{e.indexOf(i.id)===-1&&n.push(i)});else if(s!=null)for(const i in s){const r=s[i];e.indexOf(r.id)===-1&&n.push(r)}n.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IX(s){return s instanceof xn}function k0(s){return Array.isArray(s)}function x_(s){return!IX(s)&&!k0(s)}function y_(s,t,e,n=!0,i=""){if(t==null||t.length===0){if(s!=null){let o=!1;if(k0(s)&&s.length>0)o=!0;else if(x_(s)){for(const a in s)if(s.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new j(`Error when checking model ${i} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(o=>null);let r;if(x_(s)){s=s,r=[];for(const o of t){if(s[o]==null)throw new j(`No data provided for "${o}". Need data for each key in: ${t}`);r.push(s[o])}}else if(k0(s)){if(s=s,s.length!==t.length)throw new j(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);r=s}else{if(s=s,t.length>1)throw new j(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);r=[s]}if(r=EE(r),e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new j(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u>=0&&c!==u)throw new j(`${i} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function EX(s,t,e){const n=vo(s.map(r=>r.shape[0]));n.sort();const i=vo(t.map(r=>r.shape[0]));if(i.sort(),n.length>1)throw new j(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(r=>r.shape))}`);if(i.length>1)throw new j(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(n.length>0&&i.length>0&&!Ne(n,i))throw new j(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${i[0]} target sample(s).`)}function MX(s,t,e){const n=[jm,Km,Pu];for(let i=0;i<s.length;++i){const r=s[i],o=t[i],a=e[i];if(o!=null){if(o===Pu&&r.shape[r.shape.length-1]===1)throw new j(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(o)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new j(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function b_(s,t,e,n=!0,i=""){let r;if(Array.isArray(s)){if(s.length!==t.length)throw new j(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);r=s}else{if(t.length>1)throw new j(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);r=[s]}if(e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new j(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u!==c)throw new j(`Error when checking ${i}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function AX(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(n=>[]);let e;if(typeof s=="string"||typeof s=="function")e=[s];else if(Array.isArray(s)||typeof s=="object")e=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(e))return t.map(n=>e);{const n=[];for(const i of t){let r=e.hasOwnProperty(i)?e[i]:[];Array.isArray(r)||(r=[r]),n.push(r)}return n}}const kX="layers-model";class Zl extends Ei{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new j("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");hX(this,t,e,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=uX(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Oo))throw new j("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new j(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),e.push(yx(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new j(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>yx(a))}else{const o=yx(t.loss);this.outputs.forEach(a=>{e.push(o)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ba("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const i=AX(t.metrics,this.outputNames),r=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};ba("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=i[o];(c=>{const u="";let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===Km?["accuracy","acc"].indexOf(p)!==-1?d=yE:["crossentropy","ce"].indexOf(p)!==-1&&(d=tX):this.lossFunctions[o]===ip?["accuracy","acc"].indexOf(p)!==-1?d=eX:["crossentropy","ce"].indexOf(p)!==-1&&(d=wE):["accuracy","acc"].indexOf(p)!==-1?d=bE:["crossentropy","ce"].indexOf(p)!==-1&&(d=vE);let x;["accuracy","acc"].indexOf(p)!==-1?x="acc":["crossentropy","ce"].indexOf(p)!==-1&&(x="ce"),f=d,h=u+x}else f=cX(p),h=u+ff(p);let g;ba(h,()=>{g=f}),r(o,h,g)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const i=n.batchSize==null?32:n.batchSize;M0(i);const r=!0,o=this.standardizeUserDataXY(t,e,r,i);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,i,n.verbose,n.steps);return fs(c)}finally{ki(o[0],t),ki(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),_X(this,t,e)}checkNumSamples(t,e,n,i="steps"){let r;if(n!=null){if(r=null,e!=null)throw new j(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new j(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new j("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),i=n?e:[e],r=this.retrieveSymbolicTensors(i),o=new fo;if(t instanceof xn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new j(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new j(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=lu(r,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=za(null,t.length);let n=t.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],o=r.map(a=>a.name);for(let a=0;a<t.length;++a){const l=o.indexOf(t[a]);if(l!==-1&&(e[a]=r[l],n--),n===0)break}if(n===0)break}if(n>0){const i=[];throw e.forEach((r,o)=>{r==null&&i.push(t[o])}),new j(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return e}predictLoop(t,e=32,n=!1){return rt(()=>{const i=this.checkNumSamples(t);if(n)throw new fe("Verbose predictLoop() is not implemented yet.");const r=A0(i,e),o=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)rt(()=>{const c=r[a][0],u=r[a][1],h=cu(t,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new fo(d);return lu(this.outputs,f)}).forEach((c,u)=>o[u].push(c));return fs(o.map(a=>Jn(a,0)))})}predict(t,e={}){const n=EE(t);b_(n,this.inputNames,this.feedInputShapes,!1);try{const i=e.batchSize==null?32:e.batchSize;return M0(i),this.predictLoop(n,i)}finally{ki(n,t)}}predictOnBatch(t){b_(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,i){if(this.optimizer_==null)throw new ui("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===ip?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(t=y_(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=y_(e,this.feedOutputNames,r,!1,"target"),EX(t,e),MX(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&t[0].shape[0]%i!==0)throw new j(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,i,r=!0,o){const[a,l]=this.standardizeUserDataXY(t,e,r,o);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=CE(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await TE(l[h],null,u[h]))}return[a,l,c]}testLoop(t,e,n,i=0,r){return rt(()=>{const o=this.checkNumSamples(e,n,r,"steps"),a=[];if(i>0)throw new fe("Verbose mode is not implemented yet.");if(r!=null)throw new fe("steps mode in testLoop() is not implemented yet");{const l=A0(o,n),c=Is(Vi(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=va(c,h,d-h),p=Tv(e,f),g=t(p);if(u===0)for(let m=0;m<g.length;++m)a.push(le(0));for(let m=0;m<g.length;++m){const x=g[m];a[m]=Et(a[m],X(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=ie(a[u],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const i=t[n];let r=i;if(s_(t,i)>1){const o=s_(t.slice(0,n),i);r+=`_${o}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:n[g]});const d=new fo(h),f=lu(this.outputs,d,{training:!0});let p;for(let g=0;g<this.lossFunctions.length;++g){const m=this.lossFunctions[g];let x=m(i[g],f[g]);r[g]!=null&&(x=xX(x,r[g]));const y=dn(x);e.push(y),g===0?p=x:p=Et(p,x)}for(let g=0;g<this.metricsTensors.length;++g){let m;if(this.outputs.length>1&&g<this.outputs.length)m=e[g];else{const x=this.metricsTensors[g][0],y=this.metricsTensors[g][1];m=dn(x(i[y],f[y]))}yr(m),o.push(m)}return p=dn(p),this.calculateLosses().forEach(g=>{p=Et(p,g)}),p},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(o)}}makeTestFunction(){this.testFunction=t=>rt(()=>{const e=[];let n;const i=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:i[c]});const a=new fo(o),l=lu(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=dn(u(r[c],l[c]));c===0?n=h:n=Et(n,h),e.push(n)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=dn(u(r[h],l[h]));e.push(d)}return e})}async fit(t,e,n={}){return TX(this,t,e,n)}async fitDataset(t,e){return vX(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),i=n[0],r=n[1],a=this.makeTrainFunction()(i.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return ve(a),ki(n[0],t),ki(n[1],e),fs(l)}getNamedWeights(t){const e=[],n=t!=null&&t.trainableOnly,i=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<i.length;++o)n&&!i[o].trainable||e.push({name:i[o].originalName,tensor:r[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Xf().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Xf().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=zr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>zr(e))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const i of e)if(typeof n[i]=="string")t[i]=zr(n[i]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[zr(ff(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>zr(ff(t)));{const t={};for(const e in this.metrics)t[e]=zr(ff(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=I0(t.optimizer_config),n=Hr(e);let i;if(typeof t.loss=="string")i=ia(t.loss);else if(Array.isArray(t.loss))i=t.loss.map(o=>ia(o));else if(t.loss!=null){i={};for(const o in t.loss)i[o]=ia(t.loss[o])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(o=>ia(o));else if(t.metrics!=null){r={};for(const o in t.metrics)r[o]=ia(t.metrics[o])}this.compile({loss:i,metrics:r,optimizer:n})}async save(t,e){if(typeof t=="string"){const c=H4(t);if(c.length===0)throw new j(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new j(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new j("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await OS(this.getNamedWeights(e)),i=!1,r=null,a={modelTopology:this.toJSON(r,i),format:kX,generatedBy:`TensorFlow.js tfjs-layers v${_E}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await OS(await this.optimizer.getWeights(),c);n.specs.push(...h),n.data=pI([n.data,u])}return this.userDefinedMetadata!=null&&(p_(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){p_(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zl.className="Model";_t(Zl);class ME extends Zl{}ME.className="Functional";_t(ME);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pc extends Zl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Hm("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new j(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof pc||t instanceof Zl;let n;if(e){if(n=t,n.outputs.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new j("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new j("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=N8({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new j(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=cE(this.outputs[0])}this.inboundNodes=[],new Xm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:za(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=t.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Re(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new ui("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new ui("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new ui("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new ui("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},i=!1){let r,o={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new j("Legacy serialization format not supported yet.");r=e}else F(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof pc))throw new fe(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=Hr(l,void 0,i);i&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new j("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new j("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}pc.className="Sequential";_t(pc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AE(s){return new pc(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ys extends Mc{getConfig(){return{}}}class kE extends ys{apply(t,e=1){return x8(t,e)}}kE.className="elu";_t(kE);class NE extends ys{apply(t){return r2(t)}}NE.className="selu";_t(NE);class RE extends ys{apply(t){return Jr(t)}}RE.className="relu";_t(RE);class $E extends ys{apply(t){return rt(()=>zm(6,Jr(t)))}}$E.className="relu6";_t($E);class DE extends ys{apply(t){return t}}DE.className="linear";_t(DE);class FE extends ys{apply(t){return Ac(t)}}FE.className="sigmoid";_t(FE);class LE extends ys{apply(t){return b8(t)}}LE.className="hardSigmoid";_t(LE);class PE extends ys{apply(t){return Yh(t)}}PE.className="softplus";_t(PE);class OE extends ys{apply(t){return y8(t)}}OE.className="softsign";_t(OE);class zE extends ys{apply(t){return hb(t)}}zE.className="tanh";_t(zE);class Iv extends ys{apply(t,e=-1){return Ab(t,e)}}Iv.className="softmax";_t(Iv);class BE extends ys{apply(t,e=-1){return HI(t,e)}}BE.className="logSoftmax";_t(BE);class UE extends ys{apply(t,e=1){return rt(()=>X(Ac(X(t,e)),t))}}UE.className="swish";_t(UE);class VE extends ys{apply(t){return rt(()=>X(t,hb(Yh(t))))}}VE.className="mish";_t(VE);function Io(s){return s.getClassName()}function bx(s,t={}){return nd(s,ri.getMap().classNameMap,t,"activation")}function Eo(s){if(s==null){const t={};return t.className="linear",t.config={},bx(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},bx(t)}else return s instanceof ys?s:bx(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NX(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class WE extends Mc{}class GE extends WE{constructor(t){super(),NX(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return rt(()=>{let e=$n([1]);return this.hasL1&&(e=Et(e,Yt(X(this.l1,Nn(t))))),this.hasL2&&(e=Et(e,Yt(X(this.l2,id(t))))),Q(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}GE.className="L1L2";_t(GE);const v_={l1l2:"L1L2"};function Ue(s){return hv(s)}function w_(s,t={}){return nd(s,ri.getMap().classNameMap,t,"regularizer")}function tn(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in v_?v_[s]:s,config:{}};return w_(e)}else return s instanceof WE?s:w_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class HE extends Se{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=ue(t);let n=Jr(t);return this.maxValue!=null&&(n=Gs(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}HE.className="ReLU";_t(HE);class qE extends Se{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ue(t);return yb(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}qE.className="LeakyReLU";_t(qE);class XE extends Se{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Qe(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=tn(t.alphaRegularizer),this.alphaConstraint=In(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new j(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Re(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(this.sharedAxes!=null)for(let i=1;i<t.length;++i)n[i]=t[i];this.inputSpec=[new Cn({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ue(t),Tb(t,this.alpha.read())}getConfig(){const t={alphaInitializer:nn(this.alphaInitializer),alphaRegularizer:Ue(this.alphaRegularizer),alphaConstraint:Tn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}XE.className="PReLU";_t(XE);class jE extends Se{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new fe(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ue(t);return Lm(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}jE.className="ELU";_t(jE);class KE extends Se{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const n=ue(t);return X(n,Lt(qs(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}KE.className="ThresholdedReLU";_t(KE);class YE extends Se{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Iv().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ue(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}YE.className="Softmax";_t(YE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jl(s,t,e){if(typeof s=="number")return za(s,t);if(s.length!==t)throw new j(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let n=0;n<t;++n){const i=s[n];if(!f8(i))throw new j(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${i}`)}return s}function zi(s,t,e,n,i=1){if(s==null)return s;const r=t+(t-1)*(i-1);let o;return e==="same"?o=s:o=s-r+1,Math.floor((o+n-1)/n)}function lr(s,t,e,n){if(s==null)return null;if(n==="valid")s=s*t+To([e-t,0]);else if(n==="same")s=s*t;else throw new j(`Unsupport padding mode: ${n}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ev(s,t){return rt(()=>(gn(t),t==="channelsFirst"?Ce(s,[0,2,3,1]):s))}function ZE(s,t){return rt(()=>(gn(t),t==="channelsFirst"?Ce(s,[0,2,3,4,1]):s))}function RX(s,t,e,n=1,i="valid",r,o=1){return rt(()=>{if(r==null&&(r=Wi()),gn(r),s.shape.length!==3)throw new j(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new j(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new j(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(s=Ce(s,[0,2,1])),i==="causal")throw new fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=LI(s,t,n,i==="same"?"same":"valid","NWC",o);return e!=null&&(a=ji(a,e)),a})}function S_(s,t,e,n=[1,1],i="valid",r,o,a=null){return rt(()=>{if(r==null&&(r=Wi()),gn(r),s.rank!==3&&s.rank!==4)throw new j(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new j(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let l=Ev(s,r);if(i==="causal")throw new fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=kH({x:l,filter:t,strides:n,pad:i==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:a}),r==="channelsFirst"&&(l=Ce(l,[0,3,1,2])),l})}function $X(s,t,e,n=[1,1,1],i="valid",r,o){return rt(()=>{if(r==null&&(r=Wi()),gn(r),s.rank!==4&&s.rank!==5)throw new j(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new j(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let a=ZE(s,r);if(i==="causal")throw new fe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=GV(a,t,n,i==="same"?"same":"valid","NDHWC",o),e!=null&&(a=ji(a,e)),r==="channelsFirst"&&(a=Ce(a,[0,4,1,2,3])),a})}class Ym extends Se{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ym.verifyArgs(e),this.rank=t,Dn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new fe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Jl(e.kernelSize,t,"kernelSize"),this.strides=Jl(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Xs(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,gn(this.dataFormat),this.activation=Eo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Qe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=In(e.biasConstraint),this.biasRegularizer=tn(e.biasRegularizer),this.activityRegularizer=tn(e.activityRegularizer),this.dilationRate=Jl(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new j(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new j(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new j(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ar("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!dv(t.kernelSize,"number",1,3))throw new j(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Io(this.activation),useBias:this.useBias,biasInitializer:nn(this.biasInitializer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),biasConstraint:Tn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Rc extends Ym{constructor(t,e){super(t,e),this.kernel=null,Rc.verifyArgs(e),this.filters=e.filters,Dn(this.filters,"filters"),this.kernelInitializer=Qe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=In(e.kernelConstraint),this.kernelRegularizer=tn(e.kernelRegularizer)}build(t){t=Re(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new j(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],i=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return rt(()=>{t=ue(t);let n;const i=this.bias==null?null:this.bias.read(),r=j2(this.activation.getClassName());if(r!=null&&this.rank===2)n=S_(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=RX(t,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=S_(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=$X(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new fe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Re(t);const e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const o=zi(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(o)}let i=[t[0]];return this.dataFormat==="channelsLast"?(i=i.concat(e),i.push(this.filters)):(i.push(this.filters),i=i.concat(e)),i}getConfig(){const t={filters:this.filters,kernelInitializer:nn(this.kernelInitializer),kernelRegularizer:Ue(this.kernelRegularizer),kernelConstraint:Tn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new j(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ld extends Rc{constructor(t){super(2,t),ld.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!dv(t.kernelSize,"number",1,2))throw new j(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ld.className="Conv2D";_t(ld);class cd extends Rc{constructor(t){super(3,t),cd.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new j(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}cd.className="Conv3D";_t(cd);class JE extends ld{constructor(t){if(super(t),this.inputSpec=[new Cn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Re(t),t.length!==4)throw new j("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cn({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return rt(()=>{let n=ue(t);if(n.shape.length!==4)throw new j(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=i[o],c=i[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=lr(l,d,u,this.padding),g=lr(c,f,h,this.padding),m=[r,p,g,this.filters];this.dataFormat!=="channelsLast"&&(n=Ce(n,[0,2,3,1]));let x=PI(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ce(x,[0,3,1,2])),this.bias!=null&&(x=ji(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Re(t);const e=t.slice();let n,i,r;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3):(n=3,i=1,r=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[i]=lr(e[i],l,o,this.padding),e[r]=lr(e[r],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}JE.className="Conv2DTranspose";_t(JE);class QE extends cd{constructor(t){if(super(t),this.inputSpec=[new Cn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Re(t),t.length!==5)throw new j("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cn({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return rt(()=>{let n=ue(t);if(n.shape.length!==5)throw new j(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=i[l],u=i[o],h=i[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],g=this.strides[0],m=this.strides[1],x=this.strides[2],y=lr(c,g,d,this.padding),v=lr(u,m,f,this.padding),b=lr(h,x,p,this.padding),w=[r,y,v,b,this.filters];this.dataFormat!=="channelsLast"&&(n=Ce(n,[0,2,3,4,1]));let _=XV(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=Ce(_,[0,4,1,2,3])),this.bias!==null&&(_=ji(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(t){t=Re(t);const e=t.slice();let n,i,r,o;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3,o=4):(n=4,i=1,r=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return e[n]=this.filters,e[i]=lr(e[i],u,a,this.padding),e[r]=lr(e[r],h,l,this.padding),e[o]=lr(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}QE.className="Conv3DTranspose";_t(QE);class tM extends Rc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new j("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new j("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new j(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Qe(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=tn(e.depthwiseRegularizer),this.depthwiseConstraint=In(e.depthwiseConstraint),this.pointwiseInitializer=Qe(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=tn(e.pointwiseRegularizer),this.pointwiseConstraint=In(e.pointwiseConstraint)}build(t){if(t=Re(t),t.length<this.rank+2)throw new j(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new j(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],i=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Cn({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return rt(()=>{t=ue(t);let n;if(this.rank===1)throw new fe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Ce(t,[0,2,3,1])),n=o2(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ji(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ce(n,[0,3,1,2])),n})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=nn(this.depthwiseInitializer),t.pointwiseInitializer=nn(this.pointwiseInitializer),t.depthwiseRegularizer=Ue(this.depthwiseRegularizer),t.pointwiseRegularizer=Ue(this.pointwiseRegularizer),t.depthwiseConstraint=Tn(this.depthwiseConstraint),t.pointwiseConstraint=Tn(this.pointwiseConstraint),t}}tM.className="SeparableConv";class eM extends tM{constructor(t){super(2,t)}}eM.className="SeparableConv2D";_t(eM);class Zm extends Rc{constructor(t){super(1,t),Zm.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!dv(t.kernelSize,"number",1,1))throw new j(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Zm.className="Conv1D";_t(Zm);class nM extends Se{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return rt(()=>{if(t=ue(t),this.dataFormat==="channelsLast"){const n=df(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return df(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const n=df(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return df(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}nM.className="Cropping2D";_t(nM);class sM extends Se{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,u8(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,n]}else{const e=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return rt(()=>{let n=ue(t);const i=n.shape;if(this.dataFormat==="channelsFirst"){n=Ce(n,[0,2,3,1]);const r=this.size[0]*i[2],o=this.size[1]*i[3],a=this.interpolation==="nearest"?Vl.resizeNearestNeighbor(n,[r,o]):Vl.resizeBilinear(n,[r,o]);return Ce(a,[0,3,1,2])}else{const r=this.size[0]*i[1],o=this.size[1]*i[2];return this.interpolation==="nearest"?Vl.resizeNearestNeighbor(n,[r,o]):Vl.resizeBilinear(n,[r,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}sM.className="UpSampling2D";_t(sM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DX(s,t,e=[1,1],n="valid",i,r){return rt(()=>{i==null&&(i=Wi()),gn(i);let o=Ev(s,i);if(s.rank!==4)throw new j(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new j(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=mb(o,t,e,n==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(o=Ce(o,[0,3,1,2])),o})}class iM extends Ym{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Qe(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=In(t.depthwiseConstraint),this.depthwiseRegularizer=tn(t.depthwiseRegularizer)}build(t){if(t=Re(t),t.length<4)throw new j(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new j(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],i=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rt(()=>{t=ue(t);let n=DX(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ji(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Re(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=zi(e,this.kernelSize[0],this.padding,this.strides[0]),o=zi(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],i,r,o]:[t[0],r,o,i]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=nn(this.depthwiseInitializer),t.depthwiseRegularizer=Ue(this.depthwiseRegularizer),t.depthwiseConstraint=Tn(this.depthwiseRegularizer),t}}iM.className="DepthwiseConv2D";_t(iM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rM(s,t,e,n){if(Array.isArray(s)){if(t!=null||e!=null)throw new j("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=s.slice(s.length-n,s.length),s=s.slice(0,s.length-n)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return t=i(t),e=i(e),{inputs:s,initialState:t,constants:e}}function oM(s,t,e,n=!1,i,r,o=!1,a=!1){return rt(()=>{const l=t.shape.length;if(l<3)throw new j(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Vi(2,l));if(t=Ce(t,c),r!=null)throw new fe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Lt(Lt(i,"bool"),"float32"),i.rank===l-1&&(i=Ss(i,-1)),i=Ce(i,c)),n&&(t=La(t,0),i!=null&&(i=La(i,0)));const u=[];let h,d=e;const f=t.shape[0],p=dc(t);let g;i!=null&&(g=dc(i));for(let x=0;x<f;++x){const y=p[x],v=rt(()=>s(y,d));if(i==null)h=v[0],d=v[1];else{const b=rt(()=>{const w=g[x],_=Zt(mi(w),w),C=Et(X(v[0],w),X(d[0],_)),S=d.map((T,I)=>Et(X(v[1][I],w),X(T,_)));return{output:C,newStates:S}});h=b.output,d=b.newStates}a&&u.push(h)}let m;return a&&(m=Pa(u,1)),[h,m,d]})}class zo extends Se{constructor(t){super(t);let e;if(t.cell==null)throw new j("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new kv({cells:t.cell}):e=t.cell,e.stateSize==null)throw new j("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Cn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Vi(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){_0(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let i;if(this.returnSequences?i=[t[0],t[1],n]:i=[t[0],n],this.returnState){const r=[];for(const o of e)r.push([t[0],o]);return[i].concat(r)}else return i}computeMask(t,e){return rt(()=>{Array.isArray(e)&&(e=e[0]);const n=this.returnSequences?e:null;if(this.returnState){const i=this.states.map(r=>null);return[n].concat(i)}else return n})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new fe("Constants support is not implemented in RNN yet.");_0(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Cn({shape:[e,null,...n]});const i=[t[0]].concat(t.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ne(this.stateSpec.map(o=>o.shape[o.shape.length-1]),r))throw new j(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(o=>new Cn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){rt(()=>{if(!this.stateful)throw new or("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(n==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>$n([n,i])):this.states_=[$n([n,this.cell.stateSize])];else if(t==null)ve(this.states_),this.keptStates!=null&&(ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>$n([n,i])):this.states_[0]=$n([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):ve(this.states_);for(let i=0;i<this.states_.length;++i){const r=t[i],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[n,o];if(!Ne(r.shape,a))throw new j(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>yr(i.clone()))})}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=rM(t,n,i,this.numConstants);t=r.inputs,n=r.initialState,i=r.constants;let o=[],a=[];if(n!=null){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const c of n)this.stateSpec.push(new Cn({shape:c.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(e.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof ur){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return rt(()=>{const n=e==null?null:e.mask,i=e==null?null:e.training;let r=e==null?null:e.initialState;t=ue(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new j(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},c=oM((p,g)=>{const m=this.cell.call([p].concat(g),a);return[m[0],m.slice(1)]},t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,i);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(t){return rt(()=>{let e=$n(t.shape);return e=Yt(e,[1,2]),e=sd(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?w0(e,[1,n]):e):this.cell.stateSize>1?[w0(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===zo.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const i=e.cell,r=Hr(i,n);return new t(Object.assign(e,{cell:r}))}}zo.className="RNN";_t(zo);class Jm extends Se{}class Mv extends Jm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Dn(this.units,"units"),this.activation=Eo(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Qe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tn(t.kernelRegularizer),this.recurrentRegularizer=tn(t.recurrentRegularizer),this.biasRegularizer=tn(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=fc([1,To([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=fc([1,To([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Re(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rt(()=>{if(t=t,t.length!==2)throw new j(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const i=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mo({ones:()=>mi(t),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mo({ones:()=>mi(n),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?r=pr(X(t,o),this.kernel.read()):r=pr(t,this.kernel.read()),this.bias!=null&&(r=ji(r,this.bias.read())),a!=null&&(n=X(n,a));let l=Et(r,pr(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Io(this.activation),useBias:this.useBias,kernelInitializer:nn(this.kernelInitializer),recurrentInitializer:nn(this.recurrentInitializer),biasInitializer:nn(this.biasInitializer),kernelRegularizer:Ue(this.kernelRegularizer),recurrentRegularizer:Ue(this.recurrentRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Mv.className="SimpleRNNCell";_t(Mv);class aM extends zo{constructor(t){t.cell=new Mv(t),super(t)}call(t,e){return rt(()=>{this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return new t(e)}}aM.className="SimpleRNN";_t(aM);class Av extends Jm{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new j("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Dn(this.units,"units"),this.activation=Eo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Eo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Qe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tn(t.kernelRegularizer),this.recurrentRegularizer=tn(t.recurrentRegularizer),this.biasRegularizer=tn(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=fc([1,To([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=fc([1,To([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Re(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rt(()=>{if(t=t,t.length!==2)throw new j(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training==null?!1:e.training;let i=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mo({ones:()=>mi(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mo({ones:()=>mi(i),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=X(t,r[0]));let u=pr(t,this.kernel.read());this.useBias&&(u=ji(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=X(i,o[0]));const h=this.recurrentKernel.read(),[d,f]=Ws(h,[2*this.units,this.units],h.rank-1),p=pr(i,d),[g,m,x]=Ws(u,3,u.rank-1),[y,v]=Ws(p,2,p.rank-1);a=this.recurrentActivation.apply(Et(g,y)),l=this.recurrentActivation.apply(Et(m,v));const b=pr(X(l,i),f);c=this.activation.apply(Et(x,b));const w=Et(X(a,i),X(Et(1,sn(a)),c));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Io(this.activation),recurrentActivation:Io(this.recurrentActivation),useBias:this.useBias,kernelInitializer:nn(this.kernelInitializer),recurrentInitializer:nn(this.recurrentInitializer),biasInitializer:nn(this.biasInitializer),kernelRegularizer:Ue(this.kernelRegularizer),recurrentRegularizer:Ue(this.recurrentRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Av.className="GRUCell";_t(Av);class lM extends zo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Av(t),super(t)}call(t,e){return rt(()=>{this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}lM.className="GRU";_t(lM);class Qm extends Jm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Dn(this.units,"units"),this.activation=Eo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Eo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Qe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=tn(t.kernelRegularizer),this.recurrentRegularizer=tn(t.recurrentRegularizer),this.biasRegularizer=tn(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=fc([1,To([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=fc([1,To([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Re(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,o=this.units;i=new(e=class extends vi{apply(l,c){const u=r.apply([o]),h=new pv().apply([o]),d=r.apply([o*2]);return r_(r_(u,h),d)}},e.className="CustomInit",e)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return rt(()=>{const n=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new j(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let i=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mo({ones:()=>mi(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mo({ones:()=>mi(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=X(t,o[0]));let d=pr(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=X(i,a[0])),d=Et(d,pr(i,this.recurrentKernel.read())),this.useBias&&(d=ji(d,this.bias.read()));const[f,p,g,m]=Ws(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=Et(X(c,r),X(l,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const x=X(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Io(this.activation),recurrentActivation:Io(this.recurrentActivation),useBias:this.useBias,kernelInitializer:nn(this.kernelInitializer),recurrentInitializer:nn(this.recurrentInitializer),biasInitializer:nn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ue(this.kernelRegularizer),recurrentRegularizer:Ue(this.recurrentRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Qm.className="LSTMCell";_t(Qm);class cM extends zo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Qm(t),super(t)}call(t,e){return rt(()=>{this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}cM.className="LSTM";_t(cM);class kv extends Jm{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return rt(()=>{t=t;let n=t.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(n.splice(0,a.stateSize.length)):i.push(n.splice(0,1));i.reverse();const r=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];n=i[a],a===0?o=[t[0]].concat(n):o=[o[0]].concat(n),o=l.call(o,e),r.push(o.slice(1))}n=[];for(const a of r.slice().reverse())n.push(...a);return[o[0]].concat(n)})}build(t){_0(t)&&(t=t[0]),t=t;let e;this.cells.forEach((n,i)=>{ba(`RNNCell_${i}`,()=>{n.build(t),Array.isArray(n.stateSize)?e=n.stateSize[0]:e=n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),i={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),i)}static fromConfig(t,e,n={}){const i=[];for(const r of e.cells)i.push(Hr(r,n));return new t({cells:i})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return C0(t)}setWeights(t){const e=[];for(const n of this.cells){const i=n.weights.length,r=t.splice(i);for(let o=0;o<n.weights.length;++o)e.push([n.weights[o],r[o]])}wv(e)}}kv.className="StackedRNNCells";_t(kv);function Mo(s){const{ones:t,rate:e,training:n=!1,count:i=1,dropoutFunc:r}=s,o=()=>r!=null?r(t(),e):eE(t(),e),a=()=>rd(o,t,n);return!i||i<=1?yr(a().clone()):Array(i).fill(void 0).map(a).map(c=>yr(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var FX=globalThis&&globalThis.__rest||function(s,t){var e={};for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&t.indexOf(n)<0&&(e[n]=s[n]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,n=Object.getOwnPropertySymbols(s);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(s,n[i])&&(e[n[i]]=s[n[i]]);return e};class uM extends zo{constructor(t){if(t.unroll)throw new fe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new fe("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Cn({ndim:5})]}call(t,e){return rt(()=>{if(this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new j("ConvRNN2D cell does not support constants");const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return rt(()=>{const{stateSize:e}=this.cell,n=t.shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)],o=$n(r);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){rt(()=>{if(!this.stateful)throw new or("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)];if(n[0]==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$n(r)):this.states_=[$n(r)];else if(t==null)ve(this.states_),this.keptStates!=null&&(ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$n(r)):this.states_[0]=$n(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):ve(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=r;if(!Ne(l.shape,c))throw new j(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>yr(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:i,padding:r,strides:o,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=zi(c,i[0],r,o[0],a[0]),d=zi(u,i[1],r,o[1],a[1]);return[...t.slice(0,2),...l?[n,h,d]:[h,d,n]]}}uM.className="ConvRNN2D";class Nv extends Qm{constructor(t){const{filters:e,kernelSize:n,strides:i,padding:r,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Dn(this.filters,"filters"),this.kernelSize=Jl(n,2,"kernelSize"),this.kernelSize.forEach(l=>Dn(l,"kernelSize")),this.strides=Jl(i||1,2,"strides"),this.strides.forEach(l=>Dn(l,"strides")),this.padding=r||"valid",Xs(this.padding),this.dataFormat=o||"channelsLast",gn(this.dataFormat),this.dilationRate=Jl(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Dn(l,"dilationRate"))}build(t){var e;t=Re(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new j(`The channel dimension of the input should be defined. Found ${t[n]}`);const i=t[n],r=4,o=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends vi{apply(d,f){const p=c.apply([u]),g=Lo([u]),m=c.apply([u*2]);return fv([p,g,m])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return rt(()=>{if(t.length!==3)throw new j(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,i=t[0],r=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mo({ones:()=>mi(i),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(V,q,G)=>!q||!q[G]?V:X(q[G],V);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),f=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mo({ones:()=>mi(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let g=c(r,p,0),m=c(r,p,1),x=c(r,p,2),y=c(r,p,3);const v=3,[b,w,_,C]=Ws(this.kernel.read(),a,v),[S,T,I,M]=this.useBias?Ws(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,S,this.padding),h=this.inputConv(h,w,T,this.padding),d=this.inputConv(d,_,I,this.padding),f=this.inputConv(f,C,M,this.padding);const[$,E,A,k]=Ws(this.recurrentKernel.read(),a,v);g=this.recurrentConv(g,$),m=this.recurrentConv(m,E),x=this.recurrentConv(x,A),y=this.recurrentConv(y,k);const R=this.recurrentActivation.apply(Et(u,g)),B=this.recurrentActivation.apply(Et(h,m)),L=Et(X(B,o),X(R,this.activation.apply(Et(d,x)))),D=X(this.recurrentActivation.apply(Et(f,y)),this.activation.apply(L));return[D,D,L]})}getConfig(){const t=super.getConfig(),e=FX(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),n)}inputConv(t,e,n,i){const r=Da(t,e,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ji(r,n,this.dataFormat):r}recurrentConv(t,e){return Da(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Nv.className="ConvLSTM2DCell";_t(Nv);class hM extends uM{constructor(t){const e=new Nv(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}hM.className="ConvLSTM2D";_t(hM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rv extends Se{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,n=[];for(let i=0;i<this.noiseShape.length;++i)n.push(this.noiseShape[i]==null?e[i]:this.noiseShape[i]);return n}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t);if(0<this.rate&&this.rate<1){const i=e.training==null?!1:e.training,r=this.getNoiseShape(n);return rd(()=>eE(n,this.rate,r,this.seed),()=>n,i)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Rv.className="Dropout";_t(Rv);class dM extends Rv{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}dM.className="SpatialDropout1D";_t(dM);class $v extends Se{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Dn(this.units,"units"),this.activation=Eo(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Qe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Qe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=In(t.kernelConstraint),this.biasConstraint=In(t.biasConstraint),this.kernelRegularizer=tn(t.kernelRegularizer),this.biasRegularizer=tn(t.biasRegularizer),this.activityRegularizer=tn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Re(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Re(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t),i=j2(this.activation.getClassName());let r;return i!=null?r=pr(n,this.kernel.read(),i,this.bias?this.bias.read():null):(r=pr(n,this.kernel.read()),this.bias!=null&&(r=ji(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Io(this.activation),useBias:this.useBias,kernelInitializer:nn(this.kernelInitializer),biasInitializer:nn(this.biasInitializer),kernelRegularizer:Ue(this.kernelRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),biasConstraint:Tn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}$v.className="Dense";_t($v);class fM extends Se{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Re(t);for(const e of t.slice(1))if(e==null)throw new j(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],wo(t,1)]}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let n=ue(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){const i=[0];for(let r=2;r<n.rank;++r)i.push(r);i.push(1),n=Ce(n,i)}return g8(n)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}fM.className="Flatten";_t(fM);class pM extends Se{constructor(t){super(t),this.supportsMasking=!0,this.activation=Eo(t.activation)}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t);return this.activation.apply(n)})}getConfig(){const t={activation:Io(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}pM.className="Activation";_t(pM);class mM extends Se{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return rt(()=>(t=ue(t),p8(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}mM.className="RepeatVector";_t(mM);class gM extends Se{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",i=e.slice();let r=1,o=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(o===null)o=l;else throw new j("Can only specifiy one unknown dimension.");else r*=c}const a=wo(t);if(o!==null){if(r===0||a%r!==0)throw new j(n);i[o]=a/r}else if(a!==r)throw new j(n);return i}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t),i=n.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return Q(n,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}gM.className="Reshape";_t(gM);class xM extends Se{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Vi(1,t.dims.length+1);if(!Ne(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Cn({ndim:this.dims.length+1})]}computeOutputShape(t){t=Re(t);const e=t.slice();return this.dims.forEach((n,i)=>{e[i+1]=t[n]}),e}call(t,e){return Ce(ue(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}xM.className="Permute";_t(xM);class yM extends Se{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ue(t),i=-1;return p0(Fu(n,this.maskValue),i)}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t),i=-1,r=!0,o=p0(Fu(n,this.maskValue),i,r);return X(n,Lt(o,n.dtype))})}}yM.className="Masking";_t(yM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bM extends Se{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Xe(t.inputLength))}this.inputDim=t.inputDim,Dn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Dn(this.outputDim,"outputDim"),this.embeddingsInitializer=Qe(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=tn(t.embeddingsRegularizer),this.activityRegularizer=tn(t.activityRegularizer),this.embeddingsConstraint=In(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return rt(()=>this.maskZero?(t=ue(t),Fu(t,Ie(t))):null)}computeOutputShape(t){if(t=Re(t),this.inputLength==null)return[...t,this.outputDim];const e=Xe(this.inputLength);if(e.length!==t.length-1)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let i=0;i<e.length;++i){const r=e[i],o=t[i+1];if(r!=null&&o!=null&&r!==o)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return rt(()=>{this.invokeCallHook(t,e);let n=ue(t);n.dtype!=="int32"&&(n=tl(n,"int32"));const i=tE(this.embeddings.read(),Q(n,[n.size]));return Q(i,Re(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:nn(this.embeddingsInitializer),embeddingsRegularizer:Ue(this.embeddingsRegularizer),activityRegularizer:Ue(this.activityRegularizer),embeddingsConstraint:Tn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}bM.className="Embedding";_t(bM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class el extends Se{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new fe}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const n=t.slice(0,t.length-e.length);for(let i=0;i<e.length;++i){const r=t[t.length-e.length+i],o=e[i];if(r==null||o==null||r<0||o<0)n.push(null);else if(r===1)n.push(o);else if(o===1)n.push(r);else{if(r!==o)throw new j("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Re(t)]),t=t,t.length<2)throw new j(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=vo(e),e.length>1)throw new j(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}const i=t.map(r=>r.length);t.indexOf(null)===-1&&vo(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return rt(()=>{if(t=t,this.reshapeRequired){const n=[],i=t.map(r=>r.rank);if(i.indexOf(null)===-1){const r=To(i);for(let o of t){const a=o.rank;for(let l=0;l<r-a;++l)o=sd(o,1);n.push(o)}return this.mergeFunction(n)}else{let r=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=Q(l,[h].concat(wo(u.slice(1))));f=Ce(f,[1,0]),f=Q(f,d),n.push(f),r=!0}else if(c>1){const u=Vi(1,c).concat([0]);n.push(Ce(l,u)),r=!0}else n.push(l)}let o=this.mergeFunction(n);const a=o.rank;if(r){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=Q(Ce(Q(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Vi(0,a-1));o=Ce(o,l)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let i=1;i<t.length;++i){const r=t[i]==null?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);return n=vo(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return rt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new j("`mask` should be an Array");if(!Array.isArray(t))throw new j("`inputs` should be an Array");if(e.length!==t.length)throw new j(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(i=>i==null))return null;e=e.map(i=>i==null?i:Ss(i,0));let n=e[0];for(let i=1;i<e.length-1;++i)n=Xr(n,e[i]);return n})}}class vM extends el{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Et(e,t[n]);return e})}}vM.className="Add";_t(vM);class wM extends el{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=X(e,t[n]);return e})}}wM.className="Multiply";_t(wM);class SM extends el{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Et(e,t[n]);return X(1/t.length,e)})}}SM.className="Average";_t(SM);class _M extends el{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Fo(e,t[n]);return e})}}_M.className="Maximum";_t(_M);class CM extends el{constructor(t){super(t)}mergeFunction(t){return rt(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=zm(e,t[n]);return e})}}CM.className="Minimum";_t(CM);class TM extends el{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new j("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const i of t)if(i!=null){e=!1;break}if(e)return;const n=[];for(let i=0;i<t.length;++i){const r=t[i].slice();r.splice(this.axis,1);let o=!1;for(const a of n)if(Ne(a,r)){o=!0;break}o||n.push(r)}if(n.length>1)throw new j("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return rt(()=>fv(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new j("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),i=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(n[i]==null||r[i]==null){n[i]=null;break}n[i]+=r[i]}return n}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new j("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new j("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new j(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return rt(()=>{let n=!0;if(e.forEach(o=>{if(o!=null){n=!1;return}}),n)return null;const i=[];for(let o=0;o<t.length;++o)e[o]==null?i.push(Lt(mi(t[o]),"bool")):e[o].rank<t[o].rank?i.push(Ss(e[o],-1)):i.push(e[o]);const r=Jn(i,this.axis);return FI(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}TM.className="Concatenate";_t(TM);function eu(s,t){for(;s<0;)s+=t;return s}function LX(s,t,e){if(s.shape.length>3||t.shape.length>3)throw new fe("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),F(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),s.dtype==="complex64"||t.dtype==="complex64")throw new fe("batchDot is not implemented for complex64-type Tensors yet.");const n=s.shape.length,i=t.shape.length;e==null&&(e=[n-1,i-2]);const r=e;return rt(()=>{let o;if(n>i){o=n-i;const l=[];for(let c=0;c<o;++c)l.push(1);t=Q(t,t.shape.concat(l))}else if(i>n){o=i-n;const l=[];for(let c=0;c<o;++c)l.push(1);s=Q(s,s.shape.concat(l))}else o=0;let a;if(s.shape.length===2&&t.shape.length===2)r[0]===r[1]?a=Yt(X(s,t),r[0]):a=Yt(X(Ce(s,[1,0]),t),r[1]);else{const l=r[0]!==s.shape.length-1,c=r[1]===t.shape.length-1;a=ke(s,t,l,c)}if(o>0){let l;n>i?l=n+i-3:l=n-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=Zh(a,c)}return a.shape.length===1&&(a=Ss(a,1)),a})}class IM extends el{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){F(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new fe("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);if(e[i[0]]!==n[i[1]])throw new j(`Dimension incompatibility: ${e[i[0]]} !== ${n[i[1]]}`)}mergeFunction(t){if(t.length!==2)throw new j(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],n=t[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,o)=>eu(r,t[o].shape.length)):i=[eu(this.axes,e.shape.length),eu(this.axes,n.shape.length)],this.normalize&&(e=sp(e,i[0]),n=sp(n,i[1])),LX(e,n,i)}interpretAxes(t,e){let n;return Array.isArray(this.axes)?n=this.axes:n=[eu(this.axes,t.length),eu(this.axes,e.length)],n}computeOutputShape(t){F(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new fe("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);e.splice(i[0],1),n.splice(i[1],1),n.splice(0,1);const r=e.concat(n);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}IM.className="Dot";_t(IM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EM extends Se{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t);return rd(()=>Et(qm(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}EM.className="GaussianNoise";_t(EM);class MM extends Se{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rt(()=>{this.invokeCallHook(t,e);const n=ue(t);return this.rate>0&&this.rate<1?rd(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return X(n,qm(n.shape,1,r))},()=>n,e.training||!1):n})}}MM.className="GaussianDropout";_t(MM);class AM extends Se{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ue(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rt(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return rd(()=>{const r=ue(t),o=1.6732632423543772,a=1.0507009873554805,l=-o*a;let c=Za(Bm(n),this.rate);c=tl(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=Et(X(r,c),X(Et(c,-1),l));return Et(X(d,u),h)},()=>ue(t),e.training||!1)}return t})}}AM.className="AlphaDropout";_t(AM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ou(s,t,e,n,i,r=.001){let o;if(s.rank===2)o=vV(s,t,e,n,i,r);else if(s.rank===3)o=SV(s,t,e,n,i,r);else if(s.rank===4)o=CV(s,t,e,n,i,r);else throw new fe(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return o}function PX(s,t,e,n,i=.001){return rt(()=>{const r=Sb(s,n),o=r.mean,a=r.variance;return[Ou(s,o,a,e,t,i),o,a]})}function OX(s,t,e,n,i=.001){return rt(()=>{const r=Sb(s,n),o=r.mean,a=r.variance,l=[];for(const p of Vi(0,s.rank))n.indexOf(p)!==-1?l.push(1):l.push(s.shape[p]);const c=Q(o,l),u=Q(a,l),h=t==null?null:Q(t,l),d=e==null?null:Q(e,l);return[Ou(s,c,u,d,h,i),o,a]})}function zX(s,t,e,n,i=.001){return Ne(n.slice().sort(),Vi(0,s.rank-1))?PX(s,t,e,n,i):OX(s,t,e,n,i)}class kM extends Se{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Qe(t.betaInitializer||"zeros"),this.gammaInitializer=Qe(t.gammaInitializer||"ones"),this.movingMeanInitializer=Qe(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Qe(t.movingVarianceInitializer||"ones"),this.betaConstraint=In(t.betaConstraint),this.gammaConstraint=In(t.gammaConstraint),this.betaRegularizer=tn(t.betaRegularizer),this.gammaRegularizer=tn(t.gammaRegularizer)}build(t){t=Re(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(n==null)throw new j(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Cn({ndim:t.length,axes:{[e]:n}})];const i=[n];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return rt(()=>{const n=e.training==null?!1:e.training,i=ue(t),r=i.shape,o=r.length,a=Vi(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=za(1,o);c[l]=r[l];const u=a.slice();u.sort();const h=!Ne(u,Vi(0,o).slice(0,o-1)),d=()=>{if(h){const y=Q(this.movingMean.read(),c),v=Q(this.movingVariance.read(),c),b=this.center?Q(this.beta.read(),c):null,w=this.scale?Q(this.gamma.read(),c):null;return Ou(i,y,v,b,w,this.epsilon)}else return Ou(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[f,p,g]=zX(i,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(y,v,b)=>{rt(()=>{const w=1-b,_=y.read(),C=X(Zt(_,v),w);y.write(Zt(_,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:nn(this.betaInitializer),gammaInitializer:nn(this.gammaInitializer),movingMeanInitializer:nn(this.movingMeanInitializer),movingVarianceInitializer:nn(this.movingVarianceInitializer),betaRegularizer:Ue(this.betaRegularizer),gammaRegularizer:Ue(this.gammaRegularizer),betaConstraint:Tn(this.betaConstraint),gammaConstraint:Tn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}kM.className="BatchNormalization";_t(kM);class NM extends Se{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Qe(t.betaInitializer||"zeros"),this.gammaInitializer=Qe(t.gammaInitializer||"ones"),this.betaRegularizer=tn(t.betaRegularizer),this.gammaRegularizer=tn(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Re(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==vo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(r=>t[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(t,e){const n=ue(t),i=n.shape,r=i.length;return rt(()=>{let{mean:a,variance:l}=Sb(n,this.axis,!0);const c=za(1,r);for(const g of this.axis)c[g]=i[g];const u=g=>g!=null&&g.shape.length!==r?Q(g,c):g;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(f.push(i[g]),p.push(1)):(f.push(1),p.push(i[g]));return a=Di(a,f),l=Di(l,f),h!=null&&(h=Di(h,p)),d!=null&&(d=Di(d,p)),Ou(n,a,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:nn(this.betaInitializer),gammaInitializer:nn(this.gammaInitializer),betaRegularizer:Ue(this.betaRegularizer),gammaRegularizer:Ue(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}NM.className="LayerNormalization";_t(NM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function BX(s,t,e){return rt(()=>{if(s.rank!==4)throw new j(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new j("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Wi()),e!=="channelsLast"&&e!=="channelsFirst")throw new j(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],_b(s,n)})}class RM extends Se{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Wi():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new j(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new j(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new j(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Cn({ndim:4})]}computeOutputShape(t){t=Re(t);let e,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],e,n]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],e,n,t[3]])}call(t,e){return rt(()=>BX(ue(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}RM.className="ZeroPadding2D";_t(RM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tg(s,t,e,n,i,r){return rt(()=>{gn(i),Y2(r),Xs(n),e==null&&(e=[1,1]),n==null&&(n="valid"),i==null&&(i=Wi()),r==null&&(r="max"),s=Ev(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=wb(s,t,e,a):o=ub(s,t,e,a),i==="channelsFirst"&&(o=Ce(o,[0,3,1,2])),o})}function $M(s,t,e,n,i,r){return rt(()=>{gn(i),Y2(r),Xs(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),i==null&&(i=Wi()),r==null&&(r="max"),s=ZE(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=oG(s,t,e,a):o=hV(s,t,e,a),i==="channelsFirst"&&(o=Ce(o,[0,4,1,2,3])),o})}class DM extends Se{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new j(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Dn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new j(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Dn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Xs(this.padding),this.inputSpec=[new Cn({ndim:3})]}computeOutputShape(t){t=Re(t);const e=zi(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return rt(()=>{this.invokeCallHook(t,e),t=sd(ue(t),2);const n=this.poolingFunction(ue(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Zh(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class FM extends DM{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return gn(r),Xs(i),tg(t,e,n,i,r,"max")}}FM.className="MaxPooling1D";_t(FM);class LM extends DM{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return gn(r),Xs(i),tg(t,e,n,i,r,"avg")}}LM.className="AveragePooling1D";_t(LM);class PM extends Se{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new j(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Dn(this.poolSize,"poolSize"),Dn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),Xs(this.padding),this.inputSpec=[new Cn({ndim:4})]}computeOutputShape(t){t=Re(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=zi(e,this.poolSize[0],this.padding,this.strides[0]),n=zi(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return rt(()=>(this.invokeCallHook(t,e),this.poolingFunction(ue(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class OM extends PM{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return gn(r),Xs(i),tg(t,e,n,i,r,"max")}}OM.className="MaxPooling2D";_t(OM);class zM extends PM{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return gn(r),Xs(i),tg(t,e,n,i,r,"avg")}}zM.className="AveragePooling2D";_t(zM);class BM extends Se{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new j(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Dn(this.poolSize,"poolSize"),Dn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),Xs(this.padding),this.inputSpec=[new Cn({ndim:5})]}computeOutputShape(t){t=Re(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=zi(e,this.poolSize[0],this.padding,this.strides[0]),n=zi(n,this.poolSize[1],this.padding,this.strides[1]),i=zi(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,i]:[t[0],e,n,i,t[4]]}call(t,e){return rt(()=>(this.invokeCallHook(t,e),this.poolingFunction(ue(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class UM extends BM{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return gn(r),Xs(i),$M(t,e,n,i,r,"max")}}UM.className="MaxPooling3D";_t(UM);class VM extends BM{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return gn(r),Xs(i),$M(t,e,n,i,r,"avg")}}VM.className="AveragePooling3D";_t(VM);class WM extends Se{constructor(t){super(t),this.inputSpec=[new Cn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new fe}}class GM extends WM{constructor(t){super(t||{})}call(t,e){return rt(()=>{const n=ue(t);return dn(n,1)})}}GM.className="GlobalAveragePooling1D";_t(GM);class HM extends WM{constructor(t){super(t||{})}call(t,e){return rt(()=>{const n=ue(t);return Oi(n,1)})}}HM.className="GlobalMaxPooling1D";_t(HM);class qM extends Se{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),this.inputSpec=[new Cn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new fe}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class XM extends qM{call(t,e){return rt(()=>{const n=ue(t);return this.dataFormat==="channelsLast"?dn(n,[1,2]):dn(n,[2,3])})}}XM.className="GlobalAveragePooling2D";_t(XM);class jM extends qM{call(t,e){return rt(()=>{const n=ue(t);return this.dataFormat==="channelsLast"?Oi(n,[1,2]):Oi(n,[2,3])})}}jM.className="GlobalMaxPooling2D";_t(jM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KM extends Se{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const i=e.layer,r=Hr(i,n);delete e.layer;const o={layer:r};return Object.assign(o,e),new t(o)}}class YM extends KM{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Re(t),t.length<3)throw new j(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Re(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),i=t[1];return[n[0],i].concat(n.slice(1))}call(t,e){return rt(()=>(t=ue(t),oM((o,a)=>[ue(this.layer.call(o,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}YM.className="TimeDistributed";_t(YM);function UX(s){Qa(c8,"BidirectionalMergeMode",s)}const VX="concat";class ZM extends KM{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Hr(n),e.goBackwards=e.goBackwards!==!0;const i={};if(i.className=t.layer.getClassName(),i.config=e,this.backwardLayer=Hr(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?VX:t.mergeMode,UX(this.mergeMode),t.weights)throw new fe("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let n,i,r;return this.returnState&&(r=e.slice(1)),n=e[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,i=[n]):this.mergeMode==null?i=[n,n.slice()]:i=[n],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):fs(i)}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=rM(t,n,i,this.numConstants);if(t=r.inputs,n=r.initialState,i=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&i==null)return super.apply(t,e);const o=[],a=[];if(n!=null){const c=n.length;if(c%2>0)throw new j("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const u=n.map(h=>new Cn({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(i!=null)throw new fe("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof ur;for(const c of o)if(c instanceof ur!==l)throw new j("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return rt(()=>{const n=e.initialState;let i,r;if(n==null)i=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);i=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let o;this.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=La(r,1));let a;return this.mergeMode==="concat"?a=fv([i,r]):this.mergeMode==="sum"?a=Et(i,r):this.mergeMode==="ave"?a=X(.5,Et(i,r)):this.mergeMode==="mul"?a=X(i,r):this.mergeMode==null&&(a=[i,r]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ba(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ba(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[e,e]:n=e:this.mergeMode==null?n=[null,null]:n=null,this.returnState){const r=this.forwardLayer.states.map(o=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Hr(e.layer);if(delete e.layer,e.numConstants!=null)throw new fe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=e;return i.layer=n,new t(i)}}ZM.className="Bidirectional";_t(ZM);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class JM extends Se{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return rt(()=>(t=ue(t),t.dtype!=="float32"&&(t=tl(t,"float32")),Et(X(t,this.scale),this.offset)))}}JM.className="Rescaling";_t(JM);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const WX=["bilinear","nearest"],__=new Set(WX);class QM extends Se{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(__.has(t.interpolation))this.interpolation=t.interpolation;else throw new j(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Re(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return rt(()=>{const n=[this.height,this.width];if(this.interpolation==="bilinear")return Vl.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Vl.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...__]} are supported`)})}}QM.className="Resizing";_t(QM);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GX(s,t,e,n){let i=ue(s);if(i.dtype!=="int32"&&(i=tl(i,"int32")),t==="int")return i;const r=i.shape;if(i.rank===0&&(i=Ss(i,-1)),t==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=Ss(i,-1)),i.rank>2)throw new j(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${i.rank}.`);const o=["multiHot","oneHot"].includes(t),a=i;let l;if(typeof n<"u"&&t==="count"?l=HS(a,n,e,o):l=HS(a,[],e,o),t!=="tfIdf")return l;if(n)return X(l,n);throw new j("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tA extends Se{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Re(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return rt(()=>{t=ue(t),t.dtype!=="int32"&&(t=tl(t,"int32"));let n;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new j(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);n=ue(e.countWeights)}const i=Oi(t),r=Yf(t),o=qs(this.numTokens,i).bufferSync().get(0),a=Za(r,0).bufferSync().get(0);if(!(o&&a))throw new j(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return GX(t,this.outputMode,this.numTokens,n)})}}tA.className="CategoryEncoding";_t(tA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lp(s){return new $v(s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HX=lt();HX.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var C_;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(C_||(C_={}));var T_;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(T_||(T_={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var I_;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(I_||(I_={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&F(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX=m2;class eg extends sy{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new MT(this,nr())}nextDataId(){return eg.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,lt().get("IS_NODE")&&Os(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:t,dtype:n,refCount:1}),i}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Yu(n[0])){const r=n.map(o=>bo(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return{dataId:i,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,n,i,r){this.data.set(t,{values:e,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if(e==="complex64"){const i=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return jr(i,r)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>Co(i));return me(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return me(t.shape,t.dtype,e)}makeOutput(t,e,n){return nr().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=ds();return t(),{kernelMs:ds()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Xt([t],"where");const e=this.readSync(t.dataId);return qX(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}eg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(s){const t=new Float32Array(s.length);for(let e=0;e<s.length;++e)t[e]=Math.abs(s[e]);return t}const XX=s=>{const{x:t}=s.inputs,e=s.backend;Xt(t,"abs");let n=new Float32Array(ft(t.shape));const i=e.data.get(t.dataId).values;return n=eA(i),e.makeOutput(n,t.shape,t.dtype)},jX={kernelName:kp,backendName:"cpu",kernelFunc:XX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(s){return(t,e,n,i,r)=>{const o=de(t,e),a=o.length,l=re(o),c=ft(o),u=Hn(r,c),h=t.length,d=e.length,f=re(t),p=re(e),g=uc(t,o),m=uc(e,o);if(g.length+m.length===0)for(let x=0;x<u.length;++x)u[x]=s(n[x%n.length],i[x%i.length]);else for(let x=0;x<u.length;++x){const y=Ic(x,a,l),v=y.slice(-h);g.forEach(C=>v[C]=0);const b=dr(v,h,f),w=y.slice(-d);m.forEach(C=>w[C]=0);const _=dr(w,d,p);u[x]=s(n[b],i[_])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",r),imag:e.makeTensorInfo(i.shape,"float32",o)},a}const KX={kernelName:fy,backendName:"cpu",kernelFunc:_s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(s,t,e="float32"){if(e==="complex64"){const i=cp(s,t,"float32"),r=cp(s,t,"float32");return _s({inputs:{real:i,imag:r},backend:s})}const n=Qn(ft(t),e);return s.makeTensorInfo(t,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vr(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const YX={kernelName:yh,backendName:"cpu",kernelFunc:vr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.real,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const ZX={kernelName:Ly,backendName:"cpu",kernelFunc:Ba};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(s,t,e,n){if(n==="int32"){const i=Int32Array.from(s);return[t,"int32",i]}if(n==="bool"){const i=Ya([0],e),[r,o]=bn((a,l)=>a!==l?1:0)(t,[],s,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function Ao(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return vr({inputs:{x:i},backend:e});const u=cp(e,i.shape,i.dtype),h=Ao({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),d=_s({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=Ba({inputs:{input:i},backend:e}),h=Ao({inputs:{x:u},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(u),h}if(!NT(i.dtype,r)){const u=vr({inputs:{x:i},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:r}}const o=e.data.get(i.dataId).values,[a,l,c]=nA(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}const JX={kernelName:rh,backendName:"cpu",kernelFunc:Ao};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(s,t,e,n){return e==null?({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;Xt([o,a],s);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?Oa(c):c,d=o.dtype==="string"?Oa(u):u,f=n||o.dtype,[p,g]=t(o.shape,a.shape,h,d,f);return l.makeTensorInfo(g,f,p)}:({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=Ao({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,g=Ao({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.real,y=m.complexTensorInfos.imag,v=l.data.get(x.dataId).values,b=l.data.get(y.dataId).values,[w,_,C]=e(o.shape,a.shape,f,p,v,b),S=l.makeTensorInfo(C,"float32",w),T=l.makeTensorInfo(C,"float32",_),I=_s({inputs:{real:S,imag:T},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(S),l.disposeIntermediateTensorInfo(T),I}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=n||o.dtype,[d,f]=t(o.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function Dv(s){return(t,e,n,i,r,o)=>{const a=de(t,e),l=ft(a),c=a.length,u=re(a),h=Hn("float32",l),d=Hn("float32",l),f=uc(t,a),p=uc(e,a),g=jr(n,i),m=jr(r,o),x=t.length,y=re(t),v=e.length,b=re(e);if(f.length+p.length===0)for(let w=0;w<h.length;w++){const _=w%g.length,C=w%m.length,S=s(g[_*2],g[_*2+1],m[C*2],m[C*2+1]);h[w]=S.real,d[w]=S.imag}else for(let w=0;w<h.length;w++){const _=Ic(w,c,u),C=_.slice(-x);f.forEach($=>C[$]=0);const S=dr(C,x,y),T=_.slice(-v);p.forEach($=>T[$]=0);const I=dr(T,v,b),M=s(g[S*2],g[S*2+1],m[I*2],m[I*2+1]);h[w]=M.real,d[w]=M.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sA=bn((s,t)=>s+t),QX=Dv((s,t,e,n)=>({real:s+e,imag:t+n})),mc=On(Ec,sA,QX),tj={kernelName:Ec,backendName:"cpu",kernelFunc:mc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fv(s,t,e,n,i){const r=ft(n),o=Qn(i,e);for(let a=0;a<s.length;a++){const l=s[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=t[a]:o[l]+=1)}return o}function iA(s,t,e,n=!1){const i=s.shape[0],r=s.shape[1],o=me([i,e],t.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const c=s.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(n?o.set(1,a,c):t.size>0?o.set(o.get(a,c)+t.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(s){return(t,e,n)=>{const i=Hn(e,t.length);for(let r=0;r<t.length;++r)i[r]=s(t[r],n);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Xt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=ft(o.shape),u=e||o.dtype,h=yn(u,c);for(let d=0;d<c;++d)h[d]=t(l[d],i);return a.makeTensorInfo(o.shape,u,h)}}function $c(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Xt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=e||o.dtype,u=t(l,c,i);return a.makeTensorInfo(o.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA=Bo(s=>Math.ceil(s)),ej=$c(oh,rA),nj={kernelName:oh,backendName:"cpu",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(s,t,e,n){const i=yn(e,ft(t));if(n&&e!=="string"){let r=0;s.forEach(o=>{const a=ft(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;s.forEach(o=>{const a=e==="string"?Oa(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*t[1]+r;for(let h=0;h<o.shape[1];++h)i[u+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aA=bn((s,t)=>s===t?1:0),lA=On(Hp,aA,null,"bool"),sj={kernelName:Hp,backendName:"cpu",kernelFunc:lA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA=Bo(s=>Math.exp(s)),uA=$c(fh,cA,"float32"),ij={kernelName:fh,backendName:"cpu",kernelFunc:uA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA=Bo(s=>Math.expm1(s)),rj=$c(ph,hA),oj={kernelName:ph,backendName:"cpu",kernelFunc:rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dA=Bo(s=>Math.floor(s)),aj=$c(mh,dA),lj={kernelName:mh,backendName:"cpu",kernelFunc:aj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(s,t,e,n,i,r,o,a,l){const c=me([n,r],e);for(let u=0;u<n;u++){const h=[];let d=0;for(let f=0;f<i;f++){const p=s[u*i+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)c.values[u*r+f]=t.get(...t.indexToLoc(d*r+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(s,t,e){const n=me(e,s.dtype);for(let i=0;i<n.size;++i){const o=n.indexToLoc(i).slice(),a=o[0],l=o[2],c=t.locToIndex([a,l]);o[2]=t.values[c];const u=s.locToIndex(o);0<=u&&u<s.values.length&&(n.values[i]=s.values[u])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mA=bn((s,t)=>s>t?1:0),cj=On(Kp,mA,null,"bool"),uj={kernelName:Kp,backendName:"cpu",kernelFunc:cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA=bn((s,t)=>s>=t?1:0),hj=On(xh,gA,null,"bool"),dj={kernelName:xh,backendName:"cpu",kernelFunc:hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xA=bn((s,t)=>s<t?1:0),fj=On(Zp,xA,null,"bool"),pj={kernelName:Zp,backendName:"cpu",kernelFunc:fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yA=bn((s,t)=>s<=t?1:0),mj=On(Jp,yA,null,"bool"),gj={kernelName:Jp,backendName:"cpu",kernelFunc:mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(s,t,e){const n=(t-s)/(e-1),i=Qn(e,"float32");i[0]=s;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vA=Bo(s=>Math.log(s)),xj=$c(Sh,vA),yj={kernelName:Sh,backendName:"cpu",kernelFunc:xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(s,t,e,n){const i=Hn(n,ft(e));for(let r=0;r<i.length;++r){const o=r*t;let a=s[o];for(let l=0;l<t;++l){const c=s[o+l];(Number.isNaN(c)||c>a)&&(a=c)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SA=bn((s,t)=>Math.max(s,t)),bj=On(Ch,SA),vj={kernelName:Ch,backendName:"cpu",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _A=bn((s,t)=>Math.min(s,t)),wj=On(Th,_A),Sj={kernelName:Th,backendName:"cpu",kernelFunc:wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lv=bn((s,t)=>s*t),_j=Dv((s,t,e,n)=>({real:s*e-t*n,imag:s*n+t*e})),ng=On(Eh,Lv,_j),Cj={kernelName:Eh,backendName:"cpu",kernelFunc:ng};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(s,t,e){const n=Ro(-1,e);return Lv([],t,n,s,e)}function Tj(s){const{inputs:t,backend:e}=s,{x:n}=t;Xt(n,"neg");const i=e.data.get(n.dataId).values,[r,o]=CA(i,n.shape,n.dtype);return e.makeTensorInfo(o,n.dtype,r)}const Ij={kernelName:cm,backendName:"cpu",kernelFunc:Tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TA=bn((s,t)=>s!==t?1:0),Ej=On(um,TA,null,"bool"),Mj={kernelName:um,backendName:"cpu",kernelFunc:Ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(s,t,e,n,i){const r=t.length,o=ft(t),a=re(t),l=re(i),c=Hn(e,ft(i));for(let u=0;u<o;++u){const h=Ic(u,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[n[p]];const f=dr(d,r,l);c[f]=s[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(s){const{inputs:t,attrs:e,backend:n}=s,{x:i}=t,{perm:r}=e;Xt(i,"transpose");const o=i.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=i.shape[r[h]];const l=n.data.get(i.dataId).values,c=Pv(l,i.shape,i.dtype,r,a);return{dataId:n.write(c,a,i.dtype),shape:a,dtype:i.dtype}}const Aj={kernelName:Kl,backendName:"cpu",kernelFunc:gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(s,t,e,n){const[i,r]=Pn(s,n),o=Ms(t,"int32"),a=Qn(ft(i),o),l=ft(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];a[c]=h}return{outVals:a,outShape:i,outDtype:o}}function kj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Xt(i,"prod");const a=i.shape.length,l=ge(r,i.shape),c=rn(l,a);let u=l,h=i;const d=[];c!=null&&(h=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),d.push(h),u=mn(u.length,a));const f=e.data.get(h.dataId).values,{outVals:p,outShape:g,outDtype:m}=IA(h.shape,h.dtype,f,u);let x=g;return o&&(x=pn(g,l)),d.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.makeTensorInfo(x,m,p)}const Nj={kernelName:gm,backendName:"cpu",kernelFunc:kj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(s,t,e){s.forEach((n,i)=>{if(n<0||n>=e){const r=Ic(i,t.length,re(t)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${e})`)}})}function $j(s,t){for(let e=0;e<s.length;++e){const n=s[e],i=e===s.length-1?t:s[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function Dj(s,t,e,n){const i=[];let r=0;const o=t.length-1+e.length,a=new Array(o).fill(null).map(()=>[0]);$j(e,n);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<s.length;++c){let u=s[c],h=s[c]+1;for(let d=0;d<e.length;++d){const f=e[d],p=d+t.length-1;if(p>=0){const g=a[p],m=g[g.length-1]-f[u];for(let x=u;x<h;++x)a[p].push(f[x+1]+m)}u=f[u],h=f[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:i,numValues:r}}function Fj(s){const t=[];for(let e=0;e<s.length;++e){const n=s[e].length,i=yn("int32",n);t.push(i),s[e].forEach((r,o)=>i[o]=r)}return t}function E_(s,t){const e=s.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<s.length;n++)e[t-1]*=s[n];return e}function Lj(s,t,e,n,i,r){const o=E_(t,2)[1],a=E_(r,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let h=0;h<n;++h)i[l*a+h]=s[u*o+h];++l}}function Pj(s,t,e,n,i){const r=t.slice();r[0]=i;const o=yn(e,ft(r)),a=s.length,l=a===0?0:a/t[0];return Lj(s,t,n,l,o,r),[o,r]}function EA(s,t,e,n,i,r,o,a){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(Rj(r,o,l),n.length===0)throw new Error("params.rank must be nonzero");const c=n[0],{outSplits:u,valueSlices:h,numValues:d}=Dj(r,o,s,c),f=Fj(u),p=Pj(e,n,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=2147483647;function MA(s,t,e,n,i,r,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=i.length===0,c=o.length===0,u=[];a||u.push(t[0]),l||u.push(i[0]),c||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=yn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const x=a?s[0]:s[m],y=l?n[0]:n[m],v=c?r[0]:r[m];if(v===0)throw new Error("Requires delta != 0");let b;if(v>0&&y<x||v<0&&y>x)b=0;else if(b=Math.ceil(Math.abs((y-x)/v)),b>M_)throw new Error(`Requires ((limit - start) / delta) <= ${M_}`);d[m+1]=d[m]+b}const f=d[h],p=yn(e,f);let g=0;for(let m=0;m<h;++m){const x=d[m+1]-d[m];let y=a?s[0]:s[m];const v=c?r[0]:r[m];for(let b=0;b<x;++b)p[g++]=y,y+=v}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Js=Ai;class up{constructor(t,e,n,i,r,o,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=w2(u),this.raggedRank=S2(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Js.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Js.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Js.VALUE_ROWIDS:return up.getMaxWidthValueRowID(e);case Js.ROW_SPLITS:return up.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Js[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let n=0;for(let i=0;i<e-1;++i){const r=t[i+1]-t[i];r>n&&(n=r)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let n=0,i=t[0],r=0;for(let o=1;o<e;++o){const a=t[o];a!==i&&(i=a,r=Math.max(o-n,r),n=o)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return k_(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;_2(n,e);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=v2(this.raggedRank,i,e);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,e,n){const i=Math.min(t,n),r=[];let o=0;for(let a=0;a<i;++a,o+=e)r.push(o);for(let a=i;a<t;++a)r.push(-1);return F(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,n,i){const r=t.length,o=[];for(let a=0;a<r-1;++a){const l=t[a+1]-t[a];let c=Math.min(i,l),u=e[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=n;for(let h=0;h<l-c;++h)o.push(-1)}if(r>0&&o.length!==t[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,i){const r=t.length,o=[];if(r===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];o.push(c);for(let u=1;u<r;++u){const h=t[u];if(h===l)c>=0&&(++a,a<i?c+=n:c=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,i){const r=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Js.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,i);case Js.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,n,i);default:throw new Error(`Unsupported partition type: ${Js[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Js.FIRST_DIM_SIZE:return t[0];case Js.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Js.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Js[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*n[l+1];const r=k_(n,!1),o=yn(this.valuesDType,ft(r));if(i[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(e,i[0],n[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,i[c],n[c]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(t,e,n,i){if(n.length===0)return;const r=this.values,o=n;let a=i.slice();a=a.slice(t+1);const l=ft(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;rt(()=>{const g=Q(u,p);u=bu(g,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let g=p<c?e[p]:-1;if(g===f){++f;continue}if(d<f){const m=r.subarray(h*l),x=o.subarray(d*l),y=(f-d)*l;A_(x,m,y)}if(p>=c){const m=n.length;g=Math.floor(m/l)}if(g>f)if(this.defaultValue.length===1)o.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){const m=o.slice(f*l);A_(m,u,l),++f}g<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function A_(s,t,e){for(let n=0;n<e;n++)s[n]=t[n]}function k_(s,t){const e=[];for(let n of s){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function AA(s,t,e,n,i,r,o,a,l,c){return new up(s,t,e,n,i,r,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(s,t,e,n){const i=s===t,r=s<t&&e<0,o=t<s&&e>1;if(i||r||o)return Qn(0,n);const a=Math.abs(Math.ceil((t-s)/e)),l=Qn(a,n);t<s&&e===1&&(e=-1),l[0]=s;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NA=Bo(s=>1/Math.sqrt(s)),Oj=$c($h,NA),zj={kernelName:$h,backendName:"cpu",kernelFunc:Oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wl(s,t,e,n,i,r,o,a,l,c){const u=[n/i,i],h=s.values,d=t.values;if(n===0)return me(e,t.dtype);const f=me(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const g=[];let m=0;for(let x=0;x<o;x++){const y=h[p*o+x];g.push(y),m+=y*a[x]}if(m<0||m>=n/i)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let x=0;x<i;x++)c?f.values[m*i+x]+=d[p*i+x]:f.values[m*i+x]=t.rank===0?d[0]:d[p*i+x]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj=Bo(s=>1/(1+Math.exp(-s))),RA=Oe(Oh,s=>1/(1+Math.exp(-s))),Uj={kernelName:Oh,backendName:"cpu",kernelFunc:RA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(s,t,e,n,i){const r=ob(n,t,e),o=ft(e),a=re(n);if(r){const h=ab(t,a);return i==="string"?s.slice(h,h+o):s.subarray(h,h+o)}const l=i==="string"?Oa(s):s,c=me(n,i,l),u=me(e,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,g)=>p+t[g]);u.set(c.get(...f),...d)}return i==="string"?W2(u.values):u.values}function Ua(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n;Xt(i,"slice");const[a,l]=Dm(i,r,o);ib(i,a,l);const c=e.data.get(i.dataId).values,u=$A(c,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,u)}const Vj={kernelName:Sm,backendName:"cpu",kernelFunc:Ua};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(s,t,e,n,i,r,o){const a=t[0],l=r[0],c=new Array(l),u=new Array(a),h=t[1];if(l===0){if(a!==0)throw new Error(k2(a));const m=yn(e,0),x=yn(i,0);return[m,[0,h],x,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const x=s[m*h];if(x<0)throw new Error(N2(m,x));if(x>=l)throw new Error(R2(m,x,l));++p[x],d=d&&x>=f,f=x}let g=!0;for(let m=0;m<l;++m){const x=p[m]===0;c[m]=x,g=g&&!x,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(g&&d){const m=s,x=n;for(let y=0;y<a;++y)u[y]=y;return[m,[a,h],x,c,u]}else{const m=p[l-1],x=yn(e,m*h),y=yn(i,m),v=new Array(l).fill(0);for(let b=0;b<a;++b){const w=s[b*h],_=v[w],C=(w===0?0:p[w-1])+_;v[w]++;for(let S=0;S<h;++S)x[C*h+S]=s[b*h+S];y[C]=n[b],u[b]=C}for(let b=0;b<l;++b)if(v[b]===0){const _=b===0?0:p[b-1];x[_*h+0]=b;for(let C=1;C<h;++C)x[_*h+C]=0;y[_]=o}return[x,[m,h],y,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(s,t,e,n,i){const r=ft(n),o=t[0],a=i.length,l=[];let c=1,u=-1;for(let m=0;m<a;++m){const x=i[m];if(x===-1){if(u!==-1)throw new Error($2(u,m));u=m,l.push(1)}else{if(x<0)throw new Error(D2(m,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(F2());const m=Math.trunc(r/c);if(c*m!==r)throw new Error(L2(n,l));l[u]=m}if(ft(l)!==r)throw new Error(P2(n,l));const d=n.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*n[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const g=yn(e,o*a);for(let m=0;m<o;++m){let x=0;for(let y=0;y<d;++y)x+=s[m*d+y]*f[y];for(let y=0;y<a;++y)g[m*a+y]=Math.trunc(x/p[y]),x%=p[y]}return[g,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(s,t,e,n,i,r=!1,o=0){const a=n.length,l=[t[0],s.length/t[0]],c=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(b0());const d=t.slice();d[0]=h;const f=d.reduce((v,b)=>v*b,1),p=yn(e,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(b0());let g=0,m=1,x=0,y=i[g];for(;;){let v=0;if(m<a){if(v=i[m],y===v){++m;continue}if(y>=v)throw new Error(O2())}if(y<0||y>=h)throw new Error(z2(y,h));y>x&&p.fill(o,x*c,y*c);for(let b=g;b<m;++b){const w=n[b];if(w<0||w>=l[0])throw new Error(B2(b,n[b],l[0]));for(let _=0;_<c;_++)p[y*c+_]+=s[w*c+_]}if(r)for(let b=0;b<c;b++)p[y*c+b]/=m-g;if(g=m,++m,x=y+1,y=v,m>a)break}return x<h&&p.fill(o,x*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj=Bo(s=>Math.sqrt(s)),Gj=Oe(Bh,s=>Math.sqrt(s)),Hj={kernelName:Bh,backendName:"cpu",kernelFunc:Gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA=bn((s,t)=>{const e=s-t;return e*e}),qj=On(Uh,LA),Xj={kernelName:Uh,backendName:"cpu",kernelFunc:qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(s,t,e,n){const i=me(s,t.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*e[l]+n[l];i.set(t.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jj{constructor(t,e,n,i,r,o){this.separator=bo(t),this.nGramWidths=e,this.leftPad=bo(n),this.rightPad=bo(i),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=o-(c+u),d=e+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let y=0;y<h;++y)f+=t[d+y].length;f+=u*this.rightPad.length;const p=c+u+h-1;f+=p*this.separator.length,n[i+a]=new Uint8Array(f);const g=n[i+a];let m=0;const x=y=>y.forEach(v=>g[m++]=v);for(let y=0;y<c;++y)x(this.leftPad),x(this.separator);for(let y=0;y<h-1;++y)x(t[d+y]),x(this.separator);if(h>0){x(t[d+h-1]);for(let y=0;y<u;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<u-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){const n=t.length,i=e.length;if(i>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=e[c]>=l;if(u=u&&e[c]<=n,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${n}]`);l=e[c]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=i-1,o=yn("int32",i);if(n===0||i===0){const l=new Array(n);for(let c=0;c<=r;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[r]);for(let l=0;l<r;++l){const c=e[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=e[l+1]-e[l],f=this.getNumNGrams(d,h);this.createNGrams(t,c,a,u,f,h),u+=f}),this.preserveShort&&u===o[l]){const h=e[l+1]-e[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(t,c,a,u,f,d)}}return[a,o]}}function OA(s,t,e,n,i,r,o,a){return new jj(e,n,i,r,o,a).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(s,t,e,n){if(!s.length)return;if(t.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(t.length===1){const r=t[0];let o=s.indexOf(r);for(;o!==-1;){const a=s.subarray(0,o);(!e||a.length!==0)&&n.push(a),s=s.subarray(o+1),o=s.indexOf(r)}(!e||s.length!==0)&&n.push(s);return}let i=0;for(let r=0;r<s.length+1;r++)if(r===s.length||t.indexOf(s[r])!==-1){const o=s.subarray(i,r);(!e||o.length!==0)&&n.push(o),i=r+1}}function zA(s,t,e){const n=s.length,i=[];let r=0,o=0;const a=new Array(n);for(let d=0;d<n;++d){const f=i.length;Kj(s[d],t,e,i);const p=i.length-f;a[d]=p,r+=p,o=Math.max(o,p)}const l=yn("int32",r*2),c=new Array(r),u=[n,o];let h=0;for(let d=0;d<n;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(s,t){const e=yn("int32",s.length);for(let n=0;n<s.length;++n)e[n]=w4(s[n]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA=bn((s,t)=>s-t),Yj=Dv((s,t,e,n)=>({real:s-e,imag:t-n})),zv=On(Vh,UA,Yj),Zj={kernelName:Vh,backendName:"cpu",kernelFunc:zv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(s,t){const e=new Array(s.rank);for(let i=0;i<e.length;i++)e[i]=s.shape[i]*t[i];const n=me(e,s.dtype);for(let i=0;i<n.values.length;++i){const r=n.indexToLoc(i),o=new Array(s.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%s.shape[l];const a=s.locToIndex(o);n.values[i]=s.values[a]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uu=(s,t)=>{const e=t.value-s.value;return e===0?s.index-t.index:e};function WA(s,t,e=0,n=s.length-1){for(;n>e;){if(n-e>600){const a=n-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*u/a+h)),f=Math.min(n,Math.floor(t+(a-l)*u/a+h));WA(s,t,d,f)}const i=s[t];let r=e,o=n;for(Fl(s,e,t),uu(s[n],i)>0&&Fl(s,e,n);r<o;){for(Fl(s,r,o),r++,o--;uu(s[r],i)<0;)r=r+1;for(;uu(s[o],i)>0;)o=o-1}uu(s[e],i)===0?Fl(s,e,o):(o=o+1,Fl(s,o,n)),o<=t&&(e=o+1),t<=o&&(n=o-1)}}function GA(s,t,e,n,i){const r=t[t.length-1],[o,a]=[s.length/r,r],l=Hn(e,o*n),c=Hn("int32",o*n);for(let h=0;h<o;h++){const d=h*a,f=s.subarray(d,d+a);let p=new Array(f.length);f.forEach((y,v)=>p[v]={value:y,index:v}),n<p.length&&(WA(p,n),p=p.slice(0,n)),i&&p.sort(uu);const g=h*n,m=l.subarray(g,g+n),x=c.subarray(g,g+n);for(let y=0;y<n;y++)m[y]=p[y].value,x[y]=p[y].index}const u=t.slice();return u[u.length-1]=n,[me(u,e,l),me(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(s,t,e,n){const i=ge(t,e)[0],r=[1,e[0],1];for(let p=0;p<i;p++)r[0]*=e[p];r[1]=e[i];for(let p=i+1;p<e.length;p++)r[2]*=e[p];const o={},a=new Int32Array(e[i]),l=new Zn(r,n,s),c=[],u=r[0]===1&&r[2]===1;for(let p=0;p<e[i];p++){let g;if(u)g=s[p].toString();else{const m=[];for(let x=0;x<r[0];x++)for(let y=0;y<r[2];y++)m.push(l.get(x,p,y));g=m.join(",")}if(o[g]!==void 0)a[p]=o[g];else{const m=Object.keys(o).length;o[g]=m,a[p]=m,c.push(p)}}const h=r.slice();h[1]=Object.keys(o).length;const d=new Zn(h,n);c.forEach((p,g)=>{for(let m=0;m<r[0];m++)for(let x=0;x<r[2];x++)d.set(l.get(m,p,x),m,g,x)});const f=e.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:eA,addImpl:sA,bincountImpl:Fv,bincountReduceImpl:iA,castImpl:nA,ceilImpl:rA,concatImpl:oA,equalImpl:aA,expImpl:cA,expm1Impl:hA,floorImpl:dA,gatherNdImpl:fA,gatherV2Impl:pA,greaterImpl:mA,greaterEqualImpl:gA,lessImpl:xA,lessEqualImpl:yA,linSpaceImpl:bA,logImpl:vA,maxImpl:wA,maximumImpl:SA,minimumImpl:_A,multiplyImpl:Lv,negImpl:CA,notEqualImpl:TA,prodImpl:IA,raggedGatherImpl:EA,raggedRangeImpl:MA,raggedTensorToTensorImpl:AA,rangeImpl:kA,rsqrtImpl:NA,scatterImpl:Wl,sigmoidImpl:Bj,sliceImpl:$A,sparseFillEmptyRowsImpl:DA,sparseReshapeImpl:FA,sparseSegmentReductionImpl:Ov,sqrtImpl:Wj,squaredDifferenceImpl:LA,stridedSliceImpl:PA,stringNGramsImpl:OA,stringSplitImpl:zA,stringToHashBucketFastImpl:BA,subImpl:UA,tileImpl:VA,topKImpl:GA,transposeImpl:Pv,uniqueImpl:HA},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */CI("cpu",()=>new eg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA=Oe(hh,s=>s>=0?s:Math.exp(s)-1),Qj={kernelName:hh,backendName:"cpu",kernelFunc:qA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n;Xt([i],"leakyRelu");const o=ft(i.shape),a=e.data.get(i.dataId).values,l=Hn("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return e.makeTensorInfo(i.shape,"float32",l)}const t7={kernelName:Yp,backendName:"cpu",kernelFunc:XA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=bn((s,t)=>s<0?t*s:s);function jA(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t;Xt([n,i],"prelu");const r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,[a,l]=e7(n.shape,i.shape,r,o,"float32");return e.makeTensorInfo(l,"float32",a)}const n7={kernelName:mm,backendName:"cpu",kernelFunc:jA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=Oe(kh,s=>Math.max(0,s)),s7={kernelName:kh,backendName:"cpu",kernelFunc:KA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA=Oe(Nh,s=>Math.min(Math.max(0,s),6)),i7={kernelName:Nh,backendName:"cpu",kernelFunc:YA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hp(s,t,e,n,i){if(e==="linear")return vr({inputs:{x:t},backend:s});if(e==="relu")return KA({inputs:{x:t},backend:s});if(e==="elu")return qA({inputs:{x:t},backend:s});if(e==="relu6")return YA({inputs:{x:t},backend:s});if(e==="prelu")return jA({inputs:{x:t,alpha:n},backend:s});if(e==="leakyrelu")return XA({inputs:{x:t},backend:s,attrs:{alpha:i}});if(e==="sigmoid")return RA({inputs:{x:t},backend:s});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=ft(i.shape),a=kT(r,o),l=ft(a);F(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(i.dataId);const c=e.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const r7={kernelName:xm,backendName:"cpu",kernelFunc:He};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;Xt([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=o?i.shape[l-2]:i.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=o?i.shape[l-1]:i.shape[l-2],f=a?r.shape[c-2]:r.shape[c-1],p=i.shape.slice(0,-2),g=r.shape.slice(0,-2),m=ft(p),x=ft(g),v=de(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,f]);F(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${o} and transposeB=${a} must match.`);const b=o?[m,u,d]:[m,d,u],w=a?[x,f,h]:[x,h,f],_=He({inputs:{x:i},backend:e,attrs:{shape:b}}),C=He({inputs:{x:r},backend:e,attrs:{shape:w}}),S=o?_.shape[1]:_.shape[2],T=o?_.shape[2]:_.shape[1],I=a?C.shape[1]:C.shape[2],M=Math.max(m,x),$=e.data.get(_.dataId).values,E=e.data.get(C.dataId).values,A=re(_.shape),k=re(C.shape),[R,B,L]=o?[A[0],1,A[1]]:[A[0],A[1],1],[D,V,q]=a?[1,k[1],k[0]]:[k[1],1,k[0]],G=T*I,K=me([M,T,I],_.dtype),ot=K.values,ht=e.blockSize;for(let J=0;J<M;J++)for(let gt=0;gt<T;gt+=ht)for(let mt=0;mt<I;mt+=ht)for(let bt=0;bt<S;bt+=ht){const pt=Math.min(gt+ht,T),st=Math.min(mt+ht,I),et=Math.min(bt+ht,S);for(let ct=gt;ct<pt;ct++)for(let St=mt;St<st;St++){let At=0;for(let Ct=bt;Ct<et;Ct++){const Ut=Math.min(J,m-1)*R,zt=Math.min(J,x-1)*q,Jt=$[Ut+ct*B+Ct*L],ce=E[Ct*D+St*V+zt];At+=Jt*ce}ot[J*G+(ct*I+St)]+=At}}return e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(C),e.makeTensorInfo(v,K.dtype,K.values)}const o7={kernelName:Fp,backendName:"cpu",kernelFunc:ZA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;let d,f,p;const g=[];d=ZA({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:e}),o&&(f=mc({inputs:{a:d,b:o},backend:e}),g.push(d),d=f),u&&(p=hp(e,d,u,a,h),g.push(d),d=p);for(const x of g)e.disposeIntermediateTensorInfo(x);return d}const l7={kernelName:Vf,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=Oe(Ju,s=>Math.acos(s)),u7={kernelName:Ju,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7=Oe(Qu,s=>Math.acosh(s)),d7={kernelName:Qu,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(s){const{inputs:t,backend:e}=s,n=t;Xt(t,"addN");const i=n.map(a=>e.data.get(a.dataId).values),r=me(n[0].shape,n[0].dtype),o=r.values;for(let a=0;a<n.length;a++){const l=i[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const p7={kernelName:ay,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Xt(i,"all");const a=ge(r,i.shape);let l=a;const c=rn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=mn(l.length,i.shape.length)),jn("all",l,u.shape.length);const[h,d]=Pn(u.shape,l),f=ft(d),p=Qn(ft(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const y=x*f;let v=g[y];for(let b=0;b<f;++b){const w=g[y+b];v=v&&w}p[x]=v}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=pn(h,a),y=He({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),y}return m}const g7={kernelName:ly,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Xt(i,"any");const a=ge(r,i.shape);let l=a;const c=rn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=mn(l.length,i.shape.length)),jn("any",l,u.shape.length);const[h,d]=Pn(u.shape,l),f=ft(d),p=Qn(ft(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const y=x*f;let v=g[y];for(let b=0;b<f;++b){const w=g[y+b];v=v||w}p[x]=v}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=pn(h,a),y=He({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),y}return m}const y7={kernelName:cy,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Xt(i,"argMax");let o=ge(r,i.shape);const a=rn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=mn(o.length,l.shape.length)),o=[o[0]],jn("argMax",o,l.shape.length);const[u,h]=Pn(l.shape,o),d=ft(u),f=Qn(d,"int32"),p=ft(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let y=g[x],v=0;for(let b=0;b<p;++b){const w=g[x+b];w>y&&(y=w,v=b)}f[m]=v}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const v7={kernelName:Np,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Xt(i,"argMin");let o=ge(r,i.shape);const a=rn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=mn(o.length,l.shape.length)),o=[o[0]],jn("argMin",o,l.shape.length);const[u,h]=Pn(l.shape,o),d=ft(u),f=Qn(d,"int32"),p=ft(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let y=g[x],v=0;for(let b=0;b<p;++b){const w=g[x+b];w<y&&(y=w,v=b)}f[m]=v}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const S7={kernelName:Rp,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=Oe(th,s=>Math.asin(s)),C7={kernelName:th,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=Oe(eh,s=>Math.asinh(s)),I7={kernelName:eh,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7=Oe(nh,s=>Math.atan(s)),M7={kernelName:nh,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7=bn((s,t)=>Math.atan2(s,t)),k7=On(ih,A7),N7={kernelName:ih,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R7=Oe(sh,s=>Math.atanh(s)),$7={kernelName:sh,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(s,t,e,n,i,r){const o=i.strideHeight,a=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,f=i.padInfo.left,p=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=me(i.outShape,e),m=g.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],y=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let b=0;b<i.batchSize;++b){const w=b*x,_=b*n[0];for(let C=0;C<i.inChannels;++C)for(let S=0;S<i.outHeight;++S){const T=S*o-d,I=Math.max(0,T),M=Math.min(i.inHeight,u+T),$=w+S*y;for(let E=0;E<i.outWidth;++E){const A=E*a-f,k=Math.max(0,A),R=Math.min(i.inWidth,h+A);let B=p,L=0,D=0;for(let q=I;q<M;q+=l){const G=_+q*n[1];for(let K=k;K<R;K+=c){const ot=G+K*n[2],ht=s[ot+C];r==="max"&&ht>B?B=ht:r==="avg"&&(L+=ht,D++)}if(isNaN(B))break}const V=$+E*v+C;m[V]=r==="avg"?L/D:B}}}return g}function JA(s,t,e,n,i=!1,r=!1){const o=me(n.outShape,"int32"),a=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,u=n.dilationWidth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,f=n.padInfo.top,p=n.padInfo.left,g=me(t,e,s);for(let m=0;m<n.batchSize;++m)for(let x=0;x<n.inChannels;++x)for(let y=0;y<n.outHeight;++y){const v=y*a-f;let b=v;for(;b<0;)b+=c;const w=Math.min(n.inHeight,h+v);for(let _=0;_<n.outWidth;++_){const C=_*l-p;let S=C;for(;S<0;)S+=u;const T=Math.min(n.inWidth,d+C);let I=Number.NEGATIVE_INFINITY,M=-1;for(let $=b;$<w;$+=c){const E=$-v;for(let A=S;A<T;A+=u){const k=A-C,R=g.get(m,$,A,x);R>I&&(I=R,i?M=r?((m*n.inHeight+$)*n.inWidth+A)*n.inChannels+x:($*n.inWidth+A)*n.inChannels+x:M=E*d+k)}}o.set(M,m,y,_,x)}}return o}function QA(s,t,e,n,i,r){const o=i.strideDepth,a=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,f=i.effectiveFilterHeight,p=i.effectiveFilterWidth,g=i.padInfo.front,m=i.padInfo.top,x=i.padInfo.left,y=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=me(i.outShape,e),b=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[2]*i.outShape[3]*i.outShape[4],C=i.outShape[3]*i.outShape[4],S=i.outShape[4];for(let T=0;T<i.batchSize;++T){const I=T*w,M=T*n[0];for(let $=0;$<i.inChannels;++$)for(let E=0;E<i.outDepth;++E){const A=E*o-g;let k=A;for(;k<0;)k+=c;const R=Math.min(i.inDepth,d+A),B=I+E*_;for(let L=0;L<i.outHeight;++L){const D=L*a-m;let V=D;for(;V<0;)V+=u;const q=Math.min(i.inHeight,f+D),G=B+L*C;for(let K=0;K<i.outWidth;++K){const ot=K*l-x;let ht=ot;for(;ht<0;)ht+=h;const J=Math.min(i.inWidth,p+ot),gt=G+K*S;let mt=y,bt=0,pt=0;for(let et=k;et<R;et+=c){const ct=M+et*n[1];for(let St=V;St<q;St+=u){const At=ct+St*n[2];for(let Ct=ht;Ct<J;Ct+=h){const Ut=At+Ct*n[3],zt=s[Ut+$];if(r==="max"&&zt>mt?mt=zt:r==="avg"&&(bt+=zt,pt++),isNaN(mt))break}if(isNaN(mt))break}if(isNaN(mt))break}const st=gt+$;b[st]=r==="avg"?bt/pt:mt}}}}return v}function D7(s,t){const e=me(t.outShape,"int32"),n=t.strideDepth,i=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,p=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let x=0;x<t.outDepth;++x){const y=x*n-d;let v=y;for(;v<0;)v+=o;const b=Math.min(t.inDepth,c+y);for(let w=0;w<t.outHeight;++w){const _=w*i-f;let C=_;for(;C<0;)C+=a;const S=Math.min(t.inHeight,u+_);for(let T=0;T<t.outWidth;++T){const I=T*r-p;let M=I;for(;M<0;)M+=l;const $=Math.min(t.inWidth,h+I);let E=Number.NEGATIVE_INFINITY,A=-1;for(let k=v;k<b;k+=o){const R=k-y;for(let B=C;B<S;B+=a){const L=B-_;for(let D=M;D<$;D+=l){const V=D-I,q=s.get(g,k,B,D,m);q>=E&&(E=q,A=R*u*h+L*u+V)}}}e.set(A,g,x,w,T,m)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Xt(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(es(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Ne(u.inShape,u.outShape))h=vr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=re(i.shape),p=Bv(d,i.shape,i.dtype,f,u,"avg");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const L7={kernelName:$p,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Xt(i,"avgPool3d");const u=Yr(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=QA(h,i.shape,i.dtype,re(i.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const O7={kernelName:Dp,backendName:"cpu",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Xt([i,r],"avgPool3DGrad");const u=Yr(r.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,g=u.filterHeight,m=u.filterWidth,x=u.dilationDepth,y=u.dilationHeight,v=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,_=u.effectiveFilterWidth,C=b-1-u.padInfo.front,S=_-1-u.padInfo.left,T=w-1-u.padInfo.top,I=me(r.shape,"float32"),M=1/(p*g*m),$=e.bufferSync(i);for(let E=0;E<u.batchSize;++E)for(let A=0;A<u.inChannels;++A)for(let k=0;k<u.inDepth;++k)for(let R=0;R<u.inHeight;++R)for(let B=0;B<u.inWidth;++B){const L=k-C,D=R-T,V=B-S;let q=0;for(let G=0;G<b;G+=x){const K=(L+G)/h;if(!(K<0||K>=u.outDepth||Math.floor(K)!==K))for(let ot=0;ot<w;ot+=y){const ht=(D+ot)/d;if(!(ht<0||ht>=u.outHeight||Math.floor(ht)!==ht))for(let J=0;J<_;J+=v){const gt=(V+J)/f;if(gt<0||gt>=u.outWidth||Math.floor(gt)!==gt)continue;const mt=$.get(E,K,ht,gt,A);q+=mt}}}I.set(q*M,E,k,R,B,A)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const B7={kernelName:hy,backendName:"cpu",kernelFunc:z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Xt([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=bi(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,x=u.effectiveFilterHeight,y=u.effectiveFilterWidth,v=y-1-u.padInfo.left,b=x-1-u.padInfo.top,w=me(o.shape,"float32"),_=1/(f*p),C=e.data.get(i.dataId).values,S=me(i.shape,"float32",C);for(let T=0;T<u.batchSize;++T)for(let I=0;I<u.inChannels;++I)for(let M=0;M<u.inHeight;++M)for(let $=0;$<u.inWidth;++$){const E=M-b,A=$-v;let k=0;for(let R=0;R<x;R+=g){const B=(E+R)/h;if(!(B<0||B>=u.outHeight||Math.floor(B)!==B))for(let L=0;L<y;L+=m){const D=(A+L)/d;if(D<0||D>=u.outWidth||Math.floor(D)!==D)continue;const V=S.get(T,B,D,I);k+=V}}w.set(k*_,T,M,$,I)}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const V7={kernelName:uy,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,scale:r,offset:o,mean:a,variance:l}=t;F(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Xt([i,a,l,r,o],"batchNorm");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=e.data.get(i.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,f=r?e.data.get(r.dataId).values:new Float32Array([1]),p=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=p.length,x=f.length,y=d.length,v=h.length;let b=0,w=0,_=0,C=0;for(let S=0;S<u.length;++S)g[S]=p[b++]+(u[S]-h[w++])*f[_++]/Math.sqrt(d[C++]+c),b>=m&&(b=0),w>=v&&(w=0),_>=x&&(_=0),C>=y&&(C=0);return e.makeTensorInfo(i.shape,i.dtype,g)}const G7={kernelName:Xp,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;Xt([i],"batchToSpaceND");const a=r.reduce((x,y)=>x*y),l=Qh(i.shape,r,a),c=td(l.length,r.length),u=ed(i.shape,r,a),h=jb(o,r.length),d=Kb(u,o,r.length),f=He({inputs:{x:i},backend:e,attrs:{shape:l}}),p=gs({inputs:{x:f},backend:e,attrs:{perm:c}}),g=He({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Ua({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const q7={kernelName:Lp,backendName:"cpu",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=Fv(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const j7={kernelName:dy,backendName:"cpu",kernelFunc:X7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=de(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Y7={kernelName:OT,backendName:"cpu",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7=Oe(ah,(s,t)=>{const e=t;return s>e.clipValueMax?e.clipValueMax:s<e.clipValueMin?e.clipValueMin:s}),J7={kernelName:ah,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q7=s=>{const{x:t}=s.inputs,e=s.backend,n=new Float32Array(ft(t.shape)),i=e.data.get(t.dataId),r=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];n[c]=Math.hypot(u,h)}return e.makeOutput(n,t.shape,"float32")},t9={kernelName:Pp,backendName:"cpu",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gc(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.imag,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const e9={kernelName:My,backendName:"cpu",kernelFunc:gc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xc(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=ge(i,t[0].shape)[0],o=t.map(g=>g.shape);Hb(o,r);let a=fr(t.map(g=>g.shape),r);if(ft(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(g=>ft(g.shape)>0);if(l.length===1)return vr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const g=l.map(b=>Ba({inputs:{input:b},backend:e})),m=l.map(b=>gc({inputs:{input:b},backend:e})),x=xc({inputs:g,backend:e,attrs:{axis:r}}),y=xc({inputs:m,backend:e,attrs:{axis:r}}),v=_s({inputs:{real:x,imag:y},backend:e});return g.forEach(b=>e.disposeIntermediateTensorInfo(b)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),v}const c=l.map(g=>{const x=[-1,ft(g.shape.slice(r))];return He({inputs:{x:g},backend:e,attrs:{shape:x}})}),u=c.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=fr(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=oA(u,a,t[0].dtype,h),f=fr(l.map(g=>g.shape),r),p=e.makeTensorInfo(f,t[0].dtype,d);return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const n9={kernelName:Op,backendName:"cpu",kernelFunc:xc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n;Xt([i,r],"conv2d");const h=Zr(l),d=Xn(i.shape,r.shape,o,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,v=d.dataFormat==="channelsLast",b=new Zn(d.outShape,i.dtype),w=re(i.shape),_=re(r.shape),C=w[0],S=v?w[1]:w[2],T=v?w[2]:1,I=v?1:w[1],M=b.strides[0],$=v?b.strides[1]:b.strides[2],E=v?b.strides[2]:1,A=v?1:b.strides[1],k=e.data.get(i.dataId).values,R=e.data.get(r.dataId).values,B=b.values;for(let L=0;L<d.batchSize;++L){const D=L*C,V=L*M;for(let q=0;q<d.outHeight;++q){const G=V+q*$,K=q*d.strideHeight-y;for(let ot=0;ot<f;++ot){const ht=K+ot*g;if(ht<0||ht>=d.inHeight)continue;const J=ot*_[0],gt=D+ht*S;for(let mt=0;mt<d.outWidth;++mt){const bt=G+mt*E,pt=mt*d.strideWidth-x;for(let st=0;st<p;++st){const et=pt+st*m;if(et<0||et>=d.inWidth)continue;const ct=J+st*_[1],St=gt+et*T;let At=ct;for(let Ct=0;Ct<d.inChannels;++Ct){const Ut=k[St+Ct*I];for(let zt=0;zt<d.outChannels;++zt)B[bt+zt*A]+=Ut*R[At+zt];At+=d.outChannels}}}}}}return e.makeTensorInfo(b.shape,b.dtype,B)}const s9={kernelName:zp,backendName:"cpu",kernelFunc:tk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n;Xt([i,r],"conv2dBackpropFilter");const h=Zr(l),d=Xn(i.shape,u,o,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:g,filterWidth:m}=d,x=d.dataFormat==="channelsLast",y=new Zn(d.filterShape,"float32"),v=d.padInfo.left,b=d.padInfo.top,w=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,C=new Zn(i.shape,i.dtype,w),S=new Zn(r.shape,r.dtype,_);for(let T=0;T<g;++T){const I=Math.max(0,Math.ceil((b-T)/f)),M=Math.min(d.outHeight,(d.inHeight+b-T)/f);for(let $=0;$<m;++$){const E=Math.max(0,Math.ceil((v-$)/p)),A=Math.min(d.outWidth,(d.inWidth+v-$)/p);for(let k=0;k<d.inChannels;++k)for(let R=0;R<d.outChannels;++R){let B=0;for(let L=0;L<d.batchSize;++L)for(let D=I;D<M;++D){const V=T+D*f-b;for(let q=E;q<A;++q){const G=$+q*p-v;x?B+=C.get(L,V,G,k)*S.get(L,D,q,R):B+=C.get(L,k,V,G)*S.get(L,R,D,q)}}y.set(B,T,$,k,R)}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const r9={kernelName:py,backendName:"cpu",kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n;Xt([i,r],"conv2dBackpropInput");const h=re(r.shape),d=re(i.shape);let f=Zr(c);const p=Xn(o,r.shape,a,1,l,u,!1,f),g=new Zn(p.inShape,"float32"),m=g.values,x=e.data.get(i.dataId).values,y=e.data.get(r.dataId).values,[v,b,w]=h,{batchSize:_,filterHeight:C,filterWidth:S,inChannels:T,inHeight:I,inWidth:M,outChannels:$,outHeight:E,outWidth:A,strideHeight:k,strideWidth:R}=p;f=p.dataFormat;const B=C-1-p.padInfo.top,L=S-1-p.padInfo.left,D=f==="channelsLast",V=g.strides[0],q=D?g.strides[1]:g.strides[2],G=D?g.strides[2]:1,K=D?1:g.strides[1],ot=d[0],ht=D?d[1]:d[2],J=D?d[2]:1,gt=D?1:d[1];for(let mt=0;mt<_;++mt)for(let bt=0;bt<T;++bt)for(let pt=0;pt<I;++pt){const st=pt-B,et=Math.max(0,Math.ceil(st/k)),ct=Math.min(E,(C+st)/k);for(let St=0;St<M;++St){const At=St-L,Ct=Math.max(0,Math.ceil(At/R)),Ut=Math.min(A,(S+At)/R);let zt=0;for(let ce=et;ce<ct;++ce){const xe=ce*k-st;for(let U=Ct;U<Ut;++U){const P=U*R-At,ut=ot*mt+ht*ce+J*U,It=v*(C-1-xe)+b*(S-1-P)+w*bt;for(let Mt=0;Mt<$;++Mt){const Nt=x[ut+gt*Mt],ne=y[It+Mt];zt+=Nt*ne}}}const Jt=V*mt+q*pt+G*St+K*bt;m[Jt]=zt}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const a9={kernelName:Bp,backendName:"cpu",kernelFunc:o9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n;Xt([i,r],"conv3d");const c=$o(i.shape,r.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:g,padInfo:m}=c,x=m.front,y=m.left,v=m.top,b=new Zn(c.outShape,i.dtype),w=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,C=b.values,S=re(i.shape),T=re(r.shape);for(let I=0;I<c.batchSize;++I){const M=I*S[0],$=I*b.strides[0];for(let E=0;E<c.outDepth;++E){const A=$+E*b.strides[1],k=E*c.strideDepth-x;for(let R=0;R<u;++R){const B=k+R*f;if(B<0||B>=c.inDepth)continue;const L=R*T[0],D=M+B*S[1];for(let V=0;V<c.outHeight;++V){const q=A+V*b.strides[2],G=V*c.strideHeight-v;for(let K=0;K<h;++K){const ot=G+K*p;if(ot<0||ot>=c.inHeight)continue;const ht=L+K*T[1],J=D+ot*S[2];for(let gt=0;gt<c.outWidth;++gt){const mt=q+gt*c.outChannels,bt=gt*c.strideWidth-y;for(let pt=0;pt<d;++pt){const st=bt+pt*g;if(st<0||st>=c.inWidth)continue;const et=ht+pt*T[2],ct=J+st*c.inChannels;let St=et;for(let At=0;At<c.inChannels;++At){const Ct=w[ct+At];for(let Ut=0;Ut<c.outChannels;++Ut)C[mt+Ut]+=Ct*_[St+Ut];St+=c.outChannels}}}}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const c9={kernelName:Up,backendName:"cpu",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n;Xt([i,r],"conv3dBackpropFilterV2");const c=re(i.shape),u=re(r.shape),h=$o(i.shape,l,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,g=h.filterDepth,m=h.filterHeight,x=h.filterWidth,y=new Zn(h.filterShape,"float32"),v=y.values,[b,w,_,C]=y.strides,S=e.data.get(r.dataId).values,[T,I,M,$]=u,E=e.data.get(i.dataId).values,[A,k,R,B]=c,L=h.padInfo.front,D=h.padInfo.left,V=h.padInfo.top;for(let q=0;q<g;++q){const G=Math.max(0,Math.ceil((L-q)/d)),K=Math.min(h.outDepth,(h.inDepth+L-q)/d),ot=q*b;for(let ht=0;ht<m;++ht){const J=Math.max(0,Math.ceil((V-ht)/f)),gt=Math.min(h.outHeight,(h.inHeight+V-ht)/f),mt=ht*w+ot;for(let bt=0;bt<x;++bt){const pt=Math.max(0,Math.ceil((D-bt)/p)),st=Math.min(h.outWidth,(h.inWidth+D-bt)/p),et=bt*_+mt;for(let ct=0;ct<h.inChannels;++ct){const St=ct*C+et;for(let At=0;At<h.outChannels;++At){let Ct=0;for(let Ut=0;Ut<h.batchSize;++Ut){const zt=Ut*A,Jt=Ut*T;for(let ce=G;ce<K;++ce){const U=(q+ce*d-L)*k+zt,P=ce*I+Jt;for(let ut=J;ut<gt;++ut){const Mt=(ht+ut*f-V)*R+U,Nt=ut*M+P;for(let ne=pt;ne<st;++ne){const nt=(bt+ne*p-D)*B+Mt,Ft=ne*$+Nt;Ct+=E[nt+ct]*S[Ft+At]}}}}v[St+At]=Ct}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const h9={kernelName:my,backendName:"cpu",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n;Xt([i],"conv3dBackpropInputV2");const c=re(i.shape),u=re(r.shape),h=$o(l,r.shape,a,1,o),d=new Zn(h.inShape,"float32"),f=d.values,[p,g,m,x]=d.strides,y=e.data.get(i.dataId).values,[v,b,w,_]=c,C=e.data.get(r.dataId).values,[S,T,I,M]=u,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:k,inChannels:R,inDepth:B,inHeight:L,inWidth:D,outChannels:V,outDepth:q,outHeight:G,outWidth:K,strideDepth:ot,strideHeight:ht,strideWidth:J}=h,gt=E-1-h.padInfo.front,mt=A-1-h.padInfo.top,bt=k-1-h.padInfo.left;for(let pt=0;pt<$;++pt)for(let st=0;st<R;++st)for(let et=0;et<B;++et){const ct=et-gt,St=Math.max(0,Math.ceil(ct/ot)),At=Math.min(q,(E+ct)/ot);for(let Ct=0;Ct<L;++Ct){const Ut=Ct-mt,zt=Math.max(0,Math.ceil(Ut/ht)),Jt=Math.min(G,(A+Ut)/ht);for(let ce=0;ce<D;++ce){const xe=ce-bt,U=Math.max(0,Math.ceil(xe/J)),P=Math.min(K,(k+xe)/J);let ut=0;for(let It=St;It<At;++It){const Mt=It*ot-ct;for(let Nt=zt;Nt<Jt;++Nt){const ne=Nt*ht-Ut;for(let H=U;H<P;++H){const nt=H*J-xe,Ft=v*pt+b*It+w*Nt+_*H,Vt=S*(E-1-Mt)+T*(A-1-ne)+I*(k-1-nt)+M*st;for(let Pt=0;Pt<V;++Pt){const se=y[Ft+Pt],ee=C[Vt+Pt];ut+=se*ee}}}}f[p*pt+g*et+m*Ct+x*ce+st]=ut}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const f9={kernelName:gy,backendName:"cpu",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p9=Oe(lh,s=>Math.cos(s)),m9={kernelName:lh,backendName:"cpu",kernelFunc:p9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9=Oe(ch,s=>Math.cosh(s)),x9={kernelName:ch,backendName:"cpu",kernelFunc:g9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,[u,h,d,f]=i.shape,p=r.shape[0],[g,m]=a,x=me([p,g,m,f],"float32"),y=e.data.get(r.dataId).values,v=e.data.get(o.dataId).values,b=e.data.get(i.dataId).values,w=re(i.shape),_=re(x.shape);for(let C=0;C<p;C++){const S=C*4,T=y[S],I=y[S+1],M=y[S+2],$=y[S+3],E=v[C];if(E>=u)continue;const A=g>1?(M-T)*(h-1)/(g-1):0,k=m>1?($-I)*(d-1)/(m-1):0;for(let R=0;R<g;R++){const B=g>1?T*(h-1)+R*A:.5*(T+M)*(h-1);if(B<0||B>h-1){for(let L=0;L<m;L++)for(let D=0;D<f;D++){const V=D+L*_[2]+R*_[1]+C*_[0];x.values[V]=c}continue}if(l==="bilinear"){const L=Math.floor(B),D=Math.ceil(B),V=B-L;for(let q=0;q<m;q++){const G=m>1?I*(d-1)+q*k:.5*(I+$)*(d-1);if(G<0||G>d-1){for(let J=0;J<f;J++){const gt=J+q*_[2]+R*_[1]+C*_[0];x.values[gt]=c}continue}const K=Math.floor(G),ot=Math.ceil(G),ht=G-K;for(let J=0;J<f;J++){let gt=J+K*w[2]+L*w[1]+E*w[0];const mt=b[gt];gt=J+ot*w[2]+L*w[1]+E*w[0];const bt=b[gt];gt=J+K*w[2]+D*w[1]+E*w[0];const pt=b[gt];gt=J+ot*w[2]+D*w[1]+E*w[0];const st=b[gt],et=mt+(bt-mt)*ht,ct=pt+(st-pt)*ht;gt=J+q*_[2]+R*_[1]+C*_[0],x.values[gt]=et+(ct-et)*V}}}else for(let L=0;L<m;++L){const D=m>1?I*(d-1)+L*k:.5*(I+$)*(d-1);if(D<0||D>d-1){for(let G=0;G<f;G++){const K=G+L*_[2]+R*_[1]+C*_[0];x.values[K]=c}continue}const V=Math.round(D),q=Math.round(B);for(let G=0;G<f;G++){const K=G+V*w[2]+q*w[1]+E*w[0],ot=G+L*_[2]+R*_[1]+C*_[0];x.values[ot]=b[K]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const b9={kernelName:yy,backendName:"cpu",kernelFunc:y9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Xt(i,"cumprod");const l=rn([r],i.shape.length);let c=i;l!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=mn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Ms(c.dtype,"int32"),d=ry(ft(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,y)=>x+p-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=p)for(let y=0;y<p;y++){const v=g(x,y);if(y===0)d[v]=o?1:f[v];else{const b=g(x,y-1);d[v]=o?f[b]*d[b]:f[v]*d[b]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Do(l),y=gs({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),y}return m}const w9={kernelName:xy,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Xt(i,"cumsum");const l=rn([r],i.shape.length);let c=i;l!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=mn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Ms(c.dtype,"int32"),d=Qn(ft(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,y)=>x+p-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=p)for(let y=0;y<p;y++){const v=g(x,y);if(y===0)d[v]=o?0:f[v];else{const b=g(x,y-1);d[v]=o?f[b]+d[b]:f[v]+d[b]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Do(l),y=gs({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),y}return m}const _9={kernelName:Vp,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Fv(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=iA(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const T9={kernelName:by,backendName:"cpu",kernelFunc:C9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n;F(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,f=u/(r*r),p=e.data.get(i.dataId).values,g=new Float32Array(a*h*d*f);let m=0;for(let x=0;x<a;++x)for(let y=0;y<h;++y){const v=Math.floor(y/r),b=y%r;for(let w=0;w<d;++w){const _=Math.floor(w/r),C=w%r,S=(b*r+C)*f;for(let T=0;T<f;++T){const M=T+S+u*(_+c*(v+l*x));g[m++]=p[M]}}}return e.makeTensorInfo([a,h,d,f],i.dtype,g)}const E9={kernelName:vy,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;Xt([i,r],"depthwiseConv2DNative");const u=re(i.shape),h=re(r.shape);let d=l;d==null&&(d=[1,1]),F(es(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=Xn(i.shape,r.shape,o,d,a,c,!0),{filterHeight:p,filterWidth:g,dilationHeight:m,dilationWidth:x,padInfo:y}=f,v=y.left,b=y.top,w=f.outChannels/f.inChannels,_=new Zn(f.outShape,i.dtype),C=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,T=_.values;for(let I=0;I<f.batchSize;++I){const M=I*u[0],$=I*_.strides[0];for(let E=0;E<f.outHeight;++E){const A=$+E*_.strides[1],k=E*f.strideHeight-b;for(let R=0;R<p;++R){const B=k+R*m;if(B<0||B>=f.inHeight)continue;const L=R*h[0],D=M+B*u[1];for(let V=0;V<f.outWidth;++V){const q=A+V*_.strides[2],G=V*f.strideWidth-v;for(let K=0;K<g;++K){const ot=G+K*x;if(ot<0||ot>=f.inWidth)continue;const ht=L+K*h[1],J=D+ot*f.inChannels;let gt=q,mt=ht;for(let bt=0;bt<f.inChannels;++bt){const pt=C[J+bt];for(let st=0;st<w;++st)T[gt+st]+=pt*S[mt+st];gt+=w,mt+=w}}}}}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const M9={kernelName:Wp,backendName:"cpu",kernelFunc:ek};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n;Xt([i,r],"depthwiseConv2dNativeBackpropFilter");const h=Xn(i.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:g}=h,m=new Zn(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,v=h.outChannels/h.inChannels,b=e.data.get(i.dataId).values,w=new Zn(i.shape,i.dtype,b),_=e.data.get(r.dataId).values,C=new Zn(r.shape,r.dtype,_);for(let S=0;S<p;++S){const T=Math.max(0,Math.ceil((y-S)/d)),I=Math.min(h.outHeight,(h.inHeight+y-S)/d);for(let M=0;M<g;++M){const $=Math.max(0,Math.ceil((x-M)/f)),E=Math.min(h.outWidth,(h.inWidth+x-M)/f);for(let A=0;A<h.outChannels;++A){const k=Math.trunc(A/v),R=A%v;let B=0;for(let L=0;L<h.batchSize;++L)for(let D=T;D<I;++D){const V=S+D*d-y;for(let q=$;q<E;++q){const G=M+q*f-x;B+=w.get(L,V,G,k)*C.get(L,D,q,A)}}m.set(B,S,M,k,R)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const k9={kernelName:wy,backendName:"cpu",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n;Xt([i,r],"depthwiseConv2DNativeBackpropInput");const h=re(i.shape),d=re(r.shape),f=Xn(u,r.shape,o,a,l,c,!0),p=new Zn(f.inShape,"float32"),g=p.values,[m,x,y]=p.strides,v=e.data.get(i.dataId).values,[b,w,_]=h,C=e.data.get(r.dataId).values,[S,T,I]=d,{batchSize:M,filterHeight:$,filterWidth:E,inChannels:A,inHeight:k,inWidth:R,outChannels:B,outHeight:L,outWidth:D,strideHeight:V,strideWidth:q}=f,G=$-1-f.padInfo.top,K=E-1-f.padInfo.left,ot=B/A;for(let ht=0;ht<M;++ht)for(let J=0;J<A;++J)for(let gt=0;gt<k;++gt){const mt=gt-G,bt=Math.max(0,Math.ceil(mt/V)),pt=Math.min(L,($+mt)/V);for(let st=0;st<R;++st){const et=st-K,ct=Math.max(0,Math.ceil(et/q)),St=Math.min(D,(E+et)/q);let At=0;for(let Ct=bt;Ct<pt;++Ct){const Ut=Ct*V-mt;for(let zt=ct;zt<St;++zt){const Jt=zt*q-et,ce=b*ht+w*Ct+_*zt,xe=S*($-1-Ut)+T*(E-1-Jt)+I*J;for(let U=0;U<ot;++U){const P=J*ot+U,ut=v[ce+P],It=C[xe+U];At+=ut*It}}}g[m*ht+x*gt+y*st+J]=At}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const R9={kernelName:Sy,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $9(s){const{inputs:t,backend:e}=s,{x:n}=t,i=ft(n.shape),r=e.data.get(n.dataId).values,o=me([i,i],n.dtype),a=o.values;for(let c=0;c<r.length;c++)a[c*i+c]=r[c];const l=[...n.shape,...n.shape];return e.makeTensorInfo(l,o.dtype,o.values)}const D9={kernelName:zT,backendName:"cpu",kernelFunc:$9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9={kernelName:Gp,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i}=s,{strides:r,pad:o,dilations:a}=e,l=t,c=l.data.get(n.dataId).values,u=n.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:f,inHeight:p,inWidth:g,inChannels:m,outHeight:x,outWidth:y,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:C,dilationHeight:S,dilationWidth:T,outShape:I}=jh(n.shape,i.shape,r,o,"NHWC",a),M=ft(I),$=I.length,E=yn(n.dtype,M);for(let k=0;k<f;++k)for(let R=0;R<x;++R){const B=R*b-v.top;for(let L=0;L<y;++L){const D=L*w-v.left;for(let V=0;V<m;++V){let q=Number.MIN_SAFE_INTEGER;for(let K=0;K<_;++K){const ot=B+K*S;if(ot>=0&&ot<p)for(let ht=0;ht<C;++ht){const J=D+ht*T;if(J>=0&&J<g){const gt=dr([k,ot,J,V],u,re(n.shape)),mt=dr([K,ht,V],d,re(i.shape)),bt=c[gt]+h[mt];bt>q&&(q=bt)}}}const G=dr([k,R,L,V],$,re(I));E[G]=q}}}return{dataId:l.write(Ya(E,n.dtype),I,n.dtype),shape:I,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L9={kernelName:e0,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Pi(n.shape,c.data.get(n.dataId).values),h=Pi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:C,dilationWidth:S,outShape:T}=jh(n.shape,i.shape,o,a,"NHWC",l);F(r.rank===T.length,()=>`Error in ${e0}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const I=Pi(T,c.data.get(r.dataId).values),M=$T(i.shape,i.dtype);for(let E=0;E<d;++E)for(let A=0;A<m;++A){const k=A*v-y.top;for(let R=0;R<x;++R){const B=R*b-y.left;for(let L=0;L<g;++L){let D=Number.MIN_SAFE_INTEGER,V=0,q=0;for(let G=0;G<w;++G){const K=k+G*C;if(K>=0&&K<f)for(let ot=0;ot<_;++ot){const ht=B+ot*S;if(ht>=0&&ht<p){const J=u[E][K][ht][L]+h[G][ot][L];J>D&&(D=J,V=G,q=ot)}}}M[V][q][L]+=I[E][A][R][L]}}}return{dataId:c.write(Ya(M,n.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9={kernelName:t0,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Pi(n.shape,c.data.get(n.dataId).values),h=Pi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:C,dilationWidth:S,outShape:T}=jh(n.shape,i.shape,o,a,"NHWC",l);F(r.rank===T.length,()=>`Error in ${t0}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const I=Pi(T,c.data.get(r.dataId).values),M=$T(n.shape,n.dtype);for(let E=0;E<d;++E)for(let A=0;A<m;++A){const k=A*v-y.top;for(let R=0;R<x;++R){const B=R*b-y.left;for(let L=0;L<g;++L){let D=Number.MIN_SAFE_INTEGER,V=k<0?0:k,q=B<0?0:B;for(let G=0;G<w;++G){const K=k+G*C;if(K>=0&&K<f)for(let ot=0;ot<_;++ot){const ht=B+ot*S;if(ht>=0&&ht<p){const J=u[E][K][ht][L]+h[G][ot][L];J>D&&(D=J,V=K,q=ht)}}}M[E][V][q][L]+=I[E][A][R][L]}}}return{dataId:c.write(Ya(M,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Xt(i,"sum");let a;i.dtype==="bool"?a=Ao({inputs:{x:i},backend:e,attrs:{dtype:"int32"}}):a=vr({inputs:{x:i},backend:e});const l=a.shape.length,c=ge(r,a.shape),u=rn(c,l);let h=c,d=a;u!=null&&(d=gs({inputs:{x:a},backend:e,attrs:{perm:u}}),h=mn(h.length,l)),jn("sum",h,d.shape.length);const[f,p]=Pn(d.shape,h),g=Ms(d.dtype,"int32");let m=cp(e,f,g);const x=ft(p),y=e.data.get(m.dataId).values,v=e.data.get(d.dataId).values;for(let b=0;b<y.length;++b){const w=b*x;let _=0;for(let C=0;C<x;++C)_+=v[w+C];y[b]=_}if(o){const b=pn(m.shape,c),w=m;m=He({inputs:{x:m},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(w)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(d),m}const O9={kernelName:_m,backendName:"cpu",kernelFunc:ud};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=sv(i,r.length);rv(o.length,l,r);const{path:c,steps:u}=ov(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:y}=iv(f,l[m]);let v;av(x)?v=r[m]:(v=gs({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(v));const b=v.shape.slice();for(let w=0;w<y.length;++w)b.splice(y[w],0,1);Ne(v.shape,b)||(v=He({inputs:{x:v},backend:e,attrs:{shape:b}}),p.push(v)),d===null?d=v:(d=ng({inputs:{a:v,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=ud({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const B9={kernelName:BT,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9(s){const{inputs:t,backend:e}=s,{dy:n,y:i}=t;Xt([n,i],"eluGrad");const r=new Float32Array(ft(i.shape)),o=e.data.get(i.dataId).values,a=e.data.get(n.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=1?r[l]=a[l]:r[l]=a[l]*(c+1)}return e.makeTensorInfo(i.shape,"float32",r)}const V9={kernelName:_y,backendName:"cpu",kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9=Yb,G9=Zb,H9=Jb,q9=Qb,X9=tv,j9=ev,K9=Oe(dh,s=>{const t=Math.sign(s),e=Math.abs(s),n=1/(1+W9*e);return t*(1-((((j9*n+X9)*n+q9)*n+H9)*n+G9)*n*Math.exp(-e*e))}),Y9={kernelName:dh,backendName:"cpu",kernelFunc:K9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(s){const{inputs:t,backend:e,attrs:n}=s,{input:i}=t,{dim:r}=n,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(F(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),He({inputs:{x:i},backend:e,attrs:{shape:a}})}const Z9={kernelName:qp,backendName:"cpu",kernelFunc:dp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9=bn((s,t)=>s/t),Uv=On(uh,J9),N0={kernelName:uh,backendName:"cpu",kernelFunc:Uv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(s,t,e){const n=s.shape,i=n[0],r=n[1],o=e.data.get(s.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[i,r],u=ft(c),h=Hn("float32",u),d=Hn("float32",u);for(let m=0;m<i;m++){const x=Ua({inputs:{x:a},backend:e,attrs:{begin:[m,0],size:[1,r]}}),y=Ua({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,r]}}),v=_s({inputs:{real:x,imag:y},backend:e}),{real:b,imag:w}=Q9(v,t,e),_=jr(b,w);for(let C=0;C<r;C++){const S=nv(_,C);h[m*r+C]=S.real,d[m*r+C]=S.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(v)}const f=e.makeTensorInfo(c,"float32",h),p=e.makeTensorInfo(c,"float32",d),g=_s({inputs:{real:f,imag:p},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}function Q9(s,t,e){const n=ft(s.shape),i=e.data.get(s.dataId),r=e.data.get(i.complexTensorInfos.real.dataId).values,o=e.data.get(i.complexTensorInfos.imag.dataId).values;if(tK(n)){const a=R0(r,o,n,t,e),l=[s.shape[0],s.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",Ro(n,"float32")),d=vr({inputs:{x:h},backend:e}),f=N0.kernelFunc({inputs:{a:c,b:h},backend:e}),p=N0.kernelFunc({inputs:{a:u,b:d},backend:e}),g=e.data.get(f.dataId).values,m=e.data.get(p.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),{real:g,imag:m}}return a}else{const a=jr(r,o),l=eK(a,n,t);return C2(l)}}function tK(s){return(s&s-1)===0}function R0(s,t,e,n,i){if(e===1)return{real:s,imag:t};const r=jr(s,t),o=e/2,a=T2(r),l=a.real,c=a.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),f=_s({inputs:{real:h,imag:d},backend:i}),p=I2(r),g=p.real,m=p.imag,x=[g.length],y=i.makeTensorInfo(x,"float32",g),v=i.makeTensorInfo(x,"float32",m),b=_s({inputs:{real:y,imag:v},backend:i}),w=R0(l,c,o,n,i),_=w.real,C=w.imag,S=[_.length],T=i.makeTensorInfo(S,"float32",_),I=i.makeTensorInfo(S,"float32",C),M=_s({inputs:{real:T,imag:I},backend:i}),$=R0(g,m,o,n,i),E=$.real,A=$.imag,k=[E.length],R=i.makeTensorInfo(k,"float32",E),B=i.makeTensorInfo(k,"float32",A),L=_s({inputs:{real:R,imag:B},backend:i}),D=M2(e,n),V=[D.real.length],q=i.makeTensorInfo(V,"float32",D.real),G=i.makeTensorInfo(V,"float32",D.imag),K=_s({inputs:{real:q,imag:G},backend:i}),ot=ng({inputs:{a:K,b:L},backend:i}),ht=mc({inputs:{a:M,b:ot},backend:i}),J=zv({inputs:{a:M,b:ot},backend:i}),gt=Ba({inputs:{input:ht},backend:i}),mt=Ba({inputs:{input:J},backend:i}),bt=gc({inputs:{input:ht},backend:i}),pt=gc({inputs:{input:J},backend:i}),st=xc({inputs:[gt,mt],backend:i,attrs:{axis:0}}),et=xc({inputs:[bt,pt],backend:i,attrs:{axis:0}}),ct=i.data.get(st.dataId).values,St=i.data.get(et.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(K),i.disposeIntermediateTensorInfo(ot),i.disposeIntermediateTensorInfo(ht),i.disposeIntermediateTensorInfo(J),i.disposeIntermediateTensorInfo(gt),i.disposeIntermediateTensorInfo(bt),i.disposeIntermediateTensorInfo(mt),i.disposeIntermediateTensorInfo(pt),i.disposeIntermediateTensorInfo(st),i.disposeIntermediateTensorInfo(et),{real:ct,imag:St}}function eK(s,t,e){const n=new Float32Array(t*2);for(let i=0;i<t;i++){let r=0,o=0;for(let a=0;a<t;a++){const l=A2(i*a,t,e),c=nv(s,a);r+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}e&&(r/=t,o/=t),E2(n,r,o,i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(s){const{inputs:t,backend:e}=s,{input:n}=t,i=ft(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=He({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=nk(a,!1,e),c=He({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const sK={kernelName:Cy,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(s){const{backend:t,attrs:e}=s,{shape:n,value:i,dtype:r}=e,o=r||Zu(i),a=yn(o,ft(n));return rK(a,i,o),t.makeTensorInfo(n,o,a)}const iK={kernelName:Ty,backendName:"cpu",kernelFunc:Vv};function rK(s,t,e){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK={kernelName:Iy,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,i=e,r=Hn(n.dtype,ft(n.shape)),[o,a,l,c]=n.shape,u=i.data.get(n.dataId).values;for(let d=0;d<o;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const g=p*(l*c);for(let m=0;m<l;m++){const x=m*c;for(let y=0;y<c;y++){const v=Math.round(l-m-1),b=f+g+x+y;let w=u[b];if(v>=0&&v<l){const _=v*c,C=f+g+_+y;w=u[C]}r[b]=w}}}}return{dataId:i.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK=bn((s,t)=>Math.floor(s/t)),lK=On(gh,aK,null,"int32"),cK={kernelName:gh,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=tk({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=He({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=mc({inputs:{a:g,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else g=mc({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(f){const m=g;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=He({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=hp(e,g,f,x,p),e.disposeIntermediateTensorInfo(x)}else g=hp(e,g,f,a,p);e.disposeIntermediateTensorInfo(m)}return g}const hK={kernelName:Wf,backendName:"cpu",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=ek({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=mc({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(f){const m=g;g=hp(e,g,f,a,p),e.disposeIntermediateTensorInfo(m)}return g}const fK={kernelName:ZT,backendName:"cpu",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=ft(n.shape),o=i.shape,a=o[o.length-1],[l,c,u,h]=sb(n,i);if(c===0)return e.makeTensorInfo(l,n.dtype,[]);const d=e.data.get(i.dataId).values,f=e.bufferSync(n),p=fA(d,f,n.dtype,c,a,u,h,n.shape,r);return e.makeTensorInfo(l,n.dtype,p.values)}const mK={kernelName:UT,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n;Xt([i,r],"gatherV2");const l=ge(o,i.shape)[0],c=e.data.get(r.dataId).values,u=i.shape[l];for(let b=0;b<c.length;++b){const w=c[b];F(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=ft(r.shape),f=cv(i,r,l,h),p=He({inputs:{x:i},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=He({inputs:{x:r},backend:e,attrs:{shape:[f.batchSize,d/f.batchSize]}}),m=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=e.bufferSync(g),y=e.bufferSync(p),v=pA(y,x,m);return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(f.outputShape,v.dtype,v.values)}const xK={kernelName:jp,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yK(s){const{inputs:t,backend:e}=s,{input:n}=t,i=ft(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=He({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=nk(a,!0,e),c=He({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const bK={kernelName:Ey,backendName:"cpu",kernelFunc:yK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK=Oe(bh,s=>Number.isFinite(s)?1:0,"bool"),wK={kernelName:bh,backendName:"cpu",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=Oe(vh,s=>Math.abs(s)===1/0?1:0,"bool"),_K={kernelName:vh,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=Oe(wh,s=>Number.isNaN(s)?1:0,"bool"),TK={kernelName:wh,backendName:"cpu",kernelFunc:CK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=bA(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const EK={kernelName:VT,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MK=Oe(_h,s=>Math.log1p(s)),AK={kernelName:_h,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK=bn((s,t)=>s&&t),NK=On(Qp,kK,null,"bool"),RK={kernelName:Qp,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=Oe(tm,s=>s?0:1,"bool"),DK={kernelName:tm,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK=bn((s,t)=>s||t),LK=On(em,FK,null,"bool"),PK={kernelName:em,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n;Xt(i,"LRN");const c=i.shape[3],u=c-1,h=e.data.get(i.dataId).values,d=ft(i.shape),f=new Float32Array(d);function p(g){const m=g%c;let x=g-m+Math.max(0,m-r);const y=g-m+Math.min(m+r,u);let v=0;for(;x<=y;x++){const b=h[x];v+=b*b}return v}for(let g=0;g<d;g++){const m=p(g),x=h[g]*Math.pow(o+a*m,-l);f[g]=x}return e.makeTensorInfo(i.shape,i.dtype,f)}const zK={kernelName:nm,backendName:"cpu",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n;Xt(o,"LRNGrad");const h=ft(o.shape),d=o.shape[3],f=e.data.get(o.dataId).values,p=e.data.get(i.dataId).values,g=e.data.get(r.dataId).values,m=new Float32Array(h),x=h;for(let y=0;y<x;y++){const v=y%d,b=y-v+Math.max(0,v-a),w=y-v+Math.min(d,v+a+1);let _=0;for(let C=b;C<w;C++)_+=Math.pow(p[C],2);_=c*_+l;for(let C=b;C<w;C++){let S=-2*c*u*p[C]*g[y]/_;y===C&&(S+=Math.pow(_,-u)),S*=f[y],m[C]+=S}}return e.makeTensorInfo(o.shape,i.dtype,m)}const UK={kernelName:Ay,backendName:"cpu",kernelFunc:BK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=e;let l=i.shape;const c=l.length,u=ge(r,l);let h=u;const d=rn(h,c);let f=a.data.get(i.dataId).values;if(d!=null){const b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[d[w]];f=Pv(f,l,i.dtype,d,b),h=mn(h.length,c),l=b}Xt(i,"max"),jn("max",h,c);const[p,g]=Pn(l,h),m=ft(g),x=wA(f,m,p,i.dtype),y=a.write(x,p,i.dtype);let v=p;return o&&(v=pn(p,u)),{dataId:y,shape:v,dtype:i.dtype}}const VK={kernelName:sm,backendName:"cpu",kernelFunc:sk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Xt(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(es(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Ne(u.inShape,u.outShape))h=vr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=re(i.shape),p=Bv(d,i.shape,i.dtype,f,u,"max");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const GK={kernelName:im,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Xt(i,"maxPool3d");const u=Yr(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=QA(h,i.shape,i.dtype,re(i.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const qK={kernelName:rm,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Xt([i,r],"maxPool3DGrad");const u=Yr(r.shape,o,a,1,l,c),h=e.bufferSync(r),d=D7(h,u),f=u.strideDepth,p=u.strideHeight,g=u.strideWidth,m=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,v=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,_=v-1-u.padInfo.front,C=w-1-u.padInfo.left,S=b-1-u.padInfo.top,T=me(r.shape,"float32"),I=e.bufferSync(i);for(let M=0;M<u.batchSize;++M)for(let $=0;$<u.inChannels;++$)for(let E=0;E<u.inDepth;++E)for(let A=0;A<u.inHeight;++A)for(let k=0;k<u.inWidth;++k){const R=E-_,B=A-S,L=k-C;let D=0;for(let V=0;V<v;V+=m){const q=(R+V)/f;if(!(q<0||q>=u.outDepth||Math.floor(q)!==q))for(let G=0;G<b;G+=x){const K=(B+G)/p;if(!(K<0||K>=u.outHeight||Math.floor(K)!==K))for(let ot=0;ot<w;ot+=y){const ht=(L+ot)/g;if(ht<0||ht>=u.outWidth||Math.floor(ht)!==ht)continue;const J=v*b*w-1-d.get(M,q,K,ht,$),gt=V*b*w+G*w+ot,mt=J===gt?1:0;if(mt===0)continue;const bt=I.get(M,q,K,ht,$);D+=bt*mt}}}T.set(D,M,E,A,k,$)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const jK={kernelName:Ny,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Xt([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=bi(a.shape,l,c,1,u,h),f=e.data.get(a.dataId).values,p=me(d.outShape,a.dtype,JA(f,a.shape,a.dtype,d).values),g=d.strideHeight,m=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,_=v-1-d.padInfo.top,C=me(a.shape,"float32"),S=e.data.get(i.dataId).values,T=me(i.shape,"float32",S);for(let I=0;I<d.batchSize;++I)for(let M=0;M<d.inChannels;++M)for(let $=0;$<d.inHeight;++$)for(let E=0;E<d.inWidth;++E){const A=$-_,k=E-w;let R=0;for(let B=0;B<v;B+=x){const L=(A+B)/g;if(!(L<0||L>=d.outHeight||Math.floor(L)!==L))for(let D=0;D<b;D+=y){const V=(k+D)/m;if(V<0||V>=d.outWidth||Math.floor(V)!==V)continue;const q=v*b-1-p.get(I,L,V,M),G=B*b+D,K=q===G?1:0;if(K===0)continue;const ot=T.get(I,L,V,M);R+=ot*K}}C.set(R,I,$,E,M)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const YK={kernelName:ky,backendName:"cpu",kernelFunc:KK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(s,t,e,n,i){const r=re(t),o=Bv(s,t,e,r,i,"max"),a=JA(s,t,e,i,!0,n);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={kernelName:WT,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;Xt(n,"MaxPoolWithArgmax");const c=l.data.get(n.dataId).values,u=bi(n.shape,i,r,[1,1],o),[h,d]=ZK(c,n.shape,n.dtype,a,u),f=l.write(h,u.outShape,n.dtype),p=l.write(d,u.outShape,n.dtype);return[{dataId:f,shape:u.outShape,dtype:n.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=ge(r,i.shape),c=Pn(i.shape,a)[1],u=ft(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=Ao({inputs:{x:i},backend:e,attrs:{dtype:"float32"}});h.push(f);const p=Uv({inputs:{a:f,b:d},backend:e});h.push(p);const g=ud({inputs:{x:p},backend:e,attrs:{axis:r,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}const tY={kernelName:om,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Xt(i,"min");const a=ge(r,i.shape);let l=a;const c=rn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=mn(l.length,i.shape.length)),jn("min",l,u.shape.length);const[h,d]=Pn(u.shape,l),f=ft(d),p=Qn(ft(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const y=x*f;let v=g[y];for(let b=0;b<f;++b){const w=g[y+b];(Number.isNaN(w)||w<v)&&(v=w)}p[x]=v}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=pn(h,a),y=He({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),y}return m}const nY={kernelName:am,backendName:"cpu",kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,mode:o}=n;Xt(i,"mirrorPad");const a=r.map((v,b)=>v[0]+i.shape[b]+v[1]),l=r.map(v=>v[0]),c=r.map((v,b)=>v[0]+i.shape[b]),u=o==="reflect"?0:1,h=e.data.get(i.dataId).values,d=i.shape.length,f=re(i.shape),p=ft(a),g=a.length,m=re(a),x=Hn(i.dtype,p);for(let v=0;v<p;v++){let b=Ic(v,g,m);for(let _=0;_<g;_++)b[_]<l[_]?b[_]=l[_]*2-b[_]-u:b[_]>=c[_]&&(b[_]=(c[_]-1)*2-b[_]+u);b=b.map((_,C)=>_-l[C]);const w=dr(b,d,f);x[v]=h[w]}return{dataId:e.write(x,a,i.dtype),shape:a,dtype:i.dtype}}const iY={kernelName:lm,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rY=bn((s,t)=>{const e=s%t;return s<0&&t<0||s>=0&&t>=0?e:(e+t)%t}),oY=On(Ih,rY),aY={kernelName:Ih,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=i.shape.length;let a=r;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=ge([a],i.shape),c=sk({inputs:{x:i},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=pn(c.shape,l),h=He({inputs:{x:c},backend:e,attrs:{shape:u}}),d=zv({inputs:{a:i,b:h},backend:e}),f=uA({inputs:{x:d},backend:e}),p=ud({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),g=He({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Uv({inputs:{a:f,b:g},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const lY={kernelName:Im,backendName:"cpu",kernelFunc:ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n;Xt(i,"multinomial");const l=a?i:ik({inputs:{logits:i},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,r],f=Qn(ft(d),"int32");for(let p=0;p<c;++p){const g=p*u,m=new Float32Array(u-1);m[0]=h[g];for(let v=1;v<m.length;++v)m[v]=m[v-1]+h[g+v];const x=Ib.alea(o.toString()),y=p*r;for(let v=0;v<r;++v){const b=x();f[y+v]=m.length;for(let w=0;w<m.length;w++)if(b<m[w]){f[y+v]=w;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",f)}const uY={kernelName:GT,backendName:"cpu",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=Fb;function dY(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n;Xt(i,"NonMaxSuppression");const c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,{selectedIndices:h}=hY(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const fY={kernelName:Ry,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY=Lb;function mY(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n;Xt(i,"NonMaxSuppressionPadded");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,{selectedIndices:d,validOutputs:f}=pY(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const gY={kernelName:$y,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=Pb;function yY(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n;Xt(i,"NonMaxSuppressionWithScore");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=xY(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const bY={kernelName:Dy,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n;Xt(i,"oneHot");const c=ft(i.shape),u=new Float32Array(c*o);u.fill(l);const h=e.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return e.makeTensorInfo([...i.shape,o],r,u)}const wY={kernelName:dm,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){const i=Ba({inputs:{input:n},backend:e}),r=fp({inputs:{x:i},backend:e}),o=gc({inputs:{input:n},backend:e}),a=fp({inputs:{x:o},backend:e}),l=_s({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Vv({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}const SY={kernelName:Am,backendName:"cpu",kernelFunc:fp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){const i=Ba({inputs:{input:n},backend:e}),r=rk({inputs:{x:i},backend:e}),o=gc({inputs:{input:n},backend:e}),a=fp({inputs:{x:o},backend:e}),l=_s({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Vv({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}const _Y={kernelName:hm,backendName:"cpu",kernelFunc:rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return dp({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{yi(r,u.shape,"All tensors passed to stack must have matching shapes"),F(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=dp({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=xc({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const CY={kernelName:fm,backendName:"cpu",kernelFunc:ok};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;Xt(i,"pad");const a=r.map((y,v)=>y[0]+i.shape[v]+y[1]),l=r.map(y=>y[0]),c=e.data.get(i.dataId).values,u=ft(i.shape),h=i.shape.length,d=re(i.shape),f=ft(a),p=a.length,g=re(a),m=Hn(i.dtype,f);o!==0&&m.fill(o);for(let y=0;y<u;y++){const b=Ic(y,h,d).map((_,C)=>_+l[C]),w=dr(b,p,g);m[w]=c[y]}return{dataId:e.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const ak={kernelName:pm,backendName:"cpu",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=bn((s,t)=>Math.pow(s,t)),EY=On(Mh,IY),MY={kernelName:Mh,backendName:"cpu",kernelFunc:EY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,a=i.map(m=>e.data.get(m.dataId).values),l=i.map(m=>m.shape),c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[h,d,f]=EA(a,l,c,r.shape,r.dtype,u,o.shape),p=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(f,r.dtype,d);return p.concat([g])}const kY={kernelName:HT,backendName:"cpu",kernelFunc:AY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=MA(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const RY={kernelName:qT,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a.map(m=>e.data.get(m.dataId).values),f=a.map(m=>m.shape),[p,g]=AA(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const DY={kernelName:XT,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(s){const{backend:t,attrs:e}=s,{start:n,stop:i,dtype:r,step:o}=e,a=kA(n,i,o,r);return t.makeTensorInfo([a.length],r,a)}const LY={kernelName:Fy,backendName:"cpu",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=Oe(Ah,s=>1/s),OY={kernelName:Ah,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Xt(i,"resizeBilinear");const l=re(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(ft([h,c,u,p])),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],y=[r&&c>1?c-1:c,r&&u>1?u-1:u];let v=0;const b=x[0]/y[0],w=x[1]/y[1];for(let _=0;_<h;_++)for(let C=0;C<c;C++){let S;o?S=b*(C+.5)-.5:S=b*C;const T=Math.max(0,Math.floor(S)),I=S-T,M=Math.min(d-1,Math.ceil(S)),$=_*l[0]+T*l[1],E=_*l[0]+M*l[1];for(let A=0;A<u;A++){let k;o?k=w*(A+.5)-.5:k=w*A;const R=Math.max(0,Math.floor(k)),B=k-R,L=Math.min(f-1,Math.ceil(k)),D=$+R*l[2],V=E+R*l[2],q=$+L*l[2],G=E+L*l[2];for(let K=0;K<p;K++){const ot=g[D+K],ht=g[V+K],J=g[q+K],gt=g[G+K],mt=ot+(J-ot)*B,bt=ht+(gt-ht)*B,pt=mt+(bt-mt)*I;m[v++]=pt}}}return e.makeTensorInfo([h,c,u,p],"float32",m)}const BY={kernelName:bm,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Xt([r,i],"resizeBilinearGrad");const a=re(i.shape),[l,c,u,h]=i.shape,[,d,f]=r.shape,p=new Float32Array(l*c*u*h),g=[o&&d>1?c-1:c,o&&f>1?u-1:u],m=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=g[0]/m[0],y=g[1]/m[1],v=e.data.get(r.dataId).values;let b=0;for(let w=0;w<l;w++){const _=w*a[0];for(let C=0;C<d;C++){const S=C*x,T=Math.floor(S),I=Math.min(Math.ceil(S),c-1),M=_+T*a[1],$=_+I*a[1],E=S-T,A=1-E;for(let k=0;k<f;k++){const R=k*y,B=Math.floor(R),L=Math.min(Math.ceil(R),u-1),D=R-B,V=1-D,q=M+B*a[2],G=M+L*a[2],K=$+B*a[2],ot=$+L*a[2],ht=A*V,J=A*D,gt=E*V,mt=E*D;for(let bt=0;bt<h;bt++){const pt=v[b++];p[q+bt]+=pt*ht,p[G+bt]+=pt*J,p[K+bt]+=pt*gt,p[ot+bt]+=pt*mt}}}}return e.makeTensorInfo([l,u,c,h],"float32",p)}const VY={kernelName:Oy,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Xt(i,"resizeNearestNeighbor");const l=re(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(h*c*u*p),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],y=[r&&c>1?c-1:c,r&&u>1?u-1:u],v=x[0]/y[0],b=x[1]/y[1];let w=0;for(let _=0;_<h;_++){const C=_*l[0];for(let S=0;S<c;S++){const T=o?v*(S+.5):v*S;let I=Math.min(d-1,r?Math.round(T):Math.floor(T));o&&(I=Math.max(0,I));const M=C+I*l[1];for(let $=0;$<u;$++){const E=o?b*($+.5):b*$;let A=Math.min(f-1,r?Math.round(E):Math.floor(E));o&&(A=Math.max(0,A));const k=M+A*l[2];for(let R=0;R<p;R++){const B=g[k+R];m[w++]=B}}}}return e.makeTensorInfo([h,c,u,p],i.dtype,m)}const GY={kernelName:ym,backendName:"cpu",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Xt([r,i],"resizeNearestNeighborGrad");const a=re(i.shape),l=re(r.shape),[c,u,h,d]=i.shape,[,f,p]=r.shape,g=new Float32Array(c*u*h*d),m=e.data.get(r.dataId).values,x=[o&&f>1?u-1:u,o&&p>1?h-1:h],y=[o&&f>1?f-1:f,o&&p>1?p-1:p],v=x[0]/y[0],b=x[1]/y[1],w=1/v,_=1/b,C=Math.ceil(w)*2+2,S=Math.ceil(_)*2+2;for(let T=0;T<c;T++){const I=T*a[0];for(let M=0;M<u;M++){const $=I+M*a[1],E=Math.floor(M*w),A=Math.floor(E-C/2);for(let k=0;k<h;k++){const R=$+k*a[2],B=Math.floor(k*_),L=Math.floor(B-S/2);for(let D=0;D<d;D++){let V=0;for(let q=0;q<C;q++){const G=q+A;if(G<0||G>=f)continue;const K=I+G*l[1],ot=G*v,ht=Math.min(u-1,o?Math.round(ot):Math.floor(ot));if(M===ht)for(let J=0;J<S;J++){const gt=J+L;if(gt<0||gt>=p)continue;const mt=K+gt*l[2],bt=gt*b,pt=Math.min(h-1,o?Math.round(bt):Math.floor(bt));k===pt&&(V+=m[mt+D])}}g[R+D]=V}}}}return e.makeTensorInfo(i.shape,i.dtype,g)}const qY={kernelName:Py,backendName:"cpu",kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n;Xt(i,"reverse");const o=i.shape.length,a=ge(r,i.shape);if(o===0)return vr({inputs:{x:i},backend:e});const l=new Zn(i.shape,i.dtype),c=e.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=i.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const jY={kernelName:vm,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY={kernelName:Zy,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=Hn(n.dtype,ft(n.shape)),[c,u,h,d]=n.shape,[f,p]=Xb(o,u,h),g=255,m=Math.sin(i),x=Math.cos(i),y=a.data.get(n.dataId).values;for(let b=0;b<c;b++){const w=b*h*u*d;for(let _=0;_<u;_++){const C=_*(h*d);for(let S=0;S<h;S++){const T=S*d;for(let I=0;I<d;I++){const M=[c,_,S,I],$=M[2],E=M[1];let A=($-f)*x-(E-p)*m,k=($-f)*m+(E-p)*x;A=Math.round(A+f),k=Math.round(k+p);let R=r;if(typeof r!="number"&&(I===3?R=g:R=r[I]),A>=0&&A<h&&k>=0&&k<u){const L=k*(h*d),D=A*d,V=w+L+D+I;R=y[V]}const B=w+C+T+I;l[B]=R}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=Oe(Rh,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2===0?t:t+1}),ZY={kernelName:Rh,backendName:"cpu",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Xh(r,i,o),d=!0,f=e.bufferSync(i),p=e.bufferSync(r),g=Wl(f,p,o,h,c,l,a,u,0,d);return e.makeTensorInfo(o,g.dtype,g.values)}const QY={kernelName:jT,backendName:"cpu",kernelFunc:JY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<t?e=i+1:n=i;return n}function eZ(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<=t?e=i+1:n=i;return n}function nZ(s,t,e,n,i,r){const o=yn("int32",e*i);for(let a=0;a<e;++a){const l=s.slice(a*n,(a+1)*n),c=a*i;for(let u=0;u<i;++u)o[c+u]=r==="left"?tZ(l,t[u+c]):eZ(l,t[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=nZ(a,l,i.shape[0],i.shape[1],r.shape[1],o);return e.makeTensorInfo(r.shape,"int32",c)}const iZ={kernelName:KT,backendName:"cpu",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rZ(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t;Xt([n,i,r],"select");const o=n.shape.length,a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Ms(i.dtype,r.dtype),h=Qn(ft(i.shape),u);let d=0;const f=o===0||o>1||i.shape.length===1?1:ft(i.shape.slice(1));for(let p=0;p<a.length;p++)for(let g=0;g<f;g++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return e.makeTensorInfo(i.shape,u,h)}const oZ={kernelName:wm,backendName:"cpu",kernelFunc:rZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ=Wm,lZ=Gm,cZ=Oe(Dh,s=>s>=0?lZ*s:aZ*(Math.exp(s)-1)),uZ={kernelName:Dh,backendName:"cpu",kernelFunc:cZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hZ=Oe(Ph,s=>s<0?-1:s>0?1:0),dZ={kernelName:Ph,backendName:"cpu",kernelFunc:hZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fZ=Oe(Fh,s=>Math.sin(s)),pZ={kernelName:Fh,backendName:"cpu",kernelFunc:fZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mZ=Oe(Lh,s=>Math.sinh(s)),gZ={kernelName:Lh,backendName:"cpu",kernelFunc:mZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xZ=11920928955078125e-23,N_=Math.log(xZ)+2,yZ=Oe(zh,s=>{const t=s>-N_,e=s<N_,n=Math.exp(s);let i;return e?i=n:t?i=s:i=Math.log(1+n),i}),bZ={kernelName:zh,backendName:"cpu",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;Xt([i],"spaceToBatchND");const a=ft(r),l=[[0,0]];l.push(...o);for(let _=1+r.length;_<i.shape.length;++_)l.push([0,0]);const c=ak.kernelFunc({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),u=Qh(c.shape,r,a,!1),h=td(u.length,r.length,!1),d=ed(c.shape,r,a,!1),g=He({inputs:{x:c},backend:e,attrs:{shape:u}}),y=gs({inputs:{x:g},backend:e,attrs:{perm:h}}),w=He({inputs:{x:y},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),w}const wZ={kernelName:Cm,backendName:"cpu",kernelFunc:vZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values[0],[h,d,f,p,g]=DA(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const _Z={kernelName:zy,backendName:"cpu",kernelFunc:SZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CZ(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.data.get(i.dataId).values),a=e.data.get(n.dataId).values,l=Array.from(e.data.get(r.dataId).values),[c,u,h]=FA(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const TZ={kernelName:By,backendName:"cpu",kernelFunc:CZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=Ov(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const EZ={kernelName:Uy,backendName:"cpu",kernelFunc:IZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MZ(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=Ov(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const AZ={kernelName:Vy,backendName:"cpu",kernelFunc:MZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Xh(r,i,a),f=!1,p=e.bufferSync(i);let g;switch(r.dtype){case"bool":{const m=e.bufferSync(r),x=Boolean(e.data.get(o.dataId).values[0]);g=Wl(p,m,a,d,u,c,l,h,x,f);break}case"float32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=Wl(p,m,a,d,u,c,l,h,x,f);break}case"int32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=Wl(p,m,a,d,u,c,l,h,x,f);break}case"string":{const m=e.bufferSync(r),x=Co(e.data.get(o.dataId).values[0]);g=Wl(p,m,a,d,u,c,l,h,x,f);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}const NZ={kernelName:YT,backendName:"cpu",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=ge(o,i.shape)[0],l=lv(i,r,a),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=Ua({inputs:{x:i},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,f})}const $Z={kernelName:Tm,backendName:"cpu",kernelFunc:RZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DZ={kernelName:Wy,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:e}=s,n=t;Xt(e,"square");const i=n.data.get(e.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const l=i[a];r[a]=l*l}return{dataId:n.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FZ=Oe(qh,(s,t)=>{const e=t;return isNaN(s)?NaN:s>0?1:e.alpha}),LZ={kernelName:qh,backendName:"cpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n;Xt(i,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:y,end:v,strides:b}=lb(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=He({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){F(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const _=rb(y,v,b),C=Ua({inputs:{x:i},backend:e,attrs:{begin:y,size:_}});w=He({inputs:{x:C},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(C)}else{const _=e.bufferSync(i),C=PA(f,_,b,y);w=e.makeTensorInfo(p,C.dtype,C.values)}return w}const OZ={kernelName:Gy,backendName:"cpu",kernelFunc:PZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zZ(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.data.get(u.dataId).values,f=e.data.get(h.dataId).values,[p,g]=OA(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const BZ={kernelName:Hy,backendName:"cpu",kernelFunc:zZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UZ(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values[0],[c,u,h]=zA(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const VZ={kernelName:qy,backendName:"cpu",kernelFunc:UZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WZ(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.data.get(r.dataId).values,a=BA(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const GZ={kernelName:Xy,backendName:"cpu",kernelFunc:WZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HZ=Oe(Wh,s=>Math.tan(s)),qZ={kernelName:Wh,backendName:"cpu",kernelFunc:HZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XZ=Oe(Gh,s=>Math.tanh(s)),jZ={kernelName:Gh,backendName:"cpu",kernelFunc:XZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;Xt(i,"tile");const o=VA(e.bufferSync(i),r);return e.makeTensorInfo(o.shape,o.dtype,o.values)}const YZ={kernelName:Hh,backendName:"cpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n;Xt(i,"topk");const a=e.data.get(i.dataId).values,[l,c]=GA(a,i.shape,i.dtype,r,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const JZ={kernelName:jy,backendName:"cpu",kernelFunc:ZZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QZ(s){const{inputs:t,attrs:e,backend:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=e,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=re(i.shape),y=x[0],v=x[1],b=x[2],w=re(m),_=w[0],C=w[1],S=w[2],T=Hn(i.dtype,ft(m));T.fill(l);const I=n.data.get(i.dataId).values,M=n.data.get(r.dataId).values;for(let E=0;E<u;++E){const A=r.shape[0]===1?M:M.subarray(E*8,E*8+8);for(let k=0;k<p;++k)for(let R=0;R<g;++R)for(let B=0;B<f;++B){let L;const D=A[6]*R+A[7]*k+1;if(D===0)continue;const V=(A[0]*R+A[1]*k+A[2])/D,q=(A[3]*R+A[4]*k+A[5])/D,G=R_(V,d,a),K=R_(q,h,a);switch(o){case"nearest":L=rJ(I,h,d,y,v,b,E,K,G,B,l);break;case"bilinear":L=oJ(I,h,d,y,v,b,E,K,G,B,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const ot=E*_+k*C+R*S+B;T[ot]=L}return n.makeTensorInfo(m,i.dtype,T)}return{dataId:n.write(T,m,i.dtype),shape:i.shape,dtype:i.dtype}}const tJ={kernelName:Ky,backendName:"cpu",kernelFunc:QZ};function R_(s,t,e){switch(e){case"reflect":return eJ(s,t);case"wrap":return nJ(s,t);case"nearest":return iJ(s,t);case"constant":default:return sJ(s)}}function eJ(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{const n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return Aa(0,e,t-1)}function nJ(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{const n=t-1;e-=t*Math.trunc(e/n)}return Aa(0,e,t-1)}function sJ(s,t){return s}function iJ(s,t){return Aa(0,s,t-1)}function hu(s,t,e,n,i,r,o,a,l,c,u){const h=o*n+a*i+l*r+c;return 0<=a&&a<t&&0<=l&&l<e?s[h]:u}function rJ(s,t,e,n,i,r,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return hu(s,t,e,n,i,r,o,h,d,c,u)}function oJ(s,t,e,n,i,r,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,g=(p-l)*hu(s,t,e,n,i,r,o,h,d,c,u)+(l-d)*hu(s,t,e,n,i,r,o,h,p,c,u),m=(p-l)*hu(s,t,e,n,i,r,o,f,d,c,u)+(l-d)*hu(s,t,e,n,i,r,o,f,p,c,u);return(f-a)*g+(a-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aJ(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Xt(r,"unique");const o=n.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=HA(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const lJ={kernelName:Yy,backendName:"cpu",kernelFunc:aJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i.shape.length,a=i.shape[r],l=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==r&&(l[c++]=i.shape[f]);const u=new Array(o).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[r]=f;const p=Ua({inputs:{x:i},backend:e,attrs:{begin:u,size:h}});d[f]=He({inputs:{x:p},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(p)}return d}const uJ={kernelName:Em,backendName:"cpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n;Xt(i,"unsortedSegmentSum");const a=i.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let p=0;p<h;++p){const g=dp({inputs:{input:d},backend:e,attrs:{dim:p+1}});d=g,u.push(g)}for(let p=0;p<o;++p){const g=Ro(p,"int32"),m=e.makeTensorInfo([],"int32",g),x=lA({inputs:{a:m,b:d},backend:e}),y=Ao({inputs:{x},backend:e,attrs:{dtype:"float32"}}),v=ng({inputs:{a:y,b:i},backend:e}),b=ud({inputs:{x:v},backend:e,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(m),u.push(x),u.push(y),u.push(v),u.push(b)}const f=ok({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const dJ={kernelName:Mm,backendName:"cpu",kernelFunc:hJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fJ=[l7,jX,u7,d7,tj,p7,g7,y7,v7,S7,C7,I7,M7,N7,$7,L7,O7,B7,V7,o7,G7,q7,j7,Y7,JX,nj,J7,KX,t9,n9,s9,r9,a9,c9,h9,f9,m9,x9,b9,w9,_9,T9,E9,M9,k9,R9,D9,F9,L9,P9,B9,Qj,V9,sj,Y9,ij,Z9,oj,sK,iK,oK,lj,cK,hK,fK,mK,xK,uj,dj,YX,bK,e9,wK,_K,TK,t7,pj,gj,EK,yj,AK,RK,DK,PK,zK,UK,VK,vj,GK,qK,jK,YK,JK,tY,nY,Sj,iY,aY,uY,Cj,Ij,fY,gY,bY,Mj,wY,_Y,CY,ak,MY,n7,Nj,kY,RY,DY,LY,ZX,N0,OY,s7,i7,r7,BY,VY,GY,qY,jY,KY,ZY,zj,QY,iZ,oZ,uZ,Uj,dZ,pZ,gZ,Vj,lY,bZ,wZ,_Z,TZ,EZ,AZ,NZ,$Z,Hj,DZ,Xj,LZ,OZ,BZ,VZ,GZ,Zj,O9,qZ,jZ,YZ,JZ,tJ,Aj,lJ,uJ,dJ,SY];for(const s of fJ)JT(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra={},pf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function pJ(s,t){ra[s]=t}function Gi(s,t){if(!(s in ra)||t!=null){const n=gJ(s,t);if(n!==null)ra[s]=n;else return console.log("Could not get context for WebGL version",s),null}const e=ra[s];return e==null||e.isContextLost()?(delete ra[s],Gi(s)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ra[s])}function mJ(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function gJ(s,t){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t==null?mJ(s):t;return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete ra[s]},!1),lt().getBool("SOFTWARE_WEBGL_ENABLED")&&(pf.failIfMajorPerformanceCaveat=!1),s===1?e.getContext("webgl",pf)||e.getContext("experimental-webgl",pf):e.getContext("webgl2",pf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zu;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(zu||(zu={}));var zs;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(zs||(zs={}));var Vn;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Vn||(Vn={}));function hd(s,t){return[t,s]}function xJ(s,t){return s*t}function mf(s){const t=ft(s),e=Math.ceil(t/4);return Kx(e)}function Dc(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function yJ(s,t){const[e,n]=Dc(s,t);return e*n*4}function Wv(s,t){const e=s;let n,i,r,o,a,l,c,u,h,d;return lt().getNumber("WEBGL_VERSION")===2?(n=e.R32F,i=e.R16F,r=e.RGBA16F,o=e.RGBA32F,a=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(n=s.RGBA,i=s.RGBA,r=s.RGBA,o=e.RGBA,a=s.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jt(s,t){const e=t();return lt().getBool("DEBUG")&&bJ(s),e}function bJ(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+_J(s,t))}const vJ=596e-10,wJ=65504;function SJ(s){return!!(lt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||vJ<Math.abs(s)&&Math.abs(s)<wJ)}function _J(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function gf(s,t){return Qr(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function CJ(s,t){const e=Qr(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(jt(s,()=>s.shaderSource(e,t)),jt(s,()=>s.compileShader(e)),s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function TJ(s,t){const e=Qr(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(jt(s,()=>s.shaderSource(e,t)),jt(s,()=>s.compileShader(e)),lt().get("ENGINE_COMPILE_ONLY"))return e;if(s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw lk(t,s.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const IJ=/ERROR: [0-9]+:([0-9]+):/g;function lk(s,t){const e=IJ.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const n=+e[1],i=s.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>jl((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,n-1),c=o.slice(n-1,n),u=o.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${jl(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function EJ(s){return Qr(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function MJ(s,t){if(jt(s,()=>s.linkProgram(t)),!lt().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function vx(s,t){if(jt(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function AJ(s,t){const e=Qr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return jt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),jt(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function kJ(s,t){const e=Qr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return jt(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e)),jt(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function NJ(s){return Qr(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function RJ(s,t){const e=lt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const n=`[${s}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>e||t>e){const n=`[${s}x${t}]`,i=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function $J(s){return Qr(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function $_(s,t,e,n,i,r,o){const a=s.getAttribLocation(t,e);return a===-1?!1:(jt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),jt(s,()=>s.vertexAttribPointer(a,i,s.FLOAT,!1,r,o)),jt(s,()=>s.enableVertexAttribArray(a)),!0)}function DJ(s,t,e){zJ(s,e),jt(s,()=>s.activeTexture(s.TEXTURE0+e)),jt(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function FJ(s,t,e){return Qr(s,()=>s.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function LJ(s,t,e){return s.getUniformLocation(t,e)}function PJ(s,t,e,n){jt(s,()=>DJ(s,t,n)),jt(s,()=>s.uniform1i(e,n))}function wx(s,t,e){jt(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),jt(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function D_(s,t){jt(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),jt(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function xf(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+OJ(s,t))}function OJ(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Qr(s,t,e){const n=jt(s,()=>t());if(n==null)throw new Error(e);return n}function zJ(s,t){const e=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+s.TEXTURE0;if(n<s.TEXTURE0||n>e){const i=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${i}.`)}}function yc(s,t=2){return ft(s.slice(0,s.length-t))}function bc(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function yf(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[yc(s),...bc(s)]),t}function BJ(s,t=!1){let e=lt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=lt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&lt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,s=s.map((a,l)=>l>=s.length-2?iy(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=No(s).newShape);let i=ft(s),r=null;s.length<=1&&i<=e?r=[1,i]:s.length===2&&s[0]<=e&&s[1]<=e?r=s:s.length===3&&s[0]*s[1]<=e&&s[2]<=e?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=e&&s[1]*s[2]<=e?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=e&&s[3]<=e?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=e&&s[1]*s[2]*s[3]<=e&&(r=[s[0],s[1]*s[2]*s[3]]);const o=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||o)if(t){const a=yc(s);let l=2,c=2;s.length&&([l,c]=bc(s)),i=a*(l/2)*(c/2),r=Kx(i).map(u=>u*2)}else r=Kx(i);return r}function bf(s){return s%2===0}function pp(s,t){if(s=s.slice(-2),t=t.slice(-2),Ne(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const e=s.slice(-1)[0],n=t.slice(-1)[0];if(e===n||bf(e)&&bf(n)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&bf(s[0])&&bf(t[0])}let Sx,_x;function UJ(s){if(Sx==null){const t=Gi(s);Sx=t.getParameter(t.MAX_TEXTURE_SIZE)}return Sx}function VJ(s){if(_x==null){const t=Gi(s);_x=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_x)}function WJ(s){if(s===0)return 0;let t;const e=Gi(s);return hi(e,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:hi(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function hi(s,t){return s.getExtension(t)!=null}function F_(s){try{if(Gi(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function GJ(s){if(s===0)return!1;const t=Gi(s);if(s===1){if(!hi(t,"OES_texture_float"))return!1}else if(!hi(t,"EXT_color_buffer_float"))return!1;return $0(t)}function HJ(s){if(s===0)return!1;const t=Gi(s);if(s===1){if(!hi(t,"OES_texture_float")||!hi(t,"WEBGL_color_buffer_float"))return!1}else{if(hi(t,"EXT_color_buffer_float"))return $0(t);const n="EXT_color_buffer_half_float";if(hi(t,n)){const i=t.getExtension(n);return qJ(t,i)}return!1}return $0(t)}function $0(s){const t=Wv(s),e=s.createTexture();s.bindTexture(s.TEXTURE_2D,e);const n=1,i=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,n,i,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0);const o=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(e),s.deleteFramebuffer(r),o}function qJ(s,t){const e=Wv(s,t),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const i=1,r=1;s.texImage2D(s.TEXTURE_2D,0,e.internalFormatHalfFloat,i,r,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(o),a}function XJ(s){return s!==2?!1:Gi(s).fenceSync!=null}function dd(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&F(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const te=lt();te.registerFlag("HAS_WEBGL",()=>te.getNumber("WEBGL_VERSION")>0);te.registerFlag("WEBGL_VERSION",()=>F_(2)?2:F_(1)?1:0);te.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);te.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>te.get("WEBGL_VERSION")===2);te.registerFlag("WEBGL_CPU_FORWARD",()=>!0);te.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);te.registerFlag("WEBGL_PACK",()=>te.getBool("HAS_WEBGL"));te.registerFlag("WEBGL_PACK_NORMALIZATION",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_CLIP",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_REDUCE",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_LAZILY_UNPACK",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_CONV_IM2COL",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>UJ(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>VJ(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=te.getNumber("WEBGL_VERSION");return s===0?0:WJ(s)});te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>te.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!uI());te.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>GJ(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>te.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:te.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));te.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>HJ(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_FENCE_API_ENABLED",()=>XJ(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>te.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);te.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});te.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>uI()?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});te.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);te.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);te.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);te.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);te.registerFlag("WEBGL_EXP_CONV",()=>!1);te.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>te.getBool("IS_TEST"));te.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);te.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);te.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(){let s,t,e,n,i,r,o,a,l,c;return lt().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",e="out",n="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=lt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",e="varying",n="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:e,varyingFs:n,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(s,t,e="index"){const n=re(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / ${i}`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * ${i}`:`index -= ${s[r]} * ${i}`;return`${o}; ${a};`}).join("")}function sg(s,t,e="index"){const n=re(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / outShapeStrides[${r}]`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function jJ(s,t){const e=s.length,n=s.map(r=>`${t}[${r}]`),i=new Array(e-1);i[e-2]=n[e-1];for(let r=e-3;r>=0;--r)i[r]=`(${i[r+1]} * ${n[r+1]})`;return i}function KJ(s,t,e="index"){const n=s.map((r,o)=>o),i=jJ(n,t);return i.map((r,o)=>{const a=`int ${s[o]} = ${e} / ${i[o]}`,l=o===i.length-1?`int ${s[o+1]} = ${e} - ${s[o]} * ${i[o]}`:`index -= ${s[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function Gv(s){const t=re(s).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Hv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const ck=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:uk}=Y5;function YJ(s,t,e){const n=[];if(s.forEach(f=>{const p=ft(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:g}=qv(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=n.join(`
`),r=s.map(f=>ZJ(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),o=t.texShape,a=ls(),l=tQ(a);let c,u,h=sQ(a);return t.isPacked?(c=JJ(t.logicalShape,o,e.enableShapeUniforms),u=nQ(a)):(c=QJ(t.logicalShape,o,e.enableShapeUniforms),u=eQ(a)),e.packedInputs&&(h+=aQ),[h,l,u,i,c,r,e.userCode].join(`
`)}function Fc(s,t=!1){const e=s.shapeInfo.logicalShape;switch(e.length){case 0:return bQ(s,t);case 1:return wQ(s,t);case 2:return _Q(s,t);case 3:return TQ(s,t);case 4:return EQ(s,t);case 5:return MQ(s);case 6:return AQ(s);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function hk(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return yQ(s);case 1:return vQ(s,t);case 2:return SQ(s,t);case 3:return CQ(s,t);default:return IQ(s,t)}}function ZJ(s,t,e=!1,n){let i="";e?i+=hk(s,n):i+=Fc(s,n);const r=s.shapeInfo.logicalShape,o=t.logicalShape;return r.length<=o.length&&(e?i+=kQ(s,t):i+=NQ(s,t)),i}function JJ(s,t,e){switch(s.length){case 0:return dk();case 1:return lQ(s,t,e);case 2:return gQ(s,t,e);case 3:return uQ(s,t,e);default:return dQ(s,t,e)}}function QJ(s,t,e){switch(s.length){case 0:return dk();case 1:return cQ(s,t,e);case 2:return xQ(s,t,e);case 3:return hQ(s,t,e);case 4:return fQ(s,t,e);case 5:return pQ(s,t);case 6:return mQ(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function tQ(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function eQ(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function nQ(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function sQ(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${iQ}
    ${rQ}
    ${oQ}
  `}const iQ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,rQ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,oQ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aQ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function dk(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function lQ(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function cQ(s,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function uQ(s,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[2]/2),r=i*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function hQ(s,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${sg(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=nl(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function dQ(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[s.length-1]/2),r=i*Math.ceil(s[s.length-2]/2);let o=r,a="",l="b, r, c";for(let c=2;c<s.length-1;c++)o*=s[s.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${s.length}(${l});
    }
  `}function fQ(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${sg(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=nl(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function pQ(s,t){const e=nl(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function mQ(s,t){const e=nl(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function gQ(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ne(s,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const i=Math.ceil(s[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function xQ(s,t,e){return Ne(s,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function sl(s){return`offset${s}`}function yQ(s){const t=s.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=ls();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function bQ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[i,r]=s.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const o=sl(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${e}, uv);
    }
  `}function vQ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=s.shapeInfo.texShape,r=ls();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function wQ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Lc(s)}
      }
    `;const i=s.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=sl(e);return o===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function SQ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=r[0],a=r[1],l=ls();if(r!=null&&Ne(e,r))return t?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function _Q(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&Ne(e,r)){if(t)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:o,keptDims:a}=No(e),l=o;if(l.length<e.length){const d=Pc(s,l),f=["row","col"];return`
      ${Fc(d,t)}
      float ${i}(int row, int col) {
        return ${i}(${Oc(f,a)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Lc(s)}
      }
    `;const c=r[0],u=r[1],h=sl(n);return u===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `:c===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${n}, uv);
  }
`}function CQ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],p=Pc(s,d),g=["b","row","col"];return`
        ${hk(p,t)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${Oc(g,f)});
        }
      `}const a=ls();if(t)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(e[2]/2),h=u*Math.ceil(e[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function TQ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],o=e[2],{newShape:a,keptDims:l}=No(e),c=a;if(c.length<e.length){const g=Pc(s,c),m=["row","col","depth"];return`
        ${Fc(g,t)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${Oc(m,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${Lc(s)}
      }
    `;const u=s.shapeInfo.texShape,h=u[0],d=u[1],f=s.shapeInfo.flatOffset;if(d===r&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===o&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;const p=sl(n);return t?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function IQ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=ls();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${e}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,o=r.length,a=s.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)f=`int b${g}, `+f,d*=r[o-g-1],p=`b${g} * ${d} + `+p;return`
    vec4 ${n}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${e}, uv);
    }
  `}function EQ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:c}=No(e);if(l.length<e.length){const y=Pc(s,l),v=["row","col","depth","depth2"];return`
      ${Fc(y,t)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${Oc(v,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${Lc(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,m=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=sl(n);return t?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function MQ(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=t[4],r=t[3]*i,o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:c}=No(t);if(l.length<t.length){const g=Pc(s,l),m=["row","col","depth","depth2","depth3"];return`
      ${Fc(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Oc(m,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${Lc(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===i&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=sl(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function AQ(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:i,keptDims:r}=No(t);if(i.length<t.length){const m=Pc(s,i),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Fc(m)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Oc(x,r)});
      }
    `}const o=t[5],a=t[4]*o,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Lc(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const g=sl(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Lc(s){const t=s.name,e=ft(s.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function kQ(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=uk(s.shapeInfo.logicalShape,t.logicalShape),l=qe(o),c=o-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(y=>`coords.${h[y+c]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=s.shapeInfo.logicalShape.map((y,v)=>`coords.${h[v+c]}`).join(", ");let f="return outputValue;";const g=ft(s.shapeInfo.logicalShape)===1,x=ft(t.logicalShape)===1;if(r===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const y=r-2,v=r-1;a.indexOf(y)>-1&&a.indexOf(v)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${n}(${d});
      ${f}
    }
  `}function NQ(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=t.texShape,o=s.shapeInfo.texShape,a=s.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!s.shapeInfo.isUniform&&a===l&&s.shapeInfo.flatOffset==null&&Ne(o,r))return`
      float ${i}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=qe(l),u=uk(s.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${f[g+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((g,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${n}(${p});
    }
  `}function qe(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function qv(s,t,e){const{newShape:n,keptDims:i}=No(t),r=t.length,o=s&&r===3&&t[0]===1,a=o?t.slice(1):n,l=!s&&r>1&&!Ne(t,e)&&n.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:i}}function Pc(s,t){const e=JSON.parse(JSON.stringify(s));return e.shapeInfo.logicalShape=t,e}function Oc(s,t){return t.map(e=>s[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(s,t,e,n){const i=e.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),o={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=YJ(i,o,t),l=TJ(s.gl,a),c=s.createProgram(l);return lt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o},fk(s,t,c))}function fk(s,t,e){const n={},i={},r={},o=[];let a,l,c,u=null,h=null;h=s.getUniformLocation(e,"NAN",!1),lt().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(e,"INFINITY",!1));const d=!1;for(let f=0;f<t.variableNames.length;f++){const p=t.variableNames[f];n[p]=s.getUniformLocation(e,p,d),n[`offset${p}`]=s.getUniformLocation(e,`offset${p}`,d),t.enableShapeUniforms&&(i[`${p}Shape`]=s.getUniformLocation(e,`${p}Shape`,d),r[`${p}TexShape`]=s.getUniformLocation(e,`${p}TexShape`,d))}return t.enableShapeUniforms&&(a=s.getUniformLocation(e,"outShape",d),c=s.getUniformLocation(e,"outShapeStrides",d),l=s.getUniformLocation(e,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((f,p)=>{o[p]=s.getUniformLocation(e,f.name,d)}),{uniformLocations:n,customUniformLocations:o,infLoc:u,nanLoc:h,inShapesLocations:i,inTexShapesLocations:r,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function L_(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((e,n)=>{const i=e.logicalShape,r=t[n],o=r.shape;if(!Ne(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,l=r.isUniform?null:r.texData.texShape;if(!Ne(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function $Q(s,t,e,n,i){t.program.enableShapeUniforms||(L_(t.inShapeInfos,e),L_([t.outShapeInfo],[n]));const r=n.texData.texture,o=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):s.setOutputMatrixTexture(r.texture,o[0],o[1]),s.setProgram(t.webGLProgram),lt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,c)=>{const u=t.program.variableNames[c],h=t.uniformLocations[u],d=t.uniformLocations[`offset${u}`],f=t.inShapesLocations[`${u}Shape`],p=t.inTexShapesLocations[`${u}TexShape`];if(f){const{uniformShape:g}=qv(t.program.packedInputs,l.shape,l.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(p&&s.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(ft(l.shape)<2)s.gl.uniform1f(h,l.uniformValues[0]);else{let g=l.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(h,g)}return}l.texData.slice!=null&&d!=null&&s.gl.uniform1i(d,l.texData.slice.flatOffset),s.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:s.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(a,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){const l=re(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach((l,c)=>{const u=t.customUniformLocations[c],h=i[c];if(l.type==="float")s.gl.uniform1fv(u,h);else if(l.type==="vec2")s.gl.uniform2fv(u,h);else if(l.type==="vec3")s.gl.uniform3fv(u,h);else if(l.type==="vec4")s.gl.uniform4fv(u,h);else if(l.type==="int")s.gl.uniform1iv(u,h);else if(l.type==="ivec2")s.gl.uniform2iv(u,h);else if(l.type==="ivec3")s.gl.uniform3iv(u,h);else if(l.type==="ivec4")s.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),s.executeProgram()}function DQ(s,t,e){let n="";t.concat(e).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=qv(s.packedInputs,o.shape,l);let d="",f="",p="";if(u.length===1&&s.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!s.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!s.packedInputs){const w=re(u);p=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=o.shape.length,m=u.length===2&&Ne(o.shape,l),x=ft(o.shape)===1,y=uc(o.shape,e.shape),v=!s.packedInputs&&g===e.shape.length&&Ne(l,e.texData.texShape),b=s.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${v}_${c?h:""}_${u.length}_${x}_${y}_${m}_${d}_${f}_${p}_${b}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;n+=`${o.shape}_${l}_${a}`}});const i=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+i+`${lt().getNumber("WEBGL_VERSION")}`,r}function cs(s){return lt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FQ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=zu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?sg(["r","c","d"],t):nl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LQ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=zu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?sg(["r","c","d"],t):nl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PQ{constructor(t){this.variableNames=["A"],this.outTexUsage=zs.DOWNLOAD;const e=ls();this.outputShape=t,this.userCode=`
      ${ck}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OQ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=zs.DOWNLOAD;const e=ls();this.outputShape=t,this.userCode=`
      ${ck}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zQ={R:0,G:1,B:2,A:3};class P_{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<n.length;a++){const l=n[a];o+=`
          if(offset == ${a}) {
            result = values[${zQ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Hv():Gv(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BQ{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let i="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Hv():Gv(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(s){const t=ls(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return CJ(s,e)}function VQ(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return AJ(s,t)}function WQ(s){const t=new Uint16Array([0,1,2,2,1,3]);return kJ(s,t)}function fd(s,t,e,n,i,r){RJ(t,e);const o=NJ(s),a=s.TEXTURE_2D;return jt(s,()=>s.bindTexture(a,o)),jt(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),jt(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),jt(s,()=>s.texParameteri(a,s.TEXTURE_MIN_FILTER,s.NEAREST)),jt(s,()=>s.texParameteri(a,s.TEXTURE_MAG_FILTER,s.NEAREST)),lt().getNumber("WEBGL_VERSION")===1?jt(s,()=>s.texImage2D(a,0,n,t,e,0,i,r,null)):jt(s,()=>s.texStorage2D(a,1,n,t,e)),jt(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function pk(s){return s.internalFormatFloat}function GQ(s,t,e,n){const[i,r]=hd(t,e);return fd(s,i,r,pk(n),n.textureFormatFloat,s.FLOAT)}function mk(s){return s.internalFormatHalfFloat}function HQ(s,t,e,n){const[i,r]=hd(t,e);return fd(s,i,r,mk(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function gk(s){return s.downloadTextureFormat}function qQ(s,t,e,n){const[i,r]=hd(t,e);return fd(s,i,r,gk(n),s.RGBA,s.UNSIGNED_BYTE)}function xk(s){return s.internalFormatPackedFloat}function XQ(s,t,e,n){const[i,r]=Dc(t,e);return fd(s,i,r,xk(n),s.RGBA,s.FLOAT)}function yk(s){return s.internalFormatPackedHalfFloat}function jQ(s,t,e,n){const[i,r]=Dc(t,e);return fd(s,i,r,yk(n),s.RGBA,n.textureTypeHalfFloat)}function KQ(s,t,e){return jt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),$_(s,t,"clipSpacePos",e,3,20,0)&&$_(s,t,"uv",e,2,20,12)}function YQ(s,t,e,n,i,r){jt(s,()=>s.bindTexture(s.TEXTURE_2D,t));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(e*n*4),a=s.UNSIGNED_BYTE,l=s.RGBA):(o=new Float32Array(e*n*4),a=s.FLOAT,l=r.internalFormatPackedFloat),o.set(i),lt().getNumber("WEBGL_VERSION")===2?jt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e,n,s.RGBA,a,o)):jt(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,e,n,0,s.RGBA,a,o)),jt(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function ZQ(s,t,e){jt(s,()=>s.bindTexture(s.TEXTURE_2D,t)),e.data instanceof Uint8Array?lt().getNumber("WEBGL_VERSION")===2?jt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e.width,e.height,s.RGBA,s.UNSIGNED_BYTE,e.data)):jt(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,e.width,e.height,0,s.RGBA,s.UNSIGNED_BYTE,e.data)):lt().getNumber("WEBGL_VERSION")===2?jt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,e)):jt(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,e)),jt(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function JQ(s,t,e,n){const i=s.createBuffer();jt(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,i));const a=4*4*t*e;return jt(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,a,s.STREAM_READ)),jt(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,0)),jt(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),i}function QQ(s,t,e){const n=s,i=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,i),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),i}function ttt(s,t,e,n){const[i,r]=hd(t,e),o=4,a=new Uint8Array(xJ(t*e,o));return jt(s,()=>s.readPixels(0,0,i,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function ett(s,t,e,n,i,r,o,a){const l=s,c=new Float32Array(yJ(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function ntt(s,t,e){const n=new Float32Array(t*e*4);return jt(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cx{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=lt().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,pJ(e,t)):this.gl=Gi(e);let n="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),lt().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=gf(this.gl,r),hi(this.gl,o))this.textureHalfFloatExtension=gf(this.gl,o);else if(lt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),hi(this.gl,i))this.colorBufferHalfFloatExtension=gf(this.gl,i);else if(lt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",hi(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(hi(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=VQ(this.gl),this.indexBuffer=WQ(this.gl),this.framebuffer=$J(this.gl),this.textureConfig=Wv(this.gl,this.textureHalfFloatExtension)}get debug(){return lt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;jt(t,()=>t.finish()),jt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),jt(t,()=>t.deleteFramebuffer(this.framebuffer)),jt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),jt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),jt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),GQ(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),HQ(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),qQ(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),ZQ(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,i){this.throwIfDisposed(),YQ(this.gl,t,e,n,i,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),jQ(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),XQ(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(D_(this.gl,this.framebuffer),this.outputTexture=null),jt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>ttt(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,i,r,o){return ett(this.gl,t,e,n,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return QQ(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const i=JQ(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(lt().getBool("WEBGL_FENCE_API_ENABLED")){const i=t,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},e=r}else lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>ntt(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=UQ(e));const n=EJ(e);return jt(e,()=>e.attachShader(n,this.vertexShader)),jt(e,()=>e.attachShader(n,t)),MJ(e,n),this.debug&&vx(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=KQ(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&jt(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&vx(this.gl,this.program),jt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?FJ(this.gl,t,e):LJ(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),jt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),PJ(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[i,r]=Dc(e,n);this.setOutputMatrixTextureDriver(t,i,r)}setOutputMatrixWriteRegion(t,e,n,i){this.setOutputMatrixWriteRegionDriver(n,t,i,e)}setOutputPackedMatrixWriteRegion(t,e,n,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&vx(this.gl,this.program),xf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),jt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),jt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=gf(this.gl,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(i.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await SS(()=>this.disposed||this.isQueryAvailable(t,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),i=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=stt(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in lt().platform&&(n=lt().platform.setTimeoutCustom.bind(lt().platform)),SS(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),wx(this.gl,t,this.framebuffer),this.debug&&xf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(wx(this.gl,this.outputTexture,this.framebuffer),this.debug&&xf(this.gl)):D_(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const i=this.gl;wx(i,t,this.framebuffer),this.debug&&xf(i),this.outputTexture=t,jt(i,()=>i.viewport(0,0,e,n)),jt(i,()=>i.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,i){this.throwIfDisposed(),jt(this.gl,()=>this.gl.scissor(t,e,n,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function stt(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:itt,bincountImpl:bk,bincountReduceImpl:rtt,castImpl:ott,ceilImpl:att,concatImpl:ltt,equalImpl:ctt,expImpl:utt,expm1Impl:htt,floorImpl:dtt,gatherNdImpl:ftt,gatherV2Impl:ptt,greaterImpl:mtt,greaterEqualImpl:gtt,lessImpl:xtt,lessEqualImpl:ytt,linSpaceImpl:btt,logImpl:vtt,maxImpl:wtt,maximumImpl:Stt,minimumImpl:_tt,multiplyImpl:Ctt,negImpl:Ttt,notEqualImpl:Itt,prodImpl:Ett,raggedGatherImpl:Mtt,raggedRangeImpl:Att,raggedTensorToTensorImpl:ktt,rangeImpl:Ntt,rsqrtImpl:Rtt,scatterImpl:$tt,sigmoidImpl:Dtt,simpleAbsImpl:vk,sliceImpl:Ftt,sparseFillEmptyRowsImpl:Ltt,sparseReshapeImpl:Ptt,sparseSegmentReductionImpl:wk,sqrtImpl:Ott,stridedSliceImpl:ztt,stringNGramsImpl:Btt,stringSplitImpl:Utt,stringToHashBucketFastImpl:Vtt,subImpl:Wtt,tileImpl:Gtt,topKImpl:Htt,transposeImpl:Xv,uniqueImpl:qtt}=Jj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(s,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${s}.${e}`)}function rs(s,t){return t===1?[s]:Sk(s,t)}function Xtt(s,t){if(s===1)return"rc";let e="";for(let n=0;n<s;n++)e+=t[n],n<s-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jtt{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=cs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=rs("rc",this.rank),n=qe(this.rank),i=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let i=0;i<=1;i++){let r=`${n===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${t[t.length-1-o]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${i};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _k{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let n="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${Ktt(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Hv():Gv(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}}function Ktt(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?KJ(["r","c","d"],"inputShape"):nl(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ytt{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const i=z_(e,n),r=B_(t,i,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=O_(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let a;return i===Vn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===Vn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===Vn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===Vn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===Vn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,n,i){if(this.freeTextures==null)return;const r=z_(n,i),o=B_(e,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=O_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=lt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ztt(s,t){const e=s;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function O_(s,t,e,n,i){const r=Jtt(t,n);let o;if(i){const[l,c]=Dc(s[0],s[1]);o=l*c}else{const[l,c]=hd(s[0],s[1]);o=l*c}const a=Ztt(e,r);return o*a}function Jtt(s,t){switch(s){case Vn.PACKED_2X2_FLOAT32:return xk(t);case Vn.PACKED_2X2_FLOAT16:return yk(t);case Vn.UNPACKED_FLOAT32:return pk(t);case Vn.UNPACKED_FLOAT16:return mk(t);case Vn.PACKED_4X1_UNSIGNED_BYTE:return gk(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function Qtt(s){return lt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?Vn.PACKED_2X2_FLOAT32:Vn.UNPACKED_FLOAT32:s?Vn.PACKED_2X2_FLOAT16:Vn.UNPACKED_FLOAT16}function z_(s,t){if(s===zs.UPLOAD)return Vn.PACKED_2X2_FLOAT32;if(s===zs.RENDER||s==null)return Qtt(t);if(s===zs.DOWNLOAD||s===zs.PIXELS)return Vn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function B_(s,t,e){return`${s[0]}_${s[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ur{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const wi="if (isnan(x)) return x;",tet="return x;",U_="return abs(x);",eet="return (x >= 0.0) ? x : (exp(x) - 1.0);",net=wi+`
  return (x < 0.0) ? 0.0 : x;
`,set=wi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,kl="return x;",iet="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oet="return x;",aet=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,cet=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uet=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,het="return 1.0 / (1.0 + exp(-1.0 * x));";class pa{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class det{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);const e=t.length,n=rs("rc",e),i=qe(e),r=Xtt(e,n),o=n.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fet=m2,pet=1e-7,met=1e-4,vf={};function get(s){return s in vf||(vf[s]={}),vf[s]}const xet=lt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),yet=600;function bet(){return lt().global.screen==null?1024:lt().global.screen.height*lt().global.screen.width*window.devicePixelRatio*yet/1024/1024}class ig extends sy{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!lt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Cx)e=t;else{const n=Gi(lt().getNumber("WEBGL_VERSION"),t);e=new Cx(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=Gi(lt().getNumber("WEBGL_VERSION"));e=new Cx(n),this.binaryCache=get(lt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Ytt(this.gpgpu),this.numMBBeforeWarning=bet(),this.texData=new MT(this,nr())}nextDataId(){return ig.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,i,r,o){const a=this.makeTensorInfo(e,n),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[i,r]},l.texShape=[i,r];const c=yf(e),u=new P_(c,!1,o),h=this.runWebGLProgram(u,[a],n,[[i,r]]);return h.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,n){if((lt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||lt().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:e,dtype:n,values:t,usage:zs.UPLOAD,refCount:1}),i}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,n,i,r){if(lt().getBool("DEBUG")&&this.checkNumericalProblems(e),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:i,values:e,usage:zs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=e;if(o!=null){let d;l?d=new pa(a,kl):d=new Ur(a,kl);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(n!=null)return this.convertAndCacheOnCPU(t);if(i==="string")return n;const c=this.activeTimers!=null;let u;c&&(u=ds());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=jr(d,f)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=ds()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const p=this.pendingRead.get(t);return new Promise(g=>p.push(g))}const e=this.texData.get(t),{values:n,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=e;if(r!=null){let p;l?p=new pa(i,kl):p=new Ur(i,kl);const g=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:o}],o),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(n!=null)return this.convertAndCacheOnCPU(t);if(lt().getBool("DEBUG")&&!lt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&lt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&lt().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...mf(i))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=p[0],m=p[1];h=jr(g,m)}else if(c==null)h=this.getValuesFromTexture(t);else{const p=ft(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;jt(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(p=>p(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&nr().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const n=this.texData.get(t),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:c}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new pa(r,kl):f=new Ur(r,kl);const p=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.readToGPU(p,e);return this.disposeIntermediateTensorInfo(p),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=nr().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>Co(i));return me(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return me(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const n=t[e];if(!SJ(n))throw lt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:i}=this.texData.get(t),r=ft(e);if(lt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...mf(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const o=lt().getBool("WEBGL_PACK")&&i===!0,a=o?yf(e):e,l=o?new OQ(a):new PQ(a),c=this.runWebGLProgram(l,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=rc(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=rc(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=QB(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ds(),endMs:null}}endTimer(t){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=ds(),t)}async getQueryTime(t){if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(e,i,r,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=xet){return lt().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&ft(n.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Os("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return fet(t.shape,e)}packedUnaryOp(t,e,n){const i=new pa(t.shape,e),r=this.compileAndRun(i,[t],n);return nr().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const i=vk(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,i)}if(lt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,U_,t.dtype);const e=new Ur(t.shape,U_),n=this.compileAndRun(e,[t]);return nr().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Yu(n[0])){const r=n.map(o=>bo(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return this.texData.get(i).usage=null,{dataId:i,shape:t,dtype:e}}makeOutput(t,e,n){return nr().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new det(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new jtt(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[yc(t.shape),...bc(t.shape)],i={dtype:t.dtype,shape:n,dataId:t.dataId},r=[yc(e),...bc(e)],o=new _k(r,n),a=!0,l=[n],c=this.runWebGLProgram(o,[i],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:i,shape:r,dtype:o}=n;if(e!=null){const d=ft(r),f=e[0]*e[1]*4;F(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=yf(r);let l;i?l=new LQ(a):l=new FQ(a);const c=!0,u=[e!=null?e:mf(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],o,u,c,e);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(t,e,n,i,r=!1,o){const a=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===zu.DENSE){const x=o!=null?o:mf(t.outputShape);l.texShape=x.map(y=>y*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),ft(a.shape)===0)return l.values=Hn(a.dtype,0),a;const c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(x.dataId);if(y.texture==null){if(!t.packedInputs&&ft(x.shape)<=lt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:y.values};t.packedInputs&&(y.isPacked=!0,y.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!y.isPacked!=!!t.packedInputs)x=y.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),y=this.texData.get(x.dataId);else if(y.isPacked&&!pp(y.shape,x.shape)){const v=x,b=x.shape;x.shape=y.shape,x=this.packedReshape(x,b),c.push(x),y=this.texData.get(x.dataId),v.shape=b}return{shape:x.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=DQ(t,u,h),f=this.getAndSaveBinary(d,()=>RQ(this.gpgpu,t,u,h)),p=this.activeTimers!=null;let g;p&&(g=this.startTimer()),lt().get("ENGINE_COMPILE_ONLY")||$Q(this.gpgpu,f,u,h,i),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),p&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)}));const m=lt().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const x=ds();x-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!lt().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,n,i,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,i,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(lt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=rt(()=>{if(!lt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=lt().getBool("DEBUG");lt().set("DEBUG",!1);const e=this.abs(le(1e-8)).dataSync()[0];if(lt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?pet:met}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:i,values:r,texture:o,usage:a,isPacked:l}=e;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=ds());let h=e.texShape;if(h==null&&(h=BJ(n,l),e.texShape=h),r!=null){const d=yf(n);let f,p=h[1],g=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([p,g]=Dc(h[0],h[1])),l?f=new BQ(d,m):f=new P_(d,m);const x=m?[g,p]:h,y=this.makeTensorInfo(x,i),v=this.texData.get(y.dataId);m?v.usage=zs.PIXELS:v.usage=zs.UPLOAD,v.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),p,g,r);const b=[[g,p]],w=!0,_=this.runWebGLProgram(f,[y],i,b,w),C=this.texData.get(_.dataId);e.texShape=C.texShape,e.isPacked=C.isPacked,e.usage=C.usage,lt().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(e.texture=C.texture,e.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=ds()-u)}else{const d=this.acquireTexture(h,a,i,l);e.texture=d}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:i}=n;return this.releaseGPUData(t),e!=null&&(n.values=vet(e,i)),n.values}acquireTexture(t,e,n,i){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,i)}computeBytes(t,e){return t[0]*t[1]*Yx(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(i=>{try{this.checkCompletion_(e),i(!0)}catch(r){throw r}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await b2(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(lk(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:i,nanLoc:r,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=fk(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=i,t.nanLoc=r,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}createTensorFromTexture(t,e,n){const{texture:i,height:r,width:o,channels:a}=t,l=nr().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,e,n,r,o,a);return nr().makeTensorFromDataId(c,e,n,l)}}ig.nextDataId=0;function vet(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<e.length;++n)e[n]=Math.round(s[n]);return e}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */hI()&&CI("webgl",()=>new ig,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jv=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class vc{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=de(e,n),this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pd=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class md{constructor(t,e,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=de(e,n);const r=this.outputShape.length;this.enableShapeUniforms=cs(r);let o="";if(i)if(r===0||ft(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${qe(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=rs("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const wet={kernelName:yh,backendName:"webgl",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.makeTensorInfo(n.shape,"complex64"),o=e.texData.get(r.dataId),a=Rs({inputs:{x:n},backend:e}),l=Rs({inputs:{x:i},backend:e});return o.complexTensorInfos={real:a,imag:l},r}const _et={kernelName:fy,backendName:"webgl",kernelFunc:Uo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck="return (a < 0.) ? b * a : a;",Tk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Cet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n,o=e.makeTensorInfo([],"float32",Ro(r,"float32")),a=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new md(Tk,i.shape,o.shape):new vc(Ck,i.shape,o.shape),l=e.runWebGLProgram(a,[i,o],"float32");return e.disposeIntermediateTensorInfo(o),l}const Tet={kernelName:Yp,backendName:"webgl",kernelFunc:Cet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik="return (a < 0.) ? b * a : a;",Ek=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Iet(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t,r=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new md(Ek,n.shape,i.shape):new vc(Ik,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],"float32")}const Eet={kernelName:mm,backendName:"webgl",kernelFunc:Iet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc="if (isnan(x)) return x;";function Ee({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const h=a.texData.get(o.dataId),d=e(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=lt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new pa(o.shape,t):u=new Ur(o.shape,s),a.runWebGLProgram(u,[o],l)}}function Kn({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(n&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[m,x]=[[p.complexTensorInfos.real,g.complexTensorInfos.real],[p.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{const[b,w]=v,_={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:c.shape},S=new vc(s,l.shape,c.shape);return u.runWebGLProgram(S,[_,C],Ms(b.dtype,w.dtype))}),y=Uo({inputs:{real:m,imag:x},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(x),y}const h=r||Ms(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const p=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,m=l.dtype==="string"?Oa(p):p,x=l.dtype==="string"?Oa(g):g,[y,v]=i(l.shape,c.shape,m,x,h),b=u.makeTensorInfo(v,h),w=u.texData.get(b.dataId);return w.values=y,b}const d=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return d?f=new md(t,l.shape,c.shape,e):f=new vc(s,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function Bu(s,t=!1){if(s==="linear")return t?oet:tet;if(s==="relu")return t?cet:net;if(s==="elu")return t?aet:eet;if(s==="relu6")return t?uet:set;if(s==="prelu")return t?Ek:Ik;if(s==="leakyrelu")return t?Tk:Ck;if(s==="sigmoid")return t?het:iet;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mk{constructor(t,e,n,i=!1,r=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=cs(this.outputShape.length);const u=i?t[1]:t[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",x="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let v="rc.x",b="rc.x";t[0]<e[0]?v=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${v};
          int batchB = ${b};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${g[0]});
          result += (${p[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class W_{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=de(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_="return a * b;";function Kv(s){const{inputs:t,backend:e}=s,{a:n,b:i}=t,r=Ms(n.dtype,i.dtype);if(n.dtype==="complex64"){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),c=new W_(V_.REAL,n.shape,i.shape),u=new W_(V_.IMAG,n.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=Uo({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}if(e.shouldExecuteOnCPU([n,i])){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),[c,u]=Ctt(n.shape,i.shape,a.values,l.values,r),h=e.makeTensorInfo(u,r),d=e.texData.get(h.dataId);return d.values=c,h}let o;return lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new md(G_,n.shape,i.shape):o=new vc(G_,n.shape,i.shape),e.runWebGLProgram(o,[n,i],r)}const Met={kernelName:Eh,backendName:"webgl",kernelFunc:Kv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aet(s,t,e){const n=[yc(s.shape),...bc(s.shape)],i={dtype:s.dtype,shape:n,dataId:s.dataId},r=[yc(t),...bc(t)],o=new _k(r,n),a=!0,l=[n],c=e.runWebGLProgram(o,[i],s.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=e,a=ft(i.shape),l=kT(r,a),c=ft(l);F(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(i.dataId);return u.isPacked&&!pp(i.shape,l)&&!(u.texture!==null&&pp(u.shape,l))?Aet(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const ket={kernelName:xm,backendName:"webgl",kernelFunc:Dt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H_{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];const a=Math.floor(n/4)*4,l=n%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${oc(h)?h.toPrecision(2):h}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Net{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(n/4)*4,h=n%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ret(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:s[1],n=Vm(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function il(s,t,e,n){const i=Ret(s.shape);let r=s;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:c}=i[o];let u,h;e==="mean"?u=o===0?new H_({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},a):new H_({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c}):u=new Net({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},e),h=r,r=n.runWebGLProgram(u,[r],t),h.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $et{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const i=qe(this.rank),r=Det(e);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function Det(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let i=0;i<s.length;i++)n[s[i]]=e[i];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fet{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=qe(this.rank),r=Sk("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=r[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rg(s,t,e){const n=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fet(s.shape,t):new $et(s.shape,t);return e.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Let(s,t,e,n){const i=t,r=s.shape.length,o=ge(i,s.shape);let a=o;const l=rn(a,r),c=l!=null;let u=s;c&&(u=rg(s,l,n),a=mn(a.length,r)),jn("sum",a,r);const[h,d]=Pn(u.shape,a);let f=h;e&&(f=pn(h,o));const p=ft(d),m=ft(s.shape)/p,x=Dt({inputs:{x:u},attrs:{shape:[m,p]},backend:n}),y=Qy(s.dtype),v=il(x,y,"sum",n),b=Dt({inputs:{x:v},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),c&&n.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function og(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;return Let(i,r,o,e)}const Pet={kernelName:_m,backendName:"webgl",kernelFunc:og};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{perm:r}=n,o=e,a=i.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=Xv(h,i.shape,i.dtype,r,l);c=o.makeTensorInfo(l,i.dtype);const f=o.texData.get(c.dataId);f.values=d}else c=rg(i,r,o);return c}const Oet={kernelName:Kl,backendName:"webgl",kernelFunc:as};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ak=1e3;function mp({a:s,b:t,transposeA:e,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=s.shape.length,u=t.shape.length,h=e?s.shape[c-2]:s.shape[c-1],d=n?t.shape[u-1]:t.shape[u-2],f=e?s.shape[c-1]:s.shape[c-2],p=n?t.shape[u-2]:t.shape[u-1],g=s.shape.slice(0,-2),m=t.shape.slice(0,-2),x=ft(g),y=ft(m),b=de(s.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,p]);F(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);const w=e?[x,h,f]:[x,f,h],_=n?[y,p,d]:[y,d,p],C=Dt({inputs:{x:s},backend:i,attrs:{shape:w}}),S=Dt({inputs:{x:t},backend:i,attrs:{shape:_}}),T=[C,S],I=Math.max(x,y),M=e?C.shape[1]:C.shape[2],$=r!=null,E=o!=null,A=l==="leakyrelu",k=l!=null?Bu(l,!0):null,R=$||E||A||k!=null;let B;if((f===1||p===1)&&M>Ak&&R===!1){let D=C,V=S;e&&(D=as({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),T.push(D)),n&&(V=as({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),T.push(V));const q=p!==1,G=p===1;let K=D;q&&(K=Dt({inputs:{x:D},backend:i,attrs:{shape:[I,M,1]}}),T.push(K));const ot=p===1?2:1;let ht=V;G&&(ht=Dt({inputs:{x:V},backend:i,attrs:{shape:[I,1,M]}}),T.push(ht));const J=Kv({inputs:{a:K,b:ht},backend:i});B=og({inputs:{x:J},backend:i,attrs:{axis:ot,keepDims:!0}}),T.push(J)}else{const D=Ms(s.dtype,t.dtype),V=new Mk(w,_,[I,f,p],e,n,$,k,E,A),q=[C,S];if(r!=null&&q.push(r),E&&q.push(o),A){const G=i.makeTensorInfo([],"float32",Ro(a,"float32"));q.push(G),T.push(G)}B=i.runWebGLProgram(V,q,D)}const L=Dt({inputs:{x:B},backend:i,attrs:{shape:b}});T.push(B);for(const D of T)i.disposeIntermediateTensorInfo(D);return L}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zet(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;return mp({a:i,b:r,transposeA:l,transposeB:c,backend:e,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const Bet={kernelName:Vf,backendName:"webgl",kernelFunc:zet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_="return abs(x);";function Uet(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=e.texData.get(n.dataId),o=vk(r.values);return e.makeTensorInfo(n.shape,n.dtype,o)}let i;return lt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new pa(n.shape,q_):i=new Ur(n.shape,q_),e.runWebGLProgram(i,[n],n.dtype)}const Vet={kernelName:kp,backendName:"webgl",kernelFunc:Uet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wet=wi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Get=Ee({opSnippet:Wet}),Het={kernelName:Ju,backendName:"webgl",kernelFunc:Get};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qet=wi+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Xet=Ee({opSnippet:qet}),jet={kernelName:Qu,backendName:"webgl",kernelFunc:Xet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_="return a + b;",Ket=Kn({opSnippet:X_,packedOpSnippet:X_,supportsComplex:!0,cpuKernelImpl:itt}),Yet={kernelName:Ec,backendName:"webgl",kernelFunc:Ket};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zet{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jet{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(s){const{inputs:t,backend:e}=s,n=t;if(n.length===1)return Rs({inputs:{x:n[0]},backend:e});if(n.length>lt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),c=Rf({inputs:n.slice(0,l),backend:e}),u=Rf({inputs:n.slice(l),backend:e});return Rf({inputs:[c,u],backend:e})}const i=n.map(l=>l.dtype).reduce((l,c)=>Ms(l,c)),r=n.map(l=>l.shape),a=lt().getBool("WEBGL_PACK")?new Jet(n[0].shape,r):new Zet(n[0].shape,r);return e.runWebGLProgram(a,n,i)}const Qet={kernelName:ay,backendName:"webgl",kernelFunc:Rf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=ge(r,i.shape);let c=l;const u=rn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=mn(c.length,a)),jn("all",c,a);const[d,f]=Pn(h.shape,c),p=ft(f),g=Dt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=il(g,g.dtype,"all",e);let x;if(o){const y=pn(d,l);x=Dt({inputs:{x:m},backend:e,attrs:{shape:y}})}else x=Dt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const ent={kernelName:ly,backendName:"webgl",kernelFunc:tnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=ge(r,i.shape);let c=l;const u=rn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=mn(c.length,a)),jn("any",c,a);const[d,f]=Pn(h.shape,c),p=ft(f),g=Dt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=il(g,g.dtype,"any",e);let x;if(o){const y=pn(d,l);x=Dt({inputs:{x:m},backend:e,attrs:{shape:y}})}else x=Dt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const snt={kernelName:cy,backendName:"webgl",kernelFunc:nnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class int{constructor(t,e,n){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=e==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rnt{constructor(t,e,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=qe(l),u=rs("coords",l);let h,d;if(o===1){d=l+1;const S=qe(d);h=`
        ${S} sourceLocR = ${S}(${u.join()}, 0);
        ++${u[l-1]};
        ${S} sourceLocG = ${S}(${u.join()}, 0);
        ++${u[l-2]};
        ${S} sourceLocA = ${S}(${u.join()}, 0);
        --${u[l-1]};
        ${S} sourceLocB = ${S}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],g=f.map(S=>"int "+S),m=rs("sourceLocR",d-1).concat("inIdx.r"),x=rs("sourceLocG",d-1).concat("inIdx.g"),y=rs("sourceLocB",d-1).concat("inIdx.b"),v=rs("sourceLocA",d-1).concat("inIdx.a"),b=n==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${v.join()})));`,_=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,C=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(s,t,e,n=null){let i=t.shape[0],r=t.shape[1];n!=null&&(i=n.shape[0],r=n.shape[1]);const o=Vm(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new int(a,e,n==null),c=[t];n!=null&&c.push(n);const u=s.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=kk(s,t,e,u);return s.disposeIntermediateTensorInfo(u),h}function Nk(s,t,e,n=null){const i=n!=null?n.shape:t.shape,r=i[i.length-1],o=Vm(r),a=new rnt(i,o,e,n==null),l=n==null?[t]:[t,n],c=s.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=Nk(s,t,e,c);return s.disposeIntermediateTensorInfo(c),u}return c}function Rk(s,t,e,n){const i=[e];if(jn("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,t.shape.length),!lt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],o=s.texData.get(t.dataId),a=o!==null&&o.isPacked;let l=t;a&&(l=s.unpackTensor(t),r.push(l));const[c,u]=Pn(l.shape,i),h=ft(u),d=Dt({inputs:{x:l},backend:s,attrs:{shape:[-1,h]}});r.push(d);const f=kk(s,d,n);r.push(f);const p=Dt({inputs:{x:f},backend:s,attrs:{shape:c}});return r.forEach(g=>s.disposeIntermediateTensorInfo(g)),p}return Nk(s,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ont(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=ge(r,i.shape);const a=rn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=mn(o.length,l.shape.length)),jn("argMax",[o[0]],l.shape.length);const u=Rk(e,l,o[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const ant={kernelName:Np,backendName:"webgl",kernelFunc:ont};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=ge(r,i.shape);const a=rn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=mn(o.length,l.shape.length)),jn("argMin",[o[0]],l.shape.length);const u=Rk(e,l,o[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const cnt={kernelName:Rp,backendName:"webgl",kernelFunc:lnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unt=wi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,hnt=Ee({opSnippet:unt}),dnt={kernelName:th,backendName:"webgl",kernelFunc:hnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fnt=wi+"return log(x + sqrt(x * x + 1.0));",pnt=Ee({opSnippet:fnt}),mnt={kernelName:eh,backendName:"webgl",kernelFunc:pnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gnt=wi+`
  return atan(x);
`,xnt=Ee({opSnippet:gnt}),ynt={kernelName:nh,backendName:"webgl",kernelFunc:xnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bnt=jv+`
  return atan(a, b);
`,vnt=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+pd+`
  return result;
`,wnt=Kn({opSnippet:bnt,packedOpSnippet:vnt}),Snt={kernelName:ih,backendName:"webgl",kernelFunc:wnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _nt=wi+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Cnt=Ee({opSnippet:_nt}),Tnt={kernelName:sh,backendName:"webgl",kernelFunc:Cnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uu{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const g=e==="avg",m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(g||(y="-1.0 / 1e-20"),n){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?m:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(b="avgValue / count");const w=Math.floor(o/4)*4,_=o%4,C=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${w};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${b});
      }
    `}}class Yv{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,p=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,x=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const v=e==="avg";let b="0.0";if(v||(b="-1.0 / 1e-20"),n){const I=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${m}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${I} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let _=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(_="avgValue / count");const C=Math.floor(o/4)*4,S=o%4,T=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${m}, ${x}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${C};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${T}
            }
          }
          setOutput(${_});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Int(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;dd(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(es(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Ne(u.inShape,u.outShape))return Rs({inputs:{x:i},backend:e});const h=new Uu(u,"avg",!1);return e.runWebGLProgram(h,[i],"float32")}const Ent={kernelName:$p,backendName:"webgl",kernelFunc:Int};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n,u=[1,1,1],h=Yr(i.shape,r,o,u,a,l,c),d=new Yv(h,"avg",!1);return e.runWebGLProgram(d,[i],"float32")}const Ant={kernelName:Dp,backendName:"webgl",kernelFunc:Mnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class knt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Nnt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=h-1-t.padInfo.front,g=d-1-t.padInfo.top,m=f-1-t.padInfo.left,x=1/(e*n*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${g}, ${m});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rnt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=Yr(o.shape,a,l,h,c,u),f=new Nnt(d);return e.runWebGLProgram(f,[i],o.dtype)}const $nt={kernelName:hy,backendName:"webgl",kernelFunc:Rnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dnt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;dd([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=bi(o.shape,a,l,1,c),h=new knt(u);return e.runWebGLProgram(h,[i],o.dtype)}const Fnt={kernelName:uy,backendName:"webgl",kernelFunc:Dnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lnt(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;return mp({a:i,b:r,transposeA:o,transposeB:a,backend:e})}const Pnt={kernelName:Fp,backendName:"webgl",kernelFunc:Lnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ont{constructor(t,e,n,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],de(t,e),de(t,n);let a="0.0";i!=null&&(de(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(de(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class znt{constructor(t,e,n,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],de(t,e),de(t,n);let a="vec4(0.0)";i!=null&&(de(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(de(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bnt=({inputs:s,backend:t,attrs:e})=>{const{x:n,mean:i,variance:r,offset:o,scale:a}=s;F(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[n,i,r];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=lt().getBool("WEBGL_PACK_NORMALIZATION")?new znt(n.shape,i.shape,r.shape,u,h,l):new Ont(n.shape,i.shape,r.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},Unt={kernelName:Xp,backendName:"webgl",kernelFunc:Bnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vnt{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=qe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Wnt(this.rank);let i;const r=t.map((o,a)=>`sourceLoc.${D0[a]} = start[${a}] + coords.${D0[a]};`);i=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${n}));
      }
    `}}const D0=["x","y","z","w","u","v"];function Wnt(s){if(s===1)return"sourceLoc";if(s<=6)return D0.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gnt{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=qe(this.rank),n=rs("coords",this.rank),i=rs("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${i[h]} = ${n[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hnt(s,t,e,n){const i=n.texData.get(s.dataId),r=n.makeTensorInfo(e,s.dtype),o=n.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=e,o.dtype=s.dtype;let a=ab(t,re(s.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||s.dataId};const l=n.dataRefCount.get(o.slice.origDataId)||1;return n.dataRefCount.set(o.slice.origDataId,l+1),r}function Bc(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n,[a,l]=Dm(i,r,o);if(ib(i,a,l),ft(l)===0)return e.makeTensorInfo(l,i.dtype,[]);if(e.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=e.texData.get(i.dataId),d=Ftt(h.values,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=e.texData.get(i.dataId),u=ob(i.shape,a,l);if(c||!u){const h=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gnt(l):new Vnt(l),d=[a];return e.runWebGLProgram(h,[i],i.dtype,d)}return e.uploadToGPU(i.dataId),Hnt(i,a,l,e)}const qnt={kernelName:Sm,backendName:"webgl",kernelFunc:Bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xnt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;F(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((y,v)=>y*v),l=Qh(i.shape,r,a),c=td(l.length,r.length),u=ed(i.shape,r,a),h=jb(o,r.length),d=Kb(u,o,r.length),f=[],p=Dt({inputs:{x:i},backend:e,attrs:{shape:l}}),g=as({inputs:{x:p},backend:e,attrs:{perm:c}}),m=Dt({inputs:{x:g},backend:e,attrs:{shape:u}}),x=Bc({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return f.push(p),f.push(g),f.push(m),f.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},jnt={kernelName:Lp,backendName:"webgl",kernelFunc:Xnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Knt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.readSync(i.dataId),l=e.readSync(r.dataId),c=bk(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const Ynt={kernelName:dy,backendName:"webgl",kernelFunc:Knt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Znt(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.readSync(n.dataId),o=e.readSync(i.dataId),a=de(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Jnt={kernelName:OT,backendName:"webgl",kernelFunc:Znt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qnt="return float(a != b);",$k=Kn({opSnippet:Qnt,cpuKernelImpl:Itt,dtype:"bool"}),tst={kernelName:um,backendName:"webgl",kernelFunc:$k};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gd(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return Rs({inputs:{x:i.complexTensorInfos.real},backend:e})}const est={kernelName:Ly,backendName:"webgl",kernelFunc:gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nst="return float(int(x));";function sst(s,t){const e=new Ur(s.shape,nst),n=t.runWebGLProgram(e,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F0(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return Rs({inputs:{x:i},backend:e});const o=$n(i.shape),a=F0({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),l=Uo({inputs:{real:a,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=gd({inputs:{input:i},backend:e}),a=F0({inputs:{x:o},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(o),a}if(!NT(i.dtype,r)){const o=Rs({inputs:{x:i},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(e.shouldExecuteOnCPU([i])){const o=e.texData.get(i.dataId).values,[a,l,c]=ott(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}if(r==="int32")return sst(i,e);if(r==="bool"){const o=e.makeTensorInfo([],"bool",Hn("bool",1)),l=$k({inputs:{a:i,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const ist={kernelName:rh,backendName:"webgl",kernelFunc:F0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_="return ceil(x);",rst=Ee({opSnippet:j_,packedOpSnippet:j_,cpuKernelImpl:att}),ost={kernelName:oh,backendName:"webgl",kernelFunc:rst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ast{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lst{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{clipValueMin:r,clipValueMax:o}=n;let a;lt().getBool("WEBGL_PACK_CLIP")?a=new lst(i.shape):a=new ast(i.shape);const l=[[r],[o]];return e.runWebGLProgram(a,[i],i.dtype,l)}const ust={kernelName:ah,backendName:"webgl",kernelFunc:cst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hst{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function dst(s){const{inputs:t,backend:e}=s,{x:n}=t,i=e.texData.get(n.dataId),r=new hst(n.shape),o=[K_(n,i.complexTensorInfos.real),K_(n,i.complexTensorInfos.imag)];return e.runWebGLProgram(r,o,o[0].dtype)}const fst={kernelName:Pp,backendName:"webgl",kernelFunc:dst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pst{constructor(t){this.outputShape=[],this.outputShape=fr(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const a=e[o-1];n.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=e.length,r=e[e.length-1];n.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mst{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=fr(t,e);const n=this.outputShape,i=n.length,r=qe(i),o=rs("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const c=a[e],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${wf(a,c,m)}),
            vec2(${wf(u,c,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${wf(a,c,p)}),
          vec2(${wf(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${n[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${n[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${n[i-2]} &&
            ${o[i-1]} < ${n[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function wf(s,t,e){const n=s.indexOf(t);return s.map((r,o)=>o===n?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return Rs({inputs:{x:i.complexTensorInfos.imag},backend:e})}const gst={kernelName:My,backendName:"webgl",kernelFunc:ag};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(s,t,e){const n=s[0].dtype;if(n==="complex64"){const h=s.map(m=>gd({inputs:{input:m},backend:e})),d=s.map(m=>ag({inputs:{input:m},backend:e})),f=du(h,t,e),p=du(d,t,e),g=Uo({inputs:{real:f,imag:p},backend:e});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),d.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}let i=e.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const h=s.map(y=>{const b=[-1,ft(y.shape.slice(t))];return Dt({inputs:{x:y},backend:e,attrs:{shape:b}})}),d=h.map(y=>({vals:e.readSync(y.dataId),shape:y.shape})),f=fr(h.map(y=>y.shape),1),p=h[0].shape[0]===1,g=ltt(d,f,n,p),m=fr(s.map(y=>y.shape),t),x=e.makeTensorInfo(m,n,g);return h.forEach(y=>e.disposeIntermediateTensorInfo(y)),x}const r=lt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>r){const h=[];for(let f=0;f<s.length;f+=r){const p=s.slice(f,f+r);h.push(du(p,t,e))}const d=du(h,t,e);for(const f of h)e.disposeIntermediateTensorInfo(f);return d}if(lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new mst(s.map(d=>d.shape),t);return e.runWebGLProgram(h,s,n)}const{tensors2D:o,outShape:a}=xst(s,t,e),l=new pst(o.map(h=>h.shape)),c=e.runWebGLProgram(l,o,n);o.forEach(h=>e.disposeIntermediateTensorInfo(h));const u=Dt({inputs:{x:c},attrs:{shape:a},backend:e});return e.disposeIntermediateTensorInfo(c),u}function xst(s,t,e){const n=fr(s.map(r=>r.shape),t);return{tensors2D:s.map(r=>Dt({inputs:{x:r},attrs:{shape:[-1,ft(r.shape.slice(t))]},backend:e})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=ge(i,t[0].shape)[0],o=t.map(c=>c.shape);Hb(o,r);const a=fr(t.map(c=>c.shape),r);if(ft(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>ft(c.shape)>0);return l.length===1?Rs({inputs:{x:l[0]},backend:e}):du(l,r,e)}const yst={kernelName:Op,backendName:"webgl",kernelFunc:Dk};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,m=t.dataFormat==="channelsLast",x=m?1:2,y=m?2:3,v=m?3:1;let b="",w="";n&&(i?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");const _=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}}class bst{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,i=t.padInfo.left,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const x=m*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const y=o%2===0?iy(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";n&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vst{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);const{dataFormat:n}=e,i=ls(),r=n==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(s,t){const e=s.length;return e>=3?t?[...s.slice(0,-3),s[e-3]*s[e-2],s[e-1]]:[...s.slice(0,-3),s[e-3],s[e-2]*s[e-1]]:!t&&e===1&&s[0]>1?[s[0],1]:null}function Pk({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=s.shape,c=n.texData.get(s.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,f=e.dataFormat==="channelsLast",p=!1,g=!1;let m;const x=[];if(r!=null){const b=gp(r.shape,f);b!=null&&(r=Dt({inputs:{x:r},backend:n,attrs:{shape:b}}),x.push(r))}if(i!=null){const b=gp(i.shape,f);b!=null&&(i=Dt({inputs:{x:i},backend:n,attrs:{shape:b}}),x.push(i))}if(!((h===1||d===1)&&u>Ak)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&Ne(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),w={dataId:s.dataId,shape:[1,b,e.inChannels],dtype:s.dtype},_=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,F(pp(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const C=Dt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(C);const S=mp({a:w,b:C,backend:n,transposeA:p,transposeB:g,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),T=n.texData.get(S.dataId);F(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=_,T.shape=e.outShape,m=Rs({inputs:{x:S},backend:n}),m.shape=e.outShape,x.push(S)}else{const b=e.outHeight*e.outWidth,w=Dt({inputs:{x:s},backend:n,attrs:{shape:f?[e.batchSize,b,e.inChannels]:[e.batchSize,e.inChannels,b]}}),_=Dt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),C=mp({a:f?w:_,b:f?_:w,transposeA:!f,transposeB:g,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});m=Dt({inputs:{x:C},backend:n,attrs:{shape:e.outShape}}),x.push(w),x.push(_),x.push(C)}for(const b of x)n.disposeIntermediateTensorInfo(b);return m}function Ok({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=e,p=f==="channelsLast",g=l*c*u,m=d*h,x=[e.batchSize,g,m],y=!0,v=!1,b=[];if(r!=null){const L=gp(r.shape,p);L!=null&&(r=Dt({inputs:{x:r},backend:n,attrs:{shape:L}}),b.push(r))}if(i!=null){const L=gp(i.shape,p);L!=null&&(i=Dt({inputs:{x:i},backend:n,attrs:{shape:L}}),b.push(i))}const w=Dt({inputs:{x:t},backend:n,attrs:{shape:[1,g,ft(t.shape)/g]}});b.push(w);const _=new vst(x,e),C=[s.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],S=n.runWebGLProgram(_,[s],"float32",C),T=Dt({inputs:{x:S},backend:n,attrs:{shape:x}});b.push(S),b.push(T);const I=i!=null,M=r!=null,$=a==="leakyrelu",E=a?Bu(a,!0):null,A=new Mk(p?T.shape:w.shape,p?w.shape:T.shape,p?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],y,v,I,E,M,$),k=p?[T,w]:[w,T];if(i&&k.push(i),M&&k.push(r),$){const L=n.makeTensorInfo([],"float32",Ro(o,"float32"));k.push(L),b.push(L)}const R=n.runWebGLProgram(A,k,"float32"),B=Dt({inputs:{x:R},backend:n,attrs:{shape:e.outShape}});b.push(R);for(const L of b)n.disposeIntermediateTensorInfo(L);return B}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n,h=Zr(l),d=Xn(i.shape,r.shape,o,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=Pk({x:i,filter:r,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&lt().getBool("WEBGL_EXP_CONV")){const g=new Lk(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=e.runWebGLProgram(g,[i,r],"float32",m)}else if(lt().getBool("WEBGL_CONV_IM2COL"))f=Ok({x:i,filter:r,convInfo:d,backend:e});else{const g=new Fk(d);f=e.runWebGLProgram(g,[i,r],"float32")}const p=Dt({inputs:{x:f},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(f),p}const Sst={kernelName:zp,backendName:"webgl",kernelFunc:wst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _st{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Cst{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Tst{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ist{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=i-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Est(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n,h=Zr(l),d=Xn(i.shape,u,o,1,a,c,!1,h),f=new _st(d);return e.runWebGLProgram(f,[i,r],"float32")}const Mst={kernelName:py,backendName:"webgl",kernelFunc:Est};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ast(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n,h=Zr(c),d=Xn(o,r.shape,a,1,l,u,!1,h),f=new Cst(d);return e.runWebGLProgram(f,[i,r],"float32")}const kst={kernelName:Bp,backendName:"webgl",kernelFunc:Ast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=$o(i.shape,r.shape,o,l,a),u=new bst(c);return e.runWebGLProgram(u,[i,r],"float32")}const Rst={kernelName:Up,backendName:"webgl",kernelFunc:Nst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $st(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n,c=$o(i.shape,l,o,1,a),u=new Tst(c);return e.runWebGLProgram(u,[i,r],"float32")}const Dst={kernelName:my,backendName:"webgl",kernelFunc:$st};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fst(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n,c=$o(l,r.shape,a,1,o),u=new Ist(c);return e.runWebGLProgram(u,[i,r],"float32")}const Lst={kernelName:gy,backendName:"webgl",kernelFunc:Fst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pst=zc+`
  return cos(x);
`,Ost=Ee({opSnippet:Pst}),zst={kernelName:lh,backendName:"webgl",kernelFunc:Ost};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bst=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Ust=Ee({opSnippet:Bst}),Vst={kernelName:ch,backendName:"webgl",kernelFunc:Ust};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wst{constructor(t,e,n,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=t,[u]=e,[h,d]=n;this.outputShape=[u,h,d,c];const f=i==="bilinear"?1:0,[p,g]=[`${a-1}.0`,`${l-1}.0`],[m,x,y]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[v,b,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${b};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gst=s=>{const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,u=new Wst(i.shape,r.shape,a,l,c);return e.runWebGLProgram(u,[i,r,o],"float32")},Hst={kernelName:yy,backendName:"webgl",kernelFunc:Gst};var Vu;(function(s){s.Prod="*",s.Sum="+"})(Vu||(Vu={}));class Y_{constructor(t,e,n,i){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===Vu.Prod?"1.0":"0.0",a=n?o:`getX(${Z_(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${qe(r)} coords = getOutputCoords();
        int end = ${J_(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${J_(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${Z_(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Z_(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}function J_(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(s,t,e,n,i,r){const o=t.shape.length,a=rn([n],o);let l=t;a!=null&&(l=as({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=mn(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);const u=l.shape[c];let h=Rs({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new Y_(s,l.shape,!1,r),p=[[d]],g=h;h=e.runWebGLProgram(f,[h],h.dtype,p),e.disposeIntermediateTensorInfo(g)}if(i){const d=new Y_(s,l.shape,i,r),f=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Do(a),f=as({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return zk(Vu.Prod,i,e,r,o,a)}const Xst={kernelName:xy,backendName:"webgl",kernelFunc:qst};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return zk(Vu.Sum,i,e,r,o,a)}const Kst={kernelName:Vp,backendName:"webgl",kernelFunc:jst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=bk(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=rtt(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const Zst={kernelName:by,backendName:"webgl",kernelFunc:Yst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jst{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],c=o==="NHWC"?i.shape[2]:i.shape[3],u=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,f=u/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],g=new Jst(p,r,o);return e.runWebGLProgram(g,[i],i.dtype)}const tit={kernelName:vy,backendName:"webgl",kernelFunc:Qst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";n&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const y=x*2;if(f+=`
          xC = xCCorner + ${y*c};
          `,l===1){if(y<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,c===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<h)){const v=a%2===0?iy(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:f+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):v===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<h&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<h&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<h&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",g="";n&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;let u=l;u==null&&(u=[1,1]),F(es(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=Xn(i.shape,r.shape,o,u,a,c,!0);let d;lt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new Uk(h):d=new Bk(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[i,r],"float32",f)}const nit={kernelName:Wp,backendName:"webgl",kernelFunc:eit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sit{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class iit{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n,h=Xn(i.shape,u,o,a,l,c,!0),d=new sit(h);return e.runWebGLProgram(d,[i,r],"float32")}const oit={kernelName:wy,backendName:"webgl",kernelFunc:rit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ait(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n,h=Xn(u,r.shape,o,a,l,c,!0),d=new iit(h);return e.runWebGLProgram(d,[i,r],"float32")}const lit={kernelName:Sy,backendName:"webgl",kernelFunc:ait};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cit{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uit(s){const{inputs:t,backend:e}=s,{x:n}=t,i=[...n.shape,...n.shape],r=ft(n.shape),o=Dt({inputs:{x:n},backend:e,attrs:{shape:[r]}}),a=new cit(r),l=e.runWebGLProgram(a,[o],o.dtype),c=Dt({inputs:{x:l},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),c}const hit={kernelName:zT,backendName:"webgl",kernelFunc:uit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dit{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=jh(i.shape,r.shape,o,a,"NHWC",l);let u;const h=new dit(c);u=e.runWebGLProgram(h,[i,r],"float32");const d=Dt({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const pit={kernelName:Gp,backendName:"webgl",kernelFunc:fit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mit(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=sv(i,r.length);rv(o.length,l,r);const{path:c,steps:u}=ov(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:y}=iv(f,l[m]);let v;av(x)?v=r[m]:(v=as({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(v));const b=v.shape.slice();for(let w=0;w<y.length;++w)b.splice(y[w],0,1);Ne(v.shape,b)||(v=Dt({inputs:{x:v},backend:e,attrs:{shape:b}}),p.push(v)),d===null?d=v:(d=Kv({inputs:{a:v,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=og({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const git={kernelName:BT,backendName:"webgl",kernelFunc:mit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xit="return (x >= 0.0) ? x : (exp(x) - 1.0);",yit=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,bit=Ee({opSnippet:xit,packedOpSnippet:yit}),vit={kernelName:hh,backendName:"webgl",kernelFunc:bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wit="return (b >= 1.0) ? a : a * (b + 1.0);",Sit=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,_it=s=>{const{inputs:t,backend:e}=s,{dy:n,y:i}=t,r=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new md(Sit,n.shape,i.shape):new vc(wit,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],n.dtype)},Cit={kernelName:_y,backendName:"webgl",kernelFunc:_it};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tit=`
  return vec4(equal(a, b));
`,Iit="return float(a == b);",Eit=Kn({opSnippet:Iit,packedOpSnippet:Tit,dtype:"bool",cpuKernelImpl:ctt}),Mit={kernelName:Hp,backendName:"webgl",kernelFunc:Eit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ait=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Yb};
  float a1 = ${Zb};
  float a2 = ${Jb};
  float a3 = ${Qb};
  float a4 = ${tv};
  float a5 = ${ev};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,kit=Ee({opSnippet:Ait}),Nit={kernelName:dh,backendName:"webgl",kernelFunc:kit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rit=zc+`
  return exp(x);
`,$it=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Vk=Ee({opSnippet:Rit,packedOpSnippet:$it,cpuKernelImpl:utt,dtype:"float32"}),Dit={kernelName:fh,backendName:"webgl",kernelFunc:Vk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0(s){const{inputs:t,attrs:e,backend:n}=s,{dim:i}=e,{input:r}=t,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(F(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Dt({inputs:{x:r},backend:n,attrs:{shape:a}})}const Fit={kernelName:qp,backendName:"webgl",kernelFunc:L0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_="return exp(x) - 1.0;",Lit=Ee({opSnippet:Q_,packedOpSnippet:Q_,cpuKernelImpl:htt}),Pit={kernelName:ph,backendName:"webgl",kernelFunc:Lit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tC{constructor(t,e,n){this.variableNames=["real","imag"];const i=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${i}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(s,t,e){const n=e.texData.get(s.dataId),i=ft(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=Dt({inputs:{x:s},backend:e,attrs:{shape:[o,r]}}),l=a.shape,c=new tC("real",l,t),u=new tC("imag",l,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=Uo({inputs:{real:d,imag:f},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f);const g=Dt({inputs:{x:p},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oit(s){const{inputs:t,backend:e}=s,{input:n}=t;return Wk(n,!1,e)}const zit={kernelName:Cy,backendName:"webgl",kernelFunc:Oit};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bit{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xd(s){const{backend:t,attrs:e}=s,{shape:n,value:i}=e;let{dtype:r}=e;if(r=r||Zu(i),r==="string"){const o=yn(r,ft(n));return o.fill(i),t.makeTensorInfo(n,r,o)}else{const o=new Bit(n,i),a=[[i]];return t.runWebGLProgram(o,[],r,a)}}const Uit={kernelName:Ty,backendName:"webgl",kernelFunc:xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vit{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wit={kernelName:Iy,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:e}=s,n=t,i=new Vit(e.shape);return n.runWebGLProgram(i,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eC="return floor(x);",Git=Ee({opSnippet:eC,packedOpSnippet:eC,cpuKernelImpl:dtt}),Hit={kernelName:mh,backendName:"webgl",kernelFunc:Git};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qit=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Xit=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,jit=Kn({opSnippet:qit,packedOpSnippet:Xit,dtype:"int32"}),Kit={kernelName:gh,backendName:"webgl",kernelFunc:jit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yit{constructor(t){this.variableNames=["A"];const e=ls(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zit{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=ls(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jit={kernelName:d4,backendName:"webgl",kernelFunc:Qit};let Nl,Tx=lt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Qit(s){const{inputs:t,backend:e,attrs:n}=s;let{pixels:i}=t;const{numChannels:r}=n,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(a||o){const g=lt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Nl==null||g!==Tx)&&(Tx=g,Nl=document.createElement("canvas").getContext("2d",{willReadFrequently:Tx})),Nl.canvas.width=l,Nl.canvas.height=c,Nl.drawImage(i,0,0,l,c),i=Nl.canvas}const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=zs.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),i);const f=lt().getBool("WEBGL_PACK")?new Zit(h):new Yit(h),p=e.runWebGLProgram(f,[d],"int32");return e.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function trt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,g=Zr(u),m=Xn(i.shape,r.shape,l,h,c,d,!1,g);let x;const y=[],v=o!=null,b=a!=null,w=f==="leakyrelu",_=()=>{const S=[i,r],T=(I,M)=>{if(M==="NCHW"&&I.shape.length===1&&I.shape[0]!==1){const $=Dt({inputs:{x:I},backend:e,attrs:{shape:[I.shape[0],1,1]}});return y.push($),$}return I};if(v&&S.push(T(o,u)),b&&S.push(T(a,u)),w){const I=e.makeTensorInfo([],"float32",Ro(p,"float32"));S.push(I),y.push(I)}return S};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))x=Pk({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&g==="channelsLast"&&lt().getBool("WEBGL_EXP_CONV")){const S=f?Bu(f,!0):null,T=new Lk(m,v,S,b,w),I=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],M=_();x=e.runWebGLProgram(T,M,"float32",I)}else if(lt().getBool("WEBGL_CONV_IM2COL"))x=Ok({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const S=f?Bu(f,!1):null,T=new Fk(m,v,S,b,w),I=_();x=e.runWebGLProgram(T,I,"float32")}const C=Dt({inputs:{x},backend:e,attrs:{shape:m.outShape}});return y.push(x),y.forEach(S=>e.disposeIntermediateTensorInfo(S)),C}const ert={kernelName:Wf,backendName:"webgl",kernelFunc:trt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n,p=[];let g=u;g==null&&(g=[1,1]),F(es(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=Xn(i.shape,r.shape,l,g,c,h,!0),x=lt().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,y=d?Bu(d,x):null,v=[i,r],b=o!=null,w=a!=null,_=d==="leakyrelu";if(b&&v.push(o),w&&v.push(a),_){const I=e.makeTensorInfo([],"float32",Ro(f,"float32"));v.push(I),p.push(I)}let C;x?C=new Uk(m,b,y,w,_):C=new Bk(m,b,y,w,_);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],T=e.runWebGLProgram(C,v,"float32",S);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),T}const srt={kernelName:ZT,backendName:"webgl",kernelFunc:nrt};class irt{constructor(t,e,n,i){this.sliceDim=t,this.strides=e,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=n;const r=qe(n.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rrt(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=i.shape,o=r[r.length-1],a=ft(n.shape),[l,c,u,h]=sb(n,i),d=Dt({inputs:{x:i},backend:e,attrs:{shape:[c,o]}}),f=Dt({inputs:{x:n},backend:e,attrs:{shape:[ft(n.shape)/u,u]}});if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const x=e.readSync(i.dataId),y=e.bufferSync(n),v=ftt(x,y,n.dtype,c,o,u,h,n.shape,a);return e.makeTensorInfo(l,n.dtype,v.values)}const p=new irt(o,h,[c,u],n.shape),g=e.runWebGLProgram(p,[f,d],f.dtype),m=Dt({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const ort={kernelName:UT,backendName:"webgl",kernelFunc:rrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class art{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=qe(this.rank),i=lrt(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function lrt(s,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s.length;i++)i===2?n.push("index"):n.push(`${e[i]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n,l=ge(o,i.shape)[0];if(lt().get("DEBUG")){const y=e.readSync(r.dataId),v=i.shape[l];for(let b=0;b<y.length;++b){const w=y[b];F(w<=v-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${v-1}]`)}}const c=cv(i,r,l,a),u=ft(r.shape),h=[],d=Dt({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Dt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const y=e.bufferSync(f),v=e.bufferSync(d),b=ptt(v,y,p);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(c.outputShape,b.dtype,b.values)}const g=new art(d.shape,p),m=e.runWebGLProgram(g,[d,f],d.dtype);h.push(m);const x=Dt({inputs:{x:m},backend:e,attrs:{shape:c.outputShape}});return h.forEach(y=>e.disposeIntermediateTensorInfo(y)),x}const crt={kernelName:jp,backendName:"webgl",kernelFunc:Gk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const urt="return float(a > b);",hrt=`
  return vec4(greaterThan(a, b));
`,drt=Kn({opSnippet:urt,packedOpSnippet:hrt,cpuKernelImpl:mtt,dtype:"bool"}),frt={kernelName:Kp,backendName:"webgl",kernelFunc:drt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const prt="return float(a >= b);",mrt=`
  return vec4(greaterThanEqual(a, b));
`,grt=Kn({opSnippet:prt,packedOpSnippet:mrt,dtype:"bool",cpuKernelImpl:gtt}),xrt={kernelName:xh,backendName:"webgl",kernelFunc:grt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yrt(s){const{inputs:t,backend:e}=s,{input:n}=t;return Wk(n,!0,e)}const brt={kernelName:Ey,backendName:"webgl",kernelFunc:yrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vrt="return float(!isnan(x) && !isinf(x));",wrt=Ee({opSnippet:vrt,dtype:"bool"}),Srt={kernelName:bh,backendName:"webgl",kernelFunc:wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _rt="return float(isinf(x));",Crt=Ee({opSnippet:_rt,dtype:"bool"}),Trt={kernelName:vh,backendName:"webgl",kernelFunc:Crt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Irt="return float(isnan(x));",Ert=Ee({opSnippet:Irt,dtype:"bool"}),Mrt={kernelName:wh,backendName:"webgl",kernelFunc:Ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Art="return float(a < b);",krt=`
  return vec4(lessThan(a, b));
`,Nrt=Kn({opSnippet:Art,packedOpSnippet:krt,cpuKernelImpl:xtt,dtype:"bool"}),Rrt={kernelName:Zp,backendName:"webgl",kernelFunc:Nrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $rt="return float(a <= b);",Drt=`
  return vec4(lessThanEqual(a, b));
`,Frt=Kn({opSnippet:$rt,packedOpSnippet:Drt,cpuKernelImpl:ytt,dtype:"bool"}),Lrt={kernelName:Jp,backendName:"webgl",kernelFunc:Frt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Prt(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=btt(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const Ort={kernelName:VT,backendName:"webgl",kernelFunc:Prt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zrt=zc+`
  return x < 0.0 ? 0./0. : log(x);
`,Brt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Urt=Ee({opSnippet:zrt,packedOpSnippet:Brt,cpuKernelImpl:vtt}),Vrt={kernelName:Sh,backendName:"webgl",kernelFunc:Urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wrt=zc+`
  return log(1.0 + x);
`,Grt=Ee({opSnippet:Wrt}),Hrt={kernelName:_h,backendName:"webgl",kernelFunc:Grt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qrt="return float(a >= 1.0 && b >= 1.0);",Xrt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,jrt=Kn({opSnippet:qrt,packedOpSnippet:Xrt,dtype:"bool"}),Krt={kernelName:Qp,backendName:"webgl",kernelFunc:jrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yrt="return float(!(x >= 1.0));",Zrt=Ee({opSnippet:Yrt}),Jrt={kernelName:tm,backendName:"webgl",kernelFunc:Zrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qrt="return float(a >= 1.0 || b >= 1.0);",tot=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,eot=Kn({opSnippet:Qrt,packedOpSnippet:tot,dtype:"bool"}),not={kernelName:em,backendName:"webgl",kernelFunc:eot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sot{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iot{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rot=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n,c=lt().getBool("WEBGL_PACK_NORMALIZATION")?new iot(i.shape,r,o,a,l):new sot(i.shape,r,o,a,l);return e.runWebGLProgram(c,[i],i.dtype)},oot={kernelName:nm,backendName:"webgl",kernelFunc:rot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aot{constructor(t,e,n,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lot=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n,h=new aot(i.shape,a,l,c,u);return e.runWebGLProgram(h,[i,r,o],i.dtype)},cot={kernelName:Ay,backendName:"webgl",kernelFunc:lot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uot(s,t,e,n){const i=ft(t),o=ft(s.shape)/i,a=Dt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=il(a,s.dtype,"max",n),c=Dt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=i.shape.length,l=ge(r,i.shape);let c=l;const u=rn(c,a),h=u!=null,d=e.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const v=e.texData.get(f.dataId).values,b=new Array(a);for(let C=0;C<b.length;C++)b[C]=i.shape[u[C]];const w=Xv(v,i.shape,i.dtype,u,b);f=e.makeTensorInfo(b,i.dtype);const _=e.texData.get(f.dataId);_.values=w}else f=rg(i,u,e);c=mn(c.length,a)}jn("max",c,a);const[p,g]=Pn(f.shape,c);let m=p;o&&(m=pn(p,l));let x;if(d){const v=e.texData.get(f.dataId).values,b=wtt(v,ft(g),m,i.dtype);x=e.makeTensorInfo(m,i.dtype);const w=e.texData.get(x.dataId);w.values=b}else x=uot(f,g,m,e);return h&&e.disposeIntermediateTensorInfo(f),x}const hot={kernelName:sm,backendName:"webgl",kernelFunc:Hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dot=jv+`
  return max(a, b);
`,fot=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+pd+`
  return result;
`,pot=Kn({opSnippet:dot,packedOpSnippet:fot,cpuKernelImpl:Stt}),mot={kernelName:Ch,backendName:"webgl",kernelFunc:pot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function got(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;dd(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(es(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Ne(u.inShape,u.outShape))return Rs({inputs:{x:i},backend:e});const h=new Uu(u,"max",!1);return e.runWebGLProgram(h,[i],i.dtype)}const xot={kernelName:im,backendName:"webgl",kernelFunc:got};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=n,u=[1,1,1],h=Yr(i.shape,r,o,u,a,c,l),d=new Yv(h,"max",!1);return e.runWebGLProgram(d,[i],i.dtype)}const bot={kernelName:rm,backendName:"webgl",kernelFunc:yot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vot{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,i=t.dilationHeight,r=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=r-1-t.padInfo.top,l=o-1-t.padInfo.left,c=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class wot{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,f=u-1-t.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sot(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=Yr(o.shape,a,l,h,c,u),f=new Yv(d,"max",!0),p=e.runWebGLProgram(f,[o],o.dtype),g=new wot(d),m=e.runWebGLProgram(g,[i,p],o.dtype);return e.disposeIntermediateTensorInfo(p),m}const _ot={kernelName:Ny,backendName:"webgl",kernelFunc:Sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cot(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;dd([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=bi(a.shape,l,c,1,u,h),f=!0,p=new Uu(d,"max",f),g=e.runWebGLProgram(p,[a],a.dtype),m=new vot(d),x=e.runWebGLProgram(m,[i,g],a.dtype);return e.disposeIntermediateTensorInfo(g),x}const Tot={kernelName:ky,backendName:"webgl",kernelFunc:Cot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iot(s,t,e,n){let i=new Uu(e,"max",!1);const r=n.runWebGLProgram(i,[s],"float32");i=new Uu(e,"max",!0,!0,t);const o=n.runWebGLProgram(i,[s],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eot={kernelName:WT,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;F(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const c=[1,1];F(es(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=bi(n.shape,i,r,c,o),[h,d]=Iot(n,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mot(s,t,e,n){const i=ft(t),o=ft(s.shape)/i,a=Dt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=il(a,"float32","mean",n),c=Dt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aot={kernelName:om,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{keepDims:i,axis:r}=t,o=e,a=n.shape.length,l=ge(r,n.shape);let c=l;const u=rn(c,a),h=u!=null,d=o.shouldExecuteOnCPU([n]),f=[];let p=n;if(h){if(d){const b=o.texData.get(p.dataId).values,w=new Array(a);for(let S=0;S<w.length;S++)w[S]=n.shape[u[S]];const _=Xv(b,n.shape,n.dtype,u,w);p=o.makeTensorInfo(w,n.dtype);const C=o.texData.get(p.dataId);C.values=_}else p=rg(n,u,o);f.push(p),c=mn(c.length,a)}jn("sum",c,a);const[g,m]=Pn(p.shape,c);let x=g;i&&(x=pn(g,l));const y=Mot(p,m,x,o);for(const v of f)o.disposeIntermediateTensorInfo(v);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=ge(r,i.shape);let c=l;const u=rn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=mn(c.length,i.shape.length)),jn("min",c,a);const[d,f]=Pn(h.shape,c),p=ft(f),g=Dt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=il(g,g.dtype,"min",e);let x;if(o){const y=pn(d,l);x=Dt({inputs:{x:m},backend:e,attrs:{shape:y}})}else x=Dt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const Not={kernelName:am,backendName:"webgl",kernelFunc:kot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rot=jv+`
  return min(a, b);
`,$ot=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+pd+`
  return result;
`,Dot=Kn({opSnippet:Rot,packedOpSnippet:$ot,cpuKernelImpl:_tt}),Fot={kernelName:Th,backendName:"webgl",kernelFunc:Dot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lot{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const i=t.length,r=qe(i),o=e.map(u=>u[0]).join(","),a=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=n==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pot{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,g)=>p[0]+t[g]+p[1]);const i=t.length,r=qe(i),o=e.map(p=>p[0]).join(","),a=e.map((p,g)=>p[0]+t[g]).join(","),l=rs("rc",i),c=rs("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1;let f="";if(i===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oot=({inputs:s,backend:t,attrs:e})=>{const{x:n}=s,{paddings:i,mode:r}=e,o=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pot(n.shape,i,r):new Lot(n.shape,i,r);return t.runWebGLProgram(o,[n],n.dtype)},zot={kernelName:lm,backendName:"webgl",kernelFunc:Oot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bot=`if (b == 0.0) return NAN;
  return mod(a, b);`,Uot=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+pd+`
  return result;
`,Vot=Kn({opSnippet:Bot,packedOpSnippet:Uot}),Wot={kernelName:Ih,backendName:"webgl",kernelFunc:Vot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Got{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hot=`
if (a == b) {
  return 1.0;
};
return a / b;`,qot=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,qk=Kn({opSnippet:Hot,packedOpSnippet:qot,checkOutOfBounds:!0}),Xot={kernelName:uh,backendName:"webgl",kernelFunc:qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nC="return a - b;",Xk=Kn({opSnippet:nC,packedOpSnippet:nC,supportsComplex:!0,cpuKernelImpl:Wtt}),jot={kernelName:Vh,backendName:"webgl",kernelFunc:Xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=ge([r],i.shape),a=Hk({inputs:{x:i},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=pn(a.shape,o),c=Dt({inputs:{x:a},backend:e,attrs:{shape:l}}),u=Xk({inputs:{a:i,b:c},backend:e}),h=Vk({inputs:{x:u},backend:e}),d=og({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),f=Dt({inputs:{x:d},backend:e,attrs:{shape:l}}),p=qk({inputs:{a:h,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}const Kot={kernelName:Im,backendName:"webgl",kernelFunc:jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yot(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n,l=a?i:jk({inputs:{logits:i},backend:e,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new Got(c,u,r),d=[[o]],f=e.runWebGLProgram(h,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),f}const Zot={kernelName:GT,backendName:"webgl",kernelFunc:Yot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jot=wi+`
  return -x;
`,Qot=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function tat(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])){const r=e.texData.get(n.dataId),[o,a]=Ttt(r.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,o)}let i;return lt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new pa(n.shape,Qot):i=new Ur(n.shape,Jot),e.runWebGLProgram(i,[n],n.dtype)}const eat={kernelName:cm,backendName:"webgl",kernelFunc:tat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nat=Fb;function sat(s){Os("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),{selectedIndices:h}=nat(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const iat={kernelName:Ry,backendName:"webgl",kernelFunc:sat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rat=Lb;function oat(s){Os("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=rat(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const aat={kernelName:$y,backendName:"webgl",kernelFunc:oat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lat=Pb;function cat(s){Os("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=lat(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const uat={kernelName:Dy,backendName:"webgl",kernelFunc:cat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hat{constructor(t,e,n,i){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dat=s=>{const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n,c=ft(i.shape),u=new hat(c,o,a,l),h=Dt({inputs:{x:i},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(u,[h],r);e.disposeIntermediateTensorInfo(h);const f=[...i.shape,o],p=Dt({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(d),p},fat={kernelName:dm,backendName:"webgl",kernelFunc:dat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xp(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="complex64"){const i=gd({inputs:{input:n},backend:e}),r=xp({inputs:{x:i},backend:e}),o=ag({inputs:{input:n},backend:e}),a=xp({inputs:{x:o},backend:e}),l=Uo({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return xd({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}const pat={kernelName:Am,backendName:"webgl",kernelFunc:xp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=gd({inputs:{input:n},backend:e}),r=Kk({inputs:{x:i},backend:e}),o=ag({inputs:{input:n},backend:e}),a=xp({inputs:{x:o},backend:e}),l=Uo({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return xd({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}const mat={kernelName:hm,backendName:"webgl",kernelFunc:Kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gat(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return L0({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{yi(r,u.shape,"All tensors passed to stack must have matching shapes"),F(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=L0({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=Dk({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const xat={kernelName:fm,backendName:"webgl",kernelFunc:gat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yat{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const i=t.length,r=qe(i),o=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bat{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const i=t.length,r=qe(i),o=e.map(g=>g[0]).join(","),a=e.map((g,m)=>g[0]+t[m]).join(","),l=rs("rc",i),c=rs("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let g=0,m=i===1?2:4;g<m;g++)p+=`
        ${d[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yk=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;if(ft(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return xd({backend:e,attrs:{shape:c,value:o,dtype:i.dtype}})}const a=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bat(i.shape,r,o):new yat(i.shape,r,o),l=[[o]];return e.runWebGLProgram(a,[i],i.dtype,l)},vat={kernelName:pm,backendName:"webgl",kernelFunc:Yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wat=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Sat=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+pd+`
  return result;
`,_at=Kn({opSnippet:wat,packedOpSnippet:Sat}),Cat={kernelName:Mh,backendName:"webgl",kernelFunc:_at};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=[],c=ge(r,i.shape);let u=c;const h=rn(u,a);let d=i;h!=null&&(d=as({inputs:{x:i},backend:e,attrs:{perm:h}}),u=mn(u.length,a),l.push(d)),jn("prod",u,a);let f;if(e.shouldExecuteOnCPU([d])){const p=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:x}=Ett(d.shape,d.dtype,p,u);f=e.makeTensorInfo(m,x,g)}else{const[p,g]=Pn(d.shape,u),m=ft(g),x=Dt({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),y=Qy(i.dtype),v=il(x,y,"prod",e);f=Dt({inputs:{x:v},backend:e,attrs:{shape:p}}),l.push(x),l.push(v)}if(o){l.push(f);const p=pn(f.shape,c);f=Dt({inputs:{x:f},backend:e,attrs:{shape:p}})}return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const Iat={kernelName:gm,backendName:"webgl",kernelFunc:Tat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eat(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:a}=n,l=i.map(x=>e.readSync(x.dataId)),c=i.map(x=>x.shape),u=e.readSync(r.dataId),h=e.readSync(o.dataId),[d,f,p]=Mtt(l,c,u,r.shape,r.dtype,h,o.shape,a),g=d.map(x=>e.makeTensorInfo([x.length],"int32",x)),m=e.makeTensorInfo(p,r.dtype,f);return g.concat([m])}const Mat={kernelName:HT,backendName:"webgl",kernelFunc:Eat};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aat(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=Att(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const kat={kernelName:qT,backendName:"webgl",kernelFunc:Aat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nat(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a.map(m=>e.readSync(m.dataId)),f=a.map(m=>m.shape),[p,g]=ktt(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const Rat={kernelName:XT,backendName:"webgl",kernelFunc:Nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=s=>{const{backend:t,attrs:e}=s,{start:n,stop:i,step:r,dtype:o}=e,a=Ntt(n,i,r,o);return t.makeTensorInfo([a.length],o,a)},$at={kernelName:Fy,backendName:"webgl",kernelFunc:Zk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dat="return 1.0 / x;",Fat=Ee({opSnippet:Dat}),Lat={kernelName:Ah,backendName:"webgl",kernelFunc:Fat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pat=wi+`
  return (x < 0.0) ? 0.0 : x;
`,Oat=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zat=Ee({opSnippet:Pat,packedOpSnippet:Oat}),Bat={kernelName:kh,backendName:"webgl",kernelFunc:zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uat=wi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Vat=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Wat=Ee({opSnippet:Uat,packedOpSnippet:Vat}),Gat={kernelName:Nh,backendName:"webgl",kernelFunc:Wat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hat{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qat{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=lt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qat(i.shape,l,c,r,o):new Hat(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],"float32")}const jat={kernelName:bm,backendName:"webgl",kernelFunc:Xat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kat{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new Kat(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const Zat={kernelName:Oy,backendName:"webgl",kernelFunc:Yat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jat{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qat{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tlt(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=lt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qat(i.shape,l,c,r,o):new Jat(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],i.dtype)}const elt={kernelName:ym,backendName:"webgl",kernelFunc:tlt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nlt{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slt(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new nlt(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const ilt={kernelName:Py,backendName:"webgl",kernelFunc:slt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rlt{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const i=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,r=t.map((a,l)=>i(l)).join(","),o=qe(n);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class olt{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const i=rs("rc",n),r=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,a=qe(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${o}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function u(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function h(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){const g=t.map((y,v)=>f(v,p)),m=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${x}))`}function f(p,g){return e.indexOf(p)!==-1&&t[p]!==1?`${t[p]} - ${g[p]} - 1`:`${g[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function alt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n,o=i.shape.length,a=ge(r,i.shape);if(o===0)return Rs({inputs:{x:i},backend:e});const l=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new olt(i.shape,a):new rlt(i.shape,a);return e.runWebGLProgram(l,[i],i.dtype)}const llt={kernelName:vm,backendName:"webgl",kernelFunc:alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class clt{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],i=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ult={kernelName:Zy,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=new clt(n.shape,r),[c,u]=Xb(o,n.shape[1],n.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hlt=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,dlt=Ee({opSnippet:hlt}),flt={kernelName:Rh,backendName:"webgl",kernelFunc:dlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const plt="return inversesqrt(x);",mlt=Ee({opSnippet:plt,cpuKernelImpl:Rtt}),glt={kernelName:$h,backendName:"webgl",kernelFunc:mlt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jk{constructor(t,e,n,i,r,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const l=qe(r.length),c=qe(o.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";i===1?d="i":i===2&&(d="i, coords[1]");const f=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xlt(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Xh(r,i,o),d=[h/c,c];if(h===0)return e.makeTensorInfo(o,i.dtype);const f=Dt({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),p=Dt({inputs:{x:r},backend:e,attrs:{shape:[l,c]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),m=new Jk(l,a,f.shape.length,p.shape.length,u,d),x=e.runWebGLProgram(m,[p,f,g],p.dtype),y=Dt({inputs:{x},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),y}const ylt={kernelName:jT,backendName:"webgl",kernelFunc:xlt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class blt{constructor(t,e,n,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=lt().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vlt(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=new blt(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return e.runWebGLProgram(a,[i,r],"int32",l)}const wlt={kernelName:KT,backendName:"webgl",kernelFunc:vlt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Slt{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let i,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);i=l.join(),r=c.join()}const o=qe(n);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _lt(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t,o=new Slt(n.shape.length,i.shape,i.shape.length);return e.runWebGLProgram(o,[n,i,r],Ms(i.dtype,r.dtype))}const Clt={kernelName:wm,backendName:"webgl",kernelFunc:_lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tlt=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Wm};
  float scale = ${Gm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Ilt=Ee({opSnippet:Tlt}),Elt={kernelName:Dh,backendName:"webgl",kernelFunc:Ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mlt=zc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Alt=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,klt=Ee({opSnippet:Mlt,packedOpSnippet:Alt,cpuKernelImpl:Dtt}),Nlt={kernelName:Oh,backendName:"webgl",kernelFunc:klt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rlt=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,$lt=Ee({opSnippet:Rlt}),Dlt={kernelName:Ph,backendName:"webgl",kernelFunc:$lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Flt=zc+`
  return sin(x);
`,Llt=Ee({opSnippet:Flt}),Plt={kernelName:Fh,backendName:"webgl",kernelFunc:Llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Olt=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,zlt=Ee({opSnippet:Olt}),Blt={kernelName:Lh,backendName:"webgl",kernelFunc:zlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ult=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Vlt=Ee({opSnippet:Ult}),Wlt={kernelName:zh,backendName:"webgl",kernelFunc:Vlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Glt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;F(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,y)=>x*y),l=[[0,0]];l.push(...o);for(let x=1+r.length;x<i.shape.length;++x)l.push([0,0]);const c=[],u=Yk({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),h=Qh(u.shape,r,a,!1),d=td(h.length,r.length,!1),f=ed(u.shape,r,a,!1),p=Dt({inputs:{x:u},backend:e,attrs:{shape:h}}),g=as({inputs:{x:p},backend:e,attrs:{perm:d}}),m=Dt({inputs:{x:g},backend:e,attrs:{shape:f}});return c.push(u),c.push(p),c.push(g),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),m},Hlt={kernelName:Cm,backendName:"webgl",kernelFunc:Glt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qlt(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.readSync(n.dataId),l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=e.readSync(o.dataId)[0],[h,d,f,p,g]=Ltt(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const Xlt={kernelName:zy,backendName:"webgl",kernelFunc:qlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jlt(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.readSync(i.dataId)),a=e.readSync(n.dataId),l=Array.from(e.readSync(r.dataId)),[c,u,h]=Ptt(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const Klt={kernelName:By,backendName:"webgl",kernelFunc:jlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ylt(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=wk(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const Zlt={kernelName:Uy,backendName:"webgl",kernelFunc:Ylt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jlt(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=wk(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const Qlt={kernelName:Vy,backendName:"webgl",kernelFunc:Jlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tct(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Xh(r,i,a),f=!1;if(r.dtype==="string"){const x=e.bufferSync(i),y=e.bufferSync(r),v=Co(e.readSync(o.dataId)[0]),b=$tt(x,y,a,d,u,c,l,h,v,f);return e.makeTensorInfo(a,b.dtype,b.values)}const p=new Jk(c,l,i.shape.length,r.shape.length,h,[d,1],f),g=e.runWebGLProgram(p,[r,i,o],r.dtype),m=Dt({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),m}const ect={kernelName:YT,backendName:"webgl",kernelFunc:tct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=ge(o,i.shape)[0],l=lv(i,r,a),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=Bc({inputs:{x:i},backend:e,attrs:{begin:u,size:f}});return u[a]+=d,p})}const sct={kernelName:Tm,backendName:"webgl",kernelFunc:nct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC="return sqrt(x);",ict=Ee({opSnippet:sC,packedOpSnippet:sC,cpuKernelImpl:Ott}),rct={kernelName:Bh,backendName:"webgl",kernelFunc:ict};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oct="return x * x;",act=Ee({opSnippet:oct}),lct={kernelName:Wy,backendName:"webgl",kernelFunc:act};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC="return (a - b) * (a - b);",cct=Kn({opSnippet:iC,packedOpSnippet:iC}),uct={kernelName:Uh,backendName:"webgl",kernelFunc:cct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hct({inputs:s,attrs:t,backend:e}){const{x:n}=s,i=wi+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Ur(n.shape,i);return e.runWebGLProgram(r,[n],n.dtype)}const dct={kernelName:qh,backendName:"webgl",kernelFunc:hct};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fct{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const i=n.length,r=qe(n.length),o=qe(n.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=n.map((c,u)=>(l++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:y,end:v,strides:b}=lb(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Dt({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){F(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const C=rb(y,v,b),S=Bc({inputs:{x:i},backend:e,attrs:{begin:y,size:C}});w=Dt({inputs:{x:S},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(S)}else if(e.shouldExecuteOnCPU([i])){const S=e.readSync(i.dataId),T=me(i.shape,i.dtype,S),I=ztt(f,T,b,y);w=e.makeTensorInfo(p,i.dtype,I.values)}else{const S=new fct(y,b,f);w=e.runWebGLProgram(S,[i],i.dtype)}const _=Dt({inputs:{x:w},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(w),_}const mct={kernelName:Gy,backendName:"webgl",kernelFunc:pct};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gct(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.readSync(u.dataId),f=e.readSync(h.dataId),[p,g]=Btt(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const xct={kernelName:Hy,backendName:"webgl",kernelFunc:gct};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yct(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.readSync(r.dataId),l=e.readSync(o.dataId)[0],[c,u,h]=Utt(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const bct={kernelName:qy,backendName:"webgl",kernelFunc:yct};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vct(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(r.dataId),a=Vtt(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const wct={kernelName:Xy,backendName:"webgl",kernelFunc:vct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sct="return tan(x);",_ct=Ee({opSnippet:Sct}),Cct={kernelName:Wh,backendName:"webgl",kernelFunc:_ct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tct=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Ict=Ee({opSnippet:Tct}),Ect={kernelName:Gh,backendName:"webgl",kernelFunc:Ict};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mct{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const i=qe(this.rank),r=Act(t);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Act(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let i=0;i<s.length;i++)n.push(`imod(${e[i]}, ${s[i]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;if(i.dtype==="string"||i.shape.length>5){const l=e.readSync(i.dataId),c=i.dtype==="string"?l.map(d=>Co(d)):l,u=me(i.shape,i.dtype,c),h=Gtt(u,r);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new Mct(i.shape,r);return e.runWebGLProgram(o,[i],i.dtype)}const kct={kernelName:Hh,backendName:"webgl",kernelFunc:Qk};class Nct{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Rct{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function rC(s){let t=1;for(;t<s;)t*=2;return t}function $ct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n,a=lt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=lt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([i])||u<a||r>l){const I=e.readSync(i.dataId),[M,$]=Htt(I,c,i.dtype,r,o);return[e.makeTensorInfo(M.shape,M.dtype,M.values),e.makeTensorInfo($.shape,$.dtype,$.values)]}if(r===0)return c[c.length-1]=0,[e.makeTensorInfo(c,i.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[i,xd({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?e.unpackTensor(i):i,g=ft(c)/u,m=Dt({inputs:{x:f},attrs:{shape:[g,u]},backend:e});d&&Jo(e,f);const x=rC(r),y=rC(u);let v=null;const b=()=>v===null?[m,m]:[m,v],w=(I,M,$)=>{const E=b(),A=new Nct($),R=[[u],[v===null?1:0],[Number.NEGATIVE_INFINITY],[I],[M]],B=v;v=e.runWebGLProgram(A,E,"int32",R),Jo(e,B)};for(let I=1;I<x;I*=2){const M=I*2;for(let $=I;$>=1;$/=2)w(M,$,[g,y])}for(let I=y;I>x;I/=2){const M=b(),$=new Rct([g,I/2]),A=[[u],[v===null?1:0],[x]],k=v;v=e.runWebGLProgram($,M,"int32",A),Jo(e,k);const R=x/2,B=R*2;for(let L=R;L>=1;L/=2)w(B,L,v.shape)}let _=v;v=Bc({inputs:{x:v},backend:e,attrs:{begin:0,size:[g,r]}}),Jo(e,_);let C=Gk({inputs:{x:m,indices:v},backend:e,attrs:{axis:1,batchDims:1}});Jo(e,m);const S=c.slice(0,-1);S.push(r),_=v,v=Dt({inputs:{x:v},attrs:{shape:S},backend:e}),Jo(e,_);const T=C;return C=Dt({inputs:{x:C},attrs:{shape:S},backend:e}),Jo(e,T),[C,v]}const Dct={kernelName:jy,backendName:"webgl",kernelFunc:$ct};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fct{constructor(t,e,n,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=n==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lct(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=n,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=new Fct(h,d,o,a,l,m);return e.runWebGLProgram(x,[i,r],"float32")}const Pct={kernelName:Ky,backendName:"webgl",kernelFunc:Lct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oct(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;dd(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=n.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=qtt(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const zct={kernelName:Yy,backendName:"webgl",kernelFunc:Oct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bct(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],c=new Array(a-1);let u=0;for(let g=0;g<a;g++)g!==r&&(c[u++]=o.shape[g]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let g=0;g<p.length;g++){d[r]=g;const m=Bc({inputs:{x:o},backend:e,attrs:{begin:d,size:f}}),x=Dt({inputs:{x:m},backend:e,attrs:{shape:c}});p[g]=x,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const Uct={kernelName:Em,backendName:"webgl",kernelFunc:Bct};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vct{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,i=t.batchSize,r=t.inSize,o=t.numSegments,a=o*Math.ceil(r/n);this.outputShape=[i,a];const l="0.0",c="sumValue",u=Math.floor(n/4)*4,h=n%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n,a=i.shape.length,l=[];let c=0;const u=rn([c],a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),l.push(h),c=mn(1,a)[0]);const d=V2(h.shape,c,o),f=ft([h.shape[c]]),p=Dt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}});l.push(p);const g=Qy(i.dtype),m=(b,w,_,C,S)=>{const T=b.shape[0],I=b.shape[1],M=U2(I,S),$={windowSize:M,inSize:I,batchSize:T,numSegments:S},E=new Vct($,w),A=e.compileAndRun(E,[b,_],C);if(l.push(A),A.shape[1]===S)return A;const k=Zk({backend:e,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),R=Qk({inputs:{x:k},backend:e,attrs:{reps:[I/M]}});return l.push(k),l.push(R),m(A,w,R,C,S)},x=m(p,"unsortedSegmentSum",r,g,o),y=Dt({inputs:{x},backend:e,attrs:{shape:d}});let v=y;if(u!=null){l.push(y);const b=Do(u);v=as({inputs:{x:v},backend:e,attrs:{perm:b}})}return l.forEach(b=>e.disposeIntermediateTensorInfo(b)),v}const Gct={kernelName:Mm,backendName:"webgl",kernelFunc:Wct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hct=[Bet,Vet,Het,jet,Yet,Qet,ent,snt,ant,cnt,dnt,mnt,ynt,Snt,Tnt,Ent,Ant,$nt,Fnt,Pnt,Unt,jnt,Ynt,Jnt,ist,ost,ust,_et,fst,yst,Sst,Mst,kst,Rst,Dst,Lst,zst,Vst,Hst,Xst,Kst,Zst,tit,nit,oit,lit,hit,pit,git,vit,Cit,Mit,Nit,Dit,Fit,Pit,zit,Uit,Wit,Hit,Kit,Jit,ert,srt,ort,crt,frt,xrt,wet,brt,gst,Srt,Trt,Mrt,Tet,Rrt,Lrt,Ort,Vrt,Hrt,Krt,Jrt,not,oot,cot,hot,mot,xot,bot,_ot,Tot,Eot,Aot,Not,Fot,zot,Wot,Zot,Met,eat,iat,aat,uat,tst,fat,mat,xat,vat,Cat,Eet,Iat,Mat,kat,Rat,$at,est,Xot,Lat,Bat,Gat,ket,jat,Zat,elt,ilt,llt,ult,flt,glt,ylt,wlt,Clt,Elt,Nlt,Dlt,Plt,Blt,qnt,Kot,Wlt,Hlt,Xlt,Klt,Zlt,Qlt,ect,sct,rct,lct,uct,dct,mct,xct,bct,wct,jot,Pet,Cct,Ect,kct,Dct,Pct,Oet,zct,Uct,Gct,pat];for(const s of Hct)JT(s);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qct{constructor(t){Qt(this,"canvas");Qt(this,"debug",!1);Qt(this,"timings",{renderStart:0,renderEnd:0,physicsStart:0,physicsEnd:0,uiStart:0,uiEnd:0});Qt(this,"scene");Qt(this,"renderer");Qt(this,"gameObjects");Qt(this,"world");Qt(this,"controls");Qt(this,"camera");Qt(this,"cameraPosition");Qt(this,"cameraQuaternion");Qt(this,"resizeFunction");Qt(this,"callback");Qt(this,"ground");Qt(this,"raceTrack");this.canvas=t,this.createCamera(),this.scene=new mL,this.addLighting(),this.createRenderer(),this.enableAutoResizer(),this.setupControls(),this.createPhyiscsWorld(),this.callback=()=>{};let e=new tP;const n=()=>{const i=Math.min(e.getDelta(),.1);i>0&&this.update(i)};this.renderer.setAnimationLoop(n),this.gameObjects=[],this.ground=new KB,this.addGameObject(this.ground)}update(t){this.timings.physicsStart=performance.now(),this.world.step(t),this.gameObjects.forEach(n=>n.syncMeshesToBodies()),this.timings.physicsEnd=performance.now(),this.timings.uiStart=performance.now(),this.controls.update(),this.cameraPosition.lerp(this.camera.position,1-.9**(t/.016)),this.cameraQuaternion.slerp(this.camera.quaternion,1-.9**(t/.016));const e=this.camera.clone();e.position.copy(this.cameraPosition),e.quaternion.copy(this.cameraQuaternion),this.callback(t),this.timings.uiEnd=performance.now(),this.timings.renderStart=performance.now(),this.renderer.render(this.scene,e),this.timings.renderEnd=performance.now(),this.debug?this.renderDebug(t):this.clearDebug()}requestCallbackBeforeRender(t){this.callback=t}addGameObject(t){this.gameObjects.push(t),t.meshes.forEach(e=>this.scene.add(e)),t.bodies.forEach(e=>this.world.addBody(e)),t.constraints.forEach(e=>this.world.addConstraint(e))}removeGameObject(t){this.gameObjects=this.gameObjects.filter(e=>e!==t),t.meshes.forEach(e=>this.scene.remove(e)),t.bodies.forEach(e=>this.world.removeBody(e)),t.constraints.forEach(e=>this.world.removeConstraint(e))}addLighting(){this.scene.add(new QL(4210752));const t=new JL(16777215,.6);t.position.set(-1.1,1,.9),t.castShadow=!0,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,this.scene.add(t)}createRenderer(){this.renderer=new XC({antialias:!0,canvas:this.canvas}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=EC}createCamera(){this.camera=new si(70,window.innerWidth/window.innerHeight,.01,100),this.camera.position.z=6,this.camera.position.y=3,this.camera.position.x=6,this.cameraPosition=this.camera.position.clone(),this.cameraQuaternion=this.camera.quaternion.clone()}createPhyiscsWorld(){this.world=new Ez,this.world.gravity.set(0,-9.82,0),this.world.allowSleep=!0}setGravity(t,e,n){this.world.gravity.set(t,e,n)}enableAutoResizer(){if(this.resizeFunction)return;const t=()=>{this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight,!1),this.camera.aspect=this.canvas.offsetWidth/this.canvas.offsetHeight,this.camera.updateProjectionMatrix()};this.resizeFunction=t,window.addEventListener("resize",t),t()}disableAutoResizer(){this.resizeFunction&&window.removeEventListener("resize",this.resizeFunction),this.resizeFunction=void 0}setupControls(){this.controls=new Dz(this.camera,this.renderer.domElement),this.controls.enableDamping=!1}renderDebug(t){const e=Xf();document.getElementById("debug-element").innerText=`FPS: ${Math.round(1/t)}
            Delta: ${(t*1e3).toFixed(2)}ms, ${(this.timings.renderEnd-this.timings.renderStart).toFixed(2)}ms render, ${(this.timings.physicsEnd-this.timings.physicsStart).toFixed(2)}ms physics, ${(this.timings.uiEnd-this.timings.uiStart).toFixed(2)}ms UI
            Pysics bodies: ${this.world.bodies.length}
            Physics constraints: ${this.world.constraints.length}
            Game objects: ${this.gameObjects.length}
            Three Meshes: ${this.scene.children.length}
            Three Memory info: ${this.renderer.info.memory.geometries} geometries, ${this.renderer.info.memory.textures} textures
            Render info: ${this.renderer.info.render.calls} calls, ${this.renderer.info.render.frame} frame, ${this.renderer.info.render.lines} lines, ${this.renderer.info.render.points} points, ${this.renderer.info.render.triangles} triangles
            Program info: ${this.renderer.info.programs.length} programs
            Tensorflow: ${e.numBytes} btyes, ${e.numDataBuffers} databuffers, ${e.numTensors} tensors, ${e.unreliable} unreliable`}clearDebug(){document.getElementById("debug-element").innerText=""}}const Rl=[];function Xct(s,t=an){let e;const n=new Set;function i(a){if(gi(s,a)&&(s=a,e)){const l=!Rl.length;for(const c of n)c[1](),Rl.push(c,s);if(l){for(let c=0;c<Rl.length;c+=2)Rl[c][0](Rl[c+1]);Rl.length=0}}}function r(a){i(a(s))}function o(a,l=an){const c=[a,l];return n.add(c),n.size===1&&(e=t(i)||an),a(s),()=>{n.delete(c),n.size===0&&(e(),e=null)}}return{set:i,update:r,subscribe:o}}const tN=Xct(null);function jct(s){let t;return{c(){t=qt("canvas"),vt(t,"class","svelte-1v9nuep")},m(e,n){Kt(e,t,n),s[1](t)},p:an,i:an,o:an,d(e){e&&Ht(t),s[1](null)}}}function Kct(s,t,e){let n,i;gN(()=>{i=new qct(n),tN.set(i)});function r(o){Ix[o?"unshift":"push"](()=>{n=o,e(0,n)})}return[n,r]}class Yct extends Sr{constructor(t){super(),wr(this,t,Kct,jct,gi,{})}}function Zct(s){let t,e,n,i=s[0].brushSize+"",r,o,a,l,c;return{c(){t=qt("label"),e=We("Road width: "),n=qt("b"),r=We(i),o=he(),a=qt("input"),vt(t,"for","steps-range"),vt(t,"class","block mb-2 text-sm font-medium text-gray-300"),vt(a,"id","steps-range"),vt(a,"type","range"),vt(a,"min","0.8"),vt(a,"max","2"),vt(a,"step","0.1"),vt(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(u,h){Kt(u,t,h),Ot(t,e),Ot(t,n),Ot(n,r),Kt(u,o,h),Kt(u,a,h),ei(a,s[0].brushSize),l||(c=[Un(a,"change",s[1]),Un(a,"input",s[1])],l=!0)},p(u,[h]){h&1&&i!==(i=u[0].brushSize+"")&&Es(r,i),h&1&&ei(a,u[0].brushSize)},i:an,o:an,d(u){u&&Ht(t),u&&Ht(o),u&&Ht(a),l=!1,Kr(c)}}}function Jct(s,t,e){let{mode:n}=t;function i(){n.brushSize=Vr(this.value),e(0,n)}return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class Qct extends Sr{constructor(t){super(),wr(this,t,Jct,Zct,gi,{mode:0})}}function oC(s){let t,e,n,i=s[0].ground.body.material.friction+"",r,o,a,l,c,u,h,d=s[0].raceTrack.barrrierBody.material.friction+"",f,p,g,m,x;return{c(){t=qt("label"),e=We("Ground friction: "),n=qt("b"),r=We(i),o=he(),a=qt("input"),l=he(),c=qt("label"),u=We("Barrier friction: "),h=qt("b"),f=We(d),p=he(),g=qt("input"),vt(t,"for","steps-range"),vt(t,"class","block mb-2 text-sm font-medium text-gray-300"),vt(a,"id","steps-range"),vt(a,"type","range"),vt(a,"min","0.05"),vt(a,"max","1"),vt(a,"step","0.02"),vt(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),vt(c,"for","steps-range"),vt(c,"class","block my-2 text-sm font-medium text-gray-300"),vt(g,"id","steps-range"),vt(g,"type","range"),vt(g,"min","0.0"),vt(g,"max","1"),vt(g,"step","0.02"),vt(g,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(y,v){Kt(y,t,v),Ot(t,e),Ot(t,n),Ot(n,r),Kt(y,o,v),Kt(y,a,v),ei(a,s[0].ground.body.material.friction),Kt(y,l,v),Kt(y,c,v),Ot(c,u),Ot(c,h),Ot(h,f),Kt(y,p,v),Kt(y,g,v),ei(g,s[0].raceTrack.barrrierBody.material.friction),m||(x=[Un(a,"change",s[1]),Un(a,"input",s[1]),Un(g,"change",s[2]),Un(g,"input",s[2])],m=!0)},p(y,v){v&1&&i!==(i=y[0].ground.body.material.friction+"")&&Es(r,i),v&1&&ei(a,y[0].ground.body.material.friction),v&1&&d!==(d=y[0].raceTrack.barrrierBody.material.friction+"")&&Es(f,d),v&1&&ei(g,y[0].raceTrack.barrrierBody.material.friction)},d(y){y&&Ht(t),y&&Ht(o),y&&Ht(a),y&&Ht(l),y&&Ht(c),y&&Ht(p),y&&Ht(g),m=!1,Kr(x)}}}function tut(s){let t,e=s[0]!==null&&oC(s);return{c(){e&&e.c(),t=P0()},m(n,i){e&&e.m(n,i),Kt(n,t,i)},p(n,[i]){n[0]!==null?e?e.p(n,i):(e=oC(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:an,o:an,d(n){e&&e.d(n),n&&Ht(t)}}}function eut(s,t,e){let{gameWorld:n}=t;function i(){n.ground.body.material.friction=Vr(this.value),e(0,n)}function r(){n.raceTrack.barrrierBody.material.friction=Vr(this.value),e(0,n)}return s.$$set=o=>{"gameWorld"in o&&e(0,n=o.gameWorld)},[n,i,r]}class eN extends Sr{constructor(t){super(),wr(this,t,eut,tut,gi,{gameWorld:0})}}function aC(s,t,e){const n=s.slice();return n[1]=t[e],n[3]=e,n}function lC(s){let t,e,n,i,r=(s[0].completion*100).toFixed(1)+"",o,a,l,c,u,h,d,f,p,g,m=s[0].sensorData.length+"",x,y,v,b,w,_,C,S=s[0].sensorData,T=[];for(let I=0;I<S.length;I+=1)T[I]=cC(aC(s,S,I));return{c(){t=qt("div"),e=qt("span"),e.textContent="Track completed",n=he(),i=qt("span"),o=We(r),a=We("%"),l=he(),c=qt("div"),u=qt("div"),h=he(),d=qt("div"),f=qt("span"),f.textContent="Sensors",p=he(),g=qt("span"),x=We(m),y=We(" sensors"),v=he();for(let I=0;I<T.length;I+=1)T[I].c();b=he(),w=qt("div"),w.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Velocity: <span id="velocity-element"></span></span>',_=he(),C=qt("hr"),vt(e,"class","text-base font-medium text-blue-700 dark:text-white"),vt(i,"id","completion-text"),vt(i,"class","text-xs font-medium text-blue-700 dark:text-white"),vt(t,"class","flex justify-between mb-1"),vt(u,"id","completion-bar"),vt(u,"class","bg-gradient-to-r from-[#FF0000] via-[#FF5733] to-[#00FF00] bg-[length:100%] h-2.5 rounded-full transition-[width]"),So(u,"width",s[0].completion*100+"%"),vt(c,"class","w-full bg-gray-700 rounded-full h-2.5 mb-3"),vt(f,"class","text-base font-medium text-blue-700 dark:text-white"),vt(g,"class","text-xs font-medium my-auto text-blue-700 dark:text-white"),vt(d,"class","flex justify-between mb-1"),vt(w,"class","flex justify-between mt-4 mb-1"),vt(C,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(I,M){Kt(I,t,M),Ot(t,e),Ot(t,n),Ot(t,i),Ot(i,o),Ot(i,a),Kt(I,l,M),Kt(I,c,M),Ot(c,u),Kt(I,h,M),Kt(I,d,M),Ot(d,f),Ot(d,p),Ot(d,g),Ot(g,x),Ot(g,y),Kt(I,v,M);for(let $=0;$<T.length;$+=1)T[$].m(I,M);Kt(I,b,M),Kt(I,w,M),Kt(I,_,M),Kt(I,C,M)},p(I,M){if(M&1&&r!==(r=(I[0].completion*100).toFixed(1)+"")&&Es(o,r),M&1&&So(u,"width",I[0].completion*100+"%"),M&1&&m!==(m=I[0].sensorData.length+"")&&Es(x,m),M&1){S=I[0].sensorData;let $;for($=0;$<S.length;$+=1){const E=aC(I,S,$);T[$]?T[$].p(E,M):(T[$]=cC(E),T[$].c(),T[$].m(b.parentNode,b))}for(;$<T.length;$+=1)T[$].d(1);T.length=S.length}},d(I){I&&Ht(t),I&&Ht(l),I&&Ht(c),I&&Ht(h),I&&Ht(d),I&&Ht(v),SC(T,I),I&&Ht(b),I&&Ht(w),I&&Ht(_),I&&Ht(C)}}}function cC(s){let t,e,n=s[1].distance.toFixed(2)+"",i;return{c(){t=qt("div"),e=qt("div"),i=We(n),vt(e,"id","arrow-length-indicator-"+s[3]),vt(e,"class","bg-blue-600 mb-px bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"),So(e,"width",s[1].distance*100+"%"),vt(t,"class","w-full bg-gray-200 rounded-full dark:bg-gray-700")},m(r,o){Kt(r,t,o),Ot(t,e),Ot(e,i)},p(r,o){o&1&&n!==(n=r[1].distance.toFixed(2)+"")&&Es(i,n),o&1&&So(e,"width",r[1].distance*100+"%")},d(r){r&&Ht(t)}}}function nut(s){let t,e=s[0].car&&lC(s);return{c(){e&&e.c(),t=P0()},m(n,i){e&&e.m(n,i),Kt(n,t,i)},p(n,[i]){n[0].car?e?e.p(n,i):(e=lC(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:an,o:an,d(n){e&&e.d(n),n&&Ht(t)}}}function sut(s,t,e){let{mode:n}=t;return s.$$set=i=>{"mode"in i&&e(0,n=i.mode)},[n]}class nN extends Sr{constructor(t){super(),wr(this,t,sut,nut,gi,{mode:0})}}function iut(s){let t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m,x,y,v;return{c(){t=qt("label"),e=qt("input"),n=he(),i=qt("div"),r=he(),o=qt("span"),o.textContent="Chase camera",a=he(),l=qt("br"),c=he(),u=qt("label"),h=qt("input"),d=he(),f=qt("div"),p=he(),g=qt("span"),g.textContent="Visualize sensors",m=he(),x=qt("hr"),vt(e,"type","checkbox"),e.__value="",e.value=e.__value,vt(e,"id","chase-mode-toggle"),vt(e,"class","sr-only peer"),vt(i,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),vt(o,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),vt(t,"for","chase-mode-toggle"),vt(t,"class","inline-flex relative items-center cursor-pointer mb-4"),vt(h,"type","checkbox"),h.__value="",h.value=h.__value,vt(h,"id","show-sensors-toggle"),vt(h,"class","sr-only peer"),vt(f,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),vt(g,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),vt(u,"for","show-sensors-toggle"),vt(u,"class","inline-flex relative items-center cursor-pointer"),vt(x,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(b,w){Kt(b,t,w),Ot(t,e),e.checked=s[0].chaseMode,Ot(t,n),Ot(t,i),Ot(t,r),Ot(t,o),Ot(t,a),Kt(b,l,w),Kt(b,c,w),Kt(b,u,w),Ot(u,h),h.checked=s[0].showSensors,Ot(u,d),Ot(u,f),Ot(u,p),Ot(u,g),Kt(b,m,w),Kt(b,x,w),y||(v=[Un(e,"change",s[1]),Un(h,"change",s[2])],y=!0)},p(b,[w]){w&1&&(e.checked=b[0].chaseMode),w&1&&(h.checked=b[0].showSensors)},i:an,o:an,d(b){b&&Ht(t),b&&Ht(l),b&&Ht(c),b&&Ht(u),b&&Ht(m),b&&Ht(x),y=!1,Kr(v)}}}function rut(s,t,e){let{mode:n}=t;function i(){n.chaseMode=this.checked,e(0,n)}function r(){n.showSensors=this.checked,e(0,n)}return s.$$set=o=>{"mode"in o&&e(0,n=o.mode)},[n,i,r]}class sN extends Sr{constructor(t){super(),wr(this,t,rut,iut,gi,{mode:0})}}function out(s){let t,e,n,i,r,o,a,l,c,u,h,d;return t=new sN({props:{mode:s[0]}}),n=new nN({props:{mode:s[0]}}),r=new eN({props:{gameWorld:s[0].gameWorld}}),{c(){hr(t.$$.fragment),e=he(),hr(n.$$.fragment),i=he(),hr(r.$$.fragment),o=he(),a=qt("hr"),l=he(),c=qt("button"),c.textContent="Reset car",vt(a,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),vt(c,"type","button"),vt(c,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900")},m(f,p){Fi(t,f,p),Kt(f,e,p),Fi(n,f,p),Kt(f,i,p),Fi(r,f,p),Kt(f,o,p),Kt(f,a,p),Kt(f,l,p),Kt(f,c,p),u=!0,h||(d=Un(c,"click",s[1]),h=!0)},p(f,[p]){const g={};p&1&&(g.mode=f[0]),t.$set(g);const m={};p&1&&(m.mode=f[0]),n.$set(m);const x={};p&1&&(x.gameWorld=f[0].gameWorld),r.$set(x)},i(f){u||(Bs(t.$$.fragment,f),Bs(n.$$.fragment,f),Bs(r.$$.fragment,f),u=!0)},o(f){di(t.$$.fragment,f),di(n.$$.fragment,f),di(r.$$.fragment,f),u=!1},d(f){Li(t,f),f&&Ht(e),Li(n,f),f&&Ht(i),Li(r,f),f&&Ht(o),f&&Ht(a),f&&Ht(l),f&&Ht(c),h=!1,d()}}}function aut(s,t,e){let{mode:n}=t;const i=()=>{n.respawnCar()};return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class lut extends Sr{constructor(t){super(),wr(this,t,aut,out,gi,{mode:0})}}function cut(s){let t,e=s[0].isTraining?"Stop training":"Start training",n,i,r;return{c(){t=qt("button"),n=We(e),vt(t,"type","button"),vt(t,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900")},m(o,a){Kt(o,t,a),Ot(t,n),i||(r=Un(t,"click",s[1]),i=!0)},p(o,[a]){a&1&&e!==(e=o[0].isTraining?"Stop training":"Start training")&&Es(n,e)},i:an,o:an,d(o){o&&Ht(t),i=!1,r()}}}function uut(s,t,e){let{mode:n}=t;const i=()=>{n.isTraining?n.stopTraining():n.startTraining()};return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class hut extends Sr{constructor(t){super(),wr(this,t,uut,cut,gi,{mode:0})}}const uC=[0,-15,15,-30,30,-45,45,-60,60,-75,75,-90,90].map(s=>s*Math.PI/180).sort(function(s,t){return s-t}),tr=8;class Wu extends Z0{constructor(t,e,n,i,r,o=1,a=.25,l=.1){super();const c=new Xa({friction:a,restitution:l}),u=new Ga(.1,.1,.2),h=new Je(u,i);h.castShadow=!0,h.receiveShadow=!0,h.position.x=t,h.position.y=e,h.position.z=n,h.updateMatrix(),this.meshes.push(h),this.carBodyMesh=h;const d=new qu(new N(.05,.05,.1)),f=new Bt({mass:o/2,allowSleep:!1,collisionFilterGroup:tr,collisionFilterMask:~tr});f.addShape(d),f.position.x=h.position.x,f.position.y=h.position.y,f.position.z=h.position.z,this.bodies.push(f);const p=new ua(.033,.033,.02,16);p.rotateZ(Math.PI/2);const g=new Je(p,r);g.castShadow=!0,g.receiveShadow=!0,g.position.x=-.1+h.position.x,g.position.y=-.05+h.position.y,g.position.z=-.1+h.position.z,this.meshes.push(g),this.wheelLFMesh=g;const m=new Yd(.033),x=new Bt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:tr,collisionFilterMask:~tr});x.addShape(m),x.position.x=g.position.x,x.position.y=g.position.y,x.position.z=g.position.z,this.bodies.push(x);const y=new ua(.033,.033,.02,16);y.rotateZ(Math.PI/2);const v=new Je(y,r);v.castShadow=!0,v.receiveShadow=!0,v.position.x=.1+h.position.x,v.position.y=-.05+h.position.y,v.position.z=-.1+h.position.z,this.meshes.push(v),this.wheelRFMesh=v;const b=new Yd(.033),w=new Bt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:tr,collisionFilterMask:~tr});w.addShape(b),w.position.x=v.position.x,w.position.y=v.position.y,w.position.z=v.position.z,this.bodies.push(w);const _=new ua(.04,.04,.033);_.rotateZ(Math.PI/2);const C=new Je(_,r);C.castShadow=!0,C.receiveShadow=!0,C.position.x=-.1+h.position.x,C.position.y=-.05+h.position.y,C.position.z=.1+h.position.z,this.meshes.push(C),this.wheelLBMesh=C;const S=new Yd(.04),T=new Bt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:tr,collisionFilterMask:~tr});T.addShape(S),T.position.x=C.position.x,T.position.y=C.position.y,T.position.z=C.position.z,this.bodies.push(T);const I=new ua(.04,.04,.033);I.rotateZ(Math.PI/2);const M=new Je(I,r);M.castShadow=!0,M.receiveShadow=!0,M.position.x=.1+h.position.x,M.position.y=-.05+h.position.y,M.position.z=.1+h.position.z,this.meshes.push(M),this.wheelRBMesh=M;const $=new Yd(.04),E=new Bt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:tr,collisionFilterMask:~tr});E.addShape($),E.position.x=M.position.x,E.position.y=M.position.y,E.position.z=M.position.z,this.bodies.push(E);const A=new N(1,0,0),k=new N(1,0,0),R=new N(1,0,0),B=new N(1,0,0);this.constraintLF=new Kd(f,x,{pivotA:new N(-.1,-.05,-.1),axisA:A,maxForce:.99}),this.constraints.push(this.constraintLF),this.constraintRF=new Kd(f,w,{pivotA:new N(.1,-.05,-.1),axisA:k,maxForce:.99}),this.constraints.push(this.constraintRF),this.constraintLB=new Kd(f,T,{pivotA:new N(-.1,-.05,.1),axisA:R,maxForce:.99}),this.constraints.push(this.constraintLB),this.constraintRB=new Kd(f,E,{pivotA:new N(.1,-.05,.1),axisA:B,maxForce:.99}),this.constraints.push(this.constraintRB),this.accelMotorForce=.004,this.brakeMotorForce=1,this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.enableMotor(),this.constraintRB.enableMotor()}getSensorRays(){const t=this.getForwardDir(),e=this.getSideDir();let n=this.carBodyMesh.position.clone().add(t.clone().multiplyScalar(.1));return uC.map(i=>{let r=t.clone().multiplyScalar(Math.cos(i)).add(e.clone().multiplyScalar(Math.sin(i))),o=n.clone().add(e.clone().multiplyScalar(.05*Math.sin(i))),a=new iT(o,r,.01,1);return a.layers.set(ny),a.firstHitOnly=!0,a})}getSensorData(t){return this.getSensorRays().map(n=>{let i=n.intersectObjects([t.raceTrack.barrierMesh,t.ground.mesh],!1),r=i.length>0?i[0].distance/n.far:1,o=n.ray.origin,a=n.ray.direction;return{distance:r,origin:o,direction:a}})}static get sensorNumber(){return uC.length}getForwardVelocity(){let t=this.getForwardDir();t.y=0,t.normalize();let e=this.bodies[0].velocity;return t.x*e.x+t.z*e.z}getPosition(){return this.carBodyMesh.position.clone()}getForwardDir(){let t=this.wheelLFMesh.position.clone().sub(this.wheelLBMesh.position).normalize(),e=this.wheelRFMesh.position.clone().sub(this.wheelRBMesh.position).normalize();return t.clone().add(e).divideScalar(2)}getSideDir(){let t=this.wheelLBMesh.position.clone().sub(this.wheelRBMesh.position).normalize(),e=this.wheelLFMesh.position.clone().sub(this.wheelRFMesh.position).normalize();return t.clone().add(e).divideScalar(2)}rotateY(t){const e=this.getPosition();this.bodies.forEach(n=>{const i=new W(n.position.x,n.position.y,n.position.z).sub(e);i.applyAxisAngle(new W(0,1,0),t),n.position.set(i.x+e.x,i.y+e.y,i.z+e.z),n.quaternion=n.quaternion.mult(new hn().setFromAxisAngle(new N(0,1,0),-t))})}applyInput(t,e,n,i,r){t&&!n&&(this.constraintLB.setMotorSpeed(100),this.constraintRB.setMotorSpeed(100)),n&&!t&&(this.constraintLB.setMotorSpeed(-20),this.constraintRB.setMotorSpeed(-20)),(!t&&!n||t&&n)&&(this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0)),e&&!i&&(this.constraintLF.axisA.z=-.25,this.constraintRF.axisA.z=-.25),i&&!e&&(this.constraintLF.axisA.z=.25,this.constraintRF.axisA.z=.25),(!e&&!i||e&&i)&&(this.constraintLF.axisA.z=0,this.constraintRF.axisA.z=0),r?(this.constraintLB.setMotorMaxForce(this.brakeMotorForce),this.constraintRB.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0),this.constraintLF.enableMotor(),this.constraintRF.enableMotor(),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLF.setMotorSpeed(0),this.constraintRF.setMotorSpeed(0)):(this.constraintLF.disableMotor(),this.constraintRF.disableMotor(),this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce))}}const dut=new nT,fut=new Ha({color:2236962});class iN{constructor(t){Qt(this,"gameWorld");Qt(this,"car");Qt(this,"keyupHandler");Qt(this,"keydownHandler");Qt(this,"arrowHelpers",[]);Qt(this,"sensorData",[]);Qt(this,"chaseMode",!0);Qt(this,"W",!1);Qt(this,"A",!1);Qt(this,"S",!1);Qt(this,"D",!1);Qt(this,"SPACE",!1);Qt(this,"_showSensors",!1);Qt(this,"completion",0);this.gameWorld=t,this.keydownHandler=e=>{switch(e.key){case"w":this.W=!0,e.preventDefault();break;case"a":this.A=!0,e.preventDefault();break;case"s":this.S=!0,e.preventDefault();break;case"d":this.D=!0,e.preventDefault();break;case" ":this.SPACE=!0,e.preventDefault();break}},this.keyupHandler=e=>{switch(e.key){case"w":this.W=!1,e.preventDefault();break;case"a":this.A=!1,e.preventDefault();break;case"s":this.S=!1,e.preventDefault();break;case"d":this.D=!1,e.preventDefault();break;case" ":this.SPACE=!1,e.preventDefault();break}}}update(t){var e;if((e=this.car)==null||e.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.car){this.sensorData=this.car.getSensorData(this.gameWorld),this.sensorData.forEach((i,r)=>{const o=this.arrowHelpers[r];o.setLength(i.distance,.05,.03),o.setDirection(i.direction),o.position.copy(i.origin),o.updateMatrix();const a=document.getElementById("arrow-length-indicator-"+r);a&&(a.style.width=i.distance*100+"%",a.innerText=i.distance.toFixed(2))});const n=this.car.getPosition();this.completion=this.gameWorld.raceTrack.amountCompleted(n.x,n.z),document.getElementById("completion-text").innerText=(this.completion*100).toFixed(1)+"%",document.getElementById("completion-bar").style.width=this.completion*100+"%"}if(this.car&&(document.getElementById("velocity-element").innerText=this.car.getForwardVelocity().toFixed(2)),this.chaseMode&&this.car){this.gameWorld.controls.target=this.car.getPosition(),this.gameWorld.controls.target.y+=.2;let n=this.car.getForwardDir();n.y=0,n.normalize(),n.multiplyScalar(-.5),n.y=.2,this.gameWorld.camera.position.copy(this.car.getPosition()),this.gameWorld.camera.position.add(n)}}get showSensors(){return this._showSensors}set showSensors(t){this._showSensors=t,this.arrowHelpers.forEach(e=>{e.visible=t})}removeCar(){this.car&&this.gameWorld.removeGameObject(this.car),delete this.car,this.arrowHelpers.forEach(t=>{this.gameWorld.scene.remove(t),t.dispose()}),this.arrowHelpers=[],this.sensorData=[],this.completion=0}respawnCar(){this.removeCar(),this.car=new Wu(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,dut,fut,5,.25,.1),this.car.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(this.car),this.arrowHelpers=this.car.getSensorRays().map(t=>{const e=t.ray.direction;e.normalize();const n=t.ray.origin,i=e.length(),r=16776960,o=new eP(e,n,i,r);return o.visible=this.showSensors,this.gameWorld.scene.add(o),o}),this.sensorData=this.car.getSensorData(this.gameWorld)}activate(){this.W=this.A=this.S=this.D=this.SPACE=!1,this.respawnCar(),document.addEventListener("keydown",this.keydownHandler),document.addEventListener("keyup",this.keyupHandler)}deactivate(){this.removeCar(),document.removeEventListener("keydown",this.keydownHandler),document.removeEventListener("keyup",this.keyupHandler)}}SU("cpu");var ps=(s=>(s[s.Teach=0]="Teach",s[s.Demonstrate=1]="Demonstrate",s[s.None=2]="None",s))(ps||{});const put=Wu,mut=5;class gut extends iN{constructor(e){super(e);Qt(this,"inputSize");Qt(this,"model");Qt(this,"_state",2);Qt(this,"previousState",2);Qt(this,"recording",[]);Qt(this,"storedRecording",[]);Qt(this,"isCurrentlyFitting",!1);Qt(this,"currentLoss",0);Qt(this,"epochsDone",0);Qt(this,"_numberOfEpochs",40);Qt(this,"_batchSize",32);Qt(this,"_hiddenLayerSize",10);this.inputSize=put.sensorNumber+1,this.generateNetwork()}generateNetwork(){this.model&&this.model.dispose(),this.model=AE({layers:[lp({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"tanh"}),lp({units:mut,activation:"softmax"})]}),this.model.compile({optimizer:"adam",loss:"binaryCrossentropy"})}recordButtonPressed(){this.respawnCar(),this.state=0,this.recording=[],this.rerenderTeachPanel()}discardButtonPressed(){this.state=2,this.recording=[],this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}startAIDemonstration(){this.state=1,this.recording=[],this.respawnCar(),this.rerenderTeachPanel()}stopAIDemonstration(){this.state=2,this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}storeRecording(){this.storedRecording.push(...this.recording),this.recording=[],this.rerenderTeachPanel()}async trainFromStored(){const e=this.storedRecording.map(o=>[...o.sensordDistances,o.forwardVelocity]),n=this.storedRecording.map(o=>o.action),i=yu(e),r=yu(n);this.isCurrentlyFitting=!0,await this.model.fit(i,r,{epochs:this.numberOfEpochs,callbacks:{onEpochEnd:(o,a)=>{this.currentLoss=a.loss,this.epochsDone=o+1,this.rerenderTeachPanel()},onTrainEnd:()=>{this.isCurrentlyFitting=!1,this.rerenderTeachPanel()}}}),i.dispose(),r.dispose()}update(e){if(super.update(e),this.state===0&&this.car){const n=this.car.getPosition();this.gameWorld.raceTrack.isFinished(n.x,n.z)?(this.state=2,this.removeCar(),this.rerenderTeachPanel(),this.gameWorld.controls.reset()):(this.recording.push({sensordDistances:this.sensorData.map(i=>i.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}if(this.state===1&&this.car){const n=yu([[...this.sensorData.map(o=>o.distance),this.car.getForwardVelocity()]]),i=this.model.predict(n),r=i.arraySync()[0].map(o=>o>=.5);this.car.applyInput(...r),n.dispose(),i.dispose(),(this.W||this.A||this.S||this.D||this.SPACE)&&(this.car.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.recording.push({sensordDistances:this.sensorData.map(o=>o.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}}removeCar(){super.removeCar()}respawnCar(){super.respawnCar()}activate(){super.activate(),this.removeCar()}deactivate(){super.deactivate(),this.removeCar(),this.state=2,this.recording=[]}get numberOfEpochs(){return this._numberOfEpochs}set numberOfEpochs(e){e==null||e<1||(this._numberOfEpochs=Math.floor(e))}get batchSize(){return this._batchSize}set batchSize(e){e==null||e<1||(this._batchSize=Math.floor(e))}get hiddenLayerSize(){return this._hiddenLayerSize}set hiddenLayerSize(e){e==null||e<1||(this._hiddenLayerSize=Math.floor(e),this.generateNetwork())}get state(){return this._state}set state(e){e!==this._state&&(this.previousState=this._state,this._state=e)}rerenderTeachPanel(){window.rerenderTeachPanel()}}function hC(s){let t,e,n,i=s[0].recording.length+"",r,o,a=s[0].state===ps.Teach||s[0].previousState===ps.Teach?"inputs recorded":"corrections recorded",l;return{c(){t=qt("div"),e=qt("span"),n=qt("span"),r=We(i),o=We(`
            \xA0`),l=We(a),vt(n,"id","recorded-count-span"),vt(e,"class","text-base font-medium text-blue-700 dark:text-white"),So(t,"display","hidden"),vt(t,"class","flex mt-4 mb-1")},m(c,u){Kt(c,t,u),Ot(t,e),Ot(e,n),Ot(n,r),Ot(t,o),Ot(t,l)},p(c,u){u&1&&i!==(i=c[0].recording.length+"")&&Es(r,i),u&1&&a!==(a=c[0].state===ps.Teach||c[0].previousState===ps.Teach?"inputs recorded":"corrections recorded")&&Es(l,a)},d(c){c&&Ht(t)}}}function dC(s){let t,e,n;return{c(){t=qt("button"),t.innerHTML='<span class="relative py-1 px-2 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Store recording</span>',vt(t,"class","inline-flex items-center text-center justify-center p-0.5 mb-2 overflow-hidden text-xs font-medium text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-pink-300 group-hover:via-purple-300 group-hover:to-indigo-400 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400 block mx-auto")},m(i,r){Kt(i,t,r),e||(n=Un(t,"click",s[4]),e=!0)},p:an,d(i){i&&Ht(t),e=!1,n()}}}function fC(s){let t,e,n;return{c(){t=qt("button"),t.textContent="Train from stored inputs",vt(t,"type","button"),vt(t,"class","block text-red-700 hover:text-white mx-auto border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-xs px-2 py-1 text-center mb-0 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900")},m(i,r){Kt(i,t,r),e||(n=Un(t,"click",s[5]),e=!0)},p:an,d(i){i&&Ht(t),e=!1,n()}}}function pC(s){let t,e,n,i=s[0].currentLoss.toFixed(4)+"",r,o,a,l=s[0].epochsDone+"",c,u,h=s[0].numberOfEpochs+"",d,f,p,g,m;return{c(){t=qt("div"),e=qt("span"),n=We("Loss: "),r=We(i),o=he(),a=qt("span"),c=We(l),u=We(" / "),d=We(h),f=We(" epochs"),p=he(),g=qt("div"),m=qt("div"),vt(e,"class","text-sm font-light text-blue-700 dark:text-white"),vt(a,"class","text-sm font-medium text-blue-700 dark:text-white"),vt(t,"class","flex justify-between mb-1"),vt(m,"class","bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 h-2.5 rounded-full"),So(m,"width",s[0].epochsDone/s[0].numberOfEpochs*100+"%"),vt(g,"class","w-full bg-gray-700 rounded-full h-2.5")},m(x,y){Kt(x,t,y),Ot(t,e),Ot(e,n),Ot(e,r),Ot(t,o),Ot(t,a),Ot(a,c),Ot(a,u),Ot(a,d),Ot(a,f),Kt(x,p,y),Kt(x,g,y),Ot(g,m)},p(x,y){y&1&&i!==(i=x[0].currentLoss.toFixed(4)+"")&&Es(r,i),y&1&&l!==(l=x[0].epochsDone+"")&&Es(c,l),y&1&&h!==(h=x[0].numberOfEpochs+"")&&Es(d,h),y&1&&So(m,"width",x[0].epochsDone/x[0].numberOfEpochs*100+"%")},d(x){x&&Ht(t),x&&Ht(p),x&&Ht(g)}}}function mC(s){let t,e,n=s[0].state==ps.None?"New recording":"Discard",i,r,o,a,l,c,u,h,d,f,p=s[0].storedRecording.length+"",g,m,x,y,v,b,w,_,C,S,T,I,M,$,E,A,k,R,B,L,D,V,q,G,K,ot,ht,J,gt=(s[0].state!=ps.None||s[0].recording.length>0)&&hC(s),mt=s[0].state==ps.None&&s[0].recording.length>0&&dC(s),bt=s[0].storedRecording.length>0&&!s[0].isCurrentlyFitting&&fC(s),pt=s[0].isCurrentlyFitting&&pC(s);return D=new sN({props:{mode:s[0]}}),q=new nN({props:{mode:s[0]}}),K=new eN({props:{gameWorld:s[0].gameWorld}}),{c(){t=qt("div"),e=qt("button"),i=We(n),r=he(),o=qt("button"),o.textContent="Test AI car",a=he(),gt&&gt.c(),l=he(),mt&&mt.c(),c=he(),u=qt("hr"),h=he(),d=qt("div"),f=qt("span"),g=We(p),m=We(" inputs stored."),x=he(),bt&&bt.c(),y=he(),pt&&pt.c(),v=he(),b=qt("ul"),w=qt("li"),w.textContent="Epochs",_=he(),C=qt("input"),S=he(),T=qt("li"),T.textContent="Batch size",I=he(),M=qt("input"),$=he(),E=qt("li"),E.textContent="Hidden layer units",A=he(),k=qt("input"),R=he(),B=qt("hr"),L=he(),hr(D.$$.fragment),V=he(),hr(q.$$.fragment),G=he(),hr(K.$$.fragment),vt(e,"type","button"),vt(e,"class","focus:outline-none text-white grow flex-1 transition py-1 px-2 text-sm focus:ring-red-300 font-bold rounded-l-lg border border-gray-200 focus:z-10 focus:ring-1 bg-red-600 border-gray-600 text-white hover:text-white hover:bg-red-700"),vt(o,"type","button"),vt(o,"class","text-purple-700 hover:text-white grow flex-1 transition border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-bold rounded-r-lg text-sm px-2 py-1 text-center dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900"),vt(t,"class","flex rounded-md shadow-sm"),vt(t,"role","group"),vt(u,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),vt(f,"class","text-base font-medium text-blue-700 dark:text-white"),So(d,"display","hidden"),vt(d,"class","flex justify-between mt-4 mb-1"),vt(w,"class","col-span-2 py-2 px-2 rounded-tl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),vt(C,"type","number"),vt(C,"min","1"),vt(C,"max","1000000"),vt(C,"step","1"),vt(C,"pattern","\\d+"),vt(C,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-tr-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),vt(T,"class","col-span-2 py-2 px-2 border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),vt(M,"type","number"),vt(M,"min","1"),vt(M,"max","256"),vt(M,"step","1"),vt(M,"pattern","\\d+"),vt(M,"class","col-span-1 p-1 text-gray-900 bg-gray-50 border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),vt(E,"class","col-span-2 py-2 px-2 rounded-bl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),vt(k,"type","number"),vt(k,"min","1"),vt(k,"max","1024"),vt(k,"step","1"),vt(k,"pattern","\\d+"),vt(k,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-br-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),vt(b,"class","w-100 mt-4 grid grid-cols-3 flex-row flex-wrap text-sm font-bold rounded-xl border border-gray-600"),vt(B,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(st,et){Kt(st,t,et),Ot(t,e),Ot(e,i),Ot(t,r),Ot(t,o),Kt(st,a,et),gt&&gt.m(st,et),Kt(st,l,et),mt&&mt.m(st,et),Kt(st,c,et),Kt(st,u,et),Kt(st,h,et),Kt(st,d,et),Ot(d,f),Ot(f,g),Ot(f,m),Kt(st,x,et),bt&&bt.m(st,et),Kt(st,y,et),pt&&pt.m(st,et),Kt(st,v,et),Kt(st,b,et),Ot(b,w),Ot(b,_),Ot(b,C),ei(C,s[0].numberOfEpochs),Ot(b,S),Ot(b,T),Ot(b,I),Ot(b,M),ei(M,s[0].batchSize),Ot(b,$),Ot(b,E),Ot(b,A),Ot(b,k),ei(k,s[0].hiddenLayerSize),Kt(st,R,et),Kt(st,B,et),Kt(st,L,et),Fi(D,st,et),Kt(st,V,et),Fi(q,st,et),Kt(st,G,et),Fi(K,st,et),ot=!0,ht||(J=[Un(e,"click",s[2]),Un(o,"click",s[3]),Un(C,"input",s[6]),Un(M,"input",s[7]),Un(k,"input",s[8])],ht=!0)},p(st,et){(!ot||et&1)&&n!==(n=st[0].state==ps.None?"New recording":"Discard")&&Es(i,n),st[0].state!=ps.None||st[0].recording.length>0?gt?gt.p(st,et):(gt=hC(st),gt.c(),gt.m(l.parentNode,l)):gt&&(gt.d(1),gt=null),st[0].state==ps.None&&st[0].recording.length>0?mt?mt.p(st,et):(mt=dC(st),mt.c(),mt.m(c.parentNode,c)):mt&&(mt.d(1),mt=null),(!ot||et&1)&&p!==(p=st[0].storedRecording.length+"")&&Es(g,p),st[0].storedRecording.length>0&&!st[0].isCurrentlyFitting?bt?bt.p(st,et):(bt=fC(st),bt.c(),bt.m(y.parentNode,y)):bt&&(bt.d(1),bt=null),st[0].isCurrentlyFitting?pt?pt.p(st,et):(pt=pC(st),pt.c(),pt.m(v.parentNode,v)):pt&&(pt.d(1),pt=null),et&1&&Vr(C.value)!==st[0].numberOfEpochs&&ei(C,st[0].numberOfEpochs),et&1&&Vr(M.value)!==st[0].batchSize&&ei(M,st[0].batchSize),et&1&&Vr(k.value)!==st[0].hiddenLayerSize&&ei(k,st[0].hiddenLayerSize);const ct={};et&1&&(ct.mode=st[0]),D.$set(ct);const St={};et&1&&(St.mode=st[0]),q.$set(St);const At={};et&1&&(At.gameWorld=st[0].gameWorld),K.$set(At)},i(st){ot||(Bs(D.$$.fragment,st),Bs(q.$$.fragment,st),Bs(K.$$.fragment,st),ot=!0)},o(st){di(D.$$.fragment,st),di(q.$$.fragment,st),di(K.$$.fragment,st),ot=!1},d(st){st&&Ht(t),st&&Ht(a),gt&&gt.d(st),st&&Ht(l),mt&&mt.d(st),st&&Ht(c),st&&Ht(u),st&&Ht(h),st&&Ht(d),st&&Ht(x),bt&&bt.d(st),st&&Ht(y),pt&&pt.d(st),st&&Ht(v),st&&Ht(b),st&&Ht(R),st&&Ht(B),st&&Ht(L),Li(D,st),st&&Ht(V),Li(q,st),st&&Ht(G),Li(K,st),ht=!1,Kr(J)}}}function xut(s){let t=s[1],e,n,i=mC(s);return{c(){i.c(),e=P0()},m(r,o){i.m(r,o),Kt(r,e,o),n=!0},p(r,[o]){o&2&&gi(t,t=r[1])?(CC(),di(i,1,1,an),TC(),i=mC(r),i.c(),Bs(i,1),i.m(e.parentNode,e)):i.p(r,o)},i(r){n||(Bs(i),n=!0)},o(r){di(i),n=!1},d(r){r&&Ht(e),i.d(r)}}}function yut(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTeachPanel=r;const o=()=>{n.state==ps.None?n.recordButtonPressed():n.state==ps.Teach&&n.discardButtonPressed()},a=()=>{n.state==ps.None?n.startAIDemonstration():n.state==ps.Demonstrate&&n.stopAIDemonstration()},l=()=>{n.storeRecording()},c=()=>{n.trainFromStored()};function u(){n.numberOfEpochs=Vr(this.value),e(0,n)}function h(){n.batchSize=Vr(this.value),e(0,n)}function d(){n.hiddenLayerSize=Vr(this.value),e(0,n)}return s.$$set=f=>{"mode"in f&&e(0,n=f.mode)},[n,i,o,a,l,c,u,h,d]}class but extends Sr{constructor(t){super(),wr(this,t,yut,xut,gi,{mode:0})}}const $f=new q0(.45,.5,32,1);$f.rotateX(Math.PI/2);const Zv=new Wa({color:0,side:Cs});Zv.depthTest=!1;Zv.depthWrite=!1;const Jv=new Wa({color:16753920,side:Cs});Jv.depthTest=!1;Jv.depthWrite=!1;const rN=new Wa({color:65280,side:Cs});rN.depthTest=!1;rN.depthWrite=!1;const Qv=new Wa({color:255,side:Cs});Qv.depthTest=!1;Qv.depthWrite=!1;class vut{constructor(t){Qt(this,"gameWorld");Qt(this,"raycaster");Qt(this,"pointer");Qt(this,"ring");Qt(this,"brushSize",1);Qt(this,"onPointerMove");Qt(this,"onMouseUp");Qt(this,"onMouseDown");Qt(this,"mouseDown");Qt(this,"rings");Qt(this,"road");Qt(this,"roadPoints");this.gameWorld=t,this.roadPoints=[new W(4,0,4),new W(-4,0,4),new W(-4,0,0),new W(4,0,0),new W(4,0,-4),new W(-4,0,-4)],this.road=new wS(this.roadPoints,1),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road,this.raycaster=new iT,this.pointer=new Tt(0,0),this.onPointerMove=e=>{this.pointer.x=e.offsetX/this.gameWorld.canvas.offsetWidth*2-1,this.pointer.y=-(e.offsetY/this.gameWorld.canvas.offsetHeight)*2+1},this.ring=new Je($f,Zv),this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.ring.castShadow=!1,this.ring.receiveShadow=!1,this.ring.renderOrder=999,this.rings=[],this.mouseDown=!1,this.onMouseUp=e=>{e.button===0&&this.endDrawing(),document.removeEventListener("mouseup",this.onMouseUp)},this.onMouseDown=e=>{e.button===0&&(this.startDrawing(),document.addEventListener("mouseup",this.onMouseUp))}}startDrawing(){this.mouseDown=!0;const t=new Je($f,Jv);t.scale.set(this.brushSize,this.brushSize,this.brushSize),t.castShadow=!1,t.receiveShadow=!1,t.renderOrder=999,t.position.copy(this.ring.position),this.rings=[t],this.gameWorld.scene.add(t)}addDrawing(){if(this.rings.some(n=>this.ring.position.distanceTo(n.position)<this.brushSize))return;const e=new Je($f,Qv);e.scale.set(this.brushSize,this.brushSize,this.brushSize),e.castShadow=!1,e.receiveShadow=!1,e.renderOrder=999,e.position.copy(this.ring.position),this.rings.push(e),this.gameWorld.scene.add(e)}endDrawing(){this.mouseDown=!1,this.rings.length>3&&(this.gameWorld.removeGameObject(this.road),this.roadPoints=this.rings.map(t=>t.position),this.road=new wS(this.roadPoints,this.brushSize),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road),this.rings.forEach(t=>{this.gameWorld.scene.remove(t)}),this.rings=[]}update(t){this.raycaster.setFromCamera(this.pointer,this.gameWorld.camera);const e=this.raycaster.intersectObjects([this.gameWorld.ground.mesh]);if(e.length>0){const n=e[0].point;this.ring.position.set(n.x,n.y,n.z),this.ring.visible=!0}else this.ring.visible=!1;this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.mouseDown&&this.addDrawing(),this.gameWorld.controls.target.set(0,0,0)}activate(){this.gameWorld.controls.maxPolarAngle=0,this.gameWorld.controls.minAzimuthAngle=0,this.gameWorld.controls.maxAzimuthAngle=0,this.gameWorld.controls.minDistance=8,this.gameWorld.controls.maxDistance=8,this.gameWorld.controls.target.set(0,0,0),this.ring.visible=!1,this.gameWorld.scene.add(this.ring),this.gameWorld.canvas.addEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.addEventListener("mousedown",this.onMouseDown)}deactivate(){this.gameWorld.controls.maxPolarAngle=Math.PI,this.gameWorld.controls.minAzimuthAngle=1/0,this.gameWorld.controls.maxAzimuthAngle=1/0,this.gameWorld.controls.minDistance=0,this.gameWorld.controls.maxDistance=50,this.gameWorld.controls.reset(),this.gameWorld.scene.remove(this.ring),this.gameWorld.canvas.removeEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.removeEventListener("mousedown",this.onMouseDown)}}const gC=new nT,xC=new Ha({color:2236962}),wut=Wu,Sut=5;class _ut{constructor(t){Qt(this,"gameWorld");Qt(this,"inputSize");Qt(this,"isTraining",!1);Qt(this,"populationSize",50);Qt(this,"maxRunTime",20);Qt(this,"population",[]);Qt(this,"hiddenLayerSize",10);Qt(this,"timeLeft",0);this.gameWorld=t,this.inputSize=wut.sensorNumber+1}generatePopulation(){this.population=[];for(let t=0;t<this.populationSize;t++)this.population.push(this.generateAgent())}startTraining(){this.isTraining=!0,this.population.length===0&&this.generatePopulation(),this.timeLeft=this.maxRunTime}stopTraining(){this.isTraining=!1}update(t){this.isTraining&&(this.timeLeft-=t,this.timeLeft<=0&&(this.doRankingAndCrossover(),this.timeLeft=this.maxRunTime,this.resetCars())),this.population.forEach(e=>{const n=e.car.getSensorData(this.gameWorld),i=e.car.getForwardVelocity(),r=yu([[...n.map(l=>l.distance),i]]),o=e.model.predict(r),a=o.arraySync()[0].map(l=>l>=.5);e.car.applyInput(...a),r.dispose(),o.dispose()})}doRankingAndCrossover(){this.population.forEach(t=>{const e=t.car.getPosition();t.fitness=this.gameWorld.raceTrack.amountCompleted(e.x,e.z)}),this.population.sort((t,e)=>e.fitness-t.fitness),rt(()=>{for(let n=Math.round(this.population.length/2);n<this.population.length;n++){if(Math.random()>=.25)continue;const i=this.population[Math.floor(Math.random()*this.population.length/2)],r=this.population[Math.floor(Math.random()*this.population.length/2)],o=this.population[n];for(let a=0;a<o.model.weights.length;a++){const l=o.model.weights[a],c=i.model.weights[a],u=r.model.weights[a],h=Math.random();l.val.assign(c.val.mul(h).add(u.val.mul(1-h)))}}const e=.05;for(let n=0;n<this.population.length;n++)Math.random()>=e||this.population[n].model.weights.forEach(i=>{const r=x0(i.shape,0,.01);i.val.assign(i.val.add(r))})})}activate(){this.gameWorld.controls.reset()}deactivate(){}resetCars(){this.population.forEach(t=>{this.gameWorld.removeGameObject(t.car);const e=new Wu(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,gC,xC,5,.25,.1);e.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(e),t.car=e})}generateAgent(){const t=new Wu(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,gC,xC,5,.25,.1);t.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(t);const e=AE({layers:[lp({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"tanh"}),lp({units:Sut,activation:"softmax"})]});return e.compile({optimizer:"adam",loss:"binaryCrossentropy"}),e.weights.forEach(n=>{const i=x0(n.shape);n.val.assign(i)}),{car:t,model:e,fitness:0}}}function yC(s,t,e){const n=s.slice();return n[7]=t[e],n[9]=e,n}function bC(s){let t,e=s[7]+"",n,i,r,o,a;function l(){return s[5](s[9])}return{c(){t=qt("button"),n=We(e),i=he(),vt(t,"type","button"),vt(t,"class",r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")},m(c,u){Kt(c,t,u),Ot(t,n),Ot(t,i),o||(a=Un(t,"click",l),o=!0)},p(c,u){s=c,u&1&&r!==(r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")&&vt(t,"class",r)},d(c){c&&Ht(t),o=!1,a()}}}function Cut(s){let t,e,n,i,r,o=s[1],a=[];for(let u=0;u<o.length;u+=1)a[u]=bC(yC(s,o,u));var l=s[2][s[0]];function c(u){return{props:{mode:u[3][u[0]]}}}return l&&(i=sw(l,c(s))),{c(){t=qt("div");for(let u=0;u<a.length;u+=1)a[u].c();e=he(),n=qt("div"),i&&hr(i.$$.fragment),vt(t,"class","sticky top-0 z-50 inline-flex rounded-md shadow-sm w-full"),vt(t,"role","group"),vt(n,"class","p-4")},m(u,h){Kt(u,t,h);for(let d=0;d<a.length;d+=1)a[d].m(t,null);Kt(u,e,h),Kt(u,n,h),i&&Fi(i,n,null),r=!0},p(u,[h]){if(h&19){o=u[1];let f;for(f=0;f<o.length;f+=1){const p=yC(u,o,f);a[f]?a[f].p(p,h):(a[f]=bC(p),a[f].c(),a[f].m(t,null))}for(;f<a.length;f+=1)a[f].d(1);a.length=o.length}const d={};if(h&1&&(d.mode=u[3][u[0]]),l!==(l=u[2][u[0]])){if(i){CC();const f=i;di(f.$$.fragment,1,0,()=>{Li(f,1)}),TC()}l?(i=sw(l,c(u)),hr(i.$$.fragment),Bs(i.$$.fragment,1),Fi(i,n,null)):i=null}else l&&i.$set(d)},i(u){r||(i&&Bs(i.$$.fragment,u),r=!0)},o(u){i&&di(i.$$.fragment,u),r=!1},d(u){u&&Ht(t),SC(a,u),u&&Ht(e),u&&Ht(n),i&&Li(i)}}}const Tut=2;function Iut(s,t,e){const n=["Draw","Play","Train","Teach"],i=[Qct,lut,hut,but],r=[];let o=-1,a;tN.subscribe(u=>{u&&(a=u,r.push(new vut(a)),r.push(new iN(a)),r.push(new _ut(a)),r.push(new gut(a)),l(Tut))});function l(u){o!==u&&(o!==-1&&r[o].deactivate(),e(0,o=u),r[o].activate(),a.requestCallbackBeforeRender(r[o].update.bind(r[o])))}return[o,n,i,r,l,u=>l(u)]}class Eut extends Sr{constructor(t){super(),wr(this,t,Iut,Cut,gi,{})}}function Mut(s){let t,e,n,i,r,o,a,l,c;return r=new Yct({}),l=new Eut({}),{c(){t=qt("main"),e=qt("div"),n=qt("div"),i=he(),hr(r.$$.fragment),o=he(),a=qt("div"),hr(l.$$.fragment),vt(n,"id","debug-element"),vt(n,"class","fixed top-0 left-0 p-2 pointer-events-none"),vt(e,"id","canvas-pane"),vt(e,"class","svelte-k4hl9j"),vt(a,"id","menu-pane"),vt(a,"class","overflow-y-scroll svelte-k4hl9j"),vt(t,"class","svelte-k4hl9j")},m(u,h){Kt(u,t,h),Ot(t,e),Ot(e,n),Ot(e,i),Fi(r,e,null),Ot(t,o),Ot(t,a),Fi(l,a,null),c=!0},p:an,i(u){c||(Bs(r.$$.fragment,u),Bs(l.$$.fragment,u),c=!0)},o(u){di(r.$$.fragment,u),di(l.$$.fragment,u),c=!1},d(u){u&&Ht(t),Li(r),Li(l)}}}class Aut extends Sr{constructor(t){super(),wr(this,t,null,Mut,gi,{})}}new Aut({target:document.getElementById("app")});
