var nD=Object.defineProperty;var sD=(s,t,e)=>t in s?nD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var Kt=(s,t,e)=>(sD(s,typeof t!="symbol"?t+"":t,e),e);function iD(s,t){for(var e=0;e<t.length;e++){const n=t[e];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in s)){const r=Object.getOwnPropertyDescriptor(n,i);r&&Object.defineProperty(s,i,r.get?r:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();function qe(){}const rD=s=>s;function Qi(s,t){for(const e in t)s[e]=t[e];return s}function JT(s){return s()}function g1(){return Object.create(null)}function ni(s){s.forEach(JT)}function Cr(s){return typeof s=="function"}function Zn(s,t){return s!=s?t==t:s!==t||s&&typeof s=="object"||typeof s=="function"}function oD(s){return Object.keys(s).length===0}function hm(s,t,e,n){if(s){const i=QT(s,t,e,n);return s[0](i)}}function QT(s,t,e,n){return s[1]&&n?Qi(e.ctx.slice(),s[1](n(t))):e.ctx}function dm(s,t,e,n){if(s[2]&&n){const i=s[2](n(e));if(t.dirty===void 0)return i;if(typeof i=="object"){const r=[],o=Math.max(t.dirty.length,i.length);for(let a=0;a<o;a+=1)r[a]=t.dirty[a]|i[a];return r}return t.dirty|i}return t.dirty}function fm(s,t,e,n,i,r){if(i){const o=QT(t,e,n,r);s.p(o,i)}}function pm(s){if(s.ctx.length>32){const t=[],e=s.ctx.length/32;for(let n=0;n<e;n++)t[n]=-1;return t}return-1}function _c(s){const t={};for(const e in s)e[0]!=="$"&&(t[e]=s[e]);return t}function Sc(s,t){const e={};t=new Set(t);for(const n in s)!t.has(n)&&n[0]!=="$"&&(e[n]=s[n]);return e}function t2(s){return s&&Cr(s.destroy)?s.destroy:qe}const e2=typeof window<"u";let aD=e2?()=>window.performance.now():()=>Date.now(),Wb=e2?s=>requestAnimationFrame(s):qe;const dc=new Set;function n2(s){dc.forEach(t=>{t.c(s)||(dc.delete(t),t.f())}),dc.size!==0&&Wb(n2)}function lD(s){let t;return dc.size===0&&Wb(n2),{promise:new Promise(e=>{dc.add(t={c:s,f:e})}),abort(){dc.delete(t)}}}function wt(s,t){s.appendChild(t)}function s2(s){if(!s)return document;const t=s.getRootNode?s.getRootNode():s.ownerDocument;return t&&t.host?t:s.ownerDocument}function cD(s){const t=Mt("style");return uD(s2(s),t),t.sheet}function uD(s,t){return wt(s.head||s,t),t.sheet}function Tt(s,t,e){s.insertBefore(t,e||null)}function Ct(s){s.parentNode.removeChild(s)}function i2(s,t){for(let e=0;e<s.length;e+=1)s[e]&&s[e].d(t)}function Mt(s){return document.createElement(s)}function he(s){return document.createTextNode(s)}function qt(){return he(" ")}function Or(){return he("")}function pe(s,t,e,n){return s.addEventListener(t,e,n),()=>s.removeEventListener(t,e,n)}function Q(s,t,e){e==null?s.removeAttribute(t):s.getAttribute(t)!==e&&s.setAttribute(t,e)}function vp(s,t){const e=Object.getOwnPropertyDescriptors(s.__proto__);for(const n in t)t[n]==null?s.removeAttribute(n):n==="style"?s.style.cssText=t[n]:n==="__value"?s.value=s[n]=t[n]:e[n]&&e[n].set?s[n]=t[n]:Q(s,n,t[n])}function wp(s,t){Object.keys(t).forEach(e=>{hD(s,e,t[e])})}function hD(s,t,e){t in s?s[t]=typeof s[t]=="boolean"&&e===""?!0:e:Q(s,t,e)}function Ss(s){return s===""?null:+s}function dD(s){return Array.from(s.childNodes)}function mn(s,t){t=""+t,s.wholeText!==t&&(s.data=t)}function an(s,t){s.value=t==null?"":t}function Ds(s,t,e,n){e===null?s.style.removeProperty(t):s.style.setProperty(t,e,n?"important":"")}function fD(s,t,{bubbles:e=!1,cancelable:n=!1}={}){const i=document.createEvent("CustomEvent");return i.initCustomEvent(s,e,n,t),i}function x1(s,t){return new s(t)}const _p=new Map;let Sp=0;function pD(s){let t=5381,e=s.length;for(;e--;)t=(t<<5)-t^s.charCodeAt(e);return t>>>0}function mD(s,t){const e={stylesheet:cD(t),rules:{}};return _p.set(s,e),e}function b1(s,t,e,n,i,r,o,a=0){const l=16.666/n;let c=`{
`;for(let m=0;m<=1;m+=l){const x=t+(e-t)*r(m);c+=m*100+`%{${o(x,1-x)}}
`}const u=c+`100% {${o(e,1-e)}}
}`,h=`__svelte_${pD(u)}_${a}`,d=s2(s),{stylesheet:f,rules:p}=_p.get(d)||mD(d,s);p[h]||(p[h]=!0,f.insertRule(`@keyframes ${h} ${u}`,f.cssRules.length));const g=s.style.animation||"";return s.style.animation=`${g?`${g}, `:""}${h} ${n}ms linear ${i}ms 1 both`,Sp+=1,h}function gD(s,t){const e=(s.style.animation||"").split(", "),n=e.filter(t?r=>r.indexOf(t)<0:r=>r.indexOf("__svelte")===-1),i=e.length-n.length;i&&(s.style.animation=n.join(", "),Sp-=i,Sp||xD())}function xD(){Wb(()=>{Sp||(_p.forEach(s=>{const{ownerNode:t}=s.stylesheet;t&&Ct(t)}),_p.clear())})}let th;function Hu(s){th=s}function Gb(){if(!th)throw new Error("Function called outside component initialization");return th}function r2(s){Gb().$$.on_mount.push(s)}function y1(s,t){return Gb().$$.context.set(s,t),t}function ns(s,t){const e=s.$$.callbacks[t.type];e&&e.slice().forEach(n=>n.call(this,t))}const $u=[],Cc=[],ap=[],v1=[],bD=Promise.resolve();let Nx=!1;function yD(){Nx||(Nx=!0,bD.then(o2))}function eh(s){ap.push(s)}const d0=new Set;let nf=0;function o2(){const s=th;do{for(;nf<$u.length;){const t=$u[nf];nf++,Hu(t),vD(t.$$)}for(Hu(null),$u.length=0,nf=0;Cc.length;)Cc.pop()();for(let t=0;t<ap.length;t+=1){const e=ap[t];d0.has(e)||(d0.add(e),e())}ap.length=0}while($u.length);for(;v1.length;)v1.pop()();Nx=!1,d0.clear(),Hu(s)}function vD(s){if(s.fragment!==null){s.update(),ni(s.before_update);const t=s.dirty;s.dirty=[-1],s.fragment&&s.fragment.p(s.ctx,t),s.after_update.forEach(eh)}}let bu;function wD(){return bu||(bu=Promise.resolve(),bu.then(()=>{bu=null})),bu}function f0(s,t,e){s.dispatchEvent(fD(`${t?"intro":"outro"}${e}`))}const lp=new Set;let so;function ho(){so={r:0,c:[],p:so}}function fo(){so.r||ni(so.c),so=so.p}function be(s,t){s&&s.i&&(lp.delete(s),s.i(t))}function ke(s,t,e,n){if(s&&s.o){if(lp.has(s))return;lp.add(s),so.c.push(()=>{lp.delete(s),n&&(e&&s.d(1),n())}),s.o(t)}else n&&n()}const _D={duration:0};function w1(s,t,e,n){let i=t(s,e),r=n?0:1,o=null,a=null,l=null;function c(){l&&gD(s,l)}function u(d,f){const p=d.b-r;return f*=Math.abs(p),{a:r,b:d.b,d:p,duration:f,start:d.start,end:d.start+f,group:d.group}}function h(d){const{delay:f=0,duration:p=300,easing:g=rD,tick:m=qe,css:x}=i||_D,b={start:aD()+f,b:d};d||(b.group=so,so.r+=1),o||a?a=b:(x&&(c(),l=b1(s,r,d,p,f,g,x)),d&&m(0,1),o=u(b,p),eh(()=>f0(s,d,"start")),lD(v=>{if(a&&v>a.start&&(o=u(a,p),a=null,f0(s,o.b,"start"),x&&(c(),l=b1(s,r,o.b,o.duration,0,g,i.css))),o){if(v>=o.end)m(r=o.b,1-r),f0(s,o.b,"end"),a||(o.b?c():--o.group.r||ni(o.group.c)),o=null;else if(v>=o.start){const y=v-o.start;r=o.a+o.d*g(y/o.duration),m(r,1-r)}}return!!(o||a)}))}return{run(d){Cr(i)?wD().then(()=>{i=i(),h(d)}):h(d)},end(){c(),o=a=null}}}function mm(s,t){const e={},n={},i={$$scope:1};let r=s.length;for(;r--;){const o=s[r],a=t[r];if(a){for(const l in o)l in a||(n[l]=1);for(const l in a)i[l]||(e[l]=a[l],i[l]=1);s[r]=a}else for(const l in o)i[l]=1}for(const o in n)o in e||(e[o]=void 0);return e}function a2(s){return typeof s=="object"&&s!==null?s:{}}function ms(s){s&&s.c()}function is(s,t,e,n){const{fragment:i,after_update:r}=s.$$;i&&i.m(t,e),n||eh(()=>{const o=s.$$.on_mount.map(JT).filter(Cr);s.$$.on_destroy?s.$$.on_destroy.push(...o):ni(o),s.$$.on_mount=[]}),r.forEach(eh)}function rs(s,t){const e=s.$$;e.fragment!==null&&(ni(e.on_destroy),e.fragment&&e.fragment.d(t),e.on_destroy=e.fragment=null,e.ctx=[])}function SD(s,t){s.$$.dirty[0]===-1&&($u.push(s),yD(),s.$$.dirty.fill(0)),s.$$.dirty[t/31|0]|=1<<t%31}function si(s,t,e,n,i,r,o,a=[-1]){const l=th;Hu(s);const c=s.$$={fragment:null,ctx:[],props:r,update:qe,not_equal:i,bound:g1(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(l?l.$$.context:[])),callbacks:g1(),dirty:a,skip_bound:!1,root:t.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=e?e(s,t.props||{},(h,d,...f)=>{const p=f.length?f[0]:d;return c.ctx&&i(c.ctx[h],c.ctx[h]=p)&&(!c.skip_bound&&c.bound[h]&&c.bound[h](p),u&&SD(s,h)),d}):[],c.update(),u=!0,ni(c.before_update),c.fragment=n?n(c.ctx):!1,t.target){if(t.hydrate){const h=dD(t.target);c.fragment&&c.fragment.l(h),h.forEach(Ct)}else c.fragment&&c.fragment.c();t.intro&&be(s.$$.fragment),is(s,t.target,t.anchor,t.customElement),o2()}Hu(l)}class ii{$destroy(){rs(this,1),this.$destroy=qe}$on(t,e){if(!Cr(e))return qe;const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const i=n.indexOf(e);i!==-1&&n.splice(i,1)}}$set(t){this.$$set&&!oD(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Hb="146",kl={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Al={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CD=0,_1=1,TD=2,l2=1,c2=2,Lu=3,Uo=0,Js=1,Ls=2,Ro=0,fc=1,S1=2,C1=3,T1=4,ID=5,tc=100,ED=101,MD=102,I1=103,E1=104,kD=200,AD=201,ND=202,RD=203,u2=204,h2=205,DD=206,$D=207,LD=208,FD=209,PD=210,OD=0,zD=1,BD=2,Rx=3,UD=4,VD=5,WD=6,GD=7,gm=0,HD=1,qD=2,ro=0,jD=1,XD=2,KD=3,YD=4,ZD=5,d2=300,Tc=301,Ic=302,Dx=303,$x=304,xm=306,Lx=1e3,qi=1001,Fx=1002,Ns=1003,M1=1004,k1=1005,mi=1006,JD=1007,bm=1008,Ba=1009,QD=1010,t$=1011,f2=1012,e$=1013,Ta=1014,Ia=1015,nh=1016,n$=1017,s$=1018,pc=1020,i$=1021,r$=1022,ji=1023,o$=1024,a$=1025,Da=1026,Ec=1027,l$=1028,c$=1029,u$=1030,h$=1031,d$=1033,p0=33776,m0=33777,g0=33778,x0=33779,A1=35840,N1=35841,R1=35842,D1=35843,f$=36196,$1=37492,L1=37496,F1=37808,P1=37809,O1=37810,z1=37811,B1=37812,U1=37813,V1=37814,W1=37815,G1=37816,H1=37817,q1=37818,j1=37819,X1=37820,K1=37821,Y1=36492,Ua=3e3,pn=3001,p$=3200,m$=3201,ym=0,g$=1,Qr="srgb",Ea="srgb-linear",b0=7680,x$=519,Z1=35044,J1="300 es",Px=1035;class cl{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const ds=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],y0=Math.PI/180,Q1=180/Math.PI;function Zc(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ds[s&255]+ds[s>>8&255]+ds[s>>16&255]+ds[s>>24&255]+"-"+ds[t&255]+ds[t>>8&255]+"-"+ds[t>>16&15|64]+ds[t>>24&255]+"-"+ds[e&63|128]+ds[e>>8&255]+"-"+ds[e>>16&255]+ds[e>>24&255]+ds[n&255]+ds[n>>8&255]+ds[n>>16&255]+ds[n>>24&255]).toLowerCase()}function ss(s,t,e){return Math.max(t,Math.min(e,s))}function b$(s,t){return(s%t+t)%t}function v0(s,t,e){return(1-e)*s+e*t}function t_(s){return(s&s-1)===0&&s!==0}function Ox(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function sf(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function js(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class Nt{constructor(t=0,e=0){Nt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class yi{constructor(){yi.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=r,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],x=i[6],b=i[1],v=i[4],y=i[7],w=i[2],S=i[5],C=i[8];return r[0]=o*g+a*b+l*w,r[3]=o*m+a*v+l*S,r[6]=o*x+a*y+l*C,r[1]=c*g+u*b+h*w,r[4]=c*m+u*v+h*S,r[7]=c*x+u*y+h*C,r[2]=d*g+f*b+p*w,r[5]=d*m+f*v+p*S,r[8]=d*x+f*y+p*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*r*u+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*r,f=c*r-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return t[0]=h*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=d*g,t[4]=(u*e-i*l)*g,t[5]=(i*r-a*e)*g,t[6]=f*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=e*r+n*l,i[3]=e*o+n*c,i[6]=e*a+n*u,i[1]=-n*r+e*l,i[4]=-n*o+e*c,i[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function p2(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Cp(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function $a(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function cp(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const w0={[Qr]:{[Ea]:$a},[Ea]:{[Qr]:cp}},Pi={legacyMode:!0,get workingColorSpace(){return Ea},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.legacyMode||t===e||!t||!e)return s;if(w0[t]&&w0[t][e]!==void 0){const n=w0[t][e];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}},m2={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},$n={r:0,g:0,b:0},Oi={h:0,s:0,l:0},rf={h:0,s:0,l:0};function _0(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function of(s,t){return t.r=s.r,t.g=s.g,t.b=s.b,t}class Ve{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Qr){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Pi.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Ea){return this.r=t,this.g=e,this.b=n,Pi.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Ea){if(t=b$(t,1),e=ss(e,0,1),n=ss(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=_0(o,r,t+1/3),this.g=_0(o,r,t),this.b=_0(o,r,t-1/3)}return Pi.toWorkingColorSpace(this,i),this}setStyle(t,e=Qr){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Pi.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Pi.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,u,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Pi.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Pi.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=Qr){const n=m2[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=$a(t.r),this.g=$a(t.g),this.b=$a(t.b),this}copyLinearToSRGB(t){return this.r=cp(t.r),this.g=cp(t.g),this.b=cp(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Qr){return Pi.fromWorkingColorSpace(of(this,$n),t),ss($n.r*255,0,255)<<16^ss($n.g*255,0,255)<<8^ss($n.b*255,0,255)<<0}getHexString(t=Qr){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ea){Pi.fromWorkingColorSpace(of(this,$n),e);const n=$n.r,i=$n.g,r=$n.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=Ea){return Pi.fromWorkingColorSpace(of(this,$n),e),t.r=$n.r,t.g=$n.g,t.b=$n.b,t}getStyle(t=Qr){return Pi.fromWorkingColorSpace(of(this,$n),t),t!==Qr?`color(${t} ${$n.r} ${$n.g} ${$n.b})`:`rgb(${$n.r*255|0},${$n.g*255|0},${$n.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(Oi),Oi.h+=t,Oi.s+=e,Oi.l+=n,this.setHSL(Oi.h,Oi.s,Oi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Oi),t.getHSL(rf);const n=v0(Oi.h,rf.h,e),i=v0(Oi.s,rf.s,e),r=v0(Oi.l,rf.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ve.NAMES=m2;let Nl;class g2{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Nl===void 0&&(Nl=Cp("canvas")),Nl.width=t.width,Nl.height=t.height;const n=Nl.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Nl}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Cp("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=$a(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor($a(e[n]/255)*255):e[n]=$a(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class x2{constructor(t=null){this.isSource=!0,this.uuid=Zc(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(S0(i[o].image)):r.push(S0(i[o]))}else r=S0(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function S0(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?g2.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let y$=0;class tr extends cl{constructor(t=tr.DEFAULT_IMAGE,e=tr.DEFAULT_MAPPING,n=qi,i=qi,r=mi,o=bm,a=ji,l=Ba,c=1,u=Ua){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:y$++}),this.uuid=Zc(),this.name="",this.source=new x2(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Nt(0,0),this.repeat=new Nt(1,1),this.center=new Nt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==d2)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Lx:t.x=t.x-Math.floor(t.x);break;case qi:t.x=t.x<0?0:1;break;case Fx:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Lx:t.y=t.y-Math.floor(t.y);break;case qi:t.y=t.y<0?0:1;break;case Fx:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}tr.DEFAULT_IMAGE=null;tr.DEFAULT_MAPPING=d2;class Xn{constructor(t=0,e=0,n=0,i=1){Xn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+x-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(c+1)/2,y=(f+1)/2,w=(x+1)/2,S=(u+d)/4,C=(h+g)/4,_=(p+m)/4;return v>y&&v>w?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=S/n,r=C/n):y>w?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=S/i,r=_/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=C/r,i=_/r),this.set(n,i,r,e),this}let b=Math.sqrt((m-p)*(m-p)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(m-p)/b,this.y=(h-g)/b,this.z=(d-u)/b,this.w=Math.acos((c+f+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Va extends cl{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Xn(0,0,t,e),this.scissorTest=!1,this.viewport=new Xn(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new tr(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:mi,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new x2(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class b2 extends tr{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ns,this.minFilter=Ns,this.wrapR=qi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class v$ extends tr{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ns,this.minFilter=Ns,this.wrapR=qi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Wa{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],g=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=g;return}if(h!==g||l!==d||c!==f||u!==p){let m=1-a;const x=l*d+c*f+u*p+h*g,b=x>=0?1:-1,v=1-x*x;if(v>Number.EPSILON){const w=Math.sqrt(v),S=Math.atan2(w,x*b);m=Math.sin(m*S)/w,a=Math.sin(a*S)/w}const y=a*b;if(l=l*m+d*y,c=c*m+f*y,u=u*m+p*y,h=h*m+g*y,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ss(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-n*c,this._z=r*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class G{constructor(t=0,e=0,n=0){G.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(e_.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(e_.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-r*i,h=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+u*-a-h*-o,this.y=u*l+d*-o+h*-r-c*-a,this.z=h*l+d*-a+c*-o-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return C0.copy(this).projectOnVector(t),this.sub(C0)}reflect(t){return this.sub(C0.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ss(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const C0=new G,e_=new Wa;class rr{constructor(t=new G(1/0,1/0,1/0),e=new G(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],h=t[l+1],d=t[l+2];u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),h=t.getY(l),d=t.getZ(l);u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ua.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)ua.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(ua)}else n.boundingBox===null&&n.computeBoundingBox(),T0.copy(n.boundingBox),T0.applyMatrix4(t.matrixWorld),this.union(T0);const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ua),ua.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(yu),af.subVectors(this.max,yu),Rl.subVectors(t.a,yu),Dl.subVectors(t.b,yu),$l.subVectors(t.c,yu),yo.subVectors(Dl,Rl),vo.subVectors($l,Dl),ha.subVectors(Rl,$l);let e=[0,-yo.z,yo.y,0,-vo.z,vo.y,0,-ha.z,ha.y,yo.z,0,-yo.x,vo.z,0,-vo.x,ha.z,0,-ha.x,-yo.y,yo.x,0,-vo.y,vo.x,0,-ha.y,ha.x,0];return!I0(e,Rl,Dl,$l,af)||(e=[1,0,0,0,1,0,0,0,1],!I0(e,Rl,Dl,$l,af))?!1:(lf.crossVectors(yo,vo),e=[lf.x,lf.y,lf.z],I0(e,Rl,Dl,$l,af))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return ua.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(ua).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ur[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ur[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ur[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ur[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ur[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ur[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ur[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ur[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ur),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Ur=[new G,new G,new G,new G,new G,new G,new G,new G],ua=new G,T0=new rr,Rl=new G,Dl=new G,$l=new G,yo=new G,vo=new G,ha=new G,yu=new G,af=new G,lf=new G,da=new G;function I0(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){da.fromArray(s,r);const a=i.x*Math.abs(da.x)+i.y*Math.abs(da.y)+i.z*Math.abs(da.z),l=t.dot(da),c=e.dot(da),u=n.dot(da);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const w$=new rr,vu=new G,E0=new G;class Ih{constructor(t=new G,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):w$.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;vu.subVectors(t,this.center);const e=vu.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(vu,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(E0.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(vu.copy(t.center).add(E0)),this.expandByPoint(vu.copy(t.center).sub(E0))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Vr=new G,M0=new G,cf=new G,wo=new G,k0=new G,uf=new G,A0=new G;class vm{constructor(t=new G,e=new G(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Vr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Vr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Vr.copy(this.direction).multiplyScalar(e).add(this.origin),Vr.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){M0.copy(t).add(e).multiplyScalar(.5),cf.copy(e).sub(t).normalize(),wo.copy(this.origin).sub(M0);const r=t.distanceTo(e)*.5,o=-this.direction.dot(cf),a=wo.dot(this.direction),l=-wo.dot(cf),c=wo.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=r*u,h>=0)if(d>=-p)if(d<=p){const g=1/u;h*=g,d*=g,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(cf).multiplyScalar(d).add(M0),f}intersectSphere(t,e){Vr.subVectors(t.center,this.origin);const n=Vr.dot(this.direction),i=Vr.dot(Vr)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),u>=0?(r=(t.min.y-d.y)*u,o=(t.max.y-d.y)*u):(r=(t.max.y-d.y)*u,o=(t.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-d.z)*h,l=(t.max.z-d.z)*h):(a=(t.max.z-d.z)*h,l=(t.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Vr)!==null}intersectTriangle(t,e,n,i,r){k0.subVectors(e,t),uf.subVectors(n,t),A0.crossVectors(k0,uf);let o=this.direction.dot(A0),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;wo.subVectors(this.origin,t);const l=a*this.direction.dot(uf.crossVectors(wo,uf));if(l<0)return null;const c=a*this.direction.dot(k0.cross(wo));if(c<0||l+c>o)return null;const u=-a*wo.dot(A0);return u<0?null:this.at(u/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Je{constructor(){Je.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m){const x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=o,x[9]=a,x[13]=l,x[2]=c,x[6]=u,x[10]=h,x[14]=d,x[3]=f,x[7]=p,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Je().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ll.setFromMatrixColumn(t,0).length(),r=1/Ll.setFromMatrixColumn(t,1).length(),o=1/Ll.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-g*c,e[9]=-a*l,e[2]=g-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d+g*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=g+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d-g*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=g-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+g,e[1]=l*h,e[5]=g*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=g-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-g*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+g,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=g*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(_$,t,S$)}lookAt(t,e,n){const i=this.elements;return Xs.subVectors(t,e),Xs.lengthSq()===0&&(Xs.z=1),Xs.normalize(),_o.crossVectors(n,Xs),_o.lengthSq()===0&&(Math.abs(n.z)===1?Xs.x+=1e-4:Xs.z+=1e-4,Xs.normalize(),_o.crossVectors(n,Xs)),_o.normalize(),hf.crossVectors(Xs,_o),i[0]=_o.x,i[4]=hf.x,i[8]=Xs.x,i[1]=_o.y,i[5]=hf.y,i[9]=Xs.y,i[2]=_o.z,i[6]=hf.z,i[10]=Xs.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],x=n[14],b=n[3],v=n[7],y=n[11],w=n[15],S=i[0],C=i[4],_=i[8],T=i[12],I=i[1],A=i[5],D=i[9],k=i[13],M=i[2],E=i[6],N=i[10],O=i[14],L=i[3],$=i[7],W=i[11],q=i[15];return r[0]=o*S+a*I+l*M+c*L,r[4]=o*C+a*A+l*E+c*$,r[8]=o*_+a*D+l*N+c*W,r[12]=o*T+a*k+l*O+c*q,r[1]=u*S+h*I+d*M+f*L,r[5]=u*C+h*A+d*E+f*$,r[9]=u*_+h*D+d*N+f*W,r[13]=u*T+h*k+d*O+f*q,r[2]=p*S+g*I+m*M+x*L,r[6]=p*C+g*A+m*E+x*$,r[10]=p*_+g*D+m*N+x*W,r[14]=p*T+g*k+m*O+x*q,r[3]=b*S+v*I+y*M+w*L,r[7]=b*C+v*A+y*E+w*$,r[11]=b*_+v*D+y*N+w*W,r[15]=b*T+v*k+y*O+w*q,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],g=t[7],m=t[11],x=t[15];return p*(+r*l*h-i*c*h-r*a*d+n*c*d+i*a*f-n*l*f)+g*(+e*l*f-e*c*d+r*o*d-i*o*f+i*c*u-r*l*u)+m*(+e*c*h-e*a*f-r*o*h+n*o*f+r*a*u-n*c*u)+x*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],g=t[13],m=t[14],x=t[15],b=h*m*c-g*d*c+g*l*f-a*m*f-h*l*x+a*d*x,v=p*d*c-u*m*c-p*l*f+o*m*f+u*l*x-o*d*x,y=u*g*c-p*h*c+p*a*f-o*g*f-u*a*x+o*h*x,w=p*h*l-u*g*l-p*a*d+o*g*d+u*a*m-o*h*m,S=e*b+n*v+i*y+r*w;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/S;return t[0]=b*C,t[1]=(g*d*r-h*m*r-g*i*f+n*m*f+h*i*x-n*d*x)*C,t[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*x+n*l*x)*C,t[3]=(h*l*r-a*d*r-h*i*c+n*d*c+a*i*f-n*l*f)*C,t[4]=v*C,t[5]=(u*m*r-p*d*r+p*i*f-e*m*f-u*i*x+e*d*x)*C,t[6]=(p*l*r-o*m*r-p*i*c+e*m*c+o*i*x-e*l*x)*C,t[7]=(o*d*r-u*l*r+u*i*c-e*d*c-o*i*f+e*l*f)*C,t[8]=y*C,t[9]=(p*h*r-u*g*r-p*n*f+e*g*f+u*n*x-e*h*x)*C,t[10]=(o*g*r-p*a*r+p*n*c-e*g*c-o*n*x+e*a*x)*C,t[11]=(u*a*r-o*h*r-u*n*c+e*h*c+o*n*f-e*a*f)*C,t[12]=w*C,t[13]=(u*g*i-p*h*i+p*n*d-e*g*d-u*n*m+e*h*m)*C,t[14]=(p*a*i-o*g*i-p*n*l+e*g*l+o*n*m-e*a*m)*C,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*C,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,u=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,u=o+o,h=a+a,d=r*c,f=r*u,p=r*h,g=o*u,m=o*h,x=a*h,b=l*c,v=l*u,y=l*h,w=n.x,S=n.y,C=n.z;return i[0]=(1-(g+x))*w,i[1]=(f+y)*w,i[2]=(p-v)*w,i[3]=0,i[4]=(f-y)*S,i[5]=(1-(d+x))*S,i[6]=(m+b)*S,i[7]=0,i[8]=(p+v)*C,i[9]=(m-b)*C,i[10]=(1-(d+g))*C,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Ll.set(i[0],i[1],i[2]).length();const o=Ll.set(i[4],i[5],i[6]).length(),a=Ll.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],zi.copy(this);const c=1/r,u=1/o,h=1/a;return zi.elements[0]*=c,zi.elements[1]*=c,zi.elements[2]*=c,zi.elements[4]*=u,zi.elements[5]*=u,zi.elements[6]*=u,zi.elements[8]*=h,zi.elements[9]*=h,zi.elements[10]*=h,e.setFromRotationMatrix(zi),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-i),u=(e+t)/(e-t),h=(n+i)/(n-i),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,o){const a=this.elements,l=1/(e-t),c=1/(n-i),u=1/(o-r),h=(e+t)*l,d=(n+i)*c,f=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ll=new G,zi=new Je,_$=new G(0,0,0),S$=new G(1,1,1),_o=new G,hf=new G,Xs=new G,n_=new Je,s_=new Wa;class Eh{constructor(t=0,e=0,n=0,i=Eh.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(ss(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ss(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ss(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-ss(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ss(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ss(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return n_.makeRotationFromQuaternion(t),this.setFromRotationMatrix(n_,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return s_.setFromEuler(this),this.setFromQuaternion(s_,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Eh.DefaultOrder="XYZ";Eh.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class qb{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let C$=0;const i_=new G,Fl=new Wa,Wr=new Je,df=new G,wu=new G,T$=new G,I$=new Wa,r_=new G(1,0,0),o_=new G(0,1,0),a_=new G(0,0,1),E$={type:"added"},l_={type:"removed"};class Kn extends cl{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:C$++}),this.uuid=Zc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Kn.DefaultUp.clone();const t=new G,e=new Eh,n=new Wa,i=new G(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Je},normalMatrix:{value:new yi}}),this.matrix=new Je,this.matrixWorld=new Je,this.matrixAutoUpdate=Kn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Kn.DefaultMatrixWorldAutoUpdate,this.layers=new qb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Fl.setFromAxisAngle(t,e),this.quaternion.multiply(Fl),this}rotateOnWorldAxis(t,e){return Fl.setFromAxisAngle(t,e),this.quaternion.premultiply(Fl),this}rotateX(t){return this.rotateOnAxis(r_,t)}rotateY(t){return this.rotateOnAxis(o_,t)}rotateZ(t){return this.rotateOnAxis(a_,t)}translateOnAxis(t,e){return i_.copy(t).applyQuaternion(this.quaternion),this.position.add(i_.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(r_,t)}translateY(t){return this.translateOnAxis(o_,t)}translateZ(t){return this.translateOnAxis(a_,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Wr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?df.copy(t):df.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),wu.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wr.lookAt(wu,df,this.up):Wr.lookAt(df,wu,this.up),this.quaternion.setFromRotationMatrix(Wr),i&&(Wr.extractRotation(i.matrixWorld),Fl.setFromRotationMatrix(Wr),this.quaternion.premultiply(Fl.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(E$)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(l_)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(l_)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Wr.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Wr.multiply(t.parent.matrixWorld)),t.applyMatrix4(Wr),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wu,t,T$),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wu,I$,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(t.shapes,h)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Kn.DefaultUp=new G(0,1,0);Kn.DefaultMatrixAutoUpdate=!0;Kn.DefaultMatrixWorldAutoUpdate=!0;const Bi=new G,Gr=new G,N0=new G,Hr=new G,Pl=new G,Ol=new G,c_=new G,R0=new G,D0=new G,$0=new G;class xi{constructor(t=new G,e=new G,n=new G){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Bi.subVectors(t,e),i.cross(Bi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Bi.subVectors(i,e),Gr.subVectors(n,e),N0.subVectors(t,e);const o=Bi.dot(Bi),a=Bi.dot(Gr),l=Bi.dot(N0),c=Gr.dot(Gr),u=Gr.dot(N0),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Hr),Hr.x>=0&&Hr.y>=0&&Hr.x+Hr.y<=1}static getUV(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,Hr),l.set(0,0),l.addScaledVector(r,Hr.x),l.addScaledVector(o,Hr.y),l.addScaledVector(a,Hr.z),l}static isFrontFacing(t,e,n,i){return Bi.subVectors(n,e),Gr.subVectors(t,e),Bi.cross(Gr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Bi.subVectors(this.c,this.b),Gr.subVectors(this.a,this.b),Bi.cross(Gr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return xi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return xi.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return xi.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return xi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return xi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;Pl.subVectors(i,n),Ol.subVectors(r,n),R0.subVectors(t,n);const l=Pl.dot(R0),c=Ol.dot(R0);if(l<=0&&c<=0)return e.copy(n);D0.subVectors(t,i);const u=Pl.dot(D0),h=Ol.dot(D0);if(u>=0&&h<=u)return e.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(Pl,o);$0.subVectors(t,r);const f=Pl.dot($0),p=Ol.dot($0);if(p>=0&&f<=p)return e.copy(r);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),e.copy(n).addScaledVector(Ol,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return c_.subVectors(r,i),a=(h-u)/(h-u+(f-p)),e.copy(i).addScaledVector(c_,a);const x=1/(m+g+d);return o=g*x,a=d*x,e.copy(n).addScaledVector(Pl,o).addScaledVector(Ol,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let M$=0;class Xo extends cl{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:M$++}),this.uuid=Zc(),this.name="",this.type="Material",this.blending=fc,this.side=Uo,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=u2,this.blendDst=h2,this.blendEquation=tc,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Rx,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=x$,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=b0,this.stencilZFail=b0,this.stencilZPass=b0,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==fc&&(n.blending=this.blending),this.side!==Uo&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ul extends Xo{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=gm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const In=new G,ff=new Nt;class Qs{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Z1,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)ff.fromBufferAttribute(this,e),ff.applyMatrix3(t),this.setXY(e,ff.x,ff.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.applyMatrix3(t),this.setXYZ(e,In.x,In.y,In.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.applyMatrix4(t),this.setXYZ(e,In.x,In.y,In.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.applyNormalMatrix(t),this.setXYZ(e,In.x,In.y,In.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)In.fromBufferAttribute(this,e),In.transformDirection(t),this.setXYZ(e,In.x,In.y,In.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=sf(e,this.array)),e}setX(t,e){return this.normalized&&(e=js(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=sf(e,this.array)),e}setY(t,e){return this.normalized&&(e=js(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=sf(e,this.array)),e}setZ(t,e){return this.normalized&&(e=js(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=sf(e,this.array)),e}setW(t,e){return this.normalized&&(e=js(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=js(e,this.array),n=js(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=js(e,this.array),n=js(n,this.array),i=js(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=js(e,this.array),n=js(n,this.array),i=js(i,this.array),r=js(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Z1&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class y2 extends Qs{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class v2 extends Qs{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class dn extends Qs{constructor(t,e,n){super(new Float32Array(t),e,n)}}let k$=0;const ui=new Je,L0=new Kn,zl=new G,Ks=new rr,_u=new rr,Hn=new G;class cs extends cl{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:k$++}),this.uuid=Zc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(p2(t)?v2:y2)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new yi().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return ui.makeRotationFromQuaternion(t),this.applyMatrix4(ui),this}rotateX(t){return ui.makeRotationX(t),this.applyMatrix4(ui),this}rotateY(t){return ui.makeRotationY(t),this.applyMatrix4(ui),this}rotateZ(t){return ui.makeRotationZ(t),this.applyMatrix4(ui),this}translate(t,e,n){return ui.makeTranslation(t,e,n),this.applyMatrix4(ui),this}scale(t,e,n){return ui.makeScale(t,e,n),this.applyMatrix4(ui),this}lookAt(t){return L0.lookAt(t),L0.updateMatrix(),this.applyMatrix4(L0.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(zl).negate(),this.translate(zl.x,zl.y,zl.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new dn(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new rr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new G(-1/0,-1/0,-1/0),new G(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Ks.setFromBufferAttribute(r),this.morphTargetsRelative?(Hn.addVectors(this.boundingBox.min,Ks.min),this.boundingBox.expandByPoint(Hn),Hn.addVectors(this.boundingBox.max,Ks.max),this.boundingBox.expandByPoint(Hn)):(this.boundingBox.expandByPoint(Ks.min),this.boundingBox.expandByPoint(Ks.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ih);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new G,1/0);return}if(t){const n=this.boundingSphere.center;if(Ks.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];_u.setFromBufferAttribute(a),this.morphTargetsRelative?(Hn.addVectors(Ks.min,_u.min),Ks.expandByPoint(Hn),Hn.addVectors(Ks.max,_u.max),Ks.expandByPoint(Hn)):(Ks.expandByPoint(_u.min),Ks.expandByPoint(_u.max))}Ks.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Hn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Hn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Hn.fromBufferAttribute(a,c),l&&(zl.fromBufferAttribute(t,c),Hn.add(zl)),i=Math.max(i,n.distanceToSquared(Hn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Qs(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let I=0;I<a;I++)c[I]=new G,u[I]=new G;const h=new G,d=new G,f=new G,p=new Nt,g=new Nt,m=new Nt,x=new G,b=new G;function v(I,A,D){h.fromArray(i,I*3),d.fromArray(i,A*3),f.fromArray(i,D*3),p.fromArray(o,I*2),g.fromArray(o,A*2),m.fromArray(o,D*2),d.sub(h),f.sub(h),g.sub(p),m.sub(p);const k=1/(g.x*m.y-m.x*g.y);!isFinite(k)||(x.copy(d).multiplyScalar(m.y).addScaledVector(f,-g.y).multiplyScalar(k),b.copy(f).multiplyScalar(g.x).addScaledVector(d,-m.x).multiplyScalar(k),c[I].add(x),c[A].add(x),c[D].add(x),u[I].add(b),u[A].add(b),u[D].add(b))}let y=this.groups;y.length===0&&(y=[{start:0,count:n.length}]);for(let I=0,A=y.length;I<A;++I){const D=y[I],k=D.start,M=D.count;for(let E=k,N=k+M;E<N;E+=3)v(n[E+0],n[E+1],n[E+2])}const w=new G,S=new G,C=new G,_=new G;function T(I){C.fromArray(r,I*3),_.copy(C);const A=c[I];w.copy(A),w.sub(C.multiplyScalar(C.dot(A))).normalize(),S.crossVectors(_,A);const k=S.dot(u[I])<0?-1:1;l[I*4]=w.x,l[I*4+1]=w.y,l[I*4+2]=w.z,l[I*4+3]=k}for(let I=0,A=y.length;I<A;++I){const D=y[I],k=D.start,M=D.count;for(let E=k,N=k+M;E<N;E+=3)T(n[E+0]),T(n[E+1]),T(n[E+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Qs(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new G,r=new G,o=new G,a=new G,l=new G,c=new G,u=new G,h=new G;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),g=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,g),o.fromBufferAttribute(e,m),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Hn.fromBufferAttribute(t,e),Hn.normalize(),t.setXYZ(e,Hn.x,Hn.y,Hn.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*u;for(let x=0;x<u;x++)d[p++]=c[f++]}return new Qs(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new cs,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(t.data))}u.length>0&&(i[l]=u,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const r=t.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const u_=new Je,Bl=new vm,F0=new Ih,So=new G,Co=new G,To=new G,P0=new G,O0=new G,z0=new G,pf=new G,mf=new G,gf=new G,xf=new Nt,bf=new Nt,yf=new Nt,B0=new G,vf=new G;class nn extends Kn{constructor(t=new cs,e=new ul){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),F0.copy(n.boundingSphere),F0.applyMatrix4(r),t.ray.intersectsSphere(F0)===!1)||(u_.copy(r).invert(),Bl.copy(t.ray).applyMatrix4(u_),n.boundingBox!==null&&Bl.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],b=i[x.materialIndex],v=Math.max(x.start,p.start),y=Math.min(a.count,Math.min(x.start+x.count,p.start+p.count));for(let w=v,S=y;w<S;w+=3){const C=a.getX(w),_=a.getX(w+1),T=a.getX(w+2);o=wf(this,b,t,Bl,l,c,u,h,d,C,_,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let x=g,b=m;x<b;x+=3){const v=a.getX(x),y=a.getX(x+1),w=a.getX(x+2);o=wf(this,i,t,Bl,l,c,u,h,d,v,y,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],b=i[x.materialIndex],v=Math.max(x.start,p.start),y=Math.min(l.count,Math.min(x.start+x.count,p.start+p.count));for(let w=v,S=y;w<S;w+=3){const C=w,_=w+1,T=w+2;o=wf(this,b,t,Bl,l,c,u,h,d,C,_,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let x=g,b=m;x<b;x+=3){const v=x,y=x+1,w=x+2;o=wf(this,i,t,Bl,l,c,u,h,d,v,y,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}}}function A$(s,t,e,n,i,r,o,a){let l;if(t.side===Js?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,t.side!==Ls,a),l===null)return null;vf.copy(a),vf.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(vf);return c<e.near||c>e.far?null:{distance:c,point:vf.clone(),object:s}}function wf(s,t,e,n,i,r,o,a,l,c,u,h){So.fromBufferAttribute(i,c),Co.fromBufferAttribute(i,u),To.fromBufferAttribute(i,h);const d=s.morphTargetInfluences;if(r&&d){pf.set(0,0,0),mf.set(0,0,0),gf.set(0,0,0);for(let p=0,g=r.length;p<g;p++){const m=d[p],x=r[p];m!==0&&(P0.fromBufferAttribute(x,c),O0.fromBufferAttribute(x,u),z0.fromBufferAttribute(x,h),o?(pf.addScaledVector(P0,m),mf.addScaledVector(O0,m),gf.addScaledVector(z0,m)):(pf.addScaledVector(P0.sub(So),m),mf.addScaledVector(O0.sub(Co),m),gf.addScaledVector(z0.sub(To),m)))}So.add(pf),Co.add(mf),To.add(gf)}s.isSkinnedMesh&&(s.boneTransform(c,So),s.boneTransform(u,Co),s.boneTransform(h,To));const f=A$(s,t,e,n,So,Co,To,B0);if(f){a&&(xf.fromBufferAttribute(a,c),bf.fromBufferAttribute(a,u),yf.fromBufferAttribute(a,h),f.uv=xi.getUV(B0,So,Co,To,xf,bf,yf,new Nt)),l&&(xf.fromBufferAttribute(l,c),bf.fromBufferAttribute(l,u),yf.fromBufferAttribute(l,h),f.uv2=xi.getUV(B0,So,Co,To,xf,bf,yf,new Nt));const p={a:c,b:u,c:h,normal:new G,materialIndex:0};xi.getNormal(So,Co,To,p.normal),f.face=p}return f}class hl extends cs{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new dn(c,3)),this.setAttribute("normal",new dn(u,3)),this.setAttribute("uv",new dn(h,2));function p(g,m,x,b,v,y,w,S,C,_,T){const I=y/C,A=w/_,D=y/2,k=w/2,M=S/2,E=C+1,N=_+1;let O=0,L=0;const $=new G;for(let W=0;W<N;W++){const q=W*A-k;for(let H=0;H<E;H++){const X=H*I-D;$[g]=X*b,$[m]=q*v,$[x]=M,c.push($.x,$.y,$.z),$[g]=0,$[m]=0,$[x]=S>0?1:-1,u.push($.x,$.y,$.z),h.push(H/C),h.push(1-W/_),O+=1}}for(let W=0;W<_;W++)for(let q=0;q<C;q++){const H=d+q+E*W,X=d+q+E*(W+1),it=d+(q+1)+E*(W+1),lt=d+(q+1)+E*W;l.push(H,X,lt),l.push(X,it,lt),L+=6}a.addGroup(f,L,T),f+=L,d+=O}}static fromJSON(t){return new hl(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Mc(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function ws(s){const t={};for(let e=0;e<s.length;e++){const n=Mc(s[e]);for(const i in n)t[i]=n[i]}return t}function N$(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}const R$={clone:Mc,merge:ws};var D$=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,$$=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ga extends Xo{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=D$,this.fragmentShader=$$,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Mc(t.uniforms),this.uniformsGroups=N$(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class w2 extends Kn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Je,this.projectionMatrix=new Je,this.projectionMatrixInverse=new Je}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class gi extends w2{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Q1*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(y0*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Q1*2*Math.atan(Math.tan(y0*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(y0*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Ul=90,Vl=1;class L$ extends Kn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new gi(Ul,Vl,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new G(1,0,0)),this.add(i);const r=new gi(Ul,Vl,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new G(-1,0,0)),this.add(r);const o=new gi(Ul,Vl,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new G(0,1,0)),this.add(o);const a=new gi(Ul,Vl,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new G(0,-1,0)),this.add(a);const l=new gi(Ul,Vl,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new G(0,0,1)),this.add(l);const c=new gi(Ul,Vl,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new G(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,u=t.getRenderTarget(),h=t.toneMapping,d=t.xr.enabled;t.toneMapping=ro,t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.toneMapping=h,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class _2 extends tr{constructor(t,e,n,i,r,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:Tc,super(t,e,n,i,r,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class F$ extends Va{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new _2(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:mi}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new hl(5,5,5),r=new Ga({name:"CubemapFromEquirect",uniforms:Mc(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Js,blending:Ro});r.uniforms.tEquirect.value=e;const o=new nn(i,r),a=e.minFilter;return e.minFilter===bm&&(e.minFilter=mi),new L$(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const U0=new G,P$=new G,O$=new yi;class to{constructor(t=new G(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=U0.subVectors(n,e).cross(P$.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(U0),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||O$.getNormalMatrix(t),i=this.coplanarPoint(U0).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Wl=new Ih,_f=new G;class jb{constructor(t=new to,e=new to,n=new to,i=new to,r=new to,o=new to){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],p=n[10],g=n[11],m=n[12],x=n[13],b=n[14],v=n[15];return e[0].setComponents(a-i,h-l,g-d,v-m).normalize(),e[1].setComponents(a+i,h+l,g+d,v+m).normalize(),e[2].setComponents(a+r,h+c,g+f,v+x).normalize(),e[3].setComponents(a-r,h-c,g-f,v-x).normalize(),e[4].setComponents(a-o,h-u,g-p,v-b).normalize(),e[5].setComponents(a+o,h+u,g+p,v+b).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Wl.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Wl)}intersectsSprite(t){return Wl.center.set(0,0,0),Wl.radius=.7071067811865476,Wl.applyMatrix4(t.matrixWorld),this.intersectsSphere(Wl)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(_f.x=i.normal.x>0?t.max.x:t.min.x,_f.y=i.normal.y>0?t.max.y:t.min.y,_f.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(_f)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function S2(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function z$(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,d=c.usage,f=s.createBuffer();s.bindBuffer(u,f),s.bufferData(u,h,d),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,f=u.updateRange;s.bindBuffer(h,c),f.count===-1?s.bufferSubData(h,0,d):(e?s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class wm extends cs{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,d=e/l,f=[],p=[],g=[],m=[];for(let x=0;x<u;x++){const b=x*d-o;for(let v=0;v<c;v++){const y=v*h-r;p.push(y,-b,0),g.push(0,0,1),m.push(v/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let b=0;b<a;b++){const v=b+c*x,y=b+c*(x+1),w=b+1+c*(x+1),S=b+1+c*x;f.push(v,y,S),f.push(y,w,S)}this.setIndex(f),this.setAttribute("position",new dn(p,3)),this.setAttribute("normal",new dn(g,3)),this.setAttribute("uv",new dn(m,2))}static fromJSON(t){return new wm(t.width,t.height,t.widthSegments,t.heightSegments)}}var B$=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,U$=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,V$=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,W$=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,G$=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,H$=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,q$="vec3 transformed = vec3( position );",j$=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,X$=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,K$=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Y$=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Z$=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,J$=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Q$=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,t3=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,e3=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,n3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,s3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,i3=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,r3=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,o3=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,a3=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,l3=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,c3=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,u3=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,h3=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,d3="gl_FragColor = linearToOutputTexel( gl_FragColor );",f3=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,p3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,m3=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,g3=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,x3=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,b3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,y3=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,v3=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,w3=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,_3=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,S3=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,C3=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,T3=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,I3=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,E3=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,M3=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,k3=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,A3=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,N3=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,R3=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,D3=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,$3=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,L3=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,F3=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,P3=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,O3=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,z3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,B3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,U3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,V3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,W3=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,G3=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,H3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,q3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,j3=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,X3=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,K3=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Y3=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Z3=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,J3=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Q3=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,tL=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,eL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sL=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,iL=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,rL=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,oL=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,aL=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,lL=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,cL=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,uL=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,hL=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,dL=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,fL=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,pL=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,mL=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,gL=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,xL=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,bL=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,yL=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,vL=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,wL=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,_L=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,SL=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,CL=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,TL=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,IL=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,EL=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ML=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,kL=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,AL=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,NL=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,RL=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,DL=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,$L=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,LL=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,FL=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,PL=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const OL=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,zL=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,BL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,UL=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,VL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,WL=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,GL=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,HL=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,qL=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,jL=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,XL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,KL=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,YL=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ZL=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JL=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,QL=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tF=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,eF=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nF=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,sF=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iF=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,rF=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,oF=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aF=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lF=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,cF=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uF=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hF=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dF=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,fF=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pF=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mF=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,gF=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xF=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Te={alphamap_fragment:B$,alphamap_pars_fragment:U$,alphatest_fragment:V$,alphatest_pars_fragment:W$,aomap_fragment:G$,aomap_pars_fragment:H$,begin_vertex:q$,beginnormal_vertex:j$,bsdfs:X$,iridescence_fragment:K$,bumpmap_pars_fragment:Y$,clipping_planes_fragment:Z$,clipping_planes_pars_fragment:J$,clipping_planes_pars_vertex:Q$,clipping_planes_vertex:t3,color_fragment:e3,color_pars_fragment:n3,color_pars_vertex:s3,color_vertex:i3,common:r3,cube_uv_reflection_fragment:o3,defaultnormal_vertex:a3,displacementmap_pars_vertex:l3,displacementmap_vertex:c3,emissivemap_fragment:u3,emissivemap_pars_fragment:h3,encodings_fragment:d3,encodings_pars_fragment:f3,envmap_fragment:p3,envmap_common_pars_fragment:m3,envmap_pars_fragment:g3,envmap_pars_vertex:x3,envmap_physical_pars_fragment:k3,envmap_vertex:b3,fog_vertex:y3,fog_pars_vertex:v3,fog_fragment:w3,fog_pars_fragment:_3,gradientmap_pars_fragment:S3,lightmap_fragment:C3,lightmap_pars_fragment:T3,lights_lambert_fragment:I3,lights_lambert_pars_fragment:E3,lights_pars_begin:M3,lights_toon_fragment:A3,lights_toon_pars_fragment:N3,lights_phong_fragment:R3,lights_phong_pars_fragment:D3,lights_physical_fragment:$3,lights_physical_pars_fragment:L3,lights_fragment_begin:F3,lights_fragment_maps:P3,lights_fragment_end:O3,logdepthbuf_fragment:z3,logdepthbuf_pars_fragment:B3,logdepthbuf_pars_vertex:U3,logdepthbuf_vertex:V3,map_fragment:W3,map_pars_fragment:G3,map_particle_fragment:H3,map_particle_pars_fragment:q3,metalnessmap_fragment:j3,metalnessmap_pars_fragment:X3,morphcolor_vertex:K3,morphnormal_vertex:Y3,morphtarget_pars_vertex:Z3,morphtarget_vertex:J3,normal_fragment_begin:Q3,normal_fragment_maps:tL,normal_pars_fragment:eL,normal_pars_vertex:nL,normal_vertex:sL,normalmap_pars_fragment:iL,clearcoat_normal_fragment_begin:rL,clearcoat_normal_fragment_maps:oL,clearcoat_pars_fragment:aL,iridescence_pars_fragment:lL,output_fragment:cL,packing:uL,premultiplied_alpha_fragment:hL,project_vertex:dL,dithering_fragment:fL,dithering_pars_fragment:pL,roughnessmap_fragment:mL,roughnessmap_pars_fragment:gL,shadowmap_pars_fragment:xL,shadowmap_pars_vertex:bL,shadowmap_vertex:yL,shadowmask_pars_fragment:vL,skinbase_vertex:wL,skinning_pars_vertex:_L,skinning_vertex:SL,skinnormal_vertex:CL,specularmap_fragment:TL,specularmap_pars_fragment:IL,tonemapping_fragment:EL,tonemapping_pars_fragment:ML,transmission_fragment:kL,transmission_pars_fragment:AL,uv_pars_fragment:NL,uv_pars_vertex:RL,uv_vertex:DL,uv2_pars_fragment:$L,uv2_pars_vertex:LL,uv2_vertex:FL,worldpos_vertex:PL,background_vert:OL,background_frag:zL,backgroundCube_vert:BL,backgroundCube_frag:UL,cube_vert:VL,cube_frag:WL,depth_vert:GL,depth_frag:HL,distanceRGBA_vert:qL,distanceRGBA_frag:jL,equirect_vert:XL,equirect_frag:KL,linedashed_vert:YL,linedashed_frag:ZL,meshbasic_vert:JL,meshbasic_frag:QL,meshlambert_vert:tF,meshlambert_frag:eF,meshmatcap_vert:nF,meshmatcap_frag:sF,meshnormal_vert:iF,meshnormal_frag:rF,meshphong_vert:oF,meshphong_frag:aF,meshphysical_vert:lF,meshphysical_frag:cF,meshtoon_vert:uF,meshtoon_frag:hF,points_vert:dF,points_frag:fF,shadow_vert:pF,shadow_frag:mF,sprite_vert:gF,sprite_frag:xF},Wt={common:{diffuse:{value:new Ve(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new yi},uv2Transform:{value:new yi},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Nt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ve(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ve(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new yi}},sprite:{diffuse:{value:new Ve(16777215)},opacity:{value:1},center:{value:new Nt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new yi}}},br={basic:{uniforms:ws([Wt.common,Wt.specularmap,Wt.envmap,Wt.aomap,Wt.lightmap,Wt.fog]),vertexShader:Te.meshbasic_vert,fragmentShader:Te.meshbasic_frag},lambert:{uniforms:ws([Wt.common,Wt.specularmap,Wt.envmap,Wt.aomap,Wt.lightmap,Wt.emissivemap,Wt.bumpmap,Wt.normalmap,Wt.displacementmap,Wt.fog,Wt.lights,{emissive:{value:new Ve(0)}}]),vertexShader:Te.meshlambert_vert,fragmentShader:Te.meshlambert_frag},phong:{uniforms:ws([Wt.common,Wt.specularmap,Wt.envmap,Wt.aomap,Wt.lightmap,Wt.emissivemap,Wt.bumpmap,Wt.normalmap,Wt.displacementmap,Wt.fog,Wt.lights,{emissive:{value:new Ve(0)},specular:{value:new Ve(1118481)},shininess:{value:30}}]),vertexShader:Te.meshphong_vert,fragmentShader:Te.meshphong_frag},standard:{uniforms:ws([Wt.common,Wt.envmap,Wt.aomap,Wt.lightmap,Wt.emissivemap,Wt.bumpmap,Wt.normalmap,Wt.displacementmap,Wt.roughnessmap,Wt.metalnessmap,Wt.fog,Wt.lights,{emissive:{value:new Ve(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Te.meshphysical_vert,fragmentShader:Te.meshphysical_frag},toon:{uniforms:ws([Wt.common,Wt.aomap,Wt.lightmap,Wt.emissivemap,Wt.bumpmap,Wt.normalmap,Wt.displacementmap,Wt.gradientmap,Wt.fog,Wt.lights,{emissive:{value:new Ve(0)}}]),vertexShader:Te.meshtoon_vert,fragmentShader:Te.meshtoon_frag},matcap:{uniforms:ws([Wt.common,Wt.bumpmap,Wt.normalmap,Wt.displacementmap,Wt.fog,{matcap:{value:null}}]),vertexShader:Te.meshmatcap_vert,fragmentShader:Te.meshmatcap_frag},points:{uniforms:ws([Wt.points,Wt.fog]),vertexShader:Te.points_vert,fragmentShader:Te.points_frag},dashed:{uniforms:ws([Wt.common,Wt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Te.linedashed_vert,fragmentShader:Te.linedashed_frag},depth:{uniforms:ws([Wt.common,Wt.displacementmap]),vertexShader:Te.depth_vert,fragmentShader:Te.depth_frag},normal:{uniforms:ws([Wt.common,Wt.bumpmap,Wt.normalmap,Wt.displacementmap,{opacity:{value:1}}]),vertexShader:Te.meshnormal_vert,fragmentShader:Te.meshnormal_frag},sprite:{uniforms:ws([Wt.sprite,Wt.fog]),vertexShader:Te.sprite_vert,fragmentShader:Te.sprite_frag},background:{uniforms:{uvTransform:{value:new yi},t2D:{value:null}},vertexShader:Te.background_vert,fragmentShader:Te.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:Te.backgroundCube_vert,fragmentShader:Te.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Te.cube_vert,fragmentShader:Te.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Te.equirect_vert,fragmentShader:Te.equirect_frag},distanceRGBA:{uniforms:ws([Wt.common,Wt.displacementmap,{referencePosition:{value:new G},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Te.distanceRGBA_vert,fragmentShader:Te.distanceRGBA_frag},shadow:{uniforms:ws([Wt.lights,Wt.fog,{color:{value:new Ve(0)},opacity:{value:1}}]),vertexShader:Te.shadow_vert,fragmentShader:Te.shadow_frag}};br.physical={uniforms:ws([br.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Nt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ve(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Nt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ve(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ve(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Te.meshphysical_vert,fragmentShader:Te.meshphysical_frag};function bF(s,t,e,n,i,r,o){const a=new Ve(0);let l=r===!0?0:1,c,u,h=null,d=0,f=null;function p(m,x){let b=!1,v=x.isScene===!0?x.background:null;v&&v.isTexture&&(v=(x.backgroundBlurriness>0?e:t).get(v));const y=s.xr,w=y.getSession&&y.getSession();w&&w.environmentBlendMode==="additive"&&(v=null),v===null?g(a,l):v&&v.isColor&&(g(v,1),b=!0),(s.autoClear||b)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),v&&(v.isCubeTexture||v.mapping===xm)?(u===void 0&&(u=new nn(new hl(1,1,1),new Ga({name:"BackgroundCubeMaterial",uniforms:Mc(br.backgroundCube.uniforms),vertexShader:br.backgroundCube.vertexShader,fragmentShader:br.backgroundCube.fragmentShader,side:Js,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,C,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,(h!==v||d!==v.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=v,d=v.version,f=s.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new nn(new wm(2,2),new Ga({name:"BackgroundMaterial",uniforms:Mc(br.background.uniforms),vertexShader:br.background.vertexShader,fragmentShader:br.background.fragmentShader,side:Uo,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||d!==v.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,h=v,d=v.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function g(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(m,x=1){a.set(m),l=x,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:p}}function yF(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,u=!1;function h(M,E,N,O,L){let $=!1;if(o){const W=g(O,N,E);c!==W&&(c=W,f(c.object)),$=x(M,O,N,L),$&&b(M,O,N,L)}else{const W=E.wireframe===!0;(c.geometry!==O.id||c.program!==N.id||c.wireframe!==W)&&(c.geometry=O.id,c.program=N.id,c.wireframe=W,$=!0)}L!==null&&e.update(L,34963),($||u)&&(u=!1,_(M,E,N,O),L!==null&&s.bindBuffer(34963,e.get(L).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(M){return n.isWebGL2?s.bindVertexArray(M):r.bindVertexArrayOES(M)}function p(M){return n.isWebGL2?s.deleteVertexArray(M):r.deleteVertexArrayOES(M)}function g(M,E,N){const O=N.wireframe===!0;let L=a[M.id];L===void 0&&(L={},a[M.id]=L);let $=L[E.id];$===void 0&&($={},L[E.id]=$);let W=$[O];return W===void 0&&(W=m(d()),$[O]=W),W}function m(M){const E=[],N=[],O=[];for(let L=0;L<i;L++)E[L]=0,N[L]=0,O[L]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:E,enabledAttributes:N,attributeDivisors:O,object:M,attributes:{},index:null}}function x(M,E,N,O){const L=c.attributes,$=E.attributes;let W=0;const q=N.getAttributes();for(const H in q)if(q[H].location>=0){const it=L[H];let lt=$[H];if(lt===void 0&&(H==="instanceMatrix"&&M.instanceMatrix&&(lt=M.instanceMatrix),H==="instanceColor"&&M.instanceColor&&(lt=M.instanceColor)),it===void 0||it.attribute!==lt||lt&&it.data!==lt.data)return!0;W++}return c.attributesNum!==W||c.index!==O}function b(M,E,N,O){const L={},$=E.attributes;let W=0;const q=N.getAttributes();for(const H in q)if(q[H].location>=0){let it=$[H];it===void 0&&(H==="instanceMatrix"&&M.instanceMatrix&&(it=M.instanceMatrix),H==="instanceColor"&&M.instanceColor&&(it=M.instanceColor));const lt={};lt.attribute=it,it&&it.data&&(lt.data=it.data),L[H]=lt,W++}c.attributes=L,c.attributesNum=W,c.index=O}function v(){const M=c.newAttributes;for(let E=0,N=M.length;E<N;E++)M[E]=0}function y(M){w(M,0)}function w(M,E){const N=c.newAttributes,O=c.enabledAttributes,L=c.attributeDivisors;N[M]=1,O[M]===0&&(s.enableVertexAttribArray(M),O[M]=1),L[M]!==E&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](M,E),L[M]=E)}function S(){const M=c.newAttributes,E=c.enabledAttributes;for(let N=0,O=E.length;N<O;N++)E[N]!==M[N]&&(s.disableVertexAttribArray(N),E[N]=0)}function C(M,E,N,O,L,$){n.isWebGL2===!0&&(N===5124||N===5125)?s.vertexAttribIPointer(M,E,N,L,$):s.vertexAttribPointer(M,E,N,O,L,$)}function _(M,E,N,O){if(n.isWebGL2===!1&&(M.isInstancedMesh||O.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;v();const L=O.attributes,$=N.getAttributes(),W=E.defaultAttributeValues;for(const q in $){const H=$[q];if(H.location>=0){let X=L[q];if(X===void 0&&(q==="instanceMatrix"&&M.instanceMatrix&&(X=M.instanceMatrix),q==="instanceColor"&&M.instanceColor&&(X=M.instanceColor)),X!==void 0){const it=X.normalized,lt=X.itemSize,Y=e.get(X);if(Y===void 0)continue;const yt=Y.buffer,vt=Y.type,xt=Y.bytesPerElement;if(X.isInterleavedBufferAttribute){const bt=X.data,Dt=bt.stride,ct=X.offset;if(bt.isInstancedInterleavedBuffer){for(let ht=0;ht<H.locationSize;ht++)w(H.location+ht,bt.meshPerAttribute);M.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=bt.meshPerAttribute*bt.count)}else for(let ht=0;ht<H.locationSize;ht++)y(H.location+ht);s.bindBuffer(34962,yt);for(let ht=0;ht<H.locationSize;ht++)C(H.location+ht,lt/H.locationSize,vt,it,Dt*xt,(ct+lt/H.locationSize*ht)*xt)}else{if(X.isInstancedBufferAttribute){for(let bt=0;bt<H.locationSize;bt++)w(H.location+bt,X.meshPerAttribute);M.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=X.meshPerAttribute*X.count)}else for(let bt=0;bt<H.locationSize;bt++)y(H.location+bt);s.bindBuffer(34962,yt);for(let bt=0;bt<H.locationSize;bt++)C(H.location+bt,lt/H.locationSize,vt,it,lt*xt,lt/H.locationSize*bt*xt)}}else if(W!==void 0){const it=W[q];if(it!==void 0)switch(it.length){case 2:s.vertexAttrib2fv(H.location,it);break;case 3:s.vertexAttrib3fv(H.location,it);break;case 4:s.vertexAttrib4fv(H.location,it);break;default:s.vertexAttrib1fv(H.location,it)}}}}S()}function T(){D();for(const M in a){const E=a[M];for(const N in E){const O=E[N];for(const L in O)p(O[L].object),delete O[L];delete E[N]}delete a[M]}}function I(M){if(a[M.id]===void 0)return;const E=a[M.id];for(const N in E){const O=E[N];for(const L in O)p(O[L].object),delete O[L];delete E[N]}delete a[M.id]}function A(M){for(const E in a){const N=a[E];if(N[M.id]===void 0)continue;const O=N[M.id];for(const L in O)p(O[L].object),delete O[L];delete N[M.id]}}function D(){k(),u=!0,c!==l&&(c=l,f(c.object))}function k(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:D,resetDefaultState:k,dispose:T,releaseStatesOfGeometry:I,releaseStatesOfProgram:A,initAttributes:v,enableAttribute:y,disableUnusedAttributes:S}}function vF(s,t,e,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,u){s.drawArrays(r,c,u),e.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,f;if(i)d=s,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,c,u,h),e.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function wF(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const C=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(C){if(C==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=s.getParameter(34930),d=s.getParameter(35660),f=s.getParameter(3379),p=s.getParameter(34076),g=s.getParameter(34921),m=s.getParameter(36347),x=s.getParameter(36348),b=s.getParameter(36349),v=d>0,y=o||t.has("OES_texture_float"),w=v&&y,S=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:b,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:w,maxSamples:S}}function _F(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new to,a=new yi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const p=h.length!==0||d||n!==0||i;return i=d,e=u(h,f,0),n=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,d,f){const p=h.clippingPlanes,g=h.clipIntersection,m=h.clipShadows,x=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?u(null):c();else{const b=r?0:n,v=b*4;let y=x.clippingState||null;l.value=y,y=u(p,d,v,f);for(let w=0;w!==v;++w)y[w]=e[w];x.clippingState=y,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=b}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,d,f,p){const g=h!==null?h.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const x=f+g*4,b=d.matrixWorldInverse;a.getNormalMatrix(b),(m===null||m.length<x)&&(m=new Float32Array(x));for(let v=0,y=f;v!==g;++v,y+=4)o.copy(h[v]).applyMatrix4(b,a),o.normal.toArray(m,y),m[y+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,m}}function SF(s){let t=new WeakMap;function e(o,a){return a===Dx?o.mapping=Tc:a===$x&&(o.mapping=Ic),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Dx||a===$x)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new F$(l.height/2);return c.fromEquirectangularTexture(s,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class C2 extends w2{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const rc=4,h_=[.125,.215,.35,.446,.526,.582],va=20,V0=new C2,d_=new Ve;let W0=null;const ba=(1+Math.sqrt(5))/2,Gl=1/ba,f_=[new G(1,1,1),new G(-1,1,1),new G(1,1,-1),new G(-1,1,-1),new G(0,ba,Gl),new G(0,ba,-Gl),new G(Gl,0,ba),new G(-Gl,0,ba),new G(ba,Gl,0),new G(-ba,Gl,0)];class p_{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){W0=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=x_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=g_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(W0),t.scissorTest=!1,Sf(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Tc||t.mapping===Ic?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),W0=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:mi,minFilter:mi,generateMipmaps:!1,type:nh,format:ji,encoding:Ua,depthBuffer:!1},i=m_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=m_(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=CF(r)),this._blurMaterial=TF(r,t,e)}return i}_compileMaterial(t){const e=new nn(this._lodPlanes[0],t);this._renderer.compile(e,V0)}_sceneToCubeUV(t,e,n,i){const a=new gi(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(d_),u.toneMapping=ro,u.autoClear=!1;const f=new ul({name:"PMREM.Background",side:Js,depthWrite:!1,depthTest:!1}),p=new nn(new hl,f);let g=!1;const m=t.background;m?m.isColor&&(f.color.copy(m),t.background=null,g=!0):(f.color.copy(d_),g=!0);for(let x=0;x<6;x++){const b=x%3;b===0?(a.up.set(0,l[x],0),a.lookAt(c[x],0,0)):b===1?(a.up.set(0,0,l[x]),a.lookAt(0,c[x],0)):(a.up.set(0,l[x],0),a.lookAt(0,0,c[x]));const v=this._cubeSize;Sf(i,b*v,x>2?v:0,v,v),u.setRenderTarget(i),g&&u.render(p,a),u.render(t,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=d,u.autoClear=h,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Tc||t.mapping===Ic;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=x_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=g_());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new nn(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;Sf(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,V0)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=f_[(i-1)%f_.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new nn(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*va-1),g=r/p,m=isFinite(r)?1+Math.floor(u*g):va;m>va&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${va}`);const x=[];let b=0;for(let C=0;C<va;++C){const _=C/g,T=Math.exp(-_*_/2);x.push(T),C===0?b+=T:C<m&&(b+=2*T)}for(let C=0;C<x.length;C++)x[C]=x[C]/b;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=x,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-n;const y=this._sizeLods[i],w=3*y*(i>v-rc?i-v+rc:0),S=4*(this._cubeSize-y);Sf(e,w,S,3*y,2*y),l.setRenderTarget(e),l.render(h,V0)}}function CF(s){const t=[],e=[],n=[];let i=s;const r=s-rc+1+h_.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>s-rc?l=h_[o-s+rc-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,g=3,m=2,x=1,b=new Float32Array(g*p*f),v=new Float32Array(m*p*f),y=new Float32Array(x*p*f);for(let S=0;S<f;S++){const C=S%3*2/3-1,_=S>2?0:-1,T=[C,_,0,C+2/3,_,0,C+2/3,_+1,0,C,_,0,C+2/3,_+1,0,C,_+1,0];b.set(T,g*p*S),v.set(d,m*p*S);const I=[S,S,S,S,S,S];y.set(I,x*p*S)}const w=new cs;w.setAttribute("position",new Qs(b,g)),w.setAttribute("uv",new Qs(v,m)),w.setAttribute("faceIndex",new Qs(y,x)),t.push(w),i>rc&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function m_(s,t,e){const n=new Va(s,t,e);return n.texture.mapping=xm,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Sf(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function TF(s,t,e){const n=new Float32Array(va),i=new G(0,1,0);return new Ga({name:"SphericalGaussianBlur",defines:{n:va,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Xb(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ro,depthTest:!1,depthWrite:!1})}function g_(){return new Ga({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Xb(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ro,depthTest:!1,depthWrite:!1})}function x_(){return new Ga({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xb(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ro,depthTest:!1,depthWrite:!1})}function Xb(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function IF(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Dx||l===$x,u=l===Tc||l===Ic;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=t.get(a);return e===null&&(e=new p_(s)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),t.set(a,h),h.texture}else{if(t.has(a))return t.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){e===null&&(e=new p_(s));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function EF(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function MF(s,t,e,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(h){const d=h.attributes;for(const p in d)t.update(d[p],34962);const f=h.morphAttributes;for(const p in f){const g=f[p];for(let m=0,x=g.length;m<x;m++)t.update(g[m],34962)}}function c(h){const d=[],f=h.index,p=h.attributes.position;let g=0;if(f!==null){const b=f.array;g=f.version;for(let v=0,y=b.length;v<y;v+=3){const w=b[v+0],S=b[v+1],C=b[v+2];d.push(w,S,S,C,C,w)}}else{const b=p.array;g=p.version;for(let v=0,y=b.length/3-1;v<y;v+=3){const w=v+0,S=v+1,C=v+2;d.push(w,S,S,C,C,w)}}const m=new(p2(d)?v2:y2)(d,1);m.version=g;const x=r.get(h);x&&t.remove(x),r.set(h,m)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function kF(s,t,e,n){const i=n.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,f){s.drawElements(r,f,a,d*l),e.update(f,r,1)}function h(d,f,p){if(p===0)return;let g,m;if(i)g=s,m="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](r,f,a,d*l,p),e.update(f,r,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function AF(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function NF(s,t){return s[0]-t[0]}function RF(s,t){return Math.abs(t[1])-Math.abs(s[1])}function DF(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new Xn,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,d){const f=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=g!==void 0?g.length:0;let x=r.get(u);if(x===void 0||x.count!==m){let N=function(){M.dispose(),r.delete(u),u.removeEventListener("dispose",N)};var p=N;x!==void 0&&x.texture.dispose();const y=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,C=u.morphAttributes.position||[],_=u.morphAttributes.normal||[],T=u.morphAttributes.color||[];let I=0;y===!0&&(I=1),w===!0&&(I=2),S===!0&&(I=3);let A=u.attributes.position.count*I,D=1;A>t.maxTextureSize&&(D=Math.ceil(A/t.maxTextureSize),A=t.maxTextureSize);const k=new Float32Array(A*D*4*m),M=new b2(k,A,D,m);M.type=Ia,M.needsUpdate=!0;const E=I*4;for(let O=0;O<m;O++){const L=C[O],$=_[O],W=T[O],q=A*D*4*O;for(let H=0;H<L.count;H++){const X=H*E;y===!0&&(o.fromBufferAttribute(L,H),k[q+X+0]=o.x,k[q+X+1]=o.y,k[q+X+2]=o.z,k[q+X+3]=0),w===!0&&(o.fromBufferAttribute($,H),k[q+X+4]=o.x,k[q+X+5]=o.y,k[q+X+6]=o.z,k[q+X+7]=0),S===!0&&(o.fromBufferAttribute(W,H),k[q+X+8]=o.x,k[q+X+9]=o.y,k[q+X+10]=o.z,k[q+X+11]=W.itemSize===4?o.w:1)}}x={count:m,texture:M,size:new Nt(A,D)},r.set(u,x),u.addEventListener("dispose",N)}let b=0;for(let y=0;y<f.length;y++)b+=f[y];const v=u.morphTargetsRelative?1:1-b;d.getUniforms().setValue(s,"morphTargetBaseInfluence",v),d.getUniforms().setValue(s,"morphTargetInfluences",f),d.getUniforms().setValue(s,"morphTargetsTexture",x.texture,e),d.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const g=f===void 0?0:f.length;let m=n[u.id];if(m===void 0||m.length!==g){m=[];for(let w=0;w<g;w++)m[w]=[w,0];n[u.id]=m}for(let w=0;w<g;w++){const S=m[w];S[0]=w,S[1]=f[w]}m.sort(RF);for(let w=0;w<8;w++)w<g&&m[w][1]?(a[w][0]=m[w][0],a[w][1]=m[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(NF);const x=u.morphAttributes.position,b=u.morphAttributes.normal;let v=0;for(let w=0;w<8;w++){const S=a[w],C=S[0],_=S[1];C!==Number.MAX_SAFE_INTEGER&&_?(x&&u.getAttribute("morphTarget"+w)!==x[C]&&u.setAttribute("morphTarget"+w,x[C]),b&&u.getAttribute("morphNormal"+w)!==b[C]&&u.setAttribute("morphNormal"+w,b[C]),i[w]=_,v+=_):(x&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),b&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),i[w]=0)}const y=u.morphTargetsRelative?1:1-v;d.getUniforms().setValue(s,"morphTargetBaseInfluence",y),d.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function $F(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);return i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const T2=new tr,I2=new b2,E2=new v$,M2=new _2,b_=[],y_=[],v_=new Float32Array(16),w_=new Float32Array(9),__=new Float32Array(4);function Jc(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=b_[i];if(r===void 0&&(r=new Float32Array(i),b_[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Bn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Un(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function _m(s,t){let e=y_[t];e===void 0&&(e=new Int32Array(t),y_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function LF(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function FF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Bn(e,t))return;s.uniform2fv(this.addr,t),Un(e,t)}}function PF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Bn(e,t))return;s.uniform3fv(this.addr,t),Un(e,t)}}function OF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Bn(e,t))return;s.uniform4fv(this.addr,t),Un(e,t)}}function zF(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Bn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Un(e,t)}else{if(Bn(e,n))return;__.set(n),s.uniformMatrix2fv(this.addr,!1,__),Un(e,n)}}function BF(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Bn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Un(e,t)}else{if(Bn(e,n))return;w_.set(n),s.uniformMatrix3fv(this.addr,!1,w_),Un(e,n)}}function UF(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Bn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Un(e,t)}else{if(Bn(e,n))return;v_.set(n),s.uniformMatrix4fv(this.addr,!1,v_),Un(e,n)}}function VF(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function WF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Bn(e,t))return;s.uniform2iv(this.addr,t),Un(e,t)}}function GF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Bn(e,t))return;s.uniform3iv(this.addr,t),Un(e,t)}}function HF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Bn(e,t))return;s.uniform4iv(this.addr,t),Un(e,t)}}function qF(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function jF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Bn(e,t))return;s.uniform2uiv(this.addr,t),Un(e,t)}}function XF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Bn(e,t))return;s.uniform3uiv(this.addr,t),Un(e,t)}}function KF(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Bn(e,t))return;s.uniform4uiv(this.addr,t),Un(e,t)}}function YF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||T2,i)}function ZF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||E2,i)}function JF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||M2,i)}function QF(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||I2,i)}function tP(s){switch(s){case 5126:return LF;case 35664:return FF;case 35665:return PF;case 35666:return OF;case 35674:return zF;case 35675:return BF;case 35676:return UF;case 5124:case 35670:return VF;case 35667:case 35671:return WF;case 35668:case 35672:return GF;case 35669:case 35673:return HF;case 5125:return qF;case 36294:return jF;case 36295:return XF;case 36296:return KF;case 35678:case 36198:case 36298:case 36306:case 35682:return YF;case 35679:case 36299:case 36307:return ZF;case 35680:case 36300:case 36308:case 36293:return JF;case 36289:case 36303:case 36311:case 36292:return QF}}function eP(s,t){s.uniform1fv(this.addr,t)}function nP(s,t){const e=Jc(t,this.size,2);s.uniform2fv(this.addr,e)}function sP(s,t){const e=Jc(t,this.size,3);s.uniform3fv(this.addr,e)}function iP(s,t){const e=Jc(t,this.size,4);s.uniform4fv(this.addr,e)}function rP(s,t){const e=Jc(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function oP(s,t){const e=Jc(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function aP(s,t){const e=Jc(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function lP(s,t){s.uniform1iv(this.addr,t)}function cP(s,t){s.uniform2iv(this.addr,t)}function uP(s,t){s.uniform3iv(this.addr,t)}function hP(s,t){s.uniform4iv(this.addr,t)}function dP(s,t){s.uniform1uiv(this.addr,t)}function fP(s,t){s.uniform2uiv(this.addr,t)}function pP(s,t){s.uniform3uiv(this.addr,t)}function mP(s,t){s.uniform4uiv(this.addr,t)}function gP(s,t,e){const n=this.cache,i=t.length,r=_m(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||T2,r[o])}function xP(s,t,e){const n=this.cache,i=t.length,r=_m(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||E2,r[o])}function bP(s,t,e){const n=this.cache,i=t.length,r=_m(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||M2,r[o])}function yP(s,t,e){const n=this.cache,i=t.length,r=_m(e,i);Bn(n,r)||(s.uniform1iv(this.addr,r),Un(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||I2,r[o])}function vP(s){switch(s){case 5126:return eP;case 35664:return nP;case 35665:return sP;case 35666:return iP;case 35674:return rP;case 35675:return oP;case 35676:return aP;case 5124:case 35670:return lP;case 35667:case 35671:return cP;case 35668:case 35672:return uP;case 35669:case 35673:return hP;case 5125:return dP;case 36294:return fP;case 36295:return pP;case 36296:return mP;case 35678:case 36198:case 36298:case 36306:case 35682:return gP;case 35679:case 36299:case 36307:return xP;case 35680:case 36300:case 36308:case 36293:return bP;case 36289:case 36303:case 36311:case 36292:return yP}}class wP{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=tP(e.type)}}class _P{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=vP(e.type)}}class SP{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const G0=/(\w+)(\])?(\[|\.)?/g;function S_(s,t){s.seq.push(t),s.map[t.id]=t}function CP(s,t,e){const n=s.name,i=n.length;for(G0.lastIndex=0;;){const r=G0.exec(n),o=G0.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){S_(e,c===void 0?new wP(a,s,t):new _P(a,s,t));break}else{let h=e.map[a];h===void 0&&(h=new SP(a),S_(e,h)),e=h}}}class up{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);CP(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function C_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let TP=0;function IP(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function EP(s){switch(s){case Ua:return["Linear","( value )"];case pn:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function T_(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+IP(s.getShaderSource(t),o)}else return i}function MP(s,t){const e=EP(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function kP(s,t){let e;switch(t){case jD:e="Linear";break;case XD:e="Reinhard";break;case KD:e="OptimizedCineon";break;case YD:e="ACESFilmic";break;case ZD:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function AP(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Fu).join(`
`)}function NP(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function RP(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function Fu(s){return s!==""}function I_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function E_(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const DP=/^[ \t]*#include +<([\w\d./]+)>/gm;function zx(s){return s.replace(DP,$P)}function $P(s,t){const e=Te[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return zx(e)}const LP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function M_(s){return s.replace(LP,FP)}function FP(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function k_(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function PP(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===l2?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===c2?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Lu&&(t="SHADOWMAP_TYPE_VSM"),t}function OP(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Tc:case Ic:t="ENVMAP_TYPE_CUBE";break;case xm:t="ENVMAP_TYPE_CUBE_UV";break}return t}function zP(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Ic:t="ENVMAP_MODE_REFRACTION";break}return t}function BP(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case gm:t="ENVMAP_BLENDING_MULTIPLY";break;case HD:t="ENVMAP_BLENDING_MIX";break;case qD:t="ENVMAP_BLENDING_ADD";break}return t}function UP(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function VP(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=PP(e),c=OP(e),u=zP(e),h=BP(e),d=UP(e),f=e.isWebGL2?"":AP(e),p=NP(r),g=i.createProgram();let m,x,b=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[p].filter(Fu).join(`
`),m.length>0&&(m+=`
`),x=[f,p].filter(Fu).join(`
`),x.length>0&&(x+=`
`)):(m=[k_(e),"#define SHADER_NAME "+e.shaderName,p,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Fu).join(`
`),x=[f,k_(e),"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==ro?"#define TONE_MAPPING":"",e.toneMapping!==ro?Te.tonemapping_pars_fragment:"",e.toneMapping!==ro?kP("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Te.encodings_pars_fragment,MP("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Fu).join(`
`)),o=zx(o),o=I_(o,e),o=E_(o,e),a=zx(a),a=I_(a,e),a=E_(a,e),o=M_(o),a=M_(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",e.glslVersion===J1?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===J1?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const v=b+m+o,y=b+x+a,w=C_(i,35633,v),S=C_(i,35632,y);if(i.attachShader(g,w),i.attachShader(g,S),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const T=i.getProgramInfoLog(g).trim(),I=i.getShaderInfoLog(w).trim(),A=i.getShaderInfoLog(S).trim();let D=!0,k=!0;if(i.getProgramParameter(g,35714)===!1){D=!1;const M=T_(i,w,"vertex"),E=T_(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+T+`
`+M+`
`+E)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(I===""||A==="")&&(k=!1);k&&(this.diagnostics={runnable:D,programLog:T,vertexShader:{log:I,prefix:m},fragmentShader:{log:A,prefix:x}})}i.deleteShader(w),i.deleteShader(S);let C;this.getUniforms=function(){return C===void 0&&(C=new up(i,g)),C};let _;return this.getAttributes=function(){return _===void 0&&(_=RP(i,g)),_},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=TP++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=S,this}let WP=0;class GP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new HP(t),e.set(t,n)),n}}class HP{constructor(t){this.id=WP++,this.code=t,this.usedTimes=0}}function qP(s,t,e,n,i,r,o){const a=new qb,l=new GP,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(_,T,I,A,D){const k=A.fog,M=D.geometry,E=_.isMeshStandardMaterial?A.environment:null,N=(_.isMeshStandardMaterial?e:t).get(_.envMap||E),O=!!N&&N.mapping===xm?N.image.height:null,L=p[_.type];_.precision!==null&&(f=i.getMaxPrecision(_.precision),f!==_.precision&&console.warn("THREE.WebGLProgram.getParameters:",_.precision,"not supported, using",f,"instead."));const $=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color,W=$!==void 0?$.length:0;let q=0;M.morphAttributes.position!==void 0&&(q=1),M.morphAttributes.normal!==void 0&&(q=2),M.morphAttributes.color!==void 0&&(q=3);let H,X,it,lt;if(L){const Dt=br[L];H=Dt.vertexShader,X=Dt.fragmentShader}else H=_.vertexShader,X=_.fragmentShader,l.update(_),it=l.getVertexShaderID(_),lt=l.getFragmentShaderID(_);const Y=s.getRenderTarget(),yt=_.alphaTest>0,vt=_.clearcoat>0,xt=_.iridescence>0;return{isWebGL2:u,shaderID:L,shaderName:_.type,vertexShader:H,fragmentShader:X,defines:_.defines,customVertexShaderID:it,customFragmentShaderID:lt,isRawShaderMaterial:_.isRawShaderMaterial===!0,glslVersion:_.glslVersion,precision:f,instancing:D.isInstancedMesh===!0,instancingColor:D.isInstancedMesh===!0&&D.instanceColor!==null,supportsVertexTextures:d,outputEncoding:Y===null?s.outputEncoding:Y.isXRRenderTarget===!0?Y.texture.encoding:Ua,map:!!_.map,matcap:!!_.matcap,envMap:!!N,envMapMode:N&&N.mapping,envMapCubeUVHeight:O,lightMap:!!_.lightMap,aoMap:!!_.aoMap,emissiveMap:!!_.emissiveMap,bumpMap:!!_.bumpMap,normalMap:!!_.normalMap,objectSpaceNormalMap:_.normalMapType===g$,tangentSpaceNormalMap:_.normalMapType===ym,decodeVideoTexture:!!_.map&&_.map.isVideoTexture===!0&&_.map.encoding===pn,clearcoat:vt,clearcoatMap:vt&&!!_.clearcoatMap,clearcoatRoughnessMap:vt&&!!_.clearcoatRoughnessMap,clearcoatNormalMap:vt&&!!_.clearcoatNormalMap,iridescence:xt,iridescenceMap:xt&&!!_.iridescenceMap,iridescenceThicknessMap:xt&&!!_.iridescenceThicknessMap,displacementMap:!!_.displacementMap,roughnessMap:!!_.roughnessMap,metalnessMap:!!_.metalnessMap,specularMap:!!_.specularMap,specularIntensityMap:!!_.specularIntensityMap,specularColorMap:!!_.specularColorMap,opaque:_.transparent===!1&&_.blending===fc,alphaMap:!!_.alphaMap,alphaTest:yt,gradientMap:!!_.gradientMap,sheen:_.sheen>0,sheenColorMap:!!_.sheenColorMap,sheenRoughnessMap:!!_.sheenRoughnessMap,transmission:_.transmission>0,transmissionMap:!!_.transmissionMap,thicknessMap:!!_.thicknessMap,combine:_.combine,vertexTangents:!!_.normalMap&&!!M.attributes.tangent,vertexColors:_.vertexColors,vertexAlphas:_.vertexColors===!0&&!!M.attributes.color&&M.attributes.color.itemSize===4,vertexUvs:!!_.map||!!_.bumpMap||!!_.normalMap||!!_.specularMap||!!_.alphaMap||!!_.emissiveMap||!!_.roughnessMap||!!_.metalnessMap||!!_.clearcoatMap||!!_.clearcoatRoughnessMap||!!_.clearcoatNormalMap||!!_.iridescenceMap||!!_.iridescenceThicknessMap||!!_.displacementMap||!!_.transmissionMap||!!_.thicknessMap||!!_.specularIntensityMap||!!_.specularColorMap||!!_.sheenColorMap||!!_.sheenRoughnessMap,uvsVertexOnly:!(!!_.map||!!_.bumpMap||!!_.normalMap||!!_.specularMap||!!_.alphaMap||!!_.emissiveMap||!!_.roughnessMap||!!_.metalnessMap||!!_.clearcoatNormalMap||!!_.iridescenceMap||!!_.iridescenceThicknessMap||_.transmission>0||!!_.transmissionMap||!!_.thicknessMap||!!_.specularIntensityMap||!!_.specularColorMap||_.sheen>0||!!_.sheenColorMap||!!_.sheenRoughnessMap)&&!!_.displacementMap,fog:!!k,useFog:_.fog===!0,fogExp2:k&&k.isFogExp2,flatShading:!!_.flatShading,sizeAttenuation:_.sizeAttenuation,logarithmicDepthBuffer:h,skinning:D.isSkinnedMesh===!0,morphTargets:M.morphAttributes.position!==void 0,morphNormals:M.morphAttributes.normal!==void 0,morphColors:M.morphAttributes.color!==void 0,morphTargetsCount:W,morphTextureStride:q,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:_.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:_.toneMapped?s.toneMapping:ro,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:_.premultipliedAlpha,doubleSided:_.side===Ls,flipSided:_.side===Js,useDepthPacking:!!_.depthPacking,depthPacking:_.depthPacking||0,index0AttributeName:_.index0AttributeName,extensionDerivatives:_.extensions&&_.extensions.derivatives,extensionFragDepth:_.extensions&&_.extensions.fragDepth,extensionDrawBuffers:_.extensions&&_.extensions.drawBuffers,extensionShaderTextureLOD:_.extensions&&_.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:_.customProgramCacheKey()}}function m(_){const T=[];if(_.shaderID?T.push(_.shaderID):(T.push(_.customVertexShaderID),T.push(_.customFragmentShaderID)),_.defines!==void 0)for(const I in _.defines)T.push(I),T.push(_.defines[I]);return _.isRawShaderMaterial===!1&&(x(T,_),b(T,_),T.push(s.outputEncoding)),T.push(_.customProgramCacheKey),T.join()}function x(_,T){_.push(T.precision),_.push(T.outputEncoding),_.push(T.envMapMode),_.push(T.envMapCubeUVHeight),_.push(T.combine),_.push(T.vertexUvs),_.push(T.fogExp2),_.push(T.sizeAttenuation),_.push(T.morphTargetsCount),_.push(T.morphAttributeCount),_.push(T.numDirLights),_.push(T.numPointLights),_.push(T.numSpotLights),_.push(T.numSpotLightMaps),_.push(T.numHemiLights),_.push(T.numRectAreaLights),_.push(T.numDirLightShadows),_.push(T.numPointLightShadows),_.push(T.numSpotLightShadows),_.push(T.numSpotLightShadowsWithMaps),_.push(T.shadowMapType),_.push(T.toneMapping),_.push(T.numClippingPlanes),_.push(T.numClipIntersection),_.push(T.depthPacking)}function b(_,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.map&&a.enable(4),T.matcap&&a.enable(5),T.envMap&&a.enable(6),T.lightMap&&a.enable(7),T.aoMap&&a.enable(8),T.emissiveMap&&a.enable(9),T.bumpMap&&a.enable(10),T.normalMap&&a.enable(11),T.objectSpaceNormalMap&&a.enable(12),T.tangentSpaceNormalMap&&a.enable(13),T.clearcoat&&a.enable(14),T.clearcoatMap&&a.enable(15),T.clearcoatRoughnessMap&&a.enable(16),T.clearcoatNormalMap&&a.enable(17),T.iridescence&&a.enable(18),T.iridescenceMap&&a.enable(19),T.iridescenceThicknessMap&&a.enable(20),T.displacementMap&&a.enable(21),T.specularMap&&a.enable(22),T.roughnessMap&&a.enable(23),T.metalnessMap&&a.enable(24),T.gradientMap&&a.enable(25),T.alphaMap&&a.enable(26),T.alphaTest&&a.enable(27),T.vertexColors&&a.enable(28),T.vertexAlphas&&a.enable(29),T.vertexUvs&&a.enable(30),T.vertexTangents&&a.enable(31),T.uvsVertexOnly&&a.enable(32),_.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.skinning&&a.enable(4),T.morphTargets&&a.enable(5),T.morphNormals&&a.enable(6),T.morphColors&&a.enable(7),T.premultipliedAlpha&&a.enable(8),T.shadowMapEnabled&&a.enable(9),T.physicallyCorrectLights&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.specularIntensityMap&&a.enable(15),T.specularColorMap&&a.enable(16),T.transmission&&a.enable(17),T.transmissionMap&&a.enable(18),T.thicknessMap&&a.enable(19),T.sheen&&a.enable(20),T.sheenColorMap&&a.enable(21),T.sheenRoughnessMap&&a.enable(22),T.decodeVideoTexture&&a.enable(23),T.opaque&&a.enable(24),_.push(a.mask)}function v(_){const T=p[_.type];let I;if(T){const A=br[T];I=R$.clone(A.uniforms)}else I=_.uniforms;return I}function y(_,T){let I;for(let A=0,D=c.length;A<D;A++){const k=c[A];if(k.cacheKey===T){I=k,++I.usedTimes;break}}return I===void 0&&(I=new VP(s,T,_,r),c.push(I)),I}function w(_){if(--_.usedTimes===0){const T=c.indexOf(_);c[T]=c[c.length-1],c.pop(),_.destroy()}}function S(_){l.remove(_)}function C(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:v,acquireProgram:y,releaseProgram:w,releaseShaderCache:S,programs:c,dispose:C}}function jP(){let s=new WeakMap;function t(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function e(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function XP(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function A_(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function N_(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(h,d,f,p,g,m){let x=s[t];return x===void 0?(x={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:g,group:m},s[t]=x):(x.id=h.id,x.object=h,x.geometry=d,x.material=f,x.groupOrder=p,x.renderOrder=h.renderOrder,x.z=g,x.group=m),t++,x}function a(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.push(x):f.transparent===!0?i.push(x):e.push(x)}function l(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.unshift(x):f.transparent===!0?i.unshift(x):e.unshift(x)}function c(h,d){e.length>1&&e.sort(h||XP),n.length>1&&n.sort(d||A_),i.length>1&&i.sort(d||A_)}function u(){for(let h=t,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function KP(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new N_,s.set(n,[o])):i>=r.length?(o=new N_,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function YP(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new G,color:new Ve};break;case"SpotLight":e={position:new G,direction:new G,color:new Ve,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new G,color:new Ve,distance:0,decay:0};break;case"HemisphereLight":e={direction:new G,skyColor:new Ve,groundColor:new Ve};break;case"RectAreaLight":e={color:new Ve,position:new G,halfWidth:new G,halfHeight:new G};break}return s[t.id]=e,e}}}function ZP(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Nt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Nt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Nt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let JP=0;function QP(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function tO(s,t){const e=new YP,n=ZP(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new G);const r=new G,o=new Je,a=new Je;function l(u,h){let d=0,f=0,p=0;for(let A=0;A<9;A++)i.probe[A].set(0,0,0);let g=0,m=0,x=0,b=0,v=0,y=0,w=0,S=0,C=0,_=0;u.sort(QP);const T=h!==!0?Math.PI:1;for(let A=0,D=u.length;A<D;A++){const k=u[A],M=k.color,E=k.intensity,N=k.distance,O=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)d+=M.r*E*T,f+=M.g*E*T,p+=M.b*E*T;else if(k.isLightProbe)for(let L=0;L<9;L++)i.probe[L].addScaledVector(k.sh.coefficients[L],E);else if(k.isDirectionalLight){const L=e.get(k);if(L.color.copy(k.color).multiplyScalar(k.intensity*T),k.castShadow){const $=k.shadow,W=n.get(k);W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,i.directionalShadow[g]=W,i.directionalShadowMap[g]=O,i.directionalShadowMatrix[g]=k.shadow.matrix,y++}i.directional[g]=L,g++}else if(k.isSpotLight){const L=e.get(k);L.position.setFromMatrixPosition(k.matrixWorld),L.color.copy(M).multiplyScalar(E*T),L.distance=N,L.coneCos=Math.cos(k.angle),L.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),L.decay=k.decay,i.spot[x]=L;const $=k.shadow;if(k.map&&(i.spotLightMap[C]=k.map,C++,$.updateMatrices(k),k.castShadow&&_++),i.spotLightMatrix[x]=$.matrix,k.castShadow){const W=n.get(k);W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,i.spotShadow[x]=W,i.spotShadowMap[x]=O,S++}x++}else if(k.isRectAreaLight){const L=e.get(k);L.color.copy(M).multiplyScalar(E),L.halfWidth.set(k.width*.5,0,0),L.halfHeight.set(0,k.height*.5,0),i.rectArea[b]=L,b++}else if(k.isPointLight){const L=e.get(k);if(L.color.copy(k.color).multiplyScalar(k.intensity*T),L.distance=k.distance,L.decay=k.decay,k.castShadow){const $=k.shadow,W=n.get(k);W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,W.shadowCameraNear=$.camera.near,W.shadowCameraFar=$.camera.far,i.pointShadow[m]=W,i.pointShadowMap[m]=O,i.pointShadowMatrix[m]=k.shadow.matrix,w++}i.point[m]=L,m++}else if(k.isHemisphereLight){const L=e.get(k);L.skyColor.copy(k.color).multiplyScalar(E*T),L.groundColor.copy(k.groundColor).multiplyScalar(E*T),i.hemi[v]=L,v++}}b>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Wt.LTC_FLOAT_1,i.rectAreaLTC2=Wt.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Wt.LTC_HALF_1,i.rectAreaLTC2=Wt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const I=i.hash;(I.directionalLength!==g||I.pointLength!==m||I.spotLength!==x||I.rectAreaLength!==b||I.hemiLength!==v||I.numDirectionalShadows!==y||I.numPointShadows!==w||I.numSpotShadows!==S||I.numSpotMaps!==C)&&(i.directional.length=g,i.spot.length=x,i.rectArea.length=b,i.point.length=m,i.hemi.length=v,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=S+C-_,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=_,I.directionalLength=g,I.pointLength=m,I.spotLength=x,I.rectAreaLength=b,I.hemiLength=v,I.numDirectionalShadows=y,I.numPointShadows=w,I.numSpotShadows=S,I.numSpotMaps=C,i.version=JP++)}function c(u,h){let d=0,f=0,p=0,g=0,m=0;const x=h.matrixWorldInverse;for(let b=0,v=u.length;b<v;b++){const y=u[b];if(y.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),d++}else if(y.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(y.matrixWorld),w.position.applyMatrix4(x),w.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),p++}else if(y.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(y.matrixWorld),w.position.applyMatrix4(x),a.identity(),o.copy(y.matrixWorld),o.premultiply(x),a.extractRotation(o),w.halfWidth.set(y.width*.5,0,0),w.halfHeight.set(0,y.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(y.isPointLight){const w=i.point[f];w.position.setFromMatrixPosition(y.matrixWorld),w.position.applyMatrix4(x),f++}else if(y.isHemisphereLight){const w=i.hemi[m];w.direction.setFromMatrixPosition(y.matrixWorld),w.direction.transformDirection(x),m++}}}return{setup:l,setupView:c,state:i}}function R_(s,t){const e=new tO(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function eO(s,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new R_(s,t),e.set(r,[l])):o>=a.length?(l=new R_(s,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class nO extends Xo{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=p$,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class sO extends Xo{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new G,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const iO=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,rO=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function oO(s,t,e){let n=new jb;const i=new Nt,r=new Nt,o=new Xn,a=new nO({depthPacking:m$}),l=new sO,c={},u=e.maxTextureSize,h={0:Js,1:Uo,2:Ls},d=new Ga({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Nt},radius:{value:4}},vertexShader:iO,fragmentShader:rO}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new cs;p.setAttribute("position",new Qs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new nn(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=l2,this.render=function(y,w,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||y.length===0)return;const C=s.getRenderTarget(),_=s.getActiveCubeFace(),T=s.getActiveMipmapLevel(),I=s.state;I.setBlending(Ro),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let A=0,D=y.length;A<D;A++){const k=y[A],M=k.shadow;if(M===void 0){console.warn("THREE.WebGLShadowMap:",k,"has no shadow.");continue}if(M.autoUpdate===!1&&M.needsUpdate===!1)continue;i.copy(M.mapSize);const E=M.getFrameExtents();if(i.multiply(E),r.copy(M.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/E.x),i.x=r.x*E.x,M.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/E.y),i.y=r.y*E.y,M.mapSize.y=r.y)),M.map===null){const O=this.type!==Lu?{minFilter:Ns,magFilter:Ns}:{};M.map=new Va(i.x,i.y,O),M.map.texture.name=k.name+".shadowMap",M.camera.updateProjectionMatrix()}s.setRenderTarget(M.map),s.clear();const N=M.getViewportCount();for(let O=0;O<N;O++){const L=M.getViewport(O);o.set(r.x*L.x,r.y*L.y,r.x*L.z,r.y*L.w),I.viewport(o),M.updateMatrices(k,O),n=M.getFrustum(),v(w,S,M.camera,k,this.type)}M.isPointLightShadow!==!0&&this.type===Lu&&x(M,S),M.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(C,_,T)};function x(y,w){const S=t.update(g);d.defines.VSM_SAMPLES!==y.blurSamples&&(d.defines.VSM_SAMPLES=y.blurSamples,f.defines.VSM_SAMPLES=y.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),y.mapPass===null&&(y.mapPass=new Va(i.x,i.y)),d.uniforms.shadow_pass.value=y.map.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,s.setRenderTarget(y.mapPass),s.clear(),s.renderBufferDirect(w,null,S,d,g,null),f.uniforms.shadow_pass.value=y.mapPass.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,s.setRenderTarget(y.map),s.clear(),s.renderBufferDirect(w,null,S,f,g,null)}function b(y,w,S,C,_,T){let I=null;const A=S.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(A!==void 0?I=A:I=S.isPointLight===!0?l:a,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const D=I.uuid,k=w.uuid;let M=c[D];M===void 0&&(M={},c[D]=M);let E=M[k];E===void 0&&(E=I.clone(),M[k]=E),I=E}return I.visible=w.visible,I.wireframe=w.wireframe,T===Lu?I.side=w.shadowSide!==null?w.shadowSide:w.side:I.side=w.shadowSide!==null?w.shadowSide:h[w.side],I.alphaMap=w.alphaMap,I.alphaTest=w.alphaTest,I.clipShadows=w.clipShadows,I.clippingPlanes=w.clippingPlanes,I.clipIntersection=w.clipIntersection,I.displacementMap=w.displacementMap,I.displacementScale=w.displacementScale,I.displacementBias=w.displacementBias,I.wireframeLinewidth=w.wireframeLinewidth,I.linewidth=w.linewidth,S.isPointLight===!0&&I.isMeshDistanceMaterial===!0&&(I.referencePosition.setFromMatrixPosition(S.matrixWorld),I.nearDistance=C,I.farDistance=_),I}function v(y,w,S,C,_){if(y.visible===!1)return;if(y.layers.test(w.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&_===Lu)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,y.matrixWorld);const A=t.update(y),D=y.material;if(Array.isArray(D)){const k=A.groups;for(let M=0,E=k.length;M<E;M++){const N=k[M],O=D[N.materialIndex];if(O&&O.visible){const L=b(y,O,C,S.near,S.far,_);s.renderBufferDirect(S,null,A,L,y,N)}}}else if(D.visible){const k=b(y,D,C,S.near,S.far,_);s.renderBufferDirect(S,null,A,k,y,null)}}const I=y.children;for(let A=0,D=I.length;A<D;A++)v(I[A],w,S,C,_)}}function aO(s,t,e){const n=e.isWebGL2;function i(){let V=!1;const st=new Xn;let Ft=null;const Zt=new Xn(0,0,0,0);return{setMask:function(ce){Ft!==ce&&!V&&(s.colorMask(ce,ce,ce,ce),Ft=ce)},setLocked:function(ce){V=ce},setClear:function(ce,ze,Gn,hs,aa){aa===!0&&(ce*=hs,ze*=hs,Gn*=hs),st.set(ce,ze,Gn,hs),Zt.equals(st)===!1&&(s.clearColor(ce,ze,Gn,hs),Zt.copy(st))},reset:function(){V=!1,Ft=null,Zt.set(-1,0,0,0)}}}function r(){let V=!1,st=null,Ft=null,Zt=null;return{setTest:function(ce){ce?yt(2929):vt(2929)},setMask:function(ce){st!==ce&&!V&&(s.depthMask(ce),st=ce)},setFunc:function(ce){if(Ft!==ce){switch(ce){case OD:s.depthFunc(512);break;case zD:s.depthFunc(519);break;case BD:s.depthFunc(513);break;case Rx:s.depthFunc(515);break;case UD:s.depthFunc(514);break;case VD:s.depthFunc(518);break;case WD:s.depthFunc(516);break;case GD:s.depthFunc(517);break;default:s.depthFunc(515)}Ft=ce}},setLocked:function(ce){V=ce},setClear:function(ce){Zt!==ce&&(s.clearDepth(ce),Zt=ce)},reset:function(){V=!1,st=null,Ft=null,Zt=null}}}function o(){let V=!1,st=null,Ft=null,Zt=null,ce=null,ze=null,Gn=null,hs=null,aa=null;return{setTest:function(on){V||(on?yt(2960):vt(2960))},setMask:function(on){st!==on&&!V&&(s.stencilMask(on),st=on)},setFunc:function(on,Br,li){(Ft!==on||Zt!==Br||ce!==li)&&(s.stencilFunc(on,Br,li),Ft=on,Zt=Br,ce=li)},setOp:function(on,Br,li){(ze!==on||Gn!==Br||hs!==li)&&(s.stencilOp(on,Br,li),ze=on,Gn=Br,hs=li)},setLocked:function(on){V=on},setClear:function(on){aa!==on&&(s.clearStencil(on),aa=on)},reset:function(){V=!1,st=null,Ft=null,Zt=null,ce=null,ze=null,Gn=null,hs=null,aa=null}}}const a=new i,l=new r,c=new o,u=new WeakMap,h=new WeakMap;let d={},f={},p=new WeakMap,g=[],m=null,x=!1,b=null,v=null,y=null,w=null,S=null,C=null,_=null,T=!1,I=null,A=null,D=null,k=null,M=null;const E=s.getParameter(35661);let N=!1,O=0;const L=s.getParameter(7938);L.indexOf("WebGL")!==-1?(O=parseFloat(/^WebGL (\d)/.exec(L)[1]),N=O>=1):L.indexOf("OpenGL ES")!==-1&&(O=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),N=O>=2);let $=null,W={};const q=s.getParameter(3088),H=s.getParameter(2978),X=new Xn().fromArray(q),it=new Xn().fromArray(H);function lt(V,st,Ft){const Zt=new Uint8Array(4),ce=s.createTexture();s.bindTexture(V,ce),s.texParameteri(V,10241,9728),s.texParameteri(V,10240,9728);for(let ze=0;ze<Ft;ze++)s.texImage2D(st+ze,0,6408,1,1,0,6408,5121,Zt);return ce}const Y={};Y[3553]=lt(3553,3553,1),Y[34067]=lt(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),yt(2929),l.setFunc(Rx),gt(!1),Ot(_1),yt(2884),_t(Ro);function yt(V){d[V]!==!0&&(s.enable(V),d[V]=!0)}function vt(V){d[V]!==!1&&(s.disable(V),d[V]=!1)}function xt(V,st){return f[V]!==st?(s.bindFramebuffer(V,st),f[V]=st,n&&(V===36009&&(f[36160]=st),V===36160&&(f[36009]=st)),!0):!1}function bt(V,st){let Ft=g,Zt=!1;if(V)if(Ft=p.get(st),Ft===void 0&&(Ft=[],p.set(st,Ft)),V.isWebGLMultipleRenderTargets){const ce=V.texture;if(Ft.length!==ce.length||Ft[0]!==36064){for(let ze=0,Gn=ce.length;ze<Gn;ze++)Ft[ze]=36064+ze;Ft.length=ce.length,Zt=!0}}else Ft[0]!==36064&&(Ft[0]=36064,Zt=!0);else Ft[0]!==1029&&(Ft[0]=1029,Zt=!0);Zt&&(e.isWebGL2?s.drawBuffers(Ft):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(Ft))}function Dt(V){return m!==V?(s.useProgram(V),m=V,!0):!1}const ct={[tc]:32774,[ED]:32778,[MD]:32779};if(n)ct[I1]=32775,ct[E1]=32776;else{const V=t.get("EXT_blend_minmax");V!==null&&(ct[I1]=V.MIN_EXT,ct[E1]=V.MAX_EXT)}const ht={[kD]:0,[AD]:1,[ND]:768,[u2]:770,[PD]:776,[LD]:774,[DD]:772,[RD]:769,[h2]:771,[FD]:775,[$D]:773};function _t(V,st,Ft,Zt,ce,ze,Gn,hs){if(V===Ro){x===!0&&(vt(3042),x=!1);return}if(x===!1&&(yt(3042),x=!0),V!==ID){if(V!==b||hs!==T){if((v!==tc||S!==tc)&&(s.blendEquation(32774),v=tc,S=tc),hs)switch(V){case fc:s.blendFuncSeparate(1,771,1,771);break;case S1:s.blendFunc(1,1);break;case C1:s.blendFuncSeparate(0,769,0,1);break;case T1:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case fc:s.blendFuncSeparate(770,771,1,771);break;case S1:s.blendFunc(770,1);break;case C1:s.blendFuncSeparate(0,769,0,1);break;case T1:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}y=null,w=null,C=null,_=null,b=V,T=hs}return}ce=ce||st,ze=ze||Ft,Gn=Gn||Zt,(st!==v||ce!==S)&&(s.blendEquationSeparate(ct[st],ct[ce]),v=st,S=ce),(Ft!==y||Zt!==w||ze!==C||Gn!==_)&&(s.blendFuncSeparate(ht[Ft],ht[Zt],ht[ze],ht[Gn]),y=Ft,w=Zt,C=ze,_=Gn),b=V,T=null}function Et(V,st){V.side===Ls?vt(2884):yt(2884);let Ft=V.side===Js;st&&(Ft=!Ft),gt(Ft),V.blending===fc&&V.transparent===!1?_t(Ro):_t(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),a.setMask(V.colorWrite);const Zt=V.stencilWrite;c.setTest(Zt),Zt&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),at(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?yt(32926):vt(32926)}function gt(V){I!==V&&(V?s.frontFace(2304):s.frontFace(2305),I=V)}function Ot(V){V!==CD?(yt(2884),V!==A&&(V===_1?s.cullFace(1029):V===TD?s.cullFace(1028):s.cullFace(1032))):vt(2884),A=V}function Pt(V){V!==D&&(N&&s.lineWidth(V),D=V)}function at(V,st,Ft){V?(yt(32823),(k!==st||M!==Ft)&&(s.polygonOffset(st,Ft),k=st,M=Ft)):vt(32823)}function Lt(V){V?yt(3089):vt(3089)}function re(V){V===void 0&&(V=33984+E-1),$!==V&&(s.activeTexture(V),$=V)}function B(V,st,Ft){Ft===void 0&&($===null?Ft=33984+E-1:Ft=$);let Zt=W[Ft];Zt===void 0&&(Zt={type:void 0,texture:void 0},W[Ft]=Zt),(Zt.type!==V||Zt.texture!==st)&&($!==Ft&&(s.activeTexture(Ft),$=Ft),s.bindTexture(V,st||Y[V]),Zt.type=V,Zt.texture=st)}function F(){const V=W[$];V!==void 0&&V.type!==void 0&&(s.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function rt(){try{s.compressedTexImage2D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function kt(){try{s.compressedTexImage3D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Rt(){try{s.texSubImage2D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function zt(){try{s.texSubImage3D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function te(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function j(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function nt(){try{s.texStorage2D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ut(){try{s.texStorage3D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function jt(){try{s.texImage2D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Vt(){try{s.texImage3D.apply(s,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ie(V){X.equals(V)===!1&&(s.scissor(V.x,V.y,V.z,V.w),X.copy(V))}function Xt(V){it.equals(V)===!1&&(s.viewport(V.x,V.y,V.z,V.w),it.copy(V))}function Se(V,st){let Ft=h.get(st);Ft===void 0&&(Ft=new WeakMap,h.set(st,Ft));let Zt=Ft.get(V);Zt===void 0&&(Zt=s.getUniformBlockIndex(st,V.name),Ft.set(V,Zt))}function Me(V,st){const Zt=h.get(st).get(V);u.get(V)!==Zt&&(s.uniformBlockBinding(st,Zt,V.__bindingPointIndex),u.set(V,Zt))}function ve(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},$=null,W={},f={},p=new WeakMap,g=[],m=null,x=!1,b=null,v=null,y=null,w=null,S=null,C=null,_=null,T=!1,I=null,A=null,D=null,k=null,M=null,X.set(0,0,s.canvas.width,s.canvas.height),it.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:yt,disable:vt,bindFramebuffer:xt,drawBuffers:bt,useProgram:Dt,setBlending:_t,setMaterial:Et,setFlipSided:gt,setCullFace:Ot,setLineWidth:Pt,setPolygonOffset:at,setScissorTest:Lt,activeTexture:re,bindTexture:B,unbindTexture:F,compressedTexImage2D:rt,compressedTexImage3D:kt,texImage2D:jt,texImage3D:Vt,updateUBOMapping:Se,uniformBlockBinding:Me,texStorage2D:nt,texStorage3D:Ut,texSubImage2D:Rt,texSubImage3D:zt,compressedTexSubImage2D:te,compressedTexSubImage3D:j,scissor:ie,viewport:Xt,reset:ve}}function lO(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(typeof navigator>"u"?"":navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(B,F){return x?new OffscreenCanvas(B,F):Cp("canvas")}function v(B,F,rt,kt){let Rt=1;if((B.width>kt||B.height>kt)&&(Rt=kt/Math.max(B.width,B.height)),Rt<1||F===!0)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap){const zt=F?Ox:Math.floor,te=zt(Rt*B.width),j=zt(Rt*B.height);g===void 0&&(g=b(te,j));const nt=rt?b(te,j):g;return nt.width=te,nt.height=j,nt.getContext("2d").drawImage(B,0,0,te,j),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+B.width+"x"+B.height+") to ("+te+"x"+j+")."),nt}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+B.width+"x"+B.height+")."),B;return B}function y(B){return t_(B.width)&&t_(B.height)}function w(B){return a?!1:B.wrapS!==qi||B.wrapT!==qi||B.minFilter!==Ns&&B.minFilter!==mi}function S(B,F){return B.generateMipmaps&&F&&B.minFilter!==Ns&&B.minFilter!==mi}function C(B){s.generateMipmap(B)}function _(B,F,rt,kt,Rt=!1){if(a===!1)return F;if(B!==null){if(s[B]!==void 0)return s[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let zt=F;return F===6403&&(rt===5126&&(zt=33326),rt===5131&&(zt=33325),rt===5121&&(zt=33321)),F===33319&&(rt===5126&&(zt=33328),rt===5131&&(zt=33327),rt===5121&&(zt=33323)),F===6408&&(rt===5126&&(zt=34836),rt===5131&&(zt=34842),rt===5121&&(zt=kt===pn&&Rt===!1?35907:32856),rt===32819&&(zt=32854),rt===32820&&(zt=32855)),(zt===33325||zt===33326||zt===33327||zt===33328||zt===34842||zt===34836)&&t.get("EXT_color_buffer_float"),zt}function T(B,F,rt){return S(B,rt)===!0||B.isFramebufferTexture&&B.minFilter!==Ns&&B.minFilter!==mi?Math.log2(Math.max(F.width,F.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?F.mipmaps.length:1}function I(B){return B===Ns||B===M1||B===k1?9728:9729}function A(B){const F=B.target;F.removeEventListener("dispose",A),k(F),F.isVideoTexture&&p.delete(F)}function D(B){const F=B.target;F.removeEventListener("dispose",D),E(F)}function k(B){const F=n.get(B);if(F.__webglInit===void 0)return;const rt=B.source,kt=m.get(rt);if(kt){const Rt=kt[F.__cacheKey];Rt.usedTimes--,Rt.usedTimes===0&&M(B),Object.keys(kt).length===0&&m.delete(rt)}n.remove(B)}function M(B){const F=n.get(B);s.deleteTexture(F.__webglTexture);const rt=B.source,kt=m.get(rt);delete kt[F.__cacheKey],o.memory.textures--}function E(B){const F=B.texture,rt=n.get(B),kt=n.get(F);if(kt.__webglTexture!==void 0&&(s.deleteTexture(kt.__webglTexture),o.memory.textures--),B.depthTexture&&B.depthTexture.dispose(),B.isWebGLCubeRenderTarget)for(let Rt=0;Rt<6;Rt++)s.deleteFramebuffer(rt.__webglFramebuffer[Rt]),rt.__webglDepthbuffer&&s.deleteRenderbuffer(rt.__webglDepthbuffer[Rt]);else{if(s.deleteFramebuffer(rt.__webglFramebuffer),rt.__webglDepthbuffer&&s.deleteRenderbuffer(rt.__webglDepthbuffer),rt.__webglMultisampledFramebuffer&&s.deleteFramebuffer(rt.__webglMultisampledFramebuffer),rt.__webglColorRenderbuffer)for(let Rt=0;Rt<rt.__webglColorRenderbuffer.length;Rt++)rt.__webglColorRenderbuffer[Rt]&&s.deleteRenderbuffer(rt.__webglColorRenderbuffer[Rt]);rt.__webglDepthRenderbuffer&&s.deleteRenderbuffer(rt.__webglDepthRenderbuffer)}if(B.isWebGLMultipleRenderTargets)for(let Rt=0,zt=F.length;Rt<zt;Rt++){const te=n.get(F[Rt]);te.__webglTexture&&(s.deleteTexture(te.__webglTexture),o.memory.textures--),n.remove(F[Rt])}n.remove(F),n.remove(B)}let N=0;function O(){N=0}function L(){const B=N;return B>=l&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+l),N+=1,B}function $(B){const F=[];return F.push(B.wrapS),F.push(B.wrapT),F.push(B.wrapR||0),F.push(B.magFilter),F.push(B.minFilter),F.push(B.anisotropy),F.push(B.internalFormat),F.push(B.format),F.push(B.type),F.push(B.generateMipmaps),F.push(B.premultiplyAlpha),F.push(B.flipY),F.push(B.unpackAlignment),F.push(B.encoding),F.join()}function W(B,F){const rt=n.get(B);if(B.isVideoTexture&&Lt(B),B.isRenderTargetTexture===!1&&B.version>0&&rt.__version!==B.version){const kt=B.image;if(kt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(kt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{vt(rt,B,F);return}}e.bindTexture(3553,rt.__webglTexture,33984+F)}function q(B,F){const rt=n.get(B);if(B.version>0&&rt.__version!==B.version){vt(rt,B,F);return}e.bindTexture(35866,rt.__webglTexture,33984+F)}function H(B,F){const rt=n.get(B);if(B.version>0&&rt.__version!==B.version){vt(rt,B,F);return}e.bindTexture(32879,rt.__webglTexture,33984+F)}function X(B,F){const rt=n.get(B);if(B.version>0&&rt.__version!==B.version){xt(rt,B,F);return}e.bindTexture(34067,rt.__webglTexture,33984+F)}const it={[Lx]:10497,[qi]:33071,[Fx]:33648},lt={[Ns]:9728,[M1]:9984,[k1]:9986,[mi]:9729,[JD]:9985,[bm]:9987};function Y(B,F,rt){if(rt?(s.texParameteri(B,10242,it[F.wrapS]),s.texParameteri(B,10243,it[F.wrapT]),(B===32879||B===35866)&&s.texParameteri(B,32882,it[F.wrapR]),s.texParameteri(B,10240,lt[F.magFilter]),s.texParameteri(B,10241,lt[F.minFilter])):(s.texParameteri(B,10242,33071),s.texParameteri(B,10243,33071),(B===32879||B===35866)&&s.texParameteri(B,32882,33071),(F.wrapS!==qi||F.wrapT!==qi)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(B,10240,I(F.magFilter)),s.texParameteri(B,10241,I(F.minFilter)),F.minFilter!==Ns&&F.minFilter!==mi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const kt=t.get("EXT_texture_filter_anisotropic");if(F.type===Ia&&t.has("OES_texture_float_linear")===!1||a===!1&&F.type===nh&&t.has("OES_texture_half_float_linear")===!1)return;(F.anisotropy>1||n.get(F).__currentAnisotropy)&&(s.texParameterf(B,kt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(F.anisotropy,i.getMaxAnisotropy())),n.get(F).__currentAnisotropy=F.anisotropy)}}function yt(B,F){let rt=!1;B.__webglInit===void 0&&(B.__webglInit=!0,F.addEventListener("dispose",A));const kt=F.source;let Rt=m.get(kt);Rt===void 0&&(Rt={},m.set(kt,Rt));const zt=$(F);if(zt!==B.__cacheKey){Rt[zt]===void 0&&(Rt[zt]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,rt=!0),Rt[zt].usedTimes++;const te=Rt[B.__cacheKey];te!==void 0&&(Rt[B.__cacheKey].usedTimes--,te.usedTimes===0&&M(F)),B.__cacheKey=zt,B.__webglTexture=Rt[zt].texture}return rt}function vt(B,F,rt){let kt=3553;(F.isDataArrayTexture||F.isCompressedArrayTexture)&&(kt=35866),F.isData3DTexture&&(kt=32879);const Rt=yt(B,F),zt=F.source;e.bindTexture(kt,B.__webglTexture,33984+rt);const te=n.get(zt);if(zt.version!==te.__version||Rt===!0){e.activeTexture(33984+rt),s.pixelStorei(37440,F.flipY),s.pixelStorei(37441,F.premultiplyAlpha),s.pixelStorei(3317,F.unpackAlignment),s.pixelStorei(37443,0);const j=w(F)&&y(F.image)===!1;let nt=v(F.image,j,!1,u);nt=re(F,nt);const Ut=y(nt)||a,jt=r.convert(F.format,F.encoding);let Vt=r.convert(F.type),ie=_(F.internalFormat,jt,Vt,F.encoding,F.isVideoTexture);Y(kt,F,Ut);let Xt;const Se=F.mipmaps,Me=a&&F.isVideoTexture!==!0,ve=te.__version===void 0||Rt===!0,V=T(F,nt,Ut);if(F.isDepthTexture)ie=6402,a?F.type===Ia?ie=36012:F.type===Ta?ie=33190:F.type===pc?ie=35056:ie=33189:F.type===Ia&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),F.format===Da&&ie===6402&&F.type!==f2&&F.type!==Ta&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),F.type=Ta,Vt=r.convert(F.type)),F.format===Ec&&ie===6402&&(ie=34041,F.type!==pc&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),F.type=pc,Vt=r.convert(F.type))),ve&&(Me?e.texStorage2D(3553,1,ie,nt.width,nt.height):e.texImage2D(3553,0,ie,nt.width,nt.height,0,jt,Vt,null));else if(F.isDataTexture)if(Se.length>0&&Ut){Me&&ve&&e.texStorage2D(3553,V,ie,Se[0].width,Se[0].height);for(let st=0,Ft=Se.length;st<Ft;st++)Xt=Se[st],Me?e.texSubImage2D(3553,st,0,0,Xt.width,Xt.height,jt,Vt,Xt.data):e.texImage2D(3553,st,ie,Xt.width,Xt.height,0,jt,Vt,Xt.data);F.generateMipmaps=!1}else Me?(ve&&e.texStorage2D(3553,V,ie,nt.width,nt.height),e.texSubImage2D(3553,0,0,0,nt.width,nt.height,jt,Vt,nt.data)):e.texImage2D(3553,0,ie,nt.width,nt.height,0,jt,Vt,nt.data);else if(F.isCompressedTexture)if(F.isCompressedArrayTexture){Me&&ve&&e.texStorage3D(35866,V,ie,Se[0].width,Se[0].height,nt.depth);for(let st=0,Ft=Se.length;st<Ft;st++)Xt=Se[st],F.format!==ji?jt!==null?Me?e.compressedTexSubImage3D(35866,st,0,0,0,Xt.width,Xt.height,nt.depth,jt,Xt.data,0,0):e.compressedTexImage3D(35866,st,ie,Xt.width,Xt.height,nt.depth,0,Xt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Me?e.texSubImage3D(35866,st,0,0,0,Xt.width,Xt.height,nt.depth,jt,Vt,Xt.data):e.texImage3D(35866,st,ie,Xt.width,Xt.height,nt.depth,0,jt,Vt,Xt.data)}else{Me&&ve&&e.texStorage2D(3553,V,ie,Se[0].width,Se[0].height);for(let st=0,Ft=Se.length;st<Ft;st++)Xt=Se[st],F.format!==ji?jt!==null?Me?e.compressedTexSubImage2D(3553,st,0,0,Xt.width,Xt.height,jt,Xt.data):e.compressedTexImage2D(3553,st,ie,Xt.width,Xt.height,0,Xt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Me?e.texSubImage2D(3553,st,0,0,Xt.width,Xt.height,jt,Vt,Xt.data):e.texImage2D(3553,st,ie,Xt.width,Xt.height,0,jt,Vt,Xt.data)}else if(F.isDataArrayTexture)Me?(ve&&e.texStorage3D(35866,V,ie,nt.width,nt.height,nt.depth),e.texSubImage3D(35866,0,0,0,0,nt.width,nt.height,nt.depth,jt,Vt,nt.data)):e.texImage3D(35866,0,ie,nt.width,nt.height,nt.depth,0,jt,Vt,nt.data);else if(F.isData3DTexture)Me?(ve&&e.texStorage3D(32879,V,ie,nt.width,nt.height,nt.depth),e.texSubImage3D(32879,0,0,0,0,nt.width,nt.height,nt.depth,jt,Vt,nt.data)):e.texImage3D(32879,0,ie,nt.width,nt.height,nt.depth,0,jt,Vt,nt.data);else if(F.isFramebufferTexture){if(ve)if(Me)e.texStorage2D(3553,V,ie,nt.width,nt.height);else{let st=nt.width,Ft=nt.height;for(let Zt=0;Zt<V;Zt++)e.texImage2D(3553,Zt,ie,st,Ft,0,jt,Vt,null),st>>=1,Ft>>=1}}else if(Se.length>0&&Ut){Me&&ve&&e.texStorage2D(3553,V,ie,Se[0].width,Se[0].height);for(let st=0,Ft=Se.length;st<Ft;st++)Xt=Se[st],Me?e.texSubImage2D(3553,st,0,0,jt,Vt,Xt):e.texImage2D(3553,st,ie,jt,Vt,Xt);F.generateMipmaps=!1}else Me?(ve&&e.texStorage2D(3553,V,ie,nt.width,nt.height),e.texSubImage2D(3553,0,0,0,jt,Vt,nt)):e.texImage2D(3553,0,ie,jt,Vt,nt);S(F,Ut)&&C(kt),te.__version=zt.version,F.onUpdate&&F.onUpdate(F)}B.__version=F.version}function xt(B,F,rt){if(F.image.length!==6)return;const kt=yt(B,F),Rt=F.source;e.bindTexture(34067,B.__webglTexture,33984+rt);const zt=n.get(Rt);if(Rt.version!==zt.__version||kt===!0){e.activeTexture(33984+rt),s.pixelStorei(37440,F.flipY),s.pixelStorei(37441,F.premultiplyAlpha),s.pixelStorei(3317,F.unpackAlignment),s.pixelStorei(37443,0);const te=F.isCompressedTexture||F.image[0].isCompressedTexture,j=F.image[0]&&F.image[0].isDataTexture,nt=[];for(let st=0;st<6;st++)!te&&!j?nt[st]=v(F.image[st],!1,!0,c):nt[st]=j?F.image[st].image:F.image[st],nt[st]=re(F,nt[st]);const Ut=nt[0],jt=y(Ut)||a,Vt=r.convert(F.format,F.encoding),ie=r.convert(F.type),Xt=_(F.internalFormat,Vt,ie,F.encoding),Se=a&&F.isVideoTexture!==!0,Me=zt.__version===void 0||kt===!0;let ve=T(F,Ut,jt);Y(34067,F,jt);let V;if(te){Se&&Me&&e.texStorage2D(34067,ve,Xt,Ut.width,Ut.height);for(let st=0;st<6;st++){V=nt[st].mipmaps;for(let Ft=0;Ft<V.length;Ft++){const Zt=V[Ft];F.format!==ji?Vt!==null?Se?e.compressedTexSubImage2D(34069+st,Ft,0,0,Zt.width,Zt.height,Vt,Zt.data):e.compressedTexImage2D(34069+st,Ft,Xt,Zt.width,Zt.height,0,Zt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Se?e.texSubImage2D(34069+st,Ft,0,0,Zt.width,Zt.height,Vt,ie,Zt.data):e.texImage2D(34069+st,Ft,Xt,Zt.width,Zt.height,0,Vt,ie,Zt.data)}}}else{V=F.mipmaps,Se&&Me&&(V.length>0&&ve++,e.texStorage2D(34067,ve,Xt,nt[0].width,nt[0].height));for(let st=0;st<6;st++)if(j){Se?e.texSubImage2D(34069+st,0,0,0,nt[st].width,nt[st].height,Vt,ie,nt[st].data):e.texImage2D(34069+st,0,Xt,nt[st].width,nt[st].height,0,Vt,ie,nt[st].data);for(let Ft=0;Ft<V.length;Ft++){const ce=V[Ft].image[st].image;Se?e.texSubImage2D(34069+st,Ft+1,0,0,ce.width,ce.height,Vt,ie,ce.data):e.texImage2D(34069+st,Ft+1,Xt,ce.width,ce.height,0,Vt,ie,ce.data)}}else{Se?e.texSubImage2D(34069+st,0,0,0,Vt,ie,nt[st]):e.texImage2D(34069+st,0,Xt,Vt,ie,nt[st]);for(let Ft=0;Ft<V.length;Ft++){const Zt=V[Ft];Se?e.texSubImage2D(34069+st,Ft+1,0,0,Vt,ie,Zt.image[st]):e.texImage2D(34069+st,Ft+1,Xt,Vt,ie,Zt.image[st])}}}S(F,jt)&&C(34067),zt.__version=Rt.version,F.onUpdate&&F.onUpdate(F)}B.__version=F.version}function bt(B,F,rt,kt,Rt){const zt=r.convert(rt.format,rt.encoding),te=r.convert(rt.type),j=_(rt.internalFormat,zt,te,rt.encoding);n.get(F).__hasExternalTextures||(Rt===32879||Rt===35866?e.texImage3D(Rt,0,j,F.width,F.height,F.depth,0,zt,te,null):e.texImage2D(Rt,0,j,F.width,F.height,0,zt,te,null)),e.bindFramebuffer(36160,B),at(F)?d.framebufferTexture2DMultisampleEXT(36160,kt,Rt,n.get(rt).__webglTexture,0,Pt(F)):(Rt===3553||Rt>=34069&&Rt<=34074)&&s.framebufferTexture2D(36160,kt,Rt,n.get(rt).__webglTexture,0),e.bindFramebuffer(36160,null)}function Dt(B,F,rt){if(s.bindRenderbuffer(36161,B),F.depthBuffer&&!F.stencilBuffer){let kt=33189;if(rt||at(F)){const Rt=F.depthTexture;Rt&&Rt.isDepthTexture&&(Rt.type===Ia?kt=36012:Rt.type===Ta&&(kt=33190));const zt=Pt(F);at(F)?d.renderbufferStorageMultisampleEXT(36161,zt,kt,F.width,F.height):s.renderbufferStorageMultisample(36161,zt,kt,F.width,F.height)}else s.renderbufferStorage(36161,kt,F.width,F.height);s.framebufferRenderbuffer(36160,36096,36161,B)}else if(F.depthBuffer&&F.stencilBuffer){const kt=Pt(F);rt&&at(F)===!1?s.renderbufferStorageMultisample(36161,kt,35056,F.width,F.height):at(F)?d.renderbufferStorageMultisampleEXT(36161,kt,35056,F.width,F.height):s.renderbufferStorage(36161,34041,F.width,F.height),s.framebufferRenderbuffer(36160,33306,36161,B)}else{const kt=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let Rt=0;Rt<kt.length;Rt++){const zt=kt[Rt],te=r.convert(zt.format,zt.encoding),j=r.convert(zt.type),nt=_(zt.internalFormat,te,j,zt.encoding),Ut=Pt(F);rt&&at(F)===!1?s.renderbufferStorageMultisample(36161,Ut,nt,F.width,F.height):at(F)?d.renderbufferStorageMultisampleEXT(36161,Ut,nt,F.width,F.height):s.renderbufferStorage(36161,nt,F.width,F.height)}}s.bindRenderbuffer(36161,null)}function ct(B,F){if(F&&F.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,B),!(F.depthTexture&&F.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(F.depthTexture).__webglTexture||F.depthTexture.image.width!==F.width||F.depthTexture.image.height!==F.height)&&(F.depthTexture.image.width=F.width,F.depthTexture.image.height=F.height,F.depthTexture.needsUpdate=!0),W(F.depthTexture,0);const kt=n.get(F.depthTexture).__webglTexture,Rt=Pt(F);if(F.depthTexture.format===Da)at(F)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,kt,0,Rt):s.framebufferTexture2D(36160,36096,3553,kt,0);else if(F.depthTexture.format===Ec)at(F)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,kt,0,Rt):s.framebufferTexture2D(36160,33306,3553,kt,0);else throw new Error("Unknown depthTexture format")}function ht(B){const F=n.get(B),rt=B.isWebGLCubeRenderTarget===!0;if(B.depthTexture&&!F.__autoAllocateDepthBuffer){if(rt)throw new Error("target.depthTexture not supported in Cube render targets");ct(F.__webglFramebuffer,B)}else if(rt){F.__webglDepthbuffer=[];for(let kt=0;kt<6;kt++)e.bindFramebuffer(36160,F.__webglFramebuffer[kt]),F.__webglDepthbuffer[kt]=s.createRenderbuffer(),Dt(F.__webglDepthbuffer[kt],B,!1)}else e.bindFramebuffer(36160,F.__webglFramebuffer),F.__webglDepthbuffer=s.createRenderbuffer(),Dt(F.__webglDepthbuffer,B,!1);e.bindFramebuffer(36160,null)}function _t(B,F,rt){const kt=n.get(B);F!==void 0&&bt(kt.__webglFramebuffer,B,B.texture,36064,3553),rt!==void 0&&ht(B)}function Et(B){const F=B.texture,rt=n.get(B),kt=n.get(F);B.addEventListener("dispose",D),B.isWebGLMultipleRenderTargets!==!0&&(kt.__webglTexture===void 0&&(kt.__webglTexture=s.createTexture()),kt.__version=F.version,o.memory.textures++);const Rt=B.isWebGLCubeRenderTarget===!0,zt=B.isWebGLMultipleRenderTargets===!0,te=y(B)||a;if(Rt){rt.__webglFramebuffer=[];for(let j=0;j<6;j++)rt.__webglFramebuffer[j]=s.createFramebuffer()}else{if(rt.__webglFramebuffer=s.createFramebuffer(),zt)if(i.drawBuffers){const j=B.texture;for(let nt=0,Ut=j.length;nt<Ut;nt++){const jt=n.get(j[nt]);jt.__webglTexture===void 0&&(jt.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&B.samples>0&&at(B)===!1){const j=zt?F:[F];rt.__webglMultisampledFramebuffer=s.createFramebuffer(),rt.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,rt.__webglMultisampledFramebuffer);for(let nt=0;nt<j.length;nt++){const Ut=j[nt];rt.__webglColorRenderbuffer[nt]=s.createRenderbuffer(),s.bindRenderbuffer(36161,rt.__webglColorRenderbuffer[nt]);const jt=r.convert(Ut.format,Ut.encoding),Vt=r.convert(Ut.type),ie=_(Ut.internalFormat,jt,Vt,Ut.encoding,B.isXRRenderTarget===!0),Xt=Pt(B);s.renderbufferStorageMultisample(36161,Xt,ie,B.width,B.height),s.framebufferRenderbuffer(36160,36064+nt,36161,rt.__webglColorRenderbuffer[nt])}s.bindRenderbuffer(36161,null),B.depthBuffer&&(rt.__webglDepthRenderbuffer=s.createRenderbuffer(),Dt(rt.__webglDepthRenderbuffer,B,!0)),e.bindFramebuffer(36160,null)}}if(Rt){e.bindTexture(34067,kt.__webglTexture),Y(34067,F,te);for(let j=0;j<6;j++)bt(rt.__webglFramebuffer[j],B,F,36064,34069+j);S(F,te)&&C(34067),e.unbindTexture()}else if(zt){const j=B.texture;for(let nt=0,Ut=j.length;nt<Ut;nt++){const jt=j[nt],Vt=n.get(jt);e.bindTexture(3553,Vt.__webglTexture),Y(3553,jt,te),bt(rt.__webglFramebuffer,B,jt,36064+nt,3553),S(jt,te)&&C(3553)}e.unbindTexture()}else{let j=3553;(B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(a?j=B.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(j,kt.__webglTexture),Y(j,F,te),bt(rt.__webglFramebuffer,B,F,36064,j),S(F,te)&&C(j),e.unbindTexture()}B.depthBuffer&&ht(B)}function gt(B){const F=y(B)||a,rt=B.isWebGLMultipleRenderTargets===!0?B.texture:[B.texture];for(let kt=0,Rt=rt.length;kt<Rt;kt++){const zt=rt[kt];if(S(zt,F)){const te=B.isWebGLCubeRenderTarget?34067:3553,j=n.get(zt).__webglTexture;e.bindTexture(te,j),C(te),e.unbindTexture()}}}function Ot(B){if(a&&B.samples>0&&at(B)===!1){const F=B.isWebGLMultipleRenderTargets?B.texture:[B.texture],rt=B.width,kt=B.height;let Rt=16384;const zt=[],te=B.stencilBuffer?33306:36096,j=n.get(B),nt=B.isWebGLMultipleRenderTargets===!0;if(nt)for(let Ut=0;Ut<F.length;Ut++)e.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Ut,36161,null),e.bindFramebuffer(36160,j.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Ut,3553,null,0);e.bindFramebuffer(36008,j.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,j.__webglFramebuffer);for(let Ut=0;Ut<F.length;Ut++){zt.push(36064+Ut),B.depthBuffer&&zt.push(te);const jt=j.__ignoreDepthValues!==void 0?j.__ignoreDepthValues:!1;if(jt===!1&&(B.depthBuffer&&(Rt|=256),B.stencilBuffer&&(Rt|=1024)),nt&&s.framebufferRenderbuffer(36008,36064,36161,j.__webglColorRenderbuffer[Ut]),jt===!0&&(s.invalidateFramebuffer(36008,[te]),s.invalidateFramebuffer(36009,[te])),nt){const Vt=n.get(F[Ut]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Vt,0)}s.blitFramebuffer(0,0,rt,kt,0,0,rt,kt,Rt,9728),f&&s.invalidateFramebuffer(36008,zt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),nt)for(let Ut=0;Ut<F.length;Ut++){e.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Ut,36161,j.__webglColorRenderbuffer[Ut]);const jt=n.get(F[Ut]).__webglTexture;e.bindFramebuffer(36160,j.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Ut,3553,jt,0)}e.bindFramebuffer(36009,j.__webglMultisampledFramebuffer)}}function Pt(B){return Math.min(h,B.samples)}function at(B){const F=n.get(B);return a&&B.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&F.__useRenderToTexture!==!1}function Lt(B){const F=o.render.frame;p.get(B)!==F&&(p.set(B,F),B.update())}function re(B,F){const rt=B.encoding,kt=B.format,Rt=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||B.format===Px||rt!==Ua&&(rt===pn?a===!1?t.has("EXT_sRGB")===!0&&kt===ji?(B.format=Px,B.minFilter=mi,B.generateMipmaps=!1):F=g2.sRGBToLinear(F):(kt!==ji||Rt!==Ba)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",rt)),F}this.allocateTextureUnit=L,this.resetTextureUnits=O,this.setTexture2D=W,this.setTexture2DArray=q,this.setTexture3D=H,this.setTextureCube=X,this.rebindTextures=_t,this.setupRenderTarget=Et,this.updateRenderTargetMipmap=gt,this.updateMultisampleRenderTarget=Ot,this.setupDepthRenderbuffer=ht,this.setupFrameBufferTexture=bt,this.useMultisampledRTT=at}function cO(s,t,e){const n=e.isWebGL2;function i(r,o=null){let a;if(r===Ba)return 5121;if(r===n$)return 32819;if(r===s$)return 32820;if(r===QD)return 5120;if(r===t$)return 5122;if(r===f2)return 5123;if(r===e$)return 5124;if(r===Ta)return 5125;if(r===Ia)return 5126;if(r===nh)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===i$)return 6406;if(r===ji)return 6408;if(r===o$)return 6409;if(r===a$)return 6410;if(r===Da)return 6402;if(r===Ec)return 34041;if(r===l$)return 6403;if(r===r$)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===Px)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===c$)return 36244;if(r===u$)return 33319;if(r===h$)return 33320;if(r===d$)return 36249;if(r===p0||r===m0||r===g0||r===x0)if(o===pn)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===p0)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===m0)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===g0)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===x0)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===p0)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===m0)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===g0)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===x0)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===A1||r===N1||r===R1||r===D1)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===A1)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===N1)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===R1)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===D1)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===f$)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===$1||r===L1)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===$1)return o===pn?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===L1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===F1||r===P1||r===O1||r===z1||r===B1||r===U1||r===V1||r===W1||r===G1||r===H1||r===q1||r===j1||r===X1||r===K1)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===F1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===P1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===O1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===z1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===B1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===U1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===V1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===W1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===G1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===H1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===q1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===j1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===X1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===K1)return o===pn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Y1)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===Y1)return o===pn?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===pc?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class uO extends gi{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Cf extends Kn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const hO={type:"move"};class H0{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Cf,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Cf,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new G,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new G),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Cf,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new G,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new G),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const m=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const b=new Cf;b.matrixAutoUpdate=!1,b.visible=!1,c.joints[g.jointName]=b,c.add(b)}const x=c.joints[g.jointName];m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=m.radius),x.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(hO)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class dO extends tr{constructor(t,e,n,i,r,o,a,l,c,u){if(u=u!==void 0?u:Da,u!==Da&&u!==Ec)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Da&&(n=Ta),n===void 0&&u===Ec&&(n=pc),super(null,i,r,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Ns,this.minFilter=l!==void 0?l:Ns,this.flipY=!1,this.generateMipmaps=!1}}class fO extends cl{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,d=null,f=null;const p=e.getContextAttributes();let g=null,m=null;const x=[],b=[],v=new gi;v.layers.enable(1),v.viewport=new Xn;const y=new gi;y.layers.enable(2),y.viewport=new Xn;const w=[v,y],S=new uO;S.layers.enable(1),S.layers.enable(2);let C=null,_=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let W=x[$];return W===void 0&&(W=new H0,x[$]=W),W.getTargetRaySpace()},this.getControllerGrip=function($){let W=x[$];return W===void 0&&(W=new H0,x[$]=W),W.getGripSpace()},this.getHand=function($){let W=x[$];return W===void 0&&(W=new H0,x[$]=W),W.getHandSpace()};function T($){const W=b.indexOf($.inputSource);if(W===-1)return;const q=x[W];q!==void 0&&q.dispatchEvent({type:$.type,data:$.inputSource})}function I(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",I),i.removeEventListener("inputsourceschange",A);for(let $=0;$<x.length;$++){const W=b[$];W!==null&&(b[$]=null,x[$].disconnect(W))}C=null,_=null,t.setRenderTarget(g),d=null,h=null,u=null,i=null,m=null,L.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){r=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function($){l=$},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function($){if(i=$,i!==null){if(g=t.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",I),i.addEventListener("inputsourceschange",A),p.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const W={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,W),i.updateRenderState({baseLayer:d}),m=new Va(d.framebufferWidth,d.framebufferHeight,{format:ji,type:Ba,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let W=null,q=null,H=null;p.depth&&(H=p.stencil?35056:33190,W=p.stencil?Ec:Da,q=p.stencil?pc:Ta);const X={colorFormat:32856,depthFormat:H,scaleFactor:r};u=new XRWebGLBinding(i,e),h=u.createProjectionLayer(X),i.updateRenderState({layers:[h]}),m=new Va(h.textureWidth,h.textureHeight,{format:ji,type:Ba,depthTexture:new dO(h.textureWidth,h.textureHeight,q,void 0,void 0,void 0,void 0,void 0,void 0,W),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const it=t.properties.get(m);it.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),L.setContext(i),L.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function A($){for(let W=0;W<$.removed.length;W++){const q=$.removed[W],H=b.indexOf(q);H>=0&&(b[H]=null,x[H].dispatchEvent({type:"disconnected",data:q}))}for(let W=0;W<$.added.length;W++){const q=$.added[W];let H=b.indexOf(q);if(H===-1){for(let it=0;it<x.length;it++)if(it>=b.length){b.push(q),H=it;break}else if(b[it]===null){b[it]=q,H=it;break}if(H===-1)break}const X=x[H];X&&X.dispatchEvent({type:"connected",data:q})}}const D=new G,k=new G;function M($,W,q){D.setFromMatrixPosition(W.matrixWorld),k.setFromMatrixPosition(q.matrixWorld);const H=D.distanceTo(k),X=W.projectionMatrix.elements,it=q.projectionMatrix.elements,lt=X[14]/(X[10]-1),Y=X[14]/(X[10]+1),yt=(X[9]+1)/X[5],vt=(X[9]-1)/X[5],xt=(X[8]-1)/X[0],bt=(it[8]+1)/it[0],Dt=lt*xt,ct=lt*bt,ht=H/(-xt+bt),_t=ht*-xt;W.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(_t),$.translateZ(ht),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const Et=lt+ht,gt=Y+ht,Ot=Dt-_t,Pt=ct+(H-_t),at=yt*Y/gt*Et,Lt=vt*Y/gt*Et;$.projectionMatrix.makePerspective(Ot,Pt,at,Lt,Et,gt)}function E($,W){W===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(W.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(i===null)return;S.near=y.near=v.near=$.near,S.far=y.far=v.far=$.far,(C!==S.near||_!==S.far)&&(i.updateRenderState({depthNear:S.near,depthFar:S.far}),C=S.near,_=S.far);const W=$.parent,q=S.cameras;E(S,W);for(let X=0;X<q.length;X++)E(q[X],W);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),$.matrix.copy(S.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const H=$.children;for(let X=0,it=H.length;X<it;X++)H[X].updateMatrixWorld(!0);q.length===2?M(S,v,y):S.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function($){h!==null&&(h.fixedFoveation=$),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=$)};let N=null;function O($,W){if(c=W.getViewerPose(l||o),f=W,c!==null){const q=c.views;d!==null&&(t.setRenderTargetFramebuffer(m,d.framebuffer),t.setRenderTarget(m));let H=!1;q.length!==S.cameras.length&&(S.cameras.length=0,H=!0);for(let X=0;X<q.length;X++){const it=q[X];let lt=null;if(d!==null)lt=d.getViewport(it);else{const yt=u.getViewSubImage(h,it);lt=yt.viewport,X===0&&(t.setRenderTargetTextures(m,yt.colorTexture,h.ignoreDepthValues?void 0:yt.depthStencilTexture),t.setRenderTarget(m))}let Y=w[X];Y===void 0&&(Y=new gi,Y.layers.enable(X),Y.viewport=new Xn,w[X]=Y),Y.matrix.fromArray(it.transform.matrix),Y.projectionMatrix.fromArray(it.projectionMatrix),Y.viewport.set(lt.x,lt.y,lt.width,lt.height),X===0&&S.matrix.copy(Y.matrix),H===!0&&S.cameras.push(Y)}}for(let q=0;q<x.length;q++){const H=b[q],X=x[q];H!==null&&X!==void 0&&X.update(H,W,l||o)}N&&N($,W),f=null}const L=new S2;L.setAnimationLoop(O),this.setAnimationLoop=function($){N=$},this.dispose=function(){}}}function pO(s,t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,b,v){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),h(g,m),m.isMeshPhysicalMaterial&&d(g,m,v)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),p(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,x,b):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Js&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Js&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const y=s.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*y}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let b;m.map?b=m.map:m.specularMap?b=m.specularMap:m.displacementMap?b=m.displacementMap:m.normalMap?b=m.normalMap:m.bumpMap?b=m.bumpMap:m.roughnessMap?b=m.roughnessMap:m.metalnessMap?b=m.metalnessMap:m.alphaMap?b=m.alphaMap:m.emissiveMap?b=m.emissiveMap:m.clearcoatMap?b=m.clearcoatMap:m.clearcoatNormalMap?b=m.clearcoatNormalMap:m.clearcoatRoughnessMap?b=m.clearcoatRoughnessMap:m.iridescenceMap?b=m.iridescenceMap:m.iridescenceThicknessMap?b=m.iridescenceThicknessMap:m.specularIntensityMap?b=m.specularIntensityMap:m.specularColorMap?b=m.specularColorMap:m.transmissionMap?b=m.transmissionMap:m.thicknessMap?b=m.thicknessMap:m.sheenColorMap?b=m.sheenColorMap:m.sheenRoughnessMap&&(b=m.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),g.uvTransform.value.copy(b.matrix));let v;m.aoMap?v=m.aoMap:m.lightMap&&(v=m.lightMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uv2Transform.value.copy(v.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,x,b){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=b*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let v;m.map?v=m.map:m.alphaMap&&(v=m.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===Js&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function mO(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(35375):0;function l(b,v){const y=v.program;n.uniformBlockBinding(b,y)}function c(b,v){let y=i[b.id];y===void 0&&(p(b),y=u(b),i[b.id]=y,b.addEventListener("dispose",m));const w=v.program;n.updateUBOMapping(b,w);const S=t.render.frame;r[b.id]!==S&&(d(b),r[b.id]=S)}function u(b){const v=h();b.__bindingPointIndex=v;const y=s.createBuffer(),w=b.__size,S=b.usage;return s.bindBuffer(35345,y),s.bufferData(35345,w,S),s.bindBuffer(35345,null),s.bindBufferBase(35345,v,y),y}function h(){for(let b=0;b<a;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(b){const v=i[b.id],y=b.uniforms,w=b.__cache;s.bindBuffer(35345,v);for(let S=0,C=y.length;S<C;S++){const _=y[S];if(f(_,S,w)===!0){const T=_.value,I=_.__offset;typeof T=="number"?(_.__data[0]=T,s.bufferSubData(35345,I,_.__data)):(_.value.isMatrix3?(_.__data[0]=_.value.elements[0],_.__data[1]=_.value.elements[1],_.__data[2]=_.value.elements[2],_.__data[3]=_.value.elements[0],_.__data[4]=_.value.elements[3],_.__data[5]=_.value.elements[4],_.__data[6]=_.value.elements[5],_.__data[7]=_.value.elements[0],_.__data[8]=_.value.elements[6],_.__data[9]=_.value.elements[7],_.__data[10]=_.value.elements[8],_.__data[11]=_.value.elements[0]):T.toArray(_.__data),s.bufferSubData(35345,I,_.__data))}}s.bindBuffer(35345,null)}function f(b,v,y){const w=b.value;if(y[v]===void 0)return typeof w=="number"?y[v]=w:y[v]=w.clone(),!0;if(typeof w=="number"){if(y[v]!==w)return y[v]=w,!0}else{const S=y[v];if(S.equals(w)===!1)return S.copy(w),!0}return!1}function p(b){const v=b.uniforms;let y=0;const w=16;let S=0;for(let C=0,_=v.length;C<_;C++){const T=v[C],I=g(T);if(T.__data=new Float32Array(I.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=y,C>0){S=y%w;const A=w-S;S!==0&&A-I.boundary<0&&(y+=w-S,T.__offset=y)}y+=I.storage}return S=y%w,S>0&&(y+=w-S),b.__size=y,b.__cache={},this}function g(b){const v=b.value,y={boundary:0,storage:0};return typeof v=="number"?(y.boundary=4,y.storage=4):v.isVector2?(y.boundary=8,y.storage=8):v.isVector3||v.isColor?(y.boundary=16,y.storage=12):v.isVector4?(y.boundary=16,y.storage=16):v.isMatrix3?(y.boundary=48,y.storage=48):v.isMatrix4?(y.boundary=64,y.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),y}function m(b){const v=b.target;v.removeEventListener("dispose",m);const y=o.indexOf(v.__bindingPointIndex);o.splice(y,1),s.deleteBuffer(i[v.id]),delete i[v.id],delete r[v.id]}function x(){for(const b in i)s.deleteBuffer(i[b]);o=[],i={},r={}}return{bind:l,update:c,dispose:x}}function gO(){const s=Cp("canvas");return s.style.display="block",s}function k2(s={}){this.isWebGLRenderer=!0;const t=s.canvas!==void 0?s.canvas:gO(),e=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;e!==null?u=e.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let h=null,d=null;const f=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ua,this.physicallyCorrectLights=!1,this.toneMapping=ro,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,x=0,b=0,v=null,y=-1,w=null;const S=new Xn,C=new Xn;let _=null,T=t.width,I=t.height,A=1,D=null,k=null;const M=new Xn(0,0,T,I),E=new Xn(0,0,T,I);let N=!1;const O=new jb;let L=!1,$=!1,W=null;const q=new Je,H=new Nt,X=new G,it={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function lt(){return v===null?A:1}let Y=e;function yt(U,dt){for(let St=0;St<U.length;St++){const ot=U[St],It=t.getContext(ot,dt);if(It!==null)return It}return null}try{const U={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Hb}`),t.addEventListener("webglcontextlost",ie,!1),t.addEventListener("webglcontextrestored",Xt,!1),t.addEventListener("webglcontextcreationerror",Se,!1),Y===null){const dt=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&dt.shift(),Y=yt(dt,U),Y===null)throw yt(dt)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Y.getShaderPrecisionFormat===void 0&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let vt,xt,bt,Dt,ct,ht,_t,Et,gt,Ot,Pt,at,Lt,re,B,F,rt,kt,Rt,zt,te,j,nt,Ut;function jt(){vt=new EF(Y),xt=new wF(Y,vt,s),vt.init(xt),j=new cO(Y,vt,xt),bt=new aO(Y,vt,xt),Dt=new AF,ct=new jP,ht=new lO(Y,vt,bt,ct,xt,j,Dt),_t=new SF(g),Et=new IF(g),gt=new z$(Y,xt),nt=new yF(Y,vt,gt,xt),Ot=new MF(Y,gt,Dt,nt),Pt=new $F(Y,Ot,gt,Dt),Rt=new DF(Y,xt,ht),F=new _F(ct),at=new qP(g,_t,Et,vt,xt,nt,F),Lt=new pO(g,ct),re=new KP,B=new eO(vt,xt),kt=new bF(g,_t,Et,bt,Pt,u,o),rt=new oO(g,Pt,xt),Ut=new mO(Y,Dt,xt,bt),zt=new vF(Y,vt,Dt,xt),te=new kF(Y,vt,Dt,xt),Dt.programs=at.programs,g.capabilities=xt,g.extensions=vt,g.properties=ct,g.renderLists=re,g.shadowMap=rt,g.state=bt,g.info=Dt}jt();const Vt=new fO(g,Y);this.xr=Vt,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){const U=vt.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=vt.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(U){U!==void 0&&(A=U,this.setSize(T,I,!1))},this.getSize=function(U){return U.set(T,I)},this.setSize=function(U,dt,St){if(Vt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=U,I=dt,t.width=Math.floor(U*A),t.height=Math.floor(dt*A),St!==!1&&(t.style.width=U+"px",t.style.height=dt+"px"),this.setViewport(0,0,U,dt)},this.getDrawingBufferSize=function(U){return U.set(T*A,I*A).floor()},this.setDrawingBufferSize=function(U,dt,St){T=U,I=dt,A=St,t.width=Math.floor(U*St),t.height=Math.floor(dt*St),this.setViewport(0,0,U,dt)},this.getCurrentViewport=function(U){return U.copy(S)},this.getViewport=function(U){return U.copy(M)},this.setViewport=function(U,dt,St,ot){U.isVector4?M.set(U.x,U.y,U.z,U.w):M.set(U,dt,St,ot),bt.viewport(S.copy(M).multiplyScalar(A).floor())},this.getScissor=function(U){return U.copy(E)},this.setScissor=function(U,dt,St,ot){U.isVector4?E.set(U.x,U.y,U.z,U.w):E.set(U,dt,St,ot),bt.scissor(C.copy(E).multiplyScalar(A).floor())},this.getScissorTest=function(){return N},this.setScissorTest=function(U){bt.setScissorTest(N=U)},this.setOpaqueSort=function(U){D=U},this.setTransparentSort=function(U){k=U},this.getClearColor=function(U){return U.copy(kt.getClearColor())},this.setClearColor=function(){kt.setClearColor.apply(kt,arguments)},this.getClearAlpha=function(){return kt.getClearAlpha()},this.setClearAlpha=function(){kt.setClearAlpha.apply(kt,arguments)},this.clear=function(U=!0,dt=!0,St=!0){let ot=0;U&&(ot|=16384),dt&&(ot|=256),St&&(ot|=1024),Y.clear(ot)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ie,!1),t.removeEventListener("webglcontextrestored",Xt,!1),t.removeEventListener("webglcontextcreationerror",Se,!1),re.dispose(),B.dispose(),ct.dispose(),_t.dispose(),Et.dispose(),Pt.dispose(),nt.dispose(),Ut.dispose(),at.dispose(),Vt.dispose(),Vt.removeEventListener("sessionstart",Zt),Vt.removeEventListener("sessionend",ce),W&&(W.dispose(),W=null),ze.stop()};function ie(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Xt(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const U=Dt.autoReset,dt=rt.enabled,St=rt.autoUpdate,ot=rt.needsUpdate,It=rt.type;jt(),Dt.autoReset=U,rt.enabled=dt,rt.autoUpdate=St,rt.needsUpdate=ot,rt.type=It}function Se(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function Me(U){const dt=U.target;dt.removeEventListener("dispose",Me),ve(dt)}function ve(U){V(U),ct.remove(U)}function V(U){const dt=ct.get(U).programs;dt!==void 0&&(dt.forEach(function(St){at.releaseProgram(St)}),U.isShaderMaterial&&at.releaseShaderCache(U))}this.renderBufferDirect=function(U,dt,St,ot,It,ue){dt===null&&(dt=it);const xe=It.isMesh&&It.matrixWorld.determinant()<0,Ie=JR(U,dt,St,ot,It);bt.setMaterial(ot,xe);let Ce=St.index;const Be=St.attributes.position;if(Ce===null){if(Be===void 0||Be.count===0)return}else if(Ce.count===0)return;let Ae=1;ot.wireframe===!0&&(Ce=Ot.getWireframeAttribute(St),Ae=2),nt.setup(It,ot,Ie,St,Ce);let $e,fn=zt;Ce!==null&&($e=gt.get(Ce),fn=te,fn.setIndex($e));const la=Ce!==null?Ce.count:Be.count,Il=St.drawRange.start*Ae,El=St.drawRange.count*Ae,cr=ue!==null?ue.start*Ae:0,Ue=ue!==null?ue.count*Ae:1/0,Ml=Math.max(Il,cr),Tn=Math.min(la,Il+El,cr+Ue)-1,ci=Math.max(0,Tn-Ml+1);if(ci!==0){if(It.isMesh)ot.wireframe===!0?(bt.setLineWidth(ot.wireframeLinewidth*lt()),fn.setMode(1)):fn.setMode(4);else if(It.isLine){let bo=ot.linewidth;bo===void 0&&(bo=1),bt.setLineWidth(bo*lt()),It.isLineSegments?fn.setMode(1):It.isLineLoop?fn.setMode(2):fn.setMode(3)}else It.isPoints?fn.setMode(0):It.isSprite&&fn.setMode(4);if(It.isInstancedMesh)fn.renderInstances(Ml,ci,It.count);else if(St.isInstancedBufferGeometry){const bo=Math.min(St.instanceCount,St._maxInstanceCount);fn.renderInstances(Ml,ci,bo)}else fn.render(Ml,ci)}},this.compile=function(U,dt){function St(ot,It,ue){ot.transparent===!0&&ot.side===Ls?(ot.side=Js,ot.needsUpdate=!0,li(ot,It,ue),ot.side=Uo,ot.needsUpdate=!0,li(ot,It,ue),ot.side=Ls):li(ot,It,ue)}d=B.get(U),d.init(),p.push(d),U.traverseVisible(function(ot){ot.isLight&&ot.layers.test(dt.layers)&&(d.pushLight(ot),ot.castShadow&&d.pushShadow(ot))}),d.setupLights(g.physicallyCorrectLights),U.traverse(function(ot){const It=ot.material;if(It)if(Array.isArray(It))for(let ue=0;ue<It.length;ue++){const xe=It[ue];St(xe,U,ot)}else St(It,U,ot)}),p.pop(),d=null};let st=null;function Ft(U){st&&st(U)}function Zt(){ze.stop()}function ce(){ze.start()}const ze=new S2;ze.setAnimationLoop(Ft),typeof self<"u"&&ze.setContext(self),this.setAnimationLoop=function(U){st=U,Vt.setAnimationLoop(U),U===null?ze.stop():ze.start()},Vt.addEventListener("sessionstart",Zt),Vt.addEventListener("sessionend",ce),this.render=function(U,dt){if(dt!==void 0&&dt.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),dt.parent===null&&dt.matrixWorldAutoUpdate===!0&&dt.updateMatrixWorld(),Vt.enabled===!0&&Vt.isPresenting===!0&&(Vt.cameraAutoUpdate===!0&&Vt.updateCamera(dt),dt=Vt.getCamera()),U.isScene===!0&&U.onBeforeRender(g,U,dt,v),d=B.get(U,p.length),d.init(),p.push(d),q.multiplyMatrices(dt.projectionMatrix,dt.matrixWorldInverse),O.setFromProjectionMatrix(q),$=this.localClippingEnabled,L=F.init(this.clippingPlanes,$,dt),h=re.get(U,f.length),h.init(),f.push(h),Gn(U,dt,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(D,k),L===!0&&F.beginShadows();const St=d.state.shadowsArray;if(rt.render(St,U,dt),L===!0&&F.endShadows(),this.info.autoReset===!0&&this.info.reset(),kt.render(h,U),d.setupLights(g.physicallyCorrectLights),dt.isArrayCamera){const ot=dt.cameras;for(let It=0,ue=ot.length;It<ue;It++){const xe=ot[It];hs(h,U,xe,xe.viewport)}}else hs(h,U,dt);v!==null&&(ht.updateMultisampleRenderTarget(v),ht.updateRenderTargetMipmap(v)),U.isScene===!0&&U.onAfterRender(g,U,dt),nt.resetDefaultState(),y=-1,w=null,p.pop(),p.length>0?d=p[p.length-1]:d=null,f.pop(),f.length>0?h=f[f.length-1]:h=null};function Gn(U,dt,St,ot){if(U.visible===!1)return;if(U.layers.test(dt.layers)){if(U.isGroup)St=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(dt);else if(U.isLight)d.pushLight(U),U.castShadow&&d.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||O.intersectsSprite(U)){ot&&X.setFromMatrixPosition(U.matrixWorld).applyMatrix4(q);const xe=Pt.update(U),Ie=U.material;Ie.visible&&h.push(U,xe,Ie,St,X.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(U.isSkinnedMesh&&U.skeleton.frame!==Dt.render.frame&&(U.skeleton.update(),U.skeleton.frame=Dt.render.frame),!U.frustumCulled||O.intersectsObject(U))){ot&&X.setFromMatrixPosition(U.matrixWorld).applyMatrix4(q);const xe=Pt.update(U),Ie=U.material;if(Array.isArray(Ie)){const Ce=xe.groups;for(let Be=0,Ae=Ce.length;Be<Ae;Be++){const $e=Ce[Be],fn=Ie[$e.materialIndex];fn&&fn.visible&&h.push(U,xe,fn,St,X.z,$e)}}else Ie.visible&&h.push(U,xe,Ie,St,X.z,null)}}const ue=U.children;for(let xe=0,Ie=ue.length;xe<Ie;xe++)Gn(ue[xe],dt,St,ot)}function hs(U,dt,St,ot){const It=U.opaque,ue=U.transmissive,xe=U.transparent;d.setupLightsView(St),ue.length>0&&aa(It,dt,St),ot&&bt.viewport(S.copy(ot)),It.length>0&&on(It,dt,St),ue.length>0&&on(ue,dt,St),xe.length>0&&on(xe,dt,St),bt.buffers.depth.setTest(!0),bt.buffers.depth.setMask(!0),bt.buffers.color.setMask(!0),bt.setPolygonOffset(!1)}function aa(U,dt,St){const ot=xt.isWebGL2;W===null&&(W=new Va(1,1,{generateMipmaps:!0,type:vt.has("EXT_color_buffer_half_float")?nh:Ba,minFilter:bm,samples:ot&&r===!0?4:0})),g.getDrawingBufferSize(H),ot?W.setSize(H.x,H.y):W.setSize(Ox(H.x),Ox(H.y));const It=g.getRenderTarget();g.setRenderTarget(W),g.clear();const ue=g.toneMapping;g.toneMapping=ro,on(U,dt,St),g.toneMapping=ue,ht.updateMultisampleRenderTarget(W),ht.updateRenderTargetMipmap(W),g.setRenderTarget(It)}function on(U,dt,St){const ot=dt.isScene===!0?dt.overrideMaterial:null;for(let It=0,ue=U.length;It<ue;It++){const xe=U[It],Ie=xe.object,Ce=xe.geometry,Be=ot===null?xe.material:ot,Ae=xe.group;Ie.layers.test(St.layers)&&Br(Ie,dt,St,Ce,Be,Ae)}}function Br(U,dt,St,ot,It,ue){U.onBeforeRender(g,dt,St,ot,It,ue),U.modelViewMatrix.multiplyMatrices(St.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),It.onBeforeRender(g,dt,St,ot,U,ue),It.transparent===!0&&It.side===Ls?(It.side=Js,It.needsUpdate=!0,g.renderBufferDirect(St,dt,ot,It,U,ue),It.side=Uo,It.needsUpdate=!0,g.renderBufferDirect(St,dt,ot,It,U,ue),It.side=Ls):g.renderBufferDirect(St,dt,ot,It,U,ue),U.onAfterRender(g,dt,St,ot,It,ue)}function li(U,dt,St){dt.isScene!==!0&&(dt=it);const ot=ct.get(U),It=d.state.lights,ue=d.state.shadowsArray,xe=It.state.version,Ie=at.getParameters(U,It.state,ue,dt,St),Ce=at.getProgramCacheKey(Ie);let Be=ot.programs;ot.environment=U.isMeshStandardMaterial?dt.environment:null,ot.fog=dt.fog,ot.envMap=(U.isMeshStandardMaterial?Et:_t).get(U.envMap||ot.environment),Be===void 0&&(U.addEventListener("dispose",Me),Be=new Map,ot.programs=Be);let Ae=Be.get(Ce);if(Ae!==void 0){if(ot.currentProgram===Ae&&ot.lightsStateVersion===xe)return p1(U,Ie),Ae}else Ie.uniforms=at.getUniforms(U),U.onBuild(St,Ie,g),U.onBeforeCompile(Ie,g),Ae=at.acquireProgram(Ie,Ce),Be.set(Ce,Ae),ot.uniforms=Ie.uniforms;const $e=ot.uniforms;(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&($e.clippingPlanes=F.uniform),p1(U,Ie),ot.needsLights=tD(U),ot.lightsStateVersion=xe,ot.needsLights&&($e.ambientLightColor.value=It.state.ambient,$e.lightProbe.value=It.state.probe,$e.directionalLights.value=It.state.directional,$e.directionalLightShadows.value=It.state.directionalShadow,$e.spotLights.value=It.state.spot,$e.spotLightShadows.value=It.state.spotShadow,$e.rectAreaLights.value=It.state.rectArea,$e.ltc_1.value=It.state.rectAreaLTC1,$e.ltc_2.value=It.state.rectAreaLTC2,$e.pointLights.value=It.state.point,$e.pointLightShadows.value=It.state.pointShadow,$e.hemisphereLights.value=It.state.hemi,$e.directionalShadowMap.value=It.state.directionalShadowMap,$e.directionalShadowMatrix.value=It.state.directionalShadowMatrix,$e.spotShadowMap.value=It.state.spotShadowMap,$e.spotLightMatrix.value=It.state.spotLightMatrix,$e.spotLightMap.value=It.state.spotLightMap,$e.pointShadowMap.value=It.state.pointShadowMap,$e.pointShadowMatrix.value=It.state.pointShadowMatrix);const fn=Ae.getUniforms(),la=up.seqWithValue(fn.seq,$e);return ot.currentProgram=Ae,ot.uniformsList=la,Ae}function p1(U,dt){const St=ct.get(U);St.outputEncoding=dt.outputEncoding,St.instancing=dt.instancing,St.skinning=dt.skinning,St.morphTargets=dt.morphTargets,St.morphNormals=dt.morphNormals,St.morphColors=dt.morphColors,St.morphTargetsCount=dt.morphTargetsCount,St.numClippingPlanes=dt.numClippingPlanes,St.numIntersection=dt.numClipIntersection,St.vertexAlphas=dt.vertexAlphas,St.vertexTangents=dt.vertexTangents,St.toneMapping=dt.toneMapping}function JR(U,dt,St,ot,It){dt.isScene!==!0&&(dt=it),ht.resetTextureUnits();const ue=dt.fog,xe=ot.isMeshStandardMaterial?dt.environment:null,Ie=v===null?g.outputEncoding:v.isXRRenderTarget===!0?v.texture.encoding:Ua,Ce=(ot.isMeshStandardMaterial?Et:_t).get(ot.envMap||xe),Be=ot.vertexColors===!0&&!!St.attributes.color&&St.attributes.color.itemSize===4,Ae=!!ot.normalMap&&!!St.attributes.tangent,$e=!!St.morphAttributes.position,fn=!!St.morphAttributes.normal,la=!!St.morphAttributes.color,Il=ot.toneMapped?g.toneMapping:ro,El=St.morphAttributes.position||St.morphAttributes.normal||St.morphAttributes.color,cr=El!==void 0?El.length:0,Ue=ct.get(ot),Ml=d.state.lights;if(L===!0&&($===!0||U!==w)){const qs=U===w&&ot.id===y;F.setState(ot,U,qs)}let Tn=!1;ot.version===Ue.__version?(Ue.needsLights&&Ue.lightsStateVersion!==Ml.state.version||Ue.outputEncoding!==Ie||It.isInstancedMesh&&Ue.instancing===!1||!It.isInstancedMesh&&Ue.instancing===!0||It.isSkinnedMesh&&Ue.skinning===!1||!It.isSkinnedMesh&&Ue.skinning===!0||Ue.envMap!==Ce||ot.fog===!0&&Ue.fog!==ue||Ue.numClippingPlanes!==void 0&&(Ue.numClippingPlanes!==F.numPlanes||Ue.numIntersection!==F.numIntersection)||Ue.vertexAlphas!==Be||Ue.vertexTangents!==Ae||Ue.morphTargets!==$e||Ue.morphNormals!==fn||Ue.morphColors!==la||Ue.toneMapping!==Il||xt.isWebGL2===!0&&Ue.morphTargetsCount!==cr)&&(Tn=!0):(Tn=!0,Ue.__version=ot.version);let ci=Ue.currentProgram;Tn===!0&&(ci=li(ot,dt,It));let bo=!1,xu=!1,c0=!1;const vs=ci.getUniforms(),ca=Ue.uniforms;if(bt.useProgram(ci.program)&&(bo=!0,xu=!0,c0=!0),ot.id!==y&&(y=ot.id,xu=!0),bo||w!==U){if(vs.setValue(Y,"projectionMatrix",U.projectionMatrix),xt.logarithmicDepthBuffer&&vs.setValue(Y,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),w!==U&&(w=U,xu=!0,c0=!0),ot.isShaderMaterial||ot.isMeshPhongMaterial||ot.isMeshToonMaterial||ot.isMeshStandardMaterial||ot.envMap){const qs=vs.map.cameraPosition;qs!==void 0&&qs.setValue(Y,X.setFromMatrixPosition(U.matrixWorld))}(ot.isMeshPhongMaterial||ot.isMeshToonMaterial||ot.isMeshLambertMaterial||ot.isMeshBasicMaterial||ot.isMeshStandardMaterial||ot.isShaderMaterial)&&vs.setValue(Y,"isOrthographic",U.isOrthographicCamera===!0),(ot.isMeshPhongMaterial||ot.isMeshToonMaterial||ot.isMeshLambertMaterial||ot.isMeshBasicMaterial||ot.isMeshStandardMaterial||ot.isShaderMaterial||ot.isShadowMaterial||It.isSkinnedMesh)&&vs.setValue(Y,"viewMatrix",U.matrixWorldInverse)}if(It.isSkinnedMesh){vs.setOptional(Y,It,"bindMatrix"),vs.setOptional(Y,It,"bindMatrixInverse");const qs=It.skeleton;qs&&(xt.floatVertexTextures?(qs.boneTexture===null&&qs.computeBoneTexture(),vs.setValue(Y,"boneTexture",qs.boneTexture,ht),vs.setValue(Y,"boneTextureSize",qs.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const u0=St.morphAttributes;if((u0.position!==void 0||u0.normal!==void 0||u0.color!==void 0&&xt.isWebGL2===!0)&&Rt.update(It,St,ot,ci),(xu||Ue.receiveShadow!==It.receiveShadow)&&(Ue.receiveShadow=It.receiveShadow,vs.setValue(Y,"receiveShadow",It.receiveShadow)),ot.isMeshGouraudMaterial&&ot.envMap!==null&&(ca.envMap.value=Ce,ca.flipEnvMap.value=Ce.isCubeTexture&&Ce.isRenderTargetTexture===!1?-1:1),xu&&(vs.setValue(Y,"toneMappingExposure",g.toneMappingExposure),Ue.needsLights&&QR(ca,c0),ue&&ot.fog===!0&&Lt.refreshFogUniforms(ca,ue),Lt.refreshMaterialUniforms(ca,ot,A,I,W),up.upload(Y,Ue.uniformsList,ca,ht)),ot.isShaderMaterial&&ot.uniformsNeedUpdate===!0&&(up.upload(Y,Ue.uniformsList,ca,ht),ot.uniformsNeedUpdate=!1),ot.isSpriteMaterial&&vs.setValue(Y,"center",It.center),vs.setValue(Y,"modelViewMatrix",It.modelViewMatrix),vs.setValue(Y,"normalMatrix",It.normalMatrix),vs.setValue(Y,"modelMatrix",It.matrixWorld),ot.isShaderMaterial||ot.isRawShaderMaterial){const qs=ot.uniformsGroups;for(let h0=0,eD=qs.length;h0<eD;h0++)if(xt.isWebGL2){const m1=qs[h0];Ut.update(m1,ci),Ut.bind(m1,ci)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ci}function QR(U,dt){U.ambientLightColor.needsUpdate=dt,U.lightProbe.needsUpdate=dt,U.directionalLights.needsUpdate=dt,U.directionalLightShadows.needsUpdate=dt,U.pointLights.needsUpdate=dt,U.pointLightShadows.needsUpdate=dt,U.spotLights.needsUpdate=dt,U.spotLightShadows.needsUpdate=dt,U.rectAreaLights.needsUpdate=dt,U.hemisphereLights.needsUpdate=dt}function tD(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return v},this.setRenderTargetTextures=function(U,dt,St){ct.get(U.texture).__webglTexture=dt,ct.get(U.depthTexture).__webglTexture=St;const ot=ct.get(U);ot.__hasExternalTextures=!0,ot.__hasExternalTextures&&(ot.__autoAllocateDepthBuffer=St===void 0,ot.__autoAllocateDepthBuffer||vt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ot.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(U,dt){const St=ct.get(U);St.__webglFramebuffer=dt,St.__useDefaultFramebuffer=dt===void 0},this.setRenderTarget=function(U,dt=0,St=0){v=U,x=dt,b=St;let ot=!0,It=null,ue=!1,xe=!1;if(U){const Ce=ct.get(U);Ce.__useDefaultFramebuffer!==void 0?(bt.bindFramebuffer(36160,null),ot=!1):Ce.__webglFramebuffer===void 0?ht.setupRenderTarget(U):Ce.__hasExternalTextures&&ht.rebindTextures(U,ct.get(U.texture).__webglTexture,ct.get(U.depthTexture).__webglTexture);const Be=U.texture;(Be.isData3DTexture||Be.isDataArrayTexture||Be.isCompressedArrayTexture)&&(xe=!0);const Ae=ct.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(It=Ae[dt],ue=!0):xt.isWebGL2&&U.samples>0&&ht.useMultisampledRTT(U)===!1?It=ct.get(U).__webglMultisampledFramebuffer:It=Ae,S.copy(U.viewport),C.copy(U.scissor),_=U.scissorTest}else S.copy(M).multiplyScalar(A).floor(),C.copy(E).multiplyScalar(A).floor(),_=N;if(bt.bindFramebuffer(36160,It)&&xt.drawBuffers&&ot&&bt.drawBuffers(U,It),bt.viewport(S),bt.scissor(C),bt.setScissorTest(_),ue){const Ce=ct.get(U.texture);Y.framebufferTexture2D(36160,36064,34069+dt,Ce.__webglTexture,St)}else if(xe){const Ce=ct.get(U.texture),Be=dt||0;Y.framebufferTextureLayer(36160,36064,Ce.__webglTexture,St||0,Be)}y=-1},this.readRenderTargetPixels=function(U,dt,St,ot,It,ue,xe){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ie=ct.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&xe!==void 0&&(Ie=Ie[xe]),Ie){bt.bindFramebuffer(36160,Ie);try{const Ce=U.texture,Be=Ce.format,Ae=Ce.type;if(Be!==ji&&j.convert(Be)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const $e=Ae===nh&&(vt.has("EXT_color_buffer_half_float")||xt.isWebGL2&&vt.has("EXT_color_buffer_float"));if(Ae!==Ba&&j.convert(Ae)!==Y.getParameter(35738)&&!(Ae===Ia&&(xt.isWebGL2||vt.has("OES_texture_float")||vt.has("WEBGL_color_buffer_float")))&&!$e){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}dt>=0&&dt<=U.width-ot&&St>=0&&St<=U.height-It&&Y.readPixels(dt,St,ot,It,j.convert(Be),j.convert(Ae),ue)}finally{const Ce=v!==null?ct.get(v).__webglFramebuffer:null;bt.bindFramebuffer(36160,Ce)}}},this.copyFramebufferToTexture=function(U,dt,St=0){const ot=Math.pow(2,-St),It=Math.floor(dt.image.width*ot),ue=Math.floor(dt.image.height*ot);ht.setTexture2D(dt,0),Y.copyTexSubImage2D(3553,St,0,0,U.x,U.y,It,ue),bt.unbindTexture()},this.copyTextureToTexture=function(U,dt,St,ot=0){const It=dt.image.width,ue=dt.image.height,xe=j.convert(St.format),Ie=j.convert(St.type);ht.setTexture2D(St,0),Y.pixelStorei(37440,St.flipY),Y.pixelStorei(37441,St.premultiplyAlpha),Y.pixelStorei(3317,St.unpackAlignment),dt.isDataTexture?Y.texSubImage2D(3553,ot,U.x,U.y,It,ue,xe,Ie,dt.image.data):dt.isCompressedTexture?Y.compressedTexSubImage2D(3553,ot,U.x,U.y,dt.mipmaps[0].width,dt.mipmaps[0].height,xe,dt.mipmaps[0].data):Y.texSubImage2D(3553,ot,U.x,U.y,xe,Ie,dt.image),ot===0&&St.generateMipmaps&&Y.generateMipmap(3553),bt.unbindTexture()},this.copyTextureToTexture3D=function(U,dt,St,ot,It=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ue=U.max.x-U.min.x+1,xe=U.max.y-U.min.y+1,Ie=U.max.z-U.min.z+1,Ce=j.convert(ot.format),Be=j.convert(ot.type);let Ae;if(ot.isData3DTexture)ht.setTexture3D(ot,0),Ae=32879;else if(ot.isDataArrayTexture)ht.setTexture2DArray(ot,0),Ae=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Y.pixelStorei(37440,ot.flipY),Y.pixelStorei(37441,ot.premultiplyAlpha),Y.pixelStorei(3317,ot.unpackAlignment);const $e=Y.getParameter(3314),fn=Y.getParameter(32878),la=Y.getParameter(3316),Il=Y.getParameter(3315),El=Y.getParameter(32877),cr=St.isCompressedTexture?St.mipmaps[0]:St.image;Y.pixelStorei(3314,cr.width),Y.pixelStorei(32878,cr.height),Y.pixelStorei(3316,U.min.x),Y.pixelStorei(3315,U.min.y),Y.pixelStorei(32877,U.min.z),St.isDataTexture||St.isData3DTexture?Y.texSubImage3D(Ae,It,dt.x,dt.y,dt.z,ue,xe,Ie,Ce,Be,cr.data):St.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Y.compressedTexSubImage3D(Ae,It,dt.x,dt.y,dt.z,ue,xe,Ie,Ce,cr.data)):Y.texSubImage3D(Ae,It,dt.x,dt.y,dt.z,ue,xe,Ie,Ce,Be,cr),Y.pixelStorei(3314,$e),Y.pixelStorei(32878,fn),Y.pixelStorei(3316,la),Y.pixelStorei(3315,Il),Y.pixelStorei(32877,El),It===0&&ot.generateMipmaps&&Y.generateMipmap(Ae),bt.unbindTexture()},this.initTexture=function(U){U.isCubeTexture?ht.setTextureCube(U,0):U.isData3DTexture?ht.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?ht.setTexture2DArray(U,0):ht.setTexture2D(U,0),bt.unbindTexture()},this.resetState=function(){x=0,b=0,v=null,bt.reset(),nt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class xO extends k2{}xO.prototype.isWebGL1Renderer=!0;class bO extends Kn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class A2 extends Xo{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ve(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const D_=new G,$_=new G,L_=new Je,q0=new vm,Tf=new Ih;class yO extends Kn{constructor(t=new cs,e=new A2){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)D_.fromBufferAttribute(e,i-1),$_.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=D_.distanceTo($_);t.setAttribute("lineDistance",new dn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Tf.copy(n.boundingSphere),Tf.applyMatrix4(i),Tf.radius+=r,t.ray.intersectsSphere(Tf)===!1)return;L_.copy(i).invert(),q0.copy(t.ray).applyMatrix4(L_);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new G,u=new G,h=new G,d=new G,f=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(p!==null){const x=Math.max(0,o.start),b=Math.min(p.count,o.start+o.count);for(let v=x,y=b-1;v<y;v+=f){const w=p.getX(v),S=p.getX(v+1);if(c.fromBufferAttribute(m,w),u.fromBufferAttribute(m,S),q0.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const _=t.ray.origin.distanceTo(d);_<t.near||_>t.far||e.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),b=Math.min(m.count,o.start+o.count);for(let v=x,y=b-1;v<y;v+=f){if(c.fromBufferAttribute(m,v),u.fromBufferAttribute(m,v+1),q0.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const S=t.ray.origin.distanceTo(d);S<t.near||S>t.far||e.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class zr{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=e||(o.isVector2?new Nt:new G);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new G,i=[],r=[],o=[],a=new G,l=new Je;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new G)}r[0]=new G,o[0]=new G;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ss(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(ss(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(f=-f);for(let p=1;p<=t;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Kb extends zr{constructor(t=0,e=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new Nt,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class vO extends Kb{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Yb(){let s=0,t=0,e=0,n=0;function i(r,o,a,l){s=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let d=(o-r)/c-(a-r)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+t*r+e*o+n*a}}}const If=new G,j0=new Yb,X0=new Yb,K0=new Yb;class Bx extends zr{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new G){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(If.subVectors(i[0],i[1]).add(i[0]),c=If);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(If.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=If),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),j0.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,g,m),X0.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,g,m),K0.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,g,m)}else this.curveType==="catmullrom"&&(j0.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),X0.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),K0.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(j0.calc(l),X0.calc(l),K0.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new G().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function F_(s,t,e,n,i){const r=(n-t)*.5,o=(i-e)*.5,a=s*s,l=s*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*s+e}function wO(s,t){const e=1-s;return e*e*t}function _O(s,t){return 2*(1-s)*s*t}function SO(s,t){return s*s*t}function qu(s,t,e,n){return wO(s,t)+_O(s,e)+SO(s,n)}function CO(s,t){const e=1-s;return e*e*e*t}function TO(s,t){const e=1-s;return 3*e*e*s*t}function IO(s,t){return 3*(1-s)*s*s*t}function EO(s,t){return s*s*s*t}function ju(s,t,e,n,i){return CO(s,t)+TO(s,e)+IO(s,n)+EO(s,i)}class N2 extends zr{constructor(t=new Nt,e=new Nt,n=new Nt,i=new Nt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Nt){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(ju(t,i.x,r.x,o.x,a.x),ju(t,i.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class MO extends zr{constructor(t=new G,e=new G,n=new G,i=new G){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new G){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(ju(t,i.x,r.x,o.x,a.x),ju(t,i.y,r.y,o.y,a.y),ju(t,i.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Zb extends zr{constructor(t=new Nt,e=new Nt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Nt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Nt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class kO extends zr{constructor(t=new G,e=new G){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new G){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class R2 extends zr{constructor(t=new Nt,e=new Nt,n=new Nt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Nt){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(qu(t,i.x,r.x,o.x),qu(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class AO extends zr{constructor(t=new G,e=new G,n=new G){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new G){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(qu(t,i.x,r.x,o.x),qu(t,i.y,r.y,o.y),qu(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class D2 extends zr{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Nt){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(F_(a,l.x,c.x,u.x,h.x),F_(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Nt().fromArray(i))}return this}}var $2=Object.freeze({__proto__:null,ArcCurve:vO,CatmullRomCurve3:Bx,CubicBezierCurve:N2,CubicBezierCurve3:MO,EllipseCurve:Kb,LineCurve:Zb,LineCurve3:kO,QuadraticBezierCurve:R2,QuadraticBezierCurve3:AO,SplineCurve:D2});class NO extends zr{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Zb(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new $2[i.type]().fromJSON(i))}return this}}class Ux extends NO{constructor(t){super(),this.type="Path",this.currentPoint=new Nt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Zb(this.currentPoint.clone(),new Nt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new R2(this.currentPoint.clone(),new Nt(t,e),new Nt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,o){const a=new N2(this.currentPoint.clone(),new Nt(t,e),new Nt(n,i),new Nt(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new D2(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,r,o),this}absarc(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this}ellipse(t,e,n,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,r,o,a,l),this}absellipse(t,e,n,i,r,o,a,l){const c=new Kb(t,e,n,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Jb extends cs{constructor(t=1,e=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new G,u=new Nt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=e;h++,d+=3){const f=n+h/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[d]/t+1)/2,u.y=(o[d+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new dn(o,3)),this.setAttribute("normal",new dn(a,3)),this.setAttribute("uv",new dn(l,2))}static fromJSON(t){return new Jb(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ma extends cs{constructor(t=1,e=1,n=1,i=8,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const g=[],m=n/2;let x=0;b(),o===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(u),this.setAttribute("position",new dn(h,3)),this.setAttribute("normal",new dn(d,3)),this.setAttribute("uv",new dn(f,2));function b(){const y=new G,w=new G;let S=0;const C=(e-t)/n;for(let _=0;_<=r;_++){const T=[],I=_/r,A=I*(e-t)+t;for(let D=0;D<=i;D++){const k=D/i,M=k*l+a,E=Math.sin(M),N=Math.cos(M);w.x=A*E,w.y=-I*n+m,w.z=A*N,h.push(w.x,w.y,w.z),y.set(E,C,N).normalize(),d.push(y.x,y.y,y.z),f.push(k,1-I),T.push(p++)}g.push(T)}for(let _=0;_<i;_++)for(let T=0;T<r;T++){const I=g[T][_],A=g[T+1][_],D=g[T+1][_+1],k=g[T][_+1];u.push(I,A,k),u.push(A,D,k),S+=6}c.addGroup(x,S,0),x+=S}function v(y){const w=p,S=new Nt,C=new G;let _=0;const T=y===!0?t:e,I=y===!0?1:-1;for(let D=1;D<=i;D++)h.push(0,m*I,0),d.push(0,I,0),f.push(.5,.5),p++;const A=p;for(let D=0;D<=i;D++){const M=D/i*l+a,E=Math.cos(M),N=Math.sin(M);C.x=T*N,C.y=m*I,C.z=T*E,h.push(C.x,C.y,C.z),d.push(0,I,0),S.x=E*.5+.5,S.y=N*.5*I+.5,f.push(S.x,S.y),p++}for(let D=0;D<i;D++){const k=w+D,M=A+D;y===!0?u.push(M,M+1,k):u.push(M+1,M,k),_+=3}c.addGroup(x,_,y===!0?1:2),x+=_}}static fromJSON(t){return new Ma(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Tp extends Ux{constructor(t){super(t),this.uuid=Zc(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Ux().fromJSON(i))}return this}}const RO={triangulate:function(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=L2(s,0,i,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,d,f;if(n&&(r=PO(s,t,r,e)),s.length>80*e){a=c=s[0],l=u=s[1];for(let p=e;p<i;p+=e)h=s[p],d=s[p+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=f!==0?32767/f:0}return sh(r,o,e,a,l,f,0),o}};function L2(s,t,e,n,i){let r,o;if(i===XO(s,t,e,n)>0)for(r=t;r<e;r+=n)o=P_(r,s[r],s[r+1],o);else for(r=e-n;r>=t;r-=n)o=P_(r,s[r],s[r+1],o);return o&&Sm(o,o.next)&&(rh(o),o=o.next),o}function Ha(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Sm(e,e.next)||hn(e.prev,e,e.next)===0)){if(rh(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function sh(s,t,e,n,i,r,o){if(!s)return;!o&&r&&VO(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?$O(s,n,i,r):DO(s)){t.push(l.i/e|0),t.push(s.i/e|0),t.push(c.i/e|0),rh(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=LO(Ha(s),t,e),sh(s,t,e,n,i,r,2)):o===2&&FO(s,t,e,n,i,r):sh(Ha(s),t,e,n,i,r,1);break}}}function DO(s){const t=s.prev,e=s,n=s.next;if(hn(t,e,n)>=0)return!1;const i=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<r?i<o?i:o:r<o?r:o,h=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==t;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&oc(i,a,r,l,o,c,p.x,p.y)&&hn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function $O(s,t,e,n){const i=s.prev,r=s,o=s.next;if(hn(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,u=i.y,h=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=u<h?u<d?u:d:h<d?h:d,g=a>l?a>c?a:c:l>c?l:c,m=u>h?u>d?u:d:h>d?h:d,x=Vx(f,p,t,e,n),b=Vx(g,m,t,e,n);let v=s.prevZ,y=s.nextZ;for(;v&&v.z>=x&&y&&y.z<=b;){if(v.x>=f&&v.x<=g&&v.y>=p&&v.y<=m&&v!==i&&v!==o&&oc(a,u,l,h,c,d,v.x,v.y)&&hn(v.prev,v,v.next)>=0||(v=v.prevZ,y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&oc(a,u,l,h,c,d,y.x,y.y)&&hn(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;v&&v.z>=x;){if(v.x>=f&&v.x<=g&&v.y>=p&&v.y<=m&&v!==i&&v!==o&&oc(a,u,l,h,c,d,v.x,v.y)&&hn(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;y&&y.z<=b;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&oc(a,u,l,h,c,d,y.x,y.y)&&hn(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function LO(s,t,e){let n=s;do{const i=n.prev,r=n.next.next;!Sm(i,r)&&F2(i,n,n.next,r)&&ih(i,r)&&ih(r,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),rh(n),rh(n.next),n=s=r),n=n.next}while(n!==s);return Ha(n)}function FO(s,t,e,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&HO(o,a)){let l=P2(o,a);o=Ha(o,o.next),l=Ha(l,l.next),sh(o,t,e,n,i,r,0),sh(l,t,e,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function PO(s,t,e,n){const i=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:s.length,c=L2(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(GO(c));for(i.sort(OO),r=0;r<i.length;r++)e=zO(i[r],e);return e}function OO(s,t){return s.x-t.x}function zO(s,t){const e=BO(s,t);if(!e)return t;const n=P2(e,s);return Ha(n,n.next),Ha(e,e.next)}function BO(s,t){let e=t,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=r&&d>n&&(n=d,i=e.x<e.next.x?e:e.next,d===r))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,h;e=i;do r>=e.x&&e.x>=l&&r!==e.x&&oc(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(h=Math.abs(o-e.y)/(r-e.x),ih(e,s)&&(h<u||h===u&&(e.x>i.x||e.x===i.x&&UO(i,e)))&&(i=e,u=h)),e=e.next;while(e!==a);return i}function UO(s,t){return hn(s.prev,s,t.prev)<0&&hn(t.next,s,s.next)<0}function VO(s,t,e,n){let i=s;do i.z===0&&(i.z=Vx(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,WO(i)}function WO(s){let t,e,n,i,r,o,a,l,c=1;do{for(e=s,s=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;e=n}r.nextZ=null,c*=2}while(o>1);return s}function Vx(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function GO(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function oc(s,t,e,n,i,r,o,a){return(i-o)*(t-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(i-o)*(n-a)}function HO(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!qO(s,t)&&(ih(s,t)&&ih(t,s)&&jO(s,t)&&(hn(s.prev,s,t.prev)||hn(s,t.prev,t))||Sm(s,t)&&hn(s.prev,s,s.next)>0&&hn(t.prev,t,t.next)>0)}function hn(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Sm(s,t){return s.x===t.x&&s.y===t.y}function F2(s,t,e,n){const i=Mf(hn(s,t,e)),r=Mf(hn(s,t,n)),o=Mf(hn(e,n,s)),a=Mf(hn(e,n,t));return!!(i!==r&&o!==a||i===0&&Ef(s,e,t)||r===0&&Ef(s,n,t)||o===0&&Ef(e,s,n)||a===0&&Ef(e,t,n))}function Ef(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Mf(s){return s>0?1:s<0?-1:0}function qO(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&F2(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function ih(s,t){return hn(s.prev,s,s.next)<0?hn(s,t,s.next)>=0&&hn(s,s.prev,t)>=0:hn(s,t,s.prev)<0||hn(s,s.next,t)<0}function jO(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function P2(s,t){const e=new Wx(s.i,s.x,s.y),n=new Wx(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function P_(s,t,e,n){const i=new Wx(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function rh(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Wx(s,t,e){this.i=s,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function XO(s,t,e,n){let i=0;for(let r=t,o=e-n;r<e;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class Do{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return Do.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];O_(t),z_(n,t);let o=t.length;e.forEach(O_);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,z_(n,e[l]);const a=RO.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function O_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function z_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class Qb extends cs{constructor(t=new Tp([new Nt(.5,.5),new Nt(-.5,.5),new Nt(-.5,-.5),new Nt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new dn(i,3)),this.setAttribute("uv",new dn(r,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1,h=e.depth!==void 0?e.depth:1;let d=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.bevelThickness!==void 0?e.bevelThickness:.2,p=e.bevelSize!==void 0?e.bevelSize:f-.1,g=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const x=e.extrudePath,b=e.UVGenerator!==void 0?e.UVGenerator:KO;let v,y=!1,w,S,C,_;x&&(v=x.getSpacedPoints(u),y=!0,d=!1,w=x.computeFrenetFrames(u,!1),S=new G,C=new G,_=new G),d||(m=0,f=0,p=0,g=0);const T=a.extractPoints(c);let I=T.shape;const A=T.holes;if(!Do.isClockWise(I)){I=I.reverse();for(let ct=0,ht=A.length;ct<ht;ct++){const _t=A[ct];Do.isClockWise(_t)&&(A[ct]=_t.reverse())}}const k=Do.triangulateShape(I,A),M=I;for(let ct=0,ht=A.length;ct<ht;ct++){const _t=A[ct];I=I.concat(_t)}function E(ct,ht,_t){return ht||console.error("THREE.ExtrudeGeometry: vec does not exist"),ht.clone().multiplyScalar(_t).add(ct)}const N=I.length,O=k.length;function L(ct,ht,_t){let Et,gt,Ot;const Pt=ct.x-ht.x,at=ct.y-ht.y,Lt=_t.x-ct.x,re=_t.y-ct.y,B=Pt*Pt+at*at,F=Pt*re-at*Lt;if(Math.abs(F)>Number.EPSILON){const rt=Math.sqrt(B),kt=Math.sqrt(Lt*Lt+re*re),Rt=ht.x-at/rt,zt=ht.y+Pt/rt,te=_t.x-re/kt,j=_t.y+Lt/kt,nt=((te-Rt)*re-(j-zt)*Lt)/(Pt*re-at*Lt);Et=Rt+Pt*nt-ct.x,gt=zt+at*nt-ct.y;const Ut=Et*Et+gt*gt;if(Ut<=2)return new Nt(Et,gt);Ot=Math.sqrt(Ut/2)}else{let rt=!1;Pt>Number.EPSILON?Lt>Number.EPSILON&&(rt=!0):Pt<-Number.EPSILON?Lt<-Number.EPSILON&&(rt=!0):Math.sign(at)===Math.sign(re)&&(rt=!0),rt?(Et=-at,gt=Pt,Ot=Math.sqrt(B)):(Et=Pt,gt=at,Ot=Math.sqrt(B/2))}return new Nt(Et/Ot,gt/Ot)}const $=[];for(let ct=0,ht=M.length,_t=ht-1,Et=ct+1;ct<ht;ct++,_t++,Et++)_t===ht&&(_t=0),Et===ht&&(Et=0),$[ct]=L(M[ct],M[_t],M[Et]);const W=[];let q,H=$.concat();for(let ct=0,ht=A.length;ct<ht;ct++){const _t=A[ct];q=[];for(let Et=0,gt=_t.length,Ot=gt-1,Pt=Et+1;Et<gt;Et++,Ot++,Pt++)Ot===gt&&(Ot=0),Pt===gt&&(Pt=0),q[Et]=L(_t[Et],_t[Ot],_t[Pt]);W.push(q),H=H.concat(q)}for(let ct=0;ct<m;ct++){const ht=ct/m,_t=f*Math.cos(ht*Math.PI/2),Et=p*Math.sin(ht*Math.PI/2)+g;for(let gt=0,Ot=M.length;gt<Ot;gt++){const Pt=E(M[gt],$[gt],Et);yt(Pt.x,Pt.y,-_t)}for(let gt=0,Ot=A.length;gt<Ot;gt++){const Pt=A[gt];q=W[gt];for(let at=0,Lt=Pt.length;at<Lt;at++){const re=E(Pt[at],q[at],Et);yt(re.x,re.y,-_t)}}}const X=p+g;for(let ct=0;ct<N;ct++){const ht=d?E(I[ct],H[ct],X):I[ct];y?(C.copy(w.normals[0]).multiplyScalar(ht.x),S.copy(w.binormals[0]).multiplyScalar(ht.y),_.copy(v[0]).add(C).add(S),yt(_.x,_.y,_.z)):yt(ht.x,ht.y,0)}for(let ct=1;ct<=u;ct++)for(let ht=0;ht<N;ht++){const _t=d?E(I[ht],H[ht],X):I[ht];y?(C.copy(w.normals[ct]).multiplyScalar(_t.x),S.copy(w.binormals[ct]).multiplyScalar(_t.y),_.copy(v[ct]).add(C).add(S),yt(_.x,_.y,_.z)):yt(_t.x,_t.y,h/u*ct)}for(let ct=m-1;ct>=0;ct--){const ht=ct/m,_t=f*Math.cos(ht*Math.PI/2),Et=p*Math.sin(ht*Math.PI/2)+g;for(let gt=0,Ot=M.length;gt<Ot;gt++){const Pt=E(M[gt],$[gt],Et);yt(Pt.x,Pt.y,h+_t)}for(let gt=0,Ot=A.length;gt<Ot;gt++){const Pt=A[gt];q=W[gt];for(let at=0,Lt=Pt.length;at<Lt;at++){const re=E(Pt[at],q[at],Et);y?yt(re.x,re.y+v[u-1].y,v[u-1].x+_t):yt(re.x,re.y,h+_t)}}}it(),lt();function it(){const ct=i.length/3;if(d){let ht=0,_t=N*ht;for(let Et=0;Et<O;Et++){const gt=k[Et];vt(gt[2]+_t,gt[1]+_t,gt[0]+_t)}ht=u+m*2,_t=N*ht;for(let Et=0;Et<O;Et++){const gt=k[Et];vt(gt[0]+_t,gt[1]+_t,gt[2]+_t)}}else{for(let ht=0;ht<O;ht++){const _t=k[ht];vt(_t[2],_t[1],_t[0])}for(let ht=0;ht<O;ht++){const _t=k[ht];vt(_t[0]+N*u,_t[1]+N*u,_t[2]+N*u)}}n.addGroup(ct,i.length/3-ct,0)}function lt(){const ct=i.length/3;let ht=0;Y(M,ht),ht+=M.length;for(let _t=0,Et=A.length;_t<Et;_t++){const gt=A[_t];Y(gt,ht),ht+=gt.length}n.addGroup(ct,i.length/3-ct,1)}function Y(ct,ht){let _t=ct.length;for(;--_t>=0;){const Et=_t;let gt=_t-1;gt<0&&(gt=ct.length-1);for(let Ot=0,Pt=u+m*2;Ot<Pt;Ot++){const at=N*Ot,Lt=N*(Ot+1),re=ht+Et+at,B=ht+gt+at,F=ht+gt+Lt,rt=ht+Et+Lt;xt(re,B,F,rt)}}}function yt(ct,ht,_t){l.push(ct),l.push(ht),l.push(_t)}function vt(ct,ht,_t){bt(ct),bt(ht),bt(_t);const Et=i.length/3,gt=b.generateTopUV(n,i,Et-3,Et-2,Et-1);Dt(gt[0]),Dt(gt[1]),Dt(gt[2])}function xt(ct,ht,_t,Et){bt(ct),bt(ht),bt(Et),bt(ht),bt(_t),bt(Et);const gt=i.length/3,Ot=b.generateSideWallUV(n,i,gt-6,gt-3,gt-2,gt-1);Dt(Ot[0]),Dt(Ot[1]),Dt(Ot[3]),Dt(Ot[1]),Dt(Ot[2]),Dt(Ot[3])}function bt(ct){i.push(l[ct*3+0]),i.push(l[ct*3+1]),i.push(l[ct*3+2])}function Dt(ct){r.push(ct.x),r.push(ct.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return YO(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,o=t.shapes.length;r<o;r++){const a=e[t.shapes[r]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new $2[i.type]().fromJSON(i)),new Qb(n,t.options)}}const KO={generateTopUV:function(s,t,e,n,i){const r=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new Nt(r,o),new Nt(a,l),new Nt(c,u)]},generateSideWallUV:function(s,t,e,n,i,r){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],h=t[n*3+2],d=t[i*3],f=t[i*3+1],p=t[i*3+2],g=t[r*3],m=t[r*3+1],x=t[r*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new Nt(o,1-l),new Nt(c,1-h),new Nt(d,1-p),new Nt(g,1-x)]:[new Nt(a,1-l),new Nt(u,1-h),new Nt(f,1-p),new Nt(m,1-x)]}};function YO(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];e.shapes.push(r.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class ty extends cs{constructor(t=.5,e=1,n=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=t;const d=(e-t)/i,f=new G,p=new Nt;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const x=r+m/n*o;f.x=h*Math.cos(x),f.y=h*Math.sin(x),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,u.push(p.x,p.y)}h+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let x=0;x<n;x++){const b=x+m,v=b,y=b+n+1,w=b+n+2,S=b+1;a.push(v,y,S),a.push(y,w,S)}}this.setIndex(a),this.setAttribute("position",new dn(l,3)),this.setAttribute("normal",new dn(c,3)),this.setAttribute("uv",new dn(u,2))}static fromJSON(t){return new ty(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class ey extends cs{constructor(t=new Tp([new Nt(0,.5),new Nt(-.5,-.5),new Nt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new dn(i,3)),this.setAttribute("normal",new dn(r,3)),this.setAttribute("uv",new dn(o,2));function c(u){const h=i.length/3,d=u.extractPoints(e);let f=d.shape;const p=d.holes;Do.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,x=p.length;m<x;m++){const b=p[m];Do.isClockWise(b)===!0&&(p[m]=b.reverse())}const g=Do.triangulateShape(f,p);for(let m=0,x=p.length;m<x;m++){const b=p[m];f=f.concat(b)}for(let m=0,x=f.length;m<x;m++){const b=f[m];i.push(b.x,b.y,0),r.push(0,0,1),o.push(b.x,b.y)}for(let m=0,x=g.length;m<x;m++){const b=g[m],v=b[0]+h,y=b[1]+h,w=b[2]+h;n.push(v,y,w),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return ZO(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const o=e[t.shapes[i]];n.push(o)}return new ey(n,t.curveSegments)}}function ZO(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class dl extends Xo{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ve(16777215),this.specular=new Ve(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ym,this.normalScale=new Nt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=gm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class O2 extends Xo{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ym,this.normalScale=new Nt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class JO extends Xo{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ym,this.normalScale=new Nt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=gm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class z2 extends Kn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Ve(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const Y0=new Je,B_=new G,U_=new G;class QO{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Nt(512,512),this.map=null,this.mapPass=null,this.matrix=new Je,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new jb,this._frameExtents=new Nt(1,1),this._viewportCount=1,this._viewports=[new Xn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;B_.setFromMatrixPosition(t.matrixWorld),e.position.copy(B_),U_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(U_),e.updateMatrixWorld(),Y0.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Y0),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Y0)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class tz extends QO{constructor(){super(new C2(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ez extends z2{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Kn.DefaultUp),this.updateMatrix(),this.target=new Kn,this.shadow=new tz}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class nz extends z2{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class sz{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=V_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=V_();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function V_(){return(typeof performance>"u"?Date:performance).now()}class B2{constructor(t,e,n=0,i=1/0){this.ray=new vm(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new qb,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Gx(t,this,n,e),n.sort(W_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Gx(t[i],this,n,e);return n.sort(W_),n}}function W_(s,t){return s.distance-t.distance}function Gx(s,t,e,n){if(s.layers.test(t.layers)&&s.raycast(t,e),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)Gx(i[r],t,e,!0)}}class G_{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ss(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const H_=new G,kf=new G;class oo{constructor(t=new G,e=new G){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){H_.subVectors(t,this.start),kf.subVectors(this.end,this.start);const n=kf.dot(kf);let r=kf.dot(H_)/n;return e&&(r=ss(r,0,1)),r}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const q_=new G;let Af,Z0;class iz extends Kn{constructor(t=new G(0,0,1),e=new G(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Af===void 0&&(Af=new cs,Af.setAttribute("position",new dn([0,0,0,0,1,0],3)),Z0=new Ma(0,.5,1,5,1),Z0.translate(0,-.5,0)),this.position.copy(e),this.line=new yO(Af,new A2({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nn(Z0,new ul({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{q_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(q_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Hb}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Hb);class Xi{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new R);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new R);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new Xi);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],u=n[4],h=n[5],d=n[6],f=n[7],p=n[8],g=i[0],m=i[1],x=i[2],b=i[3],v=i[4],y=i[5],w=i[6],S=i[7],C=i[8];return r[0]=o*g+a*b+l*w,r[1]=o*m+a*v+l*S,r[2]=o*x+a*y+l*C,r[3]=c*g+u*b+h*w,r[4]=c*m+u*v+h*S,r[5]=c*x+u*y+h*C,r[6]=d*g+f*b+p*w,r[7]=d*m+f*v+p*S,r[8]=d*x+f*y+p*C,e}scale(t,e){e===void 0&&(e=new Xi);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new R);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=t.x,r[3+4*1]=t.y,r[3+4*2]=t.z;let l=3;const c=l;let u;const h=4;let d;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){u=h;do d=h-u,r[d+i*o]+=r[d+i*a];while(--u);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const f=r[o+i*a]/r[o+i*o];u=h;do d=h-u,r[d+i*a]=d<=o?0:r[d+i*a]-r[d+i*o]*f;while(--u)}}while(--l);if(e.z=r[2*i+3]/r[2*i+2],e.y=(r[1*i+3]-r[1*i+2]*e.z)/r[1*i+1],e.x=(r[0*i+3]-r[0*i+2]*e.z-r[0*i+1]*e.y)/r[0*i+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new Xi);const e=3,n=6,i=rz;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const u=n;let h;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=u;do h=u-c,i[h+n*r]+=i[h+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const d=i[r+n*o]/i[r+n*r];c=u;do h=u-c,i[h+n*o]=h<=r?0:i[h+n*o]-i[h+n*r]*d;while(--c)}}while(--a);r=2;do{o=r-1;do{const d=i[r+n*o]/i[r+n*r];c=n;do h=n-c,i[h+n*o]=i[h+n*o]-i[h+n*r]*d;while(--c)}while(o--)}while(--r);r=2;do{const d=1/i[r+n*r];c=n;do h=n-c,i[h+n*r]=i[h+n*r]*d;while(--c)}while(r--);r=2;do{o=2;do{if(h=i[e+o+n*r],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(r,o,h)}while(o--)}while(r--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,u=e*a,h=e*l,d=n*a,f=n*l,p=i*l,g=r*o,m=r*a,x=r*l,b=this.elements;return b[3*0+0]=1-(d+p),b[3*0+1]=u-x,b[3*0+2]=h+m,b[3*1+0]=u+x,b[3*1+1]=1-(c+p),b[3*1+2]=f-g,b[3*2+0]=h-m,b[3*2+1]=f+g,b[3*2+2]=1-(c+d),this}transpose(t){t===void 0&&(t=new Xi);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const rz=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class R{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new R);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new R(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new R(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new Xi([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new R);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new R);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new R),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new R),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new R),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=oz,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=az;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(j_),j_.almostEquals(t,e)}clone(){return new R(this.x,this.y,this.z)}}R.ZERO=new R(0,0,0);R.UNIT_X=new R(1,0,0);R.UNIT_Y=new R(0,1,0);R.UNIT_Z=new R(0,0,1);const oz=new R,az=new R,j_=new R;class ri{constructor(t){t===void 0&&(t={}),this.lowerBound=new R,this.upperBound=new R,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,X_),c=X_),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new ri().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,u=this.upperBound;t.copy(c),e.set(u.x,c.y,c.z),n.set(u.x,u.y,c.z),i.set(c.x,u.y,u.z),r.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(t,e){const n=K_,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=K_,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,u=(this.upperBound.y-n.y)*r,h=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,f=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(h,d)),p=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(h,d));return!(p<0||f>p)}}const X_=new R,K_=[new R,new R,new R,new R,new R,new R,new R,new R];class Y_{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class U2{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,t)}return this}}class gn{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new R),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=lz,i=cz;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new gn);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,u=t.w;return e.x=n*u+o*a+i*c-r*l,e.y=i*u+o*l+r*a-n*c,e.z=r*u+o*c+n*l-i*a,e.w=o*u-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new gn);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new gn),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new R);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*n+a*r-l*i,h=c*i+l*n-o*r,d=c*r+o*i-a*n,f=-o*n-a*i-l*r;return e.x=u*c+f*-o+h*-l-d*-a,e.y=h*c+f*-a+d*-o-u*-l,e.z=d*c+f*-l+u*-a-h*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(e){case"YZX":const u=o*a+l*c;if(u>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),u<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const h=o*o,d=a*a,f=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*f),i=Math.asin(2*u),r=Math.atan2(2*o*c-2*a*l,1-2*h-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),u=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="YXZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="ZXY"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="ZYX"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="YZX"?(this.x=l*o*a+r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a-l*c*u):i==="XZY"&&(this.x=l*o*a-r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a+l*c*u),this}clone(){return new gn(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new gn);const i=this.x,r=this.y,o=this.z,a=this.w;let l=t.x,c=t.y,u=t.z,h=t.w,d,f,p,g,m;return f=i*l+r*c+o*u+a*h,f<0&&(f=-f,l=-l,c=-c,u=-u,h=-h),1-f>1e-6?(d=Math.acos(f),p=Math.sin(d),g=Math.sin((1-e)*d)/p,m=Math.sin(e*d)/p):(g=1-e,m=e),n.x=g*i+m*l,n.y=g*r+m*c,n.z=g*o+m*u,n.w=g*a+m*h,n}integrate(t,e,n,i){i===void 0&&(i=new gn);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,u=this.z,h=this.w,d=e*.5;return i.x+=d*(r*h+o*u-a*c),i.y+=d*(o*h+a*l-r*u),i.z+=d*(a*h+r*c-o*l),i.w+=d*(-r*l-o*c-a*u),i}}const lz=new R,cz=new R,uz={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Jt{constructor(t){t===void 0&&(t={}),this.id=Jt.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Jt.idCounter=0;Jt.types=uz;class Oe{constructor(t){t===void 0&&(t={}),this.position=new R,this.quaternion=new gn,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return Oe.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return Oe.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new R),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new R),n.vsub(t,i),e.conjugate(Z_),Z_.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new R),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new R),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new R),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const Z_=new gn;class Xu extends Jt{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:Jt.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new R;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let u=!1;for(let h=0;h!==n.length;h++)if(n[h].almostEquals(i)||n[h].almostEquals(i)){u=!0;break}u||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new R;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[t].length;i++)console.warn(`.vertices[${this.faces[t][i]}] = Vec3(${this.vertices[this.faces[t][i]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];Xu.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new R,o=new R;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const u=new R;let h=-1,d=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),r.vmult(u,u);const g=u.dot(o);g>d&&(d=g,h=p)}const f=[];for(let p=0;p<n.faces[h].length;p++){const g=n.vertices[n.faces[h][p]],m=new R;m.copy(g),r.vmult(m,m),i.vadd(m,m),f.push(m)}h>=0&&this.clipFaceAgainstHull(o,t,e,f,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new R,u=new R,h=new R,d=new R,f=new R,p=new R;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let x=0;x!==m.uniqueAxes.length;x++){n.vmult(m.uniqueAxes[x],c);const b=m.testSepAxis(c,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(c))}else{const x=a?a.length:m.faces.length;for(let b=0;b<x;b++){const v=a?a[b]:b;c.copy(m.faceNormals[v]),n.vmult(c,c);const y=m.testSepAxis(c,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(c))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){r.vmult(t.uniqueAxes[x],u);const b=m.testSepAxis(u,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(u))}else{const x=l?l.length:t.faces.length;for(let b=0;b<x;b++){const v=l?l[b]:b;u.copy(t.faceNormals[v]),r.vmult(u,u);const y=m.testSepAxis(u,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(u))}}for(let x=0;x!==m.uniqueEdges.length;x++){n.vmult(m.uniqueEdges[x],d);for(let b=0;b!==t.uniqueEdges.length;b++)if(r.vmult(t.uniqueEdges[b],f),d.cross(f,p),!p.almostZero()){p.normalize();const v=m.testSepAxis(p,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(p))}}return i.vsub(e,h),h.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){const a=this;Xu.project(a,t,n,i,J0),Xu.project(e,t,r,o,Q0);const l=J0[0],c=J0[1],u=Q0[0],h=Q0[1];if(l<h||u<c)return!1;const d=l-h,f=u-c;return d<f?d:f}calculateLocalInertia(t,e){const n=new R,i=new R;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new R,c=new R,u=new R,h=new R,d=new R,f=new R,p=new R,g=new R,m=this,x=[],b=i,v=x;let y=-1,w=Number.MAX_VALUE;for(let I=0;I<m.faces.length;I++){l.copy(m.faceNormals[I]),n.vmult(l,l);const A=l.dot(t);A<w&&(w=A,y=I)}if(y<0)return;const S=m.faces[y];S.connectedFaces=[];for(let I=0;I<m.faces.length;I++)for(let A=0;A<m.faces[I].length;A++)S.indexOf(m.faces[I][A])!==-1&&I!==y&&S.connectedFaces.indexOf(I)===-1&&S.connectedFaces.push(I);const C=S.length;for(let I=0;I<C;I++){const A=m.vertices[S[I]],D=m.vertices[S[(I+1)%C]];A.vsub(D,c),u.copy(c),n.vmult(u,u),e.vadd(u,u),h.copy(this.faceNormals[y]),n.vmult(h,h),e.vadd(h,h),u.cross(h,d),d.negate(d),f.copy(A),n.vmult(f,f),e.vadd(f,f);const k=S.connectedFaces[I];p.copy(this.faceNormals[k]);const M=this.getPlaneConstantOfFace(k);g.copy(p),n.vmult(g,g);const E=M-g.dot(e);for(this.clipFaceAgainstPlane(b,v,g,E);b.length;)b.shift();for(;v.length;)b.push(v.shift())}p.copy(this.faceNormals[y]);const _=this.getPlaneConstantOfFace(y);g.copy(p),n.vmult(g,g);const T=_-g.dot(e);for(let I=0;I<b.length;I++){let A=g.dot(b[I])+T;if(A<=r&&(console.log(`clamped: depth=${A} to minDist=${r}`),A=r),A<=o){const D=b[I];if(A<=1e-6){const k={point:D,normal:g,depth:A};a.push(k)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let u=0;u<a;u++){if(c=t[u],o=n.dot(c)+i,r<0)if(o<0){const h=new R;h.copy(c),e.push(h)}else{const h=new R;l.lerp(c,r/(r-o),h),e.push(h)}else if(o<0){const h=new R;l.lerp(c,r/(r-o),h),e.push(h),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new R);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new R);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,u,h,d=new R;for(let f=0;f<r.length;f++){d.copy(r[f]),e.vmult(d,d),t.vadd(d,d);const p=d;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(a===void 0||p.y<a)&&(a=p.y),(u===void 0||p.y>u)&&(u=p.y),(l===void 0||p.z<l)&&(l=p.z),(h===void 0||p.z>h)&&(h=p.z)}n.set(o,a,l),i.set(c,u,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new R);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new R;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=e[n[a][0]],u=new R;t.vsub(c,u);const h=l.dot(u),d=new R;o.vsub(c,d);const f=l.dot(d);if(h<0&&f>0||h>0&&f<0)return!1}return r?1:-1}static project(t,e,n,i,r){const o=t.vertices.length,a=hz;let l=0,c=0;const u=dz,h=t.vertices;u.setZero(),Oe.vectorToLocalFrame(n,i,e,a),Oe.pointToLocalFrame(n,i,u,u);const d=u.dot(a);c=l=h[0].dot(a);for(let f=1;f<o;f++){const p=h[f].dot(a);p>l&&(l=p),p<c&&(c=p)}if(c-=d,l-=d,c>l){const f=c;c=l,l=f}r[0]=l,r[1]=c}}const J0=[],Q0=[];new R;const hz=new R,dz=new R;class Mh extends Jt{constructor(t){super({type:Jt.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=R,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new Xu({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new R),Mh.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)Io.set(r[o][0],r[o][1],r[o][2]),e.vmult(Io,Io),t.vadd(Io,Io),n(Io.x,Io.y,Io.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;ur[0].set(r.x,r.y,r.z),ur[1].set(-r.x,r.y,r.z),ur[2].set(-r.x,-r.y,r.z),ur[3].set(-r.x,-r.y,-r.z),ur[4].set(r.x,-r.y,-r.z),ur[5].set(r.x,r.y,-r.z),ur[6].set(-r.x,r.y,-r.z),ur[7].set(r.x,-r.y,r.z);const o=ur[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=ur[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,u=l.y,h=l.z;c>i.x&&(i.x=c),u>i.y&&(i.y=u),h>i.z&&(i.z=h),c<n.x&&(n.x=c),u<n.y&&(n.y=u),h<n.z&&(n.z=h)}}}const Io=new R,ur=[new R,new R,new R,new R,new R,new R,new R,new R],ny={DYNAMIC:1,STATIC:2,KINEMATIC:4},sy={AWAKE:0,SLEEPY:1,SLEEPING:2};class Yt extends U2{constructor(t){t===void 0&&(t={}),super(),this.id=Yt.idCounter++,this.index=-1,this.world=null,this.vlambda=new R,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new R,this.previousPosition=new R,this.interpolatedPosition=new R,this.initPosition=new R,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new R,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new R,this.force=new R;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?Yt.STATIC:Yt.DYNAMIC,typeof t.type==typeof Yt.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=Yt.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new R,this.quaternion=new gn,this.initQuaternion=new gn,this.previousQuaternion=new gn,this.interpolatedQuaternion=new gn,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new R,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new R,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new R,this.invInertia=new R,this.invInertiaWorld=new Xi,this.invMassSolve=0,this.invInertiaSolve=new R,this.invInertiaWorldSolve=new Xi,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new R(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new R(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new ri,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new R,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=Yt.AWAKE,this.wakeUpAfterNarrowphase=!1,t===Yt.SLEEPING&&this.dispatchEvent(Yt.wakeupEvent)}sleep(){this.sleepState=Yt.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===Yt.AWAKE&&n<i?(this.sleepState=Yt.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(Yt.sleepyEvent)):e===Yt.SLEEPY&&n>i?this.wakeUp():e===Yt.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(Yt.sleepEvent))}}updateSolveMassProperties(){this.sleepState===Yt.SLEEPING||this.type===Yt.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new R),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new R),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new R),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new R),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new R,r=new gn;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=fz,o=pz,a=this.quaternion,l=this.aabb,c=mz;for(let u=0;u!==i;u++){const h=t[u];a.vmult(e[u],r),r.vadd(this.position,r),a.mult(n[u],o),h.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=gz,i=xz;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new R),this.type!==Yt.DYNAMIC)return;this.sleepState===Yt.SLEEPING&&this.wakeUp();const n=yz;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new R),this.type!==Yt.DYNAMIC)return;const n=vz,i=wz;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===Yt.DYNAMIC&&(this.sleepState===Yt.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new R),this.type!==Yt.DYNAMIC)return;this.sleepState===Yt.SLEEPING&&this.wakeUp();const n=e,i=_z;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=Sz;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new R),this.type!==Yt.DYNAMIC)return;const n=Cz,i=Tz;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=Iz;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Mh.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new R;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===Yt.DYNAMIC||this.type===Yt.KINEMATIC)||this.sleepState===Yt.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,h=this.invInertiaWorld,d=this.linearFactor,f=u*t;i.x+=a.x*f*d.x,i.y+=a.y*f*d.y,i.z+=a.z*f*d.z;const p=h.elements,g=this.angularFactor,m=l.x*g.x,x=l.y*g.y,b=l.z*g.z;r.x+=t*(p[0]*m+p[1]*x+p[2]*b),r.y+=t*(p[3]*m+p[4]*x+p[5]*b),r.z+=t*(p[6]*m+p[7]*x+p[8]*b),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}Yt.idCounter=0;Yt.COLLIDE_EVENT_NAME="collide";Yt.DYNAMIC=ny.DYNAMIC;Yt.STATIC=ny.STATIC;Yt.KINEMATIC=ny.KINEMATIC;Yt.AWAKE=sy.AWAKE;Yt.SLEEPY=sy.SLEEPY;Yt.SLEEPING=sy.SLEEPING;Yt.wakeupEvent={type:"wakeup"};Yt.sleepyEvent={type:"sleepy"};Yt.sleepEvent={type:"sleep"};const fz=new R,pz=new gn,mz=new ri,gz=new Xi,xz=new Xi,bz=new Xi,yz=new R,vz=new R,wz=new R,_z=new R,Sz=new R,Cz=new R,Tz=new R,Iz=new R;class V2{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&Yt.STATIC)!==0||t.sleepState===Yt.SLEEPING)&&((e.type&Yt.STATIC)!==0||e.sleepState===Yt.SLEEPING))}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=Ez;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=Mz,i=kz,r=Az,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,u=l<c?`${l},${c}`:`${c},${l}`;n[u]=a,n.keys.push(u)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new R;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Ez=new R;new R;new gn;new R;const Mz={keys:[]},kz=[],Az=[];new R;new R;new R;class Nz extends V2{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class Ip{constructor(){this.rayFromWorld=new R,this.rayToWorld=new R,this.hitNormalWorld=new R,this.hitPointWorld=new R,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let W2,G2,H2,q2,j2,X2,K2;const iy={CLOSEST:1,ANY:2,ALL:4};W2=Jt.types.SPHERE;G2=Jt.types.PLANE;H2=Jt.types.BOX;q2=Jt.types.CYLINDER;j2=Jt.types.CONVEXPOLYHEDRON;X2=Jt.types.HEIGHTFIELD;K2=Jt.types.TRIMESH;class Mn{get[W2](){return this._intersectSphere}get[G2](){return this._intersectPlane}get[H2](){return this._intersectBox}get[q2](){return this._intersectConvex}get[j2](){return this._intersectConvex}get[X2](){return this._intersectHeightfield}get[K2](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new R),e===void 0&&(e=new R),this.from=t.clone(),this.to=e.clone(),this.direction=new R,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Mn.ANY,this.result=new Ip,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||Mn.ANY,this.result=e.result||new Ip,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(J_),tx.length=0,t.broadphase.aabbQuery(t,J_,tx),this.intersectBodies(tx),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const i=Rz,r=Dz;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if(!(n&&!l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){const r=this.from;if(jz(r,this.direction,n)>t.boundingSphereRadius)return;const a=this[t.type];a&&a.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new R(0,0,1);e.vmult(c,c);const u=new R;o.vsub(n,u);const h=u.dot(c);a.vsub(n,u);const d=u.dot(c);if(h*d>0||o.distanceTo(a)<h)return;const f=c.dot(l);if(Math.abs(f)<this.precision)return;const p=new R,g=new R,m=new R;o.vsub(n,p);const x=-c.dot(p)/f;l.scale(x,g),o.vadd(g,m),this.reportIntersection(c,m,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){t.data,t.elementSize;const o=$z;o.from.copy(this.from),o.to.copy(this.to),Oe.pointToLocalFrame(n,e,o.from,o.from),Oe.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=Lz;let l,c,u,h;l=c=0,u=h=t.data.length-1;const d=new ri;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),u=Math.min(u,a[0]+1),h=Math.min(h,a[1]+1);for(let f=l;f<u;f++)for(let p=c;p<h;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),Oe.pointToWorldFrame(n,e,t.pillarOffset,Nf),this._intersectConvex(t.pillarConvex,e,Nf,i,r,Q_),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),Oe.pointToWorldFrame(n,e,t.pillarOffset,Nf),this._intersectConvex(t.pillarConvex,e,Nf,i,r,Q_)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),h=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,d=u**2-4*c*h,f=Fz,p=Pz;if(!(d<0))if(d===0)o.lerp(a,d,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1);else{const g=(-u-Math.sqrt(d))/(2*c),m=(-u+Math.sqrt(d))/(2*c);if(g>=0&&g<=1&&(o.lerp(a,g,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=Oz,l=tS,c=o&&o.faceList||null,u=t.faces,h=t.vertices,d=t.faceNormals,f=this.direction,p=this.from,g=this.to,m=p.distanceTo(g),x=c?c.length:u.length,b=this.result;for(let v=0;!b.shouldStop&&v<x;v++){const y=c?c[v]:v,w=u[y],S=d[y],C=e,_=n;l.copy(h[w[0]]),C.vmult(l,l),l.vadd(_,l),l.vsub(p,l),C.vmult(S,a);const T=f.dot(a);if(Math.abs(T)<this.precision)continue;const I=a.dot(l)/T;if(!(I<0)){f.scale(I,ks),ks.vadd(p,ks),Ui.copy(h[w[0]]),C.vmult(Ui,Ui),_.vadd(Ui,Ui);for(let A=1;!b.shouldStop&&A<w.length-1;A++){hr.copy(h[w[A]]),dr.copy(h[w[A+1]]),C.vmult(hr,hr),C.vmult(dr,dr),_.vadd(hr,hr),_.vadd(dr,dr);const D=ks.distanceTo(p);!(Mn.pointInTriangle(ks,Ui,hr,dr)||Mn.pointInTriangle(ks,hr,Ui,dr))||D>m||this.reportIntersection(a,ks,r,i,y)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=zz,l=Hz,c=qz,u=tS,h=Bz,d=Uz,f=Vz,p=Gz,g=Wz,m=t.indices;t.vertices;const x=this.from,b=this.to,v=this.direction;c.position.copy(n),c.quaternion.copy(e),Oe.vectorToLocalFrame(n,e,v,h),Oe.pointToLocalFrame(n,e,x,d),Oe.pointToLocalFrame(n,e,b,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,h),h.normalize();const y=d.distanceSquared(f);t.tree.rayQuery(this,c,l);for(let w=0,S=l.length;!this.result.shouldStop&&w!==S;w++){const C=l[w];t.getNormal(C,a),t.getVertex(m[C*3],Ui),Ui.vsub(d,u);const _=h.dot(a),T=a.dot(u)/_;if(T<0)continue;h.scale(T,ks),ks.vadd(d,ks),t.getVertex(m[C*3+1],hr),t.getVertex(m[C*3+2],dr);const I=ks.distanceSquared(d);!(Mn.pointInTriangle(ks,hr,Ui,dr)||Mn.pointInTriangle(ks,Ui,hr,dr))||I>y||(Oe.vectorToWorldFrame(e,a,g),Oe.pointToWorldFrame(n,e,ks,p),this.reportIntersection(g,p,r,i,C))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r<"u"?r:-1,this.mode){case Mn.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case Mn.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case Mn.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(t,e,n,i){i.vsub(e,wa),n.vsub(e,Su),t.vsub(e,ex);const r=wa.dot(wa),o=wa.dot(Su),a=wa.dot(ex),l=Su.dot(Su),c=Su.dot(ex);let u,h;return(u=l*a-o*c)>=0&&(h=r*c-o*a)>=0&&u+h<r*l-o*o}}Mn.CLOSEST=iy.CLOSEST;Mn.ANY=iy.ANY;Mn.ALL=iy.ALL;const J_=new ri,tx=[],Su=new R,ex=new R,Rz=new R,Dz=new gn,ks=new R,Ui=new R,hr=new R,dr=new R;new R;new Ip;const Q_={faceList:[0]},Nf=new R,$z=new Mn,Lz=[],Fz=new R,Pz=new R,Oz=new R;new R;new R;const tS=new R,zz=new R,Bz=new R,Uz=new R,Vz=new R,Wz=new R,Gz=new R;new ri;const Hz=[],qz=new Oe,wa=new R,Rf=new R;function jz(s,t,e){e.vsub(s,wa);const n=wa.dot(t);return t.scale(n,Rf),Rf.vadd(s,Rf),e.distanceTo(Rf)}class ac extends V2{static checkBounds(t,e,n){let i,r;n===0?(i=t.position.x,r=e.position.x):n===1?(i=t.position.y,r=e.position.y):n===2&&(i=t.position.z,r=e.position.z);const o=t.boundingRadius,a=e.boundingRadius,l=i+o;return r-a<l}static insertionSortX(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.x<=i.aabb.lowerBound.x);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortY(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.y<=i.aabb.lowerBound.y);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortZ(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.z<=i.aabb.lowerBound.z);r--)t[r+1]=t[r];t[r+1]=i}return t}constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=n=>{e.push(n.body)},this._removeBodyHandler=n=>{const i=e.indexOf(n.body);i!==-1&&e.splice(i,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,n){const i=this.axisList,r=i.length,o=this.axisIndex;let a,l;for(this.dirty&&(this.sortList(),this.dirty=!1),a=0;a!==r;a++){const c=i[a];for(l=a+1;l<r;l++){const u=i[l];if(!!this.needBroadphaseCollision(c,u)){if(!ac.checkBounds(c,u,o))break;this.intersectionTest(c,u,e,n)}}}}sortList(){const t=this.axisList,e=this.axisIndex,n=t.length;for(let i=0;i!==n;i++){const r=t[i];r.aabbNeedsUpdate&&r.updateAABB()}e===0?ac.insertionSortX(t):e===1?ac.insertionSortY(t):e===2&&ac.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,n=0,i=0,r=0,o=0;const a=this.axisList,l=a.length,c=1/l;for(let f=0;f!==l;f++){const p=a[f],g=p.position.x;t+=g,e+=g*g;const m=p.position.y;n+=m,i+=m*m;const x=p.position.z;r+=x,o+=x*x}const u=e-t*t*c,h=i-n*n*c,d=o-r*r*c;u>h?u>d?this.axisIndex=0:this.axisIndex=2:h>d?this.axisIndex=1:this.axisIndex=2}aabbQuery(t,e,n){n===void 0&&(n=[]),this.dirty&&(this.sortList(),this.dirty=!1);const i=this.axisIndex;let r="x";i===1&&(r="y"),i===2&&(r="z");const o=this.axisList;e.lowerBound[r],e.upperBound[r];for(let a=0;a<o.length;a++){const l=o[a];l.aabbNeedsUpdate&&l.updateAABB(),l.aabb.overlaps(e)&&n.push(l)}return n}}class Y2{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class Cm{constructor(t,e,n){n===void 0&&(n={}),n=Y2.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Cm.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Cm.idCounter=0;class eS{constructor(){this.spatial=new R,this.rotational=new R}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class fl{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=fl.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new eS,this.jacobianElementB=new eS,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*t-i*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,u=i.invMassSolve;return r.scale(c,nS),a.scale(u,sS),n.invInertiaWorldSolve.vmult(o,iS),i.invInertiaWorldSolve.vmult(l,rS),t.multiplyVectors(nS,iS)+e.multiplyVectors(sS,rS)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,Df),c+=Df.dot(t.rotational),l.vmult(e.rotational,Df),c+=Df.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=Xz;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}fl.idCounter=0;const nS=new R,sS=new R,iS=new R,rS=new R,Df=new R,Xz=new R;class hp extends fl{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new R,this.rj=new R,this.ni=new R}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=Kz,c=Yz,u=i.velocity,h=i.angularVelocity;i.force,i.torque;const d=r.velocity,f=r.angularVelocity;r.force,r.torque;const p=Zz,g=this.jacobianElementA,m=this.jacobianElementB,x=this.ni;o.cross(x,l),a.cross(x,c),x.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(x),m.rotational.copy(c),p.copy(r.position),p.vadd(a,p),p.vsub(i.position,p),p.vsub(o,p);const b=x.dot(p),v=this.restitution+1,y=v*d.dot(x)-v*u.dot(x)+f.dot(c)-h.dot(l),w=this.computeGiMf();return-b*e-y*n-t*w}getImpactVelocityAlongNormal(){const t=Jz,e=Qz,n=tB,i=eB,r=nB;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const Kz=new R,Yz=new R,Zz=new R,Jz=new R,Qz=new R,tB=new R,eB=new R,nB=new R;class sB extends Cm{constructor(t,e,n,i,r){e===void 0&&(e=new R),i===void 0&&(i=new R),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new hp(t,n),a=this.equationY=new hp(t,n),l=this.equationZ=new hp(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}new R;new R;class oS extends fl{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new R(1,0,0),this.axisB=n.axisB?n.axisB.clone():new R(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=iB,a=rB,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.maxAngle)-i.dot(r),h=this.computeGW(),d=this.computeGiMf();return-u*e-h*n-t*d}}const iB=new R,rB=new R;new R;new R;new R;new R;class oB extends fl{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new R,this.axisB=new R,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*e-t*l}}class $f extends sB{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new R,o=n.pivotB?n.pivotB.clone():new R;super(t,r,e,o,i),(this.axisA=n.axisA?n.axisA.clone():new R(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new R(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new oS(t,e,n),u=this.rotationalEquation2=new oS(t,e,n),h=this.motorEquation=new oB(t,e,i);h.enabled=!1,this.equations.push(c,u,h)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=aB,a=lB,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const aB=new R,lB=new R;class aS extends fl{constructor(t,e,n){super(t,e,-n,n),this.ri=new R,this.rj=new R,this.t=new R}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=cB,o=uB,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),h=this.computeGiMf();return-u*e-t*h}}const cB=new R,uB=new R;class Tm{constructor(t,e,n){n=Y2.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Tm.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Tm.idCounter=0;class pl{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=pl.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}pl.idCounter=0;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new Mn;new R;new R;new R;new R(1,0,0),new R(0,1,0),new R(0,0,1);new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;class Lf extends Jt{constructor(t){if(super({type:Jt.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new R);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}new R;new R;new R;new R;new R;new R;new R;new R;new R;class hB extends Jt{constructor(){super({type:Jt.types.PLANE}),this.worldNormal=new R,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new R),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,i){qr.set(0,0,1),e.vmult(qr,qr);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),qr.x===1?i.x=t.x:qr.x===-1&&(n.x=t.x),qr.y===1?i.y=t.y:qr.y===-1&&(n.y=t.y),qr.z===1?i.z=t.z:qr.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const qr=new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new R;new ri;new R;new ri;new R;new R;new R;new R;new R;new R;new R;new ri;new R;new Oe;new ri;class dB{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class fB extends dB{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,u=t;let h,d,f,p,g,m;if(a!==0)for(let y=0;y!==c;y++)l[y].updateSolveMassProperties();const x=mB,b=gB,v=pB;x.length=a,b.length=a,v.length=a;for(let y=0;y!==a;y++){const w=o[y];v[y]=0,b[y]=w.computeB(u),x[y]=1/w.computeC()}if(a!==0){for(let S=0;S!==c;S++){const C=l[S],_=C.vlambda,T=C.wlambda;_.set(0,0,0),T.set(0,0,0)}for(n=0;n!==i;n++){p=0;for(let S=0;S!==a;S++){const C=o[S];h=b[S],d=x[S],m=v[S],g=C.computeGWlambda(),f=d*(h-g-C.eps*m),m+f<C.minForce?f=C.minForce-m:m+f>C.maxForce&&(f=C.maxForce-m),v[S]+=f,p+=f>0?f:-f,C.addToWlambda(f)}if(p*p<r)break}for(let S=0;S!==c;S++){const C=l[S],_=C.velocity,T=C.angularVelocity;C.vlambda.vmul(C.linearFactor,C.vlambda),_.vadd(C.vlambda,_),C.wlambda.vmul(C.angularFactor,C.wlambda),T.vadd(C.wlambda,T)}let y=o.length;const w=1/u;for(;y--;)o[y].multiplier=v[y]*w}return n}}const pB=[],mB=[],gB=[];Yt.STATIC;class xB{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class bB extends xB{constructor(){super(...arguments),this.type=R}constructObject(){return new R}}const en={sphereSphere:Jt.types.SPHERE,spherePlane:Jt.types.SPHERE|Jt.types.PLANE,boxBox:Jt.types.BOX|Jt.types.BOX,sphereBox:Jt.types.SPHERE|Jt.types.BOX,planeBox:Jt.types.PLANE|Jt.types.BOX,convexConvex:Jt.types.CONVEXPOLYHEDRON,sphereConvex:Jt.types.SPHERE|Jt.types.CONVEXPOLYHEDRON,planeConvex:Jt.types.PLANE|Jt.types.CONVEXPOLYHEDRON,boxConvex:Jt.types.BOX|Jt.types.CONVEXPOLYHEDRON,sphereHeightfield:Jt.types.SPHERE|Jt.types.HEIGHTFIELD,boxHeightfield:Jt.types.BOX|Jt.types.HEIGHTFIELD,convexHeightfield:Jt.types.CONVEXPOLYHEDRON|Jt.types.HEIGHTFIELD,sphereParticle:Jt.types.PARTICLE|Jt.types.SPHERE,planeParticle:Jt.types.PLANE|Jt.types.PARTICLE,boxParticle:Jt.types.BOX|Jt.types.PARTICLE,convexParticle:Jt.types.PARTICLE|Jt.types.CONVEXPOLYHEDRON,cylinderCylinder:Jt.types.CYLINDER,sphereCylinder:Jt.types.SPHERE|Jt.types.CYLINDER,planeCylinder:Jt.types.PLANE|Jt.types.CYLINDER,boxCylinder:Jt.types.BOX|Jt.types.CYLINDER,convexCylinder:Jt.types.CONVEXPOLYHEDRON|Jt.types.CYLINDER,heightfieldCylinder:Jt.types.HEIGHTFIELD|Jt.types.CYLINDER,particleCylinder:Jt.types.PARTICLE|Jt.types.CYLINDER,sphereTrimesh:Jt.types.SPHERE|Jt.types.TRIMESH,planeTrimesh:Jt.types.PLANE|Jt.types.TRIMESH};class yB{get[en.sphereSphere](){return this.sphereSphere}get[en.spherePlane](){return this.spherePlane}get[en.boxBox](){return this.boxBox}get[en.sphereBox](){return this.sphereBox}get[en.planeBox](){return this.planeBox}get[en.convexConvex](){return this.convexConvex}get[en.sphereConvex](){return this.sphereConvex}get[en.planeConvex](){return this.planeConvex}get[en.boxConvex](){return this.boxConvex}get[en.sphereHeightfield](){return this.sphereHeightfield}get[en.boxHeightfield](){return this.boxHeightfield}get[en.convexHeightfield](){return this.convexHeightfield}get[en.sphereParticle](){return this.sphereParticle}get[en.planeParticle](){return this.planeParticle}get[en.boxParticle](){return this.boxParticle}get[en.convexParticle](){return this.convexParticle}get[en.cylinderCylinder](){return this.convexConvex}get[en.sphereCylinder](){return this.sphereConvex}get[en.planeCylinder](){return this.planeConvex}get[en.boxCylinder](){return this.boxConvex}get[en.convexCylinder](){return this.convexConvex}get[en.heightfieldCylinder](){return this.heightfieldCylinder}get[en.particleCylinder](){return this.particleCylinder}get[en.sphereTrimesh](){return this.sphereTrimesh}get[en.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new bB,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new hp(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,u=i.material||e.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=r.material||n.material,h=o.material||i.material;if(u&&h&&u.friction>=0&&h.friction>=0&&(c=u.friction*h.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let f=n.invMass+i.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,g=p.length?p.pop():new aS(n,i,d*f),m=p.length?p.pop():new aS(n,i,d*f);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-d*f,g.maxForce=m.maxForce=d*f,g.ri.copy(t.ri),g.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=t.enabled,e.push(g,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];fa.setZero(),Hl.setZero(),ql.setZero();const r=e.bi;e.bj;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?(fa.vadd(e.ni,fa),Hl.vadd(e.ri,Hl),ql.vadd(e.rj,ql)):(fa.vsub(e.ni,fa),Hl.vadd(e.rj,Hl),ql.vadd(e.ri,ql));const o=1/t;Hl.scale(o,n.ri),ql.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),fa.normalize(),fa.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=_B,c=SB,u=vB,h=wB;for(let d=0,f=t.length;d!==f;d++){const p=t[d],g=e[d];let m=null;p.material&&g.material&&(m=n.getContactMaterial(p.material,g.material)||null);const x=p.type&Yt.KINEMATIC&&g.type&Yt.STATIC||p.type&Yt.STATIC&&g.type&Yt.KINEMATIC||p.type&Yt.KINEMATIC&&g.type&Yt.KINEMATIC;for(let b=0;b<p.shapes.length;b++){p.quaternion.mult(p.shapeOrientations[b],l),p.quaternion.vmult(p.shapeOffsets[b],u),u.vadd(p.position,u);const v=p.shapes[b];for(let y=0;y<g.shapes.length;y++){g.quaternion.mult(g.shapeOrientations[y],c),g.quaternion.vmult(g.shapeOffsets[y],h),h.vadd(g.position,h);const w=g.shapes[y];if(!(v.collisionFilterMask&w.collisionFilterGroup&&w.collisionFilterMask&v.collisionFilterGroup)||u.distanceTo(h)>v.boundingSphereRadius+w.boundingSphereRadius)continue;let S=null;v.material&&w.material&&(S=n.getContactMaterial(v.material,w.material)||null),this.currentContactMaterial=S||m||n.defaultContactMaterial;const C=v.type|w.type,_=this[C];if(_){let T=!1;v.type<w.type?T=_.call(this,v,w,u,h,l,c,p,g,v,w,x):T=_.call(this,w,v,h,u,c,l,g,p,v,w,x),T&&x&&(n.shapeOverlapKeeper.set(v.id,w.id),n.bodyOverlapKeeper.set(p.id,g.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,u,h){if(h)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,u);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,u,h){const d=this.createContactEquation(a,l,t,e,c,u);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,Ff),d.ni.scale(d.ni.dot(Ff),lS),Ff.vsub(lS,d.rj),-Ff.dot(d.ni)<=t.radius){if(h)return!0;const f=d.ri,p=d.rj;f.vadd(n,f),f.vsub(a.position,f),p.vadd(i,p),p.vsub(l.position,p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}sphereBox(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool,f=KB;n.vsub(i,Pf),e.getSideNormals(f,o);const p=t.radius;let g=!1;const m=ZB,x=JB,b=QB;let v=null,y=0,w=0,S=0,C=null;for(let N=0,O=f.length;N!==O&&g===!1;N++){const L=qB;L.copy(f[N]);const $=L.length();L.normalize();const W=Pf.dot(L);if(W<$+p&&W>0){const q=jB,H=XB;q.copy(f[(N+1)%3]),H.copy(f[(N+2)%3]);const X=q.length(),it=H.length();q.normalize(),H.normalize();const lt=Pf.dot(q),Y=Pf.dot(H);if(lt<X&&lt>-X&&Y<it&&Y>-it){const yt=Math.abs(W-$-p);if((C===null||yt<C)&&(C=yt,w=lt,S=Y,v=$,m.copy(L),x.copy(q),b.copy(H),y++,h))return!0}}}if(y){g=!0;const N=this.createContactEquation(a,l,t,e,c,u);m.scale(-p,N.ri),N.ni.copy(m),N.ni.negate(N.ni),m.scale(v,m),x.scale(w,x),m.vadd(x,m),b.scale(S,b),m.vadd(b,N.rj),N.ri.vadd(n,N.ri),N.ri.vsub(a.position,N.ri),N.rj.vadd(i,N.rj),N.rj.vsub(l.position,N.rj),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult)}let _=d.get();const T=YB;for(let N=0;N!==2&&!g;N++)for(let O=0;O!==2&&!g;O++)for(let L=0;L!==2&&!g;L++)if(_.set(0,0,0),N?_.vadd(f[0],_):_.vsub(f[0],_),O?_.vadd(f[1],_):_.vsub(f[1],_),L?_.vadd(f[2],_):_.vsub(f[2],_),i.vadd(_,T),T.vsub(n,T),T.lengthSquared()<p*p){if(h)return!0;g=!0;const $=this.createContactEquation(a,l,t,e,c,u);$.ri.copy(T),$.ri.normalize(),$.ni.copy($.ri),$.ri.scale(p,$.ri),$.rj.copy(_),$.ri.vadd(n,$.ri),$.ri.vsub(a.position,$.ri),$.rj.vadd(i,$.rj),$.rj.vsub(l.position,$.rj),this.result.push($),this.createFrictionEquationsFromContact($,this.frictionResult)}d.release(_),_=null;const I=d.get(),A=d.get(),D=d.get(),k=d.get(),M=d.get(),E=f.length;for(let N=0;N!==E&&!g;N++)for(let O=0;O!==E&&!g;O++)if(N%3!==O%3){f[O].cross(f[N],I),I.normalize(),f[N].vadd(f[O],A),D.copy(n),D.vsub(A,D),D.vsub(i,D);const L=D.dot(I);I.scale(L,k);let $=0;for(;$===N%3||$===O%3;)$++;M.copy(n),M.vsub(k,M),M.vsub(A,M),M.vsub(i,M);const W=Math.abs(L),q=M.length();if(W<f[$].length()&&q<p){if(h)return!0;g=!0;const H=this.createContactEquation(a,l,t,e,c,u);A.vadd(k,H.rj),H.rj.copy(H.rj),M.negate(H.ni),H.ni.normalize(),H.ri.copy(H.rj),H.ri.vadd(i,H.ri),H.ri.vsub(n,H.ri),H.ri.normalize(),H.ri.scale(p,H.ri),H.ri.vadd(n,H.ri),H.ri.vsub(a.position,H.ri),H.rj.vadd(i,H.rj),H.rj.vsub(l.position,H.rj),this.result.push(H),this.createFrictionEquationsFromContact(H,this.frictionResult)}}d.release(I,A,D,k,M)}planeBox(t,e,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}convexConvex(t,e,n,i,r,o,a,l,c,u,h,d,f){const p=p4;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,p,d,f)){const g=[],m=m4;t.clipAgainstHull(n,r,e,i,o,p,-100,100,g);let x=0;for(let b=0;b!==g.length;b++){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u),y=v.ri,w=v.rj;p.negate(v.ni),g[b].normal.negate(m),m.scale(g[b].depth,m),g[b].point.vadd(m,y),w.copy(g[b].point),y.vsub(n,y),w.vsub(i,w),y.vadd(n,y),y.vsub(a.position,y),w.vadd(i,w),w.vsub(l.position,w),this.result.push(v),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool;n.vsub(i,t4);const f=e.faceNormals,p=e.faces,g=e.vertices,m=t.radius;let x=!1;for(let b=0;b!==g.length;b++){const v=g[b],y=i4;o.vmult(v,y),i.vadd(y,y);const w=s4;if(y.vsub(n,w),w.lengthSquared()<m*m){if(h)return!0;x=!0;const S=this.createContactEquation(a,l,t,e,c,u);S.ri.copy(w),S.ri.normalize(),S.ni.copy(S.ri),S.ri.scale(m,S.ri),y.vsub(i,S.rj),S.ri.vadd(n,S.ri),S.ri.vsub(a.position,S.ri),S.rj.vadd(i,S.rj),S.rj.vsub(l.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);return}}for(let b=0,v=p.length;b!==v&&x===!1;b++){const y=f[b],w=p[b],S=r4;o.vmult(y,S);const C=o4;o.vmult(g[w[0]],C),C.vadd(i,C);const _=a4;S.scale(-m,_),n.vadd(_,_);const T=l4;_.vsub(C,T);const I=T.dot(S),A=c4;if(n.vsub(C,A),I<0&&A.dot(S)>0){const D=[];for(let k=0,M=w.length;k!==M;k++){const E=d.get();o.vmult(g[w[k]],E),i.vadd(E,E),D.push(E)}if(HB(D,S,n)){if(h)return!0;x=!0;const k=this.createContactEquation(a,l,t,e,c,u);S.scale(-m,k.ri),S.negate(k.ni);const M=d.get();S.scale(-I,M);const E=d.get();S.scale(-m,E),n.vsub(i,k.rj),k.rj.vadd(E,k.rj),k.rj.vadd(M,k.rj),k.rj.vadd(i,k.rj),k.rj.vsub(l.position,k.rj),k.ri.vadd(n,k.ri),k.ri.vsub(a.position,k.ri),d.release(M),d.release(E),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult);for(let N=0,O=D.length;N!==O;N++)d.release(D[N]);return}else for(let k=0;k!==w.length;k++){const M=d.get(),E=d.get();o.vmult(g[w[(k+1)%w.length]],M),o.vmult(g[w[(k+2)%w.length]],E),i.vadd(M,M),i.vadd(E,E);const N=e4;E.vsub(M,N);const O=n4;N.unit(O);const L=d.get(),$=d.get();n.vsub(M,$);const W=$.dot(O);O.scale(W,L),L.vadd(M,L);const q=d.get();if(L.vsub(n,q),W>0&&W*W<N.lengthSquared()&&q.lengthSquared()<m*m){if(h)return!0;const H=this.createContactEquation(a,l,t,e,c,u);L.vsub(i,H.rj),L.vsub(n,H.ni),H.ni.normalize(),H.ni.scale(m,H.ri),H.rj.vadd(i,H.rj),H.rj.vsub(l.position,H.rj),H.ri.vadd(n,H.ri),H.ri.vsub(a.position,H.ri),this.result.push(H),this.createFrictionEquationsFromContact(H,this.frictionResult);for(let X=0,it=D.length;X!==it;X++)d.release(D[X]);d.release(M),d.release(E),d.release(L),d.release(q),d.release($);return}d.release(M),d.release(E),d.release(L),d.release(q),d.release($)}for(let k=0,M=D.length;k!==M;k++)d.release(D[k])}}}planeConvex(t,e,n,i,r,o,a,l,c,u,h){const d=u4,f=h4;f.set(0,0,1),r.vmult(f,f);let p=0;const g=d4;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,g),f.dot(g)<=0){if(h)return!0;const b=this.createContactEquation(a,l,t,e,c,u),v=f4;f.scale(f.dot(g),v),d.vsub(v,v),v.vsub(n,b.ri),b.ni.copy(f),d.vsub(i,b.rj),b.ri.vadd(n,b.ri),b.ri.vsub(a.position,b.ri),b.rj.vadd(i,b.rj),b.rj.vsub(l.position,b.rj),this.result.push(b),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(b,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}sphereHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=t.radius,p=e.elementSize,g=E4,m=I4;Oe.pointToLocalFrame(i,o,n,m);let x=Math.floor((m.x-f)/p)-1,b=Math.ceil((m.x+f)/p)+1,v=Math.floor((m.y-f)/p)-1,y=Math.ceil((m.y+f)/p)+1;if(b<0||y<0||x>d.length||v>d[0].length)return;x<0&&(x=0),b<0&&(b=0),v<0&&(v=0),y<0&&(y=0),x>=d.length&&(x=d.length-1),b>=d.length&&(b=d.length-1),y>=d[0].length&&(y=d[0].length-1),v>=d[0].length&&(v=d[0].length-1);const w=[];e.getRectMinMax(x,v,b,y,w);const S=w[0],C=w[1];if(m.z-f>C||m.z+f<S)return;const _=this.result;for(let T=x;T<b;T++)for(let I=v;I<y;I++){const A=_.length;let D=!1;if(e.getConvexTrianglePillar(T,I,!1),Oe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(D=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&D||(e.getConvexTrianglePillar(T,I,!0),Oe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(D=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&D))return!0;if(_.length-A>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=e.elementSize,p=t.boundingSphereRadius,g=C4,m=T4,x=S4;Oe.pointToLocalFrame(i,o,n,x);let b=Math.floor((x.x-p)/f)-1,v=Math.ceil((x.x+p)/f)+1,y=Math.floor((x.y-p)/f)-1,w=Math.ceil((x.y+p)/f)+1;if(v<0||w<0||b>d.length||y>d[0].length)return;b<0&&(b=0),v<0&&(v=0),y<0&&(y=0),w<0&&(w=0),b>=d.length&&(b=d.length-1),v>=d.length&&(v=d.length-1),w>=d[0].length&&(w=d[0].length-1),y>=d[0].length&&(y=d[0].length-1);const S=[];e.getRectMinMax(b,y,v,w,S);const C=S[0],_=S[1];if(!(x.z-p>_||x.z+p<C))for(let T=b;T<v;T++)for(let I=y;I<w;I++){let A=!1;if(e.getConvexTrianglePillar(T,I,!1),Oe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(A=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&A||(e.getConvexTrianglePillar(T,I,!0),Oe.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(A=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&A))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,u,h){const d=y4;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(h)return!0;const p=this.createContactEquation(l,a,e,t,c,u);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,u,h){const d=g4;d.set(0,0,1),a.quaternion.vmult(d,d);const f=x4;if(i.vsub(a.position,f),d.dot(f)<=0){if(h)return!0;const g=this.createContactEquation(l,a,e,t,c,u);g.ni.copy(d),g.ni.negate(g.ni),g.ri.set(0,0,0);const m=b4;d.scale(d.dot(i),m),i.vsub(m,m),g.rj.copy(m),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexParticle(t,e,n,i,r,o,a,l,c,u,h){let d=-1;const f=w4,p=_4;let g=null;const m=v4;if(m.copy(i),m.vsub(n,m),r.conjugate(cS),cS.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let x=0,b=t.faces.length;x!==b;x++){const v=[t.worldVertices[t.faces[x][0]]],y=t.worldFaceNormals[x];i.vsub(v[0],uS);const w=-y.dot(uS);if(g===null||Math.abs(w)<Math.abs(g)){if(h)return!0;g=w,d=x,f.copy(y)}}if(d!==-1){const x=this.createContactEquation(l,a,e,t,c,u);f.scale(g,p),p.vadd(i,p),p.vsub(n,p),x.rj.copy(p),f.negate(x.ni),x.ri.set(0,0,0);const b=x.ri,v=x.rj;b.vadd(i,b),b.vsub(l.position,b),v.vadd(n,v),v.vsub(a.position,v),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,u,h)}particleCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexParticle(e,t,i,n,o,r,l,a,c,u,h)}sphereTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=NB,f=RB,p=DB,g=$B,m=LB,x=FB,b=BB,v=AB,y=MB,w=UB;Oe.pointToLocalFrame(i,o,n,m);const S=t.radius;b.lowerBound.set(m.x-S,m.y-S,m.z-S),b.upperBound.set(m.x+S,m.y+S,m.z+S),e.getTrianglesInAABB(b,w);const C=kB,_=t.radius*t.radius;for(let k=0;k<w.length;k++)for(let M=0;M<3;M++)if(e.getVertex(e.indices[w[k]*3+M],C),C.vsub(m,y),y.lengthSquared()<=_){if(v.copy(C),Oe.pointToWorldFrame(i,o,v,C),C.vsub(n,y),h)return!0;let E=this.createContactEquation(a,l,t,e,c,u);E.ni.copy(y),E.ni.normalize(),E.ri.copy(E.ni),E.ri.scale(t.radius,E.ri),E.ri.vadd(n,E.ri),E.ri.vsub(a.position,E.ri),E.rj.copy(C),E.rj.vsub(l.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}for(let k=0;k<w.length;k++)for(let M=0;M<3;M++){e.getVertex(e.indices[w[k]*3+M],d),e.getVertex(e.indices[w[k]*3+(M+1)%3],f),f.vsub(d,p),m.vsub(f,x);const E=x.dot(p);m.vsub(d,x);let N=x.dot(p);if(N>0&&E<0&&(m.vsub(d,x),g.copy(p),g.normalize(),N=x.dot(g),g.scale(N,x),x.vadd(d,x),x.distanceTo(m)<t.radius)){if(h)return!0;const L=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,L.ni),L.ni.normalize(),L.ni.scale(t.radius,L.ri),L.ri.vadd(n,L.ri),L.ri.vsub(a.position,L.ri),Oe.pointToWorldFrame(i,o,x,x),x.vsub(l.position,L.rj),Oe.vectorToWorldFrame(o,L.ni,L.ni),Oe.vectorToWorldFrame(o,L.ri,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}const T=PB,I=OB,A=zB,D=EB;for(let k=0,M=w.length;k!==M;k++){e.getTriangleVertices(w[k],T,I,A),e.getNormal(w[k],D),m.vsub(T,x);let E=x.dot(D);if(D.scale(E,x),m.vsub(x,x),E=x.distanceTo(m),Mn.pointInTriangle(x,T,I,A)&&E<t.radius){if(h)return!0;let N=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,N.ni),N.ni.normalize(),N.ni.scale(t.radius,N.ri),N.ri.vadd(n,N.ri),N.ri.vsub(a.position,N.ri),Oe.pointToWorldFrame(i,o,x,x),x.vsub(l.position,N.rj),Oe.vectorToWorldFrame(o,N.ni,N.ni),Oe.vectorToWorldFrame(o,N.ri,N.ri),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult)}}w.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=new R,f=CB;f.set(0,0,1),r.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,d);const g=new R;g.copy(d),Oe.pointToWorldFrame(i,o,g,d);const m=TB;if(d.vsub(n,m),f.dot(m)<=0){if(h)return!0;const b=this.createContactEquation(a,l,t,e,c,u);b.ni.copy(f);const v=IB;f.scale(m.dot(f),v),d.vsub(v,v),b.ri.copy(v),b.ri.vsub(a.position,b.ri),b.rj.copy(d),b.rj.vsub(l.position,b.rj),this.result.push(b),this.createFrictionEquationsFromContact(b,this.frictionResult)}}}}const fa=new R,Hl=new R,ql=new R,vB=new R,wB=new R,_B=new gn,SB=new gn,CB=new R,TB=new R,IB=new R,EB=new R,MB=new R;new R;const kB=new R,AB=new R,NB=new R,RB=new R,DB=new R,$B=new R,LB=new R,FB=new R,PB=new R,OB=new R,zB=new R,BB=new ri,UB=[],Ff=new R,lS=new R,VB=new R,WB=new R,GB=new R;function HB(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=VB;s[(r+1)%i].vsub(o,a);const l=WB;a.cross(t,l);const c=GB;e.vsub(o,c);const u=l.dot(c);if(n===null||u>0&&n===!0||u<=0&&n===!1){n===null&&(n=u>0);continue}else return!1}return!0}const Pf=new R,qB=new R,jB=new R,XB=new R,KB=[new R,new R,new R,new R,new R,new R],YB=new R,ZB=new R,JB=new R,QB=new R,t4=new R,e4=new R,n4=new R,s4=new R,i4=new R,r4=new R,o4=new R,a4=new R,l4=new R,c4=new R;new R;new R;const u4=new R,h4=new R,d4=new R,f4=new R,p4=new R,m4=new R,g4=new R,x4=new R,b4=new R,y4=new R,cS=new gn,v4=new R;new R;const w4=new R,uS=new R,_4=new R,S4=new R,C4=new R,T4=[0],I4=new R,E4=new R;class hS{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const u=n[l];for(;u>i[a];)a++;c=u===i[a],c||dS(t,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=i[l];for(;u>n[a];)a++;c=n[a]===u,c||dS(e,u)}}}function dS(s,t){s.push((t&4294901760)>>16,t&65535)}const nx=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class M4{constructor(){this.data={keys:[]}}get(t,e){const n=nx(t,e);return this.data[n]}set(t,e,n){const i=nx(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=nx(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class k4 extends U2{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new R,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new R,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new Nz,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new fB,this.constraints=[],this.narrowphase=new yB(this),this.collisionMatrix=new Y_,this.collisionMatrixPrevious=new Y_,this.bodyOverlapKeeper=new hS,this.shapeOverlapKeeper=new hS,this.contactmaterials=[],this.contactMaterialTable=new M4,this.defaultMaterial=new pl("default"),this.defaultContactMaterial=new Tm(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Ip?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=Mn.ALL,n.from=t,n.to=e,n.callback=i,sx.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=Mn.ANY,n.from=t,n.to=e,n.result=i,sx.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=Mn.CLOSEST,n.from=t,n.to=e,n.result=i,sx.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof Yt&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=Ln.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const i=n-this.lastCallTime;this.step(t,i,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=Ln.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!(Ln.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=$4,i=L4,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,h=Yt.DYNAMIC;let d=-1/0;const f=this.constraints,p=D4;l.length();const g=l.x,m=l.y,x=l.z;let b=0;for(c&&(d=Ln.now()),b=0;b!==r;b++){const k=o[b];if(k.type===h){const M=k.force,E=k.mass;M.x+=E*g,M.y+=E*m,M.z+=E*x}}for(let k=0,M=this.subsystems.length;k!==M;k++)this.subsystems[k].update();c&&(d=Ln.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(u.broadphase=Ln.now()-d);let v=f.length;for(b=0;b!==v;b++){const k=f[b];if(!k.collideConnected)for(let M=n.length-1;M>=0;M-=1)(k.bodyA===n[M]&&k.bodyB===i[M]||k.bodyB===n[M]&&k.bodyA===i[M])&&(n.splice(M,1),i.splice(M,1))}this.collisionMatrixTick(),c&&(d=Ln.now());const y=R4,w=e.length;for(b=0;b!==w;b++)y.push(e[b]);e.length=0;const S=this.frictionEquations.length;for(b=0;b!==S;b++)p.push(this.frictionEquations[b]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,y,this.frictionEquations,p),c&&(u.narrowphase=Ln.now()-d),c&&(d=Ln.now()),b=0;b<this.frictionEquations.length;b++)a.addEquation(this.frictionEquations[b]);const C=e.length;for(let k=0;k!==C;k++){const M=e[k],E=M.bi,N=M.bj,O=M.si,L=M.sj;let $;if(E.material&&N.material?$=this.getContactMaterial(E.material,N.material)||this.defaultContactMaterial:$=this.defaultContactMaterial,$.friction,E.material&&N.material&&(E.material.friction>=0&&N.material.friction>=0&&E.material.friction*N.material.friction,E.material.restitution>=0&&N.material.restitution>=0&&(M.restitution=E.material.restitution*N.material.restitution)),a.addEquation(M),E.allowSleep&&E.type===Yt.DYNAMIC&&E.sleepState===Yt.SLEEPING&&N.sleepState===Yt.AWAKE&&N.type!==Yt.STATIC){const W=N.velocity.lengthSquared()+N.angularVelocity.lengthSquared(),q=N.sleepSpeedLimit**2;W>=q*2&&(E.wakeUpAfterNarrowphase=!0)}if(N.allowSleep&&N.type===Yt.DYNAMIC&&N.sleepState===Yt.SLEEPING&&E.sleepState===Yt.AWAKE&&E.type!==Yt.STATIC){const W=E.velocity.lengthSquared()+E.angularVelocity.lengthSquared(),q=E.sleepSpeedLimit**2;W>=q*2&&(N.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(E,N,!0),this.collisionMatrixPrevious.get(E,N)||(Cu.body=N,Cu.contact=M,E.dispatchEvent(Cu),Cu.body=E,N.dispatchEvent(Cu)),this.bodyOverlapKeeper.set(E.id,N.id),this.shapeOverlapKeeper.set(O.id,L.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=Ln.now()-d,d=Ln.now()),b=0;b!==r;b++){const k=o[b];k.wakeUpAfterNarrowphase&&(k.wakeUp(),k.wakeUpAfterNarrowphase=!1)}for(v=f.length,b=0;b!==v;b++){const k=f[b];k.update();for(let M=0,E=k.equations.length;M!==E;M++){const N=k.equations[M];a.addEquation(N)}}a.solve(t,this),c&&(u.solve=Ln.now()-d),a.removeAllEquations();const _=Math.pow;for(b=0;b!==r;b++){const k=o[b];if(k.type&h){const M=_(1-k.linearDamping,t),E=k.velocity;E.scale(M,E);const N=k.angularVelocity;if(N){const O=_(1-k.angularDamping,t);N.scale(O,N)}}}this.dispatchEvent(N4),c&&(d=Ln.now());const I=this.stepnumber%(this.quatNormalizeSkip+1)===0,A=this.quatNormalizeFast;for(b=0;b!==r;b++)o[b].integrate(t,I,A);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=Ln.now()-d),this.stepnumber+=1,this.dispatchEvent(A4);let D=!0;if(this.allowSleep)for(D=!1,b=0;b!==r;b++){const k=o[b];k.sleepTick(this.time),k.sleepState!==Yt.SLEEPING&&(D=!0)}this.hasActiveBodies=D}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(jr,Xr),t){for(let r=0,o=jr.length;r<o;r+=2)Tu.bodyA=this.getBodyById(jr[r]),Tu.bodyB=this.getBodyById(jr[r+1]),this.dispatchEvent(Tu);Tu.bodyA=Tu.bodyB=null}if(e){for(let r=0,o=Xr.length;r<o;r+=2)Iu.bodyA=this.getBodyById(Xr[r]),Iu.bodyB=this.getBodyById(Xr[r+1]),this.dispatchEvent(Iu);Iu.bodyA=Iu.bodyB=null}jr.length=Xr.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(jr,Xr),n){for(let r=0,o=jr.length;r<o;r+=2){const a=this.getShapeById(jr[r]),l=this.getShapeById(jr[r+1]);Kr.shapeA=a,Kr.shapeB=l,a&&(Kr.bodyA=a.body),l&&(Kr.bodyB=l.body),this.dispatchEvent(Kr)}Kr.bodyA=Kr.bodyB=Kr.shapeA=Kr.shapeB=null}if(i){for(let r=0,o=Xr.length;r<o;r+=2){const a=this.getShapeById(Xr[r]),l=this.getShapeById(Xr[r+1]);Yr.shapeA=a,Yr.shapeB=l,a&&(Yr.bodyA=a.body),l&&(Yr.bodyB=l.body),this.dispatchEvent(Yr)}Yr.bodyA=Yr.bodyB=Yr.shapeA=Yr.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new ri;const sx=new Mn,Ln=globalThis.performance||{};if(!Ln.now){let s=Date.now();Ln.timing&&Ln.timing.navigationStart&&(s=Ln.timing.navigationStart),Ln.now=()=>Date.now()-s}new R;const A4={type:"postStep"},N4={type:"preStep"},Cu={type:Yt.COLLIDE_EVENT_NAME,body:null,contact:null},R4=[],D4=[],$4=[],L4=[],jr=[],Xr=[],Tu={type:"beginContact",bodyA:null,bodyB:null},Iu={type:"endContact",bodyA:null,bodyB:null},Kr={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Yr={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},fS={type:"change"},ix={type:"start"},pS={type:"end"};class F4 extends cl{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new G,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:kl.ROTATE,MIDDLE:kl.DOLLY,RIGHT:kl.PAN},this.touches={ONE:Al.ROTATE,TWO:Al.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(j){j.addEventListener("keydown",re),this._domElementKeyEvents=j},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(fS),n.update(),r=i.NONE},this.update=function(){const j=new G,nt=new Wa().setFromUnitVectors(t.up,new G(0,1,0)),Ut=nt.clone().invert(),jt=new G,Vt=new Wa,ie=2*Math.PI;return function(){const Se=n.object.position;j.copy(Se).sub(n.target),j.applyQuaternion(nt),a.setFromVector3(j),n.autoRotate&&r===i.NONE&&T(C()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Me=n.minAzimuthAngle,ve=n.maxAzimuthAngle;return isFinite(Me)&&isFinite(ve)&&(Me<-Math.PI?Me+=ie:Me>Math.PI&&(Me-=ie),ve<-Math.PI?ve+=ie:ve>Math.PI&&(ve-=ie),Me<=ve?a.theta=Math.max(Me,Math.min(ve,a.theta)):a.theta=a.theta>(Me+ve)/2?Math.max(Me,a.theta):Math.min(ve,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),j.setFromSpherical(a),j.applyQuaternion(Ut),Se.copy(n.target).add(j),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||jt.distanceToSquared(n.object.position)>o||8*(1-Vt.dot(n.object.quaternion))>o?(n.dispatchEvent(fS),jt.copy(n.object.position),Vt.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",rt),n.domElement.removeEventListener("pointerdown",_t),n.domElement.removeEventListener("pointercancel",Ot),n.domElement.removeEventListener("wheel",Lt),n.domElement.removeEventListener("pointermove",Et),n.domElement.removeEventListener("pointerup",gt),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",re)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new G_,l=new G_;let c=1;const u=new G;let h=!1;const d=new Nt,f=new Nt,p=new Nt,g=new Nt,m=new Nt,x=new Nt,b=new Nt,v=new Nt,y=new Nt,w=[],S={};function C(){return 2*Math.PI/60/60*n.autoRotateSpeed}function _(){return Math.pow(.95,n.zoomSpeed)}function T(j){l.theta-=j}function I(j){l.phi-=j}const A=function(){const j=new G;return function(Ut,jt){j.setFromMatrixColumn(jt,0),j.multiplyScalar(-Ut),u.add(j)}}(),D=function(){const j=new G;return function(Ut,jt){n.screenSpacePanning===!0?j.setFromMatrixColumn(jt,1):(j.setFromMatrixColumn(jt,0),j.crossVectors(n.object.up,j)),j.multiplyScalar(Ut),u.add(j)}}(),k=function(){const j=new G;return function(Ut,jt){const Vt=n.domElement;if(n.object.isPerspectiveCamera){const ie=n.object.position;j.copy(ie).sub(n.target);let Xt=j.length();Xt*=Math.tan(n.object.fov/2*Math.PI/180),A(2*Ut*Xt/Vt.clientHeight,n.object.matrix),D(2*jt*Xt/Vt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(A(Ut*(n.object.right-n.object.left)/n.object.zoom/Vt.clientWidth,n.object.matrix),D(jt*(n.object.top-n.object.bottom)/n.object.zoom/Vt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function M(j){n.object.isPerspectiveCamera?c/=j:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*j)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function E(j){n.object.isPerspectiveCamera?c*=j:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/j)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function N(j){d.set(j.clientX,j.clientY)}function O(j){b.set(j.clientX,j.clientY)}function L(j){g.set(j.clientX,j.clientY)}function $(j){f.set(j.clientX,j.clientY),p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const nt=n.domElement;T(2*Math.PI*p.x/nt.clientHeight),I(2*Math.PI*p.y/nt.clientHeight),d.copy(f),n.update()}function W(j){v.set(j.clientX,j.clientY),y.subVectors(v,b),y.y>0?M(_()):y.y<0&&E(_()),b.copy(v),n.update()}function q(j){m.set(j.clientX,j.clientY),x.subVectors(m,g).multiplyScalar(n.panSpeed),k(x.x,x.y),g.copy(m),n.update()}function H(j){j.deltaY<0?E(_()):j.deltaY>0&&M(_()),n.update()}function X(j){let nt=!1;switch(j.code){case n.keys.UP:k(0,n.keyPanSpeed),nt=!0;break;case n.keys.BOTTOM:k(0,-n.keyPanSpeed),nt=!0;break;case n.keys.LEFT:k(n.keyPanSpeed,0),nt=!0;break;case n.keys.RIGHT:k(-n.keyPanSpeed,0),nt=!0;break}nt&&(j.preventDefault(),n.update())}function it(){if(w.length===1)d.set(w[0].pageX,w[0].pageY);else{const j=.5*(w[0].pageX+w[1].pageX),nt=.5*(w[0].pageY+w[1].pageY);d.set(j,nt)}}function lt(){if(w.length===1)g.set(w[0].pageX,w[0].pageY);else{const j=.5*(w[0].pageX+w[1].pageX),nt=.5*(w[0].pageY+w[1].pageY);g.set(j,nt)}}function Y(){const j=w[0].pageX-w[1].pageX,nt=w[0].pageY-w[1].pageY,Ut=Math.sqrt(j*j+nt*nt);b.set(0,Ut)}function yt(){n.enableZoom&&Y(),n.enablePan&&lt()}function vt(){n.enableZoom&&Y(),n.enableRotate&&it()}function xt(j){if(w.length==1)f.set(j.pageX,j.pageY);else{const Ut=te(j),jt=.5*(j.pageX+Ut.x),Vt=.5*(j.pageY+Ut.y);f.set(jt,Vt)}p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const nt=n.domElement;T(2*Math.PI*p.x/nt.clientHeight),I(2*Math.PI*p.y/nt.clientHeight),d.copy(f)}function bt(j){if(w.length===1)m.set(j.pageX,j.pageY);else{const nt=te(j),Ut=.5*(j.pageX+nt.x),jt=.5*(j.pageY+nt.y);m.set(Ut,jt)}x.subVectors(m,g).multiplyScalar(n.panSpeed),k(x.x,x.y),g.copy(m)}function Dt(j){const nt=te(j),Ut=j.pageX-nt.x,jt=j.pageY-nt.y,Vt=Math.sqrt(Ut*Ut+jt*jt);v.set(0,Vt),y.set(0,Math.pow(v.y/b.y,n.zoomSpeed)),M(y.y),b.copy(v)}function ct(j){n.enableZoom&&Dt(j),n.enablePan&&bt(j)}function ht(j){n.enableZoom&&Dt(j),n.enableRotate&&xt(j)}function _t(j){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(j.pointerId),n.domElement.addEventListener("pointermove",Et),n.domElement.addEventListener("pointerup",gt)),kt(j),j.pointerType==="touch"?B(j):Pt(j))}function Et(j){n.enabled!==!1&&(j.pointerType==="touch"?F(j):at(j))}function gt(j){Rt(j),w.length===0&&(n.domElement.releasePointerCapture(j.pointerId),n.domElement.removeEventListener("pointermove",Et),n.domElement.removeEventListener("pointerup",gt)),n.dispatchEvent(pS),r=i.NONE}function Ot(j){Rt(j)}function Pt(j){let nt;switch(j.button){case 0:nt=n.mouseButtons.LEFT;break;case 1:nt=n.mouseButtons.MIDDLE;break;case 2:nt=n.mouseButtons.RIGHT;break;default:nt=-1}switch(nt){case kl.DOLLY:if(n.enableZoom===!1)return;O(j),r=i.DOLLY;break;case kl.ROTATE:if(j.ctrlKey||j.metaKey||j.shiftKey){if(n.enablePan===!1)return;L(j),r=i.PAN}else{if(n.enableRotate===!1)return;N(j),r=i.ROTATE}break;case kl.PAN:if(j.ctrlKey||j.metaKey||j.shiftKey){if(n.enableRotate===!1)return;N(j),r=i.ROTATE}else{if(n.enablePan===!1)return;L(j),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(ix)}function at(j){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;$(j);break;case i.DOLLY:if(n.enableZoom===!1)return;W(j);break;case i.PAN:if(n.enablePan===!1)return;q(j);break}}function Lt(j){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(j.preventDefault(),n.dispatchEvent(ix),H(j),n.dispatchEvent(pS))}function re(j){n.enabled===!1||n.enablePan===!1||X(j)}function B(j){switch(zt(j),w.length){case 1:switch(n.touches.ONE){case Al.ROTATE:if(n.enableRotate===!1)return;it(),r=i.TOUCH_ROTATE;break;case Al.PAN:if(n.enablePan===!1)return;lt(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case Al.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;yt(),r=i.TOUCH_DOLLY_PAN;break;case Al.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;vt(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(ix)}function F(j){switch(zt(j),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;xt(j),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;bt(j),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ct(j),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ht(j),n.update();break;default:r=i.NONE}}function rt(j){n.enabled!==!1&&j.preventDefault()}function kt(j){w.push(j)}function Rt(j){delete S[j.pointerId];for(let nt=0;nt<w.length;nt++)if(w[nt].pointerId==j.pointerId){w.splice(nt,1);return}}function zt(j){let nt=S[j.pointerId];nt===void 0&&(nt=new Nt,S[j.pointerId]=nt),nt.set(j.pageX,j.pageY)}function te(j){const nt=j.pointerId===w[0].pointerId?w[1]:w[0];return S[nt.pointerId]}n.domElement.addEventListener("contextmenu",rt),n.domElement.addEventListener("pointerdown",_t),n.domElement.addEventListener("pointercancel",Ot),n.domElement.addEventListener("wheel",Lt,{passive:!1}),this.update()}}class ry{constructor(){this.meshes=[],this.bodies=[],this.constraints=[]}syncMeshesToBodies(){this.meshes.forEach((t,e)=>{t.position.x=this.bodies[e].position.x,t.position.y=this.bodies[e].position.y,t.position.z=this.bodies[e].position.z,t.quaternion.x=this.bodies[e].quaternion.x,t.quaternion.y=this.bodies[e].quaternion.y,t.quaternion.z=this.bodies[e].quaternion.z,t.quaternion.w=this.bodies[e].quaternion.w})}}var ml=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function P4(s){var t=s.default;if(typeof t=="function"){var e=function(){return t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),e}function er(s,t){this.current=s,this.next=t,this._inNormal=this.inwardsNormal(),this._outNormal=this.outwardsNormal()}er.prototype.outwardsNormal=function(){var s=this.inwardsNormal();return[-s[0],-s[1]]};er.prototype.inwardsNormal=function(){var s=this.next[0]-this.current[0],t=this.next[1]-this.current[1],e=Math.sqrt(s*s+t*t);if(e===0)throw new Error("Vertices overlap");return[-t/e,s/e]};er.prototype.offset=function(s,t){return er.offsetEdge(this.current,this.next,s,t)};er.prototype.inverseOffset=function(s,t){return er.offsetEdge(this.next,this.current,s,t)};er.offsetEdge=function(s,t,e,n){return new er([s[0]+e,s[1]+n],[t[0]+e,t[1]+n])};er.prototype.inverse=function(){return new er(this.next,this.current)};var O4=er,Z2={exports:{}},Ni={exports:{}},J2={NORMAL:0,NON_CONTRIBUTING:1,SAME_TRANSITION:2,DIFFERENT_TRANSITION:3},oy={exports:{}};oy.exports=oh;oy.exports.default=oh;function oh(s,t){if(!(this instanceof oh))return new oh(s,t);if(this.data=s||[],this.length=this.data.length,this.compare=t||z4,this.length>0)for(var e=(this.length>>1)-1;e>=0;e--)this._down(e)}function z4(s,t){return s<t?-1:s>t?1:0}oh.prototype={push:function(s){this.data.push(s),this.length++,this._up(this.length-1)},pop:function(){if(this.length!==0){var s=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),s}},peek:function(){return this.data[0]},_up:function(s){for(var t=this.data,e=this.compare,n=t[s];s>0;){var i=s-1>>1,r=t[i];if(e(n,r)>=0)break;t[s]=r,s=i}t[s]=n},_down:function(s){for(var t=this.data,e=this.compare,n=this.length>>1,i=t[s];s<n;){var r=(s<<1)+1,o=r+1,a=t[r];if(o<this.length&&e(t[o],a)<0&&(r=o,a=t[o]),e(a,i)>=0)break;t[s]=a,s=r}t[s]=i}};function or(){}or.prototype.clear=function(){this._root=null,this.size=0};or.prototype.find=function(s){for(var t=this._root;t!==null;){var e=this._comparator(s,t.data);if(e===0)return t.data;t=t.get_child(e>0)}return null};or.prototype.findIter=function(s){for(var t=this._root,e=this.iterator();t!==null;){var n=this._comparator(s,t.data);if(n===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(n>0)}return null};or.prototype.lowerBound=function(s){for(var t=this._root,e=this.iterator(),n=this._comparator;t!==null;){var i=n(s,t.data);if(i===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(i>0)}for(var r=e._ancestors.length-1;r>=0;--r)if(t=e._ancestors[r],n(s,t.data)<0)return e._cursor=t,e._ancestors.length=r,e;return e._ancestors.length=0,e};or.prototype.upperBound=function(s){for(var t=this.lowerBound(s),e=this._comparator;t.data()!==null&&e(t.data(),s)===0;)t.next();return t};or.prototype.min=function(){var s=this._root;if(s===null)return null;for(;s.left!==null;)s=s.left;return s.data};or.prototype.max=function(){var s=this._root;if(s===null)return null;for(;s.right!==null;)s=s.right;return s.data};or.prototype.iterator=function(){return new Qc(this)};or.prototype.each=function(s){for(var t=this.iterator(),e;(e=t.next())!==null;)if(s(e)===!1)return};or.prototype.reach=function(s){for(var t=this.iterator(),e;(e=t.prev())!==null;)if(s(e)===!1)return};function Qc(s){this._tree=s,this._ancestors=[],this._cursor=null}Qc.prototype.data=function(){return this._cursor!==null?this._cursor.data:null};Qc.prototype.next=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._minNode(s)}else if(this._cursor.right===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.right===t)}else this._ancestors.push(this._cursor),this._minNode(this._cursor.right);return this._cursor!==null?this._cursor.data:null};Qc.prototype.prev=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._maxNode(s)}else if(this._cursor.left===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.left===t)}else this._ancestors.push(this._cursor),this._maxNode(this._cursor.left);return this._cursor!==null?this._cursor.data:null};Qc.prototype._minNode=function(s){for(;s.left!==null;)this._ancestors.push(s),s=s.left;this._cursor=s};Qc.prototype._maxNode=function(s){for(;s.right!==null;)this._ancestors.push(s),s=s.right;this._cursor=s};var Q2=or,B4=Q2;function mc(s){this.data=s,this.left=null,this.right=null,this.red=!0}mc.prototype.get_child=function(s){return s?this.right:this.left};mc.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Im(s){this._root=null,this._comparator=s,this.size=0}Im.prototype=new B4;Im.prototype.insert=function(s){var t=!1;if(this._root===null)this._root=new mc(s),t=!0,this.size++;else{var e=new mc(void 0),n=0,i=0,r=null,o=e,a=null,l=this._root;for(o.right=this._root;;){if(l===null?(l=new mc(s),a.set_child(n,l),t=!0,this.size++):pi(l.left)&&pi(l.right)&&(l.red=!0,l.left.red=!1,l.right.red=!1),pi(l)&&pi(a)){var c=o.right===r;l===a.get_child(i)?o.set_child(c,ah(r,!i)):o.set_child(c,tI(r,!i))}var u=this._comparator(l.data,s);if(u===0)break;i=n,n=u<0,r!==null&&(o=r),r=a,a=l,l=l.get_child(n)}this._root=e.right}return this._root.red=!1,t};Im.prototype.remove=function(s){if(this._root===null)return!1;var t=new mc(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=null,o=1;e.get_child(o)!==null;){var a=o;i=n,n=e,e=e.get_child(o);var l=this._comparator(s,e.data);if(o=l>0,l===0&&(r=e),!pi(e)&&!pi(e.get_child(o))){if(pi(e.get_child(!o))){var c=ah(e,o);n.set_child(a,c),n=c}else if(!pi(e.get_child(!o))){var u=n.get_child(!a);if(u!==null)if(!pi(u.get_child(!a))&&!pi(u.get_child(a)))n.red=!1,u.red=!0,e.red=!0;else{var h=i.right===n;pi(u.get_child(a))?i.set_child(h,tI(n,a)):pi(u.get_child(!a))&&i.set_child(h,ah(n,a));var d=i.get_child(h);d.red=!0,e.red=!0,d.left.red=!1,d.right.red=!1}}}}return r!==null&&(r.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this.size--),this._root=t.right,this._root!==null&&(this._root.red=!1),r!==null};function pi(s){return s!==null&&s.red}function ah(s,t){var e=s.get_child(!t);return s.set_child(!t,e.get_child(t)),e.set_child(t,s),s.red=!0,e.red=!1,e}function tI(s,t){return s.set_child(!t,ah(s.get_child(!t),!t)),ah(s,t)}var U4=Im,V4=Q2;function lh(s){this.data=s,this.left=null,this.right=null}lh.prototype.get_child=function(s){return s?this.right:this.left};lh.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Em(s){this._root=null,this._comparator=s,this.size=0}Em.prototype=new V4;Em.prototype.insert=function(s){if(this._root===null)return this._root=new lh(s),this.size++,!0;for(var t=0,e=null,n=this._root;;){if(n===null)return n=new lh(s),e.set_child(t,n),ret=!0,this.size++,!0;if(this._comparator(n.data,s)===0)return!1;t=this._comparator(n.data,s)<0,e=n,n=n.get_child(t)}};Em.prototype.remove=function(s){if(this._root===null)return!1;var t=new lh(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=1;e.get_child(r)!==null;){n=e,e=e.get_child(r);var o=this._comparator(s,e.data);r=o>0,o===0&&(i=e)}return i!==null?(i.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this._root=t.right,this.size--,!0):!1};var W4=Em,G4={RBTree:U4,BinTree:W4},ay=function(t,e,n){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])},mS=ay,H4=J2;function eI(s,t,e,n,i){this.left=t,this.point=s,this.otherEvent=e,this.isSubject=n,this.type=i||H4.NORMAL,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.inResult=!1,this.resultInOut=!1}eI.prototype={isBelow:function(s){return this.left?mS(this.point,this.otherEvent.point,s)>0:mS(this.otherEvent.point,this.point,s)>0},isAbove:function(s){return!this.isBelow(s)},isVertical:function(){return this.point[0]===this.otherEvent.point[0]}};var q4=eI,j4=ay,nI=function(t,e){var n=t.point,i=e.point;return n[0]>i[0]?1:n[0]<i[0]?-1:n[1]!==i[1]?n[1]>i[1]?1:-1:X4(t,e,n)};function X4(s,t,e,n){return s.left!==t.left?s.left?1:-1:j4(e,s.otherEvent.point,t.otherEvent.point)!==0?s.isBelow(t.otherEvent.point)?-1:1:!s.isSubject&&t.isSubject?1:-1}var sI=function(t,e){return t[0]===e[0]&&t[1]===e[1]},gS=ay,xS=nI,rx=sI,K4=function(t,e){if(t===e)return 0;if(gS(t.point,t.otherEvent.point,e.point)!==0||gS(t.point,t.otherEvent.point,e.otherEvent.point)!==0)return rx(t.point,e.point)?t.isBelow(e.otherEvent.point)?-1:1:t.point[0]===e.point[0]?t.point[1]<e.point[1]?-1:1:xS(t,e)===1?e.isAbove(t.point)?-1:1:t.isBelow(e.point)?-1:1;if(t.isSubject===e.isSubject){if(rx(t.point,e.point))return rx(t.otherEvent.point,e.otherEvent.point)?0:t.contourId>e.contourId?1:-1}else return t.isSubject?-1:1;return xS(t,e)===1?1:-1},bS=1e-9;function Of(s,t){return s[0]*t[1]-s[1]*t[0]}function Eu(s,t){return s[0]*t[0]+s[1]*t[1]}var Y4=function(s,t,e,n,i){var r=[t[0]-s[0],t[1]-s[1]],o=[n[0]-e[0],n[1]-e[1]];function a(y,w,S){return[y[0]+w*S[0],y[1]+w*S[1]]}var l=[e[0]-s[0],e[1]-s[1]],c=Of(r,o),u=c*c,h=Eu(r,r),d=Eu(o,o);if(u>bS*h*d){var f=Of(l,o)/c;if(f<0||f>1)return null;var p=Of(l,r)/c;return p<0||p>1||i?null:[a(s,f,r)]}var g=Eu(l,l);if(c=Of(l,r),u=c*c,u>bS*h*g)return null;var m=Eu(r,l)/h,x=m+Eu(r,o)/h,b=Math.min(m,x),v=Math.max(m,x);return b<=1&&v>=0?b===1?i?null:[a(s,b>0?b:0,r)]:v===0?i?null:[a(s,v<1?v:1,r)]:i&&b===0&&v===1?null:[a(s,b>0?b:0,r),a(s,v<1?v:1,r)]:null},qa=0,kc=1,ja=2,kh=3,Ep=[],ka=J2,Z4=oy.exports,J4=G4.RBTree,Mp=q4,Ac=nI,Q4=K4,tU=Y4,mr=sI,yS=Math.max,Hx=Math.min;function eU(s,t,e,n,i,r){var o=new Mp(s,!1,void 0,e),a=new Mp(t,!1,o,e);o.otherEvent=a,o.contourId=a.contourId=n,Ac(o,a)>0?a.left=!0:o.left=!0,r[0]=Hx(r[0],s[0]),r[1]=Hx(r[1],s[1]),r[2]=yS(r[2],s[0]),r[3]=yS(r[3],s[1]),i.push(o),i.push(a)}var qx=0;function jx(s,t,e,n,i){var r,o;if(typeof s[0][0]=="number")for(r=0,o=s.length-1;r<o;r++)eU(s[r],s[r+1],t,e+1,n,i);else for(r=0,o=s.length;r<o;r++)qx++,jx(s[r],t,qx,n,i)}function iI(s,t,e,n){var i=new Z4(null,Ac);return qx=0,jx(s,!0,0,i,e),jx(t,!1,0,i,n),i}function ec(s,t,e,n){t===null?(s.inOut=!1,s.otherInOut=!0):s.isSubject===t.isSubject?(s.inOut=!t.inOut,s.otherInOut=t.otherInOut):(s.inOut=!t.otherInOut,s.otherInOut=t.isVertical()?!t.inOut:t.inOut),t&&(s.prevInResult=!vS(t,n)||t.isVertical()?t.prevInResult:t),s.inResult=vS(s,n)}function vS(s,t){switch(s.type){case ka.NORMAL:switch(t){case qa:return!s.otherInOut;case kc:return s.otherInOut;case ja:return s.isSubject&&s.otherInOut||!s.isSubject&&!s.otherInOut;case kh:return!0}case ka.SAME_TRANSITION:return t===qa||t===kc;case ka.DIFFERENT_TRANSITION:return t===ja;case ka.NON_CONTRIBUTING:return!1}return!1}function dp(s,t,e){var n=tU(s.point,s.otherEvent.point,t.point,t.otherEvent.point),i=n?n.length:0;if(i===0||i===1&&(mr(s.point,t.point)||mr(s.otherEvent.point,t.otherEvent.point)))return 0;if(i===2&&s.isSubject===t.isSubject)return s.contourId===t.contourId&&console.warn("Edges of the same polygon overlap",s.point,s.otherEvent.point,t.point,t.otherEvent.point),0;if(i===1)return!mr(s.point,n[0])&&!mr(s.otherEvent.point,n[0])&&Zr(s,n[0],e),!mr(t.point,n[0])&&!mr(t.otherEvent.point,n[0])&&Zr(t,n[0],e),1;var r=[],o=!1,a=!1;return mr(s.point,t.point)?o=!0:Ac(s,t)===1?r.push(t,s):r.push(s,t),mr(s.otherEvent.point,t.otherEvent.point)?a=!0:Ac(s.otherEvent,t.otherEvent)===1?r.push(t.otherEvent,s.otherEvent):r.push(s.otherEvent,t.otherEvent),o&&a||o?(s.type=ka.NON_CONTRIBUTING,t.type=s.inOut===t.inOut?ka.SAME_TRANSITION:ka.DIFFERENT_TRANSITION,o&&!a&&Zr(r[0].otherEvent,r[1].point,e),2):a?(Zr(r[0],r[1].point,e),3):r[0]!==r[3].otherEvent?(Zr(r[0],r[1].point,e),Zr(r[1],r[2].point,e),3):(Zr(r[0],r[1].point,e),Zr(r[3].otherEvent,r[2].point,e),3)}function Zr(s,t,e){var n=new Mp(t,!1,s,s.isSubject),i=new Mp(t,!0,s.otherEvent,s.isSubject);return mr(s.point,s.otherEvent.point)&&console.warn("what is that?",s),n.contourId=i.contourId=s.contourId,Ac(i,s.otherEvent)>0&&(s.otherEvent.left=!0,i.left=!1),s.otherEvent.otherEvent=i,s.otherEvent=n,e.push(i),e.push(n),e}function rI(s,t,e,n,i,r){for(var a=[],c,u,o=new J4(Q4),a=[],l=Hx(n[2],i[2]),c,u;s.length;){var h=s.pop();if(a.push(h),r===qa&&h.point[0]>l||r===ja&&h.point[0]>n[2])break;if(h.left){if(o.insert(h),u=o.findIter(h),c=o.findIter(h),h.iterator=o.findIter(h),!c||!u){console.log("brute");var d=nU(o);c=d[0],u=d[1]}if(c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),ec(h,c.data(),o,r),u.data()&&dp(h,u.data(),s)===2&&(ec(h,c.data(),o,r),ec(h,u.data(),o,r)),c.data()&&dp(c.data(),h,s)===2){var f=o.findIter(c.data());f.data()!==o.min()?f.prev():(f=o.findIter(o.max()),f.next()),ec(c.data(),f.data(),o,r),ec(h,c.data(),o,r)}}else{if(h=h.otherEvent,u=o.findIter(h),c=o.findIter(h),!(c&&u))continue;c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),o.remove(h),u.data()&&c.data()&&dp(c.data(),u.data(),s)}}return a}function nU(s,t){for(var e=s.iterator(),n=s.iterator(),i=s.iterator(),r;(r=i.next())!==null&&(e.next(),n.next(),r!==event););return[e,n]}function sU(s,t,e){var n=s[t];s[t]=s[e],s[e]=n}function iU(s){return s.reverse()}function wS(s){return Object.prototype.toString.call(s)==="[object Array]"}function _S(s,t){return wS(s[0])&&!wS(s[0][0])&&(s=[s]),s[t]=[],s}function rU(s){var t,e,n,i=[];for(e=0,n=s.length;e<n;e++)t=s[e],(t.left&&t.inResult||!t.left&&t.otherEvent.inResult)&&i.push(t);for(var r=!1;!r;)for(r=!0,e=0,n=i.length;e<n;e++)e+1<n&&Ac(i[e],i[e+1])===1&&(sU(i,e,e+1),r=!1);for(e=0,n=i.length;e<n;e++)i[e].pos=e;for(e=0,n=i.length;e<n;e++)if(!i[e].left){var o=i[e].pos;i[e].pos=i[e].otherEvent.pos,i[e].otherEvent.pos=o}return i}function oU(s){var t,e,n=rU(s),i=Array(n.length),r=[],o=[],a=[],l={};for(t=0,e=n.length;t<e;t++)if(!i[t]){var c=[];r.push(c);var u=r.length-1;if(o.push(0),a.push(-1),n[t].prevInResult){var h=n[t].prevInResult.contourId;n[t].prevInResult.resultInOut?l[h]&&(_S(r[a[h]],u),a[u]=a[h],o[u]=o[h],l[u]=!0):(_S(r[h],u),a[u]=h,o[u]=o[h]+1,l[u]=!0)}var d=t,f=n[t].point;for(c.push(f);d>=t;)i[d]=!0,n[d].left?(n[d].resultInOut=!1,n[d].contourId=u):(n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u),d=n[d].pos,i[d]=!0,c.push(n[d].point),d=aU(d,n,i);d=d===-1?t:d,i[d]=i[n[d].pos]=!0,n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u,o[u]&1&&iU(c)}return r}function aU(s,t,e){for(var n=s+1,i=t.length;n<i&&mr(t[n].point,t[s].point);)if(e[n])n=n+1;else return n;for(n=s-1;e[n];)n=n-1;return n}function lU(s,t,e){var n=null;return s.length*t.length===0&&(e===qa?n=Ep:e===ja?n=s:(e===kc||e===kh)&&(n=s.length===0?t:s)),n}function cU(s,t,e,n,i){var r=null;return(e[0]>n[2]||n[0]>e[2]||e[1]>n[3]||n[1]>e[3])&&(i===qa?r=Ep:i===ja?r=s:(i===kc||i===kh)&&(r=s.concat(t))),r}function Ah(s,t,e){var n=lU(s,t,e);if(n)return n===Ep?null:n;var i=[1/0,1/0,-1/0,-1/0],r=[1/0,1/0,-1/0,-1/0],o=iI(s,t,i,r);if(n=cU(s,t,i,r,e),n)return n===Ep?null:n;var a=rI(o,s,t,i,r,e);return oU(a)}Ni.exports=Ah;Ni.exports.union=function(s,t){return Ah(s,t,kc)};Ni.exports.diff=function(s,t){return Ah(s,t,ja)};Ni.exports.xor=function(s,t){return Ah(s,t,kh)};Ni.exports.intersection=function(s,t){return Ah(s,t,qa)};Ni.exports.operations={INTERSECTION:qa,DIFFERENCE:ja,UNION:kc,XOR:kh};Ni.exports.fillQueue=iI;Ni.exports.computeFields=ec;Ni.exports.subdivideSegments=rI;Ni.exports.divideSegment=Zr;Ni.exports.possibleIntersection=dp;(function(s){s.exports=Ni.exports})(Z2);var Nh={},uU=Nh.isArray=Array.isArray||function(s){return Object.prototype.toString.call(s)==="[object Array]"},ox=Nh.isNonEmptyArray=function(s){return uU(s)&&s.length};Nh.equals=function(t,e){return t[0]===e[0]&&t[1]===e[1]};Nh.orientRings=function s(t,e,n){e=e||0;var i,r;if(ox(t)&&typeof t[0][0]=="number"){var o=0,a=t;for(i=0,r=a.length;i<r;i++){var l=a[i],c=a[(i+1)%r];o+=l[0]*c[1],o-=c[0]*l[1]}(!n&&o>0||n&&o<0)&&a.reverse()}else for(i=0,r=t.length;i<r;i++)s(t[i],e+1,i>0);if(e===0&&ox(t)&&ox(t[0])&&typeof t[0][0][0]=="number"){var u=t[0].slice(0,1)[0];t[0].pop(),t[0].push([u[0],u[1]])}return t};var hU=O4,ch=Z2.exports,ly=Nh,uh=ly.isArray,oI=ly.equals,tu=ly.orientRings;function Jn(s,t){this.vertices=null,this.edges=null,this._closed=!1,this._distance=0,s&&this.data(s),this._arcSegments=t!==void 0?t:5}Jn.prototype.data=function(s){if(this._edges=[],!uh(s))throw new Error("Offset requires at least one coodinate to work with");return uh(s)&&typeof s[0]=="number"?this.vertices=s:(this.vertices=tu(s),this._processContour(this.vertices,this._edges)),this};Jn.prototype._processContour=function(s,t){var e,n;if(uh(s[0])&&typeof s[0][0]=="number")for(n=s.length,oI(s[0],s[n-1])&&(n-=1),e=0;e<n;e++)t.push(new hU(s[e],s[(e+1)%n]));else for(e=0,n=s.length;e<n;e++)t.push([]),this._processContour(s[e],t[t.length-1])};Jn.prototype.arcSegments=function(s){return this._arcSegments=s,this};Jn.prototype.validate=function(s){var t=s.length;return typeof s[0]=="number"?[s]:(s[0][0]===s[t-1][0]&&s[0][1]===s[t-1][1]&&t>1&&(s=s.slice(0,t-1),this._closed=!0),s)};Jn.prototype.createArc=function(s,t,e,n,i,r,o){var a=Math.PI*2,l=Math.atan2(n[1]-t[1],n[0]-t[0]),c=Math.atan2(i[1]-t[1],i[0]-t[0]);r%2===0&&(r-=1),l<0&&(l+=a),c<0&&(c+=a);var u=l>c?l-c:l+a-c,h=(o?-u:a-u)/r;s.push(n);for(var d=1;d<r;++d)u=l+h*d,s.push([t[0]+Math.cos(u)*e,t[1]+Math.sin(u)*e]);return s.push(i),s};Jn.prototype.distance=function(s,t){return this._distance=s||0,this};Jn.degreesToUnits=function(s,t){switch(t){case"miles":s=s/69.047;break;case"feet":s=s/364568;break;case"kilometers":s=s/111.12;break;case"meters":case"metres":s=s/111120;break}return s};Jn.prototype.ensureLastPoint=function(s){return oI(s[0],s[s.length-1])||s.push([s[0][0],s[0][1]]),s};Jn.prototype.offset=function(s){return this.distance(s),this._distance===0?this.vertices:this._distance>0?this.margin(this._distance):this.padding(-this._distance)};Jn.prototype._offsetSegment=function(s,t,e,n){for(var i=[],r=[e.offset(e._inNormal[0]*n,e._inNormal[1]*n),e.inverseOffset(e._outNormal[0]*n,e._outNormal[1]*n)],o=0,a=2;o<a;o++){var l=r[o],c=r[(o+a-1)%a];this.createArc(i,o===0?s:t,n,c.next,l.current,this._arcSegments,!0)}return i};Jn.prototype.margin=function(s){if(this.distance(s),typeof this.vertices[0]=="number")return this.offsetPoint(this._distance);if(s===0)return this.vertices;var t=this.offsetLines(this._distance);return t=ch.union(this.vertices,t),tu(t)};Jn.prototype.padding=function(s){if(this.distance(s),this._distance===0)return this.ensureLastPoint(this.vertices);if(this.vertices.length===2&&typeof this.vertices[0]=="number")return this.vertices;var t=this.offsetLines(this._distance),e=ch.diff(this.vertices,t);return tu(e)};Jn.prototype.offsetLine=function(s){return s===0?this.vertices:tu(this.offsetLines(s))};Jn.prototype.offsetLines=function(s){if(s<0)throw new Error("Cannot apply negative margin to the line");var t;if(this.distance(s),uh(this.vertices[0])&&typeof this.vertices[0][0]!="number")for(var e=0,n=this._edges.length;e<n;e++)t=e===0?this.offsetContour(this.vertices[e],this._edges[e]):ch.union(t,this.offsetContour(this.vertices[e],this._edges[e]));else t=this.vertices.length===1?this.offsetPoint():this.offsetContour(this.vertices,this._edges);return t};Jn.prototype.offsetContour=function(s,t){var e,n,i;if(uh(s[0])&&typeof s[0][0]=="number")for(n=0,i=s.length-1;n<i;n++){var r=this.ensureLastPoint(this._offsetSegment(s[n],s[n+1],t[n],this._distance));e=n===0?[this.ensureLastPoint(r)]:ch.union(e,this.ensureLastPoint(r))}else for(n=0,i=t.length;n<i;n++)e=n===0?this.offsetContour(s[n],t[n]):ch.union(e,this.offsetContour(s[n],t[n]));return e};Jn.prototype.offsetPoint=function(s){this.distance(s);var t=this._arcSegments*2,e=[],n=this.vertices,i=this._distance,r=0;t%2===0&&t++;for(var o=0;o<t;o++)r+=2*Math.PI/t,e.push([n[0]+i*Math.cos(r),n[1]+i*Math.sin(r)]);return tu([this.ensureLastPoint(e)])};Jn.orientRings=tu;var dU=Jn;function fU(s,t=!1){const e=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new cs;let c=0;for(let u=0;u<s.length;++u){const h=s[u];let d=0;if(e!==(h.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in h.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(h.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in h.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(h.morphAttributes[f])}if(t){let f;if(e)f=h.index.count;else if(h.attributes.position!==void 0)f=h.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,u),c+=f}}if(e){let u=0;const h=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)h.push(f.getX(p)+u);u+=s[d].attributes.position.count}l.setIndex(h)}for(const u in r){const h=SS(r[u]);if(!h)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+u+" attribute."),null;l.setAttribute(u,h)}for(const u in o){const h=o[u][0].length;if(h===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[u]=[];for(let d=0;d<h;++d){const f=[];for(let g=0;g<o[u].length;++g)f.push(o[u][g][d]);const p=SS(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+u+" morphAttribute."),null;l.morphAttributes[u].push(p)}}return l}function SS(s){let t,e,n,i=0;for(let a=0;a<s.length;++a){const l=s[a];if(l.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(t===void 0&&(t=l.array.constructor),t!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=l.itemSize),e!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=l.normalized),n!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;i+=l.array.length}const r=new t(i);let o=0;for(let a=0;a<s.length;++a)r.set(s[a].array,o),o+=s[a].array.length;return new Qs(r,e,n)}const aI=0,pU=1,mU=2,CS=2,ax=1.25,TS=1,fp=6*4+4+4,Xx=65535,gU=Math.pow(2,-24);class zf{constructor(){}}function Sr(s,t,e){return e.min.x=t[s],e.min.y=t[s+1],e.min.z=t[s+2],e.max.x=t[s+3],e.max.y=t[s+4],e.max.z=t[s+5],e}function IS(s){let t=-1,e=-1/0;for(let n=0;n<3;n++){const i=s[n+3]-s[n];i>e&&(e=i,t=n)}return t}function ES(s,t){t.set(s)}function MS(s,t,e){let n,i;for(let r=0;r<3;r++){const o=r+3;n=s[r],i=t[r],e[r]=n<i?n:i,n=s[o],i=t[o],e[o]=n>i?n:i}}function Bf(s,t,e){for(let n=0;n<3;n++){const i=t[s+2*n],r=t[s+2*n+1],o=i-r,a=i+r;o<e[n]&&(e[n]=o),a>e[n+3]&&(e[n+3]=a)}}function Mu(s){const t=s[3]-s[0],e=s[4]-s[1],n=s[5]-s[2];return 2*(t*e+e*n+n*t)}function xU(s,t){if(!s.index){const e=s.attributes.position.count,n=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;let i;e>65535?i=new Uint32Array(new n(4*e)):i=new Uint16Array(new n(2*e)),s.setIndex(new Qs(i,1));for(let r=0;r<e;r++)i[r]=r}}function bU(s){if(!s.groups||!s.groups.length)return[{offset:0,count:s.index.count/3}];const t=[],e=new Set;for(const i of s.groups)e.add(i.start),e.add(i.start+i.count);const n=Array.from(e.values()).sort((i,r)=>i-r);for(let i=0;i<n.length-1;i++){const r=n[i],o=n[i+1];t.push({offset:r/3,count:(o-r)/3})}return t}function lx(s,t,e,n,i=null){let r=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,u=-1/0,h=1/0,d=1/0,f=1/0,p=-1/0,g=-1/0,m=-1/0;const x=i!==null;for(let b=t*6,v=(t+e)*6;b<v;b+=6){const y=s[b+0],w=s[b+1],S=y-w,C=y+w;S<r&&(r=S),C>l&&(l=C),x&&y<h&&(h=y),x&&y>p&&(p=y);const _=s[b+2],T=s[b+3],I=_-T,A=_+T;I<o&&(o=I),A>c&&(c=A),x&&_<d&&(d=_),x&&_>g&&(g=_);const D=s[b+4],k=s[b+5],M=D-k,E=D+k;M<a&&(a=M),E>u&&(u=E),x&&D<f&&(f=D),x&&D>m&&(m=D)}n[0]=r,n[1]=o,n[2]=a,n[3]=l,n[4]=c,n[5]=u,x&&(i[0]=h,i[1]=d,i[2]=f,i[3]=p,i[4]=g,i[5]=m)}function yU(s,t,e,n){let i=1/0,r=1/0,o=1/0,a=-1/0,l=-1/0,c=-1/0;for(let u=t*6,h=(t+e)*6;u<h;u+=6){const d=s[u+0];d<i&&(i=d),d>a&&(a=d);const f=s[u+2];f<r&&(r=f),f>l&&(l=f);const p=s[u+4];p<o&&(o=p),p>c&&(c=p)}n[0]=i,n[1]=r,n[2]=o,n[3]=a,n[4]=l,n[5]=c}function vU(s,t,e,n,i){let r=e,o=e+n-1;const a=i.pos,l=i.axis*2;for(;;){for(;r<=o&&t[r*6+l]<a;)r++;for(;r<=o&&t[o*6+l]>=a;)o--;if(r<o){for(let c=0;c<3;c++){let u=s[r*3+c];s[r*3+c]=s[o*3+c],s[o*3+c]=u;let h=t[r*6+c*2+0];t[r*6+c*2+0]=t[o*6+c*2+0],t[o*6+c*2+0]=h;let d=t[r*6+c*2+1];t[r*6+c*2+1]=t[o*6+c*2+1],t[o*6+c*2+1]=d}r++,o--}else return r}}const Jr=32,wU=(s,t)=>s.candidate-t.candidate,Eo=new Array(Jr).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Uf=new Float32Array(6);function _U(s,t,e,n,i,r){let o=-1,a=0;if(r===aI)o=IS(t),o!==-1&&(a=(t[o]+t[o+3])/2);else if(r===pU)o=IS(s),o!==-1&&(a=SU(e,n,i,o));else if(r===mU){const l=Mu(s);let c=ax*i;const u=n*6,h=(n+i)*6;for(let d=0;d<3;d++){const f=t[d],m=(t[d+3]-f)/Jr;if(i<Jr/4){const x=[...Eo];x.length=i;let b=0;for(let y=u;y<h;y+=6,b++){const w=x[b];w.candidate=e[y+2*d],w.count=0;const{bounds:S,leftCacheBounds:C,rightCacheBounds:_}=w;for(let T=0;T<3;T++)_[T]=1/0,_[T+3]=-1/0,C[T]=1/0,C[T+3]=-1/0,S[T]=1/0,S[T+3]=-1/0;Bf(y,e,S)}x.sort(wU);let v=i;for(let y=0;y<v;y++){const w=x[y];for(;y+1<v&&x[y+1].candidate===w.candidate;)x.splice(y+1,1),v--}for(let y=u;y<h;y+=6){const w=e[y+2*d];for(let S=0;S<v;S++){const C=x[S];w>=C.candidate?Bf(y,e,C.rightCacheBounds):(Bf(y,e,C.leftCacheBounds),C.count++)}}for(let y=0;y<v;y++){const w=x[y],S=w.count,C=i-w.count,_=w.leftCacheBounds,T=w.rightCacheBounds;let I=0;S!==0&&(I=Mu(_)/l);let A=0;C!==0&&(A=Mu(T)/l);const D=TS+ax*(I*S+A*C);D<c&&(o=d,c=D,a=w.candidate)}}else{for(let v=0;v<Jr;v++){const y=Eo[v];y.count=0,y.candidate=f+m+v*m;const w=y.bounds;for(let S=0;S<3;S++)w[S]=1/0,w[S+3]=-1/0}for(let v=u;v<h;v+=6){let S=~~((e[v+2*d]-f)/m);S>=Jr&&(S=Jr-1);const C=Eo[S];C.count++,Bf(v,e,C.bounds)}const x=Eo[Jr-1];ES(x.bounds,x.rightCacheBounds);for(let v=Jr-2;v>=0;v--){const y=Eo[v],w=Eo[v+1];MS(y.bounds,w.rightCacheBounds,y.rightCacheBounds)}let b=0;for(let v=0;v<Jr-1;v++){const y=Eo[v],w=y.count,S=y.bounds,_=Eo[v+1].rightCacheBounds;w!==0&&(b===0?ES(S,Uf):MS(S,Uf,Uf)),b+=w;let T=0,I=0;b!==0&&(T=Mu(Uf)/l);const A=i-b;A!==0&&(I=Mu(_)/l);const D=TS+ax*(T*b+I*A);D<c&&(o=d,c=D,a=y.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${r} used.`);return{axis:o,pos:a}}function SU(s,t,e,n){let i=0;for(let r=t,o=t+e;r<o;r++)i+=s[r*6+n*2];return i/e}function CU(s,t){const e=s.attributes.position,n=s.index.array,i=n.length/3,r=new Float32Array(i*6),o=e.normalized,a=e.array,l=e.offset||0;let c=3;e.isInterleavedBufferAttribute&&(c=e.data.stride);const u=["getX","getY","getZ"];for(let h=0;h<i;h++){const d=h*3,f=h*6;let p,g,m;o?(p=n[d+0],g=n[d+1],m=n[d+2]):(p=n[d+0]*c+l,g=n[d+1]*c+l,m=n[d+2]*c+l);for(let x=0;x<3;x++){let b,v,y;o?(b=e[u[x]](p),v=e[u[x]](g),y=e[u[x]](m)):(b=a[p+x],v=a[g+x],y=a[m+x]);let w=b;v<w&&(w=v),y<w&&(w=y);let S=b;v>S&&(S=v),y>S&&(S=y);const C=(S-w)/2,_=x*2;r[f+_+0]=w+C,r[f+_+1]=C+(Math.abs(w)+C)*gU,w<t[x]&&(t[x]=w),S>t[x+3]&&(t[x+3]=S)}}return r}function TU(s,t){function e(x){d&&d(x/f)}function n(x,b,v,y=null,w=0){if(!p&&w>=l&&(p=!0,c&&(console.warn(`MeshBVH: Max depth of ${l} reached when generating BVH. Consider increasing maxDepth.`),console.warn(s))),v<=u||w>=l)return e(b+v),x.offset=b,x.count=v,x;const S=_U(x.boundingData,y,o,b,v,h);if(S.axis===-1)return e(b+v),x.offset=b,x.count=v,x;const C=vU(a,o,b,v,S);if(C===b||C===b+v)e(b+v),x.offset=b,x.count=v;else{x.splitAxis=S.axis;const _=new zf,T=b,I=C-b;x.left=_,_.boundingData=new Float32Array(6),lx(o,T,I,_.boundingData,r),n(_,T,I,r,w+1);const A=new zf,D=C,k=v-I;x.right=A,A.boundingData=new Float32Array(6),lx(o,D,k,A.boundingData,r),n(A,D,k,r,w+1)}return x}xU(s,t);const i=new Float32Array(6),r=new Float32Array(6),o=CU(s,i),a=s.index.array,l=t.maxDepth,c=t.verbose,u=t.maxLeafTris,h=t.strategy,d=t.onProgress,f=s.index.count/3;let p=!1;const g=[],m=bU(s);if(m.length===1){const x=m[0],b=new zf;b.boundingData=i,yU(o,x.offset,x.count,r),n(b,x.offset,x.count,r),g.push(b)}else for(let x of m){const b=new zf;b.boundingData=new Float32Array(6),lx(o,x.offset,x.count,b.boundingData,r),n(b,x.offset,x.count,r),g.push(b)}return g}function IU(s,t){const e=TU(s,t);let n,i,r;const o=[],a=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let u=0;u<e.length;u++){const h=e[u];let d=l(h);const f=new a(fp*d);n=new Float32Array(f),i=new Uint32Array(f),r=new Uint16Array(f),c(0,h),o.push(f)}return o;function l(u){return u.count?1:1+l(u.left)+l(u.right)}function c(u,h){const d=u/4,f=u/2,p=!!h.count,g=h.boundingData;for(let m=0;m<6;m++)n[d+m]=g[m];if(p){const m=h.offset,x=h.count;return i[d+6]=m,r[f+14]=x,r[f+15]=Xx,u+fp}else{const m=h.left,x=h.right,b=h.splitAxis;let v;if(v=c(u+fp,m),v/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return i[d+6]=v/4,v=c(v,x),i[d+7]=b,v}}}class Nr{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let n=1/0,i=-1/0;for(let r=0,o=t.length;r<o;r++){const l=t[r][e];n=l<n?l:n,i=l>i?l:i}this.min=n,this.max=i}setFromPoints(t,e){let n=1/0,i=-1/0;for(let r=0,o=e.length;r<o;r++){const a=e[r],l=t.dot(a);n=l<n?l:n,i=l>i?l:i}this.min=n,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}Nr.prototype.setFromBox=function(){const s=new G;return function(e,n){const i=n.min,r=n.max;let o=1/0,a=-1/0;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let u=0;u<=1;u++){s.x=i.x*l+r.x*(1-l),s.y=i.y*c+r.y*(1-c),s.z=i.z*u+r.z*(1-u);const h=e.dot(s);o=Math.min(h,o),a=Math.max(h,a)}this.min=o,this.max=a}}();(function(){const s=new Nr;return function(e,n){const i=e.points,r=e.satAxes,o=e.satBounds,a=n.points,l=n.satAxes,c=n.satBounds;for(let u=0;u<3;u++){const h=o[u],d=r[u];if(s.setFromPoints(d,a),h.isSeparated(s))return!1}for(let u=0;u<3;u++){const h=c[u],d=l[u];if(s.setFromPoints(d,i),h.isSeparated(s))return!1}}})();const EU=function(){const s=new G,t=new G,e=new G;return function(i,r,o){const a=i.start,l=s,c=r.start,u=t;e.subVectors(a,c),s.subVectors(i.end,i.start),t.subVectors(r.end,r.start);const h=e.dot(u),d=u.dot(l),f=u.dot(u),p=e.dot(l),m=l.dot(l)*f-d*d;let x,b;m!==0?x=(h*d-p*f)/m:x=0,b=(h+x*d)/f,o.x=x,o.y=b}}(),cy=function(){const s=new Nt,t=new G,e=new G;return function(i,r,o,a){EU(i,r,s);let l=s.x,c=s.y;if(l>=0&&l<=1&&c>=0&&c<=1){i.at(l,o),r.at(c,a);return}else if(l>=0&&l<=1){c<0?r.at(0,a):r.at(1,a),i.closestPointToPoint(a,!0,o);return}else if(c>=0&&c<=1){l<0?i.at(0,o):i.at(1,o),r.closestPointToPoint(o,!0,a);return}else{let u;l<0?u=i.start:u=i.end;let h;c<0?h=r.start:h=r.end;const d=t,f=e;if(i.closestPointToPoint(h,!0,t),r.closestPointToPoint(u,!0,e),d.distanceToSquared(h)<=f.distanceToSquared(u)){o.copy(d),a.copy(h);return}else{o.copy(u),a.copy(f);return}}}}(),MU=function(){const s=new G,t=new G,e=new to,n=new oo;return function(r,o){const{radius:a,center:l}=r,{a:c,b:u,c:h}=o;if(n.start=c,n.end=u,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a||(n.start=c,n.end=h,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a)||(n.start=u,n.end=h,n.closestPointToPoint(l,!0,s).distanceTo(l)<=a))return!0;const g=o.getPlane(e);if(Math.abs(g.distanceToPoint(l))<=a){const x=g.projectPoint(l,t);if(o.containsPoint(x))return!0}return!1}}(),kU=1e-15;function jl(s){return Math.abs(s)<kU}class ao extends xi{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new G),this.satBounds=new Array(4).fill().map(()=>new Nr),this.points=[this.a,this.b,this.c],this.sphere=new Ih,this.plane=new to,this.needsUpdate=!0}intersectsSphere(t){return MU(t,this)}update(){const t=this.a,e=this.b,n=this.c,i=this.points,r=this.satAxes,o=this.satBounds,a=r[0],l=o[0];this.getNormal(a),l.setFromPoints(a,i);const c=r[1],u=o[1];c.subVectors(t,e),u.setFromPoints(c,i);const h=r[2],d=o[2];h.subVectors(e,n),d.setFromPoints(h,i);const f=r[3],p=o[3];f.subVectors(n,t),p.setFromPoints(f,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}ao.prototype.closestPointToSegment=function(){const s=new G,t=new G,e=new oo;return function(i,r=null,o=null){const{start:a,end:l}=i,c=this.points;let u,h=1/0;for(let d=0;d<3;d++){const f=(d+1)%3;e.start.copy(c[d]),e.end.copy(c[f]),cy(e,i,s,t),u=s.distanceToSquared(t),u<h&&(h=u,r&&r.copy(s),o&&o.copy(t))}return this.closestPointToPoint(a,s),u=a.distanceToSquared(s),u<h&&(h=u,r&&r.copy(s),o&&o.copy(a)),this.closestPointToPoint(l,s),u=l.distanceToSquared(s),u<h&&(h=u,r&&r.copy(s),o&&o.copy(l)),Math.sqrt(h)}}();ao.prototype.intersectsTriangle=function(){const s=new ao,t=new Array(3),e=new Array(3),n=new Nr,i=new Nr,r=new G,o=new G,a=new G,l=new G,c=new oo,u=new oo,h=new oo;return function(f,p=null){this.needsUpdate&&this.update(),f.isExtendedTriangle?f.needsUpdate&&f.update():(s.copy(f),s.update(),f=s);const g=this.plane,m=f.plane;if(Math.abs(g.normal.dot(m.normal))>1-1e-10){const x=this.satBounds,b=this.satAxes;e[0]=f.a,e[1]=f.b,e[2]=f.c;for(let w=0;w<4;w++){const S=x[w],C=b[w];if(n.setFromPoints(C,e),S.isSeparated(n))return!1}const v=f.satBounds,y=f.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let w=0;w<4;w++){const S=v[w],C=y[w];if(n.setFromPoints(C,t),S.isSeparated(n))return!1}for(let w=0;w<4;w++){const S=b[w];for(let C=0;C<4;C++){const _=y[C];if(r.crossVectors(S,_),n.setFromPoints(r,t),i.setFromPoints(r,e),n.isSeparated(i))return!1}}return p&&(console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),p.start.set(0,0,0),p.end.set(0,0,0)),!0}else{const x=this.points;let b=!1,v=0;for(let k=0;k<3;k++){const M=x[k],E=x[(k+1)%3];c.start.copy(M),c.end.copy(E),c.delta(o);const N=b?u.start:u.end,O=jl(m.distanceToPoint(M));if(jl(m.normal.dot(o))&&O){u.copy(c),v=2;break}if((m.intersectLine(c,N)||O)&&!jl(N.distanceTo(E))){if(v++,b)break;b=!0}}if(v===1&&this.containsPoint(u.end))return p&&(p.start.copy(u.end),p.end.copy(u.end)),!0;if(v!==2)return!1;const y=f.points;let w=!1,S=0;for(let k=0;k<3;k++){const M=y[k],E=y[(k+1)%3];c.start.copy(M),c.end.copy(E),c.delta(a);const N=w?h.start:h.end,O=jl(g.distanceToPoint(M));if(jl(g.normal.dot(a))&&O){h.copy(c),S=2;break}if((g.intersectLine(c,N)||O)&&!jl(N.distanceTo(E))){if(S++,w)break;w=!0}}if(S===1&&this.containsPoint(h.end))return p&&(p.start.copy(h.end),p.end.copy(h.end)),!0;if(S!==2)return!1;if(u.delta(o),h.delta(a),o.dot(a)<0){let k=h.start;h.start=h.end,h.end=k}const C=u.start.dot(o),_=u.end.dot(o),T=h.start.dot(o),I=h.end.dot(o),A=_<T,D=C<I;return C!==I&&T!==_&&A===D?!1:(p&&(l.subVectors(u.start,h.start),l.dot(o)>0?p.start.copy(u.start):p.start.copy(h.start),l.subVectors(u.end,h.end),l.dot(o)<0?p.end.copy(u.end):p.end.copy(h.end)),!0)}}}();ao.prototype.distanceToPoint=function(){const s=new G;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();ao.prototype.distanceToTriangle=function(){const s=new G,t=new G,e=["a","b","c"],n=new oo,i=new oo;return function(o,a=null,l=null){const c=a||l?n:null;if(this.intersectsTriangle(o,c))return(a||l)&&(a&&c.getCenter(a),l&&c.getCenter(l)),0;let u=1/0;for(let h=0;h<3;h++){let d;const f=e[h],p=o[f];this.closestPointToPoint(p,s),d=p.distanceToSquared(s),d<u&&(u=d,a&&a.copy(s),l&&l.copy(p));const g=this[f];o.closestPointToPoint(g,s),d=g.distanceToSquared(s),d<u&&(u=d,a&&a.copy(g),l&&l.copy(s))}for(let h=0;h<3;h++){const d=e[h],f=e[(h+1)%3];n.set(this[d],this[f]);for(let p=0;p<3;p++){const g=e[p],m=e[(p+1)%3];i.set(o[g],o[m]),cy(n,i,s,t);const x=s.distanceToSquared(t);x<u&&(u=x,a&&a.copy(s),l&&l.copy(t))}}return Math.sqrt(u)}}();class Rr{constructor(t,e,n){this.isOrientedBox=!0,this.min=new G,this.max=new G,this.matrix=new Je,this.invMatrix=new Je,this.points=new Array(8).fill().map(()=>new G),this.satAxes=new Array(3).fill().map(()=>new G),this.satBounds=new Array(3).fill().map(()=>new Nr),this.alignedSatBounds=new Array(3).fill().map(()=>new Nr),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),n&&this.matrix.copy(n)}set(t,e,n){this.min.copy(t),this.max.copy(e),this.matrix.copy(n),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}Rr.prototype.update=function(){return function(){const t=this.matrix,e=this.min,n=this.max,i=this.points;for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)for(let h=0;h<=1;h++){const d=1*c|2*u|4*h,f=i[d];f.x=c?n.x:e.x,f.y=u?n.y:e.y,f.z=h?n.z:e.z,f.applyMatrix4(t)}const r=this.satBounds,o=this.satAxes,a=i[0];for(let c=0;c<3;c++){const u=o[c],h=r[c],d=1<<c,f=i[d];u.subVectors(a,f),h.setFromPoints(u,i)}const l=this.alignedSatBounds;l[0].setFromPointsField(i,"x"),l[1].setFromPointsField(i,"y"),l[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();Rr.prototype.intersectsBox=function(){const s=new Nr;return function(e){this.needsUpdate&&this.update();const n=e.min,i=e.max,r=this.satBounds,o=this.satAxes,a=this.alignedSatBounds;if(s.min=n.x,s.max=i.x,a[0].isSeparated(s)||(s.min=n.y,s.max=i.y,a[1].isSeparated(s))||(s.min=n.z,s.max=i.z,a[2].isSeparated(s)))return!1;for(let l=0;l<3;l++){const c=o[l],u=r[l];if(s.setFromBox(c,e),u.isSeparated(s))return!1}return!0}}();Rr.prototype.intersectsTriangle=function(){const s=new ao,t=new Array(3),e=new Nr,n=new Nr,i=new G;return function(o){this.needsUpdate&&this.update(),o.isExtendedTriangle?o.needsUpdate&&o.update():(s.copy(o),s.update(),o=s);const a=this.satBounds,l=this.satAxes;t[0]=o.a,t[1]=o.b,t[2]=o.c;for(let d=0;d<3;d++){const f=a[d],p=l[d];if(e.setFromPoints(p,t),f.isSeparated(e))return!1}const c=o.satBounds,u=o.satAxes,h=this.points;for(let d=0;d<3;d++){const f=c[d],p=u[d];if(e.setFromPoints(p,h),f.isSeparated(e))return!1}for(let d=0;d<3;d++){const f=l[d];for(let p=0;p<4;p++){const g=u[p];if(i.crossVectors(f,g),e.setFromPoints(i,t),n.setFromPoints(i,h),e.isSeparated(n))return!1}}return!0}}();Rr.prototype.closestPointToPoint=function(){return function(t,e){return this.needsUpdate&&this.update(),e.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e}}();Rr.prototype.distanceToPoint=function(){const s=new G;return function(e){return this.closestPointToPoint(e,s),e.distanceTo(s)}}();Rr.prototype.distanceToBox=function(){const s=["x","y","z"],t=new Array(12).fill().map(()=>new oo),e=new Array(12).fill().map(()=>new oo),n=new G,i=new G;return function(o,a=0,l=null,c=null){if(this.needsUpdate&&this.update(),this.intersectsBox(o))return(l||c)&&(o.getCenter(i),this.closestPointToPoint(i,n),o.closestPointToPoint(n,i),l&&l.copy(n),c&&c.copy(i)),0;const u=a*a,h=o.min,d=o.max,f=this.points;let p=1/0;for(let m=0;m<8;m++){const x=f[m];i.copy(x).clamp(h,d);const b=x.distanceToSquared(i);if(b<p&&(p=b,l&&l.copy(x),c&&c.copy(i),b<u))return Math.sqrt(b)}let g=0;for(let m=0;m<3;m++)for(let x=0;x<=1;x++)for(let b=0;b<=1;b++){const v=(m+1)%3,y=(m+2)%3,w=x<<v|b<<y,S=1<<m|x<<v|b<<y,C=f[w],_=f[S];t[g].set(C,_);const I=s[m],A=s[v],D=s[y],k=e[g],M=k.start,E=k.end;M[I]=h[I],M[A]=x?h[A]:d[A],M[D]=b?h[D]:d[A],E[I]=d[I],E[A]=x?h[A]:d[A],E[D]=b?h[D]:d[A],g++}for(let m=0;m<=1;m++)for(let x=0;x<=1;x++)for(let b=0;b<=1;b++){i.x=m?d.x:h.x,i.y=x?d.y:h.y,i.z=b?d.z:h.z,this.closestPointToPoint(i,n);const v=i.distanceToSquared(n);if(v<p&&(p=v,l&&l.copy(n),c&&c.copy(i),v<u))return Math.sqrt(v)}for(let m=0;m<12;m++){const x=t[m];for(let b=0;b<12;b++){const v=e[b];cy(x,v,n,i);const y=n.distanceToSquared(i);if(y<p&&(p=y,l&&l.copy(n),c&&c.copy(i),y<u))return Math.sqrt(y)}}return Math.sqrt(p)}}();const Vf=new G,Wf=new G,Gf=new G,kS=new Nt,AS=new Nt,NS=new Nt,RS=new G;function AU(s,t,e,n,i,r){let o;return r===Js?o=s.intersectTriangle(n,e,t,!0,i):o=s.intersectTriangle(t,e,n,r!==Ls,i),o===null?null:{distance:s.origin.distanceTo(i),point:i.clone()}}function NU(s,t,e,n,i,r,o){Vf.fromBufferAttribute(t,n),Wf.fromBufferAttribute(t,i),Gf.fromBufferAttribute(t,r);const a=AU(s,Vf,Wf,Gf,RS,o);if(a){e&&(kS.fromBufferAttribute(e,n),AS.fromBufferAttribute(e,i),NS.fromBufferAttribute(e,r),a.uv=xi.getUV(RS,Vf,Wf,Gf,kS,AS,NS,new Nt));const l={a:n,b:i,c:r,normal:new G,materialIndex:0};xi.getNormal(Vf,Wf,Gf,l.normal),a.face=l,a.faceIndex=n}return a}function lI(s,t,e,n,i){const r=n*3,o=s.index.getX(r),a=s.index.getX(r+1),l=s.index.getX(r+2),c=NU(e,s.attributes.position,s.attributes.uv,o,a,l,t);return c?(c.faceIndex=n,i&&i.push(c),c):null}function RU(s,t,e,n,i,r){for(let o=n,a=n+i;o<a;o++)lI(s,t,e,o,r)}function DU(s,t,e,n,i){let r=1/0,o=null;for(let a=n,l=n+i;a<l;a++){const c=lI(s,t,e,a);c&&c.distance<r&&(o=c,r=c.distance)}return o}function DS(s,t,e){return s===null||(s.point.applyMatrix4(t.matrixWorld),s.distance=s.point.distanceTo(e.ray.origin),s.object=t,s.distance<e.near||s.distance>e.far)?null:s}function yr(s,t,e,n){const i=s.a,r=s.b,o=s.c;let a=t,l=t+1,c=t+2;e&&(a=e.getX(t),l=e.getX(t+1),c=e.getX(t+2)),i.x=n.getX(a),i.y=n.getY(a),i.z=n.getZ(a),r.x=n.getX(l),r.y=n.getY(l),r.z=n.getZ(l),o.x=n.getX(c),o.y=n.getY(c),o.z=n.getZ(c)}function $S(s,t,e,n,i,r,o){const a=e.index,l=e.attributes.position;for(let c=s,u=t+s;c<u;c++)if(yr(o,c*3,a,l),o.needsUpdate=!0,n(o,c,i,r))return!0;return!1}class cI{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}function ko(s,t){return t[s+15]===65535}function gc(s,t){return t[s+6]}function hh(s,t){return t[s+14]}function dh(s){return s+8}function fh(s,t){return t[s+6]}function $U(s,t){return t[s+7]}const lc=new rr,kp=new G,LU=["x","y","z"];function Kx(s,t,e,n,i){let r=s*2,o=eu,a=$o,l=Lo;if(ko(r,a)){const u=gc(s,l),h=hh(r,a);RU(t,e,n,u,h,i)}else{const u=dh(s);Ap(u,o,n,kp)&&Kx(u,t,e,n,i);const h=fh(s,l);Ap(h,o,n,kp)&&Kx(h,t,e,n,i)}}function Yx(s,t,e,n){let i=s*2,r=eu,o=$o,a=Lo;if(ko(i,o)){const c=gc(s,a),u=hh(i,o);return DU(t,e,n,c,u)}else{const c=$U(s,a),u=LU[c],d=n.direction[u]>=0;let f,p;d?(f=dh(s),p=fh(s,a)):(f=fh(s,a),p=dh(s));const m=Ap(f,r,n,kp)?Yx(f,t,e,n):null;if(m){const v=m.point[u];if(d?v<=r[p+c]:v>=r[p+c+3])return m}const b=Ap(p,r,n,kp)?Yx(p,t,e,n):null;return m&&b?m.distance<=b.distance?m:b:m||b||null}}const FU=function(){let s,t;const e=[],n=new cI(()=>new rr);return function(...o){s=n.getPrimitive(),t=n.getPrimitive(),e.push(s,t);const a=i(...o);n.releasePrimitive(s),n.releasePrimitive(t),e.pop(),e.pop();const l=e.length;return l>0&&(t=e[l-1],s=e[l-2]),a};function i(r,o,a,l,c=null,u=0,h=0){function d(v){let y=v*2,w=$o,S=Lo;for(;!ko(y,w);)v=dh(v),y=v*2;return gc(v,S)}function f(v){let y=v*2,w=$o,S=Lo;for(;!ko(y,w);)v=fh(v,S),y=v*2;return gc(v,S)+hh(y,w)}let p=r*2,g=eu,m=$o,x=Lo;if(ko(p,m)){const v=gc(r,x),y=hh(p,m);return Sr(r,g,s),l(v,y,!1,h,u+r,s)}else{const v=dh(r),y=fh(r,x);let w=v,S=y,C,_,T,I;if(c&&(T=s,I=t,Sr(w,g,T),Sr(S,g,I),C=c(T),_=c(I),_<C)){w=y,S=v;const O=C;C=_,_=O,T=I}T||(T=s,Sr(w,g,T));const A=ko(w*2,m),D=a(T,A,C,h+1,u+w);let k;if(D===CS){const O=d(w),$=f(w)-O;k=l(O,$,!0,h+1,u+w,T)}else k=D&&i(w,o,a,l,c,u,h+1);if(k)return!0;I=t,Sr(S,g,I);const M=ko(S*2,m),E=a(I,M,_,h+1,u+S);let N;if(E===CS){const O=d(S),$=f(S)-O;N=l(O,$,!0,h+1,u+S,I)}else N=E&&i(S,o,a,l,c,u,h+1);return!!N}}}(),PU=function(){const s=new ao,t=new ao,e=new Je,n=new Rr,i=new Rr;return function r(o,a,l,c,u=null){let h=o*2,d=eu,f=$o,p=Lo;if(u===null&&(l.boundingBox||l.computeBoundingBox(),n.set(l.boundingBox.min,l.boundingBox.max,c),u=n),ko(h,f)){const m=a,x=m.index,b=m.attributes.position,v=l.index,y=l.attributes.position,w=gc(o,p),S=hh(h,f);if(e.copy(c).invert(),l.boundsTree)return Sr(o,d,i),i.matrix.copy(e),i.needsUpdate=!0,l.boundsTree.shapecast({intersectsBounds:_=>i.intersectsBox(_),intersectsTriangle:_=>{_.a.applyMatrix4(c),_.b.applyMatrix4(c),_.c.applyMatrix4(c),_.needsUpdate=!0;for(let T=w*3,I=(S+w)*3;T<I;T+=3)if(yr(t,T,x,b),t.needsUpdate=!0,_.intersectsTriangle(t))return!0;return!1}});for(let C=w*3,_=S+w*3;C<_;C+=3){yr(s,C,x,b),s.a.applyMatrix4(e),s.b.applyMatrix4(e),s.c.applyMatrix4(e),s.needsUpdate=!0;for(let T=0,I=v.count;T<I;T+=3)if(yr(t,T,v,y),t.needsUpdate=!0,s.intersectsTriangle(t))return!0}}else{const m=o+8,x=p[o+6];return Sr(m,d,lc),!!(u.intersectsBox(lc)&&r(m,a,l,c,u)||(Sr(x,d,lc),u.intersectsBox(lc)&&r(x,a,l,c,u)))}}}();function Ap(s,t,e,n){return Sr(s,t,lc),e.intersectBox(lc,n)}const Zx=[];let pp,eu,$o,Lo;function Pu(s){pp&&Zx.push(pp),pp=s,eu=new Float32Array(s),$o=new Uint16Array(s),Lo=new Uint32Array(s)}function Hf(){pp=null,eu=null,$o=null,Lo=null,Zx.length&&Pu(Zx.pop())}const cx=Symbol("skip tree generation"),ux=new rr,hx=new rr,Xl=new Je,pa=new Rr,ku=new Rr,Au=new G,qf=new G,OU=new G,zU=new G,BU=new G,LS=new rr,fr=new cI(()=>new ao);class Ku{static serialize(t,e={}){if(e.isBufferGeometry)return console.warn("MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature."),Ku.serialize(arguments[0],{cloneBuffers:arguments[2]===void 0?!0:arguments[2]});e={cloneBuffers:!0,...e};const n=t.geometry,i=t._roots,r=n.getIndex();let o;return e.cloneBuffers?o={roots:i.map(a=>a.slice()),index:r.array.slice()}:o={roots:i,index:r.array},o}static deserialize(t,e,n={}){if(typeof n=="boolean")return console.warn("MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature."),Ku.deserialize(arguments[0],arguments[1],{setIndex:arguments[2]===void 0?!0:arguments[2]});n={setIndex:!0,...n};const{index:i,roots:r}=t,o=new Ku(e,{...n,[cx]:!0});if(o._roots=r,n.setIndex){const a=e.getIndex();if(a===null){const l=new Qs(t.index,1,!1);e.setIndex(l)}else a.array!==i&&(a.array.set(i),a.needsUpdate=!0)}return o}constructor(t,e={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(e=Object.assign({strategy:aI,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,[cx]:!1},e),e.useSharedArrayBuffer&&typeof SharedArrayBuffer>"u")throw new Error("MeshBVH: SharedArrayBuffer is not available.");this._roots=null,e[cx]||(this._roots=IU(t,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new rr))),this.geometry=t}refit(t=null){t&&Array.isArray(t)&&(t=new Set(t));const e=this.geometry,n=e.index.array,i=e.attributes.position;let r,o,a,l,c=0;const u=this._roots;for(let d=0,f=u.length;d<f;d++)r=u[d],o=new Uint32Array(r),a=new Uint16Array(r),l=new Float32Array(r),h(0,c),c+=r.byteLength;function h(d,f,p=!1){const g=d*2;if(a[g+15]===Xx){const x=o[d+6],b=a[g+14];let v=1/0,y=1/0,w=1/0,S=-1/0,C=-1/0,_=-1/0;for(let T=3*x,I=3*(x+b);T<I;T++){const A=n[T],D=i.getX(A),k=i.getY(A),M=i.getZ(A);D<v&&(v=D),D>S&&(S=D),k<y&&(y=k),k>C&&(C=k),M<w&&(w=M),M>_&&(_=M)}return l[d+0]!==v||l[d+1]!==y||l[d+2]!==w||l[d+3]!==S||l[d+4]!==C||l[d+5]!==_?(l[d+0]=v,l[d+1]=y,l[d+2]=w,l[d+3]=S,l[d+4]=C,l[d+5]=_,!0):!1}else{const x=d+8,b=o[d+6],v=x+f,y=b+f;let w=p,S=!1,C=!1;t?w||(S=t.has(v),C=t.has(y),w=!S&&!C):(S=!0,C=!0);const _=w||S,T=w||C;let I=!1;_&&(I=h(x,f,w));let A=!1;T&&(A=h(b,f,w));const D=I||A;if(D)for(let k=0;k<3;k++){const M=x+k,E=b+k,N=l[M],O=l[M+3],L=l[E],$=l[E+3];l[d+k]=N<L?N:L,l[d+k+3]=O>$?O:$}return D}}}traverse(t,e=0){const n=this._roots[e],i=new Uint32Array(n),r=new Uint16Array(n);o(0);function o(a,l=0){const c=a*2,u=r[c+15]===Xx;if(u){const h=i[a+6],d=r[c+14];t(l,u,new Float32Array(n,a*4,6),h,d)}else{const h=a+fp/4,d=i[a+6],f=i[a+7];t(l,u,new Float32Array(n,a*4,6),f)||(o(h,l+1),o(d,l+1))}}}raycast(t,e=Uo){const n=this._roots,i=this.geometry,r=[],o=e.isMaterial,a=Array.isArray(e),l=i.groups,c=o?e.side:e;for(let u=0,h=n.length;u<h;u++){const d=a?e[l[u].materialIndex].side:c,f=r.length;if(Pu(n[u]),Kx(0,i,d,t,r),Hf(),a){const p=l[u].materialIndex;for(let g=f,m=r.length;g<m;g++)r[g].face.materialIndex=p}}return r}raycastFirst(t,e=Uo){const n=this._roots,i=this.geometry,r=e.isMaterial,o=Array.isArray(e);let a=null;const l=i.groups,c=r?e.side:e;for(let u=0,h=n.length;u<h;u++){const d=o?e[l[u].materialIndex].side:c;Pu(n[u]);const f=Yx(0,i,d,t);Hf(),f!=null&&(a==null||f.distance<a.distance)&&(a=f,o&&(f.face.materialIndex=l[u].materialIndex))}return a}intersectsGeometry(t,e){const n=this.geometry;let i=!1;for(const r of this._roots)if(Pu(r),i=PU(0,n,t,e),Hf(),i)break;return i}shapecast(t,e,n){const i=this.geometry;if(t instanceof Function){if(e){const d=e;e=(f,p,g,m)=>{const x=p*3;return d(f,x,x+1,x+2,g,m)}}t={boundsTraverseOrder:n,intersectsBounds:t,intersectsTriangle:e,intersectsRange:null},console.warn("MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.")}const r=fr.getPrimitive();let{boundsTraverseOrder:o,intersectsBounds:a,intersectsRange:l,intersectsTriangle:c}=t;if(l&&c){const d=l;l=(f,p,g,m,x)=>d(f,p,g,m,x)?!0:$S(f,p,i,c,g,m,r)}else l||(c?l=(d,f,p,g)=>$S(d,f,i,c,p,g,r):l=(d,f,p)=>p);let u=!1,h=0;for(const d of this._roots){if(Pu(d),u=FU(0,i,a,l,o,h),Hf(),u)break;h+=d.byteLength}return fr.releasePrimitive(r),u}bvhcast(t,e,n){let{intersectsRanges:i,intersectsTriangles:r}=n;const o=this.geometry.index,a=this.geometry.attributes.position,l=t.geometry.index,c=t.geometry.attributes.position;Xl.copy(e).invert();const u=fr.getPrimitive(),h=fr.getPrimitive();if(r){let p=function(g,m,x,b,v,y,w,S){for(let C=x,_=x+b;C<_;C++){yr(h,C*3,l,c),h.a.applyMatrix4(e),h.b.applyMatrix4(e),h.c.applyMatrix4(e),h.needsUpdate=!0;for(let T=g,I=g+m;T<I;T++)if(yr(u,T*3,o,a),u.needsUpdate=!0,r(u,h,T,C,v,y,w,S))return!0}return!1};var f=p;if(i){const g=i;i=function(m,x,b,v,y,w,S,C){return g(m,x,b,v,y,w,S,C)?!0:p(m,x,b,v,y,w,S,C)}}else i=p}t.getBoundingBox(hx),hx.applyMatrix4(e);const d=this.shapecast({intersectsBounds:p=>hx.intersectsBox(p),intersectsRange:(p,g,m,x,b,v)=>(ux.copy(v),ux.applyMatrix4(Xl),t.shapecast({intersectsBounds:y=>ux.intersectsBox(y),intersectsRange:(y,w,S,C,_)=>i(p,g,y,w,x,b,C,_)}))});return fr.releasePrimitive(u),fr.releasePrimitive(h),d}intersectsBox(t,e){return pa.set(t.min,t.max,e),pa.needsUpdate=!0,this.shapecast({intersectsBounds:n=>pa.intersectsBox(n),intersectsTriangle:n=>pa.intersectsTriangle(n)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,n={},i={},r=0,o=1/0){t.boundingBox||t.computeBoundingBox(),pa.set(t.boundingBox.min,t.boundingBox.max,e),pa.needsUpdate=!0;const a=this.geometry,l=a.attributes.position,c=a.index,u=t.attributes.position,h=t.index,d=fr.getPrimitive(),f=fr.getPrimitive();let p=qf,g=OU,m=null,x=null;i&&(m=zU,x=BU);let b=1/0,v=null,y=null;return Xl.copy(e).invert(),ku.matrix.copy(Xl),this.shapecast({boundsTraverseOrder:w=>pa.distanceToBox(w),intersectsBounds:(w,S,C)=>C<b&&C<o?(S&&(ku.min.copy(w.min),ku.max.copy(w.max),ku.needsUpdate=!0),!0):!1,intersectsRange:(w,S)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:C=>ku.distanceToBox(C),intersectsBounds:(C,_,T)=>T<b&&T<o,intersectsRange:(C,_)=>{for(let T=C*3,I=(C+_)*3;T<I;T+=3){yr(f,T,h,u),f.a.applyMatrix4(e),f.b.applyMatrix4(e),f.c.applyMatrix4(e),f.needsUpdate=!0;for(let A=w*3,D=(w+S)*3;A<D;A+=3){yr(d,A,c,l),d.needsUpdate=!0;const k=d.distanceToTriangle(f,p,m);if(k<b&&(g.copy(p),x&&x.copy(m),b=k,v=A/3,y=T/3),k<r)return!0}}}});{const C=h?h.count:u.count;for(let _=0,T=C;_<T;_+=3){yr(f,_,h,u),f.a.applyMatrix4(e),f.b.applyMatrix4(e),f.c.applyMatrix4(e),f.needsUpdate=!0;for(let I=w*3,A=(w+S)*3;I<A;I+=3){yr(d,I,c,l),d.needsUpdate=!0;const D=d.distanceToTriangle(f,p,m);if(D<b&&(g.copy(p),x&&x.copy(m),b=D,v=I/3,y=_/3),D<r)return!0}}}}}),fr.releasePrimitive(d),fr.releasePrimitive(f),b===1/0?null:(n.point?n.point.copy(g):n.point=g.clone(),n.distance=b,n.faceIndex=v,i&&(i.point?i.point.copy(x):i.point=x.clone(),i.point.applyMatrix4(Xl),g.applyMatrix4(Xl),i.distance=g.sub(i.point).length(),i.faceIndex=y),n)}closestPointToPoint(t,e={},n=0,i=1/0){const r=n*n,o=i*i;let a=1/0,l=null;if(this.shapecast({boundsTraverseOrder:u=>(Au.copy(t).clamp(u.min,u.max),Au.distanceToSquared(t)),intersectsBounds:(u,h,d)=>d<a&&d<o,intersectsTriangle:(u,h)=>{u.closestPointToPoint(t,Au);const d=t.distanceToSquared(Au);return d<a&&(qf.copy(Au),a=d,l=h),d<r}}),a===1/0)return null;const c=Math.sqrt(a);return e.point?e.point.copy(qf):e.point=qf.clone(),e.distance=c,e.faceIndex=l,e}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(n=>{Sr(0,new Float32Array(n),LS),t.union(LS)}),t}}const dx=new vm,FS=new Je,UU=nn.prototype.raycast;function VU(s,t){if(this.geometry.boundsTree){if(this.material===void 0)return;FS.copy(this.matrixWorld).invert(),dx.copy(s.ray).applyMatrix4(FS);const e=this.geometry.boundsTree;if(s.firstHitOnly===!0){const n=DS(e.raycastFirst(dx,this.material),this,s);n&&t.push(n)}else{const n=e.raycast(dx,this.material);for(let i=0,r=n.length;i<r;i++){const o=DS(n[i],this,s);o&&t.push(o)}}}else UU.call(this,s,t)}function WU(s){return this.boundsTree=new Ku(this,s),this.boundsTree}function GU(){this.boundsTree=null}cs.prototype.computeBoundsTree=WU;cs.prototype.disposeBoundsTree=GU;nn.prototype.raycast=VU;const uy=4,PS=16,uI=.19,HU=new hl(.04,.04,uI),Jx=new Jb(.5,32);Jx.rotateX(-Math.PI/2);const qU=new dl({color:16777215}),jU=new JO({color:5329233,wireframe:!1}),XU=new dl({color:16771584,wireframe:!1,side:Ls}),KU=new dl({color:16753920}),YU=new dl({color:65280});class OS extends ry{constructor(t,e=1,n=.15){super(),this.roadSpline=new Bx(t,!1,"catmullrom",.5),this.roadWidth=e,this.roadLength=this.roadSpline.getLength();let i=new dU;const r=this.roadSpline.getSpacedPoints(Math.floor(this.roadLength/n));this.pointsIn2D=r.map(y=>new Nt(y.x,y.z));const o=i.data(r.map(y=>[y.x,y.z])).arcSegments(20).offsetLine(e/2).map(y=>y.map(w=>new G(w[0],0,w[1]))),a=o.map(y=>new Bx(y,!0,"catmullrom",.05)),l=new Tp(a[0].getSpacedPoints(Math.floor(a[0].getLength()/n)).map(y=>new Nt(y.x,y.z)));for(let y=0;y<o.length;y++){const w=a[y],S=w.getSpacedPoints(Math.floor(w.getLength()/n));y>0&&l.holes.push(new Ux(S.map(C=>new Nt(C.x,C.z))));for(let C=1;C<S.length;C++){let _=S[C].clone().sub(S[C-1]),T=S[C].clone().add(S[C-1]).divideScalar(2);const I=new Yt({mass:0,material:new pl({friction:.15,restitution:.25}),shape:new Mh(new R(_.length()/2,.2/2,.01/2)),position:new R(T.x,T.y+.1,T.z),quaternion:new gn().setFromAxisAngle(new R(0,1,0),Math.atan2(-_.z,_.x))});I.collisionFilterGroup=PS,I.collisionFilterMask=~PS,this.bodies.push(I)}}const c=new Tp([new Nt(.2,.005),new Nt(-.2,.005),new Nt(-.2,-.005),new Nt(.2,-.005),new Nt(.2,.005)]),u=a.map(y=>new Qb(c,{steps:Math.floor(y.getLength()/n),extrudePath:y})),h=fU(u,!1);h.computeBoundsTree();const d=new nn(h,XU);this.barrierMesh=d,d.castShadow=!1,d.receiveShadow=!1,d.layers.enable(uy),this.meshes.push(d);let f=new ey(l),p=new nn(f,jU);this.roadMesh=p,p.rotateX(Math.PI/2),p.scale.setZ(-1),p.translateZ(-.01),p.receiveShadow=!0,this.meshes.push(p);let g=this.roadSpline.getLength(),m=Math.floor(g/uI/2);for(let y=1;y<m;y+=2){let w=y/m,S=this.roadSpline.getPointAt(w),C=this.roadSpline.getTangentAt(w),_=new nn(HU,qU);_.receiveShadow=!0,_.castShadow=!1,_.position.x=S.x,_.position.y=S.y,_.position.z=S.z,_.rotateY(Math.atan2(C.x,C.z)),this.meshes.push(_)}const x=new nn(Jx,KU);x.scale.set(e,1,e),x.position.set(t[0].x,.025,t[0].z),this.meshes.push(x),this.finishX=t[t.length-1].x,this.finishZ=t[t.length-1].z;const b=new nn(Jx,YU);b.scale.set(e,1,e),b.position.set(this.finishX,.025,this.finishZ),this.meshes.push(b),this.startX=t[0].x,this.startZ=t[0].z;const v=this.roadSpline.getTangentAt(0);this.startRotation=-Math.atan2(-v.z,v.x)+Math.PI/2,this.endX=t[t.length-1].x,this.endZ=t[t.length-1].z}isFinished(t,e){return(this.finishX-t)**2+(this.finishZ-e)**2<(this.roadWidth*.5)**2}closestPointIdx(t,e){const n=new Nt(t,e),i=this.pointsIn2D.map(r=>r.distanceToSquared(n));return i.indexOf(Math.min(...i))}closestPointTangentAndCompleted(t,e){const n=this.closestPointIdx(t,e);let i=n-1;i<0&&(i=this.pointsIn2D.length-1);const o=this.pointsIn2D[i].distanceTo(new Nt(t,e));let a=n+1;a>=this.pointsIn2D.length&&(a=0);const c=this.pointsIn2D[a].distanceTo(new Nt(t,e)),u=o<c?[i,n]:[n,a],h=this.pointsIn2D[u[1]].clone().sub(this.pointsIn2D[u[0]]);let f=(u[0]+h.dot(new Nt(t,e).sub(this.pointsIn2D[u[0]]))/h.lengthSq())/(this.pointsIn2D.length-1);return f<0&&(f=0),f>1&&(f=1),{tangent:this.roadSpline.getTangentAt(f),completed:f}}amountCompleted(t,e){return this.closestPointIdx(t,e)/(this.pointsIn2D.length-1)}get barrrierFriction(){var t;return(t=this.bodies[0].material)==null?void 0:t.friction}set barrrierFriction(t){typeof t<"u"&&this.bodies.forEach(e=>{e.material&&(e.material.friction=t)})}dispose(){this.barrierMesh.geometry.disposeBoundsTree(),this.barrierMesh.geometry.dispose(),this.roadMesh.geometry.dispose()}syncMeshesToBodies(){}}const ZU=new dl({color:16777215});class JU extends ry{constructor(t=0,e=100,n=100){super(),this.ylevel=t;const i=new wm(e,n),r=new nn(i,ZU);r.rotation.x=-Math.PI/2,r.position.y=t,r.layers.enable(uy),this.mesh=r,this.meshes.push(r);const o=new hB,a=new Yt({mass:0,material:new pl({friction:.12,restitution:.5})});a.addShape(o),a.quaternion.setFromAxisAngle(new R(1,0,0),-Math.PI/2),a.position.y=t,this.body=a,this.bodies.push(a)}syncMeshesToBodies(){}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QU=1e-7,tV=1e-4;class hI{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class hy{refCount(t){return As("refCount")}incRef(t){return As("incRef")}timerAvailable(){return!0}time(t){return As("time")}read(t){return As("read")}readSync(t){return As("readSync")}readToGPU(t,e){return As("readToGPU")}numDataIds(){return As("numDataIds")}disposeData(t,e){return As("disposeData")}write(t,e,n){return As("write")}move(t,e,n,i,r){return As("move")}createTensorFromTexture(t,e,n){return As("createTensorFromTexture")}memory(){return As("memory")}floatPrecision(){return As("floatPrecision")}epsilon(){return this.floatPrecision()===32?QU:tV}dispose(){return As("dispose")}}function As(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(s){let t=s.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,nc(s,t,e)}function Xa(s,t,e){return Math.max(s,Math.min(t,e))}function dy(s){return s%2===0?s:s+1}function nc(s,t,e){const n=s[t];s[t]=s[e],s[e]=n}function nV(s){let t=0;for(let e=0;e<s.length;e++)t+=s[e];return t}function P(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function Ri(s,t,e=""){P(Fe(s,t),()=>e+` Shapes ${s} and ${t} must match`)}function dI(s){P(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Nc(s,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(s)||Dr(s)&&!e)for(let n=0;n<s.length;++n)Nc(s[n],t,e);else t.push(s);return t}function mt(s){if(s.length===0)return 1;let t=s[0];for(let e=1;e<s.length;e++)t*=s[e];return t}function Fe(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let e=0;e<s.length;e++)if(s[e]!==t[e])return!1;return!0}function Rc(s){return s%1===0}function Qx(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function xc(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function zS(s,t=i=>0,e,n){return new Promise((i,r)=>{let o=0;const a=()=>{if(s()){i();return}o++;const l=t(o);if(e!=null&&o>=e){r();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function fI(s,t){let e=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)e*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(e===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const i=s.slice();return i[n]=t/e,i}function _e(s,t){const e=t.length;return s=s==null?t.map((n,i)=>i):[].concat(s),P(s.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${s}`),P(s.every(n=>Rc(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?e+n:n)}function Ko(s,t){const e=[],n=[],i=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||i?null:_e(t,s).sort();let o=0;for(let a=0;a<s.length;++a){if(r!=null){if(r[o]===a&&s[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${s[a]}' is not 1`);(r[o]==null||r[o]>a)&&s[a]===1&&(e.push(s[a]),n.push(a)),r[o]<=a&&o++}s[a]!==1&&(e.push(s[a]),n.push(a))}return{newShape:e,keptDims:n}}function Yn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return e}function Sn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else if(s==="string")e=new Array(t);else throw new Error(`Unknown data type ${s}`);return e}function sV(s,t){for(let e=0;e<s.length;e++){const n=s[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function iV(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function pI(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function Dr(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}function tb(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function rV(s){if(s==null)return 0;let t=0;return s.forEach(e=>t+=e.length),t}function Rh(s){return typeof s=="string"||s instanceof String}function oV(s){return typeof s=="boolean"}function eb(s){return typeof s=="number"}function Dh(s){return Array.isArray(s)?Dh(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":eb(s)?"float32":Rh(s)?"string":oV(s)?"bool":"float32"}function nb(s){return!!(s&&s.constructor&&s.call&&s.apply)}function sb(s,t){for(let e=t;e<s;++e)if(s%e===0)return e;return s}function le(s){const t=s.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=s[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*s[n+1];return e}function mI(s,t,e,n=!1){const i=new Array;if(t.length===1){const r=t[0]*(n?2:1);for(let o=0;o<r;o++)i[o]=e[s+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((l,c)=>l*c)*(n?2:1);for(let l=0;l<r;l++)i[l]=mI(s+l*a,o,e,n)}return i}function Yi(s,t,e=!1){if(s.length===0)return t[0];const n=s.reduce((i,r)=>i*r)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return mI(0,s,t,e)}function fy(s,t){const e=ls(s,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function ls(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function gI(s,t){const e=s.reduce((n,i)=>n*i,1);if(t==null||t==="float32")return Yi(s,new Float32Array(e));if(t==="int32")return Yi(s,new Int32Array(e));if(t==="bool")return Yi(s,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function xI(s){s.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function Ir(s,t,e){if(t===0)return 0;if(t===1)return s[0];let n=s[s.length-1];for(let i=0;i<s.length-1;++i)n+=e[i]*s[i];return n}function nu(s,t,e){if(t===0)return[];if(t===1)return[s];const n=new Array(t);for(let i=0;i<n.length-1;++i)n[i]=Math.floor(s/e[i]),s-=n[i]*e[i];return n[n.length-1]=s,n}function bI(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS="tfjsflags";class aV{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=lV,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(ft().getBool("IS_TEST")||ft().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){const i=this.urlFlags[t];ft().getBool("IS_TEST")||ft().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${i}.`),this.set(t,i)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(bI(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);BS in t&&t[BS].split(",").forEach(n=>{const[i,r]=n.split(":");this.urlFlags[i]=uV(i,r)})}}function lV(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(cV(t,n[0],n[1]),n.join("="))),t}function cV(s,t,e){s[decodeURIComponent(t)]=decodeURIComponent(e||"")}function uV(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function ft(){return yI}let yI=null;function hV(s){yI=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fx;function vI(){if(fx==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");fx=s}return fx}function dV(){const s=vI();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function py(s,t){const e=dV();if(e.has(s))return e.get(s);{const n=t();return e.set(s,n),e.get(s)}}const Mm="Abs",$h="Acos",Lh="Acosh",su="Add",my="AddN",gy="All",xy="Any",km="ArgMax",Am="ArgMin",Fh="Asin",Ph="Asinh",Oh="Atan",zh="Atanh",Bh="Atan2",Nm="AvgPool",by="AvgPoolGrad",Rm="AvgPool3D",yy="AvgPool3DGrad",Dm="BatchMatMul",$m="BatchToSpaceND",vy="Bincount",fV="BroadcastTo",wI="BroadcastArgs",Uh="Cast",Vh="Ceil",Wh="ClipByValue",wy="Complex",Lm="ComplexAbs",Fm="Concat",Pm="Conv2D",_y="Conv2DBackpropFilter",Om="Conv2DBackpropInput",zm="Conv3D",Sy="Conv3DBackpropFilterV2",Cy="Conv3DBackpropInputV2",Gh="Cos",Hh="Cosh",Ty="Cumprod",Bm="Cumsum",Iy="CropAndResize",Ey="DenseBincount",My="DepthToSpace",Um="DepthwiseConv2dNative",ky="DepthwiseConv2dNativeBackpropFilter",Ay="DepthwiseConv2dNativeBackpropInput",_I="Diag",Vm="Dilation2D",ib="Dilation2DBackpropInput",rb="Dilation2DBackpropFilter",qh="RealDiv",SI="Einsum",jh="Elu",Ny="EluGrad",Xh="Erf",Wm="Equal",Kh="Exp",Gm="ExpandDims",Yh="Expm1",Ry="FFT",Dy="Fill",$y="FlipLeftRight",Zh="Floor",Jh="FloorDiv",Hm="FusedBatchNorm",qm="GatherV2",CI="GatherNd",jm="Greater",Qh="GreaterEqual",td="Identity",Ly="IFFT",Fy="Imag",ed="IsFinite",nd="IsInf",sd="IsNan",Xm="LeakyRelu",Km="Less",Ym="LessEqual",TI="LinSpace",id="Log",rd="Log1p",Zm="LogicalAnd",Jm="LogicalNot",Qm="LogicalOr",pV="LogSoftmax",tg="LRN",Py="LRNGrad",eg="Max",od="Maximum",ng="MaxPool",Oy="MaxPoolGrad",sg="MaxPool3D",zy="MaxPool3DGrad",II="MaxPoolWithArgmax",ig="Mean",rg="Min",ad="Minimum",og="MirrorPad",ld="Mod",EI="Multinomial",cd="Multiply",ag="Neg",lg="NotEqual",By="NonMaxSuppressionV3",Uy="NonMaxSuppressionV4",Vy="NonMaxSuppressionV5",cg="OnesLike",ug="OneHot",hg="Pack",dg="PadV2",ud="Pow",fg="Prelu",pg="Prod",MI="RaggedGather",kI="RaggedRange",AI="RaggedTensorToTensor",Wy="Range",Gy="Real",hd="Reciprocal",dd="Relu",mg="Reshape",gg="ResizeNearestNeighbor",Hy="ResizeNearestNeighborGrad",xg="ResizeBilinear",qy="ResizeBilinearGrad",fd="Relu6",bg="Reverse",pd="Round",md="Rsqrt",NI="ScatterNd",RI="SearchSorted",yg="Select",gd="Selu",vg="Slice",xd="Sin",bd="Sinh",yd="Sign",vd="Sigmoid",wd="Softplus",_d="Sqrt",wg="Sum",_g="SpaceToBatchND",Sg="SplitV",Cg="Softmax",jy="SparseFillEmptyRows",Xy="SparseReshape",Ky="SparseSegmentMean",Yy="SparseSegmentSum",DI="SparseToDense",Sd="SquaredDifference",Zy="Square",Jy="StridedSlice",Qy="StringNGrams",tv="StringSplit",ev="StringToHashBucketFast",Cd="Sub",Td="Tan",Id="Tanh",Ed="Tile",nv="TopK",sv="Transform",bc="Transpose",iv="Unique",Tg="Unpack",Ig="UnsortedSegmentSum",Eg="ZerosLike",Md="Step",mV="FromPixels",rv="RotateWithOffset",Np="_FusedMatMul",Rp="FusedConv2D",$I="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(...s){ft().getBool("IS_TEST")||ft().getBool("PROD")||console.warn(...s)}function gV(...s){ft().getBool("IS_TEST")||ft().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dp=py("kernelRegistry",()=>new Map),ob=py("gradRegistry",()=>new Map);function US(s,t){const e=FI(s,t);return Dp.get(e)}function VS(s){return ob.get(s)}function WS(s){const t=Dp.entries(),e=[];for(;;){const{done:n,value:i}=t.next();if(n)break;const[r,o]=i,[a]=r.split("_");a===s&&e.push(o)}return e}function LI(s){const{kernelName:t,backendName:e}=s,n=FI(t,e);Dp.has(n)&&Ys(`The kernel '${t}' for backend '${e}' is already registered`),Dp.set(n,s)}function xV(s){const{kernelName:t}=s;ob.has(t)&&ft().getBool("DEBUG")&&Ys(`Overriding the gradient for '${t}'`),ob.set(t,s)}function FI(s,t){return`${t}_${s}`}var ab=Qe,vi=null;try{vi=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qe(s,t,e){this.low=s|0,this.high=t|0,this.unsigned=!!e}Qe.prototype.__isLong__;Object.defineProperty(Qe.prototype,"__isLong__",{value:!0});function Hs(s){return(s&&s.__isLong__)===!0}Qe.isLong=Hs;var GS={},HS={};function gl(s,t){var e,n,i;return t?(s>>>=0,(i=0<=s&&s<256)&&(n=HS[s],n)?n:(e=tn(s,(s|0)<0?-1:0,!0),i&&(HS[s]=e),e)):(s|=0,(i=-128<=s&&s<128)&&(n=GS[s],n)?n:(e=tn(s,s<0?-1:0,!1),i&&(GS[s]=e),e))}Qe.fromInt=gl;function wi(s,t){if(isNaN(s))return t?Aa:_i;if(t){if(s<0)return Aa;if(s>=PI)return BI}else{if(s<=-jS)return Fs;if(s+1>=jS)return zI}return s<0?wi(-s,t).neg():tn(s%Dc|0,s/Dc|0,t)}Qe.fromNumber=wi;function tn(s,t,e){return new Qe(s,t,e)}Qe.fromBits=tn;var $p=Math.pow;function ov(s,t,e){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return _i;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return ov(s.substring(1),t,e).neg();for(var i=wi($p(e,8)),r=_i,o=0;o<s.length;o+=8){var a=Math.min(8,s.length-o),l=parseInt(s.substring(o,o+a),e);if(a<8){var c=wi($p(e,a));r=r.mul(c).add(wi(l))}else r=r.mul(i),r=r.add(wi(l))}return r.unsigned=t,r}Qe.fromString=ov;function ar(s,t){return typeof s=="number"?wi(s,t):typeof s=="string"?ov(s,t):tn(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}Qe.fromValue=ar;var qS=1<<16,bV=1<<24,Dc=qS*qS,PI=Dc*Dc,jS=PI/2,XS=gl(bV),_i=gl(0);Qe.ZERO=_i;var Aa=gl(0,!0);Qe.UZERO=Aa;var cc=gl(1);Qe.ONE=cc;var OI=gl(1,!0);Qe.UONE=OI;var lb=gl(-1);Qe.NEG_ONE=lb;var zI=tn(-1,2147483647,!1);Qe.MAX_VALUE=zI;var BI=tn(-1,-1,!0);Qe.MAX_UNSIGNED_VALUE=BI;var Fs=tn(0,-2147483648,!1);Qe.MIN_VALUE=Fs;var Bt=Qe.prototype;Bt.toInt=function(){return this.unsigned?this.low>>>0:this.low};Bt.toNumber=function(){return this.unsigned?(this.high>>>0)*Dc+(this.low>>>0):this.high*Dc+(this.low>>>0)};Bt.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Fs)){var e=wi(t),n=this.div(e),i=n.mul(e).sub(this);return n.toString(t)+i.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var r=wi($p(t,6),this.unsigned),o=this,a="";;){var l=o.div(r),c=o.sub(l.mul(r)).toInt()>>>0,u=c.toString(t);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Bt.getHighBits=function(){return this.high};Bt.getHighBitsUnsigned=function(){return this.high>>>0};Bt.getLowBits=function(){return this.low};Bt.getLowBitsUnsigned=function(){return this.low>>>0};Bt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Fs)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};Bt.isZero=function(){return this.high===0&&this.low===0};Bt.eqz=Bt.isZero;Bt.isNegative=function(){return!this.unsigned&&this.high<0};Bt.isPositive=function(){return this.unsigned||this.high>=0};Bt.isOdd=function(){return(this.low&1)===1};Bt.isEven=function(){return(this.low&1)===0};Bt.equals=function(t){return Hs(t)||(t=ar(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};Bt.eq=Bt.equals;Bt.notEquals=function(t){return!this.eq(t)};Bt.neq=Bt.notEquals;Bt.ne=Bt.notEquals;Bt.lessThan=function(t){return this.comp(t)<0};Bt.lt=Bt.lessThan;Bt.lessThanOrEqual=function(t){return this.comp(t)<=0};Bt.lte=Bt.lessThanOrEqual;Bt.le=Bt.lessThanOrEqual;Bt.greaterThan=function(t){return this.comp(t)>0};Bt.gt=Bt.greaterThan;Bt.greaterThanOrEqual=function(t){return this.comp(t)>=0};Bt.gte=Bt.greaterThanOrEqual;Bt.ge=Bt.greaterThanOrEqual;Bt.compare=function(t){if(Hs(t)||(t=ar(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};Bt.comp=Bt.compare;Bt.negate=function(){return!this.unsigned&&this.eq(Fs)?Fs:this.not().add(cc)};Bt.neg=Bt.negate;Bt.add=function(t){Hs(t)||(t=ar(t));var e=this.high>>>16,n=this.high&65535,i=this.low>>>16,r=this.low&65535,o=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,h=0,d=0,f=0;return f+=r+c,d+=f>>>16,f&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=n+a,u+=h>>>16,h&=65535,u+=e+o,u&=65535,tn(d<<16|f,u<<16|h,this.unsigned)};Bt.subtract=function(t){return Hs(t)||(t=ar(t)),this.add(t.neg())};Bt.sub=Bt.subtract;Bt.multiply=function(t){if(this.isZero())return _i;if(Hs(t)||(t=ar(t)),vi){var e=vi.mul(this.low,this.high,t.low,t.high);return tn(e,vi.get_high(),this.unsigned)}if(t.isZero())return _i;if(this.eq(Fs))return t.isOdd()?Fs:_i;if(t.eq(Fs))return this.isOdd()?Fs:_i;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(XS)&&t.lt(XS))return wi(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,f=0,p=0;return p+=o*u,f+=p>>>16,p&=65535,f+=r*u,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=n*u+i*c+r*l+o*a,h&=65535,tn(f<<16|p,h<<16|d,this.unsigned)};Bt.mul=Bt.multiply;Bt.divide=function(t){if(Hs(t)||(t=ar(t)),t.isZero())throw Error("division by zero");if(vi){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?vi.div_u:vi.div_s)(this.low,this.high,t.low,t.high);return tn(e,vi.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Aa:_i;var n,i,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Aa;if(t.gt(this.shru(1)))return OI;r=Aa}else{if(this.eq(Fs)){if(t.eq(cc)||t.eq(lb))return Fs;if(t.eq(Fs))return cc;var o=this.shr(1);return n=o.div(t).shl(1),n.eq(_i)?t.isNegative()?cc:lb:(i=this.sub(t.mul(n)),r=n.add(i.div(t)),r)}else if(t.eq(Fs))return this.unsigned?Aa:_i;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=_i}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:$p(2,a-48),c=wi(n),u=c.mul(t);u.isNegative()||u.gt(i);)n-=l,c=wi(n,this.unsigned),u=c.mul(t);c.isZero()&&(c=cc),r=r.add(c),i=i.sub(u)}return r};Bt.div=Bt.divide;Bt.modulo=function(t){if(Hs(t)||(t=ar(t)),vi){var e=(this.unsigned?vi.rem_u:vi.rem_s)(this.low,this.high,t.low,t.high);return tn(e,vi.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};Bt.mod=Bt.modulo;Bt.rem=Bt.modulo;Bt.not=function(){return tn(~this.low,~this.high,this.unsigned)};Bt.and=function(t){return Hs(t)||(t=ar(t)),tn(this.low&t.low,this.high&t.high,this.unsigned)};Bt.or=function(t){return Hs(t)||(t=ar(t)),tn(this.low|t.low,this.high|t.high,this.unsigned)};Bt.xor=function(t){return Hs(t)||(t=ar(t)),tn(this.low^t.low,this.high^t.high,this.unsigned)};Bt.shiftLeft=function(t){return Hs(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?tn(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):tn(0,this.low<<t-32,this.unsigned)};Bt.shl=Bt.shiftLeft;Bt.shiftRight=function(t){return Hs(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?tn(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):tn(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};Bt.shr=Bt.shiftRight;Bt.shiftRightUnsigned=function(t){if(Hs(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return tn(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?tn(e,0,this.unsigned):tn(e>>>t-32,0,this.unsigned)};Bt.shru=Bt.shiftRightUnsigned;Bt.shr_u=Bt.shiftRightUnsigned;Bt.toSigned=function(){return this.unsigned?tn(this.low,this.high,!1):this};Bt.toUnsigned=function(){return this.unsigned?this:tn(this.low,this.high,!0)};Bt.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};Bt.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};Bt.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Qe.fromBytes=function(t,e,n){return n?Qe.fromBytesLE(t,e):Qe.fromBytesBE(t,e)};Qe.fromBytesLE=function(t,e){return new Qe(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Qe.fromBytesBE=function(t,e){return new Qe(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const yV=iD({__proto__:null,default:ab},[ab]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a=ab||yV;function Mg(s){return _a.fromString(s,!0,16)}const UI=Mg("c3a5c85c97cb3127"),ya=Mg("b492b66fbe98f273"),fs=Mg("9ae16a3b2f90404f");function cb(s){return s.xor(s.shru(47))}function VI(s,t,e){const n=s.slice(t,t+e);return _a.fromBytes(Array.from(n),!0,!0)}function je(s,t){return VI(s,t,8)}function KS(s,t){return VI(s,t,4)}function Pn(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function Fo(s,t,e=Mg("9ddfea08eb382d69")){let n=s.xor(t).mul(e);n=n.xor(n.shru(47));let i=t.xor(n).mul(e);return i=i.xor(i.shru(47)),i=i.mul(e),i}function vV(s,t,e,n,i,r){i=i.add(s),r=Pn(r.add(i).add(n),21);const o=i;return i=i.add(t),i=i.add(e),r=r.add(Pn(i,44)),[i.add(n),r.add(o)]}function jf(s,t,e,n){return vV(je(s,t),je(s,t+8),je(s,t+16),je(s,t+24),e,n)}function wV(s,t=s.length){if(t>=8){const e=fs.add(t*2),n=je(s,0).add(fs),i=je(s,t-8),r=Pn(i,37).mul(e).add(n),o=Pn(n,25).add(i).mul(e);return Fo(r,o,e)}if(t>=4){const e=fs.add(t*2),n=KS(s,0);return Fo(n.shl(3).add(t),KS(s,t-4),e)}if(t>0){const e=s[0],n=s[t>>1],i=s[t-1],r=e+(n<<8),o=t+(i<<2);return cb(fs.mul(r).xor(UI.mul(o))).mul(fs)}return fs}function _V(s,t=s.length){const e=fs.add(t*2),n=je(s,0).mul(ya),i=je(s,8),r=je(s,t-8).mul(e),o=je(s,t-16).mul(fs);return Fo(Pn(n.add(i),43).add(Pn(r,30)).add(o),n.add(Pn(i.add(fs),18)).add(r),e)}function SV(s,t=s.length){const e=fs.add(t*2),n=je(s,0).mul(fs),i=je(s,8),r=je(s,t-8).mul(e),o=je(s,t-16).mul(fs),a=Pn(n.add(i),43).add(Pn(r,30)).add(o),l=Fo(a,n.add(Pn(i.add(fs),18)).add(r),e),c=je(s,16).mul(e),u=je(s,24),h=a.add(je(s,t-32)).mul(e),d=l.add(je(s,t-24)).mul(e);return Fo(Pn(c.add(u),43).add(Pn(h,30)).add(d),c.add(Pn(u.add(n),18)).add(h),e)}function CV(s,t=s.length){const e=_a.fromNumber(81,!0);if(t<=32)return t<=16?wV(s,t):_V(s,t);if(t<=64)return SV(s,t);let n=e,i=e.mul(ya).add(113),r=cb(i.mul(fs).add(113)).mul(fs),o=[_a.UZERO,_a.UZERO],a=[_a.UZERO,_a.UZERO];n=n.mul(fs).add(je(s,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do n=Pn(n.add(i).add(o[0]).add(je(s,l+8)),37).mul(ya),i=Pn(i.add(o[1]).add(je(s,l+48)),42).mul(ya),n=n.xor(a[1]),i=i.add(o[0]).add(je(s,l+40)),r=Pn(r.add(a[0]),33).mul(ya),o=jf(s,l,o[1].mul(ya),n.add(a[0])),a=jf(s,l+32,r.add(a[1]),i.add(je(s,l+16))),[r,n]=[n,r],l+=64;while(l!==c);const h=ya.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),n=Pn(n.add(i).add(o[0]).add(je(s,l+8)),37).mul(h),i=Pn(i.add(o[1]).add(je(s,l+48)),42).mul(h),n=n.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(je(s,l+40))),r=Pn(r.add(a[0]),33).mul(h),o=jf(s,l,o[1].mul(h),n.add(a[0])),a=jf(s,l+32,r.add(a[1]),i.add(je(s,l+16))),[r,n]=[n,r],Fo(Fo(o[0],a[0],h).add(cb(i).mul(UI)).add(r),Fo(o[1],a[1],h).add(n),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(s,t){return t==="string"?Po(s):xl([s],t)}function TV(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function xl(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=Nc(s)),ft().getBool("DEBUG")&&sV(s,t),TV(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const e=new Uint8Array(s.length);for(let n=0;n<e.length;++n)Math.round(s[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function _s(){return ft().platform.now()}function Po(s,t="utf-8"){return t=t||"utf-8",ft().platform.encode(s,t)}function Vo(s,t="utf-8"){return t=t||"utf-8",ft().platform.decode(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IV{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new MV)}profileKernel(t,e,n){let i;const r=()=>{i=n()};let o;const a=_s();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const c of i)c.dataSync();o=Promise.resolve({kernelMs:_s()-a})}if(ft().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<i.length;c++){const u=i[c];u.data().then(h=>{EV(h,u.dtype,t)})}return{kernelName:t,outputs:i,inputs:e,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:i,inputs:r,extraInfo:o}=t;n.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],r,l[2])})})}}function EV(s,t,e){if(t!=="float32")return!1;for(let n=0;n<s.length;n++){const i=s[n];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${e}'`),!0}return!1}class MV{logKernelProfile(t,e,n,i,r,o){const a=typeof i=="number"?xc(`${i}ms`,9):i.error,l=xc(t,25),c=e.rank,u=e.size,h=xc(e.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const g=p.shape||e.shape,m=g.length;d+=`${f}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(s,t,e){const n={},i={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<s.length;l++){const c=s[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<t.length;p++)if(n[d.id]){c.outputs.forEach(g=>n[g.id]=!0),f=!0,i[c.id]=!0;break}if(f)break}}const r={};r[e.id]=!0;const o={};for(let l=s.length-1;l>=0;l--){const c=s[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<s.length;l++){const c=s[l];if(i[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];n[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function AV(s,t,e,n){for(let i=t.length-1;i>=0;i--){const r=t[i],o=[];if(r.outputs.forEach(l=>{const c=s[l.id];c!=null?o.push(c):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Fe(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(s[u.id]==null)s[u.id]=c;else{const h=s[u.id];s[u.id]=n(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS=20,Nu=3,px=7;function NV(s,t,e,n){const i=le(t),r=RV(s,t,e,i),o=t.length,a=mp(s,t,e,i,r),l=["Tensor"];return n&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function RV(s,t,e,n){const i=mt(t),r=n[n.length-1],o=new Array(r).fill(0),a=t.length,l=e==="complex64"?zu(s):s;if(a>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],Ou(l[u+h],0,e).length)}return o}function Ou(s,t,e){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(px))} + ${parseFloat(s[1].toFixed(px))}j`:Rh(s)?n=`'${s}'`:e==="bool"?n=WI(s):n=parseFloat(s.toFixed(px)).toString(),xc(n,t)}function WI(s){return s===0?"false":"true"}function mp(s,t,e,n,i,r=!0){const o=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const g=zu(s);return[Ou(g[0],0,e)]}return e==="bool"?[WI(s[0])]:[s[0].toString()]}if(l===1){if(a>YS){const m=Nu*o;let x=Array.from(s.slice(0,m)),b=Array.from(s.slice((a-Nu)*o,a*o));return e==="complex64"&&(x=zu(x),b=zu(b)),["["+x.map((v,y)=>Ou(v,i[y],e)).join(", ")+", ..., "+b.map((v,y)=>Ou(v,i[a-Nu+y],e)).join(", ")+"]"]}return["["+(e==="complex64"?zu(s):Array.from(s)).map((m,x)=>Ou(m,i[x],e)).join(", ")+"]"]}const c=t.slice(1),u=n.slice(1),h=n[0]*o,d=[];if(a>YS){for(let g=0;g<Nu;g++){const m=g*h,x=m+h;d.push(...mp(s.slice(m,x),c,e,u,i,!1))}d.push("...");for(let g=a-Nu;g<a;g++){const m=g*h,x=m+h;d.push(...mp(s.slice(m,x),c,e,u,i,g===a-1))}}else for(let g=0;g<a;g++){const m=g*h,x=m+h;d.push(...mp(s.slice(m,x),c,e,u,i,g===a-1))}const f=l===2?",":"";d[0]="["+d[0]+f;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+f;let p=`,
`;for(let g=2;g<l;g++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function zu(s){const t=[];for(let e=0;e<s.length;e+=2)t.push([s[e],s[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class os{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=mt(t),n!=null){const i=n.length;P(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Sn(e,this.size),this.strides=le(t)}set(t,...e){e.length===0&&(e=[0]),P(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const i of t){if(i<0||i>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let n=t[t.length-1];for(let i=0;i<t.length-1;++i)n+=this.strides[i]*t[i];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Wi().makeTensor(this.values,this.shape,this.dtype)}}let Wi=null,sc=null;function DV(s){Wi=s}function $V(s){sc=s}class _n{constructor(t,e,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=mt(t),this.strides=le(t),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return sc.buffer(this.shape,this.dtype,t)}bufferSync(){return sc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Yi(this.shape,t,this.dtype==="complex64")}arraySync(){return Yi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Wi().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(n=>Vo(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Wi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Wi().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Vo(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Wi().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Wi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return sc.print(this,t)}clone(){return this.throwIfDisposed(),sc.clone(this)}toString(t=!1){const e=this.dataSync();return NV(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),sc.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Wi().makeVariable(this,t,e,n)}}Object.defineProperty(_n,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function pt(){return py("Tensor",()=>_n)}pt();class Lp extends _n{constructor(t,e,n,i){super(t.shape,t.dtype,t.dataId,i),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Fe(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Wi().disposeTensor(this),this.dataId=t.dataId,Wi().incRef(this,null)}dispose(){Wi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Lp,Symbol.hasInstance,{value:s=>s instanceof _n&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ZS;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(ZS||(ZS={}));var ub;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(ub||(ub={}));var hb;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(hb||(hb={}));var db;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(db||(db={}));var fb;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(fb||(fb={}));const LV={float32:db,int32:ub,bool:hb,complex64:fb};function Bs(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return LV[s][t]}function av(s){return Bs(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(s,t){if(s.dtype===t.dtype)return[s,t];const e=Bs(s.dtype,t.dtype);return[s.cast(e),t.cast(e)]}function GI(s){const t=[];return HI(s,t,new Set),t}function HI(s,t,e){if(s==null)return;if(s instanceof _n){t.push(s);return}if(!FV(s))return;const n=s;for(const i in n){const r=n[i];e.has(r)||(e.add(r),HI(r,t,e))}}function FV(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mx(s){return s.kernelName!=null}class JS{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class $c{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new JS}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Ys(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new IV(this.backendInstance),!0}setupRegisteredKernels(){WS(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){WS(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(n&&!(n instanceof hy)&&typeof n.then=="function"){const i=++this.pendingBackendInitId,r=n.then(o=>i<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Ys(`Initialization of backend ${t} failed`),Ys(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Ys(`Initialization of backend ${t} failed`),Ys(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:i,asyncInit:r}=this.initializeBackend(n);if(r||i)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),i=n.backend,r=this.readSync(e),o=i.refCount(e);i.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=e(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(t,e,n){t();try{const i=n();return e(),i}catch(i){throw e(),i}}nextTensorId(){return $c.nextTensorId++}nextVariableId(){return $c.nextVariableId++}clone(t){const e=J.runKernel(td,{x:t}),n={x:t},i=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return J.runKernel(Uh,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[e],i,r,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(US(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const i=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-e-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=mx(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(mx(t)){const{kernelName:p,inputs:g,attrs:m}=t;this.backendName==null&&this.backend;const x=US(p,this.backendName);P(x!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();l=x.kernelFunc({inputs:g,attrs:m,backend:this.backend});const v=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,b,v);const y=v.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(p,g,y);n=this.saveTensorsForBackwardMode(w)}return y}}else{const{forwardFunc:p}=t,g=m=>{!i||(n=m.map(x=>this.keep(this.clone(x))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,g));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,x),x}}const{inputs:u,attrs:h}=t,d=mx(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),i&&this.addTapeNode(c,u,e,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:e.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){const i=VS(t);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(P(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=r.map(c=>e[c]);const l=n.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(t,e,n,i){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let r=t;n==="string"&&Rh(t[0])&&(r=t.map(l=>Po(l)));const o=i.write(r,e,n),a=new _n(e,n,o,this.nextTensorId());if(this.trackTensor(a,i),n==="string"){const l=this.state.tensorInfo.get(o),c=rV(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,n,i){n=n||"float32";const r={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:i,dtype:r}=t,o=new _n(i,r,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==t.dtype&&(t=t.cast(i));const r=new Lp(t,e,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*tb(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Lp||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const n=t.size*tb(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},l=VS(t);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=n[h],f=ls(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=GI(t),n=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!n.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(t,e,n,i=!1){if(P(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));P(r instanceof _n,()=>"The result y returned by f() must be a tensor.");const o=kV(this.state.activeTape,e,r);if(!i&&o.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=n==null?PV(r.shape):n,AV(a,o,c=>this.tidy(c),OV);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(t){return P(nb(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{P(e.every(a=>a instanceof _n),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const i={};e.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(n=t(...e,l),P(n.value instanceof _n,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(nb(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(a,l)=>{const c=n.gradFunc(a,l),u=Array.isArray(c)?c:[c];P(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(u.every(d=>d instanceof _n),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=_s(),n=await this.backend.time(t);return n.wallMs=_s()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new JS;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}$c.nextTensorId=0;$c.nextVariableId=0;function PV(s){const t=fy(mt(s),"float32");return J.makeTensor(t,s,"float32")}function qI(){const s=vI();if(s._tfengine==null){const t=new aV(s);s._tfengine=new $c(t)}return hV(s._tfengine.ENV),DV(()=>s._tfengine),s._tfengine}const J=qI();function OV(s,t){const e={a:s,b:t};return J.runKernel(su,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(){return typeof navigator<"u"&&navigator!=null}function jI(s){if(s||zV()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=s;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function XI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Us=ft();Us.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Us.registerFlag("IS_BROWSER",()=>XI());Us.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Us.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Us.registerFlag("PROD",()=>!1);Us.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Us.getBool("DEBUG"));Us.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Us.registerFlag("IS_TEST",()=>!1);Us.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Us.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Us.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Us.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Us.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kg(s,t){let e=s;if(Dr(s))return t==="string"?[]:[s.length];if(typeof s=="object"&&"texture"in s){const i=s.channels||"RGBA";return[s.height,s.width*i.length]}if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(e)||Dr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(s)&&ft().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&KI(s,n,[]),n}function KI(s,t,e){if(e=e||[],!Array.isArray(s)&&!Dr(s)){P(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${s.length} elements`),P(s.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const n=t.slice(1);for(let i=0;i<s.length;++i)KI(s[i],n,e.concat(i))}function QS(s,t,e,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${s} tensor, but got ${t} tensor`)}}function z(s,t,e,n="numeric"){if(s instanceof _n)return QS(n,s.dtype,t,e),s;let i=Dh(s);if(i!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(i=n),QS(n,i,t,e),s==null||!Dr(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const r=kg(s,i);!Dr(s)&&!Array.isArray(s)&&(s=[s]);const a=i!=="string"?xl(s,i):Nc(s,[],!0);return J.makeTensor(a,r,i)}function YI(s,t,e,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,o)=>z(r,`${t}[${o}]`,e,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV="__op";function tt(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const n=s[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+BV;const i=(...r)=>{J.startScope(e);try{const o=n(...r);return bI(o)&&console.error("Cannot return a Promise inside of tidy."),J.endScope(o),o}catch(o){throw J.endScope(null),o}};return Object.defineProperty(i,"name",{value:e,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(s,t){const e=z(s,"real","complex"),n=z(t,"imag","complex");Ri(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);const i={real:e,imag:n};return J.runKernel(wy,i)}const Ka=tt({complex_:UV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ag(s,t,e,n){if(n==null&&(n=Dh(s)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof s=="object"&&"texture"in s){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return s.channels=s.channels||"RGBA",J.backend.createTensorFromTexture(s,t||e,n)}if(!Dr(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){xI(t);const i=mt(t),r=mt(e);P(i===r,()=>`Based on the provided shape, [${t}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<e.length;++o){const a=e[o],l=o===e.length-1?a!==mt(t.slice(o)):!0;P(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Dr(s)&&!Array.isArray(s)&&(s=[s]),t=t||e,s=n!=="string"?xl(s,n):Nc(s,[],!0),J.makeTensor(s,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(s,t,e){const n=kg(s,e);return Ag(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tC={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fp=4;async function eC(s,t){const e=[],n=[],i=Array.isArray(s)?s.map(o=>o.name):Object.keys(s);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(s)?s[o].tensor:s[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,x)=>m+x.length,0)+Fp*d.length,p=new Uint8Array(f);let g=0;for(let m=0;m<d.length;m++){const x=d[m],b=new Uint8Array(new Uint32Array([x.length]).buffer);p.set(b,g),g+=Fp,p.set(x,g),g+=x.length}h(p)});n.push(u)}else n.push(l.data());t!=null&&(c.group=t),e.push(c)}const r=await Promise.all(n);return{data:WV(r),specs:e}}function VV(s,t){const e={};let n,i=0;for(const r of t){const o=r.name,a=r.dtype,l=r.shape,c=mt(l);let u;if("quantization"in r){const h=r.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${r.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${r.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=tC[h.dtype],f=s.slice(i,i+c*d),p=h.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(a==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(p.length);for(let g=0;g<p.length;g++){const m=p[g];u[g]=m*h.scale+h.min}}else if(h.dtype==="float16")n===void 0&&(n=JV()),u=n(p);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(a==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(p.length);for(let g=0;g<p.length;g++){const m=p[g];u[g]=Math.round(m*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${a}`);i+=c*d}else if(a==="string"){const h=mt(r.shape);u=[];for(let d=0;d<h;d++){const f=new Uint32Array(s.slice(i,i+Fp))[0];i+=Fp;const p=new Uint8Array(s.slice(i,i+f));u.push(p),i+=f}}else{const h=tC[a],d=s.slice(i,i+c*h);if(a==="float32")u=new Float32Array(d);else if(a==="int32")u=new Int32Array(d);else if(a==="bool")u=new Uint8Array(d);else if(a==="complex64"){u=new Float32Array(d);const f=new Float32Array(u.length/2),p=new Float32Array(u.length/2);for(let x=0;x<f.length;x++)f[x]=u[x*2],p[x]=u[x*2+1];const g=Oo(f,l,"float32"),m=Oo(p,l,"float32");e[o]=Ka(g,m),g.dispose(),m.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${a}`);i+=c*h}a!=="complex64"&&(e[o]=Oo(u,l,a))}return e}function WV(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const e=[];s.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(t);let i=0;return e.forEach(r=>{n.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),n.buffer}const lv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function nC(s){return lv?Buffer.byteLength(s):new Blob([s]).size}function GV(s){if(lv)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function HV(s){if(lv){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const t=atob(s),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function ZI(s){if(s.length===1)return s[0];let t=0;s.forEach(i=>{t+=i.byteLength});const e=new Uint8Array(t);let n=0;return s.forEach(i=>{e.set(new Uint8Array(i),n),n+=i.byteLength}),e.buffer}function JI(s,t){const e={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(e.signature=s.signature),s.userDefinedMetadata!=null&&(e.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(e.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(e.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(e.trainingConfig=s.trainingConfig),e}function qV(s,t,e){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function jV(s,t){let e,n;return s.weightsManifest!=null&&([e,n]=await t(s.weightsManifest)),qV(s,e,n)}function Ng(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:nC(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:nC(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function XV(s){const t=[];for(const e of s)t.push(...e.weights);return t}function KV(){const s=e=>{let n=e<<13,i=0;for(;(n&8388608)===0;)i-=8388608,n<<=1;return n&=-8388609,i+=947912704,n|i},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=s(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function YV(){const s=new Uint32Array(64);s[0]=0,s[31]=1199570944,s[32]=2147483648,s[63]=3347054592;for(let t=1;t<31;t++)s[t]=t<<23;for(let t=33;t<63;t++)s[t]=2147483648+(t-32<<23);return s}function ZV(){const s=new Uint32Array(64);for(let t=0;t<64;t++)s[t]=1024;return s[0]=s[32]=0,s}function JV(){const s=KV(),t=YV(),e=ZV();return n=>{const i=new ArrayBuffer(4*n.length),r=new Uint32Array(i);for(let o=0;o<n.length;o++){const a=n[o],l=s[e[a>>10]+(a&1023)]+t[a>>10];r[o]=l}return new Float32Array(i)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class En{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return En.instance==null&&(En.instance=new En),En.instance}static registerSaveRouter(t){En.getInstance().saveRouters.push(t)}static registerLoadRouter(t){En.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return En.getHandlers(t,"save")}static getLoadHandlers(t,e){return En.getHandlers(t,"load",e)}static getHandlers(t,e,n){const i=[];return(e==="load"?En.getInstance().loadRouters:En.getInstance().saveRouters).forEach(o=>{const a=o(t,n);a!==null&&i.push(a)}),i}}const QV=s=>En.getSaveHandlers(s),tW=(s,t)=>En.getLoadHandlers(s,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pb="tensorflowjs",mb=1,Na="models_store",Ao="model_info_store";function QI(){if(!ft().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function gb(s){const t=s.result;t.createObjectStore(Na,{keyPath:"modelPath"}),t.createObjectStore(Ao,{keyPath:"modelPath"})}class Ya{constructor(t){if(this.indexedDB=QI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,i)=>{const r=this.indexedDB.open(pb,mb);r.onupgradeneeded=()=>gb(r),r.onsuccess=()=>{const o=r.result;if(e==null){const a=o.transaction(Na,"readonly"),c=a.objectStore(Na).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=u=>(o.close(),i(c.error)),a.oncomplete=()=>o.close()}else{const a=Ng(e),l=o.transaction(Ao,"readwrite");let c=l.objectStore(Ao);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=o.transaction(Na,"readwrite");const f=h.objectStore(Na).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(Ao);const g=c.delete(this.modelPath);g.onsuccess=()=>(o.close(),i(f.error)),g.onerror=m=>(o.close(),i(f.error))}},u.onerror=d=>(o.close(),i(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}Ya.URL_SCHEME="indexeddb://";const tE=s=>ft().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ya.URL_SCHEME)?eW(s.slice(Ya.URL_SCHEME.length)):null;En.registerSaveRouter(tE);En.registerLoadRouter(tE);function eW(s){return new Ya(s)}function nW(s){return s.startsWith(Ya.URL_SCHEME)?s.slice(Ya.URL_SCHEME.length):s}class sW{constructor(){this.indexedDB=QI()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(pb,mb);n.onupgradeneeded=()=>gb(n),n.onsuccess=()=>{const i=n.result,r=i.transaction(Ao,"readonly"),a=r.objectStore(Ao).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(i.close(),e(a.error)),r.oncomplete=()=>i.close()},n.onerror=i=>e(n.error)})}async removeModel(t){return t=nW(t),new Promise((e,n)=>{const i=this.indexedDB.open(pb,mb);i.onupgradeneeded=()=>gb(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(Ao,"readwrite"),a=o.objectStore(Ao),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),h=()=>{c=r.transaction(Na,"readwrite");const f=c.objectStore(Na).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=p=>n(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),n(l.error))}},l.onerror=u=>(r.close(),n(l.error)),o.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>n(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no="/",ic="tensorflowjs_models",eE="info",iW="model_topology",rW="weight_specs",oW="weight_data",aW="model_metadata";function nE(s){return{info:[ic,s,eE].join(no),topology:[ic,s,iW].join(no),weightSpecs:[ic,s,rW].join(no),weightData:[ic,s,oW].join(no),modelMetadata:[ic,s,aW].join(no)}}function sE(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function lW(s){const t=s.split(no);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(no)}function cW(s){return s.startsWith(Za.URL_SCHEME)?s.slice(Za.URL_SCHEME.length):s}class Za{constructor(t){if(!ft().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=nE(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),i=Ng(t);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,GV(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw sE(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=HV(o),e}}Za.URL_SCHEME="localstorage://";const iE=s=>ft().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Za.URL_SCHEME)?uW(s.slice(Za.URL_SCHEME.length)):null;En.registerSaveRouter(iE);En.registerLoadRouter(iE);function uW(s){return new Za(s)}class hW{constructor(){P(ft().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=ic+no,n=no+eE;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(e)&&r.endsWith(n)){const o=lW(r);t[o]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=cW(t);const e=nE(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return sE(e),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC="://";class xr{constructor(){this.managers={}}static getInstance(){return xr.instance==null&&(xr.instance=new xr),xr.instance}static registerManager(t,e){P(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(sC)&&(t=t.slice(0,t.indexOf(sC))),P(t.length>0,()=>"scheme must not be an empty string.");const n=xr.getInstance();P(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=xr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(xr.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dW{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!ft().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const i=this.functionRefs[n.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(ft().get("IS_BROWSER")){ft().setPlatform("browser",new dW);try{xr.registerManager(Za.URL_SCHEME,new hW)}catch{}try{xr.registerManager(Ya.URL_SCHEME,new sW)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW={importFetch:()=>require("node-fetch")};let gx;class pW{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return ft().global.fetch!=null?ft().global.fetch(t,e):(gx==null&&(gx=fW.importFetch()),gx(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}ft().get("IS_NODE")&&!ft().get("IS_BROWSER")&&ft().setPlatform("node",new pW);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(s,t="float32",e){return t=t||"float32",xI(s),new os(s,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(s,t){const e=z(s,"x","cast");if(!iV(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:e},i={dtype:t};return J.runKernel(Uh,n,i)}const Ht=tt({cast_:mW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(s){const e={x:z(s,"x","clone","string_or_numeric")};return J.runKernel(td,e)}const La=tt({clone_:gW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */qI();const bW={buffer:we,cast:Ht,clone:La,print:xW};$V(bW);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW="model",vW=".json",wW=".weights.bin";function iC(s){return new Promise(t=>setTimeout(t)).then(s)}class Ja{constructor(t){if(!ft().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ja.URL_SCHEME)&&(t=t.slice(Ja.URL_SCHEME.length)),(t==null||t.length===0)&&(t=yW),this.modelJsonFileName=t+vW,this.weightDataFileName=t+wW}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=JI(t,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await iC(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await iC(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ng(t)}}}}Ja.URL_SCHEME="downloads://";const _W=s=>ft().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ja.URL_SCHEME)?SW(s.slice(Ja.URL_SCHEME.length)):null;En.registerSaveRouter(_W);function SW(s="model"){return new Ja(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(s,t,e,n){o(s),e=e==null?0:e,n=n==null?1:n,a(e,n);let i=0;const r=l=>(l.then(c=>{const u=e+ ++i/s.length*(n-e);return t(u),c}),l);function o(l){P(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),P(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),P(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CW(s,t){t==null&&(t={});const e=t.fetchFunc==null?ft().platform.fetch:t.fetchFunc,n=s.map(h=>e(h,t.requestInit,{isBinary:!0})),i=0,r=.5,a=(t.onProgress==null?await Promise.all(n):await rC(n,t.onProgress,i,r)).map(h=>h.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(a):await rC(a,t.onProgress,l,c)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TW="application/octet-stream",IW="application/json";class cv{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(P(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=ft().platform.fetch,P(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&P(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],i=JI(t,n);e.body.append("model.json",new Blob([JSON.stringify(i)],{type:IW}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:TW}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Ng(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const n=e.modelTopology,i=e.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return jV(e,r=>this.loadWeights(r))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=EW(e),r=this.weightPathPrefix||n,o=XV(t),a=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(r+h+i);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await CW(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,ZI(c)]}}cv.URL_SCHEME_REGEX=/^https?:\/\//;function EW(s){const t=s.lastIndexOf("/"),e=s.lastIndexOf("?"),n=s.substring(0,t),i=e>t?s.substring(e):"";return[n+"/",i]}function oC(s){return s.match(cv.URL_SCHEME_REGEX)!=null}const rE=(s,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(s)?e=s.every(n=>oC(n)):e=oC(s),e)return oE(s,t)}return null};En.registerSaveRouter(rE);En.registerLoadRouter(rE);function oE(s,t){return new cv(s,t)}function MW(s,t){return oE(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xx{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class kW{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class AW{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function NW(s,t,e,n){const i=arguments;return new AW(RW(...i))}function RW(s,t,e,n){return arguments.length===1?s.modelTopology!=null||s.weightSpecs!=null?new xx(s):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new xx({modelTopology:s})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new xx({modelTopology:s,weightSpecs:t,weightData:e,trainingConfig:n}))}function DW(s){return new kW(s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(s,t,e=!1,n=!1){let i=z(s,"a","matMul"),r=z(t,"b","matMul");[i,r]=bn(i,r);const o={a:i,b:r},a={transposeA:e,transposeB:n};return J.runKernel(Dm,o,a)}const Le=tt({matMul_:$W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(s,t,e=1,n=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:z(s,"indices","oneHot","int32")},a={dtype:i,depth:t,onValue:e,offValue:n};return J.runKernel(ug,o,a)}const aE=tt({oneHot_:LW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(){return J}function Pp(){return J.memory()}function ut(s,t){return J.tidy(s,t)}function ye(s){GI(s).forEach(e=>e.dispose())}function $r(s){return J.keep(s)}function FW(s){return J.setBackend(s)}function lE(s,t,e=1){return J.registerBackend(s,t,e)}function PW(){return J.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(s){const e={input:z(s,"input","imag")};return J.runKernel(Fy,e)}const uv=tt({imag_:OW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(s){const e={x:z(s,"x","neg")};return J.runKernel(ag,e)}const cn=tt({neg_:zW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(s){const e={input:z(s,"input","real")};return J.runKernel(Gy,e)}const Op=tt({real_:BW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(s,t,e){const n=z(s,"x","transpose");if(t==null&&(t=n.shape.map((o,a)=>a).reverse()),P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(o=>{P(o>=0&&o<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const i={x:n},r={perm:t};return n.dtype==="complex64"?ut(()=>{let o=Op(n),a=uv(n);return o=J.runKernel(bc,{x:o},r),a=J.runKernel(bc,{x:a},r),e&&(a=cn(a)),Ka(o,a)}):J.runKernel(bc,i,r)}const Ne=tt({transpose_:UW});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(s,t){const e=s.length,n=[];for(let i=0;i<e;i++){const r=e-1-i,o=s[r]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(r)}return n}function Dn(s,t){const e=[];for(let n=0;n<t.length;n++){const i=s[s.length-n-1],r=t.length-n-1,o=t[r];(i==null||i===1&&o>1)&&e.unshift(r)}return e}function me(s,t){const e=[],n=Math.max(s.length,t.length);for(let i=0;i<n;i++){let r=s[s.length-i-1];r==null&&(r=1);let o=t[t.length-i-1];if(o==null&&(o=1),r===1)e.unshift(o);else if(o===1)e.unshift(r);else if(r!==o){const a=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(a)}else e.unshift(r)}return e}function hv(s,t){const e=s.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(mt(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const i=t.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=s.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<e;++h)c*=a[h],l.push(a[h]);const u=[...le(s.shape).map(h=>h/c),1].slice(0,r);return[l,o,c,u]}function cE(s,t,e){const n=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${i}.`;if(e.rank<i)throw new Error(r+` update.rank < ${i}. `);if(s.length<n+(e.rank-i))throw new Error(r+` Output shape length < ${n+(e.rank-i)}`);if(e.rank!==i+s.length-n)throw new Error(r+` update.rank != ${i+s.length-n}`);for(let o=0;o<i;++o)if(e.shape[o]!==t.shape[o])throw new Error(r+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-i;++o)if(e.shape[o+i]!==s[o+n])throw new Error(r+` updates.shape[${o+i}] (${e.shape[o+i]}) != shape[${o+i}] (${s[o+i]})`)}function VW(s,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}cE(e,t,s)}function kd(s,t,e){const n=t.shape.length,i=n>1?t.shape[n-1]:1,r=e.length;let o=1;for(let h=i;h<r;++h)o*=e[h];const a=i<1?1:i,l=mt(t.shape)/a,c=[...le(e.slice(0,i)),1],u=mt(e);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xb=-2,WW=-1;function dv(s,t,e){const n=s.shape.length;P(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),P(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let i=0;i<n;++i)P(t[i]+e[i]<=s.shape[i],()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${s.shape[i]})`)}function GW(s){const t=[];let e=0;for(;s>0;)s&1&&t.push(e),s/=2,e++;return t}function fv(s,t,e){const n=[];for(let i=0;i<s.length;i++)n[i]=Math.ceil((t[i]-s[i])/e[i]);return n}function uE(s,t,e,n){const i=[...s];for(let r=i.length;r<n.length;r++)i.push(1);for(let r=0;r<e;r++)r===0?i[t]=1:(i.splice(t,0,1),i.pop());return i}function hE(s,t,e){return e<=s?e:e-(t-1)}function dE(s,t){const e=[];for(let n=0;n<s;n++)e.push(t+n);return e}function HW(s,t,e,n,i,r,o,a,l){const c=s.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const f=t[0],p=e+1;u=fE(o,f,p,n,s),h=pE(a,f,p,i,s),d=uE(r,f,p,s)}else for(let f=0;f<c;f++)u[f]=gE(o,n,r,s,f,l),h[f]=xE(a,i,r,s,f,l),d[f]=mE(r,f,l);return{begin:u,end:h,strides:d}}function fE(s,t,e,n,i){const r=[...i],o=dE(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=hE(t,e,a);let c=n[l];s&1<<l&&(c=0),r[a]=c}return r}function pE(s,t,e,n,i){const r=[...i],o=dE(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=hE(t,e,a);let c=n[l];s&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=Xa(0,r[a],i[a])}return r}function mE(s,t,e){let n=s[t];return(e&1<<t||n==null)&&(n=1),n}function gE(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),o=Xa(0,o,l-1),o}function xE(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),a>0?o=Xa(0,o,l):o=Xa(-1,o,l-1),o}function pv(s,t,e){let n=e.length;for(let i=0;i<e.length;i++)if(e[i]>1){n=i;break}for(let i=n+1;i<e.length;i++)if(t[i]>0||e[i]!==s[i])return!1;return!0}function mv(s,t){let e=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)e+=s[n]*t[n];return e}function Rg(s,t,e){let n;const i=s.shape.length;typeof t=="number"?n=[t,...new Array(i-1).fill(0)]:t.length<i?n=t.concat(new Array(i-t.length).fill(0)):n=t.slice(),n.forEach(o=>{P(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(i).fill(-1):typeof e=="number"?r=[e,...new Array(i-1).fill(-1)]:e.length<i?r=e.concat(new Array(i-e.length).fill(-1)):r=e,r=r.map((o,a)=>o>=0?o:(P(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),s.shape[a]-n[a])),[n,r]}function gv(s,t,e,n,i,r,o,a,l){let c;if(n==null?(c=new Array(t.length),c.fill(1)):c=n,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let v=0;v<h.dims;v++)u&&(1<<v&a)!==0&&h.numAddAxisAfterEllipsis++,1<<v&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};qW(h,d);let f=!0,p=!0,g=!0;const m=[],x=[];for(let v=0;v<s.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<v),w=s[v];if(w===-1){m.push(y?1:-1);continue}const S=[d.beginMask&1<<v,d.endMask&1<<v],C=[d.strides[v]>0?0:-1,d.strides[v]>0?w:w-1];if(y&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[v]===1;const _=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(y){const D=d.begin[v]<0?w+d.begin[v]:d.begin[v];if(d.begin[v]=D,d.end[v]=d.begin[v]+1,D<0||D>=w)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=aC(d.begin[v],0,d.strides[v],w,S,C),d.end[v]=aC(d.end[v],1,d.strides[v],w,S,C);const A=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===w;f=f&&A,p=p&&(v===0&&d.strides[v]===1||A)}else f=f&&d.strides[v]===1&&_,p=p&&(v===0&&d.strides[v]===1||_);let T,I=!1;if(d.beginValid&&d.endValid?(T=d.end[v]-d.begin[v],I=!0):y?(T=1,I=!0):_&&w>=0&&(d.strides[v]<0?T=-w:T=w,I=!0),I){let A;T===0||T<0!=d.strides[v]<0?A=0:A=Math.trunc(T/d.strides[v])+(T%d.strides[v]!==0?1:0),m.push(A)}else m.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){const y=d.finalShapeGatherIndices[v];y>=0?x.push(m[y]):y===xb&&x.push(1)}return{finalShapeSparse:x.filter((v,y)=>d.finalShapeGatherIndices[y]!==xb),finalShape:x,isIdentity:f,sliceDim0:p,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function qW(s,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=s.begin!=null,t.endValid=s.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const i=Math.min(t.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,t.dims);for(;e<i;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&s.newAxisMask)t.finalShapeGatherIndices.push(xb),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);s.begin!=null&&(t.begin[e]=s.begin[n]),s.end!=null&&(t.end[e]=s.end[n]),t.strides[e]=s.strides[n],s.beginMask&1<<n&&(t.beginMask|=1<<e),s.endMask&1<<n&&(t.endMask|=1<<e),s.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(WW),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function aC(s,t,e,n,i,r){if(i[t])return e>0?r[t]:r[t+1&1];{const o=s<0?n+s:s;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const jW=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:dv,maskToAxes:GW,computeOutShape:fv,stridesWithElidedDims:uE,getNormalizedAxes:HW,startIndicesWithElidedDims:fE,stopIndicesWithElidedDims:pE,stridesForAxis:mE,startForAxis:gE,stopForAxis:xE,isSliceContinous:pv,computeFlatOffset:mv,parseSliceParams:Rg,sliceInfo:gv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iu{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class bi{constructor(){this.classNameMap={}}static getMap(){return bi.instance==null&&(bi.instance=new bi),bi.instance}static register(t){bi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function At(s){P(s.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),P(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),bi.register(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s,t){let e=z(s,"a","add"),n=z(t,"b","add");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(su,i)}const $t=tt({add_:XW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(s,t){let e=z(s,"a","floorDiv"),n=z(t,"b","floorDiv");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(Jh,i)}const bE=tt({floorDiv_:KW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(s,t){let e=z(s,"a","div"),n=z(t,"b","div");if([e,n]=bn(e,n),e.dtype==="int32"&&n.dtype==="int32")return bE(e,n);const i={a:e,b:n},r={};return J.runKernel(qh,i,r)}const ae=tt({div_:YW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(s,t){let e=z(s,"a","mul"),n=z(t,"b","mul");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(cd,i)}const K=tt({mul_:ZW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(s){const t=z(s,"x","abs");if(t.dtype==="complex64"){const e={x:t};return J.runKernel(Lm,e)}else{const e={x:t};return J.runKernel(Mm,e)}}const Fn=tt({abs_:JW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(s){const e={x:z(s,"x","acos")};return J.runKernel($h,e)}const tG=tt({acos_:QW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(s){const e={x:z(s,"x","acosh")};return J.runKernel(Lh,e)}const nG=tt({acosh_:eG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(s,t=null,e=!1){const i={x:z(s,"x","all","bool")},r={axis:t,keepDims:e};return J.runKernel(gy,i,r)}const yE=tt({all_:sG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(s,t=null,e=!1){const i={x:z(s,"x","any","bool")},r={axis:t,keepDims:e};return J.runKernel(xy,i,r)}const bb=tt({any_:iG});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(s,t=0){const n={x:z(s,"x","argMax")},i={axis:t};return J.runKernel(km,n,i)}const ph=tt({argMax_:rG});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(s,t=0){const n={x:z(s,"x","argMin")},i={axis:t};return J.runKernel(Am,n,i)}const aG=tt({argMin_:oG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(s){const e={x:z(s,"x","asin")};return J.runKernel(Fh,e)}const cG=tt({asin_:lG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(s){const e={x:z(s,"x","asinh")};return J.runKernel(Ph,e)}const hG=tt({asinh_:uG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(s){const e={x:z(s,"x","atan")};return J.runKernel(Oh,e)}const fG=tt({atan_:dG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(s,t){let e=z(s,"a","atan2"),n=z(t,"b","atan2");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(Bh,i)}const mG=tt({atan2_:pG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(s){const e={x:z(s,"x","atanh")};return J.runKernel(zh,e)}const xG=tt({atanh_:gG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(s,t,e,n,i="NHWC",r){const o=s[3],a=[...t,o],l=mo(i);return Qn(s,a,e,r,n,null,null,l)}function Di(s,t,e,n,i,r,o="channelsLast"){const[a,l]=zp(t);let c;if(o==="channelsLast")c=[a,l,s[3],s[3]];else if(o==="channelsFirst")c=[a,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Qn(s,c,e,n,i,r,!1,o)}function po(s,t,e,n,i,r,o="NDHWC"){const[a,l,c]=yb(t);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,s[4],s[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Zo(s,u,e,n,i,!1,h,r)}function Qn(s,t,e,n,i,r,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=s;else if(a==="channelsFirst")[l,h,c,u]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=t,[g,m]=zp(e),[x,b]=zp(n),v=yc(d,x),y=yc(f,b),{padInfo:w,outHeight:S,outWidth:C}=vG(i,c,u,g,m,v,y,r,a),_=o?p*h:p;let T;return a==="channelsFirst"?T=[l,_,S,C]:a==="channelsLast"&&(T=[l,S,C,_]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:S,outWidth:C,outChannels:_,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:s,outShape:T,filterShape:t}}function Zo(s,t,e,n,i,r=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=s;else if(o==="channelsFirst")[l,d,c,u,h]=s;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,g,,m]=t,[x,b,v]=yb(e),[y,w,S]=yb(n),C=yc(f,y),_=yc(p,w),T=yc(g,S),{padInfo:I,outDepth:A,outHeight:D,outWidth:k}=wG(i,c,u,h,x,b,v,C,_,T,a),M=r?m*d:m;let E;return o==="channelsFirst"?E=[l,M,A,D,k]:o==="channelsLast"&&(E=[l,A,D,k,M]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:A,outHeight:D,outWidth:k,outChannels:M,padInfo:I,strideDepth:x,strideHeight:b,strideWidth:v,filterDepth:f,filterHeight:p,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:_,effectiveFilterWidth:T,dilationDepth:y,dilationHeight:w,dilationWidth:S,inShape:s,outShape:E,filterShape:t}}function bG(s,t,e,n,i){n==null&&(n=xv(s,t,e));const r=s[0],o=s[1],a=Fa((r-t+2*n)/e+1,i),l=Fa((o-t+2*n)/e+1,i);return[a,l]}function yG(s,t,e,n,i,r){i==null&&(i=xv(s,t,n));const o=s[0],a=s[1],l=s[2],c=Fa((o-t+2*i)/n+1,r),u=Fa((a-t+2*i)/n+1,r),h=Fa((l-t+2*i)/n+1,r);return[c,u,h,e]}function xv(s,t,e,n=1){const i=yc(t,n);return Math.floor((s[0]*(e-1)-e+i)/2)}function zp(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function yb(s){return typeof s=="number"?[s,s,s]:s}function yc(s,t){return t<=1?s:s+(s-1)*(t-1)}function vG(s,t,e,n,i,r,o,a,l){let c,u,h;if(typeof s=="number"){c={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=bG([t,e],r,n,s,a);u=f[0],h=f[1]}else if(s==="same"){u=Math.ceil(t/n),h=Math.ceil(e/i);const d=Math.max(0,(u-1)*n+r-t),f=Math.max(0,(h-1)*i+o-e),p=Math.floor(d/2),g=d-p,m=Math.floor(f/2),x=f-m;c={top:p,bottom:g,left:m,right:x,type:"SAME"}}else if(s==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/n),h=Math.ceil((e-o+1)/i);else if(typeof s=="object"){const d=l==="channelsLast"?s[1][0]:s[2][0],f=l==="channelsLast"?s[1][1]:s[2][1],p=l==="channelsLast"?s[2][0]:s[3][0],g=l==="channelsLast"?s[2][1]:s[3][1];c={top:d,bottom:f,left:p,right:g,type:d===0&&f===0&&p===0&&g===0?"VALID":"EXPLICIT"},u=Fa((t-r+d+f)/n+1,a),h=Fa((e-o+p+g)/i+1,a)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:c,outHeight:u,outWidth:h}}function wG(s,t,e,n,i,r,o,a,l,c,u){let h,d,f,p;if(typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const m=yG([t,e,n,1],a,1,i,s,u);d=m[0],f=m[1],p=m[2]}else if(s==="same"){d=Math.ceil(t/i),f=Math.ceil(e/r),p=Math.ceil(n/o);const g=(d-1)*i+a-t,m=(f-1)*r+l-e,x=(p-1)*o+c-n,b=Math.floor(g/2),v=g-b,y=Math.floor(m/2),w=m-y,S=Math.floor(x/2),C=x-S;h={top:y,bottom:w,left:S,right:C,front:b,back:v,type:"SAME"}}else if(s==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-a+1)/i),f=Math.ceil((e-l+1)/r),p=Math.ceil((n-c+1)/o);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function Fa(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function Qa(s){const[t,e,n]=zp(s);return t===1&&e===1&&n===1}function us(s,t){return Qa(s)||Qa(t)}function mo(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function Es(s,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")P(Rc(t),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(i=>{P(Rc(i),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${i}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(s,t){const n={x:z(s,"x","reshape","string_or_numeric")},i={shape:t};return J.runKernel(mg,n,i)}const et=tt({reshape_:_G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(s,t,e,n,i){const r=z(s,"x","avgPool","float32"),o=1;P(us(e,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=et(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Es("avgPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i};let h=J.runKernel(Nm,c,u);return h=Ht(h,r.dtype),l?et(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const bv=tt({avgPool_:SG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(s,t,e,n,i,r="NDHWC"){const o=z(s,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),P(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Es("avgPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r};let h=J.runKernel(Rm,c,u);return h=Ht(h,a.dtype),l?et(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const TG=tt({avgPool3d_:CG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(s,t=0){P(s.length>=1,()=>"Pass at least one tensor to concat");const e=YI(s,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return La(e[0]);const n=e,i={axis:t};return J.runKernel(Fm,n,i)}const as=tt({concat_:IG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(s){const e={x:z(s,"x","sigmoid","float32")};return J.runKernel(vd,e)}const ru=tt({sigmoid_:EG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(s,t,e){const n=z(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const i={x:n},r={begin:t,size:e};return J.runKernel(vg,i,r)}const Ge=tt({slice_:MG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(s){const e={x:z(s,"x","tanh","float32")};return J.runKernel(Id,e)}const yv=tt({tanh_:kG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(s,t,e){const n=z(s,"x","batchToSpaceND"),i=t.reduce((a,l)=>a*l);P(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),P(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),P(n.shape[0]%i===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`);const r={x:n},o={blockShape:t,crops:e};return J.runKernel($m,r,o)}const vv=tt({batchToSpaceND_:AG});function NG(s){let t;return s.rank===0||s.rank===1?t=et(s,[1,1,1,s.size]):s.rank===2?t=et(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=et(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(s,t,e,n,i,r){r==null&&(r=.001);const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;n!=null&&(u=z(n,"offset","batchNorm")),P(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:NG(o),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:r},p=J.runKernel(Hm,d,f);return et(p,o.shape)}const Dg=tt({batchNorm_:RG});function DG(s,t,e,n,i,r){const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;return n!=null&&(u=z(n,"offset","batchNorm")),P(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),P(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Dg(o,a,l,u,c,r)}const $G=tt({batchNorm2d_:DG});function LG(s,t,e,n,i,r){const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;return n!=null&&(u=z(n,"offset","batchNorm")),P(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),P(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Dg(o,a,l,u,c,r)}const FG=tt({batchNorm3d_:LG});function PG(s,t,e,n,i,r){const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;return n!=null&&(u=z(n,"offset","batchNorm")),P(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),P(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Dg(o,a,l,u,c,r)}const OG=tt({batchNorm4d_:PG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(s,t,e){const n=z(s,"x","bincount"),i=z(t,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(e>=0,()=>`size must be non-negative, but got ${e}.`),P(i.size===n.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${i.shape}.`);const r={x:n,weights:i},o={size:e};return J.runKernel(vy,r,o)}const BG=tt({bincount_:zG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(s,t){let e=z(s,"broadcastTo","x");const n=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=et(e,c)}const i=e.shape,r=Array.from(t);for(let c=t.length-1;c>=0;c--)if(i[c]===t[c])r[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return La(e);const a={x:e},l={reps:r};return J.runKernel(Ed,a,l)}const Yu=tt({broadcastTo_:UG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(s){const e={x:z(s,"x","ceil","float32")};return J.runKernel(Vh,e)}const WG=tt({ceil_:VG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nd(s,t,e){const n={shape:s,value:t,dtype:e};return J.runKernel(Dy,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(s,t,e){const n=z(s,"x","clipByValue");if(P(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Nd(n.shape,t,n.dtype);const i={x:n},r={clipValueMin:t,clipValueMax:e};return J.runKernel(Wh,i,r)}const ei=tt({clipByValue_:GG});function HG(s){return as(s,0)}const qG=tt({concat1d_:HG});function jG(s,t){return as(s,t)}const XG=tt({concat2d_:jG});function KG(s,t){return as(s,t)}const YG=tt({concat3d_:KG});function ZG(s,t){return as(s,t)}const JG=tt({concat4d_:ZG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(s,t,e,n,i="NHWC",r=[1,1],o){const a=z(s,"x","conv2d","float32"),l=z(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Es("conv2d",n,o);const h=i==="NHWC"?c.shape[3]:c.shape[1];P(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),P(us(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=J.runKernel(Pm,d,f);return u?et(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const tl=tt({conv2d_:QG});function tH(s,t,e,n,i="NWC",r=1,o){const a=z(s,"x","conv1d"),l=z(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=et(a,[1,a.shape[0],a.shape[1]])),P(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),P(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Es("conv1d",n,o),P(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),P(us(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),P(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=et(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=et(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=tl(d,h,[1,e],n,"NHWC",[1,r],o);return u?et(m,[m.shape[2],m.shape[3]]):et(m,[m.shape[0],m.shape[2],m.shape[3]])}const vE=tt({conv1d_:tH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(s,t,e,n,i,r="NHWC",o){P(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,l=t,c=!1;t.rank===3&&(c=!0,l=et(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,s[0],s[1],s[2]]),P(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),P(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),P(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];P(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),P(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),Es("conv2dDerInput",i,o);const d={dy:l,filter:e},f={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},p=J.runKernel(Om,d,f);return c?et(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const wv=tt({conv2DBackpropInput_:eH});function nH(s,t,e,n,i,r){const o=z(s,"x","conv2dTranspose"),a=z(t,"filter","conv2dTranspose");return wv(e,o,a,n,i,"NHWC",r)}const wE=tt({conv2dTranspose_:nH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(s,t,e,n,i="NDHWC",r=[1,1,1]){const o=z(s,"x","conv3d"),a=z(t,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),P(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),P(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),P(us(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),P(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:e,pad:n,dataFormat:i,dilations:r},d=J.runKernel(zm,u,h);return c?et(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const iH=tt({conv3d_:sH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(s,t,e,n,i){P(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let r=s,o=t,a=!1;t.rank===4&&(a=!0,o=et(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],c=o.shape[4];P(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),P(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),P(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),P(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),P(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:o,filter:e},h={pad:i,strides:n,inputShape:r},d=J.runKernel(Cy,u,h);return a?et(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const _E=tt({conv3DBackpropInput_:rH});function oH(s,t,e,n,i){const r=z(s,"x","conv3dTranspose"),o=z(t,"filter","conv3dTranspose");return _E(e,r,o,n,i)}const aH=tt({conv3dTranspose_:oH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(s){const e={x:z(s,"x","cos","float32")};return J.runKernel(Gh,e)}const _v=tt({cos_:lH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(s){const e={x:z(s,"x","cosh","float32")};return J.runKernel(Hh,e)}const SE=tt({cosh_:cH});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(s,t=0,e=!1,n=!1){const r={x:z(s,"x","cumprod")},o={axis:t,exclusive:e,reverse:n};return J.runKernel(Ty,r,o)}const vb=tt({cumprod_:uH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(s,t=0,e=!1,n=!1){const r={x:z(s,"x","cumsum")},o={axis:t,exclusive:e,reverse:n};return J.runKernel(Bm,r,o)}const CE=tt({cumsum_:hH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s,t,e,n=!1){const i=z(s,"x","denseBincount"),r=z(t,"weights","denseBincount");P(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),P(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),P(e>=0,()=>`size must be non-negative, but got ${e}.`),P(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:e,binaryOutput:n};return J.runKernel(Ey,o,a)}const lC=tt({denseBincount_:dH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(s,t,e="NHWC"){const n=z(s,"x","depthToSpace","float32"),i=e==="NHWC"?n.shape[1]:n.shape[2],r=e==="NHWC"?n.shape[2]:n.shape[3],o=e==="NHWC"?n.shape[3]:n.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t}  for depthToSpace with input shape
    ${n.shape}`),P(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${n.shape}`),P(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${n.shape}`);const a={x:n},l={blockSize:t,dataFormat:e};return J.runKernel(My,a,l)}const pH=tt({depthToSpace_:fH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(s,t,e,n,i="NHWC",r=[1,1],o){const a=z(s,"x","depthwiseConv2d","float32"),l=z(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];P(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Es("depthwiseConv2d",n,o);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=J.runKernel(Um,d,f);return u?et(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Sv=tt({depthwiseConv2d_:mH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(s,t,e,n,i=[1,1],r="NHWC"){const o=z(s,"x","dilation2d"),a=z(t,"filter","dilation2d");P(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),P(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),P(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,c=!1;o.rank===3&&(l=et(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:e,pad:n,dilations:i},d=J.runKernel(Vm,u,h);return c?et(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const xH=tt({dilation2d_:gH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s,t){let e=z(s,"a","equal","string_or_numeric"),n=z(t,"b","equal","string_or_numeric");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Wm,i)}const Lr=tt({equal_:bH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(s,t,e){const n=z(t,"a","where"),i=z(e,"b","where"),r=z(s,"condition","where","bool"),o=me(me(r.shape,n.shape),i.shape),a=Yu(r,o),l=Yu(n,o),c=Yu(i,o),u={condition:a,t:l,e:c};return J.runKernel(yg,u)}const Vs=tt({where_:yH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(s){const e={x:z(s,"x","zerosLike")};return J.runKernel(Eg,e)}const Re=tt({zerosLike_:vH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(s,t){let e=z(s,"a","div"),n=z(t,"b","div");[e,n]=bn(e,n);const i=ae(e,n),r=Re(i),o=Lr(n,r);return Vs(o,r,i)}const _H=tt({divNoNan_:wH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(s,t){const e=z(s,"t1","dot"),n=z(t,"t2","dot");P((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);const i=e.rank===1?e.size:e.shape[1],r=n.rank===1?n.size:n.shape[0];if(P(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),e.rank===1&&n.rank===1){const o=et(e,[1,-1]),a=et(n,[-1,1]),l=Le(o,a);return et(l,[])}else if(e.rank===1&&n.rank===2){const o=et(e,[1,-1]),a=et(n,[n.shape[0],n.shape[1]]),l=Le(o,a);return et(l,[l.size])}else if(e.rank===2&&n.rank===1){const o=et(n,[-1,1]),a=Le(e,o);return et(a,[a.size])}else{const o=et(n,[n.shape[0],n.shape[1]]);return Le(e,o)}}const CH=tt({dot_:SH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(s){const e={x:z(s,"x","elu","float32")};return J.runKernel(jh,e)}const $g=tt({elu_:TH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(s){let t=z(s,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Ht(t,"float32"));const e={x:t};return J.runKernel(Xh,e)}const EH=tt({erf_:IH});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(s,t){for(let e=0;e<s.length;++e)if(s[s.length-e-1]!==t-1-e)return!1;return!0}function TE(s,t,e){const n=s.length+t.length,i=[];let r=0,o=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?i.push(s[r++]):i.push(t[o++]);return i}function Vn(s,t){const e=[],n=s.length;for(let r=0;r<n;r++)t.indexOf(r)===-1&&e.push(s[r]);const i=t.map(r=>s[r]);return[e,i]}function yn(s,t){const e=t.map(n=>1);return TE(s,e,t)}function ts(s,t,e){P(Cv(t,e),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function un(s,t){if(Cv(s,t))return null;const e=[];for(let n=0;n<t;++n)s.indexOf(n)===-1&&e.push(n);return s.forEach(n=>e.push(n)),e}function Jo(s){return s.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function vn(s,t){const e=[];for(let n=t-s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(s,t=null,e=!1){const i={x:z(s,"x","max")},r={reductionIndices:t,keepDims:e};return J.runKernel(eg,i,r)}const Zi=tt({max_:MH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(s,t=null,e=!1){const i={x:z(s,"x","min")},r={axis:t,keepDims:e};return J.runKernel(rg,i,r)}const Bp=tt({min_:kH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(s,t){let e=z(s,"base","pow"),n=z(t,"exp","pow");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(ud,i)}const Fc=tt({pow_:AH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function de(s,t){if((Dr(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Dr(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ag(s,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(s){const e={x:z(s,"x","sqrt","float32")};return J.runKernel(_d,e)}const gs=tt({sqrt_:NH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(s){const t=z(s,"x","square"),e={};return J.runKernel("Square",{x:t},e)}const Xe=tt({square_:RH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(s,t=null,e=!1){let n=z(s,"x","sum");n.dtype==="bool"&&(n=Ht(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return J.runKernel(wg,i,r)}const ne=tt({sum_:DH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(s,t="euclidean",e=null,n=!1){s=z(s,"x","norm");const i=IE(s,t,e);let r=i.shape;if(n){const o=_e(e,s.shape);r=yn(i.shape,o)}return et(i,r)}function IE(s,t,e=null){if(s.rank===0)return Fn(s);if(s.rank!==1&&e===null)return IE(et(s,[-1]),t,e);if(s.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return ne(Fn(s),e);if(t===1/0)return Zi(Fn(s),e);if(t===-1/0)return Bp(Fn(s),e);if(t==="euclidean"||t===2)return gs(ne(Fc(Fn(s),de(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Zi(ne(Fn(s),e[0]),e[1]-1);if(t===1/0)return Zi(ne(Fn(s),e[1]),e[0]);if(t===-1/0)return Bp(ne(Fn(s),e[1]),e[0]);if(t==="fro"||t==="euclidean")return gs(ne(Xe(s),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Lg=tt({norm_:$H});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(s,t=null,e=!1){return Lg(s,"euclidean",t,e)}const FH=tt({euclideanNorm_:LH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(s){const e={x:z(s,"x","exp")};return J.runKernel(Kh,e)}const Ii=tt({exp_:PH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(s,t=0){const e=z(s,"x","expandDims","string_or_numeric");P(t<=e.rank,()=>"Axis must be <= rank of the tensor");const n={input:e},i={dim:t};return J.runKernel(Gm,n,i)}const Rs=tt({expandDims_:OH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(s){const e={x:z(s,"x","expm1")};return J.runKernel(Yh,e)}const BH=tt({expm1_:zH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(s,t){const e=z(s,"x","tile","string_or_numeric");P(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const n={x:e},i={reps:t};return J.runKernel(Ed,n,i)}const Ki=tt({tile_:UH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(s,t,e,n="float32"){t==null&&(t=s);const i=we([s,t],n),r=s<=t?s:t;for(let a=0;a<r;++a)i.set(1,a,a);const o=et(i.toTensor(),[s,t]);if(e==null)return o;if(e.length===1)return Ki(Rs(o,0),[e[0],1,1]);if(e.length===2)return Ki(Rs(Rs(o,0),0),[e[0],e[1],1,1]);if(e.length===3)return Ki(Rs(Rs(Rs(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const EE=tt({eye_:VH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(s){const e={x:z(s,"x","floor","float32")};return J.runKernel(Zh,e)}const Fg=tt({floor_:WH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(s,t,e=0,n=0){const i=z(s,"x","gather"),r=z(t,"indices","gather","int32"),o={x:i,indices:r},a={axis:e,batchDims:n};return J.runKernel(qm,o,a)}const Tv=tt({gather_:GH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(s,t){let e=z(s,"a","greater","string_or_numeric"),n=z(t,"b","greater","string_or_numeric");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(jm,i)}const oi=tt({greater_:HH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(s,t){let e=z(s,"a","greaterEqual","string_or_numeric"),n=z(t,"b","greaterEqual","string_or_numeric");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Qh,i)}const bl=tt({greaterEqual_:qH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(s){const e={x:z(s,"x","isFinite")};return J.runKernel(ed,e)}const XH=tt({isFinite_:jH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(s){const e={x:z(s,"x","isInf")};return J.runKernel(nd,e)}const YH=tt({isInf_:KH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(s){const e={x:z(s,"x","isNaN")};return J.runKernel(sd,e)}const JH=tt({isNaN_:ZH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(s,t=.2){const n={x:z(s,"x","leakyRelu")},i={alpha:t};return J.runKernel(Xm,n,i)}const Iv=tt({leakyRelu_:QH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(s,t){let e=z(s,"a","less","string_or_numeric"),n=z(t,"b","less","string_or_numeric");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Km,i)}const ME=tt({less_:t5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(s,t){let e=z(s,"a","lessEqual","string_or_numeric"),n=z(t,"b","lessEqual","string_or_numeric");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Ym,i)}const ou=tt({lessEqual_:e5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(s,t=5,e=1,n=1,i=.5){const r=z(s,"x","localResponseNormalization");P(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),P(Rc(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=et(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},c={depthRadius:t,bias:e,alpha:n,beta:i},u=J.runKernel(tg,l,c);return a?et(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const s5=tt({localResponseNormalization_:n5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(s){const e={x:z(s,"x","log","float32")};return J.runKernel(id,e)}const Ei=tt({log_:i5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(s){const e={x:z(s,"x","log1p")};return J.runKernel(rd,e)}const Ev=tt({log1p_:r5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(s,t){P(nb(s),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(c=>c instanceof Lp),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in J.registeredVariables)t.push(J.registeredVariables[c])}const n=e?t.filter(c=>!c.trainable):null,i=t.length;t=t.filter(c=>c.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=J.gradients(s,t,null,r);P(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),n!=null&&n.forEach(c=>l[c.name]=null),{value:o,grads:l}}function el(s){return J.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(s){const e={x:z(s,"x","softplus")};return J.runKernel(wd,e)}const Rd=tt({softplus_:a5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(s){const t=z(s,"x","logSigmoid");return el(n=>({value:cn(Rd(cn(n))),gradFunc:o=>K(o,ru(cn(n)))}))(t)}const c5=tt({logSigmoid_:l5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(s,t){let e=z(s,"a","sub"),n=z(t,"b","sub");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(Cd,i)}const se=tt({sub_:u5});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(s,t=-1){const e=z(s,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return el((i,r)=>{const a=Zi(i,t,!0),l=se(i,a),c=se(Ht(l,"float32"),Ei(ne(Ii(l),t,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,g=Ii(f);return se(h,K(ne(h,t,p),g))}}})(e)}const kE=tt({logSoftmax_:h5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(s,t=null,e=!1){const n=z(s,"x","logSumExp"),i=_e(t,n.shape),r=Zi(n,i,!0),o=se(n,r),a=Ii(o),l=ne(a,i),c=Ei(l),u=$t(et(r,c.shape),c);if(e){const h=yn(u.shape,i);return et(u,h)}return u}const AE=tt({logSumExp_:d5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(s,t){const e=z(s,"a","logicalAnd","bool"),n=z(t,"b","logicalAnd","bool");me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Zm,i)}const lo=tt({logicalAnd_:f5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(s){const e={x:z(s,"x","logicalNot","bool")};return J.runKernel(Jm,e)}const Mv=tt({logicalNot_:p5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(s,t){const e=z(s,"a","logicalOr","bool"),n=z(t,"b","logicalOr","bool");me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(Qm,i)}const NE=tt({logicalOr_:m5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(s,t){const e=z(s,"a","logicalXor","bool"),n=z(t,"b","logicalXor","bool");return me(e.shape,n.shape),lo(NE(s,t),Mv(lo(s,t)))}const x5=tt({logicalXor_:g5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(s,t,e,n,i){const r=z(s,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=et(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),P(us(e,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),Es("maxPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i},h=J.runKernel(ng,c,u);return l?et(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const kv=tt({maxPool_:b5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(s,t=[1,1,1],e,n,i,r="NDHWC"){const o=z(s,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),P(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Es("maxPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r},h=J.runKernel(sg,c,u);return l?et(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const v5=tt({maxPool3d_:y5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(s,t){let e=z(s,"a","maximum"),n=z(t,"b","maximum");[e,n]=bn(e,n),e.dtype==="bool"&&(e=Ht(e,"int32"),n=Ht(n,"int32")),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(od,i)}const Qo=tt({maximum_:w5});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(s,t=null,e=!1){const i={x:z(s,"x","mean")},r={axis:t,keepDims:e};return J.runKernel(ig,i,r)}const xn=tt({mean_:_5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(s,t="float32"){if(t==="complex64"){const n=On(s,"float32"),i=On(s,"float32");return Ka(n,i)}const e=ls(mt(s),t);return J.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ta(s,t="float32"){if(t==="complex64"){const n=ta(s,"float32"),i=On(s,"float32");return Ka(n,i)}const e=fy(mt(s),t);return J.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(s,t){let e=z(s,"a","minimum"),n=z(t,"b","minimum");[e,n]=bn(e,n),e.dtype==="bool"&&(e=Ht(e,"int32"),n=Ht(n,"int32")),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(ad,i)}const Pg=tt({minimum_:S5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(s,t,e){P(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const n=z(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);const i=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)P(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[a][0]>=0&&t[a][0]<=n.shape[a]-i&&t[a][1]>=0&&t[a][1]<=n.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-i} or less than 0 for input of shape ${n.shape}`);const r={paddings:t,mode:e},o={x:n};return J.runKernel(og,o,r)}const T5=tt({mirrorPad_:C5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(s,t){let e=z(s,"a","mod"),n=z(t,"b","mod");[e,n]=bn(e,n);const i={a:e,b:n};return J.runKernel(ld,i)}const E5=tt({mod_:I5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(s,t=null,e=!1){s=z(s,"x","moments");const n=_e(t,s.shape),i=xn(s,n,e);let r=i.shape;e||(r=yn(i.shape,n));const o=Xe(se(Ht(s,"float32"),et(i,r))),a=xn(o,n,e);return{mean:i,variance:a}}const Av=tt({moments_:M5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(s,t){let e=z(s,"a","notEqual","string_or_numeric"),n=z(t,"b","notEqual","string_or_numeric");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n};return J.runKernel(lg,i)}const mh=tt({notEqual_:k5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(s){const e={x:z(s,"x","onesLike")};return J.runKernel(cg,e)}const Mi=tt({onesLike_:A5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(s,t,e=0){const n=z(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:e},r={x:n};return J.runKernel(dg,r,i)}const Nv=tt({pad_:N5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(s,t,e){const n=z(s,"x","spaceToBatchND");P(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),P(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),P(n.shape.reduce((o,a,l)=>l>0&&l<=t.length?o&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const i={x:n},r={blockShape:t,paddings:e};return J.runKernel(_g,i,r)}const Rv=tt({spaceToBatchND_:R5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(s,t,e,n,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),n===0&&(n="valid");const a=z(s,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(us(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=Di(l.shape,t,r,i,n),h=[u.dilationHeight,u.dilationWidth];let d;n==="same"?d=L5([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,g]=$5([u.inHeight,u.inWidth],h,d),m=f?n:"valid",x=f?l:Rv(l,h,p),v=(e==="avg"?()=>bv(x,t,r,m,o):()=>kv(x,t,r,m,o))(),y=f?v:vv(v,h,g);return c?et(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function $5(s,t,e){const n=e.map(u=>u[0]),i=e.map(u=>u[1]),r=s.concat(n,i),o=t.map((u,h)=>(u-r[h]%u)%u),a=i.map((u,h)=>u+o[h]),l=t.map((u,h)=>[n[h],a[h]]),c=t.map((u,h)=>[0,o[h]]);return[l,c]}function L5(s,t){const n=s.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),i=n.map(o=>Math.floor(o/2)),r=n.map((o,a)=>o-i[a]);return n.map((o,a)=>[i[a],r[a]])}const F5=tt({pool_:D5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(s,t){const e=z(s,"x","prelu"),n=z(t,"alpha","prelu"),i={x:e,alpha:n};return J.runKernel(fg,i)}const Dv=tt({prelu_:P5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(s,t=null,e=!1){let n=z(s,"x","prod");n.dtype==="bool"&&(n=Ht(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return J.runKernel(pg,i,r)}const z5=tt({prod_:O5});var RE={exports:{}};(function(s){(function(t,e,n){function i(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(ml,s,!1)})(RE);var DE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(ml,s,!1)})(DE);var $E={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(ml,s,!1)})($E);var LE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(ml,s,!1)})(LE);var FE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,g,m,x=[],b=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,b=Math.max(b,h.length)),p=0,g=-32;g<b;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=m+1640531527|0,d=x[g&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(x[(h&&h.length||0)&127]=-1),p=127,g=4*128;g>0;--g)f=x[p+34&127],d=x[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,x[p]=f^d;u.w=m,u.X=x,u.i=p}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(ml,s,!1)})(FE);var PE={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(ml,s,!1)})(PE);var OE={exports:{}};const B5={},U5=Object.freeze(Object.defineProperty({__proto__:null,default:B5},Symbol.toStringTag,{value:"Module"})),V5=P4(U5);(function(s){(function(t,e,n){var i=256,r=6,o=52,a="random",l=n.pow(i,r),c=n.pow(2,o),u=c*2,h=i-1,d;function f(y,w,S){var C=[];w=w==!0?{entropy:!0}:w||{};var _=x(m(w.entropy?[y,v(e)]:y==null?b():y,3),C),T=new p(C),I=function(){for(var A=T.g(r),D=l,k=0;A<c;)A=(A+k)*i,D*=i,k=T.g(1);for(;A>=u;)A/=2,D/=2,k>>>=1;return(A+k)/D};return I.int32=function(){return T.g(4)|0},I.quick=function(){return T.g(4)/4294967296},I.double=I,x(v(T.S),e),(w.pass||S||function(A,D,k,M){return M&&(M.S&&g(M,T),A.state=function(){return g(T,{})}),k?(n[a]=A,D):A})(I,_,"global"in w?w.global:this==n,w.state)}function p(y){var w,S=y.length,C=this,_=0,T=C.i=C.j=0,I=C.S=[];for(S||(y=[S++]);_<i;)I[_]=_++;for(_=0;_<i;_++)I[_]=I[T=h&T+y[_%S]+(w=I[_])],I[T]=w;(C.g=function(A){for(var D,k=0,M=C.i,E=C.j,N=C.S;A--;)D=N[M=h&M+1],k=k*i+N[h&(N[M]=N[E=h&E+D])+(N[E]=D)];return C.i=M,C.j=E,k})(i)}function g(y,w){return w.i=y.i,w.j=y.j,w.S=y.S.slice(),w}function m(y,w){var S=[],C=typeof y,_;if(w&&C=="object")for(_ in y)try{S.push(m(y[_],w-1))}catch{}return S.length?S:C=="string"?y:y+"\0"}function x(y,w){for(var S=y+"",C,_=0;_<S.length;)w[h&_]=h&(C^=w[h&_]*19)+S.charCodeAt(_++);return v(w)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(i):(y=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(y)),v(y)}catch{var w=t.navigator,S=w&&w.plugins;return[+new Date,t,S,t.screen,v(e)]}}function v(y){return String.fromCharCode.apply(0,y)}if(x(n.random(),e),s.exports){s.exports=f;try{d=V5}catch{}}else n["seed"+a]=f})(typeof self<"u"?self:ml,[],Math)})(OE);var W5=RE.exports,G5=DE.exports,H5=$E.exports,q5=LE.exports,j5=FE.exports,X5=PE.exports,yl=OE.exports;yl.alea=W5;yl.xor128=G5;yl.xorwow=H5;yl.xorshift7=q5;yl.xor4096=j5;yl.tychei=X5;var $v=yl;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zE{constructor(t,e,n,i,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=$v.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let t,e,n=!1;for(;!n;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*i*a,e=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class K5{constructor(t=0,e=1,n,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=$v.alea(i)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new zE(t,e,n,!1,i),o=we(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const wb=tt({randomNormal_:Y5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(s,t=0,e=1,n="float32",i){const r=we(s,n),o=new K5(t,e,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const Og=tt({randomUniform_:Z5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Up(s,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");const i={start:s,stop:t,step:e,dtype:n};return J.runKernel(Wy,{},i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(s){const e={x:z(s,"x","reciprocal")};return J.runKernel(hd,e)}const Q5=tt({reciprocal_:J5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(s){const e={x:z(s,"x","relu")};return J.runKernel(dd,e)}const go=tt({relu_:t6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e6(s){const e={x:z(s,"x","relu6")};return J.runKernel(fd,e)}const BE=tt({relu6_:e6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(s,t){const n={x:z(s,"x","reverse")},i={dims:t};return J.runKernel(bg,n,i)}const nl=tt({reverse_:n6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(s){const e={x:z(s,"x","round")};return J.runKernel(pd,e)}const UE=tt({round_:s6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(s){const e={x:z(s,"x","rsqrt","float32")};return J.runKernel(md,e)}const VE=tt({rsqrt_:i6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(s){const e={x:z(s,"x","selu")};return J.runKernel(gd,e)}const WE=tt({selu_:r6});function o6(s,t,e,n,i,r=[1,1],o="NHWC"){const a=z(s,"x","separableConv2d"),l=z(t,"depthwiseFilter","separableConv2d"),c=z(e,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=et(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),P(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),P(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),P(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];P(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=Sv(u,l,n,i,o,r),m=tl(p,c,1,"valid",o);return h?et(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const GE=tt({separableConv2d_:o6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(s){const e={x:z(s,"x","sign")};return J.runKernel(yd,e)}const l6=tt({sign_:a6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(s){const e={x:z(s,"x","sin","float32")};return J.runKernel(xd,e)}const HE=tt({sin_:c6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(s){const e={x:z(s,"x","sinh")};return J.runKernel(bd,e)}const qE=tt({sinh_:u6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(s,t,e){const n=z(s,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ge(n,[t],[e])}const Lv=tt({slice1d_:h6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(s,t,e){const n=z(s,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ge(n,t,e)}const jE=tt({slice2d_:d6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(s,t,e){const n=z(s,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ge(n,t,e)}const Fv=tt({slice3d_:f6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(s,t,e){const n=z(s,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ge(n,t,e)}const Vp=tt({slice4d_:p6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(s,t=-1){const e=z(s,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const n={logits:e},i={dim:t};return J.runKernel(Cg,n,i)}const Pv=tt({softmax_:m6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(s){P(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return J.runKernel(Ry,t)}const XE=tt({fft_:g6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(s){P(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return J.runKernel(Ly,t)}const _b=tt({ifft_:x6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(s){const t=s.shape[s.shape.length-1],e=s.size/t;let n;if(t<=2){const i=et(s,[e,t]);n=_b(i)}else{const i=[e,2*(t-1)],r=et(Op(s),[e,t]),o=et(uv(s),[e,t]),a=nl(Ge(r,[0,1],[e,t-2]),1),l=K(nl(Ge(o,[0,1],[e,t-2]),1),de(-1)),c=as([r,a],1),u=as([o,l],1),h=et(Ka(c,u),[i[0],i[1]]);n=_b(h)}if(n=Op(n),s.rank===3&&s.shape[0]!==0){const i=n,r=s.shape[0];n=et(n,[r,n.shape[0]/r,n.shape[1]]),i.dispose()}return n}const y6=tt({irfft_:b6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v6(s,t,e=0){const i={x:z(s,"x","split")},r={numOrSizeSplits:t,axis:e};return J.runKernel(Sg,i,r)}const ti=tt({split_:v6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(s,t){P(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let e=s.shape[s.shape.length-1];const n=s.size/e;let i;if(t!=null&&t<e){const p=s.shape.map(m=>0),g=s.shape.map(m=>m);g[s.shape.length-1]=t,i=Ge(s,p,g),e=t}else if(t!=null&&t>e){const p=s.shape.map(g=>g);p[s.shape.length-1]=t-e,i=as([s,On(p)],s.shape.length-1),e=t}else i=s;const r=Re(i),o=et(Ka(i,r),[n,e]),a=XE(o),l=Math.floor(e/2)+1,c=Op(a),u=uv(a),h=ti(c,[l,e-l],c.shape.length-1),d=ti(u,[l,e-l],u.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=l,et(Ka(h[0],d[0]),f)}const KE=tt({rfft_:w6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(s,t){let e=z(s,"a","squaredDifference"),n=z(t,"b","squaredDifference");[e,n]=bn(e,n),me(e.shape,n.shape);const i={a:e,b:n},r={};return J.runKernel(Sd,i,r)}const YE=tt({squaredDifference_:_6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(s,t){const e=z(s,"x","squeeze","string_or_numeric");return et(e,Ko(e.shape,t).newShape)}const Dd=tt({squeeze_:S6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(s,t=0){const e=YI(s,"tensors","stack","string_or_numeric");P(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&P(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const n=e,i={axis:t};return J.runKernel(hg,n,i)}const sl=tt({stack_:C6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(s,t=0){const n={x:z(s,"x","step")},i={alpha:t};return J.runKernel(Md,n,i)}const $d=tt({step_:T6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(s,t,e,n,i=0,r=0,o=0,a=0,l=0){const u={x:z(s,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:n,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return J.runKernel(Jy,u,h)}const E6=tt({stridedSlice_:I6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(s){const e={x:z(s,"x","tan","float32")};return J.runKernel(Td,e)}const k6=tt({tan_:M6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(s,t){dI(s);const e=kg(s,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ag(s,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(s,t,e){if(dI(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=kg(s,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ag(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(s,t=1,e=!0){const n=z(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const r={x:n},o={k:t,sorted:e},[a,l]=J.runKernel(nv,r,o);return{values:a,indices:l}}const N6=tt({topk_:A6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new zE(t,e,n,!0,i),o=we(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const ZE=tt({truncatedNormal_:R6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(s,t=0){const e=z(s,"x","unique","string_or_numeric");P(e.rank>0,()=>"The input tensor must be at least 1D");const n={x:e},i={axis:t},[r,o]=J.runKernel(iv,n,i);return{values:r,indices:o}}const $6=tt({unique_:D6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(s,t,e){const n=z(s,"x","unsortedSegmentSum"),i=z(t,"segmentIds","unsortedSegmentSum","int32");P(Rc(e),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:i},o={numSegments:e};return J.runKernel(Ig,r,o)}const JE=tt({unsortedSegmentSum_:L6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(s,t=0){const e=z(s,"x","unstack","string_or_numeric");P(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const n={value:e},i={axis:t};return J.runKernel(Tg,n,i)}const Pc=tt({unstack_:F6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(s,t=!0,e,n){return J.makeVariable(s,t,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(s,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const n=we(s,"int32"),i=we([e.length,s.length],"int32");for(let r=0;r<e.length;r++){const o=n.indexToLoc(e[r]),a=r*s.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(s,t){if(t==null)return s.shape.slice();if(Fe(s.shape,t))return t;if(s.shape.length===t.length){const e=[];for(let n=0;n<s.shape.length;n++)t[n]==null&&s.shape[n]!=null?e.push(s.shape[n]):e.push(t[n]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(s,t,e,n){const i=z(s,"x","dropout");if(P(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof _n?i.clone():i;const r=O6(i,e),o=1-t,a=ae(Fg($t(Og(r,0,1,"float32",n),o)),o);return K(i,a)}const B6=tt({dropout_:z6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function tM(s,t,e){const n=1-s%2,i=new Float32Array(s);for(let r=0;r<s;++r){const o=2*Math.PI*r/(s+n-1);i[r]=t-e*Math.cos(o)}return Ps(i,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(s,t,e,n,i,r="NHWC",o){let a=s;s.rank===3&&(a=et(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=et(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),P(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),P(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];P(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),P(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),Es("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:e};return J.runKernel(_y,h,d)}const Ov=tt({conv2DBackpropFilter_:V6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zv(s,t,e){if(e==null||e==="linear")return s;if(e==="relu")return K(s,$d(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Bv(s,t){let e=t;const n=Dn(s.shape,t.shape);return n.length>0&&(e=ne(e,n)),et(e,s.shape)}function Uv(s,t,e,n){if(t==="linear")return s;if(t==="relu")return go(s);if(t==="elu")return $g(s);if(t==="relu6")return BE(s);if(t==="prelu")return Dv(s,e);if(t==="leakyrelu")return Iv(s,n);if(t==="sigmoid")return ru(s);throw new Error(`Unknown fused activation ${t}.`)}const Vv=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6({x:s,filter:t,strides:e,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Vv(J.state.gradientDepth,l)===!1){P(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=tl(s,t,e,n,i,r,o);return a!=null&&(S=$t(S,a)),Uv(S,l,c,u)}const h=z(s,"x","conv2d","float32"),d=z(t,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=et(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Es("fused conv2d",n,o);const g=i==="NHWC"?f.shape[3]:f.shape[1];P(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),P(us(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const m=Qn(f.shape,d.shape,e,r,n,o);let x;a!=null&&(x=z(a,"bias","fused conv2d"),[x]=bn(x,h),i==="NHWC"?me(m.outShape,x.shape):(P(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),P(x.shape.length===0||x.shape[0]===m.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let b;if(c!=null){const S=c.shape;if(P(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)P(S[0]===1||S[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${m.outChannels}).`);else if(S.length===3)try{me(S,m.outShape)}catch{const _=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(_)}b=z(c,"prelu weights","fused conv2d")}const v=(S,C)=>{P(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[_,T,I,A]=C,D=zv(S,I,l);P(Qa(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const k=wv(T.shape,D,_,e,n),M=Ov(T,D,_.shape,e,n),E=[k,M];if(A!=null){const N=Bv(A,D);E.push(N)}return E},y={x:f,filter:d,bias:x,preluActivationWeights:b},w={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?el((C,_,T)=>{let I=J.runKernel(Rp,y,w);return T([_,C,I]),p&&(I=et(I,[I.shape[1],I.shape[2],I.shape[3]])),{value:I,gradFunc:v}})(f,d):el((C,_,T,I)=>{let A=J.runKernel(Rp,y,w);return I([_,C,A,T]),p&&(A=et(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:v}})(f,d,x)}const G6=tt({fusedConv2d_:W6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(s,t,e,n,i,r=[1,1],o){let a=s;s.rank===3&&(a=et(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=et(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,filterShape:e};return J.runKernel(ky,c,u)}const q6=tt({depthwiseConv2dNativeBackpropFilter_:H6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(s,t,e,n,i,r=[1,1],o){let a=t,l=!1;t.rank===3&&(l=!0,a=et(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,inputShape:s},h=J.runKernel(Ay,c,u);return l?et(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const X6=tt({depthwiseConv2dNativeBackpropInput_:j6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6({a:s,b:t,transposeA:e=!1,transposeB:n=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Vv(J.state.gradientDepth,r)===!1){let A=Le(s,t,e,n);return i!=null&&(A=$t(A,i)),Uv(A,r,o,a)}let l=z(s,"a","fused matMul"),c=z(t,"b","fused matMul");[l,c]=bn(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),g=c.shape.slice(0,-2),m=mt(p),x=mt(g);P(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${n} must match.`);const v=me(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),y=e?et(l,[m,u,d]):et(l,[m,d,u]),w=n?et(c,[x,f,h]):et(c,[x,h,f]);let S;i!=null&&(S=z(i,"bias","fused matMul"),[S]=bn(S,l),me(v,S.shape));let C;o!=null&&(C=z(o,"prelu weights","fused matMul"));const _=(A,D)=>{const[k,M,E,N]=D,O=zv(et(A,E.shape),E,r);let L,$;if(!e&&!n?(L=Le(O,M,!1,!0),$=Le(k,O,!0,!1)):!e&&n?(L=Le(O,M,!1,!1),$=Le(O,k,!0,!1)):e&&!n?(L=Le(M,O,!1,!0),$=Le(k,O,!1,!1)):(L=Le(M,O,!0,!0),$=Le(O,k,!0,!0)),i!=null){const W=Bv(N,O);return[L,$,W]}else return[L,$]},T={a:y,b:w,bias:S,preluActivationWeights:C},I={transposeA:e,transposeB:n,activation:r,leakyreluAlpha:a};return i==null?el((D,k,M)=>{const E=J.runKernel(Np,T,I);return M([D,k,E]),{value:et(E,v),gradFunc:_}})(y,w):el((D,k,M,E)=>{const N=J.runKernel(Np,T,I);return E([D,k,N,M]),{value:et(N,v),gradFunc:_}})(y,w,S)}const cC=tt({fusedMatMul_:K6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(s){return tM(s,.54,.46)}const bpt=tt({hammingWindow_:Y6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(s){return tM(s,.5,.5)}const J6=tt({hannWindow_:Z6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(s,t,e,n=!1,i=0){let r=0;const o=[];for(;r+t<=s.size;)o.push(Ge(s,r,t)),r+=e;if(n)for(;r<s.size;){const a=r+t-s.size,l=as([Ge(s,r,t-a),Nd([a],i)]);o.push(l),r+=e}return o.length===0?gp([],[0,t]):et(as(o),[o.length,t])}const tq=tt({frame_:Q6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eq(s,t,e,n,i=J6){n==null&&(n=U6(t));const r=tq(s,t,e),o=K(r,i(t));return KE(o,n)}const ypt=tt({stft_:eq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq(s,t,e,n,i="bilinear",r=0){const o=z(s,"image","cropAndResize"),a=z(t,"boxes","cropAndResize","float32"),l=z(e,"boxInd","cropAndResize","int32"),c=a.shape[0];P(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),P(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),P(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:n};return J.runKernel(Iy,u,h)}const sq=tt({cropAndResize_:nq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(s){const t=z(s,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return J.runKernel($y,e,{})}const rq=tt({flipLeftRight_:iq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(s){const t=z(s,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const i=new Array(t.rank);return i.fill(1,0,e),i[e]=3,Ki(t,i)}const aq=tt({grayscaleToRGB_:oq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(s,t,e=0,n=.5){const i=z(s,"image","rotateWithOffset","float32");P(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:t,fillValue:e,center:n};return J.runKernel(rv,r,o)}const cq=tt({rotateWithOffset_:lq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(s,t,e,n,i,r){n==null&&(n=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=s.shape[0];return e=Math.min(e,o),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),P(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),P(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=z(s,"boxes","nonMaxSuppression","float32"),o=z(t,"scores","nonMaxSuppression","float32"),a=au(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:n,scoreThreshold:i};return J.runKernel(By,{boxes:r,scores:o},l)}const hq=tt({nonMaxSuppression_:uq});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dq(s,t,e){const n=fq(s,t,e),i=n<0?-(n+1):n;s.splice(i,0,t)}function fq(s,t,e){return mq(s,t,e||pq)}function pq(s,t){return s>t?1:s<t?-1:0}function mq(s,t,e){let n=0,i=s.length,r=0,o=!1;for(;n<i;){r=n+(i-n>>>1);const a=e(t,s[r]);a>0?n=r+1:(i=r,o=!a)}return o?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wv(s,t,e,n,i){return qv(s,t,e,n,i,0)}function Gv(s,t,e,n,i,r){return qv(s,t,e,n,i,0,!1,r,!0)}function Hv(s,t,e,n,i,r){return qv(s,t,e,n,i,r,!0)}function qv(s,t,e,n,i,r,o=!1,a=!1,l=!1){const c=[];for(let m=0;m<t.length;m++)t[m]>i&&c.push({score:t[m],boxIndex:m,suppressBeginIndex:0});c.sort(uC);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<e&&c.length>0;){const m=c.pop(),{score:x,boxIndex:b,suppressBeginIndex:v}=m;if(x<i)break;let y=!1;for(let w=h.length-1;w>=v;--w){const S=gq(s,b,h[w]);if(S>=n){y=!0;break}if(m.score=m.score*xq(n,u,S),m.score<=i)break}m.suppressBeginIndex=h.length,y||(m.score===x?(h.push(b),d.push(m.score)):m.score>i&&dq(c,m,uC))}const f=h.length,p=e-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=f),g}function gq(s,t,e){const n=s.subarray(t*4,t*4+4),i=s.subarray(e*4,e*4+4),r=Math.min(n[0],n[2]),o=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(a-r)*(l-o),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const g=Math.max(r,c),m=Math.max(o,u),x=Math.min(a,h),b=Math.min(l,d),v=Math.max(x-g,0)*Math.max(b-m,0);return v/(f+p-v)}function xq(s,t,e){const n=Math.exp(t*e*e);return e<=s?n:0}function uC(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=z(s,"boxes","nonMaxSuppressionAsync"),o=z(t,"scores","nonMaxSuppressionAsync"),a=au(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=Wv(c,u,e,n,i);return r!==s&&r.dispose(),o!==t&&o.dispose(),Ps(h,"int32")}const yq=bq;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=z(s,"boxes","nonMaxSuppression"),a=z(t,"scores","nonMaxSuppression"),l=au(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r},h=J.runKernel(Vy,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const wq=tt({nonMaxSuppressionWithScore_:vq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _q(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=z(s,"boxes","nonMaxSuppressionAsync"),a=z(t,"scores","nonMaxSuppressionAsync"),l=au(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=Hv(u,h,e,n,i,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Ps(d,"int32"),selectedScores:Ps(f)}}const Sq=_q;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=z(s,"boxes","nonMaxSuppression"),a=z(t,"scores","nonMaxSuppression"),l=au(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},p=J.runKernel(Uy,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const Tq=tt({nonMaxSuppressionPadded_:Cq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Iq(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=z(s,"boxes","nonMaxSuppressionAsync"),a=z(t,"scores","nonMaxSuppressionAsync"),l=au(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:g}=Gv(d,f,c,u,h,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Ps(p,"int32"),validOutputs:de(g,"int32")}}const Eq=Iq;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mq(s,t,e=!1,n=!1){const i=z(s,"images","resizeBilinear");P(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=et(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=J.runKernel(xg,a,l);return o?et(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const eM=tt({resizeBilinear_:Mq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(s,t,e=!1,n=!1){const i=z(s,"images","resizeNearestNeighbor");P(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=et(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=J.runKernel(gg,a,l);return o?et(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const nM=tt({resizeNearestNeighbor_:kq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(s,t="binary",e=!1,n=.5){const i=z(s,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let c=K(Ps([n]),255),u,h,d,f;if(P(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),P(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),P(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),i.shape[2]===3){[u,h,d]=ti(i,[1,1,1],-1);const m=K(u,r),x=K(h,o),b=K(d,a);f=$t($t(m,x),b)}else f=s;if(t==="otsu"){const m=BG(Ht(UE(f),"int32"),Oo([]),256);c=Nq(m,l)}const p=e?ou(f,c):oi(f,c);return Ht(K(p,255),"int32")}function Nq(s,t){let e=Ps([-1]),n=Ps([0]),i=Ps([0]),r,o,a,l,c,u;for(let h=0;h<s.size-1;h++){r=Ge(s,0,h+1),o=Ge(s,h+1),c=ae(ne(r),t),u=ae(ne(o),t);const d=ne(K(r,Up(0,r.size)));a=ae(d,ne(r));const f=Nd(o.shape,r.size),p=$t(Up(0,o.size),f),g=K(o,p);l=ae(ne(g),ne(o));const m=se(a,l),x=se(a,l),b=K(c,u);i=K(K(b,m),x);const v=oi(i,n);n=Vs(v,i,n),e=Vs(v,Ps([h]),e)}return e}const Rq=tt({threshold_:Aq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(s,t,e="nearest",n="constant",i=0,r){const o=z(s,"image","transform","float32"),a=z(t,"transforms","transform","float32");P(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),P(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},c={interpolation:e,fillMode:n,fillValue:i,outputShape:r};return J.runKernel(sv,l,c)}const $q=tt({transform_:Dq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lq(s,t,e){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const n=z(s,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const i=n.shape,[r,o]=n.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(e<=o))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`);t<0&&(t=r),e<0&&(e=o);const a=et(Up(0,r,1,"int32"),[-1,1]),l=Up(0,o,1,"int32"),c=se(a,l),u=lo(ou(c,de(+t,"int32")),bl(c,de(-e,"int32"))),h=On([r,o],n.dtype);return et(sl(Pc(et(n,[-1,r,o])).map(d=>Vs(u,d,h))),i)}const Fq=tt({bandPart_:Lq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pq(s){let t;if(Array.isArray(s)){t=!1,P(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=s[0].shape[0];for(let r=1;r<s.length;++r)P(s[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${i})`)}else t=!0,s=ti(s,s.shape[0],0).map(i=>Dd(i,[0]));P(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const e=[],n=s;for(let i=0;i<s.length;++i)e.push(J.tidy(()=>{let r=n[i];if(i>0)for(let o=0;o<i;++o){const a=K(ne(K(e[o],r)),e[o]);r=se(r,a)}return ae(r,Lg(r,"euclidean"))}));return t?sl(e,0):e}const Oq=tt({gramSchmidt_:Pq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(s,t=!1){if(P(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return hC(s,t);{const e=s.shape.slice(0,s.shape.length-2).reduce((l,c)=>l*c),n=Pc(et(s,[e,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),i=[],r=[];n.forEach(l=>{const[c,u]=hC(l,t);i.push(c),r.push(u)});const o=et(sl(i,0),s.shape),a=et(sl(r,0),s.shape);return[o,a]}}function hC(s,t=!1){return J.tidy(()=>{P(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const e=s.shape[0],n=s.shape[1];let i=EE(e),r=La(s);const o=gp([[1]],[1,1]);let a=La(o);const l=e>=n?n:e;for(let c=0;c<l;++c){const u=r,h=a,d=i;[a,r,i]=J.tidy(()=>{const f=Ge(r,[c,c],[e-c,1]),p=Lg(f),g=Ge(r,[c,c],[1,1]),m=Vs(oi(g,0),gp([[-1]]),gp([[1]])),x=se(g,K(m,p)),b=ae(f,x);b.shape[0]===1?a=La(o):a=as([o,Ge(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const v=cn(ae(Le(m,x),p)),y=Ge(r,[c,0],[e-c,n]),w=K(v,a),S=Ne(a);if(c===0)r=se(y,Le(w,Le(S,y)));else{const T=se(y,Le(w,Le(S,y)));r=as([Ge(r,[0,0],[c,n]),T],0)}const C=Ne(w),_=Ge(i,[0,c],[e,i.shape[1]-c]);if(c===0)i=se(_,Le(Le(_,a),C));else{const T=se(_,Le(Le(_,a),C));i=as([Ge(i,[0,0],[e,c]),T],1)}return[a,r,i]}),ye([u,h,d])}return!t&&e>n&&(i=Ge(i,[0,0],[e,n]),r=Ge(r,[0,0],[n,n])),[i,r]})}const Bq=tt({qr_:zq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ts;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ts||(Ts={}));function Uq(s,t,e=Ts.SUM_BY_NONZERO_WEIGHTS){const n=z(s,"losses","computeWeightedLoss");let i=null;t!=null&&(i=z(t,"weights","computeWeightedLoss"));const r=i==null?n:K(n,i);if(e===Ts.NONE)return r;if(e===Ts.SUM)return ne(r);if(e===Ts.MEAN){if(i==null)return xn(r);{const o=n.size/i.size,a=ae(ne(r),ne(i));return o>1?ae(a,de(o)):a}}if(e===Ts.SUM_BY_NONZERO_WEIGHTS){if(i==null)return ae(ne(r),de(n.size));{const o=K(i,ta(n.shape)),a=Ht(ne(mh(o,de(0))),"float32");return ae(ne(r),a)}}throw Error(`Unknown reduction: ${e}`)}const ea=tt({computeWeightedLoss_:Uq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vq(s,t,e,n=Ts.SUM_BY_NONZERO_WEIGHTS){const i=z(s,"labels","absoluteDifference"),r=z(t,"predictions","absoluteDifference");let o=null;e!=null&&(o=z(e,"weights","absoluteDifference")),Ri(i.shape,r.shape,"Error in absoluteDifference: ");const a=Fn(se(i,r));return ea(a,o,n)}const vpt=tt({absoluteDifference_:Vq});function Wq(s,t,e,n,i=Ts.SUM_BY_NONZERO_WEIGHTS){const r=z(s,"labels","cosineDistance"),o=z(t,"predictions","cosineDistance");let a=null;n!=null&&(a=z(n,"weights","cosineDistance")),Ri(r.shape,o.shape,"Error in cosineDistance: ");const l=de(1),c=se(l,ne(K(r,o),e,!0));return ea(c,a,i)}const wpt=tt({cosineDistance_:Wq});function Gq(s,t,e,n=Ts.SUM_BY_NONZERO_WEIGHTS){let i=z(s,"labels","hingeLoss");const r=z(t,"predictions","hingeLoss");let o=null;e!=null&&(o=z(e,"weights","hingeLoss")),Ri(i.shape,r.shape,"Error in hingeLoss: ");const a=de(1);i=se(K(de(2),i),a);const l=go(se(a,K(i,r)));return ea(l,o,n)}const _pt=tt({hingeLoss_:Gq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hq(s,t,e,n=1,i=Ts.SUM_BY_NONZERO_WEIGHTS){const r=z(s,"labels","huberLoss"),o=z(t,"predictions","huberLoss");let a=null;e!=null&&(a=z(e,"weights","huberLoss")),Ri(r.shape,o.shape,"Error in huberLoss: ");const l=de(n),c=Fn(se(o,r)),u=Pg(c,l),h=se(c,u),d=$t(K(de(.5),Xe(u)),K(l,h));return ea(d,a,i)}const Spt=tt({huberLoss_:Hq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qq(s,t,e,n=1e-7,i=Ts.SUM_BY_NONZERO_WEIGHTS){const r=z(s,"labels","logLoss"),o=z(t,"predictions","logLoss");let a=null;e!=null&&(a=z(e,"weights","logLoss")),Ri(r.shape,o.shape,"Error in logLoss: ");const l=de(1),c=de(n),u=cn(K(r,Ei($t(o,c)))),h=K(se(l,r),Ei($t(se(l,o),c))),d=se(u,h);return ea(d,a,i)}const Cpt=tt({logLoss_:qq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jq(s,t,e,n=Ts.SUM_BY_NONZERO_WEIGHTS){const i=z(s,"labels","meanSquaredError"),r=z(t,"predictions","meanSquaredError");let o=null;e!=null&&(o=z(e,"weights","meanSquaredError")),Ri(i.shape,r.shape,"Error in meanSquaredError: ");const a=YE(i,r);return ea(a,o,n)}const Tpt=tt({meanSquaredError_:jq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xq(s,t){const e=z(s,"labels","sigmoidCrossEntropyWithLogits"),n=z(t,"logits","sigmoidCrossEntropyWithLogits");Ri(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=go(n),r=K(n,e),o=Ev(Ii(cn(Fn(n))));return $t(se(i,r),o)}function Kq(s,t,e,n=0,i=Ts.SUM_BY_NONZERO_WEIGHTS){let r=z(s,"multiClassLabels","sigmoidCrossEntropy");const o=z(t,"logits","sigmoidCrossEntropy");let a=null;if(e!=null&&(a=z(e,"weights","sigmoidCrossEntropy")),Ri(r.shape,o.shape,"Error in sigmoidCrossEntropy: "),n>0){const c=de(n),u=de(1),h=de(.5);r=$t(K(r,se(u,c)),K(h,c))}const l=Xq(r,o);return ea(l,a,i)}const Ipt=tt({sigmoidCrossEntropy_:Kq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(s,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return el((i,r,o)=>{const l=AE(r,[e],!0),c=se(Ht(r,"float32"),l);o([i,c]);const u=cn(K(c,i));return{value:ne(u,[e]),gradFunc:(f,p)=>{const[g,m]=p,x=yn(f.shape,[e]);return[K(et(f,x),se(Ht(g,"float32"),Ii(m))),K(et(f,x),se(Ii(m),Ht(g,"float32")))]}}})(s,t)}function Zq(s,t,e,n=0,i=Ts.SUM_BY_NONZERO_WEIGHTS){let r=z(s,"onehotLabels","softmaxCrossEntropy");const o=z(t,"logits","softmaxCrossEntropy");let a=null;if(e!=null&&(a=z(e,"weights","softmaxCrossEntropy")),Ri(r.shape,o.shape,"Error in softmaxCrossEntropy: "),n>0){const c=de(n),u=de(1),h=de(r.shape[1]);r=$t(K(r,se(u,c)),ae(c,h))}const l=Yq(r,o);return ea(l,a,i)}const Ept=tt({softmaxCrossEntropy_:Zq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(s,t,e,n){const i=z(s,"indices","sparseFillEmptyRows","int32"),r=z(t,"values","sparseFillEmptyRows"),o=z(e,"denseShape","sparseFillEmptyRows","int32"),a=z(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:i,values:r,denseShape:o,defaultValue:a},c=J.runKernel(jy,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const Mpt=tt({sparseFillEmptyRows_:Jq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(s,t,e){const n=z(s,"inputIndices","sparseReshape","int32"),i=z(t,"inputShape","sparseReshape","int32"),r=z(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const o={inputIndices:n,inputShape:i,newShape:r},a=J.runKernel(Xy,o);return{outputIndices:a[0],outputShape:a[1]}}const kpt=tt({sparseReshape_:Qq});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(s,t,e){const n=z(s,"data","sparseSegmentMean"),i=z(t,"indices","sparseSegmentMean","int32"),r=z(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return J.runKernel(Ky,o)}const Apt=tt({sparseSegmentMean_:t8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(s,t,e){const n=z(s,"data","sparseSegmentSum"),i=z(t,"indices","sparseSegmentSum","int32"),r=z(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return J.runKernel(Yy,o)}const Npt=tt({sparseSegmentSum_:e8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(s,t,e,n,i,r,o,a){const l=z(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=z(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:e,nGramWidths:n,leftPad:i,rightPad:r,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:c},d=J.runKernel(Qy,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const Rpt=tt({stringNGrams_:n8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(s,t,e=!0){const n=z(s,"input","stringSplit","string"),i=z(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:e},o={input:n,delimiter:i},a=J.runKernel(tv,o,r);return{indices:a[0],values:a[1],shape:a[2]}}const Dpt=tt({stringSplit_:s8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(s,t){const e=z(s,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:e};return J.runKernel(ev,i,n)}const $pt=tt({stringToHashBucketFast_:i8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uc={flipLeftRight:rq,grayscaleToRGB:aq,resizeNearestNeighbor:nM,resizeBilinear:eM,rotateWithOffset:cq,cropAndResize:sq,nonMaxSuppression:hq,nonMaxSuppressionAsync:yq,nonMaxSuppressionWithScore:wq,nonMaxSuppressionWithScoreAsync:Sq,nonMaxSuppressionPadded:Tq,nonMaxSuppressionPaddedAsync:Eq,threshold:Rq,transform:$q},r8={bandPart:Fq,gramSchmidt:Oq,qr:Bq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class na extends iu{minimize(t,e=!1,n){const{value:i,grads:r}=this.computeGradients(t,n);if(n!=null){const o=n.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return ye(r),e?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return o5(t,e)}dispose(){this.iterations_!=null&&ye(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:de(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(na,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jv extends na{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=J.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accum_grad`,variable:ut(()=>Re(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${n}/accum_var`,variable:ut(()=>Re(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;ut(()=>{const u=$t(K(l,this.rho),K(Xe(a),1-this.rho)),h=K(ae(gs($t(c,this.epsilon)),gs($t(l,this.epsilon))),a),d=$t(K(c,this.rho),K(Xe(h),1-this.rho));l.assign(u),c.assign(d);const f=$t(K(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ye(this.accumulatedGrads.map(t=>t.variable)),ye(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}jv.className="Adadelta";At(jv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xv extends na{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accumulator`,variable:ut(()=>Nd(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[i].tensor:t[n];if(o==null)return;const a=this.accumulatedGrads[i].variable;ut(()=>{const l=$t(a,Xe(o));a.assign(l);const c=$t(K(ae(o,gs($t(l,J.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ye(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Xv.className="Adagrad";At(Xv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kv extends na{constructor(t,e,n,i=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ut(()=>{this.accBeta1=de(e).variable(),this.accBeta2=de(n).variable()}),i==null&&(this.epsilon=J.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);ut(()=>{const n=se(1,this.accBeta1),i=se(1,this.accBeta2);e.forEach((r,o)=>{const a=J.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:ut(()=>Re(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:ut(()=>Re(a).variable(l))});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=$t(K(u,this.beta1),K(c,1-this.beta1)),f=$t(K(h,this.beta2),K(Xe(c),1-this.beta2)),p=ae(d,n),g=ae(f,i);u.assign(d),h.assign(f);const m=$t(K(ae(p,$t(gs(g),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(K(this.accBeta1,this.beta1)),this.accBeta2.assign(K(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ye(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&ye(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),ut(()=>{this.accBeta1.assign(Fc(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fc(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Kv.className="Adam";At(Kv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yv extends na{constructor(t,e,n,i=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ut(()=>{this.iteration=de(0).variable(),this.accBeta1=de(e).variable()}),i==null&&(this.epsilon=J.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);ut(()=>{const n=se(1,this.accBeta1),i=ae(-this.learningRate,$t(K(this.iteration,this.decay),1));e.forEach((r,o)=>{const a=J.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:Re(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:Re(a).variable(l)});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=$t(K(u,this.beta1),K(c,1-this.beta1)),f=K(h,this.beta2),p=Fn(c),g=Qo(f,p);u.assign(d),h.assign(g);const m=$t(K(ae(i,n),ae(d,$t(g,this.epsilon))),a);a.assign(m)}),this.iteration.assign($t(this.iteration,1)),this.accBeta1.assign(K(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ye(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&ye(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Yv.className="Adamax";At(Yv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zg extends na{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Array.isArray(t)?t[i].tensor:t[n];if(r==null)return;const o=J.registeredVariables[n];ut(()=>{const a=$t(K(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=$r(de(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}zg.className="SGD";At(zg);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv extends zg{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=de(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${n}/momentum`,variable:ut(()=>Re(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(t)?t[i].tensor:t[n];a!=null&&ut(()=>{let l;const c=$t(K(this.m,o),a);this.useNesterov?l=$t(K(this.c,$t(a,K(c,this.m))),r):l=$t(K(this.c,c),r),o.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ye(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Zv.className="Momentum";At(Zv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jv extends na{constructor(t,e=.9,n=0,i=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=J.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=J.registeredVariables[n],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${n}/rms`,variable:ut(()=>Re(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${n}/momentum`,variable:ut(()=>Re(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${n}/mg`,variable:ut(()=>Re(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,c=this.accumulatedMoments[i].variable;ut(()=>{const u=$t(K(l,this.decay),K(Xe(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=$t(K(h,this.decay),K(a,1-this.decay)),f=ae(K(a,this.learningRate),gs(se(u,$t(Xe(d),this.epsilon)))),p=$t(K(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const g=se(r,p);r.assign(g)}else{const h=$t(K(l,this.decay),K(Xe(a),1-this.decay)),d=$t(K(c,this.momentum),ae(K(a,this.learningRate),gs($t(h,this.epsilon))));l.assign(h),c.assign(d);const f=se(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ye(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ye(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&ye(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Jv.className="RMSProp";At(Jv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ma{static sgd(t){return new zg(t)}static momentum(t,e,n=!1){return new Zv(t,e,n)}static rmsprop(t,e=.9,n=0,i=null,r=!1){return new Jv(t,e,n,i,r)}static adam(t=.001,e=.9,n=.999,i=null){return new Kv(t,e,n,i)}static adadelta(t=.001,e=.95,n=null){return new jv(t,e,n)}static adamax(t=.002,e=.9,n=.999,i=null,r=0){return new Yv(t,e,n,i,r)}static adagrad(t,e=.1){return new Xv(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kl={sgd:ma.sgd,momentum:ma.momentum,adadelta:ma.adadelta,adagrad:ma.adagrad,rmsprop:ma.rmsprop,adamax:ma.adamax,adam:ma.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s())();function sM(){return new Promise(s=>o8(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qv(s,t){const e=s[0].length;s.forEach((i,r)=>{P(i.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),P(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const n=s[0];s.forEach((i,r)=>{for(let o=0;o<e;o++)P(o===t||i[o]===n[o],()=>`Error in concat${e}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function Er(s,t){const e=s[0].slice();for(let n=1;n<s.length;n++)e[t]+=s[n][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gi;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(Gi||(Gi={}));function iM(s,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<s+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(s+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${s+e.length}, but shape.rank = ${n.length}`);for(let i=1;i<e.length;++i){const r=e[i],o=n[n.length-e.length+i],a=n[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+s}] = ${r} but shape[${i+s}] = ${a}`)}else n[o]=r}return n}function rM(s){const t={FIRST_DIM_SIZE:Gi.FIRST_DIM_SIZE,VALUE_ROWIDS:Gi.VALUE_ROWIDS,ROW_LENGTHS:Gi.ROW_LENGTHS,ROW_SPLITS:Gi.ROW_SPLITS,ROW_LIMITS:Gi.ROW_LIMITS,ROW_STARTS:Gi.ROW_STARTS},e=[];for(const n of s)if(n in t)e.push(t[n]);else break;return e}function oM(s){return s.length===0?0:s[0]===Gi.FIRST_DIM_SIZE?s.length-1:s.length}function aM(s,t){if(s==null||t==null)return;const e=s.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let i=0;i<Math.min(e,n-1);++i){const r=s[i],o=t[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-s.length}] = ${r} but ragged tensor input.flatValues.shape[${i-s.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tw=30;function Bg(s){return s<=tw?s:sb(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ew(s,t,e){const n=e*(typeof s=="number"?s:s[0]),i=t*(typeof s=="number"?s:s[1]);return[n,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ld(s,t,e,n=!0){let i=[];if(n)i=i.concat(t.slice(0)),i.push(s[0]/e),i=i.concat(s.slice(1));else{i=i.concat(s[0]);const r=t.length;for(let o=0;o<r;++o)i=i.concat([s[o+1]/t[o],t[o]]);i=i.concat(s.slice(r+1))}return i}function Fd(s,t,e=!0){const n=[];if(e){n.push(t);for(let i=t+1;i<s;++i)i<=2*t?(n.push(i),n.push(i-(t+1))):n.push(i)}else{const i=[],r=[];for(let o=1;o<s;++o)o>=t*2+1||o%2===1?r.push(o):i.push(o);n.push(...i),n.push(0),n.push(...r)}return n}function Pd(s,t,e,n=!0){const i=[];n?i.push(s[0]/e):i.push(s[0]*e);for(let r=1;r<s.length;++r)r<=t.length?n?i.push(t[r-1]*s[r]):i.push(s[r]/t[r-1]):i.push(s[r]);return i}function nw(s,t){const e=[0];for(let n=0;n<t;++n)e.push(s[n][0]);return e}function sw(s,t,e){const n=s.slice(0,1);for(let i=0;i<e;++i)n.push(s[i+1]-t[i][0]-t[i][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ug=1.7580993408473768,Vg=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iw=.3275911,rw=.254829592,ow=-.284496736,aw=1.421413741,lw=-1.453152027,cw=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const e=new Float32Array(s.length*2);for(let n=0;n<e.length;n+=2)e[n]=s[n/2],e[n+1]=t[n/2];return e}function lM(s){const t=new Float32Array(s.length/2),e=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)t[n/2]=s[n],e[n/2]=s[n+1];return{real:t,imag:e}}function cM(s){const t=Math.ceil(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=0;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function uM(s){const t=Math.floor(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=2;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function uw(s,t){const e=s[t*2],n=s[t*2+1];return{real:e,imag:n}}function hM(s,t,e,n){s[n*2]=t,s[n*2+1]=e}function dM(s,t){const e=new Float32Array(s/2),n=new Float32Array(s/2);for(let i=0;i<Math.ceil(s/2);i++){const r=(t?2:-2)*Math.PI*(i/s);e[i]=Math.cos(r),n[i]=Math.sin(r)}return{real:e,imag:n}}function fM(s,t,e){const n=(e?2:-2)*Math.PI*(s/t),i=Math.cos(n),r=Math.sin(n);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bx="->",a8=/->/g,dC=",",fC="...";function hw(s,t){s=s.replace(/\s/g,"");const e=(s.length-s.replace(a8,"").length)/bx.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${bx}").`);const[n,i]=s.split(bx);P(n.indexOf(fC)===-1,()=>`The ellipsis notation ("${fC}") is not supported yet.`);const r=n.split(dC),o=r.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const f=i[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<n.length;++d){const f=n[d];a.indexOf(f)===-1&&f!==dC&&a.push(f)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const c=a.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function dw(s,t){let e=new Array(s);e.fill(-1);for(let i=0;i<t.length;++i)e[t[i]]=i;const n=[];for(let i=0;i<s;++i)e[i]===-1&&n.push(i);return e=e.filter(i=>i!==-1),{permutationIndices:e,expandDims:n}}function fw(s,t,e){const n=new Array(s);for(let i=0;i<e.length;++i){const r=e[i].shape;for(let o=0;o<t[i].length;++o)n[t[i][o]]===void 0?n[t[i][o]]=r[o]:P(n[t[i][o]]===r[o],()=>`Expected dimension ${n[t[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function pw(s,t){const e=s,n=[];let i=0;s.length===0&&e.push(-1),i=s.length+1;for(let o=0;o<i;++o)n.push([]);const r=[];for(let o=0;o<e.length;++o){const a=e[o],l=l8(t,a);for(const c of l)r.indexOf(c)===-1&&(n[o].push(c),r.push(c))}return{path:e,steps:n}}function mw(s){return s.every((t,e)=>t===e)}function l8(s,t){const e=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function gw(s,t,e=0){let n=[];if(typeof t=="number")P(s.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(s.shape[e]/t);else{const i=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);P(i<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const o=t.reduce((a,l)=>l>0?a+l:a);t[r]=s.shape[e]-o}P(s.shape[e]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function mM(s,t){return`indices(${s}, 0) is invalid: ${t} < 0`}function gM(s,t,e){return`indices(${s}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(s,t){return`only one output dimension may be -1, not both ${s} and ${t}`}function bM(s,t){return`size ${s} must be non-negative, not ${t}`}function yM(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function vM(s,t){const e=mt(s),n=mt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${t}`}function wM(s,t){const e=mt(s),n=mt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(){return"segment ids must be >= 0"}function _M(){return"segment ids are not increasing"}function SM(s,t){return`Segment id ${s} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function CM(s,t,e){return`Bad: indices[${s}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(s,t){let e=!1,n;for(s<=tw?(n=s,e=!0):n=sb(s,Math.floor(Math.sqrt(s)));!e;)n>t||n===s?e=!0:n=sb(s,n+1);return n}function IM(s,t,e){const n=[],i=s.length;for(let r=0;r<i;r++)r!==t?n.push(s[r]):n.push(e);return n}function xw(s,t,e,n){const i=t.shape.length,r=s.shape.length;if(n!==0&&(n<-i||n>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${n}`);if(n<0&&(n+=i),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let h=0;h<n;++h)if(s.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${s.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=s.shape[e],a=[];let l=1,c=1,u=1;for(let h=0;h<n;++h)a.push(s.shape[h]),l*=s.shape[h];for(let h=n;h<e;h++)a.push(s.shape[h]),c*=s.shape[h];for(let h=n;h<i;h++)a.push(t.shape[h]);for(let h=e+1;h<r;h++)a.push(s.shape[h]),u*=s.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const c8=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:TM,computeOutShape:IM,collectGatherOpShapeInfo:xw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(s){try{return s.map(t=>Vo(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function EM(s){return s.map(t=>Po(t))}const u8=Object.freeze(Object.defineProperty({__proto__:null,slice_util:jW,segment_util:c8,fromUint8ToStringArray:il,fromStringArrayToUint8:EM,upcastType:Bs,axesAreInnerMostDims:Cv,combineLocations:TE,computeOutAndReduceShapes:Vn,expandShapeToKeepDim:yn,assertAxesAreInnerMostDims:ts,getAxesPermutation:un,getUndoAxesPermutation:Jo,getInnerMostAxes:vn,getBroadcastDims:Lc,getReductionAxes:Dn,assertAndGetBroadcastShape:me,assertParamsConsistent:Qv,computeOutShape:Er,computeDilation2DInfo:Ad,computePool2DInfo:Di,computePool3DInfo:po,computeConv2DInfo:Qn,computeConv3DInfo:Zo,computeDefaultPad:xv,tupleValuesAreOne:Qa,eitherStridesOrDilationsAreOne:us,convertConv2DDataFormat:mo,checkPadOnDimRoundingMode:Es,getFusedDyActivation:zv,getFusedBiasGradient:Bv,applyActivation:Uv,shouldFuse:Vv,get RowPartitionType(){return Gi},combineRaggedTensorToTensorShapes:iM,getRowPartitionTypesHelper:rM,getRaggedRank:oM,validateDefaultValueShape:aM,PARALLELIZE_THRESHOLD:tw,computeOptimalWindowSize:Bg,getImageCenter:ew,getReshaped:Ld,getPermuted:Fd,getReshapedPermuted:Pd,getSliceBeginCoords:nw,getSliceSize:sw,prepareAndValidate:hv,validateUpdateShape:cE,validateInput:VW,calculateShapes:kd,SELU_SCALEALPHA:Ug,SELU_SCALE:Vg,ERF_P:iw,ERF_A1:rw,ERF_A2:ow,ERF_A3:aw,ERF_A4:lw,ERF_A5:cw,warn:Ys,log:gV,mergeRealAndImagArrays:co,splitRealAndImagArrays:lM,complexWithEvenIndex:cM,complexWithOddIndex:uM,getComplexWithIndex:uw,assignToTypedArray:hM,exponents:dM,exponent:fM,decodeEinsumEquation:hw,getEinsumPermutation:dw,checkEinsumDimSizes:fw,getEinsumComputePath:pw,isIdentityPermutation:mw,prepareSplitSize:gw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:pM,getSparseFillEmptyRowsNegativeIndexErrorMessage:mM,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:gM,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:xM,getSparseReshapeNegativeOutputDimErrorMessage:bM,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:yM,getSparseReshapeInputOutputMultipleErrorMessage:vM,getSparseReshapeInputOutputMismatchErrorMessage:wM,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Sb,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:_M,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:SM,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:CM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM={kernelName:Mm,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,$d(Ht(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8={kernelName:$h,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=Xe(Ht(e,"float32")),i=gs(se(de(1),n));return cn(ae(s,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8={kernelName:Lh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=gs(se(Xe(Ht(e,"float32")),1));return ae(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8={kernelName:su,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{let a=s;const l=Dn(e.shape,i);return l.length>0&&(a=ne(a,l)),et(a,e.shape)},b:()=>{let a=s;const l=Dn(n.shape,i);return l.length>0&&(a=ne(a,l)),et(a,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8={kernelName:my,saveAllInputs:!0,gradFunc:(s,t)=>{const e={};return t.forEach((n,i)=>{e[i]=()=>s.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8={kernelName:km,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Re(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8={kernelName:Am,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Re(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8={kernelName:Fh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,gs(se(de(1),Xe(Ht(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8={kernelName:Ph,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=gs($t(de(1),Xe(Ht(e,"float32"))));return ae(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8={kernelName:Bh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{const a=$t(Xe(e),Xe(n));let l=K(s,ae(n,a));const c=Dn(e.shape,i);return c.length>0&&(l=ne(l,c)),et(l,e.shape)},b:()=>{const a=$t(Xe(e),Xe(n));let l=cn(K(s,ae(e,a)));const c=Dn(n.shape,i);return c.length>0&&(l=ne(l,c)),et(l,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8={kernelName:Oh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,$t(Xe(Ht(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8={kernelName:zh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,se(de(1),Xe(Ht(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _8(s,t,e,n,i,r){const o=z(s,"dy","avgPool3dGrad"),a=z(t,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=et(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=et(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Es("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:e,strides:n,pad:i,dimRoundingMode:r},f=J.runKernel(yy,h,d);return u?et(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const S8=tt({avgPool3dGrad_:_8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8={kernelName:Rm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:a}=e;return{x:()=>S8(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(s,t,e,n,i){const r=z(s,"dy","avgPoolGrad"),o=z(t,"input","avgPoolGrad");P(o.rank===r.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${r.rank})`);let a=o,l=r,c=!1;o.rank===3&&(c=!0,a=et(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=et(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),P(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:e,strides:n,pad:i},d=J.runKernel(by,u,h);return c?et(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const I8=tt({avgPoolGrad_:T8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8={kernelName:Nm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o}=e;return{x:()=>I8(s,n,i,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8={kernelName:Dm,inputsToSave:["a","b"],gradFunc:(s,t,e)=>{const[n,i]=t,{transposeA:r,transposeB:o}=e;return!r&&!o?{a:()=>Le(s,i,!1,!0),b:()=>Le(n,s,!0,!1)}:!r&&o?{a:()=>Le(s,i,!1,!1),b:()=>Le(s,n,!0,!1)}:r&&!o?{a:()=>Le(i,s,!1,!0),b:()=>Le(n,s,!1,!1)}:{a:()=>Le(i,s,!0,!0),b:()=>Le(s,n,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8={kernelName:$m,gradFunc:(s,t,e)=>{const{blockShape:n,crops:i}=e;return{x:()=>Rv(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8={kernelName:fV,gradFunc:(s,t,e)=>{const n=e,i=n.inputShape,r=n.shape,o=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])o[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>ne(s,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8={kernelName:Uh,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8={kernelName:Vh,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8={kernelName:Wh,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{clipValueMin:i,clipValueMax:r}=e;return{x:()=>Vs(lo(bl(n,i),ou(n,r)),s,Re(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8={kernelName:Lm,inputsToSave:["x"],gradFunc:MM.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8={kernelName:Fm,saveAllInputs:!0,gradFunc:(s,t,e)=>{const n=t.map(l=>l.shape),{axis:i}=e,r=_e(i,t[0].shape)[0],o=n.map(l=>l[r]);return ti(s,o,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8={kernelName:Pm,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{dilations:r,strides:o,pad:a,dataFormat:l}=e;return P(Qa(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>wv(n.shape,s,i,o,a,l),filter:()=>Ov(n,s,i.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8={kernelName:Om,inputsToSave:["dy","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{strides:r,pad:o,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>tl(s,i,r,o,a,1,l),filter:()=>Ov(s,n,i.shape,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(s,t,e,n,i){let r=s;s.rank===4&&(r=et(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let o=t;o.rank===4&&(o=et(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),P(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),P(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),P(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),P(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:r,dy:o},l={strides:n,pad:i,filterShape:e};return J.runKernel(Sy,a,l)}const z8=tt({conv3DBackpropFilter_:O8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8={kernelName:zm,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r}=e;P(Qa(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);const[o,a]=t;return{x:()=>_E(o.shape,s,a,i,r),filter:()=>z8(o,s,a.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8={kernelName:Gh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(cn(HE(Ht(e,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8={kernelName:Hh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(qE(Ht(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8={kernelName:Bm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i,exclusive:r,reverse:o}=e;return{x:()=>{const a=un([i],n.rank);let l=CE(s,i,r,!o);return a!=null&&(l=Ne(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8={kernelName:Um,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r,dimRoundingMode:o}=e,a=n==null?[1,1]:n;P(Qa(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),P(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),P(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),P(us(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),Es("depthwiseConv2d",r,o),{x:()=>X6(l.shape,s,c,i,r,a,o),filter:()=>q6(l,s,c.shape,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8={kernelName:Vm,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,r={x:n,filter:i,dy:s},o={x:n,filter:i,dy:s};return{x:()=>J.runKernel(ib,r,e),filter:()=>J.runKernel(rb,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8={kernelName:jh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t,n={dy:s,y:e};return{x:()=>J.runKernel(Ny,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8={kernelName:Xh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=K(Ii(cn(Xe(e))),2/Math.sqrt(Math.PI));return{x:()=>K(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8={kernelName:Kh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8={kernelName:Gm,inputsToSave:["input"],gradFunc:(s,t)=>{const[e]=t;return{input:()=>et(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8={kernelName:Yh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,Ii(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8={kernelName:Zh,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8={kernelName:Jh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{const a=ae(s,Ht(n,"float32")),l=Dn(e.shape,i);return l.length>0?et(ne(a,l),e.shape):a},b:()=>{let a=K(s,Ht(e,"float32"));const l=Dn(n.shape,i);l.length>0&&(a=et(ne(a,l),n.shape));const c=Xe(n);return cn(ae(a,Ht(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8={kernelName:Hm,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,e)=>{const{varianceEpsilon:n}=e,[i,r,o,a]=t,l=a==null?de(1):a,c=Dn(r.shape,i.shape),u=[];if(r.rank===1){for(let y=0;y<i.shape.length-1;++y)u.push(i.shape[y]);u.push(1)}const h=se(i,r),d=K(s,l),f=VE($t(o,de(n))),p=K(K(K(f,f),f),de(-.5));return{x:()=>r.rank===1?et(K(K(s,Ki(et(f,[1,1,1,r.shape[0]]),u)),l),i.shape):et(K(K(s,f),l),i.shape),mean:()=>{let y=K(K(f,de(-1)),d);return r.rank===1&&(y=ne(y,c)),et(y,r.shape)},variance:()=>{let y=K(K(p,h),d);return r.rank===1&&(y=ne(y,c)),et(y,r.shape)},scale:()=>{const y=K(h,f);let w=K(s,y);return r.rank===1&&(w=ne(w,c)),et(w,r.shape)},offset:()=>{let y=s;return r.rank===1&&(y=ne(y,c)),et(y,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:qm,inputsToSave:["x","indices"],gradFunc:(s,t,e)=>{const[n,i]=t,{axis:r}=e,o=_e(r,n.shape)[0];return{x:()=>{const l=n.shape,c=i.size,u=l.slice(0,o),h=u.length,d=l.slice(r,l.length).slice(1),f=d.length,p=pC(0,h),g=pC(h+1,h+1+f),m=mC([u,[c],d]),x=et(s,m),b=et(i,[c]),v=mC([[h],p,g]),y=Ne(x,v);let w=JE(y,b,n.shape[o]);const S=Jo(v);return w=Ne(w,S),w},indices:()=>i}}};function pC(s,t){const e=[];for(let n=s;n<t;++n)e.push(n);return e}function mC(s){const t=[];for(let e=0;e<s.length;++e)for(let n=0;n<s[e].length;++n)t.push(s[e][n]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:Qh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>Re(e),b:()=>Re(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:td,gradFunc:s=>({x:()=>Ht(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:ed,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:nd,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:sd,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:Xm,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{alpha:i}=e,r=oi(n,0);return{x:()=>Vs(r,s,K(s,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:rd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,$t(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:id,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,Ht(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:pV,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;return{logits:()=>{const o=Ii(n);return se(s,K(ne(s,i,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uj(s,t,e,n=5,i=1,r=1,o=.5){const a={x:s,y:t,dy:e},l={depthRadius:n,bias:i,alpha:r,beta:o};return J.runKernel(Py,a,l)}const hj=tt({localResponseNormalizationBackprop_:uj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:tg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{depthRadius:r,bias:o,alpha:a,beta:l}=e;return{x:()=>hj(n,i,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(s,t,e,n){return t.rank<e.rank&&(t=et(t,yn(t.shape,n))),s.rank<e.rank&&(s=et(s,yn(s.shape,n))),{x:()=>K(s,Ht(Lr(e,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC={kernelName:eg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{reductionIndices:i}=n,r=t[0],o=t[1],a=_e(i,r.shape),l=kM(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:od,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>K(s,Ht(bl(e,n),"float32")),b:()=>K(s,Ht(ME(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pj(s,t,e,n,i,r,o){const a=z(s,"dy","maxPool3dGrad"),l=z(t,"input","maxPool3dGrad"),c=z(e,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=et(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=et(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=et(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),P(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Es("maxPool3dGrad",r,o);const p={dy:u,input:h,output:d},g={filterSize:n,strides:i,pad:r,dimRoundingMode:o},m=J.runKernel(zy,p,g);return f?et(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const mj=tt({maxPool3dGrad_:pj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:sg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=e;return{x:()=>mj(s,n,i,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(s,t,e,n,i,r,o){const a=z(s,"dy","maxPoolGrad"),l=z(t,"input","maxPoolGrad"),c=z(e,"output","maxPoolGrad");P(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),P(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),P(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Es("maxPoolGrad",r,o);const u={dy:a,input:l,output:c},h={filterSize:n,strides:i,pad:r,dimRoundingMode:o};return J.runKernel(Oy,u,h)}const bj=tt({maxPoolGrad_:xj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj={kernelName:ng,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>bj(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj={kernelName:ig,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e,r=_e(i,n.shape),a=Vn(n.shape,r)[1],l=mt(a);return{x:()=>{const u=n.shape.slice();r.forEach(f=>{u[f]=1});const h=et(s,u);return ae(K(h,ta(n.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj={kernelName:rg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{axis:i}=n,[r,o]=t,a=_e(i,r.shape),l=kM(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j={kernelName:ad,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>K(s,Ht(ou(e,n),"float32")),b:()=>K(s,Ht(oi(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj={kernelName:og,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>Ge(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj={kernelName:ld,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{const a=Dn(e.shape,i);return a.length>0?et(ne(s,a),e.shape):s},b:()=>{const a=K(s,cn(Fg(ae(e,n)))),l=Dn(n.shape,i);return l.length>0?et(ne(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tj={kernelName:cd,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{const a=K(s,Ht(n,"float32")),l=Dn(e.shape,i);return l.length>0?et(ne(a,l),e.shape):a},b:()=>{const a=K(s,Ht(e,"float32")),l=Dn(n.shape,i);return l.length>0?et(ne(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij={kernelName:ag,gradFunc:s=>({x:()=>cn(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ej={kernelName:ug,inputsToSave:["indices"],gradFunc:(s,t)=>{const e=t[0];return{indices:()=>On(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj={kernelName:cg,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj={kernelName:hg,saveAllInputs:!0,gradFunc:(s,t,e)=>{const{axis:n}=e;return Pc(s,n).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xC={kernelName:dg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>Ge(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aj={kernelName:ud,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[e,n,i]=t,r=e,o=n,a=me(r.shape,o.shape);return{a:()=>{const u=Ht(o,"float32");let h=K(s,K(u,Fc(r,se(u,de(1)))));const d=Dn(r.shape,a);return d.length>0&&(h=ne(h,d)),et(h,r.shape)},b:()=>{const u=oi(r,0),h=Vs(u,Ei(r),Re(r));let d=K(s,K(i,h));const f=Dn(o.shape,a);return f.length>0&&(d=ne(d,f)),et(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj={kernelName:fg,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[e,n]=t,i=oi(e,0);return{x:()=>Vs(i,s,K(s,n)),alpha:()=>{let r=Vs(i,Re(s),K(s,e));const o=Dn(n.shape,s.shape);return o.length>0&&(r=ne(r,o)),et(r,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(s,t,e){const n=s.shape.slice();n[e]=1;const i=et(t,n),r=vb(s,e,!0,!1),o=vb(s,e,!0,!0),a=K(r,o);return K(i,a)}function Dj(s,t,e){const n=s.shape.length,i=n-e.length,r=un(e,n);let o=s;r!=null&&(o=Ne(s,r));const a=o.shape.slice(),c=a.splice(n-e.length,e.length).reduce((d,f)=>d*f,1);a.push(c);const u=o.reshape(a);let h=Rj(u,t,i);if(h=h.reshape(o.shape),r!=null){const d=Jo(r);h=Ne(h,d)}return h}const $j={kernelName:pg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;let r=[];return i==null?r=n.shape.map((o,a)=>a):typeof i=="number"?r=[i]:r=i,{x:()=>Dj(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lj={kernelName:qh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{const a=ae(s,Ht(n,"float32")),l=Dn(e.shape,i);return l.length>0?et(ne(a,l),e.shape):a},b:()=>{let a=K(s,Ht(e,"float32"));const l=Dn(n.shape,i);l.length>0&&(a=et(ne(a,l),n.shape));const c=Xe(n);return cn(ae(a,Ht(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj={kernelName:hd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,cn(Xe(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj={kernelName:fd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=K(ou(e,6),$d(e));return{x:()=>K(s,Ht(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oj={kernelName:dd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,Ht($d(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj={kernelName:mg,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>et(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj={kernelName:xg,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>J.runKernel(qy,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uj={kernelName:gg,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>J.runKernel(Hy,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj={kernelName:bg,gradFunc:(s,t,e)=>{const{dims:n}=e,i=_e(n,s.shape);return{x:()=>nl(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj={kernelName:pd,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gj={kernelName:md,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>cn(ae(s,K(Fc(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj={kernelName:yg,inputsToSave:["condition"],gradFunc:(s,t)=>{const[e]=t;return{condition:()=>Ht(Re(e),"float32"),t:()=>K(s,Ht(e,s.dtype)),e:()=>K(s,Ht(Mv(e),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj={kernelName:gd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=oi(e,de(0)),i=de(Ug),r=de(Vg),o=K(s,r),a=K(K(s,i),Ii(Ht(e,"float32")));return Vs(n,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jj={kernelName:vd,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,K(e,se(de(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj={kernelName:yd,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj={kernelName:xd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(_v(Ht(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj={kernelName:bd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(SE(Ht(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zj={kernelName:vg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{begin:i,size:r}=e,o=n.shape,[a,l]=Rg(n,i,r),c=[];for(let u=0;u<s.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>Nv(s,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj={kernelName:Cg,outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{dim:i}=e,r=!0,o=K(s,n);return{logits:()=>se(o,K(ne(o,[i],r),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj={kernelName:wd,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,ru(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bC={kernelName:_g,gradFunc:(s,t,e)=>{const{blockShape:n,paddings:i}=e;return{x:()=>vv(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC={kernelName:Sg,gradFunc:(s,t,e)=>{const{axis:n}=e;return{x:()=>as(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX={kernelName:_d,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,K(gs(Ht(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eX={kernelName:Zy,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(s,K(Ht(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX={kernelName:Sd,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=de(2);return{a:()=>K(s,K(i,se(e,n))),b:()=>K(s,K(i,se(n,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX={kernelName:Md,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iX={kernelName:Cd,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=me(e.shape,n.shape);return{a:()=>{let a=s;const l=Dn(e.shape,i);return l.length>0&&(a=ne(a,l)),et(a,e.shape)},b:()=>{let a=s;const l=Dn(n.shape,i);return l.length>0&&(a=ne(a,l)),et(cn(a),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX={kernelName:wg,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,i=n.shape.slice(),{axis:r}=e;_e(r,n.shape).forEach(c=>{i[c]=1});const a=et(s,i),l=K(a,ta(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX={kernelName:Td,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>ae(s,Xe(_v(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aX={kernelName:Id,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>K(se(de(1),Xe(e)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lX={kernelName:Ed,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{reps:i}=e;return{x:()=>{let o=Re(n);if(n.rank===1)for(let a=0;a<i[0];++a)o=$t(o,Ge(s,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)o=$t(o,Ge(s,[a*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)o=$t(o,Ge(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)for(let u=0;u<i[3];++u)o=$t(o,Ge(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2],u*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cX={kernelName:bc,gradFunc:(s,t,e)=>{const n=e,{perm:i}=n,r=Jo(i);return{x:()=>Ne(s,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX={kernelName:Tg,gradFunc:(s,t,e)=>{const n=e,{axis:i}=n;return{value:()=>sl(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX={kernelName:Ig,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>dX(s,e)}}};function dX(s,t){const e=Qo(t,Re(t)),n=Tv(s,e);let i=bl(t,de(0,"int32"));const r=n.rank-i.rank;for(let a=0;a<r;++a)i=Rs(i,a+1);i=lo(i,ta(n.shape,"bool"));const o=Re(n);return Vs(i,n,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX={kernelName:Eg,gradFunc:s=>({x:()=>Re(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX=[MM,h8,d8,f8,p8,m8,g8,x8,b8,y8,v8,w8,C8,E8,M8,k8,A8,N8,R8,D8,$8,L8,P8,F8,B8,U8,V8,W8,G8,H8,Lj,q8,j8,X8,K8,Y8,J8,Z8,Q8,tj,ej,nj,sj,ij,rj,oj,aj,lj,cj,dj,gC,gC,fj,gj,yj,vj,wj,_j,Sj,Cj,Tj,Ij,Ej,Mj,kj,xC,xC,Aj,Nj,$j,Fj,Pj,Oj,zj,Bj,Uj,Vj,Wj,Gj,Hj,qj,jj,Xj,Kj,Yj,Zj,Jj,Qj,bC,bC,yC,yC,tX,nX,eX,sX,iX,rX,oX,aX,lX,cX,uX,hX,fX];for(const s of pX)xV(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.abs=function(){return this.throwIfDisposed(),Fn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.acos=function(){return this.throwIfDisposed(),tG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.acosh=function(){return this.throwIfDisposed(),nG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.add=function(s){return this.throwIfDisposed(),$t(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.all=function(s,t){return this.throwIfDisposed(),yE(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.any=function(s,t){return this.throwIfDisposed(),bb(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.argMax=function(s){return this.throwIfDisposed(),ph(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.argMin=function(s){return this.throwIfDisposed(),aG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),et(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asType=function(s){return this.throwIfDisposed(),Ht(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as1D=function(){return this.throwIfDisposed(),et(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as2D=function(s,t){return this.throwIfDisposed(),et(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as3D=function(s,t,e){return this.throwIfDisposed(),et(this,[s,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as4D=function(s,t,e,n){return this.throwIfDisposed(),et(this,[s,t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.as5D=function(s,t,e,n,i){return this.throwIfDisposed(),et(this,[s,t,e,n,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asin=function(){return this.throwIfDisposed(),cG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.asinh=function(){return this.throwIfDisposed(),hG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.atan=function(){return this.throwIfDisposed(),fG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.atan2=function(s){return this.throwIfDisposed(),mG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.atanh=function(){return this.throwIfDisposed(),xG(this)};pt().prototype.avgPool=function(s,t,e,n){return this.throwIfDisposed(),bv(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),vv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.batchNorm=function(s,t,e,n,i){return this.throwIfDisposed(),Dg(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.broadcastTo=function(s){return this.throwIfDisposed(),Yu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cast=function(s){return this.throwIfDisposed(),Ht(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.ceil=function(){return this.throwIfDisposed(),WG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),ei(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof _n&&(s=[s]),as([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.conv1d=function(s,t,e,n,i,r){return this.throwIfDisposed(),vE(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.conv2dTranspose=function(s,t,e,n,i){return this.throwIfDisposed(),wE(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.conv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),tl(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cos=function(){return this.throwIfDisposed(),_v(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cosh=function(){return this.throwIfDisposed(),SE(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cumprod=function(s,t,e){return this.throwIfDisposed(),vb(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.cumsum=function(s,t,e){return this.throwIfDisposed(),CE(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),pH(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.depthwiseConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),Sv(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.dilation2d=function(s,t,e,n,i){return this.throwIfDisposed(),xH(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.divNoNan=function(s){return this.throwIfDisposed(),_H(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.div=function(s){return this.throwIfDisposed(),ae(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.dot=function(s){return this.throwIfDisposed(),CH(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.elu=function(){return this.throwIfDisposed(),$g(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.equal=function(s){return this.throwIfDisposed(),Lr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.erf=function(){return this.throwIfDisposed(),EH(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.euclideanNorm=function(s,t){return this.throwIfDisposed(),FH(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.exp=function(){return this.throwIfDisposed(),Ii(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.expandDims=function(s){return this.throwIfDisposed(),Rs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.expm1=function(){return this.throwIfDisposed(),BH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.fft=function(){return this.throwIfDisposed(),XE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.flatten=function(){return this.throwIfDisposed(),et(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.floor=function(){return this.throwIfDisposed(),Fg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.floorDiv=function(s){return this.throwIfDisposed(),bE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.gather=function(s,t){return this.throwIfDisposed(),Tv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.greaterEqual=function(s){return this.throwIfDisposed(),bl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.greater=function(s){return this.throwIfDisposed(),oi(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.ifft=function(){return this.throwIfDisposed(),_b(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.irfft=function(){return this.throwIfDisposed(),y6(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.isFinite=function(){return this.throwIfDisposed(),XH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.isInf=function(){return this.throwIfDisposed(),YH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.isNaN=function(){return this.throwIfDisposed(),JH(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.leakyRelu=function(s){return this.throwIfDisposed(),Iv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.lessEqual=function(s){return this.throwIfDisposed(),ou(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.less=function(s){return this.throwIfDisposed(),ME(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.localResponseNormalization=function(s,t,e,n){return this.throwIfDisposed(),s5(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logSigmoid=function(){return this.throwIfDisposed(),c5(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logSoftmax=function(s){return this.throwIfDisposed(),kE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),AE(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.log=function(){return this.throwIfDisposed(),Ei(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.log1p=function(){return this.throwIfDisposed(),Ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalAnd=function(s){return this.throwIfDisposed(),lo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalNot=function(){return this.throwIfDisposed(),Mv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalOr=function(s){return this.throwIfDisposed(),NE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.logicalXor=function(s){return this.throwIfDisposed(),x5(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.matMul=function(s,t,e){return this.throwIfDisposed(),Le(this,s,t,e)};pt().prototype.maxPool=function(s,t,e,n){return this.throwIfDisposed(),kv(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.max=function(s,t){return this.throwIfDisposed(),Zi(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.maximum=function(s){return this.throwIfDisposed(),Qo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mean=function(s,t){return this.throwIfDisposed(),xn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.min=function(s,t){return this.throwIfDisposed(),Bp(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.minimum=function(s){return this.throwIfDisposed(),Pg(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),T5(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mod=function(s){return this.throwIfDisposed(),E5(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.mul=function(s){return this.throwIfDisposed(),K(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.neg=function(){return this.throwIfDisposed(),cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.norm=function(s,t,e){return this.throwIfDisposed(),Lg(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.notEqual=function(s){return this.throwIfDisposed(),mh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.oneHot=function(s,t=1,e=0){return this.throwIfDisposed(),aE(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.onesLike=function(){return this.throwIfDisposed(),Mi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.pad=function(s,t){return this.throwIfDisposed(),Nv(this,s,t)};pt().prototype.pool=function(s,t,e,n,i,r){return this.throwIfDisposed(),F5(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.pow=function(s){return this.throwIfDisposed(),Fc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.prelu=function(s){return this.throwIfDisposed(),Dv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.prod=function(s,t){return this.throwIfDisposed(),z5(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reciprocal=function(){return this.throwIfDisposed(),Q5(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.relu=function(){return this.throwIfDisposed(),go(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.relu6=function(){return this.throwIfDisposed(),BE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reshapeAs=function(s){return this.throwIfDisposed(),et(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reshape=function(s){return this.throwIfDisposed(),et(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.resizeBilinear=function(s,t,e){return this.throwIfDisposed(),eM(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.resizeNearestNeighbor=function(s,t,e){return this.throwIfDisposed(),nM(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.reverse=function(s){return this.throwIfDisposed(),nl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.rfft=function(){return this.throwIfDisposed(),KE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.round=function(){return this.throwIfDisposed(),UE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.rsqrt=function(){return this.throwIfDisposed(),VE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.selu=function(){return this.throwIfDisposed(),WE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.separableConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),GE(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sigmoid=function(){return this.throwIfDisposed(),ru(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sign=function(){return this.throwIfDisposed(),l6(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sin=function(){return this.throwIfDisposed(),HE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sinh=function(){return this.throwIfDisposed(),qE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.slice=function(s,t){return this.throwIfDisposed(),Ge(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.softmax=function(s){return this.throwIfDisposed(),Pv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.softplus=function(){return this.throwIfDisposed(),Rd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),Rv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.split=function(s,t){return this.throwIfDisposed(),ti(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sqrt=function(){return this.throwIfDisposed(),gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.square=function(){return this.throwIfDisposed(),Xe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.squaredDifference=function(s){return this.throwIfDisposed(),YE(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.squeeze=function(s){return this.throwIfDisposed(),Dd(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.stack=function(s,t){this.throwIfDisposed();const e=s instanceof _n?[this,s]:[this,...s];return sl(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.step=function(s){return this.throwIfDisposed(),$d(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.stridedSlice=function(s,t,e,n,i,r,o,a){return this.throwIfDisposed(),E6(this,s,t,e,n,i,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sub=function(s){return this.throwIfDisposed(),se(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.sum=function(s,t){return this.throwIfDisposed(),ne(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.tan=function(){return this.throwIfDisposed(),k6(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.tanh=function(){return this.throwIfDisposed(),yv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.tile=function(s){return this.throwIfDisposed(),Ki(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.toBool=function(){return this.throwIfDisposed(),Ht(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.toFloat=function(){return this.throwIfDisposed(),Ht(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.toInt=function(){return this.throwIfDisposed(),Ht(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.topk=function(s,t){return this.throwIfDisposed(),N6(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.transpose=function(s){return this.throwIfDisposed(),Ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.unique=function(s){return this.throwIfDisposed(),$6(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),JE(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.unstack=function(s){return this.throwIfDisposed(),Pc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.where=function(s,t){return this.throwIfDisposed(),Vs(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().prototype.zerosLike=function(){return this.throwIfDisposed(),Re(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,vr.prototype)}}class Si extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Si.prototype)}}class Z extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Z.prototype)}}class ge extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ge.prototype)}}class bw extends Error{constructor(t){super(t),Object.setPrototypeOf(this,bw.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AM{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rl(s,t){if(Array.isArray(s)){let e=[];for(let n=0;n<t;n++)e=e.concat(s);return e}else{const e=new Array(t);return e.fill(s),e}}function wr(s,t){if(!s)throw new bw(t)}function vC(s,t){let e=0;for(const n of s)n===t&&e++;return e}function Cs(s){return s.length===1?s[0]:s}function Ze(s){return Array.isArray(s)?s:[s]}function eo(s){const e=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Sa(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let hi={};function yw(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function Cb(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>Cb(t));else{const t=Object.keys(s);for(const e of t){const n=s[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?s[e]=n.value:Cb(n))}}}function Od(s,t={},e={},n="object",i=!1){if(typeof s=="string"){const r=s;let o;if(r in e)o=e[r];else if(r in hi)o=hi[r];else if(o=t[r],o==null)throw new Z(`Unknown ${n}: ${s}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const r=s;if(r.className==null||r.config==null)throw new Z(`${n}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const o=r.className;let a,l;if(o in e?[a,l]=e[o]:o in hi?[a,l]=hi.className:o in t&&([a,l]=t[o]),a==null)throw new Z(`Unknown ${n}: ${o}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(hi))c[f]=hi[f];for(const f of Object.keys(e))c[f]=e[f];const u=r.config;u.customObjects=c;const h=Object.assign({},hi);for(const f of Object.keys(e))hi[f]=e[f];Cb(r.config);const d=l(a,r.config,e,i);return hi=Object.assign({},h),d}else{const c=Object.assign({},hi);for(const h of Object.keys(e))hi[h]=e[h];const u=new a(r.config);return hi=Object.assign({},c),u}}}function mX(s,t){return s<t?-1:s>t?1:0}function Xf(s,t){return-1*mX(s,t)}function zo(s){if(s==null)return s;const t=[];for(const e of s)t.indexOf(e)===-1&&t.push(e);return t}function gX(s){if(s==null)throw new Z(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function vl(s,t,e){if(e!=null&&s.indexOf(e)<0)throw new Z(`${e} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function vw(s,t,e=0,n=1/0){return wr(e>=0),wr(n>=e),Array.isArray(s)&&s.length>=e&&s.length<=n&&s.every(i=>typeof i===t)}function zn(s,t){Array.isArray(s)?(P(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((e,n)=>zn(e,`element ${n+1} of ${t}`))):P(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${NM(s)}.`)}function NM(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>NM(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function xX(s,t,e){let n=e!=null?e():_s(),i;return(...o)=>{const a=e!=null?e():_s();return a-n<t||(n=a,i=s(...o)),i}}function RM(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let bX=0;function DM(){return bX++}const Kf={};function Wg(s=""){return s in Kf||(Kf[s]=0),Kf[s]+=1,s+Kf[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yX=["channelsFirst","channelsLast"],vX=["nearest","bilinear"],wX=["valid","same","causal"],_X=["max","avg"],SX=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Yl=new Map;function wn(s){vl(yX,"DataFormat",s)}function CX(s){vl(vX,"InterpolationFormat",s)}function ai(s){vl(wX,"PaddingMode",s)}function $M(s){vl(_X,"PoolMode",s)}const Zu=[],wC="/";function Pa(s,t){Zu.push(s);try{const e=t();return Zu.pop(),e}catch(e){throw Zu.pop(),e}}function TX(){return Zu.length===0?"":Zu.join(wC)+wC}function LM(s){if(!PM(s))throw new Error("Not a valid tensor name: '"+s+"'");return TX()+s}function FM(s){if(!PM(s))throw new Error("Not a valid tensor name: '"+s+"'");Yl.has(s)||Yl.set(s,0);const t=Yl.get(s);if(Yl.set(s,Yl.get(s)+1),t>0){const e=`${s}_${t}`;return Yl.set(e,1),e}else return s}const IX=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function PM(s){return!!s.match(IX)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function EX(s){return s===parseInt(s.toString(),10)}function Bo(s,t,e){t==null&&(t=0),e==null&&(e=s.length);let n=1;for(let i=t;i<e;++i)n*=s[i];return n}function Oc(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n<t&&(t=n)}return t}function Wo(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n>t&&(t=n)}return t}function nr(s,t){if(t<s)throw new Z(`end (${t}) < begin (${s}) is forbidden.`);const e=[];for(let n=s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let yx;function kn(){return yx==null&&(yx=PW().epsilon()),yx}function sr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wl(s,t){return Ht(s,t)}function zd(s,t=-1){const e=s.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),et(s,e)}function MX(s,t){return ut(()=>{if(s.shape.length!==2)throw new Z(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const e=zd(s,1);return Tb(e,[1,t,1])})}function kX(s){const t=[Bo(s.shape)];return et(s,t)}function AX(s){if(s.rank<=1)throw new Z(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],Bo(s.shape,1)];return et(s,t)}function Oa(s,t,e){return ut(()=>{switch(s.rank){case 1:return Lv(s,t,e);case 2:return jE(s,[t,0],[e,s.shape[1]]);case 3:return Fv(s,[t,0,0],[e,s.shape[1],s.shape[2]]);case 4:return Vp(s,[t,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3]]);case 5:return Ge(s,[t,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return Ge(s,[t,0,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new Z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function vx(s,t,e){return ut(()=>{switch(s.rank){case 1:return Lv(s,t,e);case 2:return jE(s,[0,t],[s.shape[0],e]);case 3:return Fv(s,[0,0,t],[s.shape[0],s.shape[1],e]);case 4:return Vp(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],e]);default:throw new Z(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Yf(s,t,e,n){return ut(()=>{switch(s.rank){case 1:return Lv(s,t,e);case 2:switch(n){case 1:return Oa(s,t,e);case 2:return vx(s,t,e);default:throw new Z(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Oa(s,t,e);case 2:return Fv(s,[0,t,0],[s.shape[0],e,s.shape[2]]);case 3:return vx(s,t,e);default:throw new Z(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Oa(s,t,e);case 2:return Vp(s,[0,t,0,0],[s.shape[0],e,s.shape[2],s.shape[3]]);case 3:return Vp(s,[0,0,t,0],[s.shape[0],s.shape[1],e,s.shape[3]]);case 4:return vx(s,t,e);default:throw new Z(`The axis is not within the rank of the tensor ${n}`)}default:throw new Z(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function ww(s,t=-1){let e;return t<0&&(e=s[0].rank,e!==0?t=e:t=0),t===s[0].rank&&(t=-1),as(s,t)}function _C(s,t){switch(s.rank){case 1:return qG([s,t]);case 2:return XG([s,t],0);case 3:return YG([s,t],0);case 4:return JG([s,t],0);default:throw new Z(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function Tb(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new Z(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return Ki(s,t)}function Gg(s,t=0,e=1,n,i){return wb(s,t,e,n,i)}function Mr(s,t,e,n){if(s.rank<2||t.rank<2)throw new ge(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const i=s.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(i!==r)throw new ge(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return cC({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?Ib(s.rank,n,sr()):null,activation:e});{const i=s.shape.slice(),r=i.pop();s=et(s,[-1,r]);const o=t.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:t.rank},(p,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=et(Ne(t,u),[l,-1]);const h=[...i,...c];return et(cC({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?Ib(s.rank,n,sr()):null,activation:e}),h)}}function OM(s,t,e){return ut(()=>(Array.isArray(t)?t=Ps(t,"int32"):t=Ht(t,"int32"),Tv(s,t,e)))}function Bd(s){return K(s,s)}function Ib(s,t,e){const n=t.shape;if(t.rank!==1&&t.rank!==s)throw new Z(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(e==="channelsFirst")return n.length===1?et(t,[1,n[0],1,1,1]):et(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?et(t,[1,1,1,1,n[0]]):et(t,[1].concat(n))}else if(s===4){if(e==="channelsFirst")return n.length===1?et(t,[1,n[0],1,1]):et(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?et(t,[1,1,1,n[0]]):et(t,[1].concat(n))}else if(s===3){if(e==="channelsFirst")return n.length===1?et(t,[1,n[0],1]):et(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?et(t,[1,1,n[0]]):et(t,[1].concat(n))}else if(s<3)return t;throw new Z(`Unsupported input rank by biasAdd: ${t.rank}`)}function lr(s,t,e){return ut(()=>(e==null&&(e=sr()),wn(e),$t(s,Ib(s.rank,t,e))))}function NX(s,t=1){if(t!==1)throw new ge(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return $g(s)}function RX(s){return ut(()=>ae(s,$t(Fn(s),1)))}function zM(s,t,e,n){return ut(()=>B6(s,t,e,n))}function DX(s){return ut(()=>{const t=$t(.5,K(.2,s));return ei(t,0,1)})}function Ud(s,t,e=!1){return e?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $X=["fanIn","fanOut","fanAvg"],LX=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function FX(s){vl($X,"FanMode",s)}function PX(s){vl(LX,"Distribution",s)}class $i extends iu{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class BM extends $i{apply(t,e){return On(t,e)}}BM.className="Zeros";At(BM);class _w extends $i{apply(t,e){return ta(t,e)}}_w.className="Ones";At(_w);class UM extends $i{constructor(t){if(super(),typeof t!="object")throw new Z(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new Z(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return ut(()=>K(de(this.value),ta(t,e)))}getConfig(){return{value:this.value}}}UM.className="Constant";At(UM);class VM extends $i{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Og(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}VM.className="RandomUniform";At(VM);class WM extends $i{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new ge(`randomNormal does not support dType ${e}.`);return Gg(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}WM.className="RandomNormal";At(WM);class GM extends $i{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new ge(`truncatedNormal does not support dType ${e}.`);return ZE(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}GM.className="TruncatedNormal";At(GM);class HM extends $i{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return ut(()=>{if(t.length!==2||t[0]!==t[1])throw new Z("Identity matrix initializer can only be used for 2D square matrices.");return K(this.gain,EE(t[0]))})}getConfig(){return{gain:this.gain}}}HM.className="Identity";At(HM);function OX(s,t="channelsLast"){let e,n;if(wn(t),s.length===2)e=s[0],n=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const i=Bo(s,2);e=s[1]*i,n=s[0]*i}else if(t==="channelsLast"){const i=Bo(s,0,s.length-2);e=s[s.length-2]*i,n=s[s.length-1]*i}}else{const i=Bo(s);e=Math.sqrt(i),n=Math.sqrt(i)}return[e,n]}class Ws extends $i{constructor(t){if(super(),t.scale<0)throw new Z(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,FX(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,PX(this.distribution),this.seed=t.seed}apply(t,e){const n=OX(t),i=n[0],r=n[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,i):this.mode==="fanOut"?o/=Math.max(1,r):o/=Math.max(1,(i+r)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new ge(`${this.getClassName()} does not support dType ${e}.`);return ZE(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*o);return Og(t,-a,a,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ws.className="VarianceScaling";At(Ws);class Sw extends Ws{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ws.className}}Sw.className="GlorotUniform";At(Sw);class Cw extends Ws{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ws.className}}Cw.className="GlorotNormal";At(Cw);class Tw extends Ws{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ws.className}}Tw.className="HeNormal";At(Tw);class Iw extends Ws{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ws.className}}Iw.className="HeUniform";At(Iw);class Ew extends Ws{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ws.className}}Ew.className="LeCunNormal";At(Ew);class Mw extends Ws{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ws.className}}Mw.className="LeCunNormal";At(Mw);class qM extends $i{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new ge("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return ut(()=>{if(t.length<2)throw new ge("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const n=t[0]>t[1]?[t[1],t[0]]:t,i=Gg(n,0,1,"float32");let r=r8.gramSchmidt(i);return t[0]>t[1]&&(r=Ne(r)),K(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}qM.className="Orthogonal";At(qM);const SC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function CC(s,t={}){return Od(s,bi.getMap().classNameMap,t,"initializer")}function ln(s){return yw(s)}function sn(s){if(typeof s=="string"){const t=s in SC?SC[s]:s;if(t==="GlorotNormal")return new Cw;if(t==="GlorotUniform")return new Sw;if(t==="HeNormal")return new Tw;if(t==="HeUniform")return new Iw;if(t==="LeCunNormal")return new Ew;if(t==="LeCunUniform")return new Mw;{const e={};return e.className=t,e.config={},CC(e)}}else return s instanceof $i?s:CC(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Eb(s){return Array.isArray(s)&&Array.isArray(s[0])}function Wp(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function fe(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new Z(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Pe(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new Z(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gp(s){let t=0;for(const e of s)e.shape.length===0?t+=1:t+=e.shape.reduce((n,i)=>n*i);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const TC="Variable";class zX{constructor(t,e="float32",n=TC,i=!0,r=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=DM(),n=n==null?TC:n,this.originalName=LM(n),this.name=FM(this.originalName),this.trainable_=i,this.constraint=r,this.val=P6(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),BX(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function BX(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function Mb(s){return s.map(t=>t.read())}function kw(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class An{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Tr{constructor(t,e,n,i,r,o,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=i,this.callArgs=r,this.outputTensorIndex=a,this.id=DM(),o!=null&&(this.originalName=LM(o),this.name=FM(this.originalName)),this.rank=e.length}}let UX=0;class Hg{constructor(t,e){this.callArgs=e,this.id=UX++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)n!=null&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let VX=0;class Ee extends iu{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=VX++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const n=this.getClassName();e=eo(n)+"_"+Wg(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),n=[r].concat(t.inputShape)}this.batchInputShape=n;let i=t.dtype;i==null&&(i=t.inputDType),i==null&&(i="float32"),this.dtype=i}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Si(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Z(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Cs(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Cs(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new vr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new vr(`Layer ${this.name} is not connected, no input to return.`);return Cs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new vr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new vr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Cs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Ze(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=Ze(this.inputSpec);if(t.length!==e.length)throw new Z(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const i=t[n],r=e[n];if(r==null)continue;const o=i.rank;if(r.ndim!=null&&o!==r.ndim)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${o}`);if(r.maxNDim!=null&&o>r.maxNDim)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${o}`);if(r.minNDim!=null&&o<r.minNDim)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${o}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new Z(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const a=i.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(r.shape!=null)for(let a=0;a<r.shape.length;++a){const l=r.shape[a],c=i.shape[a];if(l!=null&&c!=null&&l!==c)throw new Z(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Ze(t);let i=!0;for(const o of n)if(!(o instanceof Tr)){i=!1;break}let r=!0;for(const o of n)if(o instanceof Tr){r=!1;break}if(i===r)throw new Z("Arguments to apply() must be all SymbolicTensors or all Tensors");return Pa(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of Ze(t))o.push(a.shape);this.build(Cs(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let o=this.call(t,e);const a=Ze(o),l=[];for(let c of a)n.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=Cs(l),this.activityRegularizer!=null)throw new ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=WX(t),a=this.computeOutputShape(o);let l;const c=GX(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new Tr(c,u,this,Ze(t),e,this.name,h)):l=new Tr(c,a,this,Ze(t),e,this.name),this.addInboundNode(t,l,null,null,o,a,e),this._refCount++,this.activityRegularizer!=null)throw new ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,i)=>{n!=null&&t[i]!=null&&t[i]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new vr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new vr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Si(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Gp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Mb(t?this.trainableWeights:this.weights)}setWeights(t){ut(()=>{const e=this.weights;if(e.length!==t.length)throw new Z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const n=[],i=Mb(e);for(let r=0;r<i.length;++r){const o=i[r],a=e[r],l=t[r];if(!Fe(o.shape,l.shape))throw new Z(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);n.push([a,l])}kw(n)})}addWeight(t,e,n,i,r,o,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new Z(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():sn("zeros"));const c=i.apply(e,n),u=new zX(c,n,t,o,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Ze(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,n,i,r,o,a=null){const l=Ze(t);e=Ze(e),n=Ze(n),i=Ze(i),r=Wp(r),o=Wp(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new Hg({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:n,outputMasks:i,inputShapes:r,outputShapes:o},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function WX(s){s=Ze(s);const t=[];for(const e of s)t.push(e.shape);return Cs(t)}function GX(s){return"float32"}function jM(s,t,e){if((t==null||e!=null&&e>0)&&(t=s.sourceLayer,e=s.nodeIndex),t.inboundNodes.length===0)return[s];{const n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{const i=[];for(let r=0;r<n.inboundLayers.length;r++){const o=n.inputTensors[r],a=n.inboundLayers[r],l=n.nodeIndices[r],c=jM(o,a,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vd extends Ee{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Wg("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new Z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new Z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new Z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const i=new Tr(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new Hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Vd.className="InputLayer";At(Vd);function HX(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new Z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let e=s.dtype;return e==null&&(e="float32"),new Vd({batchInputShape:t,name:s.name,dtype:e,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qX(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return Ht(t,s.dtype)}catch{throw new Z(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class No{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof No)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=qX(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new Z(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Tr){if(this.id2Value[t.id]==null)throw new Z(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new Z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Tr){if(this.id2Value[t.id]==null)throw new Z(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new Z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&ye(this.id2Mask)}}const Hp=new AM,qp=new AM;function jX(s){Hp!=null&&Hp.setMaxEntries(s),qp!=null&&qp.setMaxEntries(s)}function Bu(s,t,e,n){const i=e==null?!1:e.training,r=Array.isArray(s),o=r?s:[s],a=o.map(p=>p.name),l=[],c=t.names();for(const p of a)c.indexOf(p)!==-1?l.push(t.getValue(p)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let h=Hp.get(u),d;if(h==null){const p=XX(o,t);h=p.sorted,d=p.recipientCounts,Hp.put(u,h),qp.put(u,d)}d={},i||Object.assign(d,qp.get(u));const f=new No(t);for(let p=0;p<h.length;++p){if(n!=null){const T=Pp().numTensors;T>n.maxNumTensors&&(n.maxNumTensors=T),T<n.minNumTensors&&(n.minNumTensors=T)}const g=h[p],m=g.sourceLayer;if(m instanceof Vd)continue;const x=[],b=[],v=[];let y=!1;for(const T of g.inputs){const I=f.getValue(T),A=f.getMask(T);x.push(I),b.push(A),A!=null&&(y=!0),i||(d[T.name]--,d[T.name]===0&&!t.hasKey(T)&&a.indexOf(T.name)===-1&&!I.isDisposed&&T.sourceLayer.stateful!==!0&&v.push(I))}y&&(e=e||{},e.mask=b[0]);const w=Ze(m.apply(x,e));let S=null;m.supportsMasking&&(S=m.computeMask(x,b));const C=YX(g),_=Array.isArray(C)?C:[C];for(let T=0;T<_.length;++T){f.hasKey(_[T])||f.add(_[T],w[T],Array.isArray(S)?S[0]:S);const I=a.indexOf(_[T].name);I!==-1&&(l[I]=w[T])}i||ye(v)}return f.disposeMasks(),r?l:l[0]}function XX(s,t){P(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(s.length===1){const i=IC(s[0],t);e=i.sorted,n=i.recipientMap}else{const i=new Set;for(const r of s){const{sorted:o,recipientMap:a}=IC(r,t);for(const l of o)i.has(l.name)||(e.push(l),i.add(l.name));for(const l in a)n[l]==null&&(n[l]=new Set),a[l].forEach(c=>n[l].add(c))}}return{sorted:e,recipientCounts:KX(n)}}function KX(s){const t={};for(const e in s)t[e]=s[e].size;return t}function IC(s,t){const e=new Set,n=[],i={};for(const a of t.names())e.add(a);const r=[],o=[];for(r.push(s);r.length>0;){const a=r[r.length-1];if(e.has(a.name)){r.pop();continue}const l=o[o.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),n.push(a),e.add(a.name),l&&o.pop();else{o.push(r.length-1);for(const c of a.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(a.name),!e.has(c.name)&&r.push(c)}}return{sorted:n,recipientMap:i}}function YX(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let e=null;for(let n=0;n<s.sourceLayer.inboundNodes.length;++n)for(const i of s.sourceLayer.inboundNodes[n].outputTensors)if(i.id===s.id){e=n;break}t=s.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZX=ft();ZX.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,jX);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Aw(s,t){return ut(()=>gs(ne(K(s,s),t,!0)))}class Wd extends iu{getConfig(){return{}}}class XM extends Wd{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ut(()=>{const e=Aw(t,this.axis),n=ei(e,0,this.maxValue);return K(t,ae(n,$t(kn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}XM.className="MaxNorm";At(XM);class KM extends Wd{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ut(()=>ae(t,$t(kn(),Aw(t,this.axis))))}getConfig(){return{axis:this.axis}}}KM.className="UnitNorm";At(KM);class YM extends Wd{apply(t){return go(t)}}YM.className="NonNeg";At(YM);class ZM extends Wd{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ut(()=>{const e=Aw(t,this.axis),n=$t(K(this.rate,ei(e,this.minValue,this.maxValue)),K(1-this.rate,e));return K(t,ae(n,$t(kn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ZM.className="MinMaxNorm";At(ZM);const EC={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Nn(s){return yw(s)}function MC(s,t={}){return Od(s,bi.getMap().classNameMap,t,"constraint")}function Rn(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in EC?EC[s]:s,config:{}};return MC(e)}else return s instanceof Wd?s:MC(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ga(s){if(s==null)return;const t=[],e=[],n=[];for(const i in s){const r=s[i];if(typeof r!="number"){const o=r;t.push(o.data()),e.push(i),n.push(o)}}if(t.length>0){const i=await Promise.all(t);for(let r=0;r<i.length;++r)s[e[r]]=i[r][0];ye(n)}}function JM(s){if(s!=null)for(const t in s){const e=s[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var kC;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(kC||(kC={}));const JX=125;class gh{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class QX{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class t7 extends gh{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const n=e.size==null?0:e.size;this.seen+=n;for(const i in e){const r=e[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*n;else{let o;i in this.totals?o=this.totals[i]:this.totals[i]=0;const a=ut(()=>$t(this.totals[i],K(r,n)));this.totals[i]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:ut(()=>{const i=K(ae(1,this.seen),this.totals[n]);e[n]=i,this.totals[n].dispose(),$r(e[n])}))}}class e7 extends gh{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const o=this.history[r];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];t.push(l.data()),e.push(r),n.push(a)}}const i=await Promise.all(t);for(let r=0;r<i.length;++r)this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=i[r][0]}}class n7 extends gh{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||sM,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=JX),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");eb(this.yieldEvery)&&(this.maybeWait=xX(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const i=[];this.yield!=null&&(await ga(n),i.push(this.yield(t,e,n))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await ga(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];this.epochEnd!=null&&(await ga(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){this.batchBegin!=null&&(await ga(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];this.batchEnd!=null&&(await ga(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):eb(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){this.trainBegin!=null&&(await ga(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await ga(t),await this.trainEnd(t))}}function QM(s,t){return s==null&&(s={}),s instanceof gh?[s]:Array.isArray(s)&&s[0]instanceof gh?s:Ze(s).map(n=>new n7(n,t))}class fi{constructor(){}static registerCallbackConstructor(t,e){P(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),fi.checkForDuplicate(e),fi.constructors[t]==null&&(fi.constructors[t]=[]),fi.constructors[t].push(e)}static checkForDuplicate(t){for(const e in fi.constructors)fi.constructors[+e].forEach(i=>{if(i===t)throw new Z("Duplicate callback constructor.")})}static clear(){fi.constructors={}}static createCallbacks(t){const e=[];for(const n in fi.constructors){const i=+n;t>=i&&e.push(...fi.constructors[i])}return e.map(n=>new n)}}fi.constructors={};function tk(s,t,e,n,i,r,o,a,l){const c=new e7,u=[new t7,...fi.createCallbacks(t)];s!=null&&u.push(...s),u.push(c);const h=new QX(u);return h.setParams({epochs:e,initialEpoch:n,samples:i,steps:r,batchSize:o,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kr(s,t={},e=!1){return Od(s,bi.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jp(s,t){return ut(()=>{s.dtype!=="float32"&&(s=Ht(s,"float32"));const e=ne(Bd(s),t,!0),n=Nd(e.shape,kn()),i=gs(Qo(e,n));return ae(s,i)})}function qg(s,t){return ut(()=>xn(Bd(se(t,s)),-1))}function Nw(s,t){return ut(()=>xn(Fn(se(t,s)),-1))}function Rw(s,t){return ut(()=>{const e=se(s,t),n=ei(Fn(s),kn(),Number.MAX_VALUE),i=Fn(ae(e,n));return K(100,xn(i,-1))})}function s7(s,t){return ut(()=>{const e=ei(t,kn(),Number.MAX_VALUE),n=Ei($t(1,e)),i=ei(s,kn(),Number.MAX_VALUE),r=Ei($t(1,i));return xn(Bd(se(n,r)),-1)})}function i7(s,t){return ut(()=>{const e=Qo(0,se(1,K(s,t)));return xn(Bd(e),-1)})}function r7(s,t){return ut(()=>{const e=Qo(0,se(1,K(s,t)));return xn(e,-1)})}function o7(s,t){return ut(()=>{const e=ne(K(s,t),-1),n=Zi(K(se(1,s),t),-1);return Qo(0,$t(1,se(n,e)))})}function a7(s,t){return ut(()=>{const e=Math.log(2),n=se(t,s),i=se($t(n,Rd(K(-2,n))),e);return xn(i,-1)})}function xh(s,t,e=!1){return ut(()=>{if(e)t=Pv(t);else{const n=ne(t,t.shape.length-1,!0);t=ae(t,n)}return t=ei(t,kn(),1-kn()),cn(ne(K(Ht(s,"float32"),Ei(t)),t.shape.length-1))})}function Xp(s,t,e=!1){return ut(()=>{const n=Ht(Fg(kX(s)),"int32");t=ei(t,kn(),1-kn());const i=t.shape,r=et(aE(n,i[i.length-1]),i);return xh(r,t,e)})}function l7(s,t){if(!Fe(s.shape,t.shape))throw new Z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return ut(()=>{const e=go(t),n=cn(Fn(t));return $t(se(e,K(t,s)),Ev(Ii(n)))})}function jg(s,t){return ut(()=>{let e;return e=ei(t,kn(),1-kn()),e=Ei(ae(e,se(1,e))),xn(l7(s,e),-1)})}function c7(s,t){return ut(()=>{const e=ei(s,kn(),1),n=ei(t,kn(),1);return ne(K(s,Ei(ae(e,n))),-1)})}function u7(s,t){return ut(()=>{const e=Ei($t(kn(),t));return xn(se(t,K(s,e)),-1)})}function ek(s,t){return ut(()=>{const e=jp(s,-1),n=jp(t,-1),i=K(e,n);return cn(ne(i,-1))})}const Kp={meanSquaredError:qg,meanAbsoluteError:Nw,meanAbsolutePercentageError:Rw,meanSquaredLogarithmicError:s7,squaredHinge:i7,hinge:r7,categoricalHinge:o7,logcosh:a7,categoricalCrossentropy:xh,sparseCategoricalCrossentropy:Xp,binaryCrossentropy:jg,kullbackLeiblerDivergence:c7,poisson:u7,cosineProximity:ek};function wx(s){if(typeof s=="string"){if(s in Kp)return Kp[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Z(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nk(s,t){return ut(()=>{const e=K(.5,Mi(t)),n=wl(oi(t,e),s.dtype);return xn(Lr(s,n),-1)})}function sk(s,t){return ut(()=>wl(Lr(ph(s,-1),ph(t,-1)),"float32"))}function h7(s,t){return ut(()=>Ht(ne(lo(Lr(s,1),Lr(t,1))),"float32"))}function d7(s,t){return ut(()=>Ht(ne(lo(Lr(s,0),Lr(t,1))),"float32"))}function f7(s,t){return ut(()=>{const e=h7(s,t),n=d7(s,t),i=$t(e,n);return Ht(Vs(oi(i,0),ae(e,i),0),"float32")})}function p7(s,t){return jg(s,t)}function m7(s,t){return s.rank===t.rank&&(s=Dd(s,[s.rank-1])),t=ph(t,-1),t.dtype!==s.dtype&&(t=Ht(t,s.dtype)),Ht(Lr(s,t),"float32")}const g7=qg,x7=qg,b7=Nw,y7=Nw,v7=Rw,w7=Rw,ik=xh,_7=ek,rk=Xp,Yp={binaryAccuracy:nk,categoricalAccuracy:sk,precision:f7,categoricalCrossentropy:ik,sparseCategoricalCrossentropy:rk,mse:g7,MSE:x7,mae:b7,MAE:y7,mape:v7,MAPE:w7,cosine:_7};function S7(s){if(typeof s=="string"&&s in Yp)return Yp[s];if(typeof s!="string"&&s!=null)return s;throw new Z(`Unknown metric ${s}`)}function Zf(s){if(wr(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const e of Object.keys(Kp))if(Kp[e]===s){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(Yp))if(Yp[e]===s){t=e;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function C7(s){const t={Adagrad:()=>Kl.adagrad(.01),Adadelta:()=>Kl.adadelta(1,.95,kn()),Adam:()=>Kl.adam(.001,.9,.999,kn()),Adamax:()=>Kl.adamax(.002,.9,.999,kn(),0),RMSProp:()=>Kl.rmsprop(.001,.9,0,kn()),SGD:()=>Kl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new Z(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const AC=1*1024*1024;function NC(s,t,e=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!kb(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const n=JSON.stringify(s);n.length>AC&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${AC}.`)}}function kb(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const e of t)if(typeof e!="string"||!kb(s[e]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!kb(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T7(s,t,e,n=console.log){const i=E7(s),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let o;if(!i){r.push("Receives inputs"),o=[];for(const u in s.nodesByDepth)o.push(...s.nodesByDepth[u])}n("_".repeat(t)),Zp(r,e,n),n("=".repeat(t));const a=s.layers;for(let u=0;u<a.length;++u)i?M7(a[u],e,n):k7(a[u],e,o,n),n((u===a.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const l=I7(s),c=Gp(s.nonTrainableWeights);n(`Total params: ${l+c}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${c}`),n("_".repeat(t))}function I7(s){let t;return s.collectedTrainableWeights!=null?t=Gp(s.collectedTrainableWeights):t=Gp(s.trainableWeights),t}function E7(s){let t=!0;const e=[],n=[];for(const i in s.nodesByDepth)e.push(s.nodesByDepth[i]);for(const i of e){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){t=!1;break}n.push(...i)}if(t)for(const i of s.layers){let r=!1;for(const o of i.inboundNodes)if(n.indexOf(o)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function Zp(s,t,e=console.log){let n="";for(let i=0;i<s.length;++i)i>0&&(n=n.slice(0,n.length-1)+" "),n+=s[i],n=n.slice(0,t[i]),n+=" ".repeat(t[i]-n.length);e(n)}function M7(s,t,e){let n,i;try{i=s.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{n=JSON.stringify(s.outputShape)}catch{n="multiple"}const r=s.name,o=s.getClassName(),a=[`${r} (${o})`,i,n,s.countParams().toString()];Zp(a,t,e)}function k7(s,t,e,n){let i,r;try{r=s.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(s.outputShape)}catch{i="multiple"}const o=[];for(const h of s.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],g=h.tensorIndices[d];o.push(`${f}[${p}][${g}]`)}const a=s.name,l=s.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,r,i,s.countParams().toString(),c];Zp(u,t,n);for(let h=1;h<o.length;++h)Zp(["","","","",o[h]],t,n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ok(s,t,e){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof e=="string"}function Jp(s,t){if(s===null)return null;if(typeof s=="string")return Sa(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];ok(t,i,r)?e.push(r):e.push(Jp(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n];if(n==="name"&&typeof i=="string")e[n]=i;else{const r=Sa(n);e[r]=Jp(i,r)}}return e}}function Ab(s,t){if(s==null)return null;if(typeof s=="string")return eo(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];ok(t,i,r)?e.push(r):e.push(Ab(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n],r=eo(n);(n==="name"||n==="className")&&typeof i=="string"?e[r]=i:e[r]=Ab(i,n)}return e}}/** @license See the LICENSE file. */const ak="4.0.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vi extends Ee{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Wg(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],zo(this.inputs).length!==this.inputs.length)throw new Z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);zo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const v=b.sourceLayer,y=b.nodeIndex,w=b.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(w)}for(const b of this.inputs){const v=b.sourceLayer,y=b.nodeIndex,w=b.tensorIndex;wr(y===0,"input layer has >1 nodes"),wr(w===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const v=this.inputLayers[b];if(!(v instanceof Vd))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const e={},n={},i={},r={},o={},a=[],l=(b,v,y,w,S,C)=>{(w==null||S==null||C==null)&&(w=b.sourceLayer,S=b.nodeIndex,C=b.tensorIndex);const _=w.inboundNodes[S];if(y.indexOf(_)!==-1)throw new Si(`The tensor ${b.name} at layer "${w.name}" is part of a cycle.`);if(v.indexOf(_)!==-1)return;this.containerNodes.add(Vi.nodeKey(w,S)),w.id in o||(o[w.id]=Object.keys(o).length),y.indexOf(_)===-1&&y.push(_);const T=_.inboundLayers.length;for(let I=0;I<T;I++){const A=_.inputTensors[I],D=_.inboundLayers[I],k=_.nodeIndices[I],M=_.tensorIndices[I];l(A,v,y,D,k,M)}for(v.push(_);y.indexOf(_)>=0;)y.splice(y.indexOf(_),1);a.push(_)},c=[],u=[];for(const b of this.outputs)l(b,c,u);const h=a.slice().reverse();for(const b of h){n[b.id]=b,b.id in e||(e[b.id]=0);let v=e[b.id];const y=i[b.outboundLayer.id]==null?0:i[b.outboundLayer.id];v=Math.max(v,y),i[b.outboundLayer.id]=v,r[b.outboundLayer.id]=b.outboundLayer,e[b.id]=v;for(let w=0;w<b.inboundLayers.length;w++){const S=b.inboundLayers[w],C=b.nodeIndices[w],_=S.inboundNodes[C],T=e[_.id]==null?0:e[_.id];e[_.id]=Math.max(v+1,T),n[_.id]=_}}const d={};for(const b in e){const v=e[b];v in d||(d[v]=[]),d[v].push(n[b])}const f={};for(const b in i){const v=i[b];v in f||(f[v]=[]),f[v].push(r[b])}let p=Object.keys(f).map(b=>parseInt(b,10)).sort(Xf);this.layers=[];for(const b of p){const v=f[b];v.sort((y,w)=>{const S=o[y.id],C=o[w.id];return S<C?-1:S>C?1:0});for(const y of v)y instanceof Vi&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=f,p=Object.keys(d).map(b=>parseInt(b,10)).sort(Xf);const g=this.inputs.slice(),m=[];for(const b of p)for(const v of d[b]){const y=v.outboundLayer;if(y!=null){for(const w of v.inputTensors)if(g.indexOf(w)===-1)throw new Si(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${y.name}". The following previous layers were accessed without issue: ${m}`);for(const w of v.outputTensors)g.push(w);m.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(b=>b.name);for(const b of x){const v=x.filter(y=>y===b).length;if(v!==1)throw new Si(`The name "${b}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let i=0;for(const o of this.layers)for(const a of o.weights){if(n[a.originalName]!=null)throw new Z(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,i++}const r=[];for(const o in t){let a=o;if(n[o]==null){const l=o.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[a]!=null)r.push([n[a],t[o]]);else if(e)throw new Z(`Provided weight data has no target variable: ${o}`);delete n[a]}if(e){const o=[];for(const a in n)o.push(a);if(o.length>0)throw new Z(`${o.length} of ${i} weights are not set: ${o}`)}kw(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${ak}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Ab(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return ut(()=>{t=Ze(t);const n=new No;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],t[i]);return Bu(this.outputs,n,e)})}computeMask(t,e){return ut(()=>{t=Ze(t);let n;return e==null?n=rl(null,t.length):n=Ze(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Wp(t);if(e.length!==this.inputLayers.length)throw new Z(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";n[u]=c}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Xf);if(i.length>1)for(const a of i){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const m=c.inboundLayers[g],x=c.nodeIndices[g],b=c.tensorIndices[g],v=`${m.name}_${x}_${b}`,y=n[v];h.push(y)}const d=u.computeOutputShape(Cs(h)),f=Wp(d),p=u.inboundNodes.indexOf(c);for(let g=0;g<f.length;g++){const m=`${u.name}_${p}_${g}`;n[m]=f[g]}}}const r=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];wr(l in n),r.push(n[l])}return Cs(r)}runInternalGraph(t,e){e==null&&(e=rl(null,t.length));const n={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];n[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Xf);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const g of d)g.id in n&&p.push(n[g.id]);if(p.length===d.length){let g={},m,x,b,v;if(u.callArgs!=null&&(g=u.callArgs),p.length===1){const[y,w]=p[0];g.mask==null&&(g.mask=w),b=Ze(h.call(y,g)),v=Ze(h.computeMask(y,w)),m=[y],x=[w]}else m=p.map(y=>y[0]),x=p.map(y=>y[1]),g.mask==null&&(g.mask=x),b=Ze(h.call(m,g)),v=Ze(h.computeMask(m,x));if(h.activityRegularizer)throw new ge("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<f.length;++y){const w=f[y],S=b[y],C=v[y];n[w.id]=[S,C]}}}}const r=[],o=[],a=[];for(const l of this.outputs){wr(l.id in n,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=n[l.id];a.push(c.shape),r.push(c),o.push(u)}return[r,o,a]}buildNodeConversionMap(t){const e={};let n;for(const i of this.layers){n=i instanceof Vi?1:0;for(let r=0;r<i.inboundNodes.length;r++){const o=Vi.nodeKey(i,r);this.containerNodes.has(o)&&(e[o]=n,n+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new Z(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new Z("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new Z(`No such layer: ${t}`)}calculateLosses(){return ut(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const i=Vi.nodeKey(e,n);this.containerNodes.has(i)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],f=Vi.nodeKey(o,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const x=d.inboundLayers[m],b=d.nodeIndices[m],v=d.tensorIndices[m],y=Vi.nodeKey(x,b);let w=e[y];w==null&&(w=0),g.push([x.name,w,v,p])}c.push(g)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,n.push(u)}t.layers=n;const i=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=Vi.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];i.push([a.name,u,h])}t.inputLayers=i;const r=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=Vi.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];r.push([a.name,u,h])}return t.outputLayers=r,t}static fromConfig(t,e,n={},i=!1){const r={},o={};function a(m,x){m.name in o?o[m.name].push(x):o[m.name]=[x]}function l(m,x){const b=[];let v;for(const y of x){const w=y[0],S=y[1],C=y[2];if(v=y[3]==null?{}:y[3],!(w in r)){a(m,x);return}const _=r[w];if(_.inboundNodes.length<=S){a(m,x);return}const T=_.inboundNodes[S];b.push(T.outputTensors[C])}b.length>0&&m.apply(Cs(b),v)}function c(m){const x=m.name,b=kr(m,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(i),r[x]=b,m.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new Z(`Corrupted configuration, expected array for nodeData: ${y}`);a(b,y)})}const u=e.name,h=e.layers;for(const m of h)c(m);for(;!gX(o);)for(const m of h){const x=r[m.name];if(x.name in o){const b=o[x.name];delete o[x.name];for(const v of b)l(x,v)}}const d=[],f=[],p=e.inputLayers;for(const m of p){const x=m[0],b=m[1],v=m[2];wr(x in r);const w=r[x].inboundNodes[b].outputTensors;d.push(w[v])}const g=e.outputLayers;for(const m of g){const x=m[0],b=m[1],v=m[2];wr(x in r);const w=r[x].inboundNodes[b].outputTensors;f.push(w[v])}return new t({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new Z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){ut(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function A7(s,t,e){const n=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(i=>null);if(n===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==n)throw new Error(`Provided ${e} is an array of ${s.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const i=[];return t.forEach(r=>{r in s?i.push(s[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(s)}`)}function lk(s,t){return A7(s,t,"classWeight")}async function ck(s,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const i=ut(()=>{if(s.shape.length===1)return La(s);if(s.shape.length===2){if(s.shape[1]>1)return ph(s,1);if(s.shape[1]===1)return et(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());ye(i);const o=[];return r.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(e[a])}),Ps(o,"float32")}else return null}function N7(s,t){return K(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const R7=32;function uk(s,t){let e,n;const i=t;e=i.xs,n=i.ys,P(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=RC("input",s.inputNames,e),o=RC("output",s.outputNames,n),a=r[0].shape[0];P(r.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),P(o.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let l=0;l<r.length;l++)P(r[l].shape[0]===a,()=>`Batch size mismatch: input ${s.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);for(let l=0;l<o.length;l++)P(o[l].shape[0]===a,()=>`Batch size mismatch: output ${s.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);return{xs:r,ys:o}}function RC(s,t,e){if(e instanceof _n)return[e];if(Array.isArray(e))return P(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),e;{const n=[];for(const i of t){if(e[i]==null)throw new Z(`The feature data generated by the dataset lacks the required ${s} key '${i}'.`);n.push(e[i])}return n}}function D7(s){if(s.length===3)throw new ge("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function $7(s,t,e){const n=e.batchesPerEpoch!=null;if(P(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),P(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),P(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),P(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),P(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const i=e.validationData!=null;let r,o;if(i)if(DC(e.validationData))P(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=D7(e.validationData);r=m.xs,o=m.ys}const a=s.makeTrainFunction(),l=s.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(m=>"val_"+m)):c=l.slice();const u=QM(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:f}=tk(u,h,e.epochs,null,null,L7(t,e),null,i,c);d.setModel(s),s.history=f,await d.onTrainBegin(),s.stopTraining_=!1;let p=e.initialEpoch==null?0:e.initialEpoch,g=await t.iterator();for(;p<e.epochs;){const m={};await d.onEpochBegin(p);let x=0,b=0;for(n||(g=await t.iterator());!n||x<e.batchesPerEpoch;){const v=await g.next();if(n&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:y,ys:w}=uk(s,v.value),S={};S.batch=b,S.size=y[0].shape[0],await d.onBatchBegin(b,S);const C=[];if(e.classWeight!=null){const I=lk(e.classWeight,s.outputNames);for(let A=0;A<I.length;++A)C.push(await ck(w[A],null,I[A]))}const _=y.concat(w).concat(C),T=a(_);ye(_);for(let I=0;I<l.length;++I){const A=l[I],D=T[I];S[A]=D,$r(D)}await d.onBatchEnd(b,S),JM(S),b++,x++}if(n?x>=e.batchesPerEpoch:v.done){if(i){let y;DC(e.validationData)?y=Ze(await s.evaluateDataset(e.validationData,{batches:e.validationBatches})):y=Ze(s.evaluate(r,o,{batchSize:e.validationBatchSize==null?R7:e.validationBatchSize,verbose:0}));for(let w=0;w<s.metricsNames.length;++w)m[`val_${s.metricsNames[w]}`]=y[w]}break}if(s.stopTraining_)break}if(await d.onEpochEnd(p,m),p++,s.stopTraining_)break}return await d.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function L7(s,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(s.size)&&(e=s.size),e}function DC(s){return typeof s.iterator=="function"}function F7(s){return typeof s.next=="function"}async function P7(s,t,e){e=e||{};const n=e.batches!=null,i=s.testFunction;let r=[];if(e.verbose>0)throw new ge("Verbose mode is not implemented yet.");P(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=F7(t)?t:await t.iterator();let a=0,l=0;for(;!n||l<e.batches;){const c=await o.next();if(r=ut(()=>{if(c.value){const{xs:u,ys:h}=uk(s,c.value),d=u.concat(h),f=ut(()=>i(d));if(ye(d),l===0)for(let g=0;g<f.length;++g)r.push(de(0));const p=d[0].shape[0];for(let g=0;g<f.length;++g){const m=f[g],x=r[g];r[g]=ut(()=>$t(r[g],K(p,m))),l>0&&ye(x)}ye(f),a+=p,++l}return r}),c.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=ae(r[c],a),ye(u)}return Cs(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nb(s){P(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function Uu(s,t,e){return s==null?[null]:Array.isArray(s)?s.map(n=>Oa(n,t,e-t)):Oa(s,t,e-t)}function Dw(s,t){return ut(()=>s==null?null:Array.isArray(s)?s.map(e=>Dw(e,t)):OM(s,t.dtype==="int32"?t:Ht(t,"int32")))}function Rb(s,t){const e=[];let n=0,i=null;for(;n<s;)i=n+t,i>=s&&(i=s),e.push([n,i]),n=i;return e}async function O7(s,t,e,n,i,r,o,a,l,c,u,h,d,f,p){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),p!=null&&(g=!0,f==null))throw new Z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=s.checkNumSamples(e,i,f,"steps_per_epoch");let x;m!=null&&(x=nr(0,m)),o==null&&(o=1);const{callbackList:b,history:v}=tk(a,o,r,d,m,f,i,g,h);b.setModel(s),s.history=v,await b.onTrainBegin(),s.stopTraining_=!1;for(let y=d;y<r;++y){await b.onEpochBegin(y);const w={};if(f!=null)throw new ge("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new ge("batch shuffling is not implemneted yet");u&&eV(x);const S=Ps(x),C=Rb(m,i);for(let _=0;_<C.length;++_){const T={};if(await b.onBatchBegin(_,T),ut(()=>{const I=C[_][0],A=C[_][1],D=Oa(S,I,A-I);T.batch=_,T.size=A-I;const k=Dw(e,D),M=t(k);for(let E=0;E<n.length;++E){const N=n[E],O=M[E];T[N]=O,$r(O)}if(_===C.length-1&&g){const E=s.testLoop(l,c,i);for(let N=0;N<n.length;++N){const O=n[N],L=E[N];$r(L),w["val_"+O]=L}}}),await b.onBatchEnd(_,T),JM(T),s.stopTraining_)break}S.dispose()}if(await b.onEpochEnd(y,w),s.stopTraining_)break}return await b.onTrainEnd(),await s.history.syncData(),s.history}async function z7(s,t,e,n={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let i,r,o,a,l,c,u,h,d;try{const f=n.batchSize==null?32:n.batchSize;Nb(f);const p=!1,g=await s.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,f);i=g[0],r=g[1],d=g[2];let m=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)l=n.validationData[0],c=n.validationData[1];else throw n.validationData.length===3?new ge("validationData including sample weights is not supported yet."):new Z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);const T=!0,I=await s.standardizeUserData(l,c,null,null,T,f);u=I[0],h=I[1],x=u.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;const T=Math.floor(i[0].shape[0]*(1-n.validationSplit)),I=i[0].shape[0];u=Uu(i,T,I),o=i,i=Uu(i,0,T),h=Uu(r,T,I),a=r,r=Uu(r,0,T),x=u.concat(h)}else n.validationSteps!=null&&(m=!0);const b=i.concat(r).concat(d);s.checkTrainableWeightsConsistency();const v=s.makeTrainFunction(),y=s.getDedupedMetricsNames();let w,S;m?(s.makeTestFunction(),w=s.testFunction,S=y.slice().concat(y.map(T=>"val_"+T))):(w=null,x=[],S=y.slice());const C=QM(n.callbacks,n.yieldEvery);return await O7(s,v,b,y,f,n.epochs,n.verbose,C,w,x,n.shuffle,S,n.initialEpoch,null,null)}finally{s.isTraining=!1,Hi(i,t),Hi(r,e),Hi(o,t),Hi(a,e),Hi(u,l),Hi(h,c),d!=null&&ye(d)}}function hk(s){const t=[];s instanceof _n&&(s=[s]);for(let e=0;e<s.length;++e){const n=s[e];if(n.rank===1)t.push(zd(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Hi(s,t){if(s==null)return;const e=[];if(t instanceof _n)e.push(t.id);else if(Array.isArray(t))t.forEach(i=>e.push(i.id));else if(t!=null)for(const i in t){const r=t[i];e.push(r.id)}const n=[];if(s instanceof _n)e.indexOf(s.id)===-1&&n.push(s);else if(Array.isArray(s))s.forEach(i=>{e.indexOf(i.id)===-1&&n.push(i)});else if(s!=null)for(const i in s){const r=s[i];e.indexOf(r.id)===-1&&n.push(r)}n.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function B7(s){return s instanceof _n}function Db(s){return Array.isArray(s)}function $C(s){return!B7(s)&&!Db(s)}function LC(s,t,e,n=!0,i=""){if(t==null||t.length===0){if(s!=null){let o=!1;if(Db(s)&&s.length>0)o=!0;else if($C(s)){for(const a in s)if(s.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new Z(`Error when checking model ${i} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(o=>null);let r;if($C(s)){s=s,r=[];for(const o of t){if(s[o]==null)throw new Z(`No data provided for "${o}". Need data for each key in: ${t}`);r.push(s[o])}}else if(Db(s)){if(s=s,s.length!==t.length)throw new Z(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);r=s}else{if(s=s,t.length>1)throw new Z(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);r=[s]}if(r=hk(r),e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new Z(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u>=0&&c!==u)throw new Z(`${i} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function U7(s,t,e){const n=zo(s.map(r=>r.shape[0]));n.sort();const i=zo(t.map(r=>r.shape[0]));if(i.sort(),n.length>1)throw new Z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(r=>r.shape))}`);if(i.length>1)throw new Z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(n.length>0&&i.length>0&&!Fe(n,i))throw new Z(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${i[0]} target sample(s).`)}function V7(s,t,e){const n=[qg,jg,xh];for(let i=0;i<s.length;++i){const r=s[i],o=t[i],a=e[i];if(o!=null){if(o===xh&&r.shape[r.shape.length-1]===1)throw new Z(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(o)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new Z(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function FC(s,t,e,n=!0,i=""){let r;if(Array.isArray(s)){if(s.length!==t.length)throw new Z(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);r=s}else{if(t.length>1)throw new Z(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);r=[s]}if(e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new Z(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u!==c)throw new Z(`Error when checking ${i}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function W7(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(n=>[]);let e;if(typeof s=="string"||typeof s=="function")e=[s];else if(Array.isArray(s)||typeof s=="object")e=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(e))return t.map(n=>e);{const n=[];for(const i of t){let r=e.hasOwnProperty(i)?e[i]:[];Array.isArray(r)||(r=[r]),n.push(r)}return n}}const G7="layers-model";class vc extends Vi{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");T7(this,t,e,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=C7(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof na))throw new Z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new Z(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),e.push(wx(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>wx(a))}else{const o=wx(t.loss);this.outputs.forEach(a=>{e.push(o)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Pa("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const i=W7(t.metrics,this.outputNames),r=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};Pa("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=i[o];(c=>{const u="";let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===jg?["accuracy","acc"].indexOf(p)!==-1?d=nk:["crossentropy","ce"].indexOf(p)!==-1&&(d=p7):this.lossFunctions[o]===Xp?["accuracy","acc"].indexOf(p)!==-1?d=m7:["crossentropy","ce"].indexOf(p)!==-1&&(d=rk):["accuracy","acc"].indexOf(p)!==-1?d=sk:["crossentropy","ce"].indexOf(p)!==-1&&(d=ik);let x;["accuracy","acc"].indexOf(p)!==-1?x="acc":["crossentropy","ce"].indexOf(p)!==-1&&(x="ce"),f=d,h=u+x}else f=S7(p),h=u+Zf(p);let g;Pa(h,()=>{g=f}),r(o,h,g)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const i=n.batchSize==null?32:n.batchSize;Nb(i);const r=!0,o=this.standardizeUserDataXY(t,e,r,i);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,i,n.verbose,n.steps);return Cs(c)}finally{Hi(o[0],t),Hi(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),P7(this,t,e)}checkNumSamples(t,e,n,i="steps"){let r;if(n!=null){if(r=null,e!=null)throw new Z(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new Z(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new Z("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),i=n?e:[e],r=this.retrieveSymbolicTensors(i),o=new No;if(t instanceof _n&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Z(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new Z(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=Bu(r,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=rl(null,t.length);let n=t.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],o=r.map(a=>a.name);for(let a=0;a<t.length;++a){const l=o.indexOf(t[a]);if(l!==-1&&(e[a]=r[l],n--),n===0)break}if(n===0)break}if(n>0){const i=[];throw e.forEach((r,o)=>{r==null&&i.push(t[o])}),new Z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return e}predictLoop(t,e=32,n=!1){return ut(()=>{const i=this.checkNumSamples(t);if(n)throw new ge("Verbose predictLoop() is not implemented yet.");const r=Rb(i,e),o=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)ut(()=>{const c=r[a][0],u=r[a][1],h=Uu(t,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new No(d);return Bu(this.outputs,f)}).forEach((c,u)=>o[u].push(c));return Cs(o.map(a=>as(a,0)))})}predict(t,e={}){const n=hk(t);FC(n,this.inputNames,this.feedInputShapes,!1);try{const i=e.batchSize==null?32:e.batchSize;return Nb(i),this.predictLoop(n,i)}finally{Hi(n,t)}}predictOnBatch(t){FC(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,i){if(this.optimizer_==null)throw new Si("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===Xp?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(t=LC(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=LC(e,this.feedOutputNames,r,!1,"target"),U7(t,e),V7(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&t[0].shape[0]%i!==0)throw new Z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,i,r=!0,o){const[a,l]=this.standardizeUserDataXY(t,e,r,o);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=lk(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await ck(l[h],null,u[h]))}return[a,l,c]}testLoop(t,e,n,i=0,r){return ut(()=>{const o=this.checkNumSamples(e,n,r,"steps"),a=[];if(i>0)throw new ge("Verbose mode is not implemented yet.");if(r!=null)throw new ge("steps mode in testLoop() is not implemented yet");{const l=Rb(o,n),c=Ps(nr(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=Oa(c,h,d-h),p=Dw(e,f),g=t(p);if(u===0)for(let m=0;m<g.length;++m)a.push(de(0));for(let m=0;m<g.length;++m){const x=g[m];a[m]=$t(a[m],K(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=ae(a[u],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const i=t[n];let r=i;if(vC(t,i)>1){const o=vC(t.slice(0,n),i);r+=`_${o}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:n[g]});const d=new No(h),f=Bu(this.outputs,d,{training:!0});let p;for(let g=0;g<this.lossFunctions.length;++g){const m=this.lossFunctions[g];let x=m(i[g],f[g]);r[g]!=null&&(x=N7(x,r[g]));const b=xn(x);e.push(b),g===0?p=x:p=$t(p,x)}for(let g=0;g<this.metricsTensors.length;++g){let m;if(this.outputs.length>1&&g<this.outputs.length)m=e[g];else{const x=this.metricsTensors[g][0],b=this.metricsTensors[g][1];m=xn(x(i[b],f[b]))}$r(m),o.push(m)}return p=xn(p),this.calculateLosses().forEach(g=>{p=$t(p,g)}),p},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(o)}}makeTestFunction(){this.testFunction=t=>ut(()=>{const e=[];let n;const i=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:i[c]});const a=new No(o),l=Bu(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=xn(u(r[c],l[c]));c===0?n=h:n=$t(n,h),e.push(n)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=xn(u(r[h],l[h]));e.push(d)}return e})}async fit(t,e,n={}){return z7(this,t,e,n)}async fitDataset(t,e){return $7(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),i=n[0],r=n[1],a=this.makeTrainFunction()(i.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return ye(a),Hi(n[0],t),Hi(n[1],e),Cs(l)}getNamedWeights(t){const e=[],n=t!=null&&t.trainableOnly,i=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<i.length;++o)n&&!i[o].trainable||e.push({name:i[o].originalName,tensor:r[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Pp().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Pp().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=eo(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>eo(e))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const i of e)if(typeof n[i]=="string")t[i]=eo(n[i]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[eo(Zf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>eo(Zf(t)));{const t={};for(const e in this.metrics)t[e]=eo(Zf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Jp(t.optimizer_config),n=kr(e);let i;if(typeof t.loss=="string")i=Sa(t.loss);else if(Array.isArray(t.loss))i=t.loss.map(o=>Sa(o));else if(t.loss!=null){i={};for(const o in t.loss)i[o]=Sa(t.loss[o])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(o=>Sa(o));else if(t.metrics!=null){r={};for(const o in t.metrics)r[o]=Sa(t.metrics[o])}this.compile({loss:i,metrics:r,optimizer:n})}async save(t,e){if(typeof t=="string"){const c=QV(t);if(c.length===0)throw new Z(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new Z(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new Z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await eC(this.getNamedWeights(e)),i=!1,r=null,a={modelTopology:this.toJSON(r,i),format:G7,generatedBy:`TensorFlow.js tfjs-layers v${ak}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await eC(await this.optimizer.getWeights(),c);n.specs.push(...h),n.data=ZI([n.data,u])}return this.userDefinedMetadata!=null&&(NC(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){NC(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}vc.className="Model";At(vc);class dk extends vc{}dk.className="Functional";At(dk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function H7(s,t){if(t==null&&(t={}),typeof s=="string"){const e=tW(s,t);if(e.length===0)e.push(MW(s,t));else if(e.length>1)throw new Z(`Found more than one (${e.length}) load handlers for URL '${s}'`);s=e[0]}return q7(s,void 0,t)}async function q7(s,t,e){if(e==null&&(e={}),s.load==null)throw new Z("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const n=await s.load();let i=n.modelTopology;i.model_config!=null&&(i=i.model_config);const r=e.strict==null?!0:e.strict,o=n.weightData!=null&&n.weightSpecs!=null&&r,a=kr(Jp(i),t,o),l=n.trainingConfig;if(l!=null&&a.loadTrainingConfig(l),n.userDefinedMetadata!=null&&a.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new Z("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=j7(n.weightData,n.weightSpecs);a.loadWeights(c,r),a.optimizer!=null&&u.length>0&&await a.optimizer.setWeights(u),ye(c),ye(u.map(h=>h.tensor))}return a}function j7(s,t){const e=VV(s,t),n={},i=[];return t.forEach(r=>{r.group==="optimizer"?i.push({name:r.name,tensor:e[r.name]}):n[r.name]=e[r.name]}),{modelWeights:n,optimizerWeights:i}}class zc extends vc{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Wg("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new Z(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof zc||t instanceof vc;let n;if(e){if(n=t,n.outputs.length!==1)throw new Z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new Z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new Z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=HX({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new Z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new Z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=jM(this.outputs[0])}this.inboundNodes=[],new Hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:rl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=t.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Pe(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new vc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Si("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Si("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Si("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Si("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},i=!1){let r,o={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new Z("Legacy serialization format not supported yet.");r=e}else P(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof zc))throw new ge(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=kr(l,void 0,i);i&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new Z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new Z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}zc.className="Sequential";At(zc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $b(s){return new zc(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ms extends iu{getConfig(){return{}}}class fk extends Ms{apply(t,e=1){return NX(t,e)}}fk.className="elu";At(fk);class pk extends Ms{apply(t){return WE(t)}}pk.className="selu";At(pk);class mk extends Ms{apply(t){return go(t)}}mk.className="relu";At(mk);class gk extends Ms{apply(t){return ut(()=>Pg(6,go(t)))}}gk.className="relu6";At(gk);class xk extends Ms{apply(t){return t}}xk.className="linear";At(xk);class bk extends Ms{apply(t){return ru(t)}}bk.className="sigmoid";At(bk);class yk extends Ms{apply(t){return DX(t)}}yk.className="hardSigmoid";At(yk);class vk extends Ms{apply(t){return Rd(t)}}vk.className="softplus";At(vk);class wk extends Ms{apply(t){return RX(t)}}wk.className="softsign";At(wk);class _k extends Ms{apply(t){return yv(t)}}_k.className="tanh";At(_k);class $w extends Ms{apply(t,e=-1){return Pv(t,e)}}$w.className="softmax";At($w);class Sk extends Ms{apply(t,e=-1){return kE(t,e)}}Sk.className="logSoftmax";At(Sk);class Ck extends Ms{apply(t,e=1){return ut(()=>K(ru(K(t,e)),t))}}Ck.className="swish";At(Ck);class Tk extends Ms{apply(t){return ut(()=>K(t,yv(Rd(t))))}}Tk.className="mish";At(Tk);function Go(s){return s.getClassName()}function _x(s,t={}){return Od(s,bi.getMap().classNameMap,t,"activation")}function Ho(s){if(s==null){const t={};return t.className="linear",t.config={},_x(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},_x(t)}else return s instanceof Ms?s:_x(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function X7(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class Ik extends iu{}class Ek extends Ik{constructor(t){super(),X7(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return ut(()=>{let e=On([1]);return this.hasL1&&(e=$t(e,ne(K(this.l1,Fn(t))))),this.hasL2&&(e=$t(e,ne(K(this.l2,Bd(t))))),et(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Ek.className="L1L2";At(Ek);const PC={l1l2:"L1L2"};function He(s){return yw(s)}function OC(s,t={}){return Od(s,bi.getMap().classNameMap,t,"regularizer")}function rn(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in PC?PC[s]:s,config:{}};return OC(e)}else return s instanceof Ik?s:OC(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mk extends Ee{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=fe(t);let n=go(t);return this.maxValue!=null&&(n=ei(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Mk.className="ReLU";At(Mk);class kk extends Ee{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=fe(t);return Iv(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}kk.className="LeakyReLU";At(kk);class Ak extends Ee{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=sn(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=rn(t.alphaRegularizer),this.alphaConstraint=Rn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new Z(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Pe(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(this.sharedAxes!=null)for(let i=1;i<t.length;++i)n[i]=t[i];this.inputSpec=[new An({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=fe(t),Dv(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ln(this.alphaInitializer),alphaRegularizer:He(this.alphaRegularizer),alphaConstraint:Nn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Ak.className="PReLU";At(Ak);class Nk extends Ee{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new ge(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=fe(t);return $g(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Nk.className="ELU";At(Nk);class Rk extends Ee{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const n=fe(t);return K(n,Ht(oi(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Rk.className="ThresholdedReLU";At(Rk);class Dk extends Ee{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new $w().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const n=fe(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Dk.className="Softmax";At(Dk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wc(s,t,e){if(typeof s=="number")return rl(s,t);if(s.length!==t)throw new Z(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let n=0;n<t;++n){const i=s[n];if(!EX(i))throw new Z(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${i}`)}return s}function Ji(s,t,e,n,i=1){if(s==null)return s;const r=t+(t-1)*(i-1);let o;return e==="same"?o=s:o=s-r+1,Math.floor((o+n-1)/n)}function _r(s,t,e,n){if(s==null)return null;if(n==="valid")s=s*t+Wo([e-t,0]);else if(n==="same")s=s*t;else throw new Z(`Unsupport padding mode: ${n}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lw(s,t){return ut(()=>(wn(t),t==="channelsFirst"?Ne(s,[0,2,3,1]):s))}function $k(s,t){return ut(()=>(wn(t),t==="channelsFirst"?Ne(s,[0,2,3,4,1]):s))}function K7(s,t,e,n=1,i="valid",r,o=1){return ut(()=>{if(r==null&&(r=sr()),wn(r),s.shape.length!==3)throw new Z(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new Z(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new Z(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(s=Ne(s,[0,2,1])),i==="causal")throw new ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=vE(s,t,n,i==="same"?"same":"valid","NWC",o);return e!=null&&(a=lr(a,e)),a})}function zC(s,t,e,n=[1,1],i="valid",r,o,a=null){return ut(()=>{if(r==null&&(r=sr()),wn(r),s.rank!==3&&s.rank!==4)throw new Z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new Z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let l=Lw(s,r);if(i==="causal")throw new ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=G6({x:l,filter:t,strides:n,pad:i==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:a}),r==="channelsFirst"&&(l=Ne(l,[0,3,1,2])),l})}function Y7(s,t,e,n=[1,1,1],i="valid",r,o){return ut(()=>{if(r==null&&(r=sr()),wn(r),s.rank!==4&&s.rank!==5)throw new Z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new Z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let a=$k(s,r);if(i==="causal")throw new ge("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=iH(a,t,n,i==="same"?"same":"valid","NDHWC",o),e!=null&&(a=lr(a,e)),r==="channelsFirst"&&(a=Ne(a,[0,4,1,2,3])),a})}class Xg extends Ee{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Xg.verifyArgs(e),this.rank=t,zn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ge(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=wc(e.kernelSize,t,"kernelSize"),this.strides=wc(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,ai(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,wn(this.dataFormat),this.activation=Ho(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=sn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Rn(e.biasConstraint),this.biasRegularizer=rn(e.biasRegularizer),this.activityRegularizer=rn(e.activityRegularizer),this.dilationRate=wc(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new Z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new Z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new Z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(wr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!vw(t.kernelSize,"number",1,3))throw new Z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Go(this.activation),useBias:this.useBias,biasInitializer:ln(this.biasInitializer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),biasConstraint:Nn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class lu extends Xg{constructor(t,e){super(t,e),this.kernel=null,lu.verifyArgs(e),this.filters=e.filters,zn(this.filters,"filters"),this.kernelInitializer=sn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Rn(e.kernelConstraint),this.kernelRegularizer=rn(e.kernelRegularizer)}build(t){t=Pe(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Z(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],i=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return ut(()=>{t=fe(t);let n;const i=this.bias==null?null:this.bias.read(),r=RM(this.activation.getClassName());if(r!=null&&this.rank===2)n=zC(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=K7(t,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=zC(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=Y7(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ge("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Pe(t);const e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const o=Ji(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(o)}let i=[t[0]];return this.dataFormat==="channelsLast"?(i=i.concat(e),i.push(this.filters)):(i.push(this.filters),i=i.concat(e)),i}getConfig(){const t={filters:this.filters,kernelInitializer:ln(this.kernelInitializer),kernelRegularizer:He(this.kernelRegularizer),kernelConstraint:Nn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new Z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Gd extends lu{constructor(t){super(2,t),Gd.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!vw(t.kernelSize,"number",1,2))throw new Z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Gd.className="Conv2D";At(Gd);class Hd extends lu{constructor(t){super(3,t),Hd.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new Z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Hd.className="Conv3D";At(Hd);class Lk extends Gd{constructor(t){if(super(t),this.inputSpec=[new An({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new Z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Pe(t),t.length!==4)throw new Z("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Z("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new An({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return ut(()=>{let n=fe(t);if(n.shape.length!==4)throw new Z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=i[o],c=i[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=_r(l,d,u,this.padding),g=_r(c,f,h,this.padding),m=[r,p,g,this.filters];this.dataFormat!=="channelsLast"&&(n=Ne(n,[0,2,3,1]));let x=wE(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ne(x,[0,3,1,2])),this.bias!=null&&(x=lr(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Pe(t);const e=t.slice();let n,i,r;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3):(n=3,i=1,r=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[i]=_r(e[i],l,o,this.padding),e[r]=_r(e[r],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Lk.className="Conv2DTranspose";At(Lk);class Fk extends Hd{constructor(t){if(super(t),this.inputSpec=[new An({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new Z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Pe(t),t.length!==5)throw new Z("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new Z("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new An({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return ut(()=>{let n=fe(t);if(n.shape.length!==5)throw new Z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=i[l],u=i[o],h=i[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],g=this.strides[0],m=this.strides[1],x=this.strides[2],b=_r(c,g,d,this.padding),v=_r(u,m,f,this.padding),y=_r(h,x,p,this.padding),w=[r,b,v,y,this.filters];this.dataFormat!=="channelsLast"&&(n=Ne(n,[0,2,3,4,1]));let S=aH(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Ne(S,[0,4,1,2,3])),this.bias!==null&&(S=lr(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=Pe(t);const e=t.slice();let n,i,r,o;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3,o=4):(n=4,i=1,r=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return e[n]=this.filters,e[i]=_r(e[i],u,a,this.padding),e[r]=_r(e[r],h,l,this.padding),e[o]=_r(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Fk.className="Conv3DTranspose";At(Fk);class Pk extends lu{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new Z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new Z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new Z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=sn(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=rn(e.depthwiseRegularizer),this.depthwiseConstraint=Rn(e.depthwiseConstraint),this.pointwiseInitializer=sn(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=rn(e.pointwiseRegularizer),this.pointwiseConstraint=Rn(e.pointwiseConstraint)}build(t){if(t=Pe(t),t.length<this.rank+2)throw new Z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new Z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],i=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new An({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return ut(()=>{t=fe(t);let n;if(this.rank===1)throw new ge("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Ne(t,[0,2,3,1])),n=GE(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=lr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ne(n,[0,3,1,2])),n})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ln(this.depthwiseInitializer),t.pointwiseInitializer=ln(this.pointwiseInitializer),t.depthwiseRegularizer=He(this.depthwiseRegularizer),t.pointwiseRegularizer=He(this.pointwiseRegularizer),t.depthwiseConstraint=Nn(this.depthwiseConstraint),t.pointwiseConstraint=Nn(this.pointwiseConstraint),t}}Pk.className="SeparableConv";class Ok extends Pk{constructor(t){super(2,t)}}Ok.className="SeparableConv2D";At(Ok);class Kg extends lu{constructor(t){super(1,t),Kg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!vw(t.kernelSize,"number",1,1))throw new Z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Kg.className="Conv1D";At(Kg);class zk extends Ee{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return ut(()=>{if(t=fe(t),this.dataFormat==="channelsLast"){const n=Yf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Yf(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const n=Yf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Yf(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}zk.className="Cropping2D";At(zk);class Bk extends Ee{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,wn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,CX(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,n]}else{const e=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return ut(()=>{let n=fe(t);const i=n.shape;if(this.dataFormat==="channelsFirst"){n=Ne(n,[0,2,3,1]);const r=this.size[0]*i[2],o=this.size[1]*i[3],a=this.interpolation==="nearest"?uc.resizeNearestNeighbor(n,[r,o]):uc.resizeBilinear(n,[r,o]);return Ne(a,[0,3,1,2])}else{const r=this.size[0]*i[1],o=this.size[1]*i[2];return this.interpolation==="nearest"?uc.resizeNearestNeighbor(n,[r,o]):uc.resizeBilinear(n,[r,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Bk.className="UpSampling2D";At(Bk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Z7(s,t,e=[1,1],n="valid",i,r){return ut(()=>{i==null&&(i=sr()),wn(i);let o=Lw(s,i);if(s.rank!==4)throw new Z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new Z(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Sv(o,t,e,n==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(o=Ne(o,[0,3,1,2])),o})}class Uk extends Xg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=sn(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Rn(t.depthwiseConstraint),this.depthwiseRegularizer=rn(t.depthwiseRegularizer)}build(t){if(t=Pe(t),t.length<4)throw new Z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new Z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],i=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ut(()=>{t=fe(t);let n=Z7(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=lr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Pe(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Ji(e,this.kernelSize[0],this.padding,this.strides[0]),o=Ji(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],i,r,o]:[t[0],r,o,i]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ln(this.depthwiseInitializer),t.depthwiseRegularizer=He(this.depthwiseRegularizer),t.depthwiseConstraint=Nn(this.depthwiseRegularizer),t}}Uk.className="DepthwiseConv2D";At(Uk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vk(s,t,e,n){if(Array.isArray(s)){if(t!=null||e!=null)throw new Z("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=s.slice(s.length-n,s.length),s=s.slice(0,s.length-n)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return t=i(t),e=i(e),{inputs:s,initialState:t,constants:e}}function Wk(s,t,e,n=!1,i,r,o=!1,a=!1){return ut(()=>{const l=t.shape.length;if(l<3)throw new Z(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(nr(2,l));if(t=Ne(t,c),r!=null)throw new ge("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Ht(Ht(i,"bool"),"float32"),i.rank===l-1&&(i=Rs(i,-1)),i=Ne(i,c)),n&&(t=nl(t,0),i!=null&&(i=nl(i,0)));const u=[];let h,d=e;const f=t.shape[0],p=Pc(t);let g;i!=null&&(g=Pc(i));for(let x=0;x<f;++x){const b=p[x],v=ut(()=>s(b,d));if(i==null)h=v[0],d=v[1];else{const y=ut(()=>{const w=g[x],S=se(Mi(w),w),C=$t(K(v[0],w),K(d[0],S)),_=d.map((T,I)=>$t(K(v[1][I],w),K(T,S)));return{output:C,newStates:_}});h=y.output,d=y.newStates}a&&u.push(h)}let m;return a&&(m=sl(u,1)),[h,m,d]})}class sa extends Ee{constructor(t){super(t);let e;if(t.cell==null)throw new Z("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Ow({cells:t.cell}):e=t.cell,e.stateSize==null)throw new Z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new An({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return nr(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Eb(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let i;if(this.returnSequences?i=[t[0],t[1],n]:i=[t[0],n],this.returnState){const r=[];for(const o of e)r.push([t[0],o]);return[i].concat(r)}else return i}computeMask(t,e){return ut(()=>{Array.isArray(e)&&(e=e[0]);const n=this.returnSequences?e:null;if(this.returnState){const i=this.states.map(r=>null);return[n].concat(i)}else return n})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new ge("Constants support is not implemented in RNN yet.");Eb(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new An({shape:[e,null,...n]});const i=[t[0]].concat(t.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Fe(this.stateSpec.map(o=>o.shape[o.shape.length-1]),r))throw new Z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(o=>new An({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){ut(()=>{if(!this.stateful)throw new vr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(n==null)throw new Z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>On([n,i])):this.states_=[On([n,this.cell.stateSize])];else if(t==null)ye(this.states_),this.keptStates!=null&&(ye(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>On([n,i])):this.states_[0]=On([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):ye(this.states_);for(let i=0;i<this.states_.length;++i){const r=t[i],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[n,o];if(!Fe(r.shape,a))throw new Z(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>$r(i.clone()))})}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=Vk(t,n,i,this.numConstants);t=r.inputs,n=r.initialState,i=r.constants;let o=[],a=[];if(n!=null){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const c of n)this.stateSpec.push(new An({shape:c.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(e.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof Tr){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return ut(()=>{const n=e==null?null:e.mask,i=e==null?null:e.training;let r=e==null?null:e.initialState;t=fe(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new Z(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},c=Wk((p,g)=>{const m=this.cell.call([p].concat(g),a);return[m[0],m.slice(1)]},t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,i);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(t){return ut(()=>{let e=On(t.shape);return e=ne(e,[1,2]),e=zd(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Tb(e,[1,n]):e):this.cell.stateSize>1?[Tb(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===sa.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const i=e.cell,r=kr(i,n);return new t(Object.assign(e,{cell:r}))}}sa.className="RNN";At(sa);class Yg extends Ee{}class Fw extends Yg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,zn(this.units,"units"),this.activation=Ho(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rn(t.kernelRegularizer),this.recurrentRegularizer=rn(t.recurrentRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.kernelConstraint=Rn(t.kernelConstraint),this.recurrentConstraint=Rn(t.recurrentConstraint),this.biasConstraint=Rn(t.biasConstraint),this.dropout=Oc([1,Wo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Oc([1,Wo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Pe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ut(()=>{if(t=t,t.length!==2)throw new Z(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const i=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qo({ones:()=>Mi(t),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qo({ones:()=>Mi(n),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?r=Mr(K(t,o),this.kernel.read()):r=Mr(t,this.kernel.read()),this.bias!=null&&(r=lr(r,this.bias.read())),a!=null&&(n=K(n,a));let l=$t(r,Mr(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Go(this.activation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),recurrentInitializer:ln(this.recurrentInitializer),biasInitializer:ln(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:Nn(this.kernelConstraint),recurrentConstraint:Nn(this.recurrentConstraint),biasConstraint:Nn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Fw.className="SimpleRNNCell";At(Fw);class Gk extends sa{constructor(t){t.cell=new Fw(t),super(t)}call(t,e){return ut(()=>{this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return new t(e)}}Gk.className="SimpleRNN";At(Gk);class Pw extends Yg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Z("GRUCell does not support reset_after parameter set to true.");this.units=t.units,zn(this.units,"units"),this.activation=Ho(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ho(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rn(t.kernelRegularizer),this.recurrentRegularizer=rn(t.recurrentRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.kernelConstraint=Rn(t.kernelConstraint),this.recurrentConstraint=Rn(t.recurrentConstraint),this.biasConstraint=Rn(t.biasConstraint),this.dropout=Oc([1,Wo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Oc([1,Wo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Pe(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ut(()=>{if(t=t,t.length!==2)throw new Z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training==null?!1:e.training;let i=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qo({ones:()=>Mi(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qo({ones:()=>Mi(i),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=K(t,r[0]));let u=Mr(t,this.kernel.read());this.useBias&&(u=lr(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=K(i,o[0]));const h=this.recurrentKernel.read(),[d,f]=ti(h,[2*this.units,this.units],h.rank-1),p=Mr(i,d),[g,m,x]=ti(u,3,u.rank-1),[b,v]=ti(p,2,p.rank-1);a=this.recurrentActivation.apply($t(g,b)),l=this.recurrentActivation.apply($t(m,v));const y=Mr(K(l,i),f);c=this.activation.apply($t(x,y));const w=$t(K(a,i),K($t(1,cn(a)),c));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Go(this.activation),recurrentActivation:Go(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),recurrentInitializer:ln(this.recurrentInitializer),biasInitializer:ln(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:Nn(this.kernelConstraint),recurrentConstraint:Nn(this.recurrentConstraint),biasConstraint:Nn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Pw.className="GRUCell";At(Pw);class Hk extends sa{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Pw(t),super(t)}call(t,e){return ut(()=>{this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Hk.className="GRU";At(Hk);class Zg extends Yg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,zn(this.units,"units"),this.activation=Ho(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ho(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=rn(t.kernelRegularizer),this.recurrentRegularizer=rn(t.recurrentRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.kernelConstraint=Rn(t.kernelConstraint),this.recurrentConstraint=Rn(t.recurrentConstraint),this.biasConstraint=Rn(t.biasConstraint),this.dropout=Oc([1,Wo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Oc([1,Wo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Pe(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,o=this.units;i=new(e=class extends $i{apply(l,c){const u=r.apply([o]),h=new _w().apply([o]),d=r.apply([o*2]);return _C(_C(u,h),d)}},e.className="CustomInit",e)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return ut(()=>{const n=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new Z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let i=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qo({ones:()=>Mi(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qo({ones:()=>Mi(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=K(t,o[0]));let d=Mr(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=K(i,a[0])),d=$t(d,Mr(i,this.recurrentKernel.read())),this.useBias&&(d=lr(d,this.bias.read()));const[f,p,g,m]=ti(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=$t(K(c,r),K(l,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const x=K(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Go(this.activation),recurrentActivation:Go(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),recurrentInitializer:ln(this.recurrentInitializer),biasInitializer:ln(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:Nn(this.kernelConstraint),recurrentConstraint:Nn(this.recurrentConstraint),biasConstraint:Nn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Zg.className="LSTMCell";At(Zg);class qk extends sa{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Zg(t),super(t)}call(t,e){return ut(()=>{this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}qk.className="LSTM";At(qk);class Ow extends Yg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return ut(()=>{t=t;let n=t.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(n.splice(0,a.stateSize.length)):i.push(n.splice(0,1));i.reverse();const r=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];n=i[a],a===0?o=[t[0]].concat(n):o=[o[0]].concat(n),o=l.call(o,e),r.push(o.slice(1))}n=[];for(const a of r.slice().reverse())n.push(...a);return[o[0]].concat(n)})}build(t){Eb(t)&&(t=t[0]),t=t;let e;this.cells.forEach((n,i)=>{Pa(`RNNCell_${i}`,()=>{n.build(t),Array.isArray(n.stateSize)?e=n.stateSize[0]:e=n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),i={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),i)}static fromConfig(t,e,n={}){const i=[];for(const r of e.cells)i.push(kr(r,n));return new t({cells:i})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Mb(t)}setWeights(t){const e=[];for(const n of this.cells){const i=n.weights.length,r=t.splice(i);for(let o=0;o<n.weights.length;++o)e.push([n.weights[o],r[o]])}kw(e)}}Ow.className="StackedRNNCells";At(Ow);function qo(s){const{ones:t,rate:e,training:n=!1,count:i=1,dropoutFunc:r}=s,o=()=>r!=null?r(t(),e):zM(t(),e),a=()=>Ud(o,t,n);return!i||i<=1?$r(a().clone()):Array(i).fill(void 0).map(a).map(c=>$r(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var J7=globalThis&&globalThis.__rest||function(s,t){var e={};for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&t.indexOf(n)<0&&(e[n]=s[n]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,n=Object.getOwnPropertySymbols(s);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(s,n[i])&&(e[n[i]]=s[n[i]]);return e};class jk extends sa{constructor(t){if(t.unroll)throw new ge("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new ge("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new An({ndim:5})]}call(t,e){return ut(()=>{if(this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Z("ConvRNN2D cell does not support constants");const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return ut(()=>{const{stateSize:e}=this.cell,n=t.shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)],o=On(r);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){ut(()=>{if(!this.stateful)throw new vr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)];if(n[0]==null)throw new Z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>On(r)):this.states_=[On(r)];else if(t==null)ye(this.states_),this.keptStates!=null&&(ye(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>On(r)):this.states_[0]=On(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):ye(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=r;if(!Fe(l.shape,c))throw new Z(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>$r(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:i,padding:r,strides:o,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=Ji(c,i[0],r,o[0],a[0]),d=Ji(u,i[1],r,o[1],a[1]);return[...t.slice(0,2),...l?[n,h,d]:[h,d,n]]}}jk.className="ConvRNN2D";class zw extends Zg{constructor(t){const{filters:e,kernelSize:n,strides:i,padding:r,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,zn(this.filters,"filters"),this.kernelSize=wc(n,2,"kernelSize"),this.kernelSize.forEach(l=>zn(l,"kernelSize")),this.strides=wc(i||1,2,"strides"),this.strides.forEach(l=>zn(l,"strides")),this.padding=r||"valid",ai(this.padding),this.dataFormat=o||"channelsLast",wn(this.dataFormat),this.dilationRate=wc(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>zn(l,"dilationRate"))}build(t){var e;t=Pe(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new Z(`The channel dimension of the input should be defined. Found ${t[n]}`);const i=t[n],r=4,o=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends $i{apply(d,f){const p=c.apply([u]),g=ta([u]),m=c.apply([u*2]);return ww([p,g,m])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return ut(()=>{if(t.length!==3)throw new Z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,i=t[0],r=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qo({ones:()=>Mi(i),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(W,q,H)=>!q||!q[H]?W:K(q[H],W);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),f=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qo({ones:()=>Mi(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let g=c(r,p,0),m=c(r,p,1),x=c(r,p,2),b=c(r,p,3);const v=3,[y,w,S,C]=ti(this.kernel.read(),a,v),[_,T,I,A]=this.useBias?ti(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,_,this.padding),h=this.inputConv(h,w,T,this.padding),d=this.inputConv(d,S,I,this.padding),f=this.inputConv(f,C,A,this.padding);const[D,k,M,E]=ti(this.recurrentKernel.read(),a,v);g=this.recurrentConv(g,D),m=this.recurrentConv(m,k),x=this.recurrentConv(x,M),b=this.recurrentConv(b,E);const N=this.recurrentActivation.apply($t(u,g)),O=this.recurrentActivation.apply($t(h,m)),L=$t(K(O,o),K(N,this.activation.apply($t(d,x)))),$=K(this.recurrentActivation.apply($t(f,b)),this.activation.apply(L));return[$,$,L]})}getConfig(){const t=super.getConfig(),e=J7(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),n)}inputConv(t,e,n,i){const r=tl(t,e,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?lr(r,n,this.dataFormat):r}recurrentConv(t,e){return tl(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}zw.className="ConvLSTM2DCell";At(zw);class Xk extends jk{constructor(t){const e=new zw(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Xk.className="ConvLSTM2D";At(Xk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jg extends Ee{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,n=[];for(let i=0;i<this.noiseShape.length;++i)n.push(this.noiseShape[i]==null?e[i]:this.noiseShape[i]);return n}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t);if(0<this.rate&&this.rate<1){const i=e.training==null?!1:e.training,r=this.getNoiseShape(n);return Ud(()=>zM(n,this.rate,r,this.seed),()=>n,i)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Jg.className="Dropout";At(Jg);class Kk extends Jg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Kk.className="SpatialDropout1D";At(Kk);class Bw extends Ee{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,zn(this.units,"units"),this.activation=Ho(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Rn(t.kernelConstraint),this.biasConstraint=Rn(t.biasConstraint),this.kernelRegularizer=rn(t.kernelRegularizer),this.biasRegularizer=rn(t.biasRegularizer),this.activityRegularizer=rn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Pe(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Pe(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t),i=RM(this.activation.getClassName());let r;return i!=null?r=Mr(n,this.kernel.read(),i,this.bias?this.bias.read():null):(r=Mr(n,this.kernel.read()),this.bias!=null&&(r=lr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Go(this.activation),useBias:this.useBias,kernelInitializer:ln(this.kernelInitializer),biasInitializer:ln(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:Nn(this.kernelConstraint),biasConstraint:Nn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Bw.className="Dense";At(Bw);class Yk extends Ee{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Pe(t);for(const e of t.slice(1))if(e==null)throw new Z(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Bo(t,1)]}call(t,e){return ut(()=>{this.invokeCallHook(t,e);let n=fe(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){const i=[0];for(let r=2;r<n.rank;++r)i.push(r);i.push(1),n=Ne(n,i)}return AX(n)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Yk.className="Flatten";At(Yk);class Zk extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ho(t.activation)}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t);return this.activation.apply(n)})}getConfig(){const t={activation:Go(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Zk.className="Activation";At(Zk);class Jk extends Ee{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return ut(()=>(t=fe(t),MX(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Jk.className="RepeatVector";At(Jk);class Qk extends Ee{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",i=e.slice();let r=1,o=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(o===null)o=l;else throw new Z("Can only specifiy one unknown dimension.");else r*=c}const a=Bo(t);if(o!==null){if(r===0||a%r!==0)throw new Z(n);i[o]=a/r}else if(a!==r)throw new Z(n);return i}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t),i=n.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return et(n,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Qk.className="Reshape";At(Qk);class tA extends Ee{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=nr(1,t.dims.length+1);if(!Fe(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new An({ndim:this.dims.length+1})]}computeOutputShape(t){t=Pe(t);const e=t.slice();return this.dims.forEach((n,i)=>{e[i+1]=t[n]}),e}call(t,e){return Ne(fe(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}tA.className="Permute";At(tA);class eA extends Ee{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=fe(t),i=-1;return bb(mh(n,this.maskValue),i)}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t),i=-1,r=!0,o=bb(mh(n,this.maskValue),i,r);return K(n,Ht(o,n.dtype))})}}eA.className="Masking";At(eA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nA extends Ee{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ze(t.inputLength))}this.inputDim=t.inputDim,zn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,zn(this.outputDim,"outputDim"),this.embeddingsInitializer=sn(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=rn(t.embeddingsRegularizer),this.activityRegularizer=rn(t.activityRegularizer),this.embeddingsConstraint=Rn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return ut(()=>this.maskZero?(t=fe(t),mh(t,Re(t))):null)}computeOutputShape(t){if(t=Pe(t),this.inputLength==null)return[...t,this.outputDim];const e=Ze(this.inputLength);if(e.length!==t.length-1)throw new Z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let i=0;i<e.length;++i){const r=e[i],o=t[i+1];if(r!=null&&o!=null&&r!==o)throw new Z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return ut(()=>{this.invokeCallHook(t,e);let n=fe(t);n.dtype!=="int32"&&(n=wl(n,"int32"));const i=OM(this.embeddings.read(),et(n,[n.size]));return et(i,Pe(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ln(this.embeddingsInitializer),embeddingsRegularizer:He(this.embeddingsRegularizer),activityRegularizer:He(this.activityRegularizer),embeddingsConstraint:Nn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}nA.className="Embedding";At(nA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _l extends Ee{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new ge}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const n=t.slice(0,t.length-e.length);for(let i=0;i<e.length;++i){const r=t[t.length-e.length+i],o=e[i];if(r==null||o==null||r<0||o<0)n.push(null);else if(r===1)n.push(o);else if(o===1)n.push(r);else{if(r!==o)throw new Z("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Pe(t)]),t=t,t.length<2)throw new Z(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=zo(e),e.length>1)throw new Z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}const i=t.map(r=>r.length);t.indexOf(null)===-1&&zo(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return ut(()=>{if(t=t,this.reshapeRequired){const n=[],i=t.map(r=>r.rank);if(i.indexOf(null)===-1){const r=Wo(i);for(let o of t){const a=o.rank;for(let l=0;l<r-a;++l)o=zd(o,1);n.push(o)}return this.mergeFunction(n)}else{let r=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=et(l,[h].concat(Bo(u.slice(1))));f=Ne(f,[1,0]),f=et(f,d),n.push(f),r=!0}else if(c>1){const u=nr(1,c).concat([0]);n.push(Ne(l,u)),r=!0}else n.push(l)}let o=this.mergeFunction(n);const a=o.rank;if(r){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=et(Ne(et(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(nr(0,a-1));o=Ne(o,l)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let i=1;i<t.length;++i){const r=t[i]==null?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);return n=zo(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return ut(()=>{if(e==null)return null;if(!Array.isArray(e))throw new Z("`mask` should be an Array");if(!Array.isArray(t))throw new Z("`inputs` should be an Array");if(e.length!==t.length)throw new Z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(i=>i==null))return null;e=e.map(i=>i==null?i:Rs(i,0));let n=e[0];for(let i=1;i<e.length-1;++i)n=lo(n,e[i]);return n})}}class sA extends _l{constructor(t){super(t)}mergeFunction(t){return ut(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=$t(e,t[n]);return e})}}sA.className="Add";At(sA);class iA extends _l{constructor(t){super(t)}mergeFunction(t){return ut(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=K(e,t[n]);return e})}}iA.className="Multiply";At(iA);class rA extends _l{constructor(t){super(t)}mergeFunction(t){return ut(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=$t(e,t[n]);return K(1/t.length,e)})}}rA.className="Average";At(rA);class oA extends _l{constructor(t){super(t)}mergeFunction(t){return ut(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Qo(e,t[n]);return e})}}oA.className="Maximum";At(oA);class aA extends _l{constructor(t){super(t)}mergeFunction(t){return ut(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Pg(e,t[n]);return e})}}aA.className="Minimum";At(aA);class lA extends _l{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new Z("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const i of t)if(i!=null){e=!1;break}if(e)return;const n=[];for(let i=0;i<t.length;++i){const r=t[i].slice();r.splice(this.axis,1);let o=!1;for(const a of n)if(Fe(a,r)){o=!0;break}o||n.push(r)}if(n.length>1)throw new Z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return ut(()=>ww(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new Z("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),i=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(n[i]==null||r[i]==null){n[i]=null;break}n[i]+=r[i]}return n}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new Z("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Z("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Z(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return ut(()=>{let n=!0;if(e.forEach(o=>{if(o!=null){n=!1;return}}),n)return null;const i=[];for(let o=0;o<t.length;++o)e[o]==null?i.push(Ht(Mi(t[o]),"bool")):e[o].rank<t[o].rank?i.push(Rs(e[o],-1)):i.push(e[o]);const r=as(i,this.axis);return yE(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}lA.className="Concatenate";At(lA);function Ru(s,t){for(;s<0;)s+=t;return s}function Q7(s,t,e){if(s.shape.length>3||t.shape.length>3)throw new ge("batchDot is not implemented for tensors of 4D or higher rank yet");if(P(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),P(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),s.dtype==="complex64"||t.dtype==="complex64")throw new ge("batchDot is not implemented for complex64-type Tensors yet.");const n=s.shape.length,i=t.shape.length;e==null&&(e=[n-1,i-2]);const r=e;return ut(()=>{let o;if(n>i){o=n-i;const l=[];for(let c=0;c<o;++c)l.push(1);t=et(t,t.shape.concat(l))}else if(i>n){o=i-n;const l=[];for(let c=0;c<o;++c)l.push(1);s=et(s,s.shape.concat(l))}else o=0;let a;if(s.shape.length===2&&t.shape.length===2)r[0]===r[1]?a=ne(K(s,t),r[0]):a=ne(K(Ne(s,[1,0]),t),r[1]);else{const l=r[0]!==s.shape.length-1,c=r[1]===t.shape.length-1;a=Le(s,t,l,c)}if(o>0){let l;n>i?l=n+i-3:l=n-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=Dd(a,c)}return a.shape.length===1&&(a=Rs(a,1)),a})}class cA extends _l{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){P(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new ge("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);if(e[i[0]]!==n[i[1]])throw new Z(`Dimension incompatibility: ${e[i[0]]} !== ${n[i[1]]}`)}mergeFunction(t){if(t.length!==2)throw new Z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],n=t[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,o)=>Ru(r,t[o].shape.length)):i=[Ru(this.axes,e.shape.length),Ru(this.axes,n.shape.length)],this.normalize&&(e=jp(e,i[0]),n=jp(n,i[1])),Q7(e,n,i)}interpretAxes(t,e){let n;return Array.isArray(this.axes)?n=this.axes:n=[Ru(this.axes,t.length),Ru(this.axes,e.length)],n}computeOutputShape(t){P(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new ge("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);e.splice(i[0],1),n.splice(i[1],1),n.splice(0,1);const r=e.concat(n);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}cA.className="Dot";At(cA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class uA extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t);return Ud(()=>$t(Gg(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}uA.className="GaussianNoise";At(uA);class hA extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ut(()=>{this.invokeCallHook(t,e);const n=fe(t);return this.rate>0&&this.rate<1?Ud(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return K(n,Gg(n.shape,1,r))},()=>n,e.training||!1):n})}}hA.className="GaussianDropout";At(hA);class dA extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||fe(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ut(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Ud(()=>{const r=fe(t),o=1.6732632423543772,a=1.0507009873554805,l=-o*a;let c=bl(Og(n),this.rate);c=wl(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=$t(K(r,c),K($t(c,-1),l));return $t(K(d,u),h)},()=>fe(t),e.training||!1)}return t})}}dA.className="AlphaDropout";At(dA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bh(s,t,e,n,i,r=.001){let o;if(s.rank===2)o=$G(s,t,e,n,i,r);else if(s.rank===3)o=FG(s,t,e,n,i,r);else if(s.rank===4)o=OG(s,t,e,n,i,r);else throw new ge(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return o}function t9(s,t,e,n,i=.001){return ut(()=>{const r=Av(s,n),o=r.mean,a=r.variance;return[bh(s,o,a,e,t,i),o,a]})}function e9(s,t,e,n,i=.001){return ut(()=>{const r=Av(s,n),o=r.mean,a=r.variance,l=[];for(const p of nr(0,s.rank))n.indexOf(p)!==-1?l.push(1):l.push(s.shape[p]);const c=et(o,l),u=et(a,l),h=t==null?null:et(t,l),d=e==null?null:et(e,l);return[bh(s,c,u,d,h,i),o,a]})}function n9(s,t,e,n,i=.001){return Fe(n.slice().sort(),nr(0,s.rank-1))?t9(s,t,e,n,i):e9(s,t,e,n,i)}class fA extends Ee{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=sn(t.betaInitializer||"zeros"),this.gammaInitializer=sn(t.gammaInitializer||"ones"),this.movingMeanInitializer=sn(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=sn(t.movingVarianceInitializer||"ones"),this.betaConstraint=Rn(t.betaConstraint),this.gammaConstraint=Rn(t.gammaConstraint),this.betaRegularizer=rn(t.betaRegularizer),this.gammaRegularizer=rn(t.gammaRegularizer)}build(t){t=Pe(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(n==null)throw new Z(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new An({ndim:t.length,axes:{[e]:n}})];const i=[n];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return ut(()=>{const n=e.training==null?!1:e.training,i=fe(t),r=i.shape,o=r.length,a=nr(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=rl(1,o);c[l]=r[l];const u=a.slice();u.sort();const h=!Fe(u,nr(0,o).slice(0,o-1)),d=()=>{if(h){const b=et(this.movingMean.read(),c),v=et(this.movingVariance.read(),c),y=this.center?et(this.beta.read(),c):null,w=this.scale?et(this.gamma.read(),c):null;return bh(i,b,v,y,w,this.epsilon)}else return bh(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[f,p,g]=n9(i,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(b,v,y)=>{ut(()=>{const w=1-y,S=b.read(),C=K(se(S,v),w);b.write(se(S,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ln(this.betaInitializer),gammaInitializer:ln(this.gammaInitializer),movingMeanInitializer:ln(this.movingMeanInitializer),movingVarianceInitializer:ln(this.movingVarianceInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer),betaConstraint:Nn(this.betaConstraint),gammaConstraint:Nn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}fA.className="BatchNormalization";At(fA);class pA extends Ee{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=sn(t.betaInitializer||"zeros"),this.gammaInitializer=sn(t.gammaInitializer||"ones"),this.betaRegularizer=rn(t.betaRegularizer),this.gammaRegularizer=rn(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Pe(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==zo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(r=>t[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(t,e){const n=fe(t),i=n.shape,r=i.length;return ut(()=>{let{mean:a,variance:l}=Av(n,this.axis,!0);const c=rl(1,r);for(const g of this.axis)c[g]=i[g];const u=g=>g!=null&&g.shape.length!==r?et(g,c):g;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(f.push(i[g]),p.push(1)):(f.push(1),p.push(i[g]));return a=Ki(a,f),l=Ki(l,f),h!=null&&(h=Ki(h,p)),d!=null&&(d=Ki(d,p)),bh(n,a,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ln(this.betaInitializer),gammaInitializer:ln(this.gammaInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}pA.className="LayerNormalization";At(pA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s9(s,t,e){return ut(()=>{if(s.rank!==4)throw new Z(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new Z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=sr()),e!=="channelsLast"&&e!=="channelsFirst")throw new Z(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],Nv(s,n)})}class mA extends Ee{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?sr():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new Z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new Z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new Z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new An({ndim:4})]}computeOutputShape(t){t=Pe(t);let e,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],e,n]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],e,n,t[3]])}call(t,e){return ut(()=>s9(fe(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}mA.className="ZeroPadding2D";At(mA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qg(s,t,e,n,i,r){return ut(()=>{wn(i),$M(r),ai(n),e==null&&(e=[1,1]),n==null&&(n="valid"),i==null&&(i=sr()),r==null&&(r="max"),s=Lw(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=kv(s,t,e,a):o=bv(s,t,e,a),i==="channelsFirst"&&(o=Ne(o,[0,3,1,2])),o})}function gA(s,t,e,n,i,r){return ut(()=>{wn(i),$M(r),ai(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),i==null&&(i=sr()),r==null&&(r="max"),s=$k(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=v5(s,t,e,a):o=TG(s,t,e,a),i==="channelsFirst"&&(o=Ne(o,[0,4,1,2,3])),o})}class xA extends Ee{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new Z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(zn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new Z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);zn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,ai(this.padding),this.inputSpec=[new An({ndim:3})]}computeOutputShape(t){t=Pe(t);const e=Ji(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return ut(()=>{this.invokeCallHook(t,e),t=zd(fe(t),2);const n=this.poolingFunction(fe(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Dd(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class bA extends xA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return wn(r),ai(i),Qg(t,e,n,i,r,"max")}}bA.className="MaxPooling1D";At(bA);class yA extends xA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return wn(r),ai(i),Qg(t,e,n,i,r,"avg")}}yA.className="AveragePooling1D";At(yA);class vA extends Ee{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new Z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,wn(this.dataFormat),ai(this.padding),this.inputSpec=[new An({ndim:4})]}computeOutputShape(t){t=Pe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Ji(e,this.poolSize[0],this.padding,this.strides[0]),n=Ji(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return ut(()=>(this.invokeCallHook(t,e),this.poolingFunction(fe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class wA extends vA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return wn(r),ai(i),Qg(t,e,n,i,r,"max")}}wA.className="MaxPooling2D";At(wA);class _A extends vA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return wn(r),ai(i),Qg(t,e,n,i,r,"avg")}}_A.className="AveragePooling2D";At(_A);class SA extends Ee{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new Z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,wn(this.dataFormat),ai(this.padding),this.inputSpec=[new An({ndim:5})]}computeOutputShape(t){t=Pe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Ji(e,this.poolSize[0],this.padding,this.strides[0]),n=Ji(n,this.poolSize[1],this.padding,this.strides[1]),i=Ji(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,i]:[t[0],e,n,i,t[4]]}call(t,e){return ut(()=>(this.invokeCallHook(t,e),this.poolingFunction(fe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class CA extends SA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return wn(r),ai(i),gA(t,e,n,i,r,"max")}}CA.className="MaxPooling3D";At(CA);class TA extends SA{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return wn(r),ai(i),gA(t,e,n,i,r,"avg")}}TA.className="AveragePooling3D";At(TA);class IA extends Ee{constructor(t){super(t),this.inputSpec=[new An({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new ge}}class EA extends IA{constructor(t){super(t||{})}call(t,e){return ut(()=>{const n=fe(t);return xn(n,1)})}}EA.className="GlobalAveragePooling1D";At(EA);class MA extends IA{constructor(t){super(t||{})}call(t,e){return ut(()=>{const n=fe(t);return Zi(n,1)})}}MA.className="GlobalMaxPooling1D";At(MA);class kA extends Ee{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,wn(this.dataFormat),this.inputSpec=[new An({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new ge}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class AA extends kA{call(t,e){return ut(()=>{const n=fe(t);return this.dataFormat==="channelsLast"?xn(n,[1,2]):xn(n,[2,3])})}}AA.className="GlobalAveragePooling2D";At(AA);class NA extends kA{call(t,e){return ut(()=>{const n=fe(t);return this.dataFormat==="channelsLast"?Zi(n,[1,2]):Zi(n,[2,3])})}}NA.className="GlobalMaxPooling2D";At(NA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RA extends Ee{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const i=e.layer,r=kr(i,n);delete e.layer;const o={layer:r};return Object.assign(o,e),new t(o)}}class DA extends RA{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Pe(t),t.length<3)throw new Z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Pe(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),i=t[1];return[n[0],i].concat(n.slice(1))}call(t,e){return ut(()=>(t=fe(t),Wk((o,a)=>[fe(this.layer.call(o,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}DA.className="TimeDistributed";At(DA);function i9(s){vl(SX,"BidirectionalMergeMode",s)}const r9="concat";class $A extends RA{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=kr(n),e.goBackwards=e.goBackwards!==!0;const i={};if(i.className=t.layer.getClassName(),i.config=e,this.backwardLayer=kr(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?r9:t.mergeMode,i9(this.mergeMode),t.weights)throw new ge("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let n,i,r;return this.returnState&&(r=e.slice(1)),n=e[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,i=[n]):this.mergeMode==null?i=[n,n.slice()]:i=[n],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):Cs(i)}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=Vk(t,n,i,this.numConstants);if(t=r.inputs,n=r.initialState,i=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&i==null)return super.apply(t,e);const o=[],a=[];if(n!=null){const c=n.length;if(c%2>0)throw new Z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const u=n.map(h=>new An({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(i!=null)throw new ge("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof Tr;for(const c of o)if(c instanceof Tr!==l)throw new Z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return ut(()=>{const n=e.initialState;let i,r;if(n==null)i=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);i=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let o;this.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=nl(r,1));let a;return this.mergeMode==="concat"?a=ww([i,r]):this.mergeMode==="sum"?a=$t(i,r):this.mergeMode==="ave"?a=K(.5,$t(i,r)):this.mergeMode==="mul"?a=K(i,r):this.mergeMode==null&&(a=[i,r]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Pa(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Pa(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[e,e]:n=e:this.mergeMode==null?n=[null,null]:n=null,this.returnState){const r=this.forwardLayer.states.map(o=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=kr(e.layer);if(delete e.layer,e.numConstants!=null)throw new ge("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=e;return i.layer=n,new t(i)}}$A.className="Bidirectional";At($A);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LA extends Ee{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return ut(()=>(t=fe(t),t.dtype!=="float32"&&(t=wl(t,"float32")),$t(K(t,this.scale),this.offset)))}}LA.className="Rescaling";At(LA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const o9=["bilinear","nearest"],BC=new Set(o9);class FA extends Ee{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(BC.has(t.interpolation))this.interpolation=t.interpolation;else throw new Z(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Pe(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return ut(()=>{const n=[this.height,this.width];if(this.interpolation==="bilinear")return uc.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return uc.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...BC]} are supported`)})}}FA.className="Resizing";At(FA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a9(s,t,e,n){let i=fe(s);if(i.dtype!=="int32"&&(i=wl(i,"int32")),t==="int")return i;const r=i.shape;if(i.rank===0&&(i=Rs(i,-1)),t==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=Rs(i,-1)),i.rank>2)throw new Z(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${i.rank}.`);const o=["multiHot","oneHot"].includes(t),a=i;let l;if(typeof n<"u"&&t==="count"?l=lC(a,n,e,o):l=lC(a,[],e,o),t!=="tfIdf")return l;if(n)return K(l,n);throw new Z("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class PA extends Ee{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Pe(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return ut(()=>{t=fe(t),t.dtype!=="int32"&&(t=wl(t,"int32"));let n;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new Z(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);n=fe(e.countWeights)}const i=Zi(t),r=Bp(t),o=oi(this.numTokens,i).bufferSync().get(0),a=bl(r,0).bufferSync().get(0);if(!(o&&a))throw new Z(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return a9(t,this.outputMode,this.numTokens,n)})}}PA.className="CategoryEncoding";At(PA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qp(s){return new Bw(s)}function l9(s){return new Jg(s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=ft();c9.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var UC;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(UC||(UC={}));var VC;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(VC||(VC={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var WC;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(WC||(WC={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&P(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u9=QE;class t0 extends hy{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new hI(this,gr())}nextDataId(){return t0.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,ft().get("IS_NODE")&&Ys(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:t,dtype:n,refCount:1}),i}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Rh(n[0])){const r=n.map(o=>Po(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return{dataId:i,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,n,i,r){this.data.set(t,{values:e,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if(e==="complex64"){const i=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return co(i,r)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>Vo(i));return we(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,e)}makeOutput(t,e,n){return gr().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=_s();return t(),{kernelMs:_s()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Qt([t],"where");const e=this.readSync(t.dataId);return u9(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}t0.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(s){const t=new Float32Array(s.length);for(let e=0;e<s.length;++e)t[e]=Math.abs(s[e]);return t}const h9=s=>{const{x:t}=s.inputs,e=s.backend;Qt(t,"abs");let n=new Float32Array(mt(t.shape));const i=e.data.get(t.dataId).values;return n=OA(i),e.makeOutput(n,t.shape,t.dtype)},d9={kernelName:Mm,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(s){return(t,e,n,i,r)=>{const o=me(t,e),a=o.length,l=le(o),c=mt(o),u=Yn(r,c),h=t.length,d=e.length,f=le(t),p=le(e),g=Lc(t,o),m=Lc(e,o);if(g.length+m.length===0)for(let x=0;x<u.length;++x)u[x]=s(n[x%n.length],i[x%i.length]);else for(let x=0;x<u.length;++x){const b=nu(x,a,l),v=b.slice(-h);g.forEach(C=>v[C]=0);const y=Ir(v,h,f),w=b.slice(-d);m.forEach(C=>w[C]=0);const S=Ir(w,d,p);u[x]=s(n[y],i[S])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",r),imag:e.makeTensorInfo(i.shape,"float32",o)},a}const f9={kernelName:wy,backendName:"cpu",kernelFunc:$s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tm(s,t,e="float32"){if(e==="complex64"){const i=tm(s,t,"float32"),r=tm(s,t,"float32");return $s({inputs:{real:i,imag:r},backend:s})}const n=ls(mt(t),e);return s.makeTensorInfo(t,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const p9={kernelName:td,backendName:"cpu",kernelFunc:Fr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.real,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const m9={kernelName:Gy,backendName:"cpu",kernelFunc:ol};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(s,t,e,n){if(n==="int32"){const i=Int32Array.from(s);return[t,"int32",i]}if(n==="bool"){const i=xl([0],e),[r,o]=Cn((a,l)=>a!==l?1:0)(t,[],s,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function jo(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return Fr({inputs:{x:i},backend:e});const u=tm(e,i.shape,i.dtype),h=jo({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),d=$s({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=ol({inputs:{input:i},backend:e}),h=jo({inputs:{x:u},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(u),h}if(!pI(i.dtype,r)){const u=Fr({inputs:{x:i},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:r}}const o=e.data.get(i.dataId).values,[a,l,c]=zA(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}const g9={kernelName:Uh,backendName:"cpu",kernelFunc:jo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(s,t,e,n){return e==null?({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;Qt([o,a],s);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?il(c):c,d=o.dtype==="string"?il(u):u,f=n||o.dtype,[p,g]=t(o.shape,a.shape,h,d,f);return l.makeTensorInfo(g,f,p)}:({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=jo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,g=jo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.real,b=m.complexTensorInfos.imag,v=l.data.get(x.dataId).values,y=l.data.get(b.dataId).values,[w,S,C]=e(o.shape,a.shape,f,p,v,y),_=l.makeTensorInfo(C,"float32",w),T=l.makeTensorInfo(C,"float32",S),I=$s({inputs:{real:_,imag:T},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo(T),I}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=n||o.dtype,[d,f]=t(o.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function Uw(s){return(t,e,n,i,r,o)=>{const a=me(t,e),l=mt(a),c=a.length,u=le(a),h=Yn("float32",l),d=Yn("float32",l),f=Lc(t,a),p=Lc(e,a),g=co(n,i),m=co(r,o),x=t.length,b=le(t),v=e.length,y=le(e);if(f.length+p.length===0)for(let w=0;w<h.length;w++){const S=w%g.length,C=w%m.length,_=s(g[S*2],g[S*2+1],m[C*2],m[C*2+1]);h[w]=_.real,d[w]=_.imag}else for(let w=0;w<h.length;w++){const S=nu(w,c,u),C=S.slice(-x);f.forEach(D=>C[D]=0);const _=Ir(C,x,b),T=S.slice(-v);p.forEach(D=>T[D]=0);const I=Ir(T,v,y),A=s(g[_*2],g[_*2+1],m[I*2],m[I*2+1]);h[w]=A.real,d[w]=A.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA=Cn((s,t)=>s+t),x9=Uw((s,t,e,n)=>({real:s+e,imag:t+n})),Bc=Wn(su,BA,x9),b9={kernelName:su,backendName:"cpu",kernelFunc:Bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(s,t,e,n,i){const r=mt(n),o=ls(i,e);for(let a=0;a<s.length;a++){const l=s[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=t[a]:o[l]+=1)}return o}function UA(s,t,e,n=!1){const i=s.shape[0],r=s.shape[1],o=we([i,e],t.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const c=s.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(n?o.set(1,a,c):t.size>0?o.set(o.get(a,c)+t.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(s){return(t,e,n)=>{const i=Yn(e,t.length);for(let r=0;r<t.length;++r)i[r]=s(t[r],n);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Qt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=mt(o.shape),u=e||o.dtype,h=Sn(u,c);for(let d=0;d<c;++d)h[d]=t(l[d],i);return a.makeTensorInfo(o.shape,u,h)}}function cu(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Qt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=e||o.dtype,u=t(l,c,i);return a.makeTensorInfo(o.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA=ia(s=>Math.ceil(s)),y9=cu(Vh,VA),v9={kernelName:Vh,backendName:"cpu",kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(s,t,e,n){const i=Sn(e,mt(t));if(n&&e!=="string"){let r=0;s.forEach(o=>{const a=mt(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;s.forEach(o=>{const a=e==="string"?il(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*t[1]+r;for(let h=0;h<o.shape[1];++h)i[u+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA=Cn((s,t)=>s===t?1:0),HA=Wn(Wm,GA,null,"bool"),w9={kernelName:Wm,backendName:"cpu",kernelFunc:HA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA=ia(s=>Math.exp(s)),jA=cu(Kh,qA,"float32"),_9={kernelName:Kh,backendName:"cpu",kernelFunc:jA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA=ia(s=>Math.expm1(s)),S9=cu(Yh,XA),C9={kernelName:Yh,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=ia(s=>Math.floor(s)),T9=cu(Zh,KA),I9={kernelName:Zh,backendName:"cpu",kernelFunc:T9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(s,t,e,n,i,r,o,a,l){const c=we([n,r],e);for(let u=0;u<n;u++){const h=[];let d=0;for(let f=0;f<i;f++){const p=s[u*i+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)c.values[u*r+f]=t.get(...t.indexToLoc(d*r+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(s,t,e){const n=we(e,s.dtype);for(let i=0;i<n.size;++i){const o=n.indexToLoc(i).slice(),a=o[0],l=o[2],c=t.locToIndex([a,l]);o[2]=t.values[c];const u=s.locToIndex(o);0<=u&&u<s.values.length&&(n.values[i]=s.values[u])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA=Cn((s,t)=>s>t?1:0),E9=Wn(jm,JA,null,"bool"),M9={kernelName:jm,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QA=Cn((s,t)=>s>=t?1:0),k9=Wn(Qh,QA,null,"bool"),A9={kernelName:Qh,backendName:"cpu",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN=Cn((s,t)=>s<t?1:0),N9=Wn(Km,tN,null,"bool"),R9={kernelName:Km,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eN=Cn((s,t)=>s<=t?1:0),D9=Wn(Ym,eN,null,"bool"),$9={kernelName:Ym,backendName:"cpu",kernelFunc:D9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(s,t,e){const n=(t-s)/(e-1),i=ls(e,"float32");i[0]=s;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=ia(s=>Math.log(s)),L9=cu(id,sN),F9={kernelName:id,backendName:"cpu",kernelFunc:L9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(s,t,e,n){const i=Yn(n,mt(e));for(let r=0;r<i.length;++r){const o=r*t;let a=s[o];for(let l=0;l<t;++l){const c=s[o+l];(Number.isNaN(c)||c>a)&&(a=c)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN=Cn((s,t)=>Math.max(s,t)),P9=Wn(od,rN),O9={kernelName:od,backendName:"cpu",kernelFunc:P9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN=Cn((s,t)=>Math.min(s,t)),z9=Wn(ad,oN),B9={kernelName:ad,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ww=Cn((s,t)=>s*t),U9=Uw((s,t,e,n)=>({real:s*e-t*n,imag:s*n+t*e})),e0=Wn(cd,Ww,U9),V9={kernelName:cd,backendName:"cpu",kernelFunc:e0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(s,t,e){const n=Yo(-1,e);return Ww([],t,n,s,e)}function W9(s){const{inputs:t,backend:e}=s,{x:n}=t;Qt(n,"neg");const i=e.data.get(n.dataId).values,[r,o]=aN(i,n.shape,n.dtype);return e.makeTensorInfo(o,n.dtype,r)}const G9={kernelName:ag,backendName:"cpu",kernelFunc:W9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN=Cn((s,t)=>s!==t?1:0),H9=Wn(lg,lN,null,"bool"),q9={kernelName:lg,backendName:"cpu",kernelFunc:H9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(s,t,e,n,i){const r=t.length,o=mt(t),a=le(t),l=le(i),c=Yn(e,mt(i));for(let u=0;u<o;++u){const h=nu(u,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[n[p]];const f=Ir(d,r,l);c[f]=s[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(s){const{inputs:t,attrs:e,backend:n}=s,{x:i}=t,{perm:r}=e;Qt(i,"transpose");const o=i.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=i.shape[r[h]];const l=n.data.get(i.dataId).values,c=Gw(l,i.shape,i.dtype,r,a);return{dataId:n.write(c,a,i.dtype),shape:a,dtype:i.dtype}}const j9={kernelName:bc,backendName:"cpu",kernelFunc:Is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(s,t,e,n){const[i,r]=Vn(s,n),o=Bs(t,"int32"),a=ls(mt(i),o),l=mt(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];a[c]=h}return{outVals:a,outShape:i,outDtype:o}}function X9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Qt(i,"prod");const a=i.shape.length,l=_e(r,i.shape),c=un(l,a);let u=l,h=i;const d=[];c!=null&&(h=Is({inputs:{x:i},backend:e,attrs:{perm:c}}),d.push(h),u=vn(u.length,a));const f=e.data.get(h.dataId).values,{outVals:p,outShape:g,outDtype:m}=cN(h.shape,h.dtype,f,u);let x=g;return o&&(x=yn(g,l)),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(x,m,p)}const K9={kernelName:pg,backendName:"cpu",kernelFunc:X9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(s,t,e){s.forEach((n,i)=>{if(n<0||n>=e){const r=nu(i,t.length,le(t)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${e})`)}})}function Z9(s,t){for(let e=0;e<s.length;++e){const n=s[e],i=e===s.length-1?t:s[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function J9(s,t,e,n){const i=[];let r=0;const o=t.length-1+e.length,a=new Array(o).fill(null).map(()=>[0]);Z9(e,n);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<s.length;++c){let u=s[c],h=s[c]+1;for(let d=0;d<e.length;++d){const f=e[d],p=d+t.length-1;if(p>=0){const g=a[p],m=g[g.length-1]-f[u];for(let x=u;x<h;++x)a[p].push(f[x+1]+m)}u=f[u],h=f[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:i,numValues:r}}function Q9(s){const t=[];for(let e=0;e<s.length;++e){const n=s[e].length,i=Sn("int32",n);t.push(i),s[e].forEach((r,o)=>i[o]=r)}return t}function GC(s,t){const e=s.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<s.length;n++)e[t-1]*=s[n];return e}function tK(s,t,e,n,i,r){const o=GC(t,2)[1],a=GC(r,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let h=0;h<n;++h)i[l*a+h]=s[u*o+h];++l}}function eK(s,t,e,n,i){const r=t.slice();r[0]=i;const o=Sn(e,mt(r)),a=s.length,l=a===0?0:a/t[0];return tK(s,t,n,l,o,r),[o,r]}function uN(s,t,e,n,i,r,o,a){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(Y9(r,o,l),n.length===0)throw new Error("params.rank must be nonzero");const c=n[0],{outSplits:u,valueSlices:h,numValues:d}=J9(r,o,s,c),f=Q9(u),p=eK(e,n,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC=2147483647;function hN(s,t,e,n,i,r,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=i.length===0,c=o.length===0,u=[];a||u.push(t[0]),l||u.push(i[0]),c||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=Sn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const x=a?s[0]:s[m],b=l?n[0]:n[m],v=c?r[0]:r[m];if(v===0)throw new Error("Requires delta != 0");let y;if(v>0&&b<x||v<0&&b>x)y=0;else if(y=Math.ceil(Math.abs((b-x)/v)),y>HC)throw new Error(`Requires ((limit - start) / delta) <= ${HC}`);d[m+1]=d[m]+y}const f=d[h],p=Sn(e,f);let g=0;for(let m=0;m<h;++m){const x=d[m+1]-d[m];let b=a?s[0]:s[m];const v=c?r[0]:r[m];for(let y=0;y<x;++y)p[g++]=b,b+=v}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var di=Gi;class em{constructor(t,e,n,i,r,o,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=rM(u),this.raggedRank=oM(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===di.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===di.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case di.VALUE_ROWIDS:return em.getMaxWidthValueRowID(e);case di.ROW_SPLITS:return em.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${di[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let n=0;for(let i=0;i<e-1;++i){const r=t[i+1]-t[i];r>n&&(n=r)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let n=0,i=t[0],r=0;for(let o=1;o<e;++o){const a=t[o];a!==i&&(i=a,r=Math.max(o-n,r),n=o)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return jC(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;aM(n,e);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=iM(this.raggedRank,i,e);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,e,n){const i=Math.min(t,n),r=[];let o=0;for(let a=0;a<i;++a,o+=e)r.push(o);for(let a=i;a<t;++a)r.push(-1);return P(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,n,i){const r=t.length,o=[];for(let a=0;a<r-1;++a){const l=t[a+1]-t[a];let c=Math.min(i,l),u=e[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=n;for(let h=0;h<l-c;++h)o.push(-1)}if(r>0&&o.length!==t[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,i){const r=t.length,o=[];if(r===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];o.push(c);for(let u=1;u<r;++u){const h=t[u];if(h===l)c>=0&&(++a,a<i?c+=n:c=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,i){const r=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case di.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,i);case di.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,n,i);default:throw new Error(`Unsupported partition type: ${di[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case di.FIRST_DIM_SIZE:return t[0];case di.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case di.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${di[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*n[l+1];const r=jC(n,!1),o=Sn(this.valuesDType,mt(r));if(i[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(e,i[0],n[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,i[c],n[c]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(t,e,n,i){if(n.length===0)return;const r=this.values,o=n;let a=i.slice();a=a.slice(t+1);const l=mt(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;ut(()=>{const g=et(u,p);u=Yu(g,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let g=p<c?e[p]:-1;if(g===f){++f;continue}if(d<f){const m=r.subarray(h*l),x=o.subarray(d*l),b=(f-d)*l;qC(x,m,b)}if(p>=c){const m=n.length;g=Math.floor(m/l)}if(g>f)if(this.defaultValue.length===1)o.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){const m=o.slice(f*l);qC(m,u,l),++f}g<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function qC(s,t,e){for(let n=0;n<e;n++)s[n]=t[n]}function jC(s,t){const e=[];for(let n of s){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function dN(s,t,e,n,i,r,o,a,l,c){return new em(s,t,e,n,i,r,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(s,t,e,n){const i=s===t,r=s<t&&e<0,o=t<s&&e>1;if(i||r||o)return ls(0,n);const a=Math.abs(Math.ceil((t-s)/e)),l=ls(a,n);t<s&&e===1&&(e=-1),l[0]=s;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN=ia(s=>1/Math.sqrt(s)),nK=cu(md,pN),sK={kernelName:md,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hc(s,t,e,n,i,r,o,a,l,c){const u=[n/i,i],h=s.values,d=t.values;if(n===0)return we(e,t.dtype);const f=we(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const g=[];let m=0;for(let x=0;x<o;x++){const b=h[p*o+x];g.push(b),m+=b*a[x]}if(m<0||m>=n/i)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let x=0;x<i;x++)c?f.values[m*i+x]+=d[p*i+x]:f.values[m*i+x]=t.rank===0?d[0]:d[p*i+x]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK=ia(s=>1/(1+Math.exp(-s))),mN=We(vd,s=>1/(1+Math.exp(-s))),rK={kernelName:vd,backendName:"cpu",kernelFunc:mN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(s,t,e,n,i){const r=pv(n,t,e),o=mt(e),a=le(n);if(r){const h=mv(t,a);return i==="string"?s.slice(h,h+o):s.subarray(h,h+o)}const l=i==="string"?il(s):s,c=we(n,i,l),u=we(e,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,g)=>p+t[g]);u.set(c.get(...f),...d)}return i==="string"?EM(u.values):u.values}function al(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n;Qt(i,"slice");const[a,l]=Rg(i,r,o);dv(i,a,l);const c=e.data.get(i.dataId).values,u=gN(c,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,u)}const oK={kernelName:vg,backendName:"cpu",kernelFunc:al};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(s,t,e,n,i,r,o){const a=t[0],l=r[0],c=new Array(l),u=new Array(a),h=t[1];if(l===0){if(a!==0)throw new Error(pM(a));const m=Sn(e,0),x=Sn(i,0);return[m,[0,h],x,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const x=s[m*h];if(x<0)throw new Error(mM(m,x));if(x>=l)throw new Error(gM(m,x,l));++p[x],d=d&&x>=f,f=x}let g=!0;for(let m=0;m<l;++m){const x=p[m]===0;c[m]=x,g=g&&!x,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(g&&d){const m=s,x=n;for(let b=0;b<a;++b)u[b]=b;return[m,[a,h],x,c,u]}else{const m=p[l-1],x=Sn(e,m*h),b=Sn(i,m),v=new Array(l).fill(0);for(let y=0;y<a;++y){const w=s[y*h],S=v[w],C=(w===0?0:p[w-1])+S;v[w]++;for(let _=0;_<h;++_)x[C*h+_]=s[y*h+_];b[C]=n[y],u[y]=C}for(let y=0;y<l;++y)if(v[y]===0){const S=y===0?0:p[y-1];x[S*h+0]=y;for(let C=1;C<h;++C)x[S*h+C]=0;b[S]=o}return[x,[m,h],b,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(s,t,e,n,i){const r=mt(n),o=t[0],a=i.length,l=[];let c=1,u=-1;for(let m=0;m<a;++m){const x=i[m];if(x===-1){if(u!==-1)throw new Error(xM(u,m));u=m,l.push(1)}else{if(x<0)throw new Error(bM(m,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(yM());const m=Math.trunc(r/c);if(c*m!==r)throw new Error(vM(n,l));l[u]=m}if(mt(l)!==r)throw new Error(wM(n,l));const d=n.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*n[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const g=Sn(e,o*a);for(let m=0;m<o;++m){let x=0;for(let b=0;b<d;++b)x+=s[m*d+b]*f[b];for(let b=0;b<a;++b)g[m*a+b]=Math.trunc(x/p[b]),x%=p[b]}return[g,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(s,t,e,n,i,r=!1,o=0){const a=n.length,l=[t[0],s.length/t[0]],c=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(Sb());const d=t.slice();d[0]=h;const f=d.reduce((v,y)=>v*y,1),p=Sn(e,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(Sb());let g=0,m=1,x=0,b=i[g];for(;;){let v=0;if(m<a){if(v=i[m],b===v){++m;continue}if(b>=v)throw new Error(_M())}if(b<0||b>=h)throw new Error(SM(b,h));b>x&&p.fill(o,x*c,b*c);for(let y=g;y<m;++y){const w=n[y];if(w<0||w>=l[0])throw new Error(CM(y,n[y],l[0]));for(let S=0;S<c;S++)p[b*c+S]+=s[w*c+S]}if(r)for(let y=0;y<c;y++)p[b*c+y]/=m-g;if(g=m,++m,x=b+1,b=v,m>a)break}return x<h&&p.fill(o,x*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK=ia(s=>Math.sqrt(s)),lK=We(_d,s=>Math.sqrt(s)),cK={kernelName:_d,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN=Cn((s,t)=>{const e=s-t;return e*e}),uK=Wn(Sd,yN),hK={kernelName:Sd,backendName:"cpu",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(s,t,e,n){const i=we(s,t.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*e[l]+n[l];i.set(t.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dK{constructor(t,e,n,i,r,o){this.separator=Po(t),this.nGramWidths=e,this.leftPad=Po(n),this.rightPad=Po(i),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=o-(c+u),d=e+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let b=0;b<h;++b)f+=t[d+b].length;f+=u*this.rightPad.length;const p=c+u+h-1;f+=p*this.separator.length,n[i+a]=new Uint8Array(f);const g=n[i+a];let m=0;const x=b=>b.forEach(v=>g[m++]=v);for(let b=0;b<c;++b)x(this.leftPad),x(this.separator);for(let b=0;b<h-1;++b)x(t[d+b]),x(this.separator);if(h>0){x(t[d+h-1]);for(let b=0;b<u;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<u-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){const n=t.length,i=e.length;if(i>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=e[c]>=l;if(u=u&&e[c]<=n,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${n}]`);l=e[c]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=i-1,o=Sn("int32",i);if(n===0||i===0){const l=new Array(n);for(let c=0;c<=r;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[r]);for(let l=0;l<r;++l){const c=e[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=e[l+1]-e[l],f=this.getNumNGrams(d,h);this.createNGrams(t,c,a,u,f,h),u+=f}),this.preserveShort&&u===o[l]){const h=e[l+1]-e[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(t,c,a,u,f,d)}}return[a,o]}}function wN(s,t,e,n,i,r,o,a){return new dK(e,n,i,r,o,a).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(s,t,e,n){if(!s.length)return;if(t.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(t.length===1){const r=t[0];let o=s.indexOf(r);for(;o!==-1;){const a=s.subarray(0,o);(!e||a.length!==0)&&n.push(a),s=s.subarray(o+1),o=s.indexOf(r)}(!e||s.length!==0)&&n.push(s);return}let i=0;for(let r=0;r<s.length+1;r++)if(r===s.length||t.indexOf(s[r])!==-1){const o=s.subarray(i,r);(!e||o.length!==0)&&n.push(o),i=r+1}}function _N(s,t,e){const n=s.length,i=[];let r=0,o=0;const a=new Array(n);for(let d=0;d<n;++d){const f=i.length;fK(s[d],t,e,i);const p=i.length-f;a[d]=p,r+=p,o=Math.max(o,p)}const l=Sn("int32",r*2),c=new Array(r),u=[n,o];let h=0;for(let d=0;d<n;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(s,t){const e=Sn("int32",s.length);for(let n=0;n<s.length;++n)e[n]=CV(s[n]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN=Cn((s,t)=>s-t),pK=Uw((s,t,e,n)=>({real:s-e,imag:t-n})),qw=Wn(Cd,CN,pK),mK={kernelName:Cd,backendName:"cpu",kernelFunc:qw};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(s,t){const e=new Array(s.rank);for(let i=0;i<e.length;i++)e[i]=s.shape[i]*t[i];const n=we(e,s.dtype);for(let i=0;i<n.values.length;++i){const r=n.indexToLoc(i),o=new Array(s.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%s.shape[l];const a=s.locToIndex(o);n.values[i]=s.values[a]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vu=(s,t)=>{const e=t.value-s.value;return e===0?s.index-t.index:e};function IN(s,t,e=0,n=s.length-1){for(;n>e;){if(n-e>600){const a=n-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*u/a+h)),f=Math.min(n,Math.floor(t+(a-l)*u/a+h));IN(s,t,d,f)}const i=s[t];let r=e,o=n;for(nc(s,e,t),Vu(s[n],i)>0&&nc(s,e,n);r<o;){for(nc(s,r,o),r++,o--;Vu(s[r],i)<0;)r=r+1;for(;Vu(s[o],i)>0;)o=o-1}Vu(s[e],i)===0?nc(s,e,o):(o=o+1,nc(s,o,n)),o<=t&&(e=o+1),t<=o&&(n=o-1)}}function EN(s,t,e,n,i){const r=t[t.length-1],[o,a]=[s.length/r,r],l=Yn(e,o*n),c=Yn("int32",o*n);for(let h=0;h<o;h++){const d=h*a,f=s.subarray(d,d+a);let p=new Array(f.length);f.forEach((b,v)=>p[v]={value:b,index:v}),n<p.length&&(IN(p,n),p=p.slice(0,n)),i&&p.sort(Vu);const g=h*n,m=l.subarray(g,g+n),x=c.subarray(g,g+n);for(let b=0;b<n;b++)m[b]=p[b].value,x[b]=p[b].index}const u=t.slice();return u[u.length-1]=n,[we(u,e,l),we(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(s,t,e,n){const i=_e(t,e)[0],r=[1,e[0],1];for(let p=0;p<i;p++)r[0]*=e[p];r[1]=e[i];for(let p=i+1;p<e.length;p++)r[2]*=e[p];const o={},a=new Int32Array(e[i]),l=new os(r,n,s),c=[],u=r[0]===1&&r[2]===1;for(let p=0;p<e[i];p++){let g;if(u)g=s[p].toString();else{const m=[];for(let x=0;x<r[0];x++)for(let b=0;b<r[2];b++)m.push(l.get(x,p,b));g=m.join(",")}if(o[g]!==void 0)a[p]=o[g];else{const m=Object.keys(o).length;o[g]=m,a[p]=m,c.push(p)}}const h=r.slice();h[1]=Object.keys(o).length;const d=new os(h,n);c.forEach((p,g)=>{for(let m=0;m<r[0];m++)for(let x=0;x<r[2];x++)d.set(l.get(m,p,x),m,g,x)});const f=e.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gK=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:OA,addImpl:BA,bincountImpl:Vw,bincountReduceImpl:UA,castImpl:zA,ceilImpl:VA,concatImpl:WA,equalImpl:GA,expImpl:qA,expm1Impl:XA,floorImpl:KA,gatherNdImpl:YA,gatherV2Impl:ZA,greaterImpl:JA,greaterEqualImpl:QA,lessImpl:tN,lessEqualImpl:eN,linSpaceImpl:nN,logImpl:sN,maxImpl:iN,maximumImpl:rN,minimumImpl:oN,multiplyImpl:Ww,negImpl:aN,notEqualImpl:lN,prodImpl:cN,raggedGatherImpl:uN,raggedRangeImpl:hN,raggedTensorToTensorImpl:dN,rangeImpl:fN,rsqrtImpl:pN,scatterImpl:hc,sigmoidImpl:iK,sliceImpl:gN,sparseFillEmptyRowsImpl:xN,sparseReshapeImpl:bN,sparseSegmentReductionImpl:Hw,sqrtImpl:aK,squaredDifferenceImpl:yN,stridedSliceImpl:vN,stringNGramsImpl:wN,stringSplitImpl:_N,stringToHashBucketFastImpl:SN,subImpl:CN,tileImpl:TN,topKImpl:EN,transposeImpl:Gw,uniqueImpl:MN},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lE("cpu",()=>new t0,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN=We(jh,s=>s>=0?s:Math.exp(s)-1),xK={kernelName:jh,backendName:"cpu",kernelFunc:kN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n;Qt([i],"leakyRelu");const o=mt(i.shape),a=e.data.get(i.dataId).values,l=Yn("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return e.makeTensorInfo(i.shape,"float32",l)}const bK={kernelName:Xm,backendName:"cpu",kernelFunc:AN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=Cn((s,t)=>s<0?t*s:s);function NN(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t;Qt([n,i],"prelu");const r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,[a,l]=yK(n.shape,i.shape,r,o,"float32");return e.makeTensorInfo(l,"float32",a)}const vK={kernelName:fg,backendName:"cpu",kernelFunc:NN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN=We(dd,s=>Math.max(0,s)),wK={kernelName:dd,backendName:"cpu",kernelFunc:RN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN=We(fd,s=>Math.min(Math.max(0,s),6)),_K={kernelName:fd,backendName:"cpu",kernelFunc:DN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nm(s,t,e,n,i){if(e==="linear")return Fr({inputs:{x:t},backend:s});if(e==="relu")return RN({inputs:{x:t},backend:s});if(e==="elu")return kN({inputs:{x:t},backend:s});if(e==="relu6")return DN({inputs:{x:t},backend:s});if(e==="prelu")return NN({inputs:{x:t,alpha:n},backend:s});if(e==="leakyrelu")return AN({inputs:{x:t},backend:s,attrs:{alpha:i}});if(e==="sigmoid")return mN({inputs:{x:t},backend:s});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=mt(i.shape),a=fI(r,o),l=mt(a);P(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(i.dataId);const c=e.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const SK={kernelName:mg,backendName:"cpu",kernelFunc:Ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;Qt([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=o?i.shape[l-2]:i.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=o?i.shape[l-1]:i.shape[l-2],f=a?r.shape[c-2]:r.shape[c-1],p=i.shape.slice(0,-2),g=r.shape.slice(0,-2),m=mt(p),x=mt(g),v=me(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,f]);P(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${o} and transposeB=${a} must match.`);const y=o?[m,u,d]:[m,d,u],w=a?[x,f,h]:[x,h,f],S=Ke({inputs:{x:i},backend:e,attrs:{shape:y}}),C=Ke({inputs:{x:r},backend:e,attrs:{shape:w}}),_=o?S.shape[1]:S.shape[2],T=o?S.shape[2]:S.shape[1],I=a?C.shape[1]:C.shape[2],A=Math.max(m,x),D=e.data.get(S.dataId).values,k=e.data.get(C.dataId).values,M=le(S.shape),E=le(C.shape),[N,O,L]=o?[M[0],1,M[1]]:[M[0],M[1],1],[$,W,q]=a?[1,E[1],E[0]]:[E[1],1,E[0]],H=T*I,X=we([A,T,I],S.dtype),it=X.values,lt=e.blockSize;for(let Y=0;Y<A;Y++)for(let yt=0;yt<T;yt+=lt)for(let vt=0;vt<I;vt+=lt)for(let xt=0;xt<_;xt+=lt){const bt=Math.min(yt+lt,T),Dt=Math.min(vt+lt,I),ct=Math.min(xt+lt,_);for(let ht=yt;ht<bt;ht++)for(let _t=vt;_t<Dt;_t++){let Et=0;for(let gt=xt;gt<ct;gt++){const Ot=Math.min(Y,m-1)*N,Pt=Math.min(Y,x-1)*q,at=D[Ot+ht*O+gt*L],Lt=k[gt*$+_t*W+Pt];Et+=at*Lt}it[Y*H+(ht*I+_t)]+=Et}}return e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),e.makeTensorInfo(v,X.dtype,X.values)}const CK={kernelName:Dm,backendName:"cpu",kernelFunc:$N};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;let d,f,p;const g=[];d=$N({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:e}),o&&(f=Bc({inputs:{a:d,b:o},backend:e}),g.push(d),d=f),u&&(p=nm(e,d,u,a,h),g.push(d),d=p);for(const x of g)e.disposeIntermediateTensorInfo(x);return d}const IK={kernelName:Np,backendName:"cpu",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=We($h,s=>Math.acos(s)),MK={kernelName:$h,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK=We(Lh,s=>Math.acosh(s)),AK={kernelName:Lh,backendName:"cpu",kernelFunc:kK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(s){const{inputs:t,backend:e}=s,n=t;Qt(t,"addN");const i=n.map(a=>e.data.get(a.dataId).values),r=we(n[0].shape,n[0].dtype),o=r.values;for(let a=0;a<n.length;a++){const l=i[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const RK={kernelName:my,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Qt(i,"all");const a=_e(r,i.shape);let l=a;const c=un(l,i.shape.length);let u=i;c!=null&&(u=Is({inputs:{x:i},backend:e,attrs:{perm:c}}),l=vn(l.length,i.shape.length)),ts("all",l,u.shape.length);const[h,d]=Vn(u.shape,l),f=mt(d),p=ls(mt(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const b=x*f;let v=g[b];for(let y=0;y<f;++y){const w=g[b+y];v=v&&w}p[x]=v}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=yn(h,a),b=Ke({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),b}return m}const $K={kernelName:gy,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Qt(i,"any");const a=_e(r,i.shape);let l=a;const c=un(l,i.shape.length);let u=i;c!=null&&(u=Is({inputs:{x:i},backend:e,attrs:{perm:c}}),l=vn(l.length,i.shape.length)),ts("any",l,u.shape.length);const[h,d]=Vn(u.shape,l),f=mt(d),p=ls(mt(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const b=x*f;let v=g[b];for(let y=0;y<f;++y){const w=g[b+y];v=v||w}p[x]=v}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=yn(h,a),b=Ke({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),b}return m}const FK={kernelName:xy,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Qt(i,"argMax");let o=_e(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=Is({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=vn(o.length,l.shape.length)),o=[o[0]],ts("argMax",o,l.shape.length);const[u,h]=Vn(l.shape,o),d=mt(u),f=ls(d,"int32"),p=mt(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let b=g[x],v=0;for(let y=0;y<p;++y){const w=g[x+y];w>b&&(b=w,v=y)}f[m]=v}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const OK={kernelName:km,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Qt(i,"argMin");let o=_e(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=Is({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=vn(o.length,l.shape.length)),o=[o[0]],ts("argMin",o,l.shape.length);const[u,h]=Vn(l.shape,o),d=mt(u),f=ls(d,"int32"),p=mt(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let b=g[x],v=0;for(let y=0;y<p;++y){const w=g[x+y];w<b&&(b=w,v=y)}f[m]=v}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const BK={kernelName:Am,backendName:"cpu",kernelFunc:zK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK=We(Fh,s=>Math.asin(s)),VK={kernelName:Fh,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK=We(Ph,s=>Math.asinh(s)),GK={kernelName:Ph,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK=We(Oh,s=>Math.atan(s)),qK={kernelName:Oh,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK=Cn((s,t)=>Math.atan2(s,t)),XK=Wn(Bh,jK),KK={kernelName:Bh,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK=We(zh,s=>Math.atanh(s)),ZK={kernelName:zh,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jw(s,t,e,n,i,r){const o=i.strideHeight,a=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,f=i.padInfo.left,p=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=we(i.outShape,e),m=g.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],b=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let y=0;y<i.batchSize;++y){const w=y*x,S=y*n[0];for(let C=0;C<i.inChannels;++C)for(let _=0;_<i.outHeight;++_){const T=_*o-d,I=Math.max(0,T),A=Math.min(i.inHeight,u+T),D=w+_*b;for(let k=0;k<i.outWidth;++k){const M=k*a-f,E=Math.max(0,M),N=Math.min(i.inWidth,h+M);let O=p,L=0,$=0;for(let q=I;q<A;q+=l){const H=S+q*n[1];for(let X=E;X<N;X+=c){const it=H+X*n[2],lt=s[it+C];r==="max"&&lt>O?O=lt:r==="avg"&&(L+=lt,$++)}if(isNaN(O))break}const W=D+k*v+C;m[W]=r==="avg"?L/$:O}}}return g}function LN(s,t,e,n,i=!1,r=!1){const o=we(n.outShape,"int32"),a=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,u=n.dilationWidth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,f=n.padInfo.top,p=n.padInfo.left,g=we(t,e,s);for(let m=0;m<n.batchSize;++m)for(let x=0;x<n.inChannels;++x)for(let b=0;b<n.outHeight;++b){const v=b*a-f;let y=v;for(;y<0;)y+=c;const w=Math.min(n.inHeight,h+v);for(let S=0;S<n.outWidth;++S){const C=S*l-p;let _=C;for(;_<0;)_+=u;const T=Math.min(n.inWidth,d+C);let I=Number.NEGATIVE_INFINITY,A=-1;for(let D=y;D<w;D+=c){const k=D-v;for(let M=_;M<T;M+=u){const E=M-C,N=g.get(m,D,M,x);N>I&&(I=N,i?A=r?((m*n.inHeight+D)*n.inWidth+M)*n.inChannels+x:(D*n.inWidth+M)*n.inChannels+x:A=k*d+E)}}o.set(A,m,b,S,x)}}return o}function FN(s,t,e,n,i,r){const o=i.strideDepth,a=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,f=i.effectiveFilterHeight,p=i.effectiveFilterWidth,g=i.padInfo.front,m=i.padInfo.top,x=i.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=we(i.outShape,e),y=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[2]*i.outShape[3]*i.outShape[4],C=i.outShape[3]*i.outShape[4],_=i.outShape[4];for(let T=0;T<i.batchSize;++T){const I=T*w,A=T*n[0];for(let D=0;D<i.inChannels;++D)for(let k=0;k<i.outDepth;++k){const M=k*o-g;let E=M;for(;E<0;)E+=c;const N=Math.min(i.inDepth,d+M),O=I+k*S;for(let L=0;L<i.outHeight;++L){const $=L*a-m;let W=$;for(;W<0;)W+=u;const q=Math.min(i.inHeight,f+$),H=O+L*C;for(let X=0;X<i.outWidth;++X){const it=X*l-x;let lt=it;for(;lt<0;)lt+=h;const Y=Math.min(i.inWidth,p+it),yt=H+X*_;let vt=b,xt=0,bt=0;for(let ct=E;ct<N;ct+=c){const ht=A+ct*n[1];for(let _t=W;_t<q;_t+=u){const Et=ht+_t*n[2];for(let gt=lt;gt<Y;gt+=h){const Ot=Et+gt*n[3],Pt=s[Ot+D];if(r==="max"&&Pt>vt?vt=Pt:r==="avg"&&(xt+=Pt,bt++),isNaN(vt))break}if(isNaN(vt))break}if(isNaN(vt))break}const Dt=yt+D;y[Dt]=r==="avg"?xt/bt:vt}}}}return v}function JK(s,t){const e=we(t.outShape,"int32"),n=t.strideDepth,i=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,p=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let x=0;x<t.outDepth;++x){const b=x*n-d;let v=b;for(;v<0;)v+=o;const y=Math.min(t.inDepth,c+b);for(let w=0;w<t.outHeight;++w){const S=w*i-f;let C=S;for(;C<0;)C+=a;const _=Math.min(t.inHeight,u+S);for(let T=0;T<t.outWidth;++T){const I=T*r-p;let A=I;for(;A<0;)A+=l;const D=Math.min(t.inWidth,h+I);let k=Number.NEGATIVE_INFINITY,M=-1;for(let E=v;E<y;E+=o){const N=E-b;for(let O=C;O<_;O+=a){const L=O-S;for(let $=A;$<D;$+=l){const W=$-I,q=s.get(g,E,O,$,m);q>=k&&(k=q,M=N*u*h+L*u+W)}}}e.set(M,g,x,w,T,m)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Qt(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(us(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Di(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Fe(u.inShape,u.outShape))h=Fr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=le(i.shape),p=jw(d,i.shape,i.dtype,f,u,"avg");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const tY={kernelName:Nm,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Qt(i,"avgPool3d");const u=po(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=FN(h,i.shape,i.dtype,le(i.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const nY={kernelName:Rm,backendName:"cpu",kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Qt([i,r],"avgPool3DGrad");const u=po(r.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,g=u.filterHeight,m=u.filterWidth,x=u.dilationDepth,b=u.dilationHeight,v=u.dilationWidth,y=u.effectiveFilterDepth,w=u.effectiveFilterHeight,S=u.effectiveFilterWidth,C=y-1-u.padInfo.front,_=S-1-u.padInfo.left,T=w-1-u.padInfo.top,I=we(r.shape,"float32"),A=1/(p*g*m),D=e.bufferSync(i);for(let k=0;k<u.batchSize;++k)for(let M=0;M<u.inChannels;++M)for(let E=0;E<u.inDepth;++E)for(let N=0;N<u.inHeight;++N)for(let O=0;O<u.inWidth;++O){const L=E-C,$=N-T,W=O-_;let q=0;for(let H=0;H<y;H+=x){const X=(L+H)/h;if(!(X<0||X>=u.outDepth||Math.floor(X)!==X))for(let it=0;it<w;it+=b){const lt=($+it)/d;if(!(lt<0||lt>=u.outHeight||Math.floor(lt)!==lt))for(let Y=0;Y<S;Y+=v){const yt=(W+Y)/f;if(yt<0||yt>=u.outWidth||Math.floor(yt)!==yt)continue;const vt=D.get(k,X,lt,yt,M);q+=vt}}}I.set(q*A,k,E,N,O,M)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const iY={kernelName:yy,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Qt([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=Di(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,x=u.effectiveFilterHeight,b=u.effectiveFilterWidth,v=b-1-u.padInfo.left,y=x-1-u.padInfo.top,w=we(o.shape,"float32"),S=1/(f*p),C=e.data.get(i.dataId).values,_=we(i.shape,"float32",C);for(let T=0;T<u.batchSize;++T)for(let I=0;I<u.inChannels;++I)for(let A=0;A<u.inHeight;++A)for(let D=0;D<u.inWidth;++D){const k=A-y,M=D-v;let E=0;for(let N=0;N<x;N+=g){const O=(k+N)/h;if(!(O<0||O>=u.outHeight||Math.floor(O)!==O))for(let L=0;L<b;L+=m){const $=(M+L)/d;if($<0||$>=u.outWidth||Math.floor($)!==$)continue;const W=_.get(T,O,$,I);E+=W}}w.set(E*S,T,A,D,I)}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const oY={kernelName:by,backendName:"cpu",kernelFunc:rY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,scale:r,offset:o,mean:a,variance:l}=t;P(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Qt([i,a,l,r,o],"batchNorm");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=e.data.get(i.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,f=r?e.data.get(r.dataId).values:new Float32Array([1]),p=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=p.length,x=f.length,b=d.length,v=h.length;let y=0,w=0,S=0,C=0;for(let _=0;_<u.length;++_)g[_]=p[y++]+(u[_]-h[w++])*f[S++]/Math.sqrt(d[C++]+c),y>=m&&(y=0),w>=v&&(w=0),S>=x&&(S=0),C>=b&&(C=0);return e.makeTensorInfo(i.shape,i.dtype,g)}const lY={kernelName:Hm,backendName:"cpu",kernelFunc:aY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;Qt([i],"batchToSpaceND");const a=r.reduce((x,b)=>x*b),l=Ld(i.shape,r,a),c=Fd(l.length,r.length),u=Pd(i.shape,r,a),h=nw(o,r.length),d=sw(u,o,r.length),f=Ke({inputs:{x:i},backend:e,attrs:{shape:l}}),p=Is({inputs:{x:f},backend:e,attrs:{perm:c}}),g=Ke({inputs:{x:p},backend:e,attrs:{shape:u}}),m=al({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const uY={kernelName:$m,backendName:"cpu",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=Vw(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const dY={kernelName:vy,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=me(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const pY={kernelName:wI,backendName:"cpu",kernelFunc:fY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mY=We(Wh,(s,t)=>{const e=t;return s>e.clipValueMax?e.clipValueMax:s<e.clipValueMin?e.clipValueMin:s}),gY={kernelName:Wh,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=s=>{const{x:t}=s.inputs,e=s.backend,n=new Float32Array(mt(t.shape)),i=e.data.get(t.dataId),r=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];n[c]=Math.hypot(u,h)}return e.makeOutput(n,t.shape,"float32")},bY={kernelName:Lm,backendName:"cpu",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uc(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.imag,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const yY={kernelName:Fy,backendName:"cpu",kernelFunc:Uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=_e(i,t[0].shape)[0],o=t.map(g=>g.shape);Qv(o,r);let a=Er(t.map(g=>g.shape),r);if(mt(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(g=>mt(g.shape)>0);if(l.length===1)return Fr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const g=l.map(y=>ol({inputs:{input:y},backend:e})),m=l.map(y=>Uc({inputs:{input:y},backend:e})),x=Vc({inputs:g,backend:e,attrs:{axis:r}}),b=Vc({inputs:m,backend:e,attrs:{axis:r}}),v=$s({inputs:{real:x,imag:b},backend:e});return g.forEach(y=>e.disposeIntermediateTensorInfo(y)),m.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),v}const c=l.map(g=>{const x=[-1,mt(g.shape.slice(r))];return Ke({inputs:{x:g},backend:e,attrs:{shape:x}})}),u=c.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=Er(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=WA(u,a,t[0].dtype,h),f=Er(l.map(g=>g.shape),r),p=e.makeTensorInfo(f,t[0].dtype,d);return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const vY={kernelName:Fm,backendName:"cpu",kernelFunc:Vc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n;Qt([i,r],"conv2d");const h=mo(l),d=Qn(i.shape,r.shape,o,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,v=d.dataFormat==="channelsLast",y=new os(d.outShape,i.dtype),w=le(i.shape),S=le(r.shape),C=w[0],_=v?w[1]:w[2],T=v?w[2]:1,I=v?1:w[1],A=y.strides[0],D=v?y.strides[1]:y.strides[2],k=v?y.strides[2]:1,M=v?1:y.strides[1],E=e.data.get(i.dataId).values,N=e.data.get(r.dataId).values,O=y.values;for(let L=0;L<d.batchSize;++L){const $=L*C,W=L*A;for(let q=0;q<d.outHeight;++q){const H=W+q*D,X=q*d.strideHeight-b;for(let it=0;it<f;++it){const lt=X+it*g;if(lt<0||lt>=d.inHeight)continue;const Y=it*S[0],yt=$+lt*_;for(let vt=0;vt<d.outWidth;++vt){const xt=H+vt*k,bt=vt*d.strideWidth-x;for(let Dt=0;Dt<p;++Dt){const ct=bt+Dt*m;if(ct<0||ct>=d.inWidth)continue;const ht=Y+Dt*S[1],_t=yt+ct*T;let Et=ht;for(let gt=0;gt<d.inChannels;++gt){const Ot=E[_t+gt*I];for(let Pt=0;Pt<d.outChannels;++Pt)O[xt+Pt*M]+=Ot*N[Et+Pt];Et+=d.outChannels}}}}}}return e.makeTensorInfo(y.shape,y.dtype,O)}const wY={kernelName:Pm,backendName:"cpu",kernelFunc:PN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n;Qt([i,r],"conv2dBackpropFilter");const h=mo(l),d=Qn(i.shape,u,o,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:g,filterWidth:m}=d,x=d.dataFormat==="channelsLast",b=new os(d.filterShape,"float32"),v=d.padInfo.left,y=d.padInfo.top,w=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,C=new os(i.shape,i.dtype,w),_=new os(r.shape,r.dtype,S);for(let T=0;T<g;++T){const I=Math.max(0,Math.ceil((y-T)/f)),A=Math.min(d.outHeight,(d.inHeight+y-T)/f);for(let D=0;D<m;++D){const k=Math.max(0,Math.ceil((v-D)/p)),M=Math.min(d.outWidth,(d.inWidth+v-D)/p);for(let E=0;E<d.inChannels;++E)for(let N=0;N<d.outChannels;++N){let O=0;for(let L=0;L<d.batchSize;++L)for(let $=I;$<A;++$){const W=T+$*f-y;for(let q=k;q<M;++q){const H=D+q*p-v;x?O+=C.get(L,W,H,E)*_.get(L,$,q,N):O+=C.get(L,E,W,H)*_.get(L,N,$,q)}}b.set(O,T,D,E,N)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const SY={kernelName:_y,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n;Qt([i,r],"conv2dBackpropInput");const h=le(r.shape),d=le(i.shape);let f=mo(c);const p=Qn(o,r.shape,a,1,l,u,!1,f),g=new os(p.inShape,"float32"),m=g.values,x=e.data.get(i.dataId).values,b=e.data.get(r.dataId).values,[v,y,w]=h,{batchSize:S,filterHeight:C,filterWidth:_,inChannels:T,inHeight:I,inWidth:A,outChannels:D,outHeight:k,outWidth:M,strideHeight:E,strideWidth:N}=p;f=p.dataFormat;const O=C-1-p.padInfo.top,L=_-1-p.padInfo.left,$=f==="channelsLast",W=g.strides[0],q=$?g.strides[1]:g.strides[2],H=$?g.strides[2]:1,X=$?1:g.strides[1],it=d[0],lt=$?d[1]:d[2],Y=$?d[2]:1,yt=$?1:d[1];for(let vt=0;vt<S;++vt)for(let xt=0;xt<T;++xt)for(let bt=0;bt<I;++bt){const Dt=bt-O,ct=Math.max(0,Math.ceil(Dt/E)),ht=Math.min(k,(C+Dt)/E);for(let _t=0;_t<A;++_t){const Et=_t-L,gt=Math.max(0,Math.ceil(Et/N)),Ot=Math.min(M,(_+Et)/N);let Pt=0;for(let Lt=ct;Lt<ht;++Lt){const re=Lt*E-Dt;for(let B=gt;B<Ot;++B){const F=B*N-Et,rt=it*vt+lt*Lt+Y*B,kt=v*(C-1-re)+y*(_-1-F)+w*xt;for(let Rt=0;Rt<D;++Rt){const zt=x[rt+yt*Rt],te=b[kt+Rt];Pt+=zt*te}}}const at=W*vt+q*bt+H*_t+X*xt;m[at]=Pt}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const TY={kernelName:Om,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n;Qt([i,r],"conv3d");const c=Zo(i.shape,r.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:g,padInfo:m}=c,x=m.front,b=m.left,v=m.top,y=new os(c.outShape,i.dtype),w=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,C=y.values,_=le(i.shape),T=le(r.shape);for(let I=0;I<c.batchSize;++I){const A=I*_[0],D=I*y.strides[0];for(let k=0;k<c.outDepth;++k){const M=D+k*y.strides[1],E=k*c.strideDepth-x;for(let N=0;N<u;++N){const O=E+N*f;if(O<0||O>=c.inDepth)continue;const L=N*T[0],$=A+O*_[1];for(let W=0;W<c.outHeight;++W){const q=M+W*y.strides[2],H=W*c.strideHeight-v;for(let X=0;X<h;++X){const it=H+X*p;if(it<0||it>=c.inHeight)continue;const lt=L+X*T[1],Y=$+it*_[2];for(let yt=0;yt<c.outWidth;++yt){const vt=q+yt*c.outChannels,xt=yt*c.strideWidth-b;for(let bt=0;bt<d;++bt){const Dt=xt+bt*g;if(Dt<0||Dt>=c.inWidth)continue;const ct=lt+bt*T[2],ht=Y+Dt*c.inChannels;let _t=ct;for(let Et=0;Et<c.inChannels;++Et){const gt=w[ht+Et];for(let Ot=0;Ot<c.outChannels;++Ot)C[vt+Ot]+=gt*S[_t+Ot];_t+=c.outChannels}}}}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const EY={kernelName:zm,backendName:"cpu",kernelFunc:IY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n;Qt([i,r],"conv3dBackpropFilterV2");const c=le(i.shape),u=le(r.shape),h=Zo(i.shape,l,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,g=h.filterDepth,m=h.filterHeight,x=h.filterWidth,b=new os(h.filterShape,"float32"),v=b.values,[y,w,S,C]=b.strides,_=e.data.get(r.dataId).values,[T,I,A,D]=u,k=e.data.get(i.dataId).values,[M,E,N,O]=c,L=h.padInfo.front,$=h.padInfo.left,W=h.padInfo.top;for(let q=0;q<g;++q){const H=Math.max(0,Math.ceil((L-q)/d)),X=Math.min(h.outDepth,(h.inDepth+L-q)/d),it=q*y;for(let lt=0;lt<m;++lt){const Y=Math.max(0,Math.ceil((W-lt)/f)),yt=Math.min(h.outHeight,(h.inHeight+W-lt)/f),vt=lt*w+it;for(let xt=0;xt<x;++xt){const bt=Math.max(0,Math.ceil(($-xt)/p)),Dt=Math.min(h.outWidth,(h.inWidth+$-xt)/p),ct=xt*S+vt;for(let ht=0;ht<h.inChannels;++ht){const _t=ht*C+ct;for(let Et=0;Et<h.outChannels;++Et){let gt=0;for(let Ot=0;Ot<h.batchSize;++Ot){const Pt=Ot*M,at=Ot*T;for(let Lt=H;Lt<X;++Lt){const B=(q+Lt*d-L)*E+Pt,F=Lt*I+at;for(let rt=Y;rt<yt;++rt){const Rt=(lt+rt*f-W)*N+B,zt=rt*A+F;for(let te=bt;te<Dt;++te){const nt=(xt+te*p-$)*O+Rt,Ut=te*D+zt;gt+=k[nt+ht]*_[Ut+Et]}}}}v[_t+Et]=gt}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const kY={kernelName:Sy,backendName:"cpu",kernelFunc:MY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n;Qt([i],"conv3dBackpropInputV2");const c=le(i.shape),u=le(r.shape),h=Zo(l,r.shape,a,1,o),d=new os(h.inShape,"float32"),f=d.values,[p,g,m,x]=d.strides,b=e.data.get(i.dataId).values,[v,y,w,S]=c,C=e.data.get(r.dataId).values,[_,T,I,A]=u,{batchSize:D,filterDepth:k,filterHeight:M,filterWidth:E,inChannels:N,inDepth:O,inHeight:L,inWidth:$,outChannels:W,outDepth:q,outHeight:H,outWidth:X,strideDepth:it,strideHeight:lt,strideWidth:Y}=h,yt=k-1-h.padInfo.front,vt=M-1-h.padInfo.top,xt=E-1-h.padInfo.left;for(let bt=0;bt<D;++bt)for(let Dt=0;Dt<N;++Dt)for(let ct=0;ct<O;++ct){const ht=ct-yt,_t=Math.max(0,Math.ceil(ht/it)),Et=Math.min(q,(k+ht)/it);for(let gt=0;gt<L;++gt){const Ot=gt-vt,Pt=Math.max(0,Math.ceil(Ot/lt)),at=Math.min(H,(M+Ot)/lt);for(let Lt=0;Lt<$;++Lt){const re=Lt-xt,B=Math.max(0,Math.ceil(re/Y)),F=Math.min(X,(E+re)/Y);let rt=0;for(let kt=_t;kt<Et;++kt){const Rt=kt*it-ht;for(let zt=Pt;zt<at;++zt){const te=zt*lt-Ot;for(let j=B;j<F;++j){const nt=j*Y-re,Ut=v*bt+y*kt+w*zt+S*j,jt=_*(k-1-Rt)+T*(M-1-te)+I*(E-1-nt)+A*Dt;for(let Vt=0;Vt<W;++Vt){const ie=b[Ut+Vt],Xt=C[jt+Vt];rt+=ie*Xt}}}}f[p*bt+g*ct+m*gt+x*Lt+Dt]=rt}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const NY={kernelName:Cy,backendName:"cpu",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RY=We(Gh,s=>Math.cos(s)),DY={kernelName:Gh,backendName:"cpu",kernelFunc:RY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=We(Hh,s=>Math.cosh(s)),LY={kernelName:Hh,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,[u,h,d,f]=i.shape,p=r.shape[0],[g,m]=a,x=we([p,g,m,f],"float32"),b=e.data.get(r.dataId).values,v=e.data.get(o.dataId).values,y=e.data.get(i.dataId).values,w=le(i.shape),S=le(x.shape);for(let C=0;C<p;C++){const _=C*4,T=b[_],I=b[_+1],A=b[_+2],D=b[_+3],k=v[C];if(k>=u)continue;const M=g>1?(A-T)*(h-1)/(g-1):0,E=m>1?(D-I)*(d-1)/(m-1):0;for(let N=0;N<g;N++){const O=g>1?T*(h-1)+N*M:.5*(T+A)*(h-1);if(O<0||O>h-1){for(let L=0;L<m;L++)for(let $=0;$<f;$++){const W=$+L*S[2]+N*S[1]+C*S[0];x.values[W]=c}continue}if(l==="bilinear"){const L=Math.floor(O),$=Math.ceil(O),W=O-L;for(let q=0;q<m;q++){const H=m>1?I*(d-1)+q*E:.5*(I+D)*(d-1);if(H<0||H>d-1){for(let Y=0;Y<f;Y++){const yt=Y+q*S[2]+N*S[1]+C*S[0];x.values[yt]=c}continue}const X=Math.floor(H),it=Math.ceil(H),lt=H-X;for(let Y=0;Y<f;Y++){let yt=Y+X*w[2]+L*w[1]+k*w[0];const vt=y[yt];yt=Y+it*w[2]+L*w[1]+k*w[0];const xt=y[yt];yt=Y+X*w[2]+$*w[1]+k*w[0];const bt=y[yt];yt=Y+it*w[2]+$*w[1]+k*w[0];const Dt=y[yt],ct=vt+(xt-vt)*lt,ht=bt+(Dt-bt)*lt;yt=Y+q*S[2]+N*S[1]+C*S[0],x.values[yt]=ct+(ht-ct)*W}}}else for(let L=0;L<m;++L){const $=m>1?I*(d-1)+L*E:.5*(I+D)*(d-1);if($<0||$>d-1){for(let H=0;H<f;H++){const X=H+L*S[2]+N*S[1]+C*S[0];x.values[X]=c}continue}const W=Math.round($),q=Math.round(O);for(let H=0;H<f;H++){const X=H+W*w[2]+q*w[1]+k*w[0],it=H+L*S[2]+N*S[1]+C*S[0];x.values[it]=y[X]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const PY={kernelName:Iy,backendName:"cpu",kernelFunc:FY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Qt(i,"cumprod");const l=un([r],i.shape.length);let c=i;l!=null&&(c=Is({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=vn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Bs(c.dtype,"int32"),d=fy(mt(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,b)=>x+p-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=p)for(let b=0;b<p;b++){const v=g(x,b);if(b===0)d[v]=o?1:f[v];else{const y=g(x,b-1);d[v]=o?f[y]*d[y]:f[v]*d[y]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Jo(l),b=Is({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),b}return m}const zY={kernelName:Ty,backendName:"cpu",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Qt(i,"cumsum");const l=un([r],i.shape.length);let c=i;l!=null&&(c=Is({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=vn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Bs(c.dtype,"int32"),d=ls(mt(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,b)=>x+p-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=p)for(let b=0;b<p;b++){const v=g(x,b);if(b===0)d[v]=o?0:f[v];else{const y=g(x,b-1);d[v]=o?f[y]+d[y]:f[v]+d[y]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Jo(l),b=Is({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),b}return m}const UY={kernelName:Bm,backendName:"cpu",kernelFunc:BY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Vw(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=UA(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const WY={kernelName:Ey,backendName:"cpu",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n;P(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,f=u/(r*r),p=e.data.get(i.dataId).values,g=new Float32Array(a*h*d*f);let m=0;for(let x=0;x<a;++x)for(let b=0;b<h;++b){const v=Math.floor(b/r),y=b%r;for(let w=0;w<d;++w){const S=Math.floor(w/r),C=w%r,_=(y*r+C)*f;for(let T=0;T<f;++T){const A=T+_+u*(S+c*(v+l*x));g[m++]=p[A]}}}return e.makeTensorInfo([a,h,d,f],i.dtype,g)}const HY={kernelName:My,backendName:"cpu",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;Qt([i,r],"depthwiseConv2DNative");const u=le(i.shape),h=le(r.shape);let d=l;d==null&&(d=[1,1]),P(us(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=Qn(i.shape,r.shape,o,d,a,c,!0),{filterHeight:p,filterWidth:g,dilationHeight:m,dilationWidth:x,padInfo:b}=f,v=b.left,y=b.top,w=f.outChannels/f.inChannels,S=new os(f.outShape,i.dtype),C=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,T=S.values;for(let I=0;I<f.batchSize;++I){const A=I*u[0],D=I*S.strides[0];for(let k=0;k<f.outHeight;++k){const M=D+k*S.strides[1],E=k*f.strideHeight-y;for(let N=0;N<p;++N){const O=E+N*m;if(O<0||O>=f.inHeight)continue;const L=N*h[0],$=A+O*u[1];for(let W=0;W<f.outWidth;++W){const q=M+W*S.strides[2],H=W*f.strideWidth-v;for(let X=0;X<g;++X){const it=H+X*x;if(it<0||it>=f.inWidth)continue;const lt=L+X*h[1],Y=$+it*f.inChannels;let yt=q,vt=lt;for(let xt=0;xt<f.inChannels;++xt){const bt=C[Y+xt];for(let Dt=0;Dt<w;++Dt)T[yt+Dt]+=bt*_[vt+Dt];yt+=w,vt+=w}}}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const qY={kernelName:Um,backendName:"cpu",kernelFunc:ON};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n;Qt([i,r],"depthwiseConv2dNativeBackpropFilter");const h=Qn(i.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:g}=h,m=new os(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,y=e.data.get(i.dataId).values,w=new os(i.shape,i.dtype,y),S=e.data.get(r.dataId).values,C=new os(r.shape,r.dtype,S);for(let _=0;_<p;++_){const T=Math.max(0,Math.ceil((b-_)/d)),I=Math.min(h.outHeight,(h.inHeight+b-_)/d);for(let A=0;A<g;++A){const D=Math.max(0,Math.ceil((x-A)/f)),k=Math.min(h.outWidth,(h.inWidth+x-A)/f);for(let M=0;M<h.outChannels;++M){const E=Math.trunc(M/v),N=M%v;let O=0;for(let L=0;L<h.batchSize;++L)for(let $=T;$<I;++$){const W=_+$*d-b;for(let q=D;q<k;++q){const H=A+q*f-x;O+=w.get(L,W,H,E)*C.get(L,$,q,M)}}m.set(O,_,A,E,N)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const XY={kernelName:ky,backendName:"cpu",kernelFunc:jY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n;Qt([i,r],"depthwiseConv2DNativeBackpropInput");const h=le(i.shape),d=le(r.shape),f=Qn(u,r.shape,o,a,l,c,!0),p=new os(f.inShape,"float32"),g=p.values,[m,x,b]=p.strides,v=e.data.get(i.dataId).values,[y,w,S]=h,C=e.data.get(r.dataId).values,[_,T,I]=d,{batchSize:A,filterHeight:D,filterWidth:k,inChannels:M,inHeight:E,inWidth:N,outChannels:O,outHeight:L,outWidth:$,strideHeight:W,strideWidth:q}=f,H=D-1-f.padInfo.top,X=k-1-f.padInfo.left,it=O/M;for(let lt=0;lt<A;++lt)for(let Y=0;Y<M;++Y)for(let yt=0;yt<E;++yt){const vt=yt-H,xt=Math.max(0,Math.ceil(vt/W)),bt=Math.min(L,(D+vt)/W);for(let Dt=0;Dt<N;++Dt){const ct=Dt-X,ht=Math.max(0,Math.ceil(ct/q)),_t=Math.min($,(k+ct)/q);let Et=0;for(let gt=xt;gt<bt;++gt){const Ot=gt*W-vt;for(let Pt=ht;Pt<_t;++Pt){const at=Pt*q-ct,Lt=y*lt+w*gt+S*Pt,re=_*(D-1-Ot)+T*(k-1-at)+I*Y;for(let B=0;B<it;++B){const F=Y*it+B,rt=v[Lt+F],kt=C[re+B];Et+=rt*kt}}}g[m*lt+x*yt+b*Dt+Y]=Et}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const YY={kernelName:Ay,backendName:"cpu",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(s){const{inputs:t,backend:e}=s,{x:n}=t,i=mt(n.shape),r=e.data.get(n.dataId).values,o=we([i,i],n.dtype),a=o.values;for(let c=0;c<r.length;c++)a[c*i+c]=r[c];const l=[...n.shape,...n.shape];return e.makeTensorInfo(l,o.dtype,o.values)}const JY={kernelName:_I,backendName:"cpu",kernelFunc:ZY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QY={kernelName:Vm,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i}=s,{strides:r,pad:o,dilations:a}=e,l=t,c=l.data.get(n.dataId).values,u=n.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:f,inHeight:p,inWidth:g,inChannels:m,outHeight:x,outWidth:b,padInfo:v,strideHeight:y,strideWidth:w,filterHeight:S,filterWidth:C,dilationHeight:_,dilationWidth:T,outShape:I}=Ad(n.shape,i.shape,r,o,"NHWC",a),A=mt(I),D=I.length,k=Sn(n.dtype,A);for(let E=0;E<f;++E)for(let N=0;N<x;++N){const O=N*y-v.top;for(let L=0;L<b;++L){const $=L*w-v.left;for(let W=0;W<m;++W){let q=Number.MIN_SAFE_INTEGER;for(let X=0;X<S;++X){const it=O+X*_;if(it>=0&&it<p)for(let lt=0;lt<C;++lt){const Y=$+lt*T;if(Y>=0&&Y<g){const yt=Ir([E,it,Y,W],u,le(n.shape)),vt=Ir([X,lt,W],d,le(i.shape)),xt=c[yt]+h[vt];xt>q&&(q=xt)}}}const H=Ir([E,N,L,W],D,le(I));k[H]=q}}}return{dataId:l.write(xl(k,n.dtype),I,n.dtype),shape:I,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tZ={kernelName:rb,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Yi(n.shape,c.data.get(n.dataId).values),h=Yi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:b,strideHeight:v,strideWidth:y,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:T}=Ad(n.shape,i.shape,o,a,"NHWC",l);P(r.rank===T.length,()=>`Error in ${rb}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const I=Yi(T,c.data.get(r.dataId).values),A=gI(i.shape,i.dtype);for(let k=0;k<d;++k)for(let M=0;M<m;++M){const E=M*v-b.top;for(let N=0;N<x;++N){const O=N*y-b.left;for(let L=0;L<g;++L){let $=Number.MIN_SAFE_INTEGER,W=0,q=0;for(let H=0;H<w;++H){const X=E+H*C;if(X>=0&&X<f)for(let it=0;it<S;++it){const lt=O+it*_;if(lt>=0&&lt<p){const Y=u[k][X][lt][L]+h[H][it][L];Y>$&&($=Y,W=H,q=it)}}}A[W][q][L]+=I[k][M][N][L]}}}return{dataId:c.write(xl(A,n.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eZ={kernelName:ib,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Yi(n.shape,c.data.get(n.dataId).values),h=Yi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:b,strideHeight:v,strideWidth:y,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:T}=Ad(n.shape,i.shape,o,a,"NHWC",l);P(r.rank===T.length,()=>`Error in ${ib}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const I=Yi(T,c.data.get(r.dataId).values),A=gI(n.shape,n.dtype);for(let k=0;k<d;++k)for(let M=0;M<m;++M){const E=M*v-b.top;for(let N=0;N<x;++N){const O=N*y-b.left;for(let L=0;L<g;++L){let $=Number.MIN_SAFE_INTEGER,W=E<0?0:E,q=O<0?0:O;for(let H=0;H<w;++H){const X=E+H*C;if(X>=0&&X<f)for(let it=0;it<S;++it){const lt=O+it*_;if(lt>=0&&lt<p){const Y=u[k][X][lt][L]+h[H][it][L];Y>$&&($=Y,W=X,q=lt)}}}A[k][W][q][L]+=I[k][M][N][L]}}}return{dataId:c.write(xl(A,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Qt(i,"sum");let a;i.dtype==="bool"?a=jo({inputs:{x:i},backend:e,attrs:{dtype:"int32"}}):a=Fr({inputs:{x:i},backend:e});const l=a.shape.length,c=_e(r,a.shape),u=un(c,l);let h=c,d=a;u!=null&&(d=Is({inputs:{x:a},backend:e,attrs:{perm:u}}),h=vn(h.length,l)),ts("sum",h,d.shape.length);const[f,p]=Vn(d.shape,h),g=Bs(d.dtype,"int32");let m=tm(e,f,g);const x=mt(p),b=e.data.get(m.dataId).values,v=e.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const w=y*x;let S=0;for(let C=0;C<x;++C)S+=v[w+C];b[y]=S}if(o){const y=yn(m.shape,c),w=m;m=Ke({inputs:{x:m},backend:e,attrs:{shape:y}}),e.disposeIntermediateTensorInfo(w)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(d),m}const nZ={kernelName:wg,backendName:"cpu",kernelFunc:qd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=hw(i,r.length);fw(o.length,l,r);const{path:c,steps:u}=pw(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:b}=dw(f,l[m]);let v;mw(x)?v=r[m]:(v=Is({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(v));const y=v.shape.slice();for(let w=0;w<b.length;++w)y.splice(b[w],0,1);Fe(v.shape,y)||(v=Ke({inputs:{x:v},backend:e,attrs:{shape:y}}),p.push(v)),d===null?d=v:(d=e0({inputs:{a:v,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=qd({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const iZ={kernelName:SI,backendName:"cpu",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rZ(s){const{inputs:t,backend:e}=s,{dy:n,y:i}=t;Qt([n,i],"eluGrad");const r=new Float32Array(mt(i.shape)),o=e.data.get(i.dataId).values,a=e.data.get(n.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=1?r[l]=a[l]:r[l]=a[l]*(c+1)}return e.makeTensorInfo(i.shape,"float32",r)}const oZ={kernelName:Ny,backendName:"cpu",kernelFunc:rZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ=iw,lZ=rw,cZ=ow,uZ=aw,hZ=lw,dZ=cw,fZ=We(Xh,s=>{const t=Math.sign(s),e=Math.abs(s),n=1/(1+aZ*e);return t*(1-((((dZ*n+hZ)*n+uZ)*n+cZ)*n+lZ)*n*Math.exp(-e*e))}),pZ={kernelName:Xh,backendName:"cpu",kernelFunc:fZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(s){const{inputs:t,backend:e,attrs:n}=s,{input:i}=t,{dim:r}=n,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(P(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),Ke({inputs:{x:i},backend:e,attrs:{shape:a}})}const mZ={kernelName:Gm,backendName:"cpu",kernelFunc:sm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=Cn((s,t)=>s/t),Xw=Wn(qh,gZ),Lb={kernelName:qh,backendName:"cpu",kernelFunc:Xw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(s,t,e){const n=s.shape,i=n[0],r=n[1],o=e.data.get(s.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[i,r],u=mt(c),h=Yn("float32",u),d=Yn("float32",u);for(let m=0;m<i;m++){const x=al({inputs:{x:a},backend:e,attrs:{begin:[m,0],size:[1,r]}}),b=al({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,r]}}),v=$s({inputs:{real:x,imag:b},backend:e}),{real:y,imag:w}=xZ(v,t,e),S=co(y,w);for(let C=0;C<r;C++){const _=uw(S,C);h[m*r+C]=_.real,d[m*r+C]=_.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v)}const f=e.makeTensorInfo(c,"float32",h),p=e.makeTensorInfo(c,"float32",d),g=$s({inputs:{real:f,imag:p},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}function xZ(s,t,e){const n=mt(s.shape),i=e.data.get(s.dataId),r=e.data.get(i.complexTensorInfos.real.dataId).values,o=e.data.get(i.complexTensorInfos.imag.dataId).values;if(bZ(n)){const a=Fb(r,o,n,t,e),l=[s.shape[0],s.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",Yo(n,"float32")),d=Fr({inputs:{x:h},backend:e}),f=Lb.kernelFunc({inputs:{a:c,b:h},backend:e}),p=Lb.kernelFunc({inputs:{a:u,b:d},backend:e}),g=e.data.get(f.dataId).values,m=e.data.get(p.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),{real:g,imag:m}}return a}else{const a=co(r,o),l=yZ(a,n,t);return lM(l)}}function bZ(s){return(s&s-1)===0}function Fb(s,t,e,n,i){if(e===1)return{real:s,imag:t};const r=co(s,t),o=e/2,a=cM(r),l=a.real,c=a.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),f=$s({inputs:{real:h,imag:d},backend:i}),p=uM(r),g=p.real,m=p.imag,x=[g.length],b=i.makeTensorInfo(x,"float32",g),v=i.makeTensorInfo(x,"float32",m),y=$s({inputs:{real:b,imag:v},backend:i}),w=Fb(l,c,o,n,i),S=w.real,C=w.imag,_=[S.length],T=i.makeTensorInfo(_,"float32",S),I=i.makeTensorInfo(_,"float32",C),A=$s({inputs:{real:T,imag:I},backend:i}),D=Fb(g,m,o,n,i),k=D.real,M=D.imag,E=[k.length],N=i.makeTensorInfo(E,"float32",k),O=i.makeTensorInfo(E,"float32",M),L=$s({inputs:{real:N,imag:O},backend:i}),$=dM(e,n),W=[$.real.length],q=i.makeTensorInfo(W,"float32",$.real),H=i.makeTensorInfo(W,"float32",$.imag),X=$s({inputs:{real:q,imag:H},backend:i}),it=e0({inputs:{a:X,b:L},backend:i}),lt=Bc({inputs:{a:A,b:it},backend:i}),Y=qw({inputs:{a:A,b:it},backend:i}),yt=ol({inputs:{input:lt},backend:i}),vt=ol({inputs:{input:Y},backend:i}),xt=Uc({inputs:{input:lt},backend:i}),bt=Uc({inputs:{input:Y},backend:i}),Dt=Vc({inputs:[yt,vt],backend:i,attrs:{axis:0}}),ct=Vc({inputs:[xt,bt],backend:i,attrs:{axis:0}}),ht=i.data.get(Dt.dataId).values,_t=i.data.get(ct.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(X),i.disposeIntermediateTensorInfo(it),i.disposeIntermediateTensorInfo(lt),i.disposeIntermediateTensorInfo(Y),i.disposeIntermediateTensorInfo(yt),i.disposeIntermediateTensorInfo(xt),i.disposeIntermediateTensorInfo(vt),i.disposeIntermediateTensorInfo(bt),i.disposeIntermediateTensorInfo(Dt),i.disposeIntermediateTensorInfo(ct),{real:ht,imag:_t}}function yZ(s,t,e){const n=new Float32Array(t*2);for(let i=0;i<t;i++){let r=0,o=0;for(let a=0;a<t;a++){const l=fM(i*a,t,e),c=uw(s,a);r+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}e&&(r/=t,o/=t),hM(n,r,o,i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(s){const{inputs:t,backend:e}=s,{input:n}=t,i=mt(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ke({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=zN(a,!1,e),c=Ke({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const wZ={kernelName:Ry,backendName:"cpu",kernelFunc:vZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(s){const{backend:t,attrs:e}=s,{shape:n,value:i,dtype:r}=e,o=r||Dh(i),a=Sn(o,mt(n));return SZ(a,i,o),t.makeTensorInfo(n,o,a)}const _Z={kernelName:Dy,backendName:"cpu",kernelFunc:Kw};function SZ(s,t,e){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CZ={kernelName:$y,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,i=e,r=Yn(n.dtype,mt(n.shape)),[o,a,l,c]=n.shape,u=i.data.get(n.dataId).values;for(let d=0;d<o;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const g=p*(l*c);for(let m=0;m<l;m++){const x=m*c;for(let b=0;b<c;b++){const v=Math.round(l-m-1),y=f+g+x+b;let w=u[y];if(v>=0&&v<l){const S=v*c,C=f+g+S+b;w=u[C]}r[y]=w}}}}return{dataId:i.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ=Cn((s,t)=>Math.floor(s/t)),IZ=Wn(Jh,TZ,null,"int32"),EZ={kernelName:Jh,backendName:"cpu",kernelFunc:IZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=PN({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=Ke({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=Bc({inputs:{a:g,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else g=Bc({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(f){const m=g;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Ke({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=nm(e,g,f,x,p),e.disposeIntermediateTensorInfo(x)}else g=nm(e,g,f,a,p);e.disposeIntermediateTensorInfo(m)}return g}const kZ={kernelName:Rp,backendName:"cpu",kernelFunc:MZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=ON({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=Bc({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(f){const m=g;g=nm(e,g,f,a,p),e.disposeIntermediateTensorInfo(m)}return g}const NZ={kernelName:$I,backendName:"cpu",kernelFunc:AZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RZ(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=mt(n.shape),o=i.shape,a=o[o.length-1],[l,c,u,h]=hv(n,i);if(c===0)return e.makeTensorInfo(l,n.dtype,[]);const d=e.data.get(i.dataId).values,f=e.bufferSync(n),p=YA(d,f,n.dtype,c,a,u,h,n.shape,r);return e.makeTensorInfo(l,n.dtype,p.values)}const DZ={kernelName:CI,backendName:"cpu",kernelFunc:RZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Z(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n;Qt([i,r],"gatherV2");const l=_e(o,i.shape)[0],c=e.data.get(r.dataId).values,u=i.shape[l];for(let y=0;y<c.length;++y){const w=c[y];P(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=mt(r.shape),f=xw(i,r,l,h),p=Ke({inputs:{x:i},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Ke({inputs:{x:r},backend:e,attrs:{shape:[f.batchSize,d/f.batchSize]}}),m=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=e.bufferSync(g),b=e.bufferSync(p),v=ZA(b,x,m);return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(f.outputShape,v.dtype,v.values)}const LZ={kernelName:qm,backendName:"cpu",kernelFunc:$Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FZ(s){const{inputs:t,backend:e}=s,{input:n}=t,i=mt(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ke({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=zN(a,!0,e),c=Ke({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const PZ={kernelName:Ly,backendName:"cpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ=We(ed,s=>Number.isFinite(s)?1:0,"bool"),zZ={kernelName:ed,backendName:"cpu",kernelFunc:OZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZ=We(nd,s=>Math.abs(s)===1/0?1:0,"bool"),UZ={kernelName:nd,backendName:"cpu",kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VZ=We(sd,s=>Number.isNaN(s)?1:0,"bool"),WZ={kernelName:sd,backendName:"cpu",kernelFunc:VZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GZ(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=nN(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const HZ={kernelName:TI,backendName:"cpu",kernelFunc:GZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qZ=We(rd,s=>Math.log1p(s)),jZ={kernelName:rd,backendName:"cpu",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XZ=Cn((s,t)=>s&&t),KZ=Wn(Zm,XZ,null,"bool"),YZ={kernelName:Zm,backendName:"cpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZZ=We(Jm,s=>s?0:1,"bool"),JZ={kernelName:Jm,backendName:"cpu",kernelFunc:ZZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QZ=Cn((s,t)=>s||t),tJ=Wn(Qm,QZ,null,"bool"),eJ={kernelName:Qm,backendName:"cpu",kernelFunc:tJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n;Qt(i,"LRN");const c=i.shape[3],u=c-1,h=e.data.get(i.dataId).values,d=mt(i.shape),f=new Float32Array(d);function p(g){const m=g%c;let x=g-m+Math.max(0,m-r);const b=g-m+Math.min(m+r,u);let v=0;for(;x<=b;x++){const y=h[x];v+=y*y}return v}for(let g=0;g<d;g++){const m=p(g),x=h[g]*Math.pow(o+a*m,-l);f[g]=x}return e.makeTensorInfo(i.shape,i.dtype,f)}const sJ={kernelName:tg,backendName:"cpu",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n;Qt(o,"LRNGrad");const h=mt(o.shape),d=o.shape[3],f=e.data.get(o.dataId).values,p=e.data.get(i.dataId).values,g=e.data.get(r.dataId).values,m=new Float32Array(h),x=h;for(let b=0;b<x;b++){const v=b%d,y=b-v+Math.max(0,v-a),w=b-v+Math.min(d,v+a+1);let S=0;for(let C=y;C<w;C++)S+=Math.pow(p[C],2);S=c*S+l;for(let C=y;C<w;C++){let _=-2*c*u*p[C]*g[b]/S;b===C&&(_+=Math.pow(S,-u)),_*=f[b],m[C]+=_}}return e.makeTensorInfo(o.shape,i.dtype,m)}const rJ={kernelName:Py,backendName:"cpu",kernelFunc:iJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=e;let l=i.shape;const c=l.length,u=_e(r,l);let h=u;const d=un(h,c);let f=a.data.get(i.dataId).values;if(d!=null){const y=new Array(c);for(let w=0;w<y.length;w++)y[w]=l[d[w]];f=Gw(f,l,i.dtype,d,y),h=vn(h.length,c),l=y}Qt(i,"max"),ts("max",h,c);const[p,g]=Vn(l,h),m=mt(g),x=iN(f,m,p,i.dtype),b=a.write(x,p,i.dtype);let v=p;return o&&(v=yn(p,u)),{dataId:b,shape:v,dtype:i.dtype}}const oJ={kernelName:eg,backendName:"cpu",kernelFunc:BN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Qt(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(us(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Di(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Fe(u.inShape,u.outShape))h=Fr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=le(i.shape),p=jw(d,i.shape,i.dtype,f,u,"max");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const lJ={kernelName:ng,backendName:"cpu",kernelFunc:aJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Qt(i,"maxPool3d");const u=po(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=FN(h,i.shape,i.dtype,le(i.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const uJ={kernelName:sg,backendName:"cpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hJ(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Qt([i,r],"maxPool3DGrad");const u=po(r.shape,o,a,1,l,c),h=e.bufferSync(r),d=JK(h,u),f=u.strideDepth,p=u.strideHeight,g=u.strideWidth,m=u.dilationDepth,x=u.dilationHeight,b=u.dilationWidth,v=u.effectiveFilterDepth,y=u.effectiveFilterHeight,w=u.effectiveFilterWidth,S=v-1-u.padInfo.front,C=w-1-u.padInfo.left,_=y-1-u.padInfo.top,T=we(r.shape,"float32"),I=e.bufferSync(i);for(let A=0;A<u.batchSize;++A)for(let D=0;D<u.inChannels;++D)for(let k=0;k<u.inDepth;++k)for(let M=0;M<u.inHeight;++M)for(let E=0;E<u.inWidth;++E){const N=k-S,O=M-_,L=E-C;let $=0;for(let W=0;W<v;W+=m){const q=(N+W)/f;if(!(q<0||q>=u.outDepth||Math.floor(q)!==q))for(let H=0;H<y;H+=x){const X=(O+H)/p;if(!(X<0||X>=u.outHeight||Math.floor(X)!==X))for(let it=0;it<w;it+=b){const lt=(L+it)/g;if(lt<0||lt>=u.outWidth||Math.floor(lt)!==lt)continue;const Y=v*y*w-1-d.get(A,q,X,lt,D),yt=W*y*w+H*w+it,vt=Y===yt?1:0;if(vt===0)continue;const xt=I.get(A,q,X,lt,D);$+=xt*vt}}}T.set($,A,k,M,E,D)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const dJ={kernelName:zy,backendName:"cpu",kernelFunc:hJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fJ(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Qt([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=Di(a.shape,l,c,1,u,h),f=e.data.get(a.dataId).values,p=we(d.outShape,a.dtype,LN(f,a.shape,a.dtype,d).values),g=d.strideHeight,m=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,y=d.effectiveFilterWidth,w=y-1-d.padInfo.left,S=v-1-d.padInfo.top,C=we(a.shape,"float32"),_=e.data.get(i.dataId).values,T=we(i.shape,"float32",_);for(let I=0;I<d.batchSize;++I)for(let A=0;A<d.inChannels;++A)for(let D=0;D<d.inHeight;++D)for(let k=0;k<d.inWidth;++k){const M=D-S,E=k-w;let N=0;for(let O=0;O<v;O+=x){const L=(M+O)/g;if(!(L<0||L>=d.outHeight||Math.floor(L)!==L))for(let $=0;$<y;$+=b){const W=(E+$)/m;if(W<0||W>=d.outWidth||Math.floor(W)!==W)continue;const q=v*y-1-p.get(I,L,W,A),H=O*y+$,X=q===H?1:0;if(X===0)continue;const it=T.get(I,L,W,A);N+=it*X}}C.set(N,I,D,k,A)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const pJ={kernelName:Oy,backendName:"cpu",kernelFunc:fJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mJ(s,t,e,n,i){const r=le(t),o=jw(s,t,e,r,i,"max"),a=LN(s,t,e,i,!0,n);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gJ={kernelName:II,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;Qt(n,"MaxPoolWithArgmax");const c=l.data.get(n.dataId).values,u=Di(n.shape,i,r,[1,1],o),[h,d]=mJ(c,n.shape,n.dtype,a,u),f=l.write(h,u.outShape,n.dtype),p=l.write(d,u.outShape,n.dtype);return[{dataId:f,shape:u.outShape,dtype:n.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=_e(r,i.shape),c=Vn(i.shape,a)[1],u=mt(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=jo({inputs:{x:i},backend:e,attrs:{dtype:"float32"}});h.push(f);const p=Xw({inputs:{a:f,b:d},backend:e});h.push(p);const g=qd({inputs:{x:p},backend:e,attrs:{axis:r,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}const bJ={kernelName:ig,backendName:"cpu",kernelFunc:xJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Qt(i,"min");const a=_e(r,i.shape);let l=a;const c=un(l,i.shape.length);let u=i;c!=null&&(u=Is({inputs:{x:i},backend:e,attrs:{perm:c}}),l=vn(l.length,i.shape.length)),ts("min",l,u.shape.length);const[h,d]=Vn(u.shape,l),f=mt(d),p=ls(mt(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const b=x*f;let v=g[b];for(let y=0;y<f;++y){const w=g[b+y];(Number.isNaN(w)||w<v)&&(v=w)}p[x]=v}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=yn(h,a),b=Ke({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),b}return m}const vJ={kernelName:rg,backendName:"cpu",kernelFunc:yJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,mode:o}=n;Qt(i,"mirrorPad");const a=r.map((v,y)=>v[0]+i.shape[y]+v[1]),l=r.map(v=>v[0]),c=r.map((v,y)=>v[0]+i.shape[y]),u=o==="reflect"?0:1,h=e.data.get(i.dataId).values,d=i.shape.length,f=le(i.shape),p=mt(a),g=a.length,m=le(a),x=Yn(i.dtype,p);for(let v=0;v<p;v++){let y=nu(v,g,m);for(let S=0;S<g;S++)y[S]<l[S]?y[S]=l[S]*2-y[S]-u:y[S]>=c[S]&&(y[S]=(c[S]-1)*2-y[S]+u);y=y.map((S,C)=>S-l[C]);const w=Ir(y,d,f);x[v]=h[w]}return{dataId:e.write(x,a,i.dtype),shape:a,dtype:i.dtype}}const _J={kernelName:og,backendName:"cpu",kernelFunc:wJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ=Cn((s,t)=>{const e=s%t;return s<0&&t<0||s>=0&&t>=0?e:(e+t)%t}),CJ=Wn(ld,SJ),TJ={kernelName:ld,backendName:"cpu",kernelFunc:CJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=i.shape.length;let a=r;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=_e([a],i.shape),c=BN({inputs:{x:i},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=yn(c.shape,l),h=Ke({inputs:{x:c},backend:e,attrs:{shape:u}}),d=qw({inputs:{a:i,b:h},backend:e}),f=jA({inputs:{x:d},backend:e}),p=qd({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),g=Ke({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Xw({inputs:{a:f,b:g},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const IJ={kernelName:Cg,backendName:"cpu",kernelFunc:UN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EJ(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n;Qt(i,"multinomial");const l=a?i:UN({inputs:{logits:i},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,r],f=ls(mt(d),"int32");for(let p=0;p<c;++p){const g=p*u,m=new Float32Array(u-1);m[0]=h[g];for(let v=1;v<m.length;++v)m[v]=m[v-1]+h[g+v];const x=$v.alea(o.toString()),b=p*r;for(let v=0;v<r;++v){const y=x();f[b+v]=m.length;for(let w=0;w<m.length;w++)if(y<m[w]){f[b+v]=w;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",f)}const MJ={kernelName:EI,backendName:"cpu",kernelFunc:EJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ=Wv;function AJ(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n;Qt(i,"NonMaxSuppression");const c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,{selectedIndices:h}=kJ(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const NJ={kernelName:By,backendName:"cpu",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RJ=Gv;function DJ(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n;Qt(i,"NonMaxSuppressionPadded");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,{selectedIndices:d,validOutputs:f}=RJ(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const $J={kernelName:Uy,backendName:"cpu",kernelFunc:DJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ=Hv;function FJ(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n;Qt(i,"NonMaxSuppressionWithScore");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=LJ(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const PJ={kernelName:Vy,backendName:"cpu",kernelFunc:FJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n;Qt(i,"oneHot");const c=mt(i.shape),u=new Float32Array(c*o);u.fill(l);const h=e.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return e.makeTensorInfo([...i.shape,o],r,u)}const zJ={kernelName:ug,backendName:"cpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){const i=ol({inputs:{input:n},backend:e}),r=im({inputs:{x:i},backend:e}),o=Uc({inputs:{input:n},backend:e}),a=im({inputs:{x:o},backend:e}),l=$s({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Kw({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}const BJ={kernelName:Eg,backendName:"cpu",kernelFunc:im};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){const i=ol({inputs:{input:n},backend:e}),r=VN({inputs:{x:i},backend:e}),o=Uc({inputs:{input:n},backend:e}),a=im({inputs:{x:o},backend:e}),l=$s({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Kw({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}const UJ={kernelName:cg,backendName:"cpu",kernelFunc:VN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return sm({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{Ri(r,u.shape,"All tensors passed to stack must have matching shapes"),P(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=sm({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=Vc({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const VJ={kernelName:hg,backendName:"cpu",kernelFunc:WN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;Qt(i,"pad");const a=r.map((b,v)=>b[0]+i.shape[v]+b[1]),l=r.map(b=>b[0]),c=e.data.get(i.dataId).values,u=mt(i.shape),h=i.shape.length,d=le(i.shape),f=mt(a),p=a.length,g=le(a),m=Yn(i.dtype,f);o!==0&&m.fill(o);for(let b=0;b<u;b++){const y=nu(b,h,d).map((S,C)=>S+l[C]),w=Ir(y,p,g);m[w]=c[b]}return{dataId:e.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const GN={kernelName:dg,backendName:"cpu",kernelFunc:WJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GJ=Cn((s,t)=>Math.pow(s,t)),HJ=Wn(ud,GJ),qJ={kernelName:ud,backendName:"cpu",kernelFunc:HJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jJ(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,a=i.map(m=>e.data.get(m.dataId).values),l=i.map(m=>m.shape),c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[h,d,f]=uN(a,l,c,r.shape,r.dtype,u,o.shape),p=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(f,r.dtype,d);return p.concat([g])}const XJ={kernelName:MI,backendName:"cpu",kernelFunc:jJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=hN(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const YJ={kernelName:kI,backendName:"cpu",kernelFunc:KJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZJ(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a.map(m=>e.data.get(m.dataId).values),f=a.map(m=>m.shape),[p,g]=dN(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const JJ={kernelName:AI,backendName:"cpu",kernelFunc:ZJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QJ(s){const{backend:t,attrs:e}=s,{start:n,stop:i,dtype:r,step:o}=e,a=fN(n,i,o,r);return t.makeTensorInfo([a.length],r,a)}const tQ={kernelName:Wy,backendName:"cpu",kernelFunc:QJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eQ=We(hd,s=>1/s),nQ={kernelName:hd,backendName:"cpu",kernelFunc:eQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sQ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Qt(i,"resizeBilinear");const l=le(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(mt([h,c,u,p])),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],b=[r&&c>1?c-1:c,r&&u>1?u-1:u];let v=0;const y=x[0]/b[0],w=x[1]/b[1];for(let S=0;S<h;S++)for(let C=0;C<c;C++){let _;o?_=y*(C+.5)-.5:_=y*C;const T=Math.max(0,Math.floor(_)),I=_-T,A=Math.min(d-1,Math.ceil(_)),D=S*l[0]+T*l[1],k=S*l[0]+A*l[1];for(let M=0;M<u;M++){let E;o?E=w*(M+.5)-.5:E=w*M;const N=Math.max(0,Math.floor(E)),O=E-N,L=Math.min(f-1,Math.ceil(E)),$=D+N*l[2],W=k+N*l[2],q=D+L*l[2],H=k+L*l[2];for(let X=0;X<p;X++){const it=g[$+X],lt=g[W+X],Y=g[q+X],yt=g[H+X],vt=it+(Y-it)*O,xt=lt+(yt-lt)*O,bt=vt+(xt-vt)*I;m[v++]=bt}}}return e.makeTensorInfo([h,c,u,p],"float32",m)}const iQ={kernelName:xg,backendName:"cpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Qt([r,i],"resizeBilinearGrad");const a=le(i.shape),[l,c,u,h]=i.shape,[,d,f]=r.shape,p=new Float32Array(l*c*u*h),g=[o&&d>1?c-1:c,o&&f>1?u-1:u],m=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=g[0]/m[0],b=g[1]/m[1],v=e.data.get(r.dataId).values;let y=0;for(let w=0;w<l;w++){const S=w*a[0];for(let C=0;C<d;C++){const _=C*x,T=Math.floor(_),I=Math.min(Math.ceil(_),c-1),A=S+T*a[1],D=S+I*a[1],k=_-T,M=1-k;for(let E=0;E<f;E++){const N=E*b,O=Math.floor(N),L=Math.min(Math.ceil(N),u-1),$=N-O,W=1-$,q=A+O*a[2],H=A+L*a[2],X=D+O*a[2],it=D+L*a[2],lt=M*W,Y=M*$,yt=k*W,vt=k*$;for(let xt=0;xt<h;xt++){const bt=v[y++];p[q+xt]+=bt*lt,p[H+xt]+=bt*Y,p[X+xt]+=bt*yt,p[it+xt]+=bt*vt}}}}return e.makeTensorInfo([l,u,c,h],"float32",p)}const oQ={kernelName:qy,backendName:"cpu",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aQ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Qt(i,"resizeNearestNeighbor");const l=le(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(h*c*u*p),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],b=[r&&c>1?c-1:c,r&&u>1?u-1:u],v=x[0]/b[0],y=x[1]/b[1];let w=0;for(let S=0;S<h;S++){const C=S*l[0];for(let _=0;_<c;_++){const T=o?v*(_+.5):v*_;let I=Math.min(d-1,r?Math.round(T):Math.floor(T));o&&(I=Math.max(0,I));const A=C+I*l[1];for(let D=0;D<u;D++){const k=o?y*(D+.5):y*D;let M=Math.min(f-1,r?Math.round(k):Math.floor(k));o&&(M=Math.max(0,M));const E=A+M*l[2];for(let N=0;N<p;N++){const O=g[E+N];m[w++]=O}}}}return e.makeTensorInfo([h,c,u,p],i.dtype,m)}const lQ={kernelName:gg,backendName:"cpu",kernelFunc:aQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Qt([r,i],"resizeNearestNeighborGrad");const a=le(i.shape),l=le(r.shape),[c,u,h,d]=i.shape,[,f,p]=r.shape,g=new Float32Array(c*u*h*d),m=e.data.get(r.dataId).values,x=[o&&f>1?u-1:u,o&&p>1?h-1:h],b=[o&&f>1?f-1:f,o&&p>1?p-1:p],v=x[0]/b[0],y=x[1]/b[1],w=1/v,S=1/y,C=Math.ceil(w)*2+2,_=Math.ceil(S)*2+2;for(let T=0;T<c;T++){const I=T*a[0];for(let A=0;A<u;A++){const D=I+A*a[1],k=Math.floor(A*w),M=Math.floor(k-C/2);for(let E=0;E<h;E++){const N=D+E*a[2],O=Math.floor(E*S),L=Math.floor(O-_/2);for(let $=0;$<d;$++){let W=0;for(let q=0;q<C;q++){const H=q+M;if(H<0||H>=f)continue;const X=I+H*l[1],it=H*v,lt=Math.min(u-1,o?Math.round(it):Math.floor(it));if(A===lt)for(let Y=0;Y<_;Y++){const yt=Y+L;if(yt<0||yt>=p)continue;const vt=X+yt*l[2],xt=yt*y,bt=Math.min(h-1,o?Math.round(xt):Math.floor(xt));E===bt&&(W+=m[vt+$])}}g[N+$]=W}}}}return e.makeTensorInfo(i.shape,i.dtype,g)}const uQ={kernelName:Hy,backendName:"cpu",kernelFunc:cQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n;Qt(i,"reverse");const o=i.shape.length,a=_e(r,i.shape);if(o===0)return Fr({inputs:{x:i},backend:e});const l=new os(i.shape,i.dtype),c=e.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=i.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const dQ={kernelName:bg,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fQ={kernelName:rv,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=Yn(n.dtype,mt(n.shape)),[c,u,h,d]=n.shape,[f,p]=ew(o,u,h),g=255,m=Math.sin(i),x=Math.cos(i),b=a.data.get(n.dataId).values;for(let y=0;y<c;y++){const w=y*h*u*d;for(let S=0;S<u;S++){const C=S*(h*d);for(let _=0;_<h;_++){const T=_*d;for(let I=0;I<d;I++){const A=[c,S,_,I],D=A[2],k=A[1];let M=(D-f)*x-(k-p)*m,E=(D-f)*m+(k-p)*x;M=Math.round(M+f),E=Math.round(E+p);let N=r;if(typeof r!="number"&&(I===3?N=g:N=r[I]),M>=0&&M<h&&E>=0&&E<u){const L=E*(h*d),$=M*d,W=w+L+$+I;N=b[W]}const O=w+C+T+I;l[O]=N}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pQ=We(pd,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2===0?t:t+1}),mQ={kernelName:pd,backendName:"cpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gQ(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=kd(r,i,o),d=!0,f=e.bufferSync(i),p=e.bufferSync(r),g=hc(f,p,o,h,c,l,a,u,0,d);return e.makeTensorInfo(o,g.dtype,g.values)}const xQ={kernelName:NI,backendName:"cpu",kernelFunc:gQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<t?e=i+1:n=i;return n}function yQ(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<=t?e=i+1:n=i;return n}function vQ(s,t,e,n,i,r){const o=Sn("int32",e*i);for(let a=0;a<e;++a){const l=s.slice(a*n,(a+1)*n),c=a*i;for(let u=0;u<i;++u)o[c+u]=r==="left"?bQ(l,t[u+c]):yQ(l,t[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=vQ(a,l,i.shape[0],i.shape[1],r.shape[1],o);return e.makeTensorInfo(r.shape,"int32",c)}const _Q={kernelName:RI,backendName:"cpu",kernelFunc:wQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SQ(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t;Qt([n,i,r],"select");const o=n.shape.length,a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Bs(i.dtype,r.dtype),h=ls(mt(i.shape),u);let d=0;const f=o===0||o>1||i.shape.length===1?1:mt(i.shape.slice(1));for(let p=0;p<a.length;p++)for(let g=0;g<f;g++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return e.makeTensorInfo(i.shape,u,h)}const CQ={kernelName:yg,backendName:"cpu",kernelFunc:SQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TQ=Ug,IQ=Vg,EQ=We(gd,s=>s>=0?IQ*s:TQ*(Math.exp(s)-1)),MQ={kernelName:gd,backendName:"cpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ=We(yd,s=>s<0?-1:s>0?1:0),AQ={kernelName:yd,backendName:"cpu",kernelFunc:kQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NQ=We(xd,s=>Math.sin(s)),RQ={kernelName:xd,backendName:"cpu",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DQ=We(bd,s=>Math.sinh(s)),$Q={kernelName:bd,backendName:"cpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ=11920928955078125e-23,XC=Math.log(LQ)+2,FQ=We(wd,s=>{const t=s>-XC,e=s<XC,n=Math.exp(s);let i;return e?i=n:t?i=s:i=Math.log(1+n),i}),PQ={kernelName:wd,backendName:"cpu",kernelFunc:FQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;Qt([i],"spaceToBatchND");const a=mt(r),l=[[0,0]];l.push(...o);for(let S=1+r.length;S<i.shape.length;++S)l.push([0,0]);const c=GN.kernelFunc({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),u=Ld(c.shape,r,a,!1),h=Fd(u.length,r.length,!1),d=Pd(c.shape,r,a,!1),g=Ke({inputs:{x:c},backend:e,attrs:{shape:u}}),b=Is({inputs:{x:g},backend:e,attrs:{perm:h}}),w=Ke({inputs:{x:b},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(b),w}const zQ={kernelName:_g,backendName:"cpu",kernelFunc:OQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values[0],[h,d,f,p,g]=xN(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const UQ={kernelName:jy,backendName:"cpu",kernelFunc:BQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VQ(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.data.get(i.dataId).values),a=e.data.get(n.dataId).values,l=Array.from(e.data.get(r.dataId).values),[c,u,h]=bN(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const WQ={kernelName:Xy,backendName:"cpu",kernelFunc:VQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=Hw(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const HQ={kernelName:Ky,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=Hw(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const jQ={kernelName:Yy,backendName:"cpu",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=kd(r,i,a),f=!1,p=e.bufferSync(i);let g;switch(r.dtype){case"bool":{const m=e.bufferSync(r),x=Boolean(e.data.get(o.dataId).values[0]);g=hc(p,m,a,d,u,c,l,h,x,f);break}case"float32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=hc(p,m,a,d,u,c,l,h,x,f);break}case"int32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=hc(p,m,a,d,u,c,l,h,x,f);break}case"string":{const m=e.bufferSync(r),x=Vo(e.data.get(o.dataId).values[0]);g=hc(p,m,a,d,u,c,l,h,x,f);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}const KQ={kernelName:DI,backendName:"cpu",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=_e(o,i.shape)[0],l=gw(i,r,a),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=al({inputs:{x:i},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,f})}const ZQ={kernelName:Sg,backendName:"cpu",kernelFunc:YQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JQ={kernelName:Zy,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:e}=s,n=t;Qt(e,"square");const i=n.data.get(e.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const l=i[a];r[a]=l*l}return{dataId:n.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ=We(Md,(s,t)=>{const e=t;return isNaN(s)?NaN:s>0?1:e.alpha}),ttt={kernelName:Md,backendName:"cpu",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ett(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n;Qt(i,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:b,end:v,strides:y}=gv(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Ke({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){P(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const S=fv(b,v,y),C=al({inputs:{x:i},backend:e,attrs:{begin:b,size:S}});w=Ke({inputs:{x:C},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(C)}else{const S=e.bufferSync(i),C=vN(f,S,y,b);w=e.makeTensorInfo(p,C.dtype,C.values)}return w}const ntt={kernelName:Jy,backendName:"cpu",kernelFunc:ett};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stt(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.data.get(u.dataId).values,f=e.data.get(h.dataId).values,[p,g]=wN(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const itt={kernelName:Qy,backendName:"cpu",kernelFunc:stt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rtt(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values[0],[c,u,h]=_N(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const ott={kernelName:tv,backendName:"cpu",kernelFunc:rtt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function att(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.data.get(r.dataId).values,a=SN(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const ltt={kernelName:ev,backendName:"cpu",kernelFunc:att};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ctt=We(Td,s=>Math.tan(s)),utt={kernelName:Td,backendName:"cpu",kernelFunc:ctt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const htt=We(Id,s=>Math.tanh(s)),dtt={kernelName:Id,backendName:"cpu",kernelFunc:htt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ftt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;Qt(i,"tile");const o=TN(e.bufferSync(i),r);return e.makeTensorInfo(o.shape,o.dtype,o.values)}const ptt={kernelName:Ed,backendName:"cpu",kernelFunc:ftt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mtt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n;Qt(i,"topk");const a=e.data.get(i.dataId).values,[l,c]=EN(a,i.shape,i.dtype,r,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const gtt={kernelName:nv,backendName:"cpu",kernelFunc:mtt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xtt(s){const{inputs:t,attrs:e,backend:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=e,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=le(i.shape),b=x[0],v=x[1],y=x[2],w=le(m),S=w[0],C=w[1],_=w[2],T=Yn(i.dtype,mt(m));T.fill(l);const I=n.data.get(i.dataId).values,A=n.data.get(r.dataId).values;for(let k=0;k<u;++k){const M=r.shape[0]===1?A:A.subarray(k*8,k*8+8);for(let E=0;E<p;++E)for(let N=0;N<g;++N)for(let O=0;O<f;++O){let L;const $=M[6]*N+M[7]*E+1;if($===0)continue;const W=(M[0]*N+M[1]*E+M[2])/$,q=(M[3]*N+M[4]*E+M[5])/$,H=KC(W,d,a),X=KC(q,h,a);switch(o){case"nearest":L=Stt(I,h,d,b,v,y,k,X,H,O,l);break;case"bilinear":L=Ctt(I,h,d,b,v,y,k,X,H,O,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const it=k*S+E*C+N*_+O;T[it]=L}return n.makeTensorInfo(m,i.dtype,T)}return{dataId:n.write(T,m,i.dtype),shape:i.shape,dtype:i.dtype}}const btt={kernelName:sv,backendName:"cpu",kernelFunc:xtt};function KC(s,t,e){switch(e){case"reflect":return ytt(s,t);case"wrap":return vtt(s,t);case"nearest":return _tt(s,t);case"constant":default:return wtt(s)}}function ytt(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{const n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return Xa(0,e,t-1)}function vtt(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{const n=t-1;e-=t*Math.trunc(e/n)}return Xa(0,e,t-1)}function wtt(s,t){return s}function _tt(s,t){return Xa(0,s,t-1)}function Wu(s,t,e,n,i,r,o,a,l,c,u){const h=o*n+a*i+l*r+c;return 0<=a&&a<t&&0<=l&&l<e?s[h]:u}function Stt(s,t,e,n,i,r,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Wu(s,t,e,n,i,r,o,h,d,c,u)}function Ctt(s,t,e,n,i,r,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,g=(p-l)*Wu(s,t,e,n,i,r,o,h,d,c,u)+(l-d)*Wu(s,t,e,n,i,r,o,h,p,c,u),m=(p-l)*Wu(s,t,e,n,i,r,o,f,d,c,u)+(l-d)*Wu(s,t,e,n,i,r,o,f,p,c,u);return(f-a)*g+(a-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ttt(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Qt(r,"unique");const o=n.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=MN(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const Itt={kernelName:iv,backendName:"cpu",kernelFunc:Ttt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ett(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i.shape.length,a=i.shape[r],l=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==r&&(l[c++]=i.shape[f]);const u=new Array(o).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[r]=f;const p=al({inputs:{x:i},backend:e,attrs:{begin:u,size:h}});d[f]=Ke({inputs:{x:p},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(p)}return d}const Mtt={kernelName:Tg,backendName:"cpu",kernelFunc:Ett};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ktt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n;Qt(i,"unsortedSegmentSum");const a=i.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let p=0;p<h;++p){const g=sm({inputs:{input:d},backend:e,attrs:{dim:p+1}});d=g,u.push(g)}for(let p=0;p<o;++p){const g=Yo(p,"int32"),m=e.makeTensorInfo([],"int32",g),x=HA({inputs:{a:m,b:d},backend:e}),b=jo({inputs:{x},backend:e,attrs:{dtype:"float32"}}),v=e0({inputs:{a:b,b:i},backend:e}),y=qd({inputs:{x:v},backend:e,attrs:{axis:0,keepDims:!1}});c.push(y),u.push(m),u.push(x),u.push(b),u.push(v),u.push(y)}const f=WN({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const Att={kernelName:Ig,backendName:"cpu",kernelFunc:ktt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ntt=[IK,d9,MK,AK,b9,RK,$K,FK,OK,BK,VK,GK,qK,KK,ZK,tY,nY,iY,oY,CK,lY,uY,dY,pY,g9,v9,gY,f9,bY,vY,wY,SY,TY,EY,kY,NY,DY,LY,PY,zY,UY,WY,HY,qY,XY,YY,JY,QY,tZ,eZ,iZ,xK,oZ,w9,pZ,_9,mZ,C9,wZ,_Z,CZ,I9,EZ,kZ,NZ,DZ,LZ,M9,A9,p9,PZ,yY,zZ,UZ,WZ,bK,R9,$9,HZ,F9,jZ,YZ,JZ,eJ,sJ,rJ,oJ,O9,lJ,uJ,dJ,pJ,gJ,bJ,vJ,B9,_J,TJ,MJ,V9,G9,NJ,$J,PJ,q9,zJ,UJ,VJ,GN,qJ,vK,K9,XJ,YJ,JJ,tQ,m9,Lb,nQ,wK,_K,SK,iQ,oQ,lQ,uQ,dQ,fQ,mQ,sK,xQ,_Q,CQ,MQ,rK,AQ,RQ,$Q,oK,IJ,PQ,zQ,UQ,WQ,HQ,jQ,KQ,ZQ,cK,JQ,hK,ttt,ntt,itt,ott,ltt,mK,nZ,utt,dtt,ptt,gtt,btt,j9,Itt,Mtt,Att,BJ];for(const s of Ntt)LI(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca={},Jf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Rtt(s,t){Ca[s]=t}function ir(s,t){if(!(s in Ca)||t!=null){const n=$tt(s,t);if(n!==null)Ca[s]=n;else return console.log("Could not get context for WebGL version",s),null}const e=Ca[s];return e==null||e.isContextLost()?(delete Ca[s],ir(s)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ca[s])}function Dtt(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function $tt(s,t){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t==null?Dtt(s):t;return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ca[s]},!1),ft().getBool("SOFTWARE_WEBGL_ENABLED")&&(Jf.failIfMajorPerformanceCaveat=!1),s===1?e.getContext("webgl",Jf)||e.getContext("experimental-webgl",Jf):e.getContext("webgl2",Jf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yh;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(yh||(yh={}));var Zs;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(Zs||(Zs={}));var jn;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(jn||(jn={}));function jd(s,t){return[t,s]}function Ltt(s,t){return s*t}function Qf(s){const t=mt(s),e=Math.ceil(t/4);return Qx(e)}function uu(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function Ftt(s,t){const[e,n]=uu(s,t);return e*n*4}function Yw(s,t){const e=s;let n,i,r,o,a,l,c,u,h,d;return ft().getNumber("WEBGL_VERSION")===2?(n=e.R32F,i=e.R16F,r=e.RGBA16F,o=e.RGBA32F,a=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(n=s.RGBA,i=s.RGBA,r=s.RGBA,o=e.RGBA,a=s.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ee(s,t){const e=t();return ft().getBool("DEBUG")&&Ptt(s),e}function Ptt(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+Utt(s,t))}const Ott=596e-10,ztt=65504;function Btt(s){return!!(ft().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||Ott<Math.abs(s)&&Math.abs(s)<ztt)}function Utt(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function tp(s,t){return xo(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Vtt(s,t){const e=xo(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ee(s,()=>s.shaderSource(e,t)),ee(s,()=>s.compileShader(e)),s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function Wtt(s,t){const e=xo(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ee(s,()=>s.shaderSource(e,t)),ee(s,()=>s.compileShader(e)),ft().get("ENGINE_COMPILE_ONLY"))return e;if(s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw HN(t,s.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const Gtt=/ERROR: [0-9]+:([0-9]+):/g;function HN(s,t){const e=Gtt.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const n=+e[1],i=s.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>xc((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,n-1),c=o.slice(n-1,n),u=o.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${xc(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Htt(s){return xo(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function qtt(s,t){if(ee(s,()=>s.linkProgram(t)),!ft().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Sx(s,t){if(ee(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function jtt(s,t){const e=xo(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return ee(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),ee(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function Xtt(s,t){const e=xo(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return ee(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e)),ee(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function Ktt(s){return xo(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function Ytt(s,t){const e=ft().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const n=`[${s}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>e||t>e){const n=`[${s}x${t}]`,i=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function Ztt(s){return xo(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function YC(s,t,e,n,i,r,o){const a=s.getAttribLocation(t,e);return a===-1?!1:(ee(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),ee(s,()=>s.vertexAttribPointer(a,i,s.FLOAT,!1,r,o)),ee(s,()=>s.enableVertexAttribArray(a)),!0)}function Jtt(s,t,e){set(s,e),ee(s,()=>s.activeTexture(s.TEXTURE0+e)),ee(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function Qtt(s,t,e){return xo(s,()=>s.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function tet(s,t,e){return s.getUniformLocation(t,e)}function eet(s,t,e,n){ee(s,()=>Jtt(s,t,n)),ee(s,()=>s.uniform1i(e,n))}function Cx(s,t,e){ee(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),ee(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function ZC(s,t){ee(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),ee(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function ep(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+net(s,t))}function net(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function xo(s,t,e){const n=ee(s,()=>t());if(n==null)throw new Error(e);return n}function set(s,t){const e=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+s.TEXTURE0;if(n<s.TEXTURE0||n>e){const i=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${i}.`)}}function Wc(s,t=2){return mt(s.slice(0,s.length-t))}function Gc(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function np(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[Wc(s),...Gc(s)]),t}function iet(s,t=!1){let e=ft().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=ft().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&ft().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,s=s.map((a,l)=>l>=s.length-2?dy(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=Ko(s).newShape);let i=mt(s),r=null;s.length<=1&&i<=e?r=[1,i]:s.length===2&&s[0]<=e&&s[1]<=e?r=s:s.length===3&&s[0]*s[1]<=e&&s[2]<=e?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=e&&s[1]*s[2]<=e?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=e&&s[3]<=e?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=e&&s[1]*s[2]*s[3]<=e&&(r=[s[0],s[1]*s[2]*s[3]]);const o=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||o)if(t){const a=Wc(s);let l=2,c=2;s.length&&([l,c]=Gc(s)),i=a*(l/2)*(c/2),r=Qx(i).map(u=>u*2)}else r=Qx(i);return r}function sp(s){return s%2===0}function rm(s,t){if(s=s.slice(-2),t=t.slice(-2),Fe(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const e=s.slice(-1)[0],n=t.slice(-1)[0];if(e===n||sp(e)&&sp(n)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&sp(s[0])&&sp(t[0])}let Tx,Ix;function oet(s){if(Tx==null){const t=ir(s);Tx=t.getParameter(t.MAX_TEXTURE_SIZE)}return Tx}function aet(s){if(Ix==null){const t=ir(s);Ix=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ix)}function cet(s){if(s===0)return 0;let t;const e=ir(s);return Ci(e,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:Ci(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Ci(s,t){return s.getExtension(t)!=null}function JC(s){try{if(ir(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function uet(s){if(s===0)return!1;const t=ir(s);if(s===1){if(!Ci(t,"OES_texture_float"))return!1}else if(!Ci(t,"EXT_color_buffer_float"))return!1;return Pb(t)}function het(s){if(s===0)return!1;const t=ir(s);if(s===1){if(!Ci(t,"OES_texture_float")||!Ci(t,"WEBGL_color_buffer_float"))return!1}else{if(Ci(t,"EXT_color_buffer_float"))return Pb(t);const n="EXT_color_buffer_half_float";if(Ci(t,n)){const i=t.getExtension(n);return det(t,i)}return!1}return Pb(t)}function Pb(s){const t=Yw(s),e=s.createTexture();s.bindTexture(s.TEXTURE_2D,e);const n=1,i=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,n,i,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0);const o=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(e),s.deleteFramebuffer(r),o}function det(s,t){const e=Yw(s,t),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const i=1,r=1;s.texImage2D(s.TEXTURE_2D,0,e.internalFormatHalfFloat,i,r,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(o),a}function fet(s){return s!==2?!1:ir(s).fenceSync!=null}function Xd(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&P(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oe=ft();oe.registerFlag("HAS_WEBGL",()=>oe.getNumber("WEBGL_VERSION")>0);oe.registerFlag("WEBGL_VERSION",()=>JC(2)?2:JC(1)?1:0);oe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);oe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>oe.get("WEBGL_VERSION")===2);oe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);oe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);oe.registerFlag("WEBGL_PACK",()=>oe.getBool("HAS_WEBGL"));oe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_CLIP",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_PACK_REDUCE",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_LAZILY_UNPACK",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_CONV_IM2COL",()=>oe.getBool("WEBGL_PACK"));oe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>oet(oe.getNumber("WEBGL_VERSION")));oe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>aet(oe.getNumber("WEBGL_VERSION")));oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=oe.getNumber("WEBGL_VERSION");return s===0?0:cet(s)});oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>oe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!jI());oe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>uet(oe.getNumber("WEBGL_VERSION")));oe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>oe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:oe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));oe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>het(oe.getNumber("WEBGL_VERSION")));oe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>fet(oe.getNumber("WEBGL_VERSION")));oe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>oe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);oe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});oe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>jI()?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});oe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);oe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);oe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);oe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);oe.registerFlag("WEBGL_EXP_CONV",()=>!1);oe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>oe.getBool("IS_TEST"));oe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);oe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);oe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(){let s,t,e,n,i,r,o,a,l,c;return ft().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",e="out",n="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=ft().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",e="varying",n="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:e,varyingFs:n,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sl(s,t,e="index"){const n=le(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / ${i}`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * ${i}`:`index -= ${s[r]} * ${i}`;return`${o}; ${a};`}).join("")}function n0(s,t,e="index"){const n=le(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / outShapeStrides[${r}]`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function pet(s,t){const e=s.length,n=s.map(r=>`${t}[${r}]`),i=new Array(e-1);i[e-2]=n[e-1];for(let r=e-3;r>=0;--r)i[r]=`(${i[r+1]} * ${n[r+1]})`;return i}function met(s,t,e="index"){const n=s.map((r,o)=>o),i=pet(n,t);return i.map((r,o)=>{const a=`int ${s[o]} = ${e} / ${i[o]}`,l=o===i.length-1?`int ${s[o+1]} = ${e} - ${s[o]} * ${i[o]}`:`index -= ${s[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function Zw(s){const t=le(s).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Jw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const qN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:jN}=u8;function get(s,t,e){const n=[];if(s.forEach(f=>{const p=mt(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:g}=Qw(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=n.join(`
`),r=s.map(f=>xet(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),o=t.texShape,a=bs(),l=vet(a);let c,u,h=Cet(a);return t.isPacked?(c=bet(t.logicalShape,o,e.enableShapeUniforms),u=_et(a)):(c=yet(t.logicalShape,o,e.enableShapeUniforms),u=wet(a)),e.packedInputs&&(h+=Met),[h,l,u,i,c,r,e.userCode].join(`
`)}function hu(s,t=!1){const e=s.shapeInfo.logicalShape;switch(e.length){case 0:return Bet(s,t);case 1:return Vet(s,t);case 2:return Get(s,t);case 3:return qet(s,t);case 4:return Xet(s,t);case 5:return Ket(s);case 6:return Yet(s);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function XN(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return zet(s);case 1:return Uet(s,t);case 2:return Wet(s,t);case 3:return Het(s,t);default:return jet(s,t)}}function xet(s,t,e=!1,n){let i="";e?i+=XN(s,n):i+=hu(s,n);const r=s.shapeInfo.logicalShape,o=t.logicalShape;return r.length<=o.length&&(e?i+=Zet(s,t):i+=Jet(s,t)),i}function bet(s,t,e){switch(s.length){case 0:return KN();case 1:return ket(s,t,e);case 2:return Pet(s,t,e);case 3:return Net(s,t,e);default:return Det(s,t,e)}}function yet(s,t,e){switch(s.length){case 0:return KN();case 1:return Aet(s,t,e);case 2:return Oet(s,t,e);case 3:return Ret(s,t,e);case 4:return $et(s,t,e);case 5:return Let(s,t);case 6:return Fet(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function vet(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function wet(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function _et(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function Cet(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Tet}
    ${Iet}
    ${Eet}
  `}const Tet=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Iet=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Eet=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Met=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function KN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function ket(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Aet(s,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Net(s,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[2]/2),r=i*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function Ret(s,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${n0(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=Sl(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Det(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[s.length-1]/2),r=i*Math.ceil(s[s.length-2]/2);let o=r,a="",l="b, r, c";for(let c=2;c<s.length-1;c++)o*=s[s.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${s.length}(${l});
    }
  `}function $et(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${n0(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=Sl(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Let(s,t){const e=Sl(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Fet(s,t){const e=Sl(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Pet(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Fe(s,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const i=Math.ceil(s[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function Oet(s,t,e){return Fe(s,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function Cl(s){return`offset${s}`}function zet(s){const t=s.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=bs();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function Bet(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[i,r]=s.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const o=Cl(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${e}, uv);
    }
  `}function Uet(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=s.shapeInfo.texShape,r=bs();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function Vet(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${du(s)}
      }
    `;const i=s.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Cl(e);return o===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Wet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=r[0],a=r[1],l=bs();if(r!=null&&Fe(e,r))return t?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function Get(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&Fe(e,r)){if(t)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:o,keptDims:a}=Ko(e),l=o;if(l.length<e.length){const d=fu(s,l),f=["row","col"];return`
      ${hu(d,t)}
      float ${i}(int row, int col) {
        return ${i}(${pu(f,a)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${du(s)}
      }
    `;const c=r[0],u=r[1],h=Cl(n);return u===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `:c===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${n}, uv);
  }
`}function Het(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],p=fu(s,d),g=["b","row","col"];return`
        ${XN(p,t)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${pu(g,f)});
        }
      `}const a=bs();if(t)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(e[2]/2),h=u*Math.ceil(e[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function qet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],o=e[2],{newShape:a,keptDims:l}=Ko(e),c=a;if(c.length<e.length){const g=fu(s,c),m=["row","col","depth"];return`
        ${hu(g,t)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${pu(m,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${du(s)}
      }
    `;const u=s.shapeInfo.texShape,h=u[0],d=u[1],f=s.shapeInfo.flatOffset;if(d===r&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===o&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;const p=Cl(n);return t?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function jet(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=bs();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${e}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,o=r.length,a=s.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)f=`int b${g}, `+f,d*=r[o-g-1],p=`b${g} * ${d} + `+p;return`
    vec4 ${n}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${e}, uv);
    }
  `}function Xet(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:c}=Ko(e);if(l.length<e.length){const b=fu(s,l),v=["row","col","depth","depth2"];return`
      ${hu(b,t)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${pu(v,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${du(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,m=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=Cl(n);return t?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function Ket(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=t[4],r=t[3]*i,o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:c}=Ko(t);if(l.length<t.length){const g=fu(s,l),m=["row","col","depth","depth2","depth3"];return`
      ${hu(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${pu(m,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${du(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===i&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=Cl(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Yet(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:i,keptDims:r}=Ko(t);if(i.length<t.length){const m=fu(s,i),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${hu(m)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${pu(x,r)});
      }
    `}const o=t[5],a=t[4]*o,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${du(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const g=Cl(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function du(s){const t=s.name,e=mt(s.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Zet(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=jN(s.shapeInfo.logicalShape,t.logicalShape),l=Ye(o),c=o-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(b=>`coords.${h[b+c]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=s.shapeInfo.logicalShape.map((b,v)=>`coords.${h[v+c]}`).join(", ");let f="return outputValue;";const g=mt(s.shapeInfo.logicalShape)===1,x=mt(t.logicalShape)===1;if(r===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=r-2,v=r-1;a.indexOf(b)>-1&&a.indexOf(v)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${n}(${d});
      ${f}
    }
  `}function Jet(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=t.texShape,o=s.shapeInfo.texShape,a=s.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!s.shapeInfo.isUniform&&a===l&&s.shapeInfo.flatOffset==null&&Fe(o,r))return`
      float ${i}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Ye(l),u=jN(s.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${f[g+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((g,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${n}(${p});
    }
  `}function Ye(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function Qw(s,t,e){const{newShape:n,keptDims:i}=Ko(t),r=t.length,o=s&&r===3&&t[0]===1,a=o?t.slice(1):n,l=!s&&r>1&&!Fe(t,e)&&n.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:i}}function fu(s,t){const e=JSON.parse(JSON.stringify(s));return e.shapeInfo.logicalShape=t,e}function pu(s,t){return t.map(e=>s[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qet(s,t,e,n){const i=e.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),o={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=get(i,o,t),l=Wtt(s.gl,a),c=s.createProgram(l);return ft().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o},YN(s,t,c))}function YN(s,t,e){const n={},i={},r={},o=[];let a,l,c,u=null,h=null;h=s.getUniformLocation(e,"NAN",!1),ft().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(e,"INFINITY",!1));const d=!1;for(let f=0;f<t.variableNames.length;f++){const p=t.variableNames[f];n[p]=s.getUniformLocation(e,p,d),n[`offset${p}`]=s.getUniformLocation(e,`offset${p}`,d),t.enableShapeUniforms&&(i[`${p}Shape`]=s.getUniformLocation(e,`${p}Shape`,d),r[`${p}TexShape`]=s.getUniformLocation(e,`${p}TexShape`,d))}return t.enableShapeUniforms&&(a=s.getUniformLocation(e,"outShape",d),c=s.getUniformLocation(e,"outShapeStrides",d),l=s.getUniformLocation(e,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((f,p)=>{o[p]=s.getUniformLocation(e,f.name,d)}),{uniformLocations:n,customUniformLocations:o,infLoc:u,nanLoc:h,inShapesLocations:i,inTexShapesLocations:r,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function QC(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((e,n)=>{const i=e.logicalShape,r=t[n],o=r.shape;if(!Fe(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,l=r.isUniform?null:r.texData.texShape;if(!Fe(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function tnt(s,t,e,n,i){t.program.enableShapeUniforms||(QC(t.inShapeInfos,e),QC([t.outShapeInfo],[n]));const r=n.texData.texture,o=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):s.setOutputMatrixTexture(r.texture,o[0],o[1]),s.setProgram(t.webGLProgram),ft().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,c)=>{const u=t.program.variableNames[c],h=t.uniformLocations[u],d=t.uniformLocations[`offset${u}`],f=t.inShapesLocations[`${u}Shape`],p=t.inTexShapesLocations[`${u}TexShape`];if(f){const{uniformShape:g}=Qw(t.program.packedInputs,l.shape,l.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(p&&s.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(mt(l.shape)<2)s.gl.uniform1f(h,l.uniformValues[0]);else{let g=l.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(h,g)}return}l.texData.slice!=null&&d!=null&&s.gl.uniform1i(d,l.texData.slice.flatOffset),s.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:s.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(a,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){const l=le(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach((l,c)=>{const u=t.customUniformLocations[c],h=i[c];if(l.type==="float")s.gl.uniform1fv(u,h);else if(l.type==="vec2")s.gl.uniform2fv(u,h);else if(l.type==="vec3")s.gl.uniform3fv(u,h);else if(l.type==="vec4")s.gl.uniform4fv(u,h);else if(l.type==="int")s.gl.uniform1iv(u,h);else if(l.type==="ivec2")s.gl.uniform2iv(u,h);else if(l.type==="ivec3")s.gl.uniform3iv(u,h);else if(l.type==="ivec4")s.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),s.executeProgram()}function ent(s,t,e){let n="";t.concat(e).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=Qw(s.packedInputs,o.shape,l);let d="",f="",p="";if(u.length===1&&s.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!s.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!s.packedInputs){const w=le(u);p=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=o.shape.length,m=u.length===2&&Fe(o.shape,l),x=mt(o.shape)===1,b=Lc(o.shape,e.shape),v=!s.packedInputs&&g===e.shape.length&&Fe(l,e.texData.texShape),y=s.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${v}_${c?h:""}_${u.length}_${x}_${b}_${m}_${d}_${f}_${p}_${y}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;n+=`${o.shape}_${l}_${a}`}});const i=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+i+`${ft().getNumber("WEBGL_VERSION")}`,r}function ys(s){return ft().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nnt{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=yh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=bs();this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?n0(["r","c","d"],t):Sl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class snt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=yh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=bs();this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?n0(["r","c","d"],t):Sl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class int{constructor(t){this.variableNames=["A"],this.outTexUsage=Zs.DOWNLOAD;const e=bs();this.outputShape=t,this.userCode=`
      ${qN}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rnt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Zs.DOWNLOAD;const e=bs();this.outputShape=t,this.userCode=`
      ${qN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ont={R:0,G:1,B:2,A:3};class tT{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=bs();this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<n.length;a++){const l=n[a];o+=`
          if(offset == ${a}) {
            result = values[${ont[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Jw():Zw(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ant{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=bs();this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length);let i="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Jw():Zw(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lnt(s){const t=bs(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Vtt(s,e)}function cnt(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return jtt(s,t)}function unt(s){const t=new Uint16Array([0,1,2,2,1,3]);return Xtt(s,t)}function Kd(s,t,e,n,i,r){Ytt(t,e);const o=Ktt(s),a=s.TEXTURE_2D;return ee(s,()=>s.bindTexture(a,o)),ee(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),ee(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),ee(s,()=>s.texParameteri(a,s.TEXTURE_MIN_FILTER,s.NEAREST)),ee(s,()=>s.texParameteri(a,s.TEXTURE_MAG_FILTER,s.NEAREST)),ft().getNumber("WEBGL_VERSION")===1?ee(s,()=>s.texImage2D(a,0,n,t,e,0,i,r,null)):ee(s,()=>s.texStorage2D(a,1,n,t,e)),ee(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function ZN(s){return s.internalFormatFloat}function hnt(s,t,e,n){const[i,r]=jd(t,e);return Kd(s,i,r,ZN(n),n.textureFormatFloat,s.FLOAT)}function JN(s){return s.internalFormatHalfFloat}function dnt(s,t,e,n){const[i,r]=jd(t,e);return Kd(s,i,r,JN(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function QN(s){return s.downloadTextureFormat}function fnt(s,t,e,n){const[i,r]=jd(t,e);return Kd(s,i,r,QN(n),s.RGBA,s.UNSIGNED_BYTE)}function tR(s){return s.internalFormatPackedFloat}function pnt(s,t,e,n){const[i,r]=uu(t,e);return Kd(s,i,r,tR(n),s.RGBA,s.FLOAT)}function eR(s){return s.internalFormatPackedHalfFloat}function mnt(s,t,e,n){const[i,r]=uu(t,e);return Kd(s,i,r,eR(n),s.RGBA,n.textureTypeHalfFloat)}function gnt(s,t,e){return ee(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),YC(s,t,"clipSpacePos",e,3,20,0)&&YC(s,t,"uv",e,2,20,12)}function xnt(s,t,e,n,i,r){ee(s,()=>s.bindTexture(s.TEXTURE_2D,t));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(e*n*4),a=s.UNSIGNED_BYTE,l=s.RGBA):(o=new Float32Array(e*n*4),a=s.FLOAT,l=r.internalFormatPackedFloat),o.set(i),ft().getNumber("WEBGL_VERSION")===2?ee(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e,n,s.RGBA,a,o)):ee(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,e,n,0,s.RGBA,a,o)),ee(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function bnt(s,t,e){ee(s,()=>s.bindTexture(s.TEXTURE_2D,t)),e.data instanceof Uint8Array?ft().getNumber("WEBGL_VERSION")===2?ee(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e.width,e.height,s.RGBA,s.UNSIGNED_BYTE,e.data)):ee(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,e.width,e.height,0,s.RGBA,s.UNSIGNED_BYTE,e.data)):ft().getNumber("WEBGL_VERSION")===2?ee(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,e)):ee(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,e)),ee(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function ynt(s,t,e,n){const i=s.createBuffer();ee(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,i));const a=4*4*t*e;return ee(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,a,s.STREAM_READ)),ee(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,0)),ee(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),i}function vnt(s,t,e){const n=s,i=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,i),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),i}function wnt(s,t,e,n){const[i,r]=jd(t,e),o=4,a=new Uint8Array(Ltt(t*e,o));return ee(s,()=>s.readPixels(0,0,i,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function _nt(s,t,e,n,i,r,o,a){const l=s,c=new Float32Array(Ftt(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function Snt(s,t,e){const n=new Float32Array(t*e*4);return ee(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ex{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=ft().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,Rtt(e,t)):this.gl=ir(e);let n="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),ft().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=tp(this.gl,r),Ci(this.gl,o))this.textureHalfFloatExtension=tp(this.gl,o);else if(ft().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ci(this.gl,i))this.colorBufferHalfFloatExtension=tp(this.gl,i);else if(ft().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ci(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Ci(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=cnt(this.gl),this.indexBuffer=unt(this.gl),this.framebuffer=Ztt(this.gl),this.textureConfig=Yw(this.gl,this.textureHalfFloatExtension)}get debug(){return ft().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;ee(t,()=>t.finish()),ee(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),ee(t,()=>t.deleteFramebuffer(this.framebuffer)),ee(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),ee(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),ee(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),hnt(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),dnt(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),fnt(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),bnt(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,i){this.throwIfDisposed(),xnt(this.gl,t,e,n,i,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),mnt(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),pnt(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(ZC(this.gl,this.framebuffer),this.outputTexture=null),ee(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>wnt(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,i,r,o){return _nt(this.gl,t,e,n,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return vnt(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const i=ynt(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(ft().getBool("WEBGL_FENCE_API_ENABLED")){const i=t,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},e=r}else ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>Snt(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=lnt(e));const n=Htt(e);return ee(e,()=>e.attachShader(n,this.vertexShader)),ee(e,()=>e.attachShader(n,t)),qtt(e,n),this.debug&&Sx(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=gnt(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&ee(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Sx(this.gl,this.program),ee(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?Qtt(this.gl,t,e):tet(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),ee(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),eet(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[i,r]=uu(e,n);this.setOutputMatrixTextureDriver(t,i,r)}setOutputMatrixWriteRegion(t,e,n,i){this.setOutputMatrixWriteRegionDriver(n,t,i,e)}setOutputPackedMatrixWriteRegion(t,e,n,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Sx(this.gl,this.program),ep(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),ee(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ee(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=tp(this.gl,ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(i.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await zS(()=>this.disposed||this.isQueryAvailable(t,ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),i=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=Cnt(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ft().platform&&(n=ft().platform.setTimeoutCustom.bind(ft().platform)),zS(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Cx(this.gl,t,this.framebuffer),this.debug&&ep(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Cx(this.gl,this.outputTexture,this.framebuffer),this.debug&&ep(this.gl)):ZC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const i=this.gl;Cx(i,t,this.framebuffer),this.debug&&ep(i),this.outputTexture=t,ee(i,()=>i.viewport(0,0,e,n)),ee(i,()=>i.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,i){this.throwIfDisposed(),ee(this.gl,()=>this.gl.scissor(t,e,n,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Cnt(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Tnt,bincountImpl:nR,bincountReduceImpl:Int,castImpl:Ent,ceilImpl:Mnt,concatImpl:knt,equalImpl:Ant,expImpl:Nnt,expm1Impl:Rnt,floorImpl:Dnt,gatherNdImpl:$nt,gatherV2Impl:Lnt,greaterImpl:Fnt,greaterEqualImpl:Pnt,lessImpl:Ont,lessEqualImpl:znt,linSpaceImpl:Bnt,logImpl:Unt,maxImpl:Vnt,maximumImpl:Wnt,minimumImpl:Gnt,multiplyImpl:Hnt,negImpl:qnt,notEqualImpl:jnt,prodImpl:Xnt,raggedGatherImpl:Knt,raggedRangeImpl:Ynt,raggedTensorToTensorImpl:Znt,rangeImpl:Jnt,rsqrtImpl:Qnt,scatterImpl:tst,sigmoidImpl:est,simpleAbsImpl:sR,sliceImpl:nst,sparseFillEmptyRowsImpl:sst,sparseReshapeImpl:ist,sparseSegmentReductionImpl:iR,sqrtImpl:rst,stridedSliceImpl:ost,stringNGramsImpl:ast,stringSplitImpl:lst,stringToHashBucketFastImpl:cst,subImpl:ust,tileImpl:hst,topKImpl:dst,transposeImpl:t1,uniqueImpl:fst}=gK;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(s,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${s}.${e}`)}function ps(s,t){return t===1?[s]:rR(s,t)}function pst(s,t){if(s===1)return"rc";let e="";for(let n=0;n<s;n++)e+=t[n],n<s-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mst{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ys(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=ps("rc",this.rank),n=Ye(this.rank),i=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let i=0;i<=1;i++){let r=`${n===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${t[t.length-1-o]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${i};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length);let n="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${gst(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Jw():Zw(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}}function gst(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?met(["r","c","d"],"inputShape"):Sl(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xst{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const i=nT(e,n),r=sT(t,i,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=eT(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let a;return i===jn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===jn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===jn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===jn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===jn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,n,i){if(this.freeTextures==null)return;const r=nT(n,i),o=sT(e,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=eT(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=ft().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bst(s,t){const e=s;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function eT(s,t,e,n,i){const r=yst(t,n);let o;if(i){const[l,c]=uu(s[0],s[1]);o=l*c}else{const[l,c]=jd(s[0],s[1]);o=l*c}const a=bst(e,r);return o*a}function yst(s,t){switch(s){case jn.PACKED_2X2_FLOAT32:return tR(t);case jn.PACKED_2X2_FLOAT16:return eR(t);case jn.UNPACKED_FLOAT32:return ZN(t);case jn.UNPACKED_FLOAT16:return JN(t);case jn.PACKED_4X1_UNSIGNED_BYTE:return QN(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function vst(s){return ft().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?jn.PACKED_2X2_FLOAT32:jn.UNPACKED_FLOAT32:s?jn.PACKED_2X2_FLOAT16:jn.UNPACKED_FLOAT16}function nT(s,t){if(s===Zs.UPLOAD)return jn.PACKED_2X2_FLOAT32;if(s===Zs.RENDER||s==null)return vst(t);if(s===Zs.DOWNLOAD||s===Zs.PIXELS)return jn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function sT(s,t,e){return`${s[0]}_${s[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class io{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Li="if (isnan(x)) return x;",wst="return x;",iT="return abs(x);",_st="return (x >= 0.0) ? x : (exp(x) - 1.0);",Sst=Li+`
  return (x < 0.0) ? 0.0 : x;
`,Cst=Li+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Zl="return x;",Tst="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ist="return x;",Est=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Mst=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kst=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ast="return 1.0 / (1.0 + exp(-1.0 * x));";class Ra{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nst{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length);const e=t.length,n=ps("rc",e),i=Ye(e),r=pst(e,n),o=n.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rst=QE,Dst=1e-7,$st=1e-4,ip={};function Lst(s){return s in ip||(ip[s]={}),ip[s]}const Fst=ft().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Pst=600;function Ost(){return ft().global.screen==null?1024:ft().global.screen.height*ft().global.screen.width*window.devicePixelRatio*Pst/1024/1024}class s0 extends hy{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ft().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Ex)e=t;else{const n=ir(ft().getNumber("WEBGL_VERSION"),t);e=new Ex(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=ir(ft().getNumber("WEBGL_VERSION"));e=new Ex(n),this.binaryCache=Lst(ft().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xst(this.gpgpu),this.numMBBeforeWarning=Ost(),this.texData=new hI(this,gr())}nextDataId(){return s0.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,i,r,o){const a=this.makeTensorInfo(e,n),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[i,r]},l.texShape=[i,r];const c=np(e),u=new tT(c,!1,o),h=this.runWebGLProgram(u,[a],n,[[i,r]]);return h.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,n){if((ft().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ft().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:e,dtype:n,values:t,usage:Zs.UPLOAD,refCount:1}),i}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,n,i,r){if(ft().getBool("DEBUG")&&this.checkNumericalProblems(e),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:i,values:e,usage:Zs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=e;if(o!=null){let d;l?d=new Ra(a,Zl):d=new io(a,Zl);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(n!=null)return this.convertAndCacheOnCPU(t);if(i==="string")return n;const c=this.activeTimers!=null;let u;c&&(u=_s());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=co(d,f)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=_s()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const p=this.pendingRead.get(t);return new Promise(g=>p.push(g))}const e=this.texData.get(t),{values:n,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=e;if(r!=null){let p;l?p=new Ra(i,Zl):p=new io(i,Zl);const g=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:o}],o),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(n!=null)return this.convertAndCacheOnCPU(t);if(ft().getBool("DEBUG")&&!ft().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&ft().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&ft().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...Qf(i))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=p[0],m=p[1];h=co(g,m)}else if(c==null)h=this.getValuesFromTexture(t);else{const p=mt(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;ee(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(p=>p(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&gr().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const n=this.texData.get(t),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:c}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new Ra(r,Zl):f=new io(r,Zl);const p=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.readToGPU(p,e);return this.disposeIntermediateTensorInfo(p),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=gr().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>Vo(i));return we(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const n=t[e];if(!Btt(n))throw ft().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:i}=this.texData.get(t),r=mt(e);if(ft().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Qf(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const o=ft().getBool("WEBGL_PACK")&&i===!0,a=o?np(e):e,l=o?new rnt(a):new int(a),c=this.runWebGLProgram(l,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=Nc(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=Nc(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=nV(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:_s(),endMs:null}}endTimer(t){return ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=_s(),t)}async getQueryTime(t){if(ft().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(e,i,r,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=Fst){return ft().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&mt(n.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ys("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Rst(t.shape,e)}packedUnaryOp(t,e,n){const i=new Ra(t.shape,e),r=this.compileAndRun(i,[t],n);return gr().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const i=sR(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,i)}if(ft().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,iT,t.dtype);const e=new io(t.shape,iT),n=this.compileAndRun(e,[t]);return gr().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Rh(n[0])){const r=n.map(o=>Po(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return this.texData.get(i).usage=null,{dataId:i,shape:t,dtype:e}}makeOutput(t,e,n){return gr().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new Nst(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new mst(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[Wc(t.shape),...Gc(t.shape)],i={dtype:t.dtype,shape:n,dataId:t.dataId},r=[Wc(e),...Gc(e)],o=new oR(r,n),a=!0,l=[n],c=this.runWebGLProgram(o,[i],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:i,shape:r,dtype:o}=n;if(e!=null){const d=mt(r),f=e[0]*e[1]*4;P(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=np(r);let l;i?l=new snt(a):l=new nnt(a);const c=!0,u=[e!=null?e:Qf(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],o,u,c,e);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(t,e,n,i,r=!1,o){const a=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===yh.DENSE){const x=o!=null?o:Qf(t.outputShape);l.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),mt(a.shape)===0)return l.values=Yn(a.dtype,0),a;const c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&mt(x.shape)<=ft().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!rm(b.shape,x.shape)){const v=x,y=x.shape;x.shape=b.shape,x=this.packedReshape(x,y),c.push(x),b=this.texData.get(x.dataId),v.shape=y}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=ent(t,u,h),f=this.getAndSaveBinary(d,()=>Qet(this.gpgpu,t,u,h)),p=this.activeTimers!=null;let g;p&&(g=this.startTimer()),ft().get("ENGINE_COMPILE_ONLY")||tnt(this.gpgpu,f,u,h,i),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),p&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)}));const m=ft().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const x=_s();x-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!ft().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,n,i,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,i,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ft().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ut(()=>{if(!ft().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=ft().getBool("DEBUG");ft().set("DEBUG",!1);const e=this.abs(de(1e-8)).dataSync()[0];if(ft().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Dst:$st}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:i,values:r,texture:o,usage:a,isPacked:l}=e;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=_s());let h=e.texShape;if(h==null&&(h=iet(n,l),e.texShape=h),r!=null){const d=np(n);let f,p=h[1],g=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([p,g]=uu(h[0],h[1])),l?f=new ant(d,m):f=new tT(d,m);const x=m?[g,p]:h,b=this.makeTensorInfo(x,i),v=this.texData.get(b.dataId);m?v.usage=Zs.PIXELS:v.usage=Zs.UPLOAD,v.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),p,g,r);const y=[[g,p]],w=!0,S=this.runWebGLProgram(f,[b],i,y,w),C=this.texData.get(S.dataId);e.texShape=C.texShape,e.isPacked=C.isPacked,e.usage=C.usage,ft().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(e.texture=C.texture,e.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=_s()-u)}else{const d=this.acquireTexture(h,a,i,l);e.texture=d}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:i}=n;return this.releaseGPUData(t),e!=null&&(n.values=zst(e,i)),n.values}acquireTexture(t,e,n,i){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,i)}computeBytes(t,e){return t[0]*t[1]*tb(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(i=>{try{this.checkCompletion_(e),i(!0)}catch(r){throw r}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await sM(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(HN(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:i,nanLoc:r,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=YN(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=i,t.nanLoc=r,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}createTensorFromTexture(t,e,n){const{texture:i,height:r,width:o,channels:a}=t,l=gr().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,e,n,r,o,a);return gr().makeTensorFromDataId(c,e,n,l)}}s0.nextDataId=0;function zst(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<e.length;++n)e[n]=Math.round(s[n]);return e}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */XI()&&lE("webgl",()=>new s0,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Hc{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=me(e,n),this.enableShapeUniforms=ys(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yd=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Zd{constructor(t,e,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=me(e,n);const r=this.outputShape.length;this.enableShapeUniforms=ys(r);let o="";if(i)if(r===0||mt(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${Ye(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=ps("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Bst={kernelName:td,backendName:"webgl",kernelFunc:Gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.makeTensorInfo(n.shape,"complex64"),o=e.texData.get(r.dataId),a=Gs({inputs:{x:n},backend:e}),l=Gs({inputs:{x:i},backend:e});return o.complexTensorInfos={real:a,imag:l},r}const Ust={kernelName:wy,backendName:"webgl",kernelFunc:ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR="return (a < 0.) ? b * a : a;",lR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Vst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n,o=e.makeTensorInfo([],"float32",Yo(r,"float32")),a=ft().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zd(lR,i.shape,o.shape):new Hc(aR,i.shape,o.shape),l=e.runWebGLProgram(a,[i,o],"float32");return e.disposeIntermediateTensorInfo(o),l}const Wst={kernelName:Xm,backendName:"webgl",kernelFunc:Vst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR="return (a < 0.) ? b * a : a;",uR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Gst(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t,r=ft().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zd(uR,n.shape,i.shape):new Hc(cR,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],"float32")}const Hst={kernelName:fg,backendName:"webgl",kernelFunc:Gst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mu="if (isnan(x)) return x;";function De({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const h=a.texData.get(o.dataId),d=e(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=ft().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new Ra(o.shape,t):u=new io(o.shape,s),a.runWebGLProgram(u,[o],l)}}function es({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(n&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[m,x]=[[p.complexTensorInfos.real,g.complexTensorInfos.real],[p.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{const[y,w]=v,S={dataId:y.dataId,dtype:y.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:c.shape},_=new Hc(s,l.shape,c.shape);return u.runWebGLProgram(_,[S,C],Bs(y.dtype,w.dtype))}),b=ra({inputs:{real:m,imag:x},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(x),b}const h=r||Bs(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const p=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,m=l.dtype==="string"?il(p):p,x=l.dtype==="string"?il(g):g,[b,v]=i(l.shape,c.shape,m,x,h),y=u.makeTensorInfo(v,h),w=u.texData.get(y.dataId);return w.values=b,y}const d=ft().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return d?f=new Zd(t,l.shape,c.shape,e):f=new Hc(s,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function vh(s,t=!1){if(s==="linear")return t?Ist:wst;if(s==="relu")return t?Mst:Sst;if(s==="elu")return t?Est:_st;if(s==="relu6")return t?kst:Cst;if(s==="prelu")return t?uR:cR;if(s==="leakyrelu")return t?lR:aR;if(s==="sigmoid")return t?Ast:Tst;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hR{constructor(t,e,n,i=!1,r=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ys(this.outputShape.length);const u=i?t[1]:t[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",x="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const b=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let v="rc.x",y="rc.x";t[0]<e[0]?v=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${v};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${g[0]});
          result += (${p[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class oT{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=me(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT="return a * b;";function n1(s){const{inputs:t,backend:e}=s,{a:n,b:i}=t,r=Bs(n.dtype,i.dtype);if(n.dtype==="complex64"){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),c=new oT(rT.REAL,n.shape,i.shape),u=new oT(rT.IMAG,n.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=ra({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}if(e.shouldExecuteOnCPU([n,i])){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),[c,u]=Hnt(n.shape,i.shape,a.values,l.values,r),h=e.makeTensorInfo(u,r),d=e.texData.get(h.dataId);return d.values=c,h}let o;return ft().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Zd(aT,n.shape,i.shape):o=new Hc(aT,n.shape,i.shape),e.runWebGLProgram(o,[n,i],r)}const qst={kernelName:cd,backendName:"webgl",kernelFunc:n1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jst(s,t,e){const n=[Wc(s.shape),...Gc(s.shape)],i={dtype:s.dtype,shape:n,dataId:s.dataId},r=[Wc(t),...Gc(t)],o=new oR(r,n),a=!0,l=[n],c=e.runWebGLProgram(o,[i],s.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=e,a=mt(i.shape),l=fI(r,a),c=mt(l);P(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(i.dataId);return u.isPacked&&!rm(i.shape,l)&&!(u.texture!==null&&rm(u.shape,l))?jst(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const Xst={kernelName:mg,backendName:"webgl",kernelFunc:Gt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lT{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];const a=Math.floor(n/4)*4,l=n%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Rc(h)?h.toPrecision(2):h}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kst{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(n/4)*4,h=n%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yst(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:s[1],n=Bg(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Tl(s,t,e,n){const i=Yst(s.shape);let r=s;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:c}=i[o];let u,h;e==="mean"?u=o===0?new lT({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},a):new lT({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c}):u=new Kst({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},e),h=r,r=n.runWebGLProgram(u,[r],t),h.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zst{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const i=Ye(this.rank),r=Jst(e);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function Jst(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let i=0;i<s.length;i++)n[s[i]]=e[i];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qst{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=Ye(this.rank),r=rR("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=r[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0(s,t,e){const n=ft().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qst(s.shape,t):new Zst(s.shape,t);return e.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tit(s,t,e,n){const i=t,r=s.shape.length,o=_e(i,s.shape);let a=o;const l=un(a,r),c=l!=null;let u=s;c&&(u=i0(s,l,n),a=vn(a.length,r)),ts("sum",a,r);const[h,d]=Vn(u.shape,a);let f=h;e&&(f=yn(h,o));const p=mt(d),m=mt(s.shape)/p,x=Gt({inputs:{x:u},attrs:{shape:[m,p]},backend:n}),b=av(s.dtype),v=Tl(x,b,"sum",n),y=Gt({inputs:{x:v},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),c&&n.disposeIntermediateTensorInfo(u),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;return tit(i,r,o,e)}const eit={kernelName:wg,backendName:"webgl",kernelFunc:r0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{perm:r}=n,o=e,a=i.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=t1(h,i.shape,i.dtype,r,l);c=o.makeTensorInfo(l,i.dtype);const f=o.texData.get(c.dataId);f.values=d}else c=i0(i,r,o);return c}const nit={kernelName:bc,backendName:"webgl",kernelFunc:xs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=1e3;function om({a:s,b:t,transposeA:e,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=s.shape.length,u=t.shape.length,h=e?s.shape[c-2]:s.shape[c-1],d=n?t.shape[u-1]:t.shape[u-2],f=e?s.shape[c-1]:s.shape[c-2],p=n?t.shape[u-2]:t.shape[u-1],g=s.shape.slice(0,-2),m=t.shape.slice(0,-2),x=mt(g),b=mt(m),y=me(s.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,p]);P(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);const w=e?[x,h,f]:[x,f,h],S=n?[b,p,d]:[b,d,p],C=Gt({inputs:{x:s},backend:i,attrs:{shape:w}}),_=Gt({inputs:{x:t},backend:i,attrs:{shape:S}}),T=[C,_],I=Math.max(x,b),A=e?C.shape[1]:C.shape[2],D=r!=null,k=o!=null,M=l==="leakyrelu",E=l!=null?vh(l,!0):null,N=D||k||M||E!=null;let O;if((f===1||p===1)&&A>dR&&N===!1){let $=C,W=_;e&&($=xs({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),T.push($)),n&&(W=xs({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),T.push(W));const q=p!==1,H=p===1;let X=$;q&&(X=Gt({inputs:{x:$},backend:i,attrs:{shape:[I,A,1]}}),T.push(X));const it=p===1?2:1;let lt=W;H&&(lt=Gt({inputs:{x:W},backend:i,attrs:{shape:[I,1,A]}}),T.push(lt));const Y=n1({inputs:{a:X,b:lt},backend:i});O=r0({inputs:{x:Y},backend:i,attrs:{axis:it,keepDims:!0}}),T.push(Y)}else{const $=Bs(s.dtype,t.dtype),W=new hR(w,S,[I,f,p],e,n,D,E,k,M),q=[C,_];if(r!=null&&q.push(r),k&&q.push(o),M){const H=i.makeTensorInfo([],"float32",Yo(a,"float32"));q.push(H),T.push(H)}O=i.runWebGLProgram(W,q,$)}const L=Gt({inputs:{x:O},backend:i,attrs:{shape:y}});T.push(O);for(const $ of T)i.disposeIntermediateTensorInfo($);return L}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sit(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;return om({a:i,b:r,transposeA:l,transposeB:c,backend:e,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const iit={kernelName:Np,backendName:"webgl",kernelFunc:sit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT="return abs(x);";function rit(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=e.texData.get(n.dataId),o=sR(r.values);return e.makeTensorInfo(n.shape,n.dtype,o)}let i;return ft().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Ra(n.shape,cT):i=new io(n.shape,cT),e.runWebGLProgram(i,[n],n.dtype)}const oit={kernelName:Mm,backendName:"webgl",kernelFunc:rit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ait=Li+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,lit=De({opSnippet:ait}),cit={kernelName:$h,backendName:"webgl",kernelFunc:lit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uit=Li+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,hit=De({opSnippet:uit}),dit={kernelName:Lh,backendName:"webgl",kernelFunc:hit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uT="return a + b;",fit=es({opSnippet:uT,packedOpSnippet:uT,supportsComplex:!0,cpuKernelImpl:Tnt}),pit={kernelName:su,backendName:"webgl",kernelFunc:fit};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mit{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class git{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xp(s){const{inputs:t,backend:e}=s,n=t;if(n.length===1)return Gs({inputs:{x:n[0]},backend:e});if(n.length>ft().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),c=xp({inputs:n.slice(0,l),backend:e}),u=xp({inputs:n.slice(l),backend:e});return xp({inputs:[c,u],backend:e})}const i=n.map(l=>l.dtype).reduce((l,c)=>Bs(l,c)),r=n.map(l=>l.shape),a=ft().getBool("WEBGL_PACK")?new git(n[0].shape,r):new mit(n[0].shape,r);return e.runWebGLProgram(a,n,i)}const xit={kernelName:my,backendName:"webgl",kernelFunc:xp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=_e(r,i.shape);let c=l;const u=un(c,a);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=vn(c.length,a)),ts("all",c,a);const[d,f]=Vn(h.shape,c),p=mt(f),g=Gt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Tl(g,g.dtype,"all",e);let x;if(o){const b=yn(d,l);x=Gt({inputs:{x:m},backend:e,attrs:{shape:b}})}else x=Gt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const yit={kernelName:gy,backendName:"webgl",kernelFunc:bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=_e(r,i.shape);let c=l;const u=un(c,a);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=vn(c.length,a)),ts("any",c,a);const[d,f]=Vn(h.shape,c),p=mt(f),g=Gt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Tl(g,g.dtype,"any",e);let x;if(o){const b=yn(d,l);x=Gt({inputs:{x:m},backend:e,attrs:{shape:b}})}else x=Gt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const wit={kernelName:xy,backendName:"webgl",kernelFunc:vit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _it{constructor(t,e,n){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=e==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sit{constructor(t,e,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,P(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=Ye(l),u=ps("coords",l);let h,d;if(o===1){d=l+1;const _=Ye(d);h=`
        ${_} sourceLocR = ${_}(${u.join()}, 0);
        ++${u[l-1]};
        ${_} sourceLocG = ${_}(${u.join()}, 0);
        ++${u[l-2]};
        ${_} sourceLocA = ${_}(${u.join()}, 0);
        --${u[l-1]};
        ${_} sourceLocB = ${_}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],g=f.map(_=>"int "+_),m=ps("sourceLocR",d-1).concat("inIdx.r"),x=ps("sourceLocG",d-1).concat("inIdx.g"),b=ps("sourceLocB",d-1).concat("inIdx.b"),v=ps("sourceLocA",d-1).concat("inIdx.a"),y=n==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${v.join()})));`,S=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,C=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(s,t,e,n=null){let i=t.shape[0],r=t.shape[1];n!=null&&(i=n.shape[0],r=n.shape[1]);const o=Bg(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new _it(a,e,n==null),c=[t];n!=null&&c.push(n);const u=s.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=fR(s,t,e,u);return s.disposeIntermediateTensorInfo(u),h}function pR(s,t,e,n=null){const i=n!=null?n.shape:t.shape,r=i[i.length-1],o=Bg(r),a=new Sit(i,o,e,n==null),l=n==null?[t]:[t,n],c=s.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=pR(s,t,e,c);return s.disposeIntermediateTensorInfo(c),u}return c}function mR(s,t,e,n){const i=[e];if(ts("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,t.shape.length),!ft().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],o=s.texData.get(t.dataId),a=o!==null&&o.isPacked;let l=t;a&&(l=s.unpackTensor(t),r.push(l));const[c,u]=Vn(l.shape,i),h=mt(u),d=Gt({inputs:{x:l},backend:s,attrs:{shape:[-1,h]}});r.push(d);const f=fR(s,d,n);r.push(f);const p=Gt({inputs:{x:f},backend:s,attrs:{shape:c}});return r.forEach(g=>s.disposeIntermediateTensorInfo(g)),p}return pR(s,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=_e(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=xs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=vn(o.length,l.shape.length)),ts("argMax",[o[0]],l.shape.length);const u=mR(e,l,o[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const Tit={kernelName:km,backendName:"webgl",kernelFunc:Cit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=_e(r,i.shape);const a=un(o,i.shape.length);let l=i;const c=[];a!=null&&(l=xs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=vn(o.length,l.shape.length)),ts("argMin",[o[0]],l.shape.length);const u=mR(e,l,o[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const Eit={kernelName:Am,backendName:"webgl",kernelFunc:Iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mit=Li+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,kit=De({opSnippet:Mit}),Ait={kernelName:Fh,backendName:"webgl",kernelFunc:kit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nit=Li+"return log(x + sqrt(x * x + 1.0));",Rit=De({opSnippet:Nit}),Dit={kernelName:Ph,backendName:"webgl",kernelFunc:Rit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $it=Li+`
  return atan(x);
`,Lit=De({opSnippet:$it}),Fit={kernelName:Oh,backendName:"webgl",kernelFunc:Lit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pit=e1+`
  return atan(a, b);
`,Oit=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yd+`
  return result;
`,zit=es({opSnippet:Pit,packedOpSnippet:Oit}),Bit={kernelName:Bh,backendName:"webgl",kernelFunc:zit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uit=Li+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Vit=De({opSnippet:Uit}),Wit={kernelName:zh,backendName:"webgl",kernelFunc:Vit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wh{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const g=e==="avg",m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(g||(b="-1.0 / 1e-20"),n){const _=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?m:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(y="avgValue / count");const w=Math.floor(o/4)*4,S=o%4,C=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${w};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${y});
      }
    `}}class s1{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,p=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const v=e==="avg";let y="0.0";if(v||(y="-1.0 / 1e-20"),n){const I=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${m}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${I} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let S=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(S="avgValue / count");const C=Math.floor(o/4)*4,_=o%4,T=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${m}, ${x}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${C};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${T}
            }
          }
          setOutput(${S});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Git(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Xd(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(us(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Di(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Fe(u.inShape,u.outShape))return Gs({inputs:{x:i},backend:e});const h=new wh(u,"avg",!1);return e.runWebGLProgram(h,[i],"float32")}const Hit={kernelName:Nm,backendName:"webgl",kernelFunc:Git};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n,u=[1,1,1],h=po(i.shape,r,o,u,a,l,c),d=new s1(h,"avg",!1);return e.runWebGLProgram(d,[i],"float32")}const jit={kernelName:Rm,backendName:"webgl",kernelFunc:qit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xit{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Kit{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=h-1-t.padInfo.front,g=d-1-t.padInfo.top,m=f-1-t.padInfo.left,x=1/(e*n*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${g}, ${m});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yit(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=po(o.shape,a,l,h,c,u),f=new Kit(d);return e.runWebGLProgram(f,[i],o.dtype)}const Zit={kernelName:yy,backendName:"webgl",kernelFunc:Yit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jit(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Xd([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=Di(o.shape,a,l,1,c),h=new Xit(u);return e.runWebGLProgram(h,[i],o.dtype)}const Qit={kernelName:by,backendName:"webgl",kernelFunc:Jit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function trt(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;return om({a:i,b:r,transposeA:o,transposeB:a,backend:e})}const ert={kernelName:Dm,backendName:"webgl",kernelFunc:trt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nrt{constructor(t,e,n,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],me(t,e),me(t,n);let a="0.0";i!=null&&(me(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(me(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class srt{constructor(t,e,n,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],me(t,e),me(t,n);let a="vec4(0.0)";i!=null&&(me(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(me(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const irt=({inputs:s,backend:t,attrs:e})=>{const{x:n,mean:i,variance:r,offset:o,scale:a}=s;P(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[n,i,r];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=ft().getBool("WEBGL_PACK_NORMALIZATION")?new srt(n.shape,i.shape,r.shape,u,h,l):new nrt(n.shape,i.shape,r.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},rrt={kernelName:Hm,backendName:"webgl",kernelFunc:irt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ort{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ye(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=art(this.rank);let i;const r=t.map((o,a)=>`sourceLoc.${Ob[a]} = start[${a}] + coords.${Ob[a]};`);i=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${n}));
      }
    `}}const Ob=["x","y","z","w","u","v"];function art(s){if(s===1)return"sourceLoc";if(s<=6)return Ob.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lrt{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Ye(this.rank),n=ps("coords",this.rank),i=ps("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${i[h]} = ${n[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function crt(s,t,e,n){const i=n.texData.get(s.dataId),r=n.makeTensorInfo(e,s.dtype),o=n.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=e,o.dtype=s.dtype;let a=mv(t,le(s.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||s.dataId};const l=n.dataRefCount.get(o.slice.origDataId)||1;return n.dataRefCount.set(o.slice.origDataId,l+1),r}function gu(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n,[a,l]=Rg(i,r,o);if(dv(i,a,l),mt(l)===0)return e.makeTensorInfo(l,i.dtype,[]);if(e.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=e.texData.get(i.dataId),d=nst(h.values,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=e.texData.get(i.dataId),u=pv(i.shape,a,l);if(c||!u){const h=ft().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lrt(l):new ort(l),d=[a];return e.runWebGLProgram(h,[i],i.dtype,d)}return e.uploadToGPU(i.dataId),crt(i,a,l,e)}const urt={kernelName:vg,backendName:"webgl",kernelFunc:gu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hrt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;P(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((b,v)=>b*v),l=Ld(i.shape,r,a),c=Fd(l.length,r.length),u=Pd(i.shape,r,a),h=nw(o,r.length),d=sw(u,o,r.length),f=[],p=Gt({inputs:{x:i},backend:e,attrs:{shape:l}}),g=xs({inputs:{x:p},backend:e,attrs:{perm:c}}),m=Gt({inputs:{x:g},backend:e,attrs:{shape:u}}),x=gu({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return f.push(p),f.push(g),f.push(m),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),x},drt={kernelName:$m,backendName:"webgl",kernelFunc:hrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function frt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.readSync(i.dataId),l=e.readSync(r.dataId),c=nR(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const prt={kernelName:vy,backendName:"webgl",kernelFunc:frt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mrt(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.readSync(n.dataId),o=e.readSync(i.dataId),a=me(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const grt={kernelName:wI,backendName:"webgl",kernelFunc:mrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xrt="return float(a != b);",gR=es({opSnippet:xrt,cpuKernelImpl:jnt,dtype:"bool"}),brt={kernelName:lg,backendName:"webgl",kernelFunc:gR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jd(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return Gs({inputs:{x:i.complexTensorInfos.real},backend:e})}const yrt={kernelName:Gy,backendName:"webgl",kernelFunc:Jd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vrt="return float(int(x));";function wrt(s,t){const e=new io(s.shape,vrt),n=t.runWebGLProgram(e,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zb(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return Gs({inputs:{x:i},backend:e});const o=On(i.shape),a=zb({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),l=ra({inputs:{real:a,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=Jd({inputs:{input:i},backend:e}),a=zb({inputs:{x:o},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(o),a}if(!pI(i.dtype,r)){const o=Gs({inputs:{x:i},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(e.shouldExecuteOnCPU([i])){const o=e.texData.get(i.dataId).values,[a,l,c]=Ent(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}if(r==="int32")return wrt(i,e);if(r==="bool"){const o=e.makeTensorInfo([],"bool",Yn("bool",1)),l=gR({inputs:{a:i,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const _rt={kernelName:Uh,backendName:"webgl",kernelFunc:zb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT="return ceil(x);",Srt=De({opSnippet:hT,packedOpSnippet:hT,cpuKernelImpl:Mnt}),Crt={kernelName:Vh,backendName:"webgl",kernelFunc:Srt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Trt{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Irt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ert(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{clipValueMin:r,clipValueMax:o}=n;let a;ft().getBool("WEBGL_PACK_CLIP")?a=new Irt(i.shape):a=new Trt(i.shape);const l=[[r],[o]];return e.runWebGLProgram(a,[i],i.dtype,l)}const Mrt={kernelName:Wh,backendName:"webgl",kernelFunc:Ert};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class krt{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function Art(s){const{inputs:t,backend:e}=s,{x:n}=t,i=e.texData.get(n.dataId),r=new krt(n.shape),o=[dT(n,i.complexTensorInfos.real),dT(n,i.complexTensorInfos.imag)];return e.runWebGLProgram(r,o,o[0].dtype)}const Nrt={kernelName:Lm,backendName:"webgl",kernelFunc:Art};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rrt{constructor(t){this.outputShape=[],this.outputShape=Er(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const a=e[o-1];n.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=e.length,r=e[e.length-1];n.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Drt{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Er(t,e);const n=this.outputShape,i=n.length,r=Ye(i),o=ps("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const c=a[e],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${rp(a,c,m)}),
            vec2(${rp(u,c,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${rp(a,c,p)}),
          vec2(${rp(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${n[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${n[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${n[i-2]} &&
            ${o[i-1]} < ${n[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function rp(s,t,e){const n=s.indexOf(t);return s.map((r,o)=>o===n?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return Gs({inputs:{x:i.complexTensorInfos.imag},backend:e})}const $rt={kernelName:Fy,backendName:"webgl",kernelFunc:o0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gu(s,t,e){const n=s[0].dtype;if(n==="complex64"){const h=s.map(m=>Jd({inputs:{input:m},backend:e})),d=s.map(m=>o0({inputs:{input:m},backend:e})),f=Gu(h,t,e),p=Gu(d,t,e),g=ra({inputs:{real:f,imag:p},backend:e});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),d.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}let i=e.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const h=s.map(b=>{const y=[-1,mt(b.shape.slice(t))];return Gt({inputs:{x:b},backend:e,attrs:{shape:y}})}),d=h.map(b=>({vals:e.readSync(b.dataId),shape:b.shape})),f=Er(h.map(b=>b.shape),1),p=h[0].shape[0]===1,g=knt(d,f,n,p),m=Er(s.map(b=>b.shape),t),x=e.makeTensorInfo(m,n,g);return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),x}const r=ft().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>r){const h=[];for(let f=0;f<s.length;f+=r){const p=s.slice(f,f+r);h.push(Gu(p,t,e))}const d=Gu(h,t,e);for(const f of h)e.disposeIntermediateTensorInfo(f);return d}if(ft().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new Drt(s.map(d=>d.shape),t);return e.runWebGLProgram(h,s,n)}const{tensors2D:o,outShape:a}=Lrt(s,t,e),l=new Rrt(o.map(h=>h.shape)),c=e.runWebGLProgram(l,o,n);o.forEach(h=>e.disposeIntermediateTensorInfo(h));const u=Gt({inputs:{x:c},attrs:{shape:a},backend:e});return e.disposeIntermediateTensorInfo(c),u}function Lrt(s,t,e){const n=Er(s.map(r=>r.shape),t);return{tensors2D:s.map(r=>Gt({inputs:{x:r},attrs:{shape:[-1,mt(r.shape.slice(t))]},backend:e})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=_e(i,t[0].shape)[0],o=t.map(c=>c.shape);Qv(o,r);const a=Er(t.map(c=>c.shape),r);if(mt(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>mt(c.shape)>0);return l.length===1?Gs({inputs:{x:l[0]},backend:e}):Gu(l,r,e)}const Frt={kernelName:Fm,backendName:"webgl",kernelFunc:xR};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,m=t.dataFormat==="channelsLast",x=m?1:2,b=m?2:3,v=m?3:1;let y="",w="";n&&(i?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");const S=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${w}
        setOutput(result);
      }
    `}}class Prt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,i=t.padInfo.left,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ys(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const x=m*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const b=o%2===0?dy(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";n&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ort{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ys(this.outputShape.length);const{dataFormat:n}=e,i=bs(),r=n==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function am(s,t){const e=s.length;return e>=3?t?[...s.slice(0,-3),s[e-3]*s[e-2],s[e-1]]:[...s.slice(0,-3),s[e-3],s[e-2]*s[e-1]]:!t&&e===1&&s[0]>1?[s[0],1]:null}function vR({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=s.shape,c=n.texData.get(s.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,f=e.dataFormat==="channelsLast",p=!1,g=!1;let m;const x=[];if(r!=null){const y=am(r.shape,f);y!=null&&(r=Gt({inputs:{x:r},backend:n,attrs:{shape:y}}),x.push(r))}if(i!=null){const y=am(i.shape,f);y!=null&&(i=Gt({inputs:{x:i},backend:n,attrs:{shape:y}}),x.push(i))}if(!((h===1||d===1)&&u>dR)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&Fe(c.shape.slice(-3),l.slice(-3))){const y=l[0]*l[1]*(l[2]+1),w={dataId:s.dataId,shape:[1,y,e.inChannels],dtype:s.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,P(rm(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const C=Gt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(C);const _=om({a:w,b:C,backend:n,transposeA:p,transposeB:g,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),T=n.texData.get(_.dataId);P(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,T.shape=e.outShape,m=Gs({inputs:{x:_},backend:n}),m.shape=e.outShape,x.push(_)}else{const y=e.outHeight*e.outWidth,w=Gt({inputs:{x:s},backend:n,attrs:{shape:f?[e.batchSize,y,e.inChannels]:[e.batchSize,e.inChannels,y]}}),S=Gt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),C=om({a:f?w:S,b:f?S:w,transposeA:!f,transposeB:g,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});m=Gt({inputs:{x:C},backend:n,attrs:{shape:e.outShape}}),x.push(w),x.push(S),x.push(C)}for(const y of x)n.disposeIntermediateTensorInfo(y);return m}function wR({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=e,p=f==="channelsLast",g=l*c*u,m=d*h,x=[e.batchSize,g,m],b=!0,v=!1,y=[];if(r!=null){const L=am(r.shape,p);L!=null&&(r=Gt({inputs:{x:r},backend:n,attrs:{shape:L}}),y.push(r))}if(i!=null){const L=am(i.shape,p);L!=null&&(i=Gt({inputs:{x:i},backend:n,attrs:{shape:L}}),y.push(i))}const w=Gt({inputs:{x:t},backend:n,attrs:{shape:[1,g,mt(t.shape)/g]}});y.push(w);const S=new Ort(x,e),C=[s.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],_=n.runWebGLProgram(S,[s],"float32",C),T=Gt({inputs:{x:_},backend:n,attrs:{shape:x}});y.push(_),y.push(T);const I=i!=null,A=r!=null,D=a==="leakyrelu",k=a?vh(a,!0):null,M=new hR(p?T.shape:w.shape,p?w.shape:T.shape,p?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],b,v,I,k,A,D),E=p?[T,w]:[w,T];if(i&&E.push(i),A&&E.push(r),D){const L=n.makeTensorInfo([],"float32",Yo(o,"float32"));E.push(L),y.push(L)}const N=n.runWebGLProgram(M,E,"float32"),O=Gt({inputs:{x:N},backend:n,attrs:{shape:e.outShape}});y.push(N);for(const L of y)n.disposeIntermediateTensorInfo(L);return O}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n,h=mo(l),d=Qn(i.shape,r.shape,o,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=vR({x:i,filter:r,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&ft().getBool("WEBGL_EXP_CONV")){const g=new yR(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=e.runWebGLProgram(g,[i,r],"float32",m)}else if(ft().getBool("WEBGL_CONV_IM2COL"))f=wR({x:i,filter:r,convInfo:d,backend:e});else{const g=new bR(d);f=e.runWebGLProgram(g,[i,r],"float32")}const p=Gt({inputs:{x:f},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(f),p}const Brt={kernelName:Pm,backendName:"webgl",kernelFunc:zrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Urt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Vrt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Wrt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Grt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=i-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n,h=mo(l),d=Qn(i.shape,u,o,1,a,c,!1,h),f=new Urt(d);return e.runWebGLProgram(f,[i,r],"float32")}const qrt={kernelName:_y,backendName:"webgl",kernelFunc:Hrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jrt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n,h=mo(c),d=Qn(o,r.shape,a,1,l,u,!1,h),f=new Vrt(d);return e.runWebGLProgram(f,[i,r],"float32")}const Xrt={kernelName:Om,backendName:"webgl",kernelFunc:jrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Krt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=Zo(i.shape,r.shape,o,l,a),u=new Prt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Yrt={kernelName:zm,backendName:"webgl",kernelFunc:Krt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n,c=Zo(i.shape,l,o,1,a),u=new Wrt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Jrt={kernelName:Sy,backendName:"webgl",kernelFunc:Zrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qrt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n,c=Zo(l,r.shape,a,1,o),u=new Grt(c);return e.runWebGLProgram(u,[i,r],"float32")}const tot={kernelName:Cy,backendName:"webgl",kernelFunc:Qrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eot=mu+`
  return cos(x);
`,not=De({opSnippet:eot}),sot={kernelName:Gh,backendName:"webgl",kernelFunc:not};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iot=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,rot=De({opSnippet:iot}),oot={kernelName:Hh,backendName:"webgl",kernelFunc:rot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aot{constructor(t,e,n,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=t,[u]=e,[h,d]=n;this.outputShape=[u,h,d,c];const f=i==="bilinear"?1:0,[p,g]=[`${a-1}.0`,`${l-1}.0`],[m,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[v,y,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lot=s=>{const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,u=new aot(i.shape,r.shape,a,l,c);return e.runWebGLProgram(u,[i,r,o],"float32")},cot={kernelName:Iy,backendName:"webgl",kernelFunc:lot};var _h;(function(s){s.Prod="*",s.Sum="+"})(_h||(_h={}));class fT{constructor(t,e,n,i){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===_h.Prod?"1.0":"0.0",a=n?o:`getX(${pT(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ye(r)} coords = getOutputCoords();
        int end = ${mT(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${mT(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${pT(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function pT(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}function mT(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(s,t,e,n,i,r){const o=t.shape.length,a=un([n],o);let l=t;a!=null&&(l=xs({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=vn(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);const u=l.shape[c];let h=Gs({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new fT(s,l.shape,!1,r),p=[[d]],g=h;h=e.runWebGLProgram(f,[h],h.dtype,p),e.disposeIntermediateTensorInfo(g)}if(i){const d=new fT(s,l.shape,i,r),f=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Jo(a),f=xs({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return _R(_h.Prod,i,e,r,o,a)}const hot={kernelName:Ty,backendName:"webgl",kernelFunc:uot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return _R(_h.Sum,i,e,r,o,a)}const fot={kernelName:Bm,backendName:"webgl",kernelFunc:dot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=nR(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=Int(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const mot={kernelName:Ey,backendName:"webgl",kernelFunc:pot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class got{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],c=o==="NHWC"?i.shape[2]:i.shape[3],u=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,f=u/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],g=new got(p,r,o);return e.runWebGLProgram(g,[i],i.dtype)}const bot={kernelName:My,backendName:"webgl",kernelFunc:xot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ys(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";n&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CR{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ys(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const b=x*2;if(f+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const v=a%2===0?dy(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):v===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",g="";n&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;let u=l;u==null&&(u=[1,1]),P(us(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=Qn(i.shape,r.shape,o,u,a,c,!0);let d;ft().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new CR(h):d=new SR(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[i,r],"float32",f)}const vot={kernelName:Um,backendName:"webgl",kernelFunc:yot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wot{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class _ot{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n,h=Qn(i.shape,u,o,a,l,c,!0),d=new wot(h);return e.runWebGLProgram(d,[i,r],"float32")}const Cot={kernelName:ky,backendName:"webgl",kernelFunc:Sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tot(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n,h=Qn(u,r.shape,o,a,l,c,!0),d=new _ot(h);return e.runWebGLProgram(d,[i,r],"float32")}const Iot={kernelName:Ay,backendName:"webgl",kernelFunc:Tot};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eot{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mot(s){const{inputs:t,backend:e}=s,{x:n}=t,i=[...n.shape,...n.shape],r=mt(n.shape),o=Gt({inputs:{x:n},backend:e,attrs:{shape:[r]}}),a=new Eot(r),l=e.runWebGLProgram(a,[o],o.dtype),c=Gt({inputs:{x:l},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),c}const kot={kernelName:_I,backendName:"webgl",kernelFunc:Mot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aot{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Not(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=Ad(i.shape,r.shape,o,a,"NHWC",l);let u;const h=new Aot(c);u=e.runWebGLProgram(h,[i,r],"float32");const d=Gt({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const Rot={kernelName:Vm,backendName:"webgl",kernelFunc:Not};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dot(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=hw(i,r.length);fw(o.length,l,r);const{path:c,steps:u}=pw(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:b}=dw(f,l[m]);let v;mw(x)?v=r[m]:(v=xs({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(v));const y=v.shape.slice();for(let w=0;w<b.length;++w)y.splice(b[w],0,1);Fe(v.shape,y)||(v=Gt({inputs:{x:v},backend:e,attrs:{shape:y}}),p.push(v)),d===null?d=v:(d=n1({inputs:{a:v,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=r0({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const $ot={kernelName:SI,backendName:"webgl",kernelFunc:Dot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lot="return (x >= 0.0) ? x : (exp(x) - 1.0);",Fot=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Pot=De({opSnippet:Lot,packedOpSnippet:Fot}),Oot={kernelName:jh,backendName:"webgl",kernelFunc:Pot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zot="return (b >= 1.0) ? a : a * (b + 1.0);",Bot=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Uot=s=>{const{inputs:t,backend:e}=s,{dy:n,y:i}=t,r=ft().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zd(Bot,n.shape,i.shape):new Hc(zot,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],n.dtype)},Vot={kernelName:Ny,backendName:"webgl",kernelFunc:Uot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wot=`
  return vec4(equal(a, b));
`,Got="return float(a == b);",Hot=es({opSnippet:Got,packedOpSnippet:Wot,dtype:"bool",cpuKernelImpl:Ant}),qot={kernelName:Wm,backendName:"webgl",kernelFunc:Hot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jot=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${iw};
  float a1 = ${rw};
  float a2 = ${ow};
  float a3 = ${aw};
  float a4 = ${lw};
  float a5 = ${cw};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Xot=De({opSnippet:jot}),Kot={kernelName:Xh,backendName:"webgl",kernelFunc:Xot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yot=mu+`
  return exp(x);
`,Zot=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,TR=De({opSnippet:Yot,packedOpSnippet:Zot,cpuKernelImpl:Nnt,dtype:"float32"}),Jot={kernelName:Kh,backendName:"webgl",kernelFunc:TR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bb(s){const{inputs:t,attrs:e,backend:n}=s,{dim:i}=e,{input:r}=t,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(P(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Gt({inputs:{x:r},backend:n,attrs:{shape:a}})}const Qot={kernelName:Gm,backendName:"webgl",kernelFunc:Bb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT="return exp(x) - 1.0;",tat=De({opSnippet:gT,packedOpSnippet:gT,cpuKernelImpl:Rnt}),eat={kernelName:Yh,backendName:"webgl",kernelFunc:tat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xT{constructor(t,e,n){this.variableNames=["real","imag"];const i=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${i}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(s,t,e){const n=e.texData.get(s.dataId),i=mt(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=Gt({inputs:{x:s},backend:e,attrs:{shape:[o,r]}}),l=a.shape,c=new xT("real",l,t),u=new xT("imag",l,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=ra({inputs:{real:d,imag:f},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f);const g=Gt({inputs:{x:p},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nat(s){const{inputs:t,backend:e}=s,{input:n}=t;return IR(n,!1,e)}const sat={kernelName:Ry,backendName:"webgl",kernelFunc:nat};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iat{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qd(s){const{backend:t,attrs:e}=s,{shape:n,value:i}=e;let{dtype:r}=e;if(r=r||Dh(i),r==="string"){const o=Sn(r,mt(n));return o.fill(i),t.makeTensorInfo(n,r,o)}else{const o=new iat(n,i),a=[[i]];return t.runWebGLProgram(o,[],r,a)}}const rat={kernelName:Dy,backendName:"webgl",kernelFunc:Qd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oat{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aat={kernelName:$y,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:e}=s,n=t,i=new oat(e.shape);return n.runWebGLProgram(i,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bT="return floor(x);",lat=De({opSnippet:bT,packedOpSnippet:bT,cpuKernelImpl:Dnt}),cat={kernelName:Zh,backendName:"webgl",kernelFunc:lat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uat=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,hat=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dat=es({opSnippet:uat,packedOpSnippet:hat,dtype:"int32"}),fat={kernelName:Jh,backendName:"webgl",kernelFunc:dat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pat{constructor(t){this.variableNames=["A"];const e=bs(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mat{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=bs(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gat={kernelName:mV,backendName:"webgl",kernelFunc:xat};let Jl,Mx=ft().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function xat(s){const{inputs:t,backend:e,attrs:n}=s;let{pixels:i}=t;const{numChannels:r}=n,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(a||o){const g=ft().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Jl==null||g!==Mx)&&(Mx=g,Jl=document.createElement("canvas").getContext("2d",{willReadFrequently:Mx})),Jl.canvas.width=l,Jl.canvas.height=c,Jl.drawImage(i,0,0,l,c),i=Jl.canvas}const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=Zs.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),i);const f=ft().getBool("WEBGL_PACK")?new mat(h):new pat(h),p=e.runWebGLProgram(f,[d],"int32");return e.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,g=mo(u),m=Qn(i.shape,r.shape,l,h,c,d,!1,g);let x;const b=[],v=o!=null,y=a!=null,w=f==="leakyrelu",S=()=>{const _=[i,r],T=(I,A)=>{if(A==="NCHW"&&I.shape.length===1&&I.shape[0]!==1){const D=Gt({inputs:{x:I},backend:e,attrs:{shape:[I.shape[0],1,1]}});return b.push(D),D}return I};if(v&&_.push(T(o,u)),y&&_.push(T(a,u)),w){const I=e.makeTensorInfo([],"float32",Yo(p,"float32"));_.push(I),b.push(I)}return _};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))x=vR({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&g==="channelsLast"&&ft().getBool("WEBGL_EXP_CONV")){const _=f?vh(f,!0):null,T=new yR(m,v,_,y,w),I=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],A=S();x=e.runWebGLProgram(T,A,"float32",I)}else if(ft().getBool("WEBGL_CONV_IM2COL"))x=wR({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const _=f?vh(f,!1):null,T=new bR(m,v,_,y,w),I=S();x=e.runWebGLProgram(T,I,"float32")}const C=Gt({inputs:{x},backend:e,attrs:{shape:m.outShape}});return b.push(x),b.forEach(_=>e.disposeIntermediateTensorInfo(_)),C}const yat={kernelName:Rp,backendName:"webgl",kernelFunc:bat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n,p=[];let g=u;g==null&&(g=[1,1]),P(us(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=Qn(i.shape,r.shape,l,g,c,h,!0),x=ft().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,b=d?vh(d,x):null,v=[i,r],y=o!=null,w=a!=null,S=d==="leakyrelu";if(y&&v.push(o),w&&v.push(a),S){const I=e.makeTensorInfo([],"float32",Yo(f,"float32"));v.push(I),p.push(I)}let C;x?C=new CR(m,y,b,w,S):C=new SR(m,y,b,w,S);const _=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],T=e.runWebGLProgram(C,v,"float32",_);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),T}const wat={kernelName:$I,backendName:"webgl",kernelFunc:vat};class _at{constructor(t,e,n,i){this.sliceDim=t,this.strides=e,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=n;const r=Ye(n.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sat(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=i.shape,o=r[r.length-1],a=mt(n.shape),[l,c,u,h]=hv(n,i),d=Gt({inputs:{x:i},backend:e,attrs:{shape:[c,o]}}),f=Gt({inputs:{x:n},backend:e,attrs:{shape:[mt(n.shape)/u,u]}});if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const x=e.readSync(i.dataId),b=e.bufferSync(n),v=$nt(x,b,n.dtype,c,o,u,h,n.shape,a);return e.makeTensorInfo(l,n.dtype,v.values)}const p=new _at(o,h,[c,u],n.shape),g=e.runWebGLProgram(p,[f,d],f.dtype),m=Gt({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const Cat={kernelName:CI,backendName:"webgl",kernelFunc:Sat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tat{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Ye(this.rank),i=Iat(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function Iat(s,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s.length;i++)i===2?n.push("index"):n.push(`${e[i]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n,l=_e(o,i.shape)[0];if(ft().get("DEBUG")){const b=e.readSync(r.dataId),v=i.shape[l];for(let y=0;y<b.length;++y){const w=b[y];P(w<=v-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${v-1}]`)}}const c=xw(i,r,l,a),u=mt(r.shape),h=[],d=Gt({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Gt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const b=e.bufferSync(f),v=e.bufferSync(d),y=Lnt(v,b,p);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(c.outputShape,y.dtype,y.values)}const g=new Tat(d.shape,p),m=e.runWebGLProgram(g,[d,f],d.dtype);h.push(m);const x=Gt({inputs:{x:m},backend:e,attrs:{shape:c.outputShape}});return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),x}const Eat={kernelName:qm,backendName:"webgl",kernelFunc:ER};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mat="return float(a > b);",kat=`
  return vec4(greaterThan(a, b));
`,Aat=es({opSnippet:Mat,packedOpSnippet:kat,cpuKernelImpl:Fnt,dtype:"bool"}),Nat={kernelName:jm,backendName:"webgl",kernelFunc:Aat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rat="return float(a >= b);",Dat=`
  return vec4(greaterThanEqual(a, b));
`,$at=es({opSnippet:Rat,packedOpSnippet:Dat,dtype:"bool",cpuKernelImpl:Pnt}),Lat={kernelName:Qh,backendName:"webgl",kernelFunc:$at};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fat(s){const{inputs:t,backend:e}=s,{input:n}=t;return IR(n,!0,e)}const Pat={kernelName:Ly,backendName:"webgl",kernelFunc:Fat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oat="return float(!isnan(x) && !isinf(x));",zat=De({opSnippet:Oat,dtype:"bool"}),Bat={kernelName:ed,backendName:"webgl",kernelFunc:zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uat="return float(isinf(x));",Vat=De({opSnippet:Uat,dtype:"bool"}),Wat={kernelName:nd,backendName:"webgl",kernelFunc:Vat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gat="return float(isnan(x));",Hat=De({opSnippet:Gat,dtype:"bool"}),qat={kernelName:sd,backendName:"webgl",kernelFunc:Hat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jat="return float(a < b);",Xat=`
  return vec4(lessThan(a, b));
`,Kat=es({opSnippet:jat,packedOpSnippet:Xat,cpuKernelImpl:Ont,dtype:"bool"}),Yat={kernelName:Km,backendName:"webgl",kernelFunc:Kat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zat="return float(a <= b);",Jat=`
  return vec4(lessThanEqual(a, b));
`,Qat=es({opSnippet:Zat,packedOpSnippet:Jat,cpuKernelImpl:znt,dtype:"bool"}),tlt={kernelName:Ym,backendName:"webgl",kernelFunc:Qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elt(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=Bnt(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const nlt={kernelName:TI,backendName:"webgl",kernelFunc:elt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const slt=mu+`
  return x < 0.0 ? 0./0. : log(x);
`,ilt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,rlt=De({opSnippet:slt,packedOpSnippet:ilt,cpuKernelImpl:Unt}),olt={kernelName:id,backendName:"webgl",kernelFunc:rlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const alt=mu+`
  return log(1.0 + x);
`,llt=De({opSnippet:alt}),clt={kernelName:rd,backendName:"webgl",kernelFunc:llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ult="return float(a >= 1.0 && b >= 1.0);",hlt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dlt=es({opSnippet:ult,packedOpSnippet:hlt,dtype:"bool"}),flt={kernelName:Zm,backendName:"webgl",kernelFunc:dlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const plt="return float(!(x >= 1.0));",mlt=De({opSnippet:plt}),glt={kernelName:Jm,backendName:"webgl",kernelFunc:mlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xlt="return float(a >= 1.0 || b >= 1.0);",blt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,ylt=es({opSnippet:xlt,packedOpSnippet:blt,dtype:"bool"}),vlt={kernelName:Qm,backendName:"webgl",kernelFunc:ylt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wlt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _lt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Slt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n,c=ft().getBool("WEBGL_PACK_NORMALIZATION")?new _lt(i.shape,r,o,a,l):new wlt(i.shape,r,o,a,l);return e.runWebGLProgram(c,[i],i.dtype)},Clt={kernelName:tg,backendName:"webgl",kernelFunc:Slt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tlt{constructor(t,e,n,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ilt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n,h=new Tlt(i.shape,a,l,c,u);return e.runWebGLProgram(h,[i,r,o],i.dtype)},Elt={kernelName:Py,backendName:"webgl",kernelFunc:Ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mlt(s,t,e,n){const i=mt(t),o=mt(s.shape)/i,a=Gt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Tl(a,s.dtype,"max",n),c=Gt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=i.shape.length,l=_e(r,i.shape);let c=l;const u=un(c,a),h=u!=null,d=e.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const v=e.texData.get(f.dataId).values,y=new Array(a);for(let C=0;C<y.length;C++)y[C]=i.shape[u[C]];const w=t1(v,i.shape,i.dtype,u,y);f=e.makeTensorInfo(y,i.dtype);const S=e.texData.get(f.dataId);S.values=w}else f=i0(i,u,e);c=vn(c.length,a)}ts("max",c,a);const[p,g]=Vn(f.shape,c);let m=p;o&&(m=yn(p,l));let x;if(d){const v=e.texData.get(f.dataId).values,y=Vnt(v,mt(g),m,i.dtype);x=e.makeTensorInfo(m,i.dtype);const w=e.texData.get(x.dataId);w.values=y}else x=Mlt(f,g,m,e);return h&&e.disposeIntermediateTensorInfo(f),x}const klt={kernelName:eg,backendName:"webgl",kernelFunc:MR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Alt=e1+`
  return max(a, b);
`,Nlt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yd+`
  return result;
`,Rlt=es({opSnippet:Alt,packedOpSnippet:Nlt,cpuKernelImpl:Wnt}),Dlt={kernelName:od,backendName:"webgl",kernelFunc:Rlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $lt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Xd(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;P(us(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Di(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Fe(u.inShape,u.outShape))return Gs({inputs:{x:i},backend:e});const h=new wh(u,"max",!1);return e.runWebGLProgram(h,[i],i.dtype)}const Llt={kernelName:ng,backendName:"webgl",kernelFunc:$lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Flt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=n,u=[1,1,1],h=po(i.shape,r,o,u,a,c,l),d=new s1(h,"max",!1);return e.runWebGLProgram(d,[i],i.dtype)}const Plt={kernelName:sg,backendName:"webgl",kernelFunc:Flt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Olt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,i=t.dilationHeight,r=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=r-1-t.padInfo.top,l=o-1-t.padInfo.left,c=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class zlt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,f=u-1-t.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Blt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=po(o.shape,a,l,h,c,u),f=new s1(d,"max",!0),p=e.runWebGLProgram(f,[o],o.dtype),g=new zlt(d),m=e.runWebGLProgram(g,[i,p],o.dtype);return e.disposeIntermediateTensorInfo(p),m}const Ult={kernelName:zy,backendName:"webgl",kernelFunc:Blt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vlt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Xd([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=Di(a.shape,l,c,1,u,h),f=!0,p=new wh(d,"max",f),g=e.runWebGLProgram(p,[a],a.dtype),m=new Olt(d),x=e.runWebGLProgram(m,[i,g],a.dtype);return e.disposeIntermediateTensorInfo(g),x}const Wlt={kernelName:Oy,backendName:"webgl",kernelFunc:Vlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Glt(s,t,e,n){let i=new wh(e,"max",!1);const r=n.runWebGLProgram(i,[s],"float32");i=new wh(e,"max",!0,!0,t);const o=n.runWebGLProgram(i,[s],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hlt={kernelName:II,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;P(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const c=[1,1];P(us(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Di(n.shape,i,r,c,o),[h,d]=Glt(n,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qlt(s,t,e,n){const i=mt(t),o=mt(s.shape)/i,a=Gt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Tl(a,"float32","mean",n),c=Gt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jlt={kernelName:ig,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{keepDims:i,axis:r}=t,o=e,a=n.shape.length,l=_e(r,n.shape);let c=l;const u=un(c,a),h=u!=null,d=o.shouldExecuteOnCPU([n]),f=[];let p=n;if(h){if(d){const y=o.texData.get(p.dataId).values,w=new Array(a);for(let _=0;_<w.length;_++)w[_]=n.shape[u[_]];const S=t1(y,n.shape,n.dtype,u,w);p=o.makeTensorInfo(w,n.dtype);const C=o.texData.get(p.dataId);C.values=S}else p=i0(n,u,o);f.push(p),c=vn(c.length,a)}ts("sum",c,a);const[g,m]=Vn(p.shape,c);let x=g;i&&(x=yn(g,l));const b=qlt(p,m,x,o);for(const v of f)o.disposeIntermediateTensorInfo(v);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xlt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=_e(r,i.shape);let c=l;const u=un(c,a);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=vn(c.length,i.shape.length)),ts("min",c,a);const[d,f]=Vn(h.shape,c),p=mt(f),g=Gt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Tl(g,g.dtype,"min",e);let x;if(o){const b=yn(d,l);x=Gt({inputs:{x:m},backend:e,attrs:{shape:b}})}else x=Gt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const Klt={kernelName:rg,backendName:"webgl",kernelFunc:Xlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ylt=e1+`
  return min(a, b);
`,Zlt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yd+`
  return result;
`,Jlt=es({opSnippet:Ylt,packedOpSnippet:Zlt,cpuKernelImpl:Gnt}),Qlt={kernelName:ad,backendName:"webgl",kernelFunc:Jlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tct{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const i=t.length,r=Ye(i),o=e.map(u=>u[0]).join(","),a=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=n==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ect{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,g)=>p[0]+t[g]+p[1]);const i=t.length,r=Ye(i),o=e.map(p=>p[0]).join(","),a=e.map((p,g)=>p[0]+t[g]).join(","),l=ps("rc",i),c=ps("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1;let f="";if(i===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nct=({inputs:s,backend:t,attrs:e})=>{const{x:n}=s,{paddings:i,mode:r}=e,o=ft().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ect(n.shape,i,r):new tct(n.shape,i,r);return t.runWebGLProgram(o,[n],n.dtype)},sct={kernelName:og,backendName:"webgl",kernelFunc:nct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ict=`if (b == 0.0) return NAN;
  return mod(a, b);`,rct=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Yd+`
  return result;
`,oct=es({opSnippet:ict,packedOpSnippet:rct}),act={kernelName:ld,backendName:"webgl",kernelFunc:oct};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lct{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cct=`
if (a == b) {
  return 1.0;
};
return a / b;`,uct=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,kR=es({opSnippet:cct,packedOpSnippet:uct,checkOutOfBounds:!0}),hct={kernelName:qh,backendName:"webgl",kernelFunc:kR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT="return a - b;",AR=es({opSnippet:yT,packedOpSnippet:yT,supportsComplex:!0,cpuKernelImpl:ust}),dct={kernelName:Cd,backendName:"webgl",kernelFunc:AR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=_e([r],i.shape),a=MR({inputs:{x:i},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=yn(a.shape,o),c=Gt({inputs:{x:a},backend:e,attrs:{shape:l}}),u=AR({inputs:{a:i,b:c},backend:e}),h=TR({inputs:{x:u},backend:e}),d=r0({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),f=Gt({inputs:{x:d},backend:e,attrs:{shape:l}}),p=kR({inputs:{a:h,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}const fct={kernelName:Cg,backendName:"webgl",kernelFunc:NR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pct(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n,l=a?i:NR({inputs:{logits:i},backend:e,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new lct(c,u,r),d=[[o]],f=e.runWebGLProgram(h,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),f}const mct={kernelName:EI,backendName:"webgl",kernelFunc:pct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gct=Li+`
  return -x;
`,xct=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function bct(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])){const r=e.texData.get(n.dataId),[o,a]=qnt(r.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,o)}let i;return ft().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Ra(n.shape,xct):i=new io(n.shape,gct),e.runWebGLProgram(i,[n],n.dtype)}const yct={kernelName:ag,backendName:"webgl",kernelFunc:bct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vct=Wv;function wct(s){Ys("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),{selectedIndices:h}=vct(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const _ct={kernelName:By,backendName:"webgl",kernelFunc:wct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sct=Gv;function Cct(s){Ys("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=Sct(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const Tct={kernelName:Uy,backendName:"webgl",kernelFunc:Cct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ict=Hv;function Ect(s){Ys("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=Ict(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const Mct={kernelName:Vy,backendName:"webgl",kernelFunc:Ect};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kct{constructor(t,e,n,i){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Act=s=>{const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n,c=mt(i.shape),u=new kct(c,o,a,l),h=Gt({inputs:{x:i},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(u,[h],r);e.disposeIntermediateTensorInfo(h);const f=[...i.shape,o],p=Gt({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(d),p},Nct={kernelName:ug,backendName:"webgl",kernelFunc:Act};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="complex64"){const i=Jd({inputs:{input:n},backend:e}),r=lm({inputs:{x:i},backend:e}),o=o0({inputs:{input:n},backend:e}),a=lm({inputs:{x:o},backend:e}),l=ra({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Qd({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}const Rct={kernelName:Eg,backendName:"webgl",kernelFunc:lm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=Jd({inputs:{input:n},backend:e}),r=RR({inputs:{x:i},backend:e}),o=o0({inputs:{input:n},backend:e}),a=lm({inputs:{x:o},backend:e}),l=ra({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Qd({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}const Dct={kernelName:cg,backendName:"webgl",kernelFunc:RR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ct(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return Bb({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{Ri(r,u.shape,"All tensors passed to stack must have matching shapes"),P(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Bb({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=xR({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const Lct={kernelName:hg,backendName:"webgl",kernelFunc:$ct};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fct{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const i=t.length,r=Ye(i),o=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pct{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const i=t.length,r=Ye(i),o=e.map(g=>g[0]).join(","),a=e.map((g,m)=>g[0]+t[m]).join(","),l=ps("rc",i),c=ps("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let g=0,m=i===1?2:4;g<m;g++)p+=`
        ${d[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DR=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;if(mt(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return Qd({backend:e,attrs:{shape:c,value:o,dtype:i.dtype}})}const a=ft().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pct(i.shape,r,o):new Fct(i.shape,r,o),l=[[o]];return e.runWebGLProgram(a,[i],i.dtype,l)},Oct={kernelName:dg,backendName:"webgl",kernelFunc:DR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zct=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Bct=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Yd+`
  return result;
`,Uct=es({opSnippet:zct,packedOpSnippet:Bct}),Vct={kernelName:ud,backendName:"webgl",kernelFunc:Uct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=[],c=_e(r,i.shape);let u=c;const h=un(u,a);let d=i;h!=null&&(d=xs({inputs:{x:i},backend:e,attrs:{perm:h}}),u=vn(u.length,a),l.push(d)),ts("prod",u,a);let f;if(e.shouldExecuteOnCPU([d])){const p=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:x}=Xnt(d.shape,d.dtype,p,u);f=e.makeTensorInfo(m,x,g)}else{const[p,g]=Vn(d.shape,u),m=mt(g),x=Gt({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),b=av(i.dtype),v=Tl(x,b,"prod",e);f=Gt({inputs:{x:v},backend:e,attrs:{shape:p}}),l.push(x),l.push(v)}if(o){l.push(f);const p=yn(f.shape,c);f=Gt({inputs:{x:f},backend:e,attrs:{shape:p}})}return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const Gct={kernelName:pg,backendName:"webgl",kernelFunc:Wct};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hct(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:a}=n,l=i.map(x=>e.readSync(x.dataId)),c=i.map(x=>x.shape),u=e.readSync(r.dataId),h=e.readSync(o.dataId),[d,f,p]=Knt(l,c,u,r.shape,r.dtype,h,o.shape,a),g=d.map(x=>e.makeTensorInfo([x.length],"int32",x)),m=e.makeTensorInfo(p,r.dtype,f);return g.concat([m])}const qct={kernelName:MI,backendName:"webgl",kernelFunc:Hct};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jct(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=Ynt(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const Xct={kernelName:kI,backendName:"webgl",kernelFunc:jct};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kct(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a.map(m=>e.readSync(m.dataId)),f=a.map(m=>m.shape),[p,g]=Znt(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const Yct={kernelName:AI,backendName:"webgl",kernelFunc:Kct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R=s=>{const{backend:t,attrs:e}=s,{start:n,stop:i,step:r,dtype:o}=e,a=Jnt(n,i,r,o);return t.makeTensorInfo([a.length],o,a)},Zct={kernelName:Wy,backendName:"webgl",kernelFunc:$R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jct="return 1.0 / x;",Qct=De({opSnippet:Jct}),tut={kernelName:hd,backendName:"webgl",kernelFunc:Qct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eut=Li+`
  return (x < 0.0) ? 0.0 : x;
`,nut=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sut=De({opSnippet:eut,packedOpSnippet:nut}),iut={kernelName:dd,backendName:"webgl",kernelFunc:sut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rut=Li+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,out=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aut=De({opSnippet:rut,packedOpSnippet:out}),lut={kernelName:fd,backendName:"webgl",kernelFunc:aut};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cut{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uut{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hut(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=ft().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uut(i.shape,l,c,r,o):new cut(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],"float32")}const dut={kernelName:xg,backendName:"webgl",kernelFunc:hut};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fut{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function put(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new fut(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const mut={kernelName:qy,backendName:"webgl",kernelFunc:put};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gut{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xut{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function but(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=ft().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xut(i.shape,l,c,r,o):new gut(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],i.dtype)}const yut={kernelName:gg,backendName:"webgl",kernelFunc:but};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vut{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wut(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new vut(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const _ut={kernelName:Hy,backendName:"webgl",kernelFunc:wut};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sut{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const i=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,r=t.map((a,l)=>i(l)).join(","),o=Ye(n);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cut{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const i=ps("rc",n),r=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Ye(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${o}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function u(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function h(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){const g=t.map((b,v)=>f(v,p)),m=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${x}))`}function f(p,g){return e.indexOf(p)!==-1&&t[p]!==1?`${t[p]} - ${g[p]} - 1`:`${g[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tut(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n,o=i.shape.length,a=_e(r,i.shape);if(o===0)return Gs({inputs:{x:i},backend:e});const l=ft().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cut(i.shape,a):new Sut(i.shape,a);return e.runWebGLProgram(l,[i],i.dtype)}const Iut={kernelName:bg,backendName:"webgl",kernelFunc:Tut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eut{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],i=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mut={kernelName:rv,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=new Eut(n.shape,r),[c,u]=ew(o,n.shape[1],n.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kut=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Aut=De({opSnippet:kut}),Nut={kernelName:pd,backendName:"webgl",kernelFunc:Aut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rut="return inversesqrt(x);",Dut=De({opSnippet:Rut,cpuKernelImpl:Qnt}),$ut={kernelName:md,backendName:"webgl",kernelFunc:Dut};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LR{constructor(t,e,n,i,r,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const l=Ye(r.length),c=Ye(o.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";i===1?d="i":i===2&&(d="i, coords[1]");const f=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lut(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=kd(r,i,o),d=[h/c,c];if(h===0)return e.makeTensorInfo(o,i.dtype);const f=Gt({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),p=Gt({inputs:{x:r},backend:e,attrs:{shape:[l,c]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),m=new LR(l,a,f.shape.length,p.shape.length,u,d),x=e.runWebGLProgram(m,[p,f,g],p.dtype),b=Gt({inputs:{x},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),b}const Fut={kernelName:NI,backendName:"webgl",kernelFunc:Lut};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Put{constructor(t,e,n,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=ft().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Out(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=new Put(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return e.runWebGLProgram(a,[i,r],"int32",l)}const zut={kernelName:RI,backendName:"webgl",kernelFunc:Out};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class But{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let i,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);i=l.join(),r=c.join()}const o=Ye(n);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uut(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t,o=new But(n.shape.length,i.shape,i.shape.length);return e.runWebGLProgram(o,[n,i,r],Bs(i.dtype,r.dtype))}const Vut={kernelName:yg,backendName:"webgl",kernelFunc:Uut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wut=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Ug};
  float scale = ${Vg};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Gut=De({opSnippet:Wut}),Hut={kernelName:gd,backendName:"webgl",kernelFunc:Gut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qut=mu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,jut=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Xut=De({opSnippet:qut,packedOpSnippet:jut,cpuKernelImpl:est}),Kut={kernelName:vd,backendName:"webgl",kernelFunc:Xut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yut=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Zut=De({opSnippet:Yut}),Jut={kernelName:yd,backendName:"webgl",kernelFunc:Zut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qut=mu+`
  return sin(x);
`,tht=De({opSnippet:Qut}),eht={kernelName:xd,backendName:"webgl",kernelFunc:tht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nht=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,sht=De({opSnippet:nht}),iht={kernelName:bd,backendName:"webgl",kernelFunc:sht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rht=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,oht=De({opSnippet:rht}),aht={kernelName:wd,backendName:"webgl",kernelFunc:oht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lht=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;P(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,b)=>x*b),l=[[0,0]];l.push(...o);for(let x=1+r.length;x<i.shape.length;++x)l.push([0,0]);const c=[],u=DR({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),h=Ld(u.shape,r,a,!1),d=Fd(h.length,r.length,!1),f=Pd(u.shape,r,a,!1),p=Gt({inputs:{x:u},backend:e,attrs:{shape:h}}),g=xs({inputs:{x:p},backend:e,attrs:{perm:d}}),m=Gt({inputs:{x:g},backend:e,attrs:{shape:f}});return c.push(u),c.push(p),c.push(g),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),m},cht={kernelName:_g,backendName:"webgl",kernelFunc:lht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uht(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.readSync(n.dataId),l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=e.readSync(o.dataId)[0],[h,d,f,p,g]=sst(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const hht={kernelName:jy,backendName:"webgl",kernelFunc:uht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dht(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.readSync(i.dataId)),a=e.readSync(n.dataId),l=Array.from(e.readSync(r.dataId)),[c,u,h]=ist(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const fht={kernelName:Xy,backendName:"webgl",kernelFunc:dht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pht(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=iR(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const mht={kernelName:Ky,backendName:"webgl",kernelFunc:pht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ght(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=iR(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const xht={kernelName:Yy,backendName:"webgl",kernelFunc:ght};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bht(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=kd(r,i,a),f=!1;if(r.dtype==="string"){const x=e.bufferSync(i),b=e.bufferSync(r),v=Vo(e.readSync(o.dataId)[0]),y=tst(x,b,a,d,u,c,l,h,v,f);return e.makeTensorInfo(a,y.dtype,y.values)}const p=new LR(c,l,i.shape.length,r.shape.length,h,[d,1],f),g=e.runWebGLProgram(p,[r,i,o],r.dtype),m=Gt({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),m}const yht={kernelName:DI,backendName:"webgl",kernelFunc:bht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=_e(o,i.shape)[0],l=gw(i,r,a),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=gu({inputs:{x:i},backend:e,attrs:{begin:u,size:f}});return u[a]+=d,p})}const wht={kernelName:Sg,backendName:"webgl",kernelFunc:vht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT="return sqrt(x);",_ht=De({opSnippet:vT,packedOpSnippet:vT,cpuKernelImpl:rst}),Sht={kernelName:_d,backendName:"webgl",kernelFunc:_ht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cht="return x * x;",Tht=De({opSnippet:Cht}),Iht={kernelName:Zy,backendName:"webgl",kernelFunc:Tht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wT="return (a - b) * (a - b);",Eht=es({opSnippet:wT,packedOpSnippet:wT}),Mht={kernelName:Sd,backendName:"webgl",kernelFunc:Eht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kht({inputs:s,attrs:t,backend:e}){const{x:n}=s,i=Li+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new io(n.shape,i);return e.runWebGLProgram(r,[n],n.dtype)}const Aht={kernelName:Md,backendName:"webgl",kernelFunc:kht};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nht{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const i=n.length,r=Ye(n.length),o=Ye(n.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=n.map((c,u)=>(l++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:b,end:v,strides:y}=gv(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Gt({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){P(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const C=fv(b,v,y),_=gu({inputs:{x:i},backend:e,attrs:{begin:b,size:C}});w=Gt({inputs:{x:_},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(_)}else if(e.shouldExecuteOnCPU([i])){const _=e.readSync(i.dataId),T=we(i.shape,i.dtype,_),I=ost(f,T,y,b);w=e.makeTensorInfo(p,i.dtype,I.values)}else{const _=new Nht(b,y,f);w=e.runWebGLProgram(_,[i],i.dtype)}const S=Gt({inputs:{x:w},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(w),S}const Dht={kernelName:Jy,backendName:"webgl",kernelFunc:Rht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ht(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.readSync(u.dataId),f=e.readSync(h.dataId),[p,g]=ast(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const Lht={kernelName:Qy,backendName:"webgl",kernelFunc:$ht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fht(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.readSync(r.dataId),l=e.readSync(o.dataId)[0],[c,u,h]=lst(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const Pht={kernelName:tv,backendName:"webgl",kernelFunc:Fht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oht(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(r.dataId),a=cst(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const zht={kernelName:ev,backendName:"webgl",kernelFunc:Oht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bht="return tan(x);",Uht=De({opSnippet:Bht}),Vht={kernelName:Td,backendName:"webgl",kernelFunc:Uht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wht=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Ght=De({opSnippet:Wht}),Hht={kernelName:Id,backendName:"webgl",kernelFunc:Ght};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qht{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const i=Ye(this.rank),r=jht(t);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function jht(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let i=0;i<s.length;i++)n.push(`imod(${e[i]}, ${s[i]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;if(i.dtype==="string"||i.shape.length>5){const l=e.readSync(i.dataId),c=i.dtype==="string"?l.map(d=>Vo(d)):l,u=we(i.shape,i.dtype,c),h=hst(u,r);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new qht(i.shape,r);return e.runWebGLProgram(o,[i],i.dtype)}const Xht={kernelName:Ed,backendName:"webgl",kernelFunc:FR};class Kht{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Yht{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function _T(s){let t=1;for(;t<s;)t*=2;return t}function Zht(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n,a=ft().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ft().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([i])||u<a||r>l){const I=e.readSync(i.dataId),[A,D]=dst(I,c,i.dtype,r,o);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(D.shape,D.dtype,D.values)]}if(r===0)return c[c.length-1]=0,[e.makeTensorInfo(c,i.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[i,Qd({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?e.unpackTensor(i):i,g=mt(c)/u,m=Gt({inputs:{x:f},attrs:{shape:[g,u]},backend:e});d&&xa(e,f);const x=_T(r),b=_T(u);let v=null;const y=()=>v===null?[m,m]:[m,v],w=(I,A,D)=>{const k=y(),M=new Kht(D),N=[[u],[v===null?1:0],[Number.NEGATIVE_INFINITY],[I],[A]],O=v;v=e.runWebGLProgram(M,k,"int32",N),xa(e,O)};for(let I=1;I<x;I*=2){const A=I*2;for(let D=I;D>=1;D/=2)w(A,D,[g,b])}for(let I=b;I>x;I/=2){const A=y(),D=new Yht([g,I/2]),M=[[u],[v===null?1:0],[x]],E=v;v=e.runWebGLProgram(D,A,"int32",M),xa(e,E);const N=x/2,O=N*2;for(let L=N;L>=1;L/=2)w(O,L,v.shape)}let S=v;v=gu({inputs:{x:v},backend:e,attrs:{begin:0,size:[g,r]}}),xa(e,S);let C=ER({inputs:{x:m,indices:v},backend:e,attrs:{axis:1,batchDims:1}});xa(e,m);const _=c.slice(0,-1);_.push(r),S=v,v=Gt({inputs:{x:v},attrs:{shape:_},backend:e}),xa(e,S);const T=C;return C=Gt({inputs:{x:C},attrs:{shape:_},backend:e}),xa(e,T),[C,v]}const Jht={kernelName:nv,backendName:"webgl",kernelFunc:Zht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qht{constructor(t,e,n,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=n==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tdt(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=n,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=new Qht(h,d,o,a,l,m);return e.runWebGLProgram(x,[i,r],"float32")}const edt={kernelName:sv,backendName:"webgl",kernelFunc:tdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ndt(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Xd(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=n.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=fst(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const sdt={kernelName:iv,backendName:"webgl",kernelFunc:ndt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function idt(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],c=new Array(a-1);let u=0;for(let g=0;g<a;g++)g!==r&&(c[u++]=o.shape[g]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let g=0;g<p.length;g++){d[r]=g;const m=gu({inputs:{x:o},backend:e,attrs:{begin:d,size:f}}),x=Gt({inputs:{x:m},backend:e,attrs:{shape:c}});p[g]=x,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const rdt={kernelName:Tg,backendName:"webgl",kernelFunc:idt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class odt{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,i=t.batchSize,r=t.inSize,o=t.numSegments,a=o*Math.ceil(r/n);this.outputShape=[i,a];const l="0.0",c="sumValue",u=Math.floor(n/4)*4,h=n%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function adt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n,a=i.shape.length,l=[];let c=0;const u=un([c],a);let h=i;u!=null&&(h=xs({inputs:{x:i},backend:e,attrs:{perm:u}}),l.push(h),c=vn(1,a)[0]);const d=IM(h.shape,c,o),f=mt([h.shape[c]]),p=Gt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}});l.push(p);const g=av(i.dtype),m=(y,w,S,C,_)=>{const T=y.shape[0],I=y.shape[1],A=TM(I,_),D={windowSize:A,inSize:I,batchSize:T,numSegments:_},k=new odt(D,w),M=e.compileAndRun(k,[y,S],C);if(l.push(M),M.shape[1]===_)return M;const E=$R({backend:e,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),N=FR({inputs:{x:E},backend:e,attrs:{reps:[I/A]}});return l.push(E),l.push(N),m(M,w,N,C,_)},x=m(p,"unsortedSegmentSum",r,g,o),b=Gt({inputs:{x},backend:e,attrs:{shape:d}});let v=b;if(u!=null){l.push(b);const y=Jo(u);v=xs({inputs:{x:v},backend:e,attrs:{perm:y}})}return l.forEach(y=>e.disposeIntermediateTensorInfo(y)),v}const ldt={kernelName:Ig,backendName:"webgl",kernelFunc:adt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cdt=[iit,oit,cit,dit,pit,xit,yit,wit,Tit,Eit,Ait,Dit,Fit,Bit,Wit,Hit,jit,Zit,Qit,ert,rrt,drt,prt,grt,_rt,Crt,Mrt,Ust,Nrt,Frt,Brt,qrt,Xrt,Yrt,Jrt,tot,sot,oot,cot,hot,fot,mot,bot,vot,Cot,Iot,kot,Rot,$ot,Oot,Vot,qot,Kot,Jot,Qot,eat,sat,rat,aat,cat,fat,gat,yat,wat,Cat,Eat,Nat,Lat,Bst,Pat,$rt,Bat,Wat,qat,Wst,Yat,tlt,nlt,olt,clt,flt,glt,vlt,Clt,Elt,klt,Dlt,Llt,Plt,Ult,Wlt,Hlt,jlt,Klt,Qlt,sct,act,mct,qst,yct,_ct,Tct,Mct,brt,Nct,Dct,Lct,Oct,Vct,Hst,Gct,qct,Xct,Yct,Zct,yrt,hct,tut,iut,lut,Xst,dut,mut,yut,_ut,Iut,Mut,Nut,$ut,Fut,zut,Vut,Hut,Kut,Jut,eht,iht,urt,fct,aht,cht,hht,fht,mht,xht,yht,wht,Sht,Iht,Mht,Aht,Dht,Lht,Pht,zht,dct,eit,Vht,Hht,Xht,Jht,edt,nit,sdt,rdt,ldt,Rct];for(const s of cdt)LI(s);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class udt{constructor(t){Kt(this,"canvas");Kt(this,"debug",!1);Kt(this,"timings",{renderStart:0,renderEnd:0,physicsStart:0,physicsEnd:0,uiStart:0,uiEnd:0});Kt(this,"scene");Kt(this,"renderer");Kt(this,"gameObjects");Kt(this,"world");Kt(this,"controls");Kt(this,"camera");Kt(this,"cameraPosition");Kt(this,"cameraQuaternion");Kt(this,"resizeFunction");Kt(this,"callback");Kt(this,"ground");Kt(this,"raceTrack");this.canvas=t,this.createCamera(),this.scene=new bO,this.addLighting(),this.createRenderer(),this.enableAutoResizer(),this.setupControls(),this.createPhyiscsWorld(),this.callback=()=>{};let e=new sz;const n=()=>{const i=Math.min(e.getDelta(),.03333333333333333);i>0&&this.update(i)};this.renderer.setAnimationLoop(n),this.gameObjects=[],this.ground=new JU,this.addGameObject(this.ground)}update(t){if(this.timings.physicsStart=performance.now(),this.world.step(t),this.gameObjects.forEach(n=>n.syncMeshesToBodies()),this.timings.physicsEnd=performance.now(),this.timings.uiStart=performance.now(),this.controls.target.x=Math.min(Math.max(this.controls.target.x,-10),10),this.controls.target.y=Math.min(Math.max(this.controls.target.y,0),10),this.controls.target.z=Math.min(Math.max(this.controls.target.z,-10),10),this.camera.position.y<0){const n=this.camera.position.length();this.camera.position.y=0,this.camera.position.normalize(),this.camera.position.multiplyScalar(n)}this.controls.update(),this.cameraPosition.lerp(this.camera.position,1-.9**(t/.016)),this.cameraQuaternion.slerp(this.camera.quaternion,1-.9**(t/.016));const e=this.camera.clone();e.position.copy(this.cameraPosition),e.quaternion.copy(this.cameraQuaternion),this.callback(t),this.timings.uiEnd=performance.now(),this.timings.renderStart=performance.now(),this.renderer.render(this.scene,e),this.timings.renderEnd=performance.now(),this.debug?this.renderDebug(t):this.clearDebug()}requestCallbackBeforeRender(t){this.callback=t}addGameObject(t){this.gameObjects.push(t),t.meshes.forEach(e=>this.scene.add(e)),t.bodies.forEach(e=>this.world.addBody(e)),t.constraints.forEach(e=>this.world.addConstraint(e))}removeGameObject(t){this.gameObjects=this.gameObjects.filter(e=>e!==t),t.meshes.forEach(e=>this.scene.remove(e)),t.bodies.forEach(e=>this.world.removeBody(e)),t.constraints.forEach(e=>this.world.removeConstraint(e))}addLighting(){this.scene.add(new nz(4210752));const t=new ez(16777215,.6);t.position.set(-1.1,1,.9),t.castShadow=!0,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,this.scene.add(t)}createRenderer(){this.renderer=new k2({antialias:!0,canvas:this.canvas}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=c2}createCamera(){this.camera=new gi(70,window.innerWidth/window.innerHeight,.01,100),this.camera.position.z=6,this.camera.position.y=3,this.camera.position.x=6,this.cameraPosition=this.camera.position.clone(),this.cameraQuaternion=this.camera.quaternion.clone()}createPhyiscsWorld(){this.world=new k4,this.world.gravity.set(0,-9.82,0),this.world.allowSleep=!0,this.world.broadphase=new ac(this.world),this.world.broadphase.axisIndex=0}setGravity(t,e,n){this.world.gravity.set(t,e,n)}enableAutoResizer(){if(this.resizeFunction)return;const t=()=>{this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight,!1),this.camera.aspect=this.canvas.offsetWidth/this.canvas.offsetHeight,this.camera.updateProjectionMatrix()};this.resizeFunction=t,window.addEventListener("resize",t),t()}disableAutoResizer(){this.resizeFunction&&window.removeEventListener("resize",this.resizeFunction),this.resizeFunction=void 0}setupControls(){this.controls=new F4(this.camera,this.renderer.domElement),this.controls.enableDamping=!1}resetCamera(){this.controls.target.set(0,0,0);const t=this.raceTrack.startX,e=this.raceTrack.startZ;this.camera.position.set(t,0,e),this.camera.position.multiplyScalar(1.5),this.camera.position.length()<4&&this.camera.position.setLength(4),this.camera.position.y=3,this.controls.minDistance=.1,this.controls.maxDistance=20,this.controls.update()}renderDebug(t){var o;const e=Pp(),n=this.timings.renderEnd-this.timings.renderStart,i=this.timings.uiEnd-this.timings.uiStart,r=this.timings.physicsEnd-this.timings.physicsStart;document.getElementById("debug-element").innerText=`FPS: ${Math.round(1/t)}
            Delta: ${(n+i+r).toFixed(2)}ms, ${n.toFixed(2)}ms render, ${r.toFixed(2)}ms physics, ${i.toFixed(2)}ms UI
            Pysics bodies: ${this.world.bodies.length}
            Physics constraints: ${this.world.constraints.length}
            Game objects: ${this.gameObjects.length}
            Three Meshes: ${this.scene.children.length}
            Three Memory info: ${this.renderer.info.memory.geometries} geometries, ${this.renderer.info.memory.textures} textures
            Render info: ${this.renderer.info.render.calls} calls, ${this.renderer.info.render.frame} frame, ${this.renderer.info.render.lines} lines, ${this.renderer.info.render.points} points, ${this.renderer.info.render.triangles} triangles
            Program info: ${(o=this.renderer.info.programs)==null?void 0:o.length} programs
            Tensorflow: ${e.numBytes} btyes, ${e.numDataBuffers} databuffers, ${e.numTensors} tensors, ${e.unreliable} unreliable`}clearDebug(){document.getElementById("debug-element").innerText=""}}const Ql=[];function hdt(s,t=qe){let e;const n=new Set;function i(a){if(Zn(s,a)&&(s=a,e)){const l=!Ql.length;for(const c of n)c[1](),Ql.push(c,s);if(l){for(let c=0;c<Ql.length;c+=2)Ql[c][0](Ql[c+1]);Ql.length=0}}}function r(a){i(a(s))}function o(a,l=qe){const c=[a,l];return n.add(c),n.size===1&&(e=t(i)||qe),a(s),()=>{n.delete(c),n.size===0&&(e(),e=null)}}return{set:i,update:r,subscribe:o}}const PR=hdt(null);function ddt(s){let t;return{c(){t=Mt("canvas"),Q(t,"class","svelte-1v9nuep")},m(e,n){Tt(e,t,n),s[1](t)},p:qe,i:qe,o:qe,d(e){e&&Ct(t),s[1](null)}}}function fdt(s,t,e){let n,i;r2(()=>{i=new udt(n),PR.set(i),document.addEventListener("keydown",o=>{o.key==="d"&&(o.ctrlKey||o.metaKey)&&(i.debug=!i.debug,o.preventDefault())})});function r(o){Cc[o?"unshift":"push"](()=>{n=o,e(0,n)})}return[n,r]}class pdt extends ii{constructor(t){super(),si(this,t,fdt,ddt,Zn,{})}}function mdt(s){let t,e,n,i=s[0].brushSize+"",r,o,a,l,c;return{c(){t=Mt("label"),e=he("Road width: "),n=Mt("b"),r=he(i),o=qt(),a=Mt("input"),Q(t,"for","steps-range"),Q(t,"class","block mb-1 text-sm font-medium text-gray-300"),Q(a,"id","steps-range"),Q(a,"type","range"),Q(a,"min","0.8"),Q(a,"max","2"),Q(a,"step","0.1"),Q(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(u,h){Tt(u,t,h),wt(t,e),wt(t,n),wt(n,r),Tt(u,o,h),Tt(u,a,h),an(a,s[0].brushSize),l||(c=[pe(a,"change",s[1]),pe(a,"input",s[1])],l=!0)},p(u,[h]){h&1&&i!==(i=u[0].brushSize+"")&&mn(r,i),h&1&&an(a,u[0].brushSize)},i:qe,o:qe,d(u){u&&Ct(t),u&&Ct(o),u&&Ct(a),l=!1,ni(c)}}}function gdt(s,t,e){let{mode:n}=t;function i(){n.brushSize=Ss(this.value),e(0,n)}return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class xdt extends ii{constructor(t){super(),si(this,t,gdt,mdt,Zn,{mode:0})}}function ST(s){let t,e,n,i=s[0].ground.body.material.friction+"",r,o,a,l,c,u,h,d=s[0].raceTrack.barrrierFriction+"",f,p,g,m,x;return{c(){t=Mt("label"),e=he("Ground friction: "),n=Mt("b"),r=he(i),o=qt(),a=Mt("input"),l=qt(),c=Mt("label"),u=he("Barrier friction: "),h=Mt("b"),f=he(d),p=qt(),g=Mt("input"),Q(t,"for","steps-range"),Q(t,"class","block mb-1 text-sm font-medium text-gray-300"),Q(a,"id","steps-range"),Q(a,"type","range"),Q(a,"min","0.05"),Q(a,"max","1"),Q(a,"step","0.02"),Q(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(c,"for","steps-range"),Q(c,"class","block my-1 text-sm font-medium text-gray-300"),Q(g,"id","steps-range"),Q(g,"type","range"),Q(g,"min","0.0"),Q(g,"max","1"),Q(g,"step","0.02"),Q(g,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(b,v){Tt(b,t,v),wt(t,e),wt(t,n),wt(n,r),Tt(b,o,v),Tt(b,a,v),an(a,s[0].ground.body.material.friction),Tt(b,l,v),Tt(b,c,v),wt(c,u),wt(c,h),wt(h,f),Tt(b,p,v),Tt(b,g,v),an(g,s[0].raceTrack.barrrierFriction),m||(x=[pe(a,"change",s[1]),pe(a,"input",s[1]),pe(g,"change",s[2]),pe(g,"input",s[2])],m=!0)},p(b,v){v&1&&i!==(i=b[0].ground.body.material.friction+"")&&mn(r,i),v&1&&an(a,b[0].ground.body.material.friction),v&1&&d!==(d=b[0].raceTrack.barrrierFriction+"")&&mn(f,d),v&1&&an(g,b[0].raceTrack.barrrierFriction)},d(b){b&&Ct(t),b&&Ct(o),b&&Ct(a),b&&Ct(l),b&&Ct(c),b&&Ct(p),b&&Ct(g),m=!1,ni(x)}}}function bdt(s){let t,e=s[0]!==null&&ST(s);return{c(){e&&e.c(),t=Or()},m(n,i){e&&e.m(n,i),Tt(n,t,i)},p(n,[i]){n[0]!==null?e?e.p(n,i):(e=ST(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:qe,o:qe,d(n){e&&e.d(n),n&&Ct(t)}}}function ydt(s,t,e){let{gameWorld:n}=t;function i(){n.ground.body.material.friction=Ss(this.value),e(0,n)}function r(){n.raceTrack.barrrierFriction=Ss(this.value),e(0,n)}return s.$$set=o=>{"gameWorld"in o&&e(0,n=o.gameWorld)},[n,i,r]}class OR extends ii{constructor(t){super(),si(this,t,ydt,bdt,Zn,{gameWorld:0})}}const CT=[0,-15,15,-30,30,-45,45,-60,60,-75,75,-90,90].map(s=>s*Math.PI/180).sort(function(s,t){return s-t}),pr=8;class Sh extends ry{constructor(t,e,n,i,r,o=1,a=.25,l=.1){super();const c=new pl({friction:a,restitution:l}),u=new hl(.1,.1,.2),h=new nn(u,i);h.castShadow=!0,h.receiveShadow=!0,h.position.x=t,h.position.y=e,h.position.z=n,h.updateMatrix(),this.meshes.push(h),this.carBodyMesh=h;const d=new Mh(new R(.05,.05,.1)),f=new Yt({mass:o/2,allowSleep:!1,collisionFilterGroup:pr,collisionFilterMask:~pr});f.addShape(d),f.position.x=h.position.x,f.position.y=h.position.y,f.position.z=h.position.z,this.bodies.push(f);const p=new Ma(.033,.033,.02,16);p.rotateZ(Math.PI/2);const g=new nn(p,r);g.castShadow=!0,g.receiveShadow=!0,g.position.x=-.1+h.position.x,g.position.y=-.05+h.position.y,g.position.z=-.1+h.position.z,this.meshes.push(g),this.wheelLFMesh=g;const m=new Lf(.033),x=new Yt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:pr,collisionFilterMask:~pr});x.addShape(m),x.position.x=g.position.x,x.position.y=g.position.y,x.position.z=g.position.z,this.bodies.push(x);const b=new Ma(.033,.033,.02,16);b.rotateZ(Math.PI/2);const v=new nn(b,r);v.castShadow=!0,v.receiveShadow=!0,v.position.x=.1+h.position.x,v.position.y=-.05+h.position.y,v.position.z=-.1+h.position.z,this.meshes.push(v),this.wheelRFMesh=v;const y=new Lf(.033),w=new Yt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:pr,collisionFilterMask:~pr});w.addShape(y),w.position.x=v.position.x,w.position.y=v.position.y,w.position.z=v.position.z,this.bodies.push(w);const S=new Ma(.04,.04,.033);S.rotateZ(Math.PI/2);const C=new nn(S,r);C.castShadow=!0,C.receiveShadow=!0,C.position.x=-.1+h.position.x,C.position.y=-.05+h.position.y,C.position.z=.1+h.position.z,this.meshes.push(C),this.wheelLBMesh=C;const _=new Lf(.04),T=new Yt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:pr,collisionFilterMask:~pr});T.addShape(_),T.position.x=C.position.x,T.position.y=C.position.y,T.position.z=C.position.z,this.bodies.push(T);const I=new Ma(.04,.04,.033);I.rotateZ(Math.PI/2);const A=new nn(I,r);A.castShadow=!0,A.receiveShadow=!0,A.position.x=.1+h.position.x,A.position.y=-.05+h.position.y,A.position.z=.1+h.position.z,this.meshes.push(A),this.wheelRBMesh=A;const D=new Lf(.04),k=new Yt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:pr,collisionFilterMask:~pr});k.addShape(D),k.position.x=A.position.x,k.position.y=A.position.y,k.position.z=A.position.z,this.bodies.push(k);const M=new R(1,0,0),E=new R(1,0,0),N=new R(1,0,0),O=new R(1,0,0);this.constraintLF=new $f(f,x,{pivotA:new R(-.1,-.05,-.1),axisA:M,maxForce:.99}),this.constraints.push(this.constraintLF),this.constraintRF=new $f(f,w,{pivotA:new R(.1,-.05,-.1),axisA:E,maxForce:.99}),this.constraints.push(this.constraintRF),this.constraintLB=new $f(f,T,{pivotA:new R(-.1,-.05,.1),axisA:N,maxForce:.99}),this.constraints.push(this.constraintLB),this.constraintRB=new $f(f,k,{pivotA:new R(.1,-.05,.1),axisA:O,maxForce:.99}),this.constraints.push(this.constraintRB),this.accelMotorForce=.004,this.brakeMotorForce=1,this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.enableMotor(),this.constraintRB.enableMotor()}getSensorRays(){const t=this.getForwardDir(),e=this.getSideDir();let n=this.carBodyMesh.position.clone().add(t.clone().multiplyScalar(.1));return CT.map(i=>{let r=t.clone().multiplyScalar(Math.cos(i)).add(e.clone().multiplyScalar(Math.sin(i))),o=n.clone().add(e.clone().multiplyScalar(.05*Math.sin(i))),a=new B2(o,r,.01,1);return a.layers.set(uy),a.firstHitOnly=!0,a})}getSensorData(t){return this.getSensorRays().map(n=>{let i=n.intersectObjects([t.raceTrack.barrierMesh,t.ground.mesh],!1),r=i.length>0?i[0].distance/n.far:1,o=n.ray.origin,a=n.ray.direction;return{distance:r,origin:o,direction:a}})}static get sensorNumber(){return CT.length}getForwardVelocity(){let t=this.getForwardDir();t.y=0,t.normalize();let e=this.bodies[0].velocity;return t.x*e.x+t.z*e.z}getNetworkInput(t){let e=this.getSensorData(t),n=this.getForwardVelocity(),i=this.getPosition();const r=t.raceTrack.closestPointTangentAndCompleted(i.x,i.z);let o=r.tangent;o.y=0,o.normalize();let a=o.dot(this.getForwardDir().setY(0).normalize()),l=o.dot(this.getSideDir().setY(0).normalize());return{sensorData:e,forwardVelocity:n,forwardAmount:a,sideAmount:l,networkInput:[...e.map(c=>c.distance),n,a,l],completed:r.completed}}static get networkInputSize(){return this.sensorNumber+3}getPosition(){return this.carBodyMesh.position.clone()}getForwardDir(){let t=this.wheelLFMesh.position.clone().sub(this.wheelLBMesh.position).normalize(),e=this.wheelRFMesh.position.clone().sub(this.wheelRBMesh.position).normalize();return t.clone().add(e).divideScalar(2)}getSideDir(){let t=this.wheelLBMesh.position.clone().sub(this.wheelRBMesh.position).normalize(),e=this.wheelLFMesh.position.clone().sub(this.wheelRFMesh.position).normalize();return t.clone().add(e).divideScalar(2)}rotateY(t){const e=this.getPosition();this.bodies.forEach(n=>{const i=new G(n.position.x,n.position.y,n.position.z).sub(e);i.applyAxisAngle(new G(0,1,0),t),n.position.set(i.x+e.x,i.y+e.y,i.z+e.z),n.quaternion=n.quaternion.mult(new gn().setFromAxisAngle(new R(0,1,0),-t))})}applyInput(t,e,n,i,r){t&&!n&&(this.constraintLB.setMotorSpeed(100),this.constraintRB.setMotorSpeed(100)),n&&!t&&(this.constraintLB.setMotorSpeed(-20),this.constraintRB.setMotorSpeed(-20)),(!t&&!n||t&&n)&&(this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0)),e&&!i&&(this.constraintLF.axisA.z=-.25,this.constraintRF.axisA.z=-.25),i&&!e&&(this.constraintLF.axisA.z=.25,this.constraintRF.axisA.z=.25),(!e&&!i||e&&i)&&(this.constraintLF.axisA.z=0,this.constraintRF.axisA.z=0),r?(this.constraintLB.setMotorMaxForce(this.brakeMotorForce),this.constraintRB.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0),this.constraintLF.enableMotor(),this.constraintRF.enableMotor(),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLF.setMotorSpeed(0),this.constraintRF.setMotorSpeed(0)):(this.constraintLF.disableMotor(),this.constraintRF.disableMotor(),this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce))}dispose(){this.meshes.forEach(t=>t.geometry.dispose())}}const vdt=new O2,wdt=new dl({color:2236962});class qc{constructor(t){Kt(this,"gameWorld");Kt(this,"car");Kt(this,"keyupHandler");Kt(this,"keydownHandler");Kt(this,"arrowHelpers",[]);Kt(this,"sensorData",[]);Kt(this,"chaseMode",!0);Kt(this,"W",!1);Kt(this,"A",!1);Kt(this,"S",!1);Kt(this,"D",!1);Kt(this,"SPACE",!1);Kt(this,"_showSensors",!1);Kt(this,"completion",0);this.gameWorld=t,this.keydownHandler=e=>{switch(e.key){case"w":this.W=!0,e.preventDefault();break;case"a":this.A=!0,e.preventDefault();break;case"s":this.S=!0,e.preventDefault();break;case"d":this.D=!0,e.preventDefault();break;case" ":this.SPACE=!0,e.preventDefault();break}},this.keyupHandler=e=>{switch(e.key){case"w":this.W=!1,e.preventDefault();break;case"a":this.A=!1,e.preventDefault();break;case"s":this.S=!1,e.preventDefault();break;case"d":this.D=!1,e.preventDefault();break;case" ":this.SPACE=!1,e.preventDefault();break}}}update(t){var e;if((e=this.car)==null||e.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.car){const n=this.car.getNetworkInput(this.gameWorld);this.sensorData=n.sensorData,this.sensorData.forEach((l,c)=>{const u=this.arrowHelpers[c];u.setLength(l.distance,.05,.03),u.setDirection(l.direction),u.position.copy(l.origin),u.updateMatrix();const h=document.getElementById("arrow-length-indicator-"+c);h&&(h.style.width=l.distance*100+"%",h.innerText=l.distance.toFixed(2))});const i=document.getElementById("car-rotation-compass");i&&(i.style.transform=`rotate(${Math.atan2(n.sideAmount,n.forwardAmount)}rad)`),this.completion=n.completed;const r=document.getElementById("completion-text");r&&(r.innerText=(this.completion*100).toFixed(1)+"%");const o=document.getElementById("completion-bar");o&&(o.style.width=this.completion*100+"%",o.style.backgroundColor=qc.getCompletionBarColor(this.completion));const a=document.getElementById("velocity-element");a&&(a.innerText=this.car.getForwardVelocity().toFixed(2))}if(this.chaseMode&&this.car){this.gameWorld.controls.target=this.car.getPosition(),this.gameWorld.controls.target.y+=.2;let n=this.car.getForwardDir();n.y=0,n.normalize(),n.multiplyScalar(-.5),n.y=.2,this.gameWorld.camera.position.copy(this.car.getPosition()),this.gameWorld.camera.position.add(n)}}get showSensors(){return this._showSensors}set showSensors(t){this._showSensors=t,this.arrowHelpers.forEach(e=>{e.visible=t})}removeCar(){this.car&&(this.gameWorld.removeGameObject(this.car),this.car.dispose()),delete this.car,this.arrowHelpers.forEach(t=>{this.gameWorld.scene.remove(t),t.dispose()}),this.arrowHelpers=[],this.sensorData=[],this.completion=0}respawnCar(){this.removeCar(),this.car=new Sh(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,vdt,wdt,5,.25,.1),this.car.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(this.car),this.arrowHelpers=this.car.getSensorRays().map(t=>{const e=t.ray.direction;e.normalize();const n=t.ray.origin,i=e.length(),r=16776960,o=new iz(e,n,i,r);return o.visible=this.showSensors,this.gameWorld.scene.add(o),o}),this.sensorData=this.car.getSensorData(this.gameWorld)}activate(){this.W=this.A=this.S=this.D=this.SPACE=!1,this.respawnCar(),document.addEventListener("keydown",this.keydownHandler),document.addEventListener("keyup",this.keyupHandler)}deactivate(){this.removeCar(),document.removeEventListener("keydown",this.keydownHandler),document.removeEventListener("keyup",this.keyupHandler)}static getCompletionBarColor(t){return t>.5?`rgb(${Math.floor((1-t)*510)}, 255, 0)`:`rgb(255, ${Math.floor(t*510)}, 0)`}}var zR={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(s){(function(){var t={}.hasOwnProperty;function e(){for(var n=[],i=0;i<arguments.length;i++){var r=arguments[i];if(!!r){var o=typeof r;if(o==="string"||o==="number")n.push(r);else if(Array.isArray(r)){if(r.length){var a=e.apply(null,r);a&&n.push(a)}}else if(o==="object"){if(r.toString!==Object.prototype.toString&&!r.toString.toString().includes("[native code]")){n.push(r.toString());continue}for(var l in r)t.call(r,l)&&r[l]&&n.push(l)}}}return n.join(" ")}s.exports?(e.default=e,s.exports=e):window.classNames=e})()})(zR);const cm=zR.exports;function _dt(s){let t=s[1],e,n,i=s[1]&&kx(s);return{c(){i&&i.c(),e=Or()},m(r,o){i&&i.m(r,o),Tt(r,e,o),n=!0},p(r,o){r[1]?t?Zn(t,r[1])?(i.d(1),i=kx(r),i.c(),i.m(e.parentNode,e)):i.p(r,o):(i=kx(r),i.c(),i.m(e.parentNode,e)):t&&(i.d(1),i=null),t=r[1]},i(r){n||(be(i),n=!0)},o(r){ke(i),n=!1},d(r){r&&Ct(e),i&&i.d(r)}}}function Sdt(s){let t=s[1],e,n,i=s[1]&&Ax(s);return{c(){i&&i.c(),e=Or()},m(r,o){i&&i.m(r,o),Tt(r,e,o),n=!0},p(r,o){r[1]?t?Zn(t,r[1])?(i.d(1),i=Ax(r),i.c(),i.m(e.parentNode,e)):i.p(r,o):(i=Ax(r),i.c(),be(i),i.m(e.parentNode,e)):t&&(ho(),ke(i,1,1,()=>{i=null}),fo()),t=r[1]},i(r){n||(be(i),n=!0)},o(r){ke(i),n=!1},d(r){r&&Ct(e),i&&i.d(r)}}}function kx(s){let t,e,n,i,r;const o=s[13].default,a=hm(o,s,s[12],null);let l=[s[7],{class:s[6]}],c={};for(let u=0;u<l.length;u+=1)c=Qi(c,l[u]);return{c(){t=Mt(s[1]),a&&a.c(),/-/.test(s[1])?wp(t,c):vp(t,c)},m(u,h){Tt(u,t,h),a&&a.m(t,null),s[23](t),n=!0,i||(r=[t2(e=s[4].call(null,t,s[5])),pe(t,"mouseenter",s[18]),pe(t,"mouseleave",s[19]),pe(t,"focusin",s[20]),pe(t,"focusout",s[21])],i=!0)},p(u,h){a&&a.p&&(!n||h&4096)&&fm(a,o,u,u[12],n?dm(o,u[12],h,null):pm(u[12]),null),c=mm(l,[h&128&&u[7],(!n||h&64)&&{class:u[6]}]),/-/.test(u[1])?wp(t,c):vp(t,c),e&&Cr(e.update)&&h&32&&e.update.call(null,u[5])},i(u){n||(be(a,u),n=!0)},o(u){ke(a,u),n=!1},d(u){u&&Ct(t),a&&a.d(u),s[23](null),i=!1,ni(r)}}}function Ax(s){let t,e,n,i,r,o;const a=s[13].default,l=hm(a,s,s[12],null);let c=[s[7],{class:s[6]}],u={};for(let h=0;h<c.length;h+=1)u=Qi(u,c[h]);return{c(){t=Mt(s[1]),l&&l.c(),/-/.test(s[1])?wp(t,u):vp(t,u)},m(h,d){Tt(h,t,d),l&&l.m(t,null),s[22](t),i=!0,r||(o=[t2(e=s[4].call(null,t,s[5])),pe(t,"mouseenter",s[14]),pe(t,"mouseleave",s[15]),pe(t,"focusin",s[16]),pe(t,"focusout",s[17])],r=!0)},p(h,d){s=h,l&&l.p&&(!i||d&4096)&&fm(l,a,s,s[12],i?dm(a,s[12],d,null):pm(s[12]),null),u=mm(c,[d&128&&s[7],(!i||d&64)&&{class:s[6]}]),/-/.test(s[1])?wp(t,u):vp(t,u),e&&Cr(e.update)&&d&32&&e.update.call(null,s[5])},i(h){i||(be(l,h),eh(()=>{n||(n=w1(t,s[2],s[3],!0)),n.run(1)}),i=!0)},o(h){ke(l,h),n||(n=w1(t,s[2],s[3],!1)),n.run(0),i=!1},d(h){h&&Ct(t),l&&l.d(h),s[22](null),h&&n&&n.end(),r=!1,ni(o)}}}function Cdt(s){let t,e,n,i;const r=[Sdt,_dt],o=[];function a(l,c){return l[2]?0:1}return t=a(s),e=o[t]=r[t](s),{c(){e.c(),n=Or()},m(l,c){o[t].m(l,c),Tt(l,n,c),i=!0},p(l,[c]){let u=t;t=a(l),t===u?o[t].p(l,c):(ho(),ke(o[u],1,1,()=>{o[u]=null}),fo(),e=o[t],e?e.p(l,c):(e=o[t]=r[t](l),e.c()),be(e,1),e.m(n.parentNode,n))},i(l){i||(be(e),i=!0)},o(l){ke(e),i=!1},d(l){o[t].d(l),l&&Ct(n)}}}function Tdt(s,t,e){const n=["tag","color","rounded","border","shadow","transition","params","node","use","options"];let i=Sc(t,n),{$$slots:r={},$$scope:o}=t;y1("background",!0);let{tag:a="div"}=t,{color:l="default"}=t,{rounded:c=!1}=t,{border:u=!1}=t,{shadow:h=!1}=t,{transition:d=void 0}=t,{params:f={}}=t,{node:p=void 0}=t,{use:g=qe}=t,{options:m={}}=t;const x={gray:"bg-gray-100 dark:bg-gray-200 ",red:"bg-red-100 dark:bg-red-200",yellow:"bg-yellow-100 dark:bg-yellow-200 ",green:"bg-green-100 dark:bg-green-200 ",indigo:"bg-indigo-100 dark:bg-indigo-200 ",purple:"bg-purple-100 dark:bg-purple-200 ",pink:"bg-pink-100 dark:bg-pink-200 ",blue:"bg-blue-100 dark:bg-blue-200 ",light:"bg-gray-50 dark:bg-gray-700",dark:"bg-gray-100 dark:bg-gray-700",default:"bg-white dark:bg-gray-800",dropdown:"bg-white dark:bg-gray-700",navbar:"bg-white dark:bg-gray-900",navbarUl:"bg-gray-50 dark:bg-gray-800",form:"bg-gray-50 dark:bg-gray-700",primary:"bg-primary-100 dark:bg-primary-200 ",none:""},b={gray:"text-gray-700 dark:text-gray-800",red:"text-red-700 dark:text-red-800",yellow:"text-yellow-700 dark:text-yellow-800",green:"text-green-700 dark:text-green-800",indigo:"text-indigo-700 dark:text-indigo-800",purple:"text-purple-700 dark:text-purple-800",pink:"text-pink-700 dark:text-pink-800",blue:"text-blue-700 dark:text-blue-800",light:"text-gray-700 dark:text-gray-300",dark:"text-gray-700 dark:text-gray-300",default:"text-gray-500 dark:text-gray-400",dropdown:"text-gray-700 dark:text-gray-200",navbar:"text-gray-700 dark:text-gray-200",navbarUl:"text-gray-700 dark:text-gray-400",form:"text-gray-900 dark:text-white",primary:"text-primary-700 dark:text-primary-800",none:""},v={gray:"border-gray-500 dark:bg-gray-200 ",red:"border-red-500 dark:bg-red-200 ",yellow:"border-yellow-500 dark:bg-tellow-200 ",green:"border-green-500 dark:bg-green-200 ",indigo:"border-indigo-500 dark:bg-indigo-200 ",purple:"border-purple-500 dark:bg-purple-200 ",pink:"border-pink-500 dark:bg-pink-200 ",blue:"border-blue-500 dark:bg-blue-200 ",light:"border-gray-500",dark:"border-gray-500",default:"border-gray-200 dark:border-gray-700",dropdown:"border-gray-100 dark:border-gray-700",navbar:"border-gray-100 dark:border-gray-700",navbarUl:"border-gray-100 dark:border-gray-700",form:"border-gray-300 dark:border-gray-700",primary:"border-primary-500 dark:bg-primary-200 ",none:""};let y;function w(E){ns.call(this,s,E)}function S(E){ns.call(this,s,E)}function C(E){ns.call(this,s,E)}function _(E){ns.call(this,s,E)}function T(E){ns.call(this,s,E)}function I(E){ns.call(this,s,E)}function A(E){ns.call(this,s,E)}function D(E){ns.call(this,s,E)}function k(E){Cc[E?"unshift":"push"](()=>{p=E,e(0,p)})}function M(E){Cc[E?"unshift":"push"](()=>{p=E,e(0,p)})}return s.$$set=E=>{e(27,t=Qi(Qi({},t),_c(E))),e(7,i=Sc(t,n)),"tag"in E&&e(1,a=E.tag),"color"in E&&e(8,l=E.color),"rounded"in E&&e(9,c=E.rounded),"border"in E&&e(10,u=E.border),"shadow"in E&&e(11,h=E.shadow),"transition"in E&&e(2,d=E.transition),"params"in E&&e(3,f=E.params),"node"in E&&e(0,p=E.node),"use"in E&&e(4,g=E.use),"options"in E&&e(5,m=E.options),"$$scope"in E&&e(12,o=E.$$scope)},s.$$.update=()=>{s.$$.dirty&256&&y1("color",l),e(6,y=cm(x[l],b[l],c&&(l==="dropdown"?"rounded":"rounded-lg"),u&&"border",v[l],h&&"shadow-md",t.class))},t=_c(t),[p,a,d,f,g,m,y,i,l,c,u,h,o,r,w,S,C,_,T,I,A,D,k,M]}class Idt extends ii{constructor(t){super(),si(this,t,Tdt,Cdt,Zn,{tag:1,color:8,rounded:9,border:10,shadow:11,transition:2,params:3,node:0,use:4,options:5})}}var Os="top",ki="bottom",Ai="right",zs="left",i1="auto",tf=[Os,ki,Ai,zs],jc="start",Ch="end",Edt="clippingParents",BR="viewport",Du="popper",Mdt="reference",TT=tf.reduce(function(s,t){return s.concat([t+"-"+jc,t+"-"+Ch])},[]),UR=[].concat(tf,[i1]).reduce(function(s,t){return s.concat([t,t+"-"+jc,t+"-"+Ch])},[]),kdt="beforeRead",Adt="read",Ndt="afterRead",Rdt="beforeMain",Ddt="main",$dt="afterMain",Ldt="beforeWrite",Fdt="write",Pdt="afterWrite",Odt=[kdt,Adt,Ndt,Rdt,Ddt,$dt,Ldt,Fdt,Pdt];function Pr(s){return s?(s.nodeName||"").toLowerCase():null}function Fi(s){if(s==null)return window;if(s.toString()!=="[object Window]"){var t=s.ownerDocument;return t&&t.defaultView||window}return s}function ll(s){var t=Fi(s).Element;return s instanceof t||s instanceof Element}function Ti(s){var t=Fi(s).HTMLElement;return s instanceof t||s instanceof HTMLElement}function r1(s){if(typeof ShadowRoot>"u")return!1;var t=Fi(s).ShadowRoot;return s instanceof t||s instanceof ShadowRoot}function zdt(s){var t=s.state;Object.keys(t.elements).forEach(function(e){var n=t.styles[e]||{},i=t.attributes[e]||{},r=t.elements[e];!Ti(r)||!Pr(r)||(Object.assign(r.style,n),Object.keys(i).forEach(function(o){var a=i[o];a===!1?r.removeAttribute(o):r.setAttribute(o,a===!0?"":a)}))})}function Bdt(s){var t=s.state,e={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,e.popper),t.styles=e,t.elements.arrow&&Object.assign(t.elements.arrow.style,e.arrow),function(){Object.keys(t.elements).forEach(function(n){var i=t.elements[n],r=t.attributes[n]||{},o=Object.keys(t.styles.hasOwnProperty(n)?t.styles[n]:e[n]),a=o.reduce(function(l,c){return l[c]="",l},{});!Ti(i)||!Pr(i)||(Object.assign(i.style,a),Object.keys(r).forEach(function(l){i.removeAttribute(l)}))})}}const Udt={name:"applyStyles",enabled:!0,phase:"write",fn:zdt,effect:Bdt,requires:["computeStyles"]};function Ar(s){return s.split("-")[0]}var za=Math.max,um=Math.min,Xc=Math.round;function Ub(){var s=navigator.userAgentData;return s!=null&&s.brands?s.brands.map(function(t){return t.brand+"/"+t.version}).join(" "):navigator.userAgent}function VR(){return!/^((?!chrome|android).)*safari/i.test(Ub())}function Kc(s,t,e){t===void 0&&(t=!1),e===void 0&&(e=!1);var n=s.getBoundingClientRect(),i=1,r=1;t&&Ti(s)&&(i=s.offsetWidth>0&&Xc(n.width)/s.offsetWidth||1,r=s.offsetHeight>0&&Xc(n.height)/s.offsetHeight||1);var o=ll(s)?Fi(s):window,a=o.visualViewport,l=!VR()&&e,c=(n.left+(l&&a?a.offsetLeft:0))/i,u=(n.top+(l&&a?a.offsetTop:0))/r,h=n.width/i,d=n.height/r;return{width:h,height:d,top:u,right:c+h,bottom:u+d,left:c,x:c,y:u}}function o1(s){var t=Kc(s),e=s.offsetWidth,n=s.offsetHeight;return Math.abs(t.width-e)<=1&&(e=t.width),Math.abs(t.height-n)<=1&&(n=t.height),{x:s.offsetLeft,y:s.offsetTop,width:e,height:n}}function WR(s,t){var e=t.getRootNode&&t.getRootNode();if(s.contains(t))return!0;if(e&&r1(e)){var n=t;do{if(n&&s.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function uo(s){return Fi(s).getComputedStyle(s)}function Vdt(s){return["table","td","th"].indexOf(Pr(s))>=0}function oa(s){return((ll(s)?s.ownerDocument:s.document)||window.document).documentElement}function a0(s){return Pr(s)==="html"?s:s.assignedSlot||s.parentNode||(r1(s)?s.host:null)||oa(s)}function IT(s){return!Ti(s)||uo(s).position==="fixed"?null:s.offsetParent}function Wdt(s){var t=/firefox/i.test(Ub()),e=/Trident/i.test(Ub());if(e&&Ti(s)){var n=uo(s);if(n.position==="fixed")return null}var i=a0(s);for(r1(i)&&(i=i.host);Ti(i)&&["html","body"].indexOf(Pr(i))<0;){var r=uo(i);if(r.transform!=="none"||r.perspective!=="none"||r.contain==="paint"||["transform","perspective"].indexOf(r.willChange)!==-1||t&&r.willChange==="filter"||t&&r.filter&&r.filter!=="none")return i;i=i.parentNode}return null}function ef(s){for(var t=Fi(s),e=IT(s);e&&Vdt(e)&&uo(e).position==="static";)e=IT(e);return e&&(Pr(e)==="html"||Pr(e)==="body"&&uo(e).position==="static")?t:e||Wdt(s)||t}function a1(s){return["top","bottom"].indexOf(s)>=0?"x":"y"}function Ju(s,t,e){return za(s,um(t,e))}function Gdt(s,t,e){var n=Ju(s,t,e);return n>e?e:n}function GR(){return{top:0,right:0,bottom:0,left:0}}function HR(s){return Object.assign({},GR(),s)}function qR(s,t){return t.reduce(function(e,n){return e[n]=s,e},{})}var Hdt=function(t,e){return t=typeof t=="function"?t(Object.assign({},e.rects,{placement:e.placement})):t,HR(typeof t!="number"?t:qR(t,tf))};function qdt(s){var t,e=s.state,n=s.name,i=s.options,r=e.elements.arrow,o=e.modifiersData.popperOffsets,a=Ar(e.placement),l=a1(a),c=[zs,Ai].indexOf(a)>=0,u=c?"height":"width";if(!(!r||!o)){var h=Hdt(i.padding,e),d=o1(r),f=l==="y"?Os:zs,p=l==="y"?ki:Ai,g=e.rects.reference[u]+e.rects.reference[l]-o[l]-e.rects.popper[u],m=o[l]-e.rects.reference[l],x=ef(r),b=x?l==="y"?x.clientHeight||0:x.clientWidth||0:0,v=g/2-m/2,y=h[f],w=b-d[u]-h[p],S=b/2-d[u]/2+v,C=Ju(y,S,w),_=l;e.modifiersData[n]=(t={},t[_]=C,t.centerOffset=C-S,t)}}function jdt(s){var t=s.state,e=s.options,n=e.element,i=n===void 0?"[data-popper-arrow]":n;i!=null&&(typeof i=="string"&&(i=t.elements.popper.querySelector(i),!i)||!WR(t.elements.popper,i)||(t.elements.arrow=i))}const Xdt={name:"arrow",enabled:!0,phase:"main",fn:qdt,effect:jdt,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Yc(s){return s.split("-")[1]}var Kdt={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Ydt(s){var t=s.x,e=s.y,n=window,i=n.devicePixelRatio||1;return{x:Xc(t*i)/i||0,y:Xc(e*i)/i||0}}function ET(s){var t,e=s.popper,n=s.popperRect,i=s.placement,r=s.variation,o=s.offsets,a=s.position,l=s.gpuAcceleration,c=s.adaptive,u=s.roundOffsets,h=s.isFixed,d=o.x,f=d===void 0?0:d,p=o.y,g=p===void 0?0:p,m=typeof u=="function"?u({x:f,y:g}):{x:f,y:g};f=m.x,g=m.y;var x=o.hasOwnProperty("x"),b=o.hasOwnProperty("y"),v=zs,y=Os,w=window;if(c){var S=ef(e),C="clientHeight",_="clientWidth";if(S===Fi(e)&&(S=oa(e),uo(S).position!=="static"&&a==="absolute"&&(C="scrollHeight",_="scrollWidth")),S=S,i===Os||(i===zs||i===Ai)&&r===Ch){y=ki;var T=h&&S===w&&w.visualViewport?w.visualViewport.height:S[C];g-=T-n.height,g*=l?1:-1}if(i===zs||(i===Os||i===ki)&&r===Ch){v=Ai;var I=h&&S===w&&w.visualViewport?w.visualViewport.width:S[_];f-=I-n.width,f*=l?1:-1}}var A=Object.assign({position:a},c&&Kdt),D=u===!0?Ydt({x:f,y:g}):{x:f,y:g};if(f=D.x,g=D.y,l){var k;return Object.assign({},A,(k={},k[y]=b?"0":"",k[v]=x?"0":"",k.transform=(w.devicePixelRatio||1)<=1?"translate("+f+"px, "+g+"px)":"translate3d("+f+"px, "+g+"px, 0)",k))}return Object.assign({},A,(t={},t[y]=b?g+"px":"",t[v]=x?f+"px":"",t.transform="",t))}function Zdt(s){var t=s.state,e=s.options,n=e.gpuAcceleration,i=n===void 0?!0:n,r=e.adaptive,o=r===void 0?!0:r,a=e.roundOffsets,l=a===void 0?!0:a,c={placement:Ar(t.placement),variation:Yc(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:i,isFixed:t.options.strategy==="fixed"};t.modifiersData.popperOffsets!=null&&(t.styles.popper=Object.assign({},t.styles.popper,ET(Object.assign({},c,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:o,roundOffsets:l})))),t.modifiersData.arrow!=null&&(t.styles.arrow=Object.assign({},t.styles.arrow,ET(Object.assign({},c,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})}const Jdt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Zdt,data:{}};var op={passive:!0};function Qdt(s){var t=s.state,e=s.instance,n=s.options,i=n.scroll,r=i===void 0?!0:i,o=n.resize,a=o===void 0?!0:o,l=Fi(t.elements.popper),c=[].concat(t.scrollParents.reference,t.scrollParents.popper);return r&&c.forEach(function(u){u.addEventListener("scroll",e.update,op)}),a&&l.addEventListener("resize",e.update,op),function(){r&&c.forEach(function(u){u.removeEventListener("scroll",e.update,op)}),a&&l.removeEventListener("resize",e.update,op)}}const tft={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:Qdt,data:{}};var eft={left:"right",right:"left",bottom:"top",top:"bottom"};function bp(s){return s.replace(/left|right|bottom|top/g,function(t){return eft[t]})}var nft={start:"end",end:"start"};function MT(s){return s.replace(/start|end/g,function(t){return nft[t]})}function l1(s){var t=Fi(s),e=t.pageXOffset,n=t.pageYOffset;return{scrollLeft:e,scrollTop:n}}function c1(s){return Kc(oa(s)).left+l1(s).scrollLeft}function sft(s,t){var e=Fi(s),n=oa(s),i=e.visualViewport,r=n.clientWidth,o=n.clientHeight,a=0,l=0;if(i){r=i.width,o=i.height;var c=VR();(c||!c&&t==="fixed")&&(a=i.offsetLeft,l=i.offsetTop)}return{width:r,height:o,x:a+c1(s),y:l}}function ift(s){var t,e=oa(s),n=l1(s),i=(t=s.ownerDocument)==null?void 0:t.body,r=za(e.scrollWidth,e.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),o=za(e.scrollHeight,e.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),a=-n.scrollLeft+c1(s),l=-n.scrollTop;return uo(i||e).direction==="rtl"&&(a+=za(e.clientWidth,i?i.clientWidth:0)-r),{width:r,height:o,x:a,y:l}}function u1(s){var t=uo(s),e=t.overflow,n=t.overflowX,i=t.overflowY;return/auto|scroll|overlay|hidden/.test(e+i+n)}function jR(s){return["html","body","#document"].indexOf(Pr(s))>=0?s.ownerDocument.body:Ti(s)&&u1(s)?s:jR(a0(s))}function Qu(s,t){var e;t===void 0&&(t=[]);var n=jR(s),i=n===((e=s.ownerDocument)==null?void 0:e.body),r=Fi(n),o=i?[r].concat(r.visualViewport||[],u1(n)?n:[]):n,a=t.concat(o);return i?a:a.concat(Qu(a0(o)))}function Vb(s){return Object.assign({},s,{left:s.x,top:s.y,right:s.x+s.width,bottom:s.y+s.height})}function rft(s,t){var e=Kc(s,!1,t==="fixed");return e.top=e.top+s.clientTop,e.left=e.left+s.clientLeft,e.bottom=e.top+s.clientHeight,e.right=e.left+s.clientWidth,e.width=s.clientWidth,e.height=s.clientHeight,e.x=e.left,e.y=e.top,e}function kT(s,t,e){return t===BR?Vb(sft(s,e)):ll(t)?rft(t,e):Vb(ift(oa(s)))}function oft(s){var t=Qu(a0(s)),e=["absolute","fixed"].indexOf(uo(s).position)>=0,n=e&&Ti(s)?ef(s):s;return ll(n)?t.filter(function(i){return ll(i)&&WR(i,n)&&Pr(i)!=="body"}):[]}function aft(s,t,e,n){var i=t==="clippingParents"?oft(s):[].concat(t),r=[].concat(i,[e]),o=r[0],a=r.reduce(function(l,c){var u=kT(s,c,n);return l.top=za(u.top,l.top),l.right=um(u.right,l.right),l.bottom=um(u.bottom,l.bottom),l.left=za(u.left,l.left),l},kT(s,o,n));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function XR(s){var t=s.reference,e=s.element,n=s.placement,i=n?Ar(n):null,r=n?Yc(n):null,o=t.x+t.width/2-e.width/2,a=t.y+t.height/2-e.height/2,l;switch(i){case Os:l={x:o,y:t.y-e.height};break;case ki:l={x:o,y:t.y+t.height};break;case Ai:l={x:t.x+t.width,y:a};break;case zs:l={x:t.x-e.width,y:a};break;default:l={x:t.x,y:t.y}}var c=i?a1(i):null;if(c!=null){var u=c==="y"?"height":"width";switch(r){case jc:l[c]=l[c]-(t[u]/2-e[u]/2);break;case Ch:l[c]=l[c]+(t[u]/2-e[u]/2);break}}return l}function Th(s,t){t===void 0&&(t={});var e=t,n=e.placement,i=n===void 0?s.placement:n,r=e.strategy,o=r===void 0?s.strategy:r,a=e.boundary,l=a===void 0?Edt:a,c=e.rootBoundary,u=c===void 0?BR:c,h=e.elementContext,d=h===void 0?Du:h,f=e.altBoundary,p=f===void 0?!1:f,g=e.padding,m=g===void 0?0:g,x=HR(typeof m!="number"?m:qR(m,tf)),b=d===Du?Mdt:Du,v=s.rects.popper,y=s.elements[p?b:d],w=aft(ll(y)?y:y.contextElement||oa(s.elements.popper),l,u,o),S=Kc(s.elements.reference),C=XR({reference:S,element:v,strategy:"absolute",placement:i}),_=Vb(Object.assign({},v,C)),T=d===Du?_:S,I={top:w.top-T.top+x.top,bottom:T.bottom-w.bottom+x.bottom,left:w.left-T.left+x.left,right:T.right-w.right+x.right},A=s.modifiersData.offset;if(d===Du&&A){var D=A[i];Object.keys(I).forEach(function(k){var M=[Ai,ki].indexOf(k)>=0?1:-1,E=[Os,ki].indexOf(k)>=0?"y":"x";I[k]+=D[E]*M})}return I}function lft(s,t){t===void 0&&(t={});var e=t,n=e.placement,i=e.boundary,r=e.rootBoundary,o=e.padding,a=e.flipVariations,l=e.allowedAutoPlacements,c=l===void 0?UR:l,u=Yc(n),h=u?a?TT:TT.filter(function(p){return Yc(p)===u}):tf,d=h.filter(function(p){return c.indexOf(p)>=0});d.length===0&&(d=h);var f=d.reduce(function(p,g){return p[g]=Th(s,{placement:g,boundary:i,rootBoundary:r,padding:o})[Ar(g)],p},{});return Object.keys(f).sort(function(p,g){return f[p]-f[g]})}function cft(s){if(Ar(s)===i1)return[];var t=bp(s);return[MT(s),t,MT(t)]}function uft(s){var t=s.state,e=s.options,n=s.name;if(!t.modifiersData[n]._skip){for(var i=e.mainAxis,r=i===void 0?!0:i,o=e.altAxis,a=o===void 0?!0:o,l=e.fallbackPlacements,c=e.padding,u=e.boundary,h=e.rootBoundary,d=e.altBoundary,f=e.flipVariations,p=f===void 0?!0:f,g=e.allowedAutoPlacements,m=t.options.placement,x=Ar(m),b=x===m,v=l||(b||!p?[bp(m)]:cft(m)),y=[m].concat(v).reduce(function(it,lt){return it.concat(Ar(lt)===i1?lft(t,{placement:lt,boundary:u,rootBoundary:h,padding:c,flipVariations:p,allowedAutoPlacements:g}):lt)},[]),w=t.rects.reference,S=t.rects.popper,C=new Map,_=!0,T=y[0],I=0;I<y.length;I++){var A=y[I],D=Ar(A),k=Yc(A)===jc,M=[Os,ki].indexOf(D)>=0,E=M?"width":"height",N=Th(t,{placement:A,boundary:u,rootBoundary:h,altBoundary:d,padding:c}),O=M?k?Ai:zs:k?ki:Os;w[E]>S[E]&&(O=bp(O));var L=bp(O),$=[];if(r&&$.push(N[D]<=0),a&&$.push(N[O]<=0,N[L]<=0),$.every(function(it){return it})){T=A,_=!1;break}C.set(A,$)}if(_)for(var W=p?3:1,q=function(lt){var Y=y.find(function(yt){var vt=C.get(yt);if(vt)return vt.slice(0,lt).every(function(xt){return xt})});if(Y)return T=Y,"break"},H=W;H>0;H--){var X=q(H);if(X==="break")break}t.placement!==T&&(t.modifiersData[n]._skip=!0,t.placement=T,t.reset=!0)}}const hft={name:"flip",enabled:!0,phase:"main",fn:uft,requiresIfExists:["offset"],data:{_skip:!1}};function AT(s,t,e){return e===void 0&&(e={x:0,y:0}),{top:s.top-t.height-e.y,right:s.right-t.width+e.x,bottom:s.bottom-t.height+e.y,left:s.left-t.width-e.x}}function NT(s){return[Os,Ai,ki,zs].some(function(t){return s[t]>=0})}function dft(s){var t=s.state,e=s.name,n=t.rects.reference,i=t.rects.popper,r=t.modifiersData.preventOverflow,o=Th(t,{elementContext:"reference"}),a=Th(t,{altBoundary:!0}),l=AT(o,n),c=AT(a,i,r),u=NT(l),h=NT(c);t.modifiersData[e]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:h},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":h})}const fft={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:dft};function pft(s,t,e){var n=Ar(s),i=[zs,Os].indexOf(n)>=0?-1:1,r=typeof e=="function"?e(Object.assign({},t,{placement:s})):e,o=r[0],a=r[1];return o=o||0,a=(a||0)*i,[zs,Ai].indexOf(n)>=0?{x:a,y:o}:{x:o,y:a}}function mft(s){var t=s.state,e=s.options,n=s.name,i=e.offset,r=i===void 0?[0,0]:i,o=UR.reduce(function(u,h){return u[h]=pft(h,t.rects,r),u},{}),a=o[t.placement],l=a.x,c=a.y;t.modifiersData.popperOffsets!=null&&(t.modifiersData.popperOffsets.x+=l,t.modifiersData.popperOffsets.y+=c),t.modifiersData[n]=o}const gft={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:mft};function xft(s){var t=s.state,e=s.name;t.modifiersData[e]=XR({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})}const bft={name:"popperOffsets",enabled:!0,phase:"read",fn:xft,data:{}};function yft(s){return s==="x"?"y":"x"}function vft(s){var t=s.state,e=s.options,n=s.name,i=e.mainAxis,r=i===void 0?!0:i,o=e.altAxis,a=o===void 0?!1:o,l=e.boundary,c=e.rootBoundary,u=e.altBoundary,h=e.padding,d=e.tether,f=d===void 0?!0:d,p=e.tetherOffset,g=p===void 0?0:p,m=Th(t,{boundary:l,rootBoundary:c,padding:h,altBoundary:u}),x=Ar(t.placement),b=Yc(t.placement),v=!b,y=a1(x),w=yft(y),S=t.modifiersData.popperOffsets,C=t.rects.reference,_=t.rects.popper,T=typeof g=="function"?g(Object.assign({},t.rects,{placement:t.placement})):g,I=typeof T=="number"?{mainAxis:T,altAxis:T}:Object.assign({mainAxis:0,altAxis:0},T),A=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,D={x:0,y:0};if(!!S){if(r){var k,M=y==="y"?Os:zs,E=y==="y"?ki:Ai,N=y==="y"?"height":"width",O=S[y],L=O+m[M],$=O-m[E],W=f?-_[N]/2:0,q=b===jc?C[N]:_[N],H=b===jc?-_[N]:-C[N],X=t.elements.arrow,it=f&&X?o1(X):{width:0,height:0},lt=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:GR(),Y=lt[M],yt=lt[E],vt=Ju(0,C[N],it[N]),xt=v?C[N]/2-W-vt-Y-I.mainAxis:q-vt-Y-I.mainAxis,bt=v?-C[N]/2+W+vt+yt+I.mainAxis:H+vt+yt+I.mainAxis,Dt=t.elements.arrow&&ef(t.elements.arrow),ct=Dt?y==="y"?Dt.clientTop||0:Dt.clientLeft||0:0,ht=(k=A==null?void 0:A[y])!=null?k:0,_t=O+xt-ht-ct,Et=O+bt-ht,gt=Ju(f?um(L,_t):L,O,f?za($,Et):$);S[y]=gt,D[y]=gt-O}if(a){var Ot,Pt=y==="x"?Os:zs,at=y==="x"?ki:Ai,Lt=S[w],re=w==="y"?"height":"width",B=Lt+m[Pt],F=Lt-m[at],rt=[Os,zs].indexOf(x)!==-1,kt=(Ot=A==null?void 0:A[w])!=null?Ot:0,Rt=rt?B:Lt-C[re]-_[re]-kt+I.altAxis,zt=rt?Lt+C[re]+_[re]-kt-I.altAxis:F,te=f&&rt?Gdt(Rt,Lt,zt):Ju(f?Rt:B,Lt,f?zt:F);S[w]=te,D[w]=te-Lt}t.modifiersData[n]=D}}const wft={name:"preventOverflow",enabled:!0,phase:"main",fn:vft,requiresIfExists:["offset"]};function _ft(s){return{scrollLeft:s.scrollLeft,scrollTop:s.scrollTop}}function Sft(s){return s===Fi(s)||!Ti(s)?l1(s):_ft(s)}function Cft(s){var t=s.getBoundingClientRect(),e=Xc(t.width)/s.offsetWidth||1,n=Xc(t.height)/s.offsetHeight||1;return e!==1||n!==1}function Tft(s,t,e){e===void 0&&(e=!1);var n=Ti(t),i=Ti(t)&&Cft(t),r=oa(t),o=Kc(s,i,e),a={scrollLeft:0,scrollTop:0},l={x:0,y:0};return(n||!n&&!e)&&((Pr(t)!=="body"||u1(r))&&(a=Sft(t)),Ti(t)?(l=Kc(t,!0),l.x+=t.clientLeft,l.y+=t.clientTop):r&&(l.x=c1(r))),{x:o.left+a.scrollLeft-l.x,y:o.top+a.scrollTop-l.y,width:o.width,height:o.height}}function Ift(s){var t=new Map,e=new Set,n=[];s.forEach(function(r){t.set(r.name,r)});function i(r){e.add(r.name);var o=[].concat(r.requires||[],r.requiresIfExists||[]);o.forEach(function(a){if(!e.has(a)){var l=t.get(a);l&&i(l)}}),n.push(r)}return s.forEach(function(r){e.has(r.name)||i(r)}),n}function Eft(s){var t=Ift(s);return Odt.reduce(function(e,n){return e.concat(t.filter(function(i){return i.phase===n}))},[])}function Mft(s){var t;return function(){return t||(t=new Promise(function(e){Promise.resolve().then(function(){t=void 0,e(s())})})),t}}function kft(s){var t=s.reduce(function(e,n){var i=e[n.name];return e[n.name]=i?Object.assign({},i,n,{options:Object.assign({},i.options,n.options),data:Object.assign({},i.data,n.data)}):n,e},{});return Object.keys(t).map(function(e){return t[e]})}var RT={placement:"bottom",modifiers:[],strategy:"absolute"};function DT(){for(var s=arguments.length,t=new Array(s),e=0;e<s;e++)t[e]=arguments[e];return!t.some(function(n){return!(n&&typeof n.getBoundingClientRect=="function")})}function Aft(s){s===void 0&&(s={});var t=s,e=t.defaultModifiers,n=e===void 0?[]:e,i=t.defaultOptions,r=i===void 0?RT:i;return function(a,l,c){c===void 0&&(c=r);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},RT,r),modifiersData:{},elements:{reference:a,popper:l},attributes:{},styles:{}},h=[],d=!1,f={state:u,setOptions:function(x){var b=typeof x=="function"?x(u.options):x;g(),u.options=Object.assign({},r,u.options,b),u.scrollParents={reference:ll(a)?Qu(a):a.contextElement?Qu(a.contextElement):[],popper:Qu(l)};var v=Eft(kft([].concat(n,u.options.modifiers)));return u.orderedModifiers=v.filter(function(y){return y.enabled}),p(),f.update()},forceUpdate:function(){if(!d){var x=u.elements,b=x.reference,v=x.popper;if(!!DT(b,v)){u.rects={reference:Tft(b,ef(v),u.options.strategy==="fixed"),popper:o1(v)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(I){return u.modifiersData[I.name]=Object.assign({},I.data)});for(var y=0;y<u.orderedModifiers.length;y++){if(u.reset===!0){u.reset=!1,y=-1;continue}var w=u.orderedModifiers[y],S=w.fn,C=w.options,_=C===void 0?{}:C,T=w.name;typeof S=="function"&&(u=S({state:u,options:_,name:T,instance:f})||u)}}}},update:Mft(function(){return new Promise(function(m){f.forceUpdate(),m(u)})}),destroy:function(){g(),d=!0}};if(!DT(a,l))return f;f.setOptions(c).then(function(m){!d&&c.onFirstUpdate&&c.onFirstUpdate(m)});function p(){u.orderedModifiers.forEach(function(m){var x=m.name,b=m.options,v=b===void 0?{}:b,y=m.effect;if(typeof y=="function"){var w=y({state:u,name:x,instance:f,options:v}),S=function(){};h.push(w||S)}})}function g(){h.forEach(function(m){return m()}),h=[]}return f}}var Nft=[tft,bft,Jdt,Udt,gft,hft,wft,Xdt,fft],Rft=Aft({defaultModifiers:Nft});function Dft(){const s=Gb();return(t,e,n)=>{const i=s.$$.callbacks[t];if(i){const r=new CustomEvent(t,{detail:n});e.dispatchEvent(r),i.slice().forEach(o=>{o.call(s,r)})}}}function $T(s){let t;return{c(){t=Mt("div")},m(e,n){Tt(e,t,n),s[19](t)},p:qe,d(e){e&&Ct(t),s[19](null)}}}function LT(s){let t,e;const n=[{use:s[8]},{options:s[3]},{role:"tooltip"},{tabIndex:s[1]?-1:void 0},s[9],{class:cm("z-10 outline-none",s[10].class)}];let i={$$slots:{default:[$ft]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Qi(i,n[r]);return t=new Idt({props:i}),t.$on("focusin",function(){Cr(Mo(s[1],s[6]))&&Mo(s[1],s[6]).apply(this,arguments)}),t.$on("focusout",function(){Cr(Mo(s[1],s[7]))&&Mo(s[1],s[7]).apply(this,arguments)}),t.$on("mouseenter",function(){Cr(Mo(s[1]&&!s[4],s[6]))&&Mo(s[1]&&!s[4],s[6]).apply(this,arguments)}),t.$on("mouseleave",function(){Cr(Mo(s[1]&&!s[4],s[7]))&&Mo(s[1]&&!s[4],s[7]).apply(this,arguments)}),{c(){ms(t.$$.fragment)},m(r,o){is(t,r,o),e=!0},p(r,o){s=r;const a=o&1802?mm(n,[o&256&&{use:s[8]},o&8&&{options:s[3]},n[2],o&2&&{tabIndex:s[1]?-1:void 0},o&512&&a2(s[9]),o&1024&&{class:cm("z-10 outline-none",s[10].class)}]):{};o&1048580&&(a.$$scope={dirty:o,ctx:s}),t.$set(a)},i(r){e||(be(t.$$.fragment,r),e=!0)},o(r){ke(t.$$.fragment,r),e=!1},d(r){rs(t,r)}}}function FT(s){let t;return{c(){t=Mt("div"),Q(t,"data-popper-arrow",""),Q(t,"class","tooltip-arrow border dark:border-gray-100")},m(e,n){Tt(e,t,n)},d(e){e&&Ct(t)}}}function $ft(s){let t,e,n;const i=s[18].default,r=hm(i,s,s[20],null);let o=s[2]&&FT();return{c(){r&&r.c(),t=qt(),o&&o.c(),e=Or()},m(a,l){r&&r.m(a,l),Tt(a,t,l),o&&o.m(a,l),Tt(a,e,l),n=!0},p(a,l){r&&r.p&&(!n||l&1048576)&&fm(r,i,a,a[20],n?dm(i,a[20],l,null):pm(a[20]),null),a[2]?o||(o=FT(),o.c(),o.m(e.parentNode,e)):o&&(o.d(1),o=null)},i(a){n||(be(r,a),n=!0)},o(a){ke(r,a),n=!1},d(a){r&&r.d(a),a&&Ct(t),o&&o.d(a),a&&Ct(e)}}}function Lft(s){let t,e,n,i=!s[3]&&$T(s),r=s[0]&&s[3]&&LT(s);return{c(){i&&i.c(),t=qt(),r&&r.c(),e=Or()},m(o,a){i&&i.m(o,a),Tt(o,t,a),r&&r.m(o,a),Tt(o,e,a),n=!0},p(o,[a]){o[3]?i&&(i.d(1),i=null):i?i.p(o,a):(i=$T(o),i.c(),i.m(t.parentNode,t)),o[0]&&o[3]?r?(r.p(o,a),a&9&&be(r,1)):(r=LT(o),r.c(),be(r,1),r.m(e.parentNode,e)):r&&(ho(),ke(r,1,1,()=>{r=null}),fo())},i(o){n||(be(r),n=!0)},o(o){ke(r),n=!1},d(o){i&&i.d(o),o&&Ct(t),r&&r.d(o),o&&Ct(e)}}}function Mo(s,t){return s&&t}function Fft(s,t,e){const n=["activeContent","arrow","offset","placement","trigger","triggeredBy","strategy","open","yOnly"];let i=Sc(t,n),{$$slots:r={},$$scope:o}=t,{activeContent:a=!1}=t,{arrow:l=!0}=t,{offset:c=8}=t,{placement:u="top"}=t,{trigger:h="hover"}=t,{triggeredBy:d=void 0}=t,{strategy:f="absolute"}=t,{open:p=!1}=t,{yOnly:g=!1}=t;const m=Dft();let x,b,v,y=[],w,S=!1;const C=()=>(S=!0,setTimeout(()=>S=!1,250)),_=M=>{b===void 0&&console.error("trigger undefined"),y.includes(M.target)&&b!==M.target&&(e(3,b=M.target),C()),x&&M.type==="focusin"&&!p&&C(),e(0,p=x&&M.type==="click"&&!S?!p:!0)},T=M=>M.matches&&M.matches(":hover"),I=M=>M.contains&&M.contains(document.activeElement),A=M=>{a?setTimeout(()=>{var N;const E=Object.values((N=w==null?void 0:w.state.elements)!=null?N:{});M.type==="mouseleave"&&E.some(T)||M.type==="focusout"&&E.some(I)||e(0,p=!1)},100):e(0,p=!1)};function D(M,E){return e(17,w=Rft(E,M,{placement:u,strategy:f,modifiers:[{name:"offset",options:{offset:({reference:N,popper:O})=>[g?O.width/2-N.width/2-N.x:0,c]}},{name:"eventListeners",enabled:p},{name:"flip",enabled:!1}]})),{update(N){e(17,w.state.elements.reference=N,w),w.update()},destroy(){w.destroy()}}}r2(()=>{const M=[["focusin",_,!0],["focusout",A,!0],["click",_,x],["mouseenter",_,!x],["mouseleave",A,!x]];return d?y=[...document.querySelectorAll(d)]:y=v.previousElementSibling?[v.previousElementSibling]:[],y.length||console.error("No triggers found."),y.forEach(E=>{E.tabIndex<0&&(E.tabIndex=0);for(const[N,O,L]of M)L&&E.addEventListener(N,O)}),e(3,b=y[0]),()=>{y.forEach(E=>{if(E)for(const[N,O]of M)E.removeEventListener(N,O)})}});function k(M){Cc[M?"unshift":"push"](()=>{v=M,e(5,v)})}return s.$$set=M=>{e(10,t=Qi(Qi({},t),_c(M))),e(9,i=Sc(t,n)),"activeContent"in M&&e(1,a=M.activeContent),"arrow"in M&&e(2,l=M.arrow),"offset"in M&&e(11,c=M.offset),"placement"in M&&e(12,u=M.placement),"trigger"in M&&e(13,h=M.trigger),"triggeredBy"in M&&e(14,d=M.triggeredBy),"strategy"in M&&e(15,f=M.strategy),"open"in M&&e(0,p=M.open),"yOnly"in M&&e(16,g=M.yOnly),"$$scope"in M&&e(20,o=M.$$scope)},s.$$.update=()=>{s.$$.dirty&8192&&e(4,x=h==="click"),s.$$.dirty&9&&m("show",b,p),s.$$.dirty&135168&&w&&w.setOptions({placement:u})},t=_c(t),[p,a,l,b,x,v,_,A,D,i,t,c,u,h,d,f,g,w,r,k,o]}class Pft extends ii{constructor(t){super(),si(this,t,Fft,Lft,Zn,{activeContent:1,arrow:2,offset:11,placement:12,trigger:13,triggeredBy:14,strategy:15,open:0,yOnly:16})}}function Oft(s){let t;const e=s[4].default,n=hm(e,s,s[6],null);return{c(){n&&n.c()},m(i,r){n&&n.m(i,r),t=!0},p(i,r){n&&n.p&&(!t||r&64)&&fm(n,e,i,i[6],t?dm(e,i[6],r,null):pm(i[6]),null)},i(i){t||(be(n,i),t=!0)},o(i){ke(n,i),t=!1},d(i){n&&n.d(i)}}}function zft(s){let t,e;const n=[{"data-tooltip":!0},{rounded:!0},{border:!0},{shadow:!0},s[1],{class:s[0]}];let i={$$slots:{default:[Oft]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Qi(i,n[r]);return t=new Pft({props:i}),t.$on("show",s[5]),{c(){ms(t.$$.fragment)},m(r,o){is(t,r,o),e=!0},p(r,[o]){const a=o&3?mm(n,[n[0],n[1],n[2],n[3],o&2&&a2(r[1]),o&1&&{class:r[0]}]):{};o&64&&(a.$$scope={dirty:o,ctx:r}),t.$set(a)},i(r){e||(be(t.$$.fragment,r),e=!0)},o(r){ke(t.$$.fragment,r),e=!1},d(r){rs(t,r)}}}function Bft(s,t,e){const n=["style","defaultClass"];let i=Sc(t,n),{$$slots:r={},$$scope:o}=t,{style:a="auto"}=t,{defaultClass:l="py-2 px-3 text-sm font-medium"}=t;const c={dark:"border-gray-800 bg-gray-900 text-white dark:bg-gray-700 dark:border-gray-600",light:"border-gray-200 bg-white text-gray-900",auto:"border-gray-200 bg-white text-gray-900 dark:bg-gray-700 dark:text-white dark:border-gray-600",custom:""};let u;function h(d){ns.call(this,s,d)}return s.$$set=d=>{e(8,t=Qi(Qi({},t),_c(d))),e(1,i=Sc(t,n)),"style"in d&&e(2,a=d.style),"defaultClass"in d&&e(3,l=d.defaultClass),"$$scope"in d&&e(6,o=d.$$scope)},s.$$.update=()=>{i.color?e(2,a="custom"):e(1,i.color="none",i),e(0,u=cm("tooltip",l,c[a],t.class))},t=_c(t),[u,i,a,l,r,h,o]}class l0 extends ii{constructor(t){super(),si(this,t,Bft,zft,Zn,{style:2,defaultClass:3})}}function PT(s,t,e){const n=s.slice();return n[1]=t[e],n[3]=e,n}function OT(s){let t,e,n,i,r=(s[0].completion*100).toFixed(1)+"",o,a,l,c,u,h,d,f,p,g,m,x,b,v,y=s[0].sensorData.length+"",w,S,C,_,T,I,A,D;p=new l0({props:{placement:"left",$$slots:{default:[Uft]},$$scope:{ctx:s}}});let k=s[0].sensorData,M=[];for(let E=0;E<k.length;E+=1)M[E]=zT(PT(s,k,E));return{c(){t=Mt("div"),e=Mt("span"),e.textContent="Track completed",n=qt(),i=Mt("span"),o=he(r),a=he("%"),l=qt(),c=Mt("div"),u=Mt("div"),h=qt(),d=Mt("div"),d.innerHTML='<div class="block mx-auto w-1 h-full rounded-full border-0 bg-gray-500"><div class="m-0 w-full aspect-square border-0 bg-gray-200 rounded-full"></div></div>',f=qt(),ms(p.$$.fragment),g=qt(),m=Mt("div"),x=Mt("span"),x.textContent="Sensors",b=qt(),v=Mt("span"),w=he(y),S=he(" sensors"),C=qt();for(let E=0;E<M.length;E+=1)M[E].c();_=qt(),T=Mt("div"),T.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Velocity: <span id="velocity-element"></span></span>',I=qt(),A=Mt("hr"),Q(e,"class","text-base font-medium text-blue-700 dark:text-white"),Q(i,"id","completion-text"),Q(i,"class","text-xs font-medium text-blue-700 dark:text-white"),Q(t,"class","flex justify-between mb-1"),Q(u,"id","completion-bar"),Q(u,"class","h-2.5 rounded-full transition-[width]"),Ds(u,"width",s[0].completion*100+"%"),Ds(u,"background-color",qc.getCompletionBarColor(s[0].completion)),Q(c,"class","w-full bg-gray-700 rounded-full h-2.5 mb-3"),Q(d,"class","mx-auto w-10 aspect-square rounded-full overflow-hidden border-2 dark:border-gray-700"),Ds(d,"transform","rotate(0rad)"),Q(d,"id","car-rotation-compass"),Q(x,"class","text-base font-medium text-blue-700 dark:text-white"),Q(v,"class","text-xs font-medium my-auto text-blue-700 dark:text-white"),Q(m,"class","flex justify-between mb-1"),Q(T,"class","flex justify-between mt-4 mb-1"),Q(A,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(E,N){Tt(E,t,N),wt(t,e),wt(t,n),wt(t,i),wt(i,o),wt(i,a),Tt(E,l,N),Tt(E,c,N),wt(c,u),Tt(E,h,N),Tt(E,d,N),Tt(E,f,N),is(p,E,N),Tt(E,g,N),Tt(E,m,N),wt(m,x),wt(m,b),wt(m,v),wt(v,w),wt(v,S),Tt(E,C,N);for(let O=0;O<M.length;O+=1)M[O].m(E,N);Tt(E,_,N),Tt(E,T,N),Tt(E,I,N),Tt(E,A,N),D=!0},p(E,N){(!D||N&1)&&r!==(r=(E[0].completion*100).toFixed(1)+"")&&mn(o,r),(!D||N&1)&&Ds(u,"width",E[0].completion*100+"%"),(!D||N&1)&&Ds(u,"background-color",qc.getCompletionBarColor(E[0].completion));const O={};if(N&16&&(O.$$scope={dirty:N,ctx:E}),p.$set(O),(!D||N&1)&&y!==(y=E[0].sensorData.length+"")&&mn(w,y),N&1){k=E[0].sensorData;let L;for(L=0;L<k.length;L+=1){const $=PT(E,k,L);M[L]?M[L].p($,N):(M[L]=zT($),M[L].c(),M[L].m(_.parentNode,_))}for(;L<M.length;L+=1)M[L].d(1);M.length=k.length}},i(E){D||(be(p.$$.fragment,E),D=!0)},o(E){ke(p.$$.fragment,E),D=!1},d(E){E&&Ct(t),E&&Ct(l),E&&Ct(c),E&&Ct(h),E&&Ct(d),E&&Ct(f),rs(p,E),E&&Ct(g),E&&Ct(m),E&&Ct(C),i2(M,E),E&&Ct(_),E&&Ct(T),E&&Ct(I),E&&Ct(A)}}}function Uft(s){let t;return{c(){t=Mt("div"),t.textContent=`This is the car's rotation compass. It shows the car's current
            rotation relative to the track.`,Q(t,"class","max-w-xs text-justify")},m(e,n){Tt(e,t,n)},p:qe,d(e){e&&Ct(t)}}}function zT(s){let t,e,n=s[1].distance.toFixed(2)+"",i;return{c(){t=Mt("div"),e=Mt("div"),i=he(n),Q(e,"id","arrow-length-indicator-"+s[3]),Q(e,"class","bg-blue-600 mb-px bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"),Ds(e,"width",s[1].distance*100+"%"),Q(t,"class","w-full bg-gray-200 rounded-full dark:bg-gray-700")},m(r,o){Tt(r,t,o),wt(t,e),wt(e,i)},p(r,o){o&1&&n!==(n=r[1].distance.toFixed(2)+"")&&mn(i,n),o&1&&Ds(e,"width",r[1].distance*100+"%")},d(r){r&&Ct(t)}}}function Vft(s){let t,e,n=s[0].car&&OT(s);return{c(){n&&n.c(),t=Or()},m(i,r){n&&n.m(i,r),Tt(i,t,r),e=!0},p(i,[r]){i[0].car?n?(n.p(i,r),r&1&&be(n,1)):(n=OT(i),n.c(),be(n,1),n.m(t.parentNode,t)):n&&(ho(),ke(n,1,1,()=>{n=null}),fo())},i(i){e||(be(n),e=!0)},o(i){ke(n),e=!1},d(i){n&&n.d(i),i&&Ct(t)}}}function Wft(s,t,e){let{mode:n}=t;return s.$$set=i=>{"mode"in i&&e(0,n=i.mode)},[n]}class KR extends ii{constructor(t){super(),si(this,t,Wft,Vft,Zn,{mode:0})}}function Gft(s){let t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m,x,b,v;return{c(){t=Mt("label"),e=Mt("input"),n=qt(),i=Mt("div"),r=qt(),o=Mt("span"),o.textContent="Chase camera",a=qt(),l=Mt("br"),c=qt(),u=Mt("label"),h=Mt("input"),d=qt(),f=Mt("div"),p=qt(),g=Mt("span"),g.textContent="Visualize sensors",m=qt(),x=Mt("hr"),Q(e,"type","checkbox"),e.__value="",e.value=e.__value,Q(e,"id","chase-mode-toggle"),Q(e,"class","sr-only peer"),Q(i,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),Q(o,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),Q(t,"for","chase-mode-toggle"),Q(t,"class","inline-flex relative items-center cursor-pointer mb-4"),Q(h,"type","checkbox"),h.__value="",h.value=h.__value,Q(h,"id","show-sensors-toggle"),Q(h,"class","sr-only peer"),Q(f,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),Q(g,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),Q(u,"for","show-sensors-toggle"),Q(u,"class","inline-flex relative items-center cursor-pointer"),Q(x,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(y,w){Tt(y,t,w),wt(t,e),e.checked=s[0].chaseMode,wt(t,n),wt(t,i),wt(t,r),wt(t,o),wt(t,a),Tt(y,l,w),Tt(y,c,w),Tt(y,u,w),wt(u,h),h.checked=s[0].showSensors,wt(u,d),wt(u,f),wt(u,p),wt(u,g),Tt(y,m,w),Tt(y,x,w),b||(v=[pe(e,"change",s[1]),pe(h,"change",s[2])],b=!0)},p(y,[w]){w&1&&(e.checked=y[0].chaseMode),w&1&&(h.checked=y[0].showSensors)},i:qe,o:qe,d(y){y&&Ct(t),y&&Ct(l),y&&Ct(c),y&&Ct(u),y&&Ct(m),y&&Ct(x),b=!1,ni(v)}}}function Hft(s,t,e){let{mode:n}=t;function i(){n.chaseMode=this.checked,e(0,n)}function r(){n.showSensors=this.checked,e(0,n)}return s.$$set=o=>{"mode"in o&&e(0,n=o.mode)},[n,i,r]}class YR extends ii{constructor(t){super(),si(this,t,Hft,Gft,Zn,{mode:0})}}function qft(s){let t,e,n,i,r,o,a,l,c,u,h,d;return t=new YR({props:{mode:s[0]}}),n=new KR({props:{mode:s[0]}}),r=new OR({props:{gameWorld:s[0].gameWorld}}),{c(){ms(t.$$.fragment),e=qt(),ms(n.$$.fragment),i=qt(),ms(r.$$.fragment),o=qt(),a=Mt("hr"),l=qt(),c=Mt("button"),c.textContent="Reset car",Q(a,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),Q(c,"type","button"),Q(c,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900")},m(f,p){is(t,f,p),Tt(f,e,p),is(n,f,p),Tt(f,i,p),is(r,f,p),Tt(f,o,p),Tt(f,a,p),Tt(f,l,p),Tt(f,c,p),u=!0,h||(d=pe(c,"click",s[1]),h=!0)},p(f,[p]){const g={};p&1&&(g.mode=f[0]),t.$set(g);const m={};p&1&&(m.mode=f[0]),n.$set(m);const x={};p&1&&(x.gameWorld=f[0].gameWorld),r.$set(x)},i(f){u||(be(t.$$.fragment,f),be(n.$$.fragment,f),be(r.$$.fragment,f),u=!0)},o(f){ke(t.$$.fragment,f),ke(n.$$.fragment,f),ke(r.$$.fragment,f),u=!1},d(f){rs(t,f),f&&Ct(e),rs(n,f),f&&Ct(i),rs(r,f),f&&Ct(o),f&&Ct(a),f&&Ct(l),f&&Ct(c),h=!1,d()}}}function jft(s,t,e){let{mode:n}=t;const i=()=>{n.respawnCar()};return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class Xft extends ii{constructor(t){super(),si(this,t,jft,qft,Zn,{mode:0})}}function BT(s){let t,e,n,i,r,o,a=s[0].generationCount+"",l,c,u,h,d,f,p,g=s[0].isTraining&&UT(s);return{c(){t=Mt("button"),e=Mt("div"),n=qt(),i=Mt("p"),r=he("Generation "),o=Mt("b"),l=he(a),u=qt(),g&&g.c(),h=Or(),Q(e,"id","generation-progress-bar"),Q(e,"class","max-w-full h-full block absolute top-0 left-0 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-full z-[-1]"),Ds(e,"width",s[0].timeLeft/s[0].lastMaxRunTime*100+"%"),Q(i,"class","text-gray-300 mix-blend-difference"),Q(t,"type","button"),Q(t,"data-tooltip-target","tooltip-gen-progress"),Q(t,"class",c="w-full overflow-clip "+(s[0].isTraining?"hover:opacity-80":"cursor-not-allowed")+" transition-opacity duration-300 ease-in-out block mx-auto text-md border border-white rounded-full relative font-medium text-center my-3")},m(m,x){Tt(m,t,x),wt(t,e),wt(t,n),wt(t,i),wt(i,r),wt(i,o),wt(o,l),Tt(m,u,x),g&&g.m(m,x),Tt(m,h,x),d=!0,f||(p=pe(t,"click",s[3]),f=!0)},p(m,x){(!d||x&1)&&Ds(e,"width",m[0].timeLeft/m[0].lastMaxRunTime*100+"%"),(!d||x&1)&&a!==(a=m[0].generationCount+"")&&mn(l,a),(!d||x&1&&c!==(c="w-full overflow-clip "+(m[0].isTraining?"hover:opacity-80":"cursor-not-allowed")+" transition-opacity duration-300 ease-in-out block mx-auto text-md border border-white rounded-full relative font-medium text-center my-3"))&&Q(t,"class",c),m[0].isTraining?g?x&1&&be(g,1):(g=UT(m),g.c(),be(g,1),g.m(h.parentNode,h)):g&&(ho(),ke(g,1,1,()=>{g=null}),fo())},i(m){d||(be(g),d=!0)},o(m){ke(g),d=!1},d(m){m&&Ct(t),m&&Ct(u),g&&g.d(m),m&&Ct(h),f=!1,p()}}}function UT(s){let t,e;return t=new l0({props:{triggeredBy:"[data-tooltip-target='tooltip-gen-progress']",placement:"left",$$slots:{default:[Kft]},$$scope:{ctx:s}}}),{c(){ms(t.$$.fragment)},m(n,i){is(t,n,i),e=!0},i(n){e||(be(t.$$.fragment,n),e=!0)},o(n){ke(t.$$.fragment,n),e=!1},d(n){rs(t,n)}}}function Kft(s){let t;return{c(){t=he("Click to skip to the next generation")},m(e,n){Tt(e,t,n)},d(e){e&&Ct(t)}}}function VT(s){let t,e=s[0].isTraining?"Stop training":s[0].generationCount===1?"Start training":"Resume training",n,i,r,o,a,l,c=(s[0].generationCount!==1||s[0].isTraining)&&BT(s);return{c(){t=Mt("button"),n=he(e),i=qt(),c&&c.c(),r=Or(),Q(t,"type","button"),Q(t,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 transition-colors duration-200 ease-in-out")},m(u,h){Tt(u,t,h),wt(t,n),Tt(u,i,h),c&&c.m(u,h),Tt(u,r,h),o=!0,a||(l=pe(t,"click",s[2]),a=!0)},p(u,h){(!o||h&1)&&e!==(e=u[0].isTraining?"Stop training":u[0].generationCount===1?"Start training":"Resume training")&&mn(n,e),u[0].generationCount!==1||u[0].isTraining?c?(c.p(u,h),h&1&&be(c,1)):(c=BT(u),c.c(),be(c,1),c.m(r.parentNode,r)):c&&(ho(),ke(c,1,1,()=>{c=null}),fo())},i(u){o||(be(c),o=!0)},o(u){ke(c),o=!1},d(u){u&&Ct(t),u&&Ct(i),c&&c.d(u),u&&Ct(r),a=!1,l()}}}function Yft(s){let t;return{c(){t=Mt("div"),t.textContent=`Decrease the population size if you're experiencing lag. This will
            only take effect after you reset the population with the button down
            below.`,Q(t,"class","max-w-sm text-justify")},m(e,n){Tt(e,t,n)},p:qe,d(e){e&&Ct(t)}}}function Zft(s){let t=s[1],e,n,i,r,o=s[0].maxRunTime+"",a,l,c,u,h,d,f,p,g=Math.round(s[0].topRatio*100)+"",m,x,b,v,y,w,S,C,_=Math.round(s[0].crossoverRate*100)+"",T,I,A,D,k,M,E,N,O=Math.round(s[0].mutationRate*100)+"",L,$,W,q,H,X,it,lt,Y=Math.round(s[0].mutationStrength*100)+"",yt,vt,xt,bt,Dt,ct,ht,_t=s[0].populationSize+"",Et,gt,Ot,Pt,at,Lt,re,B,F,rt,kt,Rt,zt,te,j,nt,Ut,jt,Vt,ie,Xt,Se,Me,ve=VT(s);return at=new l0({props:{placement:"left",$$slots:{default:[Yft]},$$scope:{ctx:s}}}),{c(){ve.c(),e=qt(),n=Mt("label"),i=he("Time per generation: "),r=Mt("b"),a=he(o),l=he(" seconds"),c=qt(),u=Mt("input"),h=qt(),d=Mt("label"),f=he("Do crossover with top "),p=Mt("b"),m=he(g),x=he("%"),b=qt(),v=Mt("input"),y=qt(),w=Mt("label"),S=he("Crossover rate: "),C=Mt("b"),T=he(_),I=he("%"),A=qt(),D=Mt("input"),k=qt(),M=Mt("label"),E=he("Mutation rate: "),N=Mt("b"),L=he(O),$=he("%"),W=qt(),q=Mt("input"),H=qt(),X=Mt("label"),it=he("Mutation strength: "),lt=Mt("b"),yt=he(Y),vt=qt(),xt=Mt("input"),bt=qt(),Dt=Mt("label"),ct=he("Population size: "),ht=Mt("b"),Et=he(_t),gt=qt(),Ot=Mt("span"),Ot.textContent="!",Pt=qt(),ms(at.$$.fragment),Lt=qt(),re=Mt("input"),B=qt(),F=Mt("div"),rt=Mt("button"),rt.innerHTML='<span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Reset population</span>',kt=qt(),Rt=Mt("div"),zt=Mt("button"),zt.innerHTML='<span class="relative px-2 py-1 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Initialize population<br/> from teached model</span>',te=qt(),j=Mt("label"),nt=Mt("input"),Ut=qt(),jt=Mt("div"),Vt=qt(),ie=Mt("span"),ie.textContent="Chase first car",Q(n,"for","max-run-time-range"),Q(n,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),Q(u,"id","max-run-time-range"),Q(u,"type","range"),Q(u,"min","2"),Q(u,"max","120"),Q(u,"step","1"),Q(u,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(d,"for","top-ratio-range"),Q(d,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),Q(v,"id","top-ratio-range"),Q(v,"type","range"),Q(v,"min","0.01"),Q(v,"max","1.0"),Q(v,"step","0.01"),Q(v,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(w,"for","crossover-rate-range"),Q(w,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),Q(D,"id","crossover-rate-range"),Q(D,"type","range"),Q(D,"min","0.0"),Q(D,"max","1.0"),Q(D,"step","0.01"),Q(D,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(M,"for","mutation-rate-range"),Q(M,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),Q(q,"id","mutation-rate-range"),Q(q,"type","range"),Q(q,"min","0.0"),Q(q,"max","1.0"),Q(q,"step","0.01"),Q(q,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(X,"for","mutation-strength-range"),Q(X,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),Q(xt,"id","mutation-strength-range"),Q(xt,"type","range"),Q(xt,"min","0.0"),Q(xt,"max","0.15"),Q(xt,"step","0.01"),Q(xt,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(Ot,"class","inline-flex my-auto my-auto justify-center items-center ml-2 w-[1.25em] h-[1.25em] font-bold text-black bg-orange-300 rounded-full"),Q(Dt,"for","population-size-range"),Q(Dt,"class","block mb-1 mt-3 text-sm font-medium text-gray-300"),Q(re,"id","population-size-range"),Q(re,"type","range"),Q(re,"min","10"),Q(re,"max","200"),Q(re,"step","10"),Q(re,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),Q(rt,"class","inline-flex items-center justify-center p-0.5 overflow-hidden font-bold text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400"),Q(F,"class","block mt-5 mx-auto text-center"),Q(zt,"class","inline-flex items-center justify-center p-0.5 overflow-hidden font-bold text-sm text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400"),Q(Rt,"class","block mt-2 mx-auto mb-5 text-center"),Q(nt,"type","checkbox"),nt.__value="",nt.value=nt.__value,Q(nt,"id","chase-first-toggle"),Q(nt,"class","sr-only peer"),Q(jt,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),Q(ie,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),Q(j,"for","chase-first-toggle"),Q(j,"class","inline-flex relative items-center cursor-pointer mb-4")},m(V,st){ve.m(V,st),Tt(V,e,st),Tt(V,n,st),wt(n,i),wt(n,r),wt(r,a),wt(n,l),Tt(V,c,st),Tt(V,u,st),an(u,s[0].maxRunTime),Tt(V,h,st),Tt(V,d,st),wt(d,f),wt(d,p),wt(p,m),wt(d,x),Tt(V,b,st),Tt(V,v,st),an(v,s[0].topRatio),Tt(V,y,st),Tt(V,w,st),wt(w,S),wt(w,C),wt(C,T),wt(w,I),Tt(V,A,st),Tt(V,D,st),an(D,s[0].crossoverRate),Tt(V,k,st),Tt(V,M,st),wt(M,E),wt(M,N),wt(N,L),wt(M,$),Tt(V,W,st),Tt(V,q,st),an(q,s[0].mutationRate),Tt(V,H,st),Tt(V,X,st),wt(X,it),wt(X,lt),wt(lt,yt),Tt(V,vt,st),Tt(V,xt,st),an(xt,s[0].mutationStrength),Tt(V,bt,st),Tt(V,Dt,st),wt(Dt,ct),wt(Dt,ht),wt(ht,Et),wt(Dt,gt),wt(Dt,Ot),wt(Dt,Pt),is(at,Dt,null),Tt(V,Lt,st),Tt(V,re,st),an(re,s[0].populationSize),Tt(V,B,st),Tt(V,F,st),wt(F,rt),Tt(V,kt,st),Tt(V,Rt,st),wt(Rt,zt),Tt(V,te,st),Tt(V,j,st),wt(j,nt),nt.checked=s[0].chaseFirstCar,wt(j,Ut),wt(j,jt),wt(j,Vt),wt(j,ie),Xt=!0,Se||(Me=[pe(u,"change",s[4]),pe(u,"input",s[4]),pe(v,"change",s[5]),pe(v,"input",s[5]),pe(D,"change",s[6]),pe(D,"input",s[6]),pe(q,"change",s[7]),pe(q,"input",s[7]),pe(xt,"change",s[8]),pe(xt,"input",s[8]),pe(re,"change",s[9]),pe(re,"input",s[9]),pe(rt,"click",s[10]),pe(zt,"click",s[11]),pe(nt,"change",s[12]),pe(nt,"change",s[13])],Se=!0)},p(V,[st]){st&2&&Zn(t,t=V[1])?(ho(),ke(ve,1,1,qe),fo(),ve=VT(V),ve.c(),be(ve,1),ve.m(e.parentNode,e)):ve.p(V,st),(!Xt||st&1)&&o!==(o=V[0].maxRunTime+"")&&mn(a,o),st&1&&an(u,V[0].maxRunTime),(!Xt||st&1)&&g!==(g=Math.round(V[0].topRatio*100)+"")&&mn(m,g),st&1&&an(v,V[0].topRatio),(!Xt||st&1)&&_!==(_=Math.round(V[0].crossoverRate*100)+"")&&mn(T,_),st&1&&an(D,V[0].crossoverRate),(!Xt||st&1)&&O!==(O=Math.round(V[0].mutationRate*100)+"")&&mn(L,O),st&1&&an(q,V[0].mutationRate),(!Xt||st&1)&&Y!==(Y=Math.round(V[0].mutationStrength*100)+"")&&mn(yt,Y),st&1&&an(xt,V[0].mutationStrength),(!Xt||st&1)&&_t!==(_t=V[0].populationSize+"")&&mn(Et,_t);const Ft={};st&32768&&(Ft.$$scope={dirty:st,ctx:V}),at.$set(Ft),st&1&&an(re,V[0].populationSize),st&1&&(nt.checked=V[0].chaseFirstCar)},i(V){Xt||(be(ve),be(at.$$.fragment,V),Xt=!0)},o(V){ke(ve),ke(at.$$.fragment,V),Xt=!1},d(V){ve.d(V),V&&Ct(e),V&&Ct(n),V&&Ct(c),V&&Ct(u),V&&Ct(h),V&&Ct(d),V&&Ct(b),V&&Ct(v),V&&Ct(y),V&&Ct(w),V&&Ct(A),V&&Ct(D),V&&Ct(k),V&&Ct(M),V&&Ct(W),V&&Ct(q),V&&Ct(H),V&&Ct(X),V&&Ct(vt),V&&Ct(xt),V&&Ct(bt),V&&Ct(Dt),rs(at),V&&Ct(Lt),V&&Ct(re),V&&Ct(B),V&&Ct(F),V&&Ct(kt),V&&Ct(Rt),V&&Ct(te),V&&Ct(j),Se=!1,ni(Me)}}}function Jft(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTrainPanel=r;const o=()=>{n.isTraining?n.stopTraining():n.startTraining(),n.rerenderTrainPanel()},a=()=>{n.isTraining&&e(0,n.timeLeft=0,n)};function l(){n.maxRunTime=Ss(this.value),e(0,n)}function c(){n.topRatio=Ss(this.value),e(0,n)}function u(){n.crossoverRate=Ss(this.value),e(0,n)}function h(){n.mutationRate=Ss(this.value),e(0,n)}function d(){n.mutationStrength=Ss(this.value),e(0,n)}function f(){n.populationSize=Ss(this.value),e(0,n)}const p=()=>{n.resetPopulation()},g=()=>{n.loadTeachedModelToPopulation()};function m(){n.chaseFirstCar=this.checked,e(0,n)}const x=b=>{b.target.checked||n.gameWorld.resetCamera()};return s.$$set=b=>{"mode"in b&&e(0,n=b.mode)},[n,i,o,a,l,c,u,h,d,f,p,g,m,x]}class Qft extends ii{constructor(t){super(),si(this,t,Jft,Zft,Zn,{mode:0})}}FW("cpu");var qn=(s=>(s[s.Teach=0]="Teach",s[s.Demonstrate=1]="Demonstrate",s[s.None=2]="None",s))(qn||{});const tpt=Sh,ept=5;class npt extends qc{constructor(e){super(e);Kt(this,"inputSize");Kt(this,"model",$b());Kt(this,"_state",2);Kt(this,"previousState",2);Kt(this,"recording",[]);Kt(this,"storedRecording",[]);Kt(this,"isCurrentlyFitting",!1);Kt(this,"currentLoss",0);Kt(this,"epochsDone",0);Kt(this,"_numberOfEpochs",40);Kt(this,"_batchSize",32);Kt(this,"_hiddenLayerSize",16);this.inputSize=tpt.networkInputSize,this.generateNetwork()}generateNetwork(){this.model&&this.model.dispose(),this.model=$b({layers:[Qp({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"relu"}),l9({rate:.2}),Qp({units:ept,activation:"sigmoid"})]}),this.model.compile({optimizer:"adam",loss:"binaryCrossentropy"})}recordButtonPressed(){this.respawnCar(),this.state=0,this.recording=[],this.rerenderTeachPanel()}discardButtonPressed(){this.state=2,this.removeCar(),this.gameWorld.resetCamera(),this.rerenderTeachPanel()}startAIDemonstration(){this.state=1,this.recording=[],this.respawnCar(),this.rerenderTeachPanel()}stopAIDemonstration(){this.state=2,this.removeCar(),this.gameWorld.resetCamera(),this.rerenderTeachPanel()}storeRecording(){this.storedRecording.push(...this.recording),this.recording=[],this.rerenderTeachPanel()}async trainFromStored(){const e=this.storedRecording.map(o=>o.networkInput),n=this.storedRecording.map(o=>o.action),i=Oo(e),r=Oo(n);this.isCurrentlyFitting=!0,await this.model.fit(i,r,{epochs:this.numberOfEpochs,callbacks:{onEpochEnd:(o,a)=>{a&&(this.currentLoss=a.loss),this.epochsDone=o+1,this.rerenderTeachPanel()},onTrainEnd:()=>{this.isCurrentlyFitting=!1,this.rerenderTeachPanel()}}}),i.dispose(),r.dispose()}update(e){if(super.update(e),this.state===0&&this.car){const n=this.car.getPosition();this.gameWorld.raceTrack.isFinished(n.x,n.z)?(this.state=2,this.removeCar(),this.rerenderTeachPanel(),this.gameWorld.resetCamera()):(this.recording.push({...this.car.getNetworkInput(this.gameWorld),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}if(this.state===1&&this.car){const n=Oo([this.car.getNetworkInput(this.gameWorld).networkInput]),i=this.model.predict(n),r=i.arraySync()[0].map(o=>o>=.5);this.car.applyInput(...r),n.dispose(),i.dispose(),(this.W||this.A||this.S||this.D||this.SPACE)&&(this.car.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.recording.push({...this.car.getNetworkInput(this.gameWorld),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}}removeCar(){super.removeCar()}respawnCar(){super.respawnCar()}activate(){super.activate(),this.removeCar()}deactivate(){super.deactivate(),this.removeCar(),this.state=2,this.recording=[]}get numberOfEpochs(){return this._numberOfEpochs}set numberOfEpochs(e){e==null||e<1||(this._numberOfEpochs=Math.floor(e))}get batchSize(){return this._batchSize}set batchSize(e){e==null||e<1||(this._batchSize=Math.floor(e))}get hiddenLayerSize(){return this._hiddenLayerSize}set hiddenLayerSize(e){e==null||e<1||(this._hiddenLayerSize=Math.floor(e),this.generateNetwork())}get state(){return this._state}set state(e){e!==this._state&&(this.previousState=this._state,this._state=e)}emptyStoredRecording(){this.storedRecording=[],this.rerenderTeachPanel()}rerenderTeachPanel(){window.rerenderTeachPanel()}}function WT(s){let t,e,n,i=s[0].recording.length+"",r,o,a=s[0].state===qn.Teach||s[0].previousState===qn.Teach?"inputs recorded":"corrections recorded",l,c,u,h,d,f;return{c(){t=Mt("div"),e=Mt("span"),n=Mt("span"),r=he(i),o=he(`
            \xA0`),l=he(a),c=qt(),u=Mt("div"),h=Mt("button"),h.innerHTML='<span class="relative py-0.25 px-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-full group-hover:bg-opacity-0">Store</span>',Q(n,"id","recorded-count-span"),Q(e,"class","text-base font-medium text-blue-700 dark:text-white"),Q(h,"class","inline-flex items-center text-center justify-center p-0.5 mb-0 overflow-hidden text-sm font-bold text-gray-900 rounded-full group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-pink-300 group-hover:via-purple-300 group-hover:to-indigo-400 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400 block mx-auto"),Q(u,"class","block text-center ml-auto mr-1.5"),Ds(t,"display","hidden"),Q(t,"class","flex mt-4 mb-1")},m(p,g){Tt(p,t,g),wt(t,e),wt(e,n),wt(n,r),wt(t,o),wt(t,l),wt(t,c),wt(t,u),wt(u,h),d||(f=pe(h,"click",s[4]),d=!0)},p(p,g){g&1&&i!==(i=p[0].recording.length+"")&&mn(r,i),g&1&&a!==(a=p[0].state===qn.Teach||p[0].previousState===qn.Teach?"inputs recorded":"corrections recorded")&&mn(l,a)},d(p){p&&Ct(t),d=!1,f()}}}function GT(s){let t,e,n;return{c(){t=Mt("button"),t.textContent="Empty store",Q(t,"type","button"),Q(t,"class","block text-white bg-yellow-400 hover:bg-yellow-500 focus:outline-none focus:ring-4 font-bold rounded-full text-sm px-3 py-0.5 text-center ml-auto mr-2 mb-3 focus:ring-yellow-900")},m(i,r){Tt(i,t,r),e||(n=pe(t,"click",s[5]),e=!0)},p:qe,d(i){i&&Ct(t),e=!1,n()}}}function HT(s){let t,e,n;return{c(){t=Mt("button"),t.textContent="Train from stored inputs",Q(t,"type","button"),Q(t,"class","block text-red-700 hover:text-white mx-auto border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-xs px-2 py-1 text-center mb-0 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900")},m(i,r){Tt(i,t,r),e||(n=pe(t,"click",s[6]),e=!0)},p:qe,d(i){i&&Ct(t),e=!1,n()}}}function qT(s){let t,e,n,i=s[0].currentLoss.toFixed(4)+"",r,o,a,l=s[0].epochsDone+"",c,u,h=s[0].numberOfEpochs+"",d,f,p,g,m;return{c(){t=Mt("div"),e=Mt("span"),n=he("Loss: "),r=he(i),o=qt(),a=Mt("span"),c=he(l),u=he(" / "),d=he(h),f=he(" epochs"),p=qt(),g=Mt("div"),m=Mt("div"),Q(e,"class","text-sm font-light text-blue-700 dark:text-white"),Q(a,"class","text-sm font-medium text-blue-700 dark:text-white"),Q(t,"class","flex justify-between mb-1"),Q(m,"class","bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 h-2.5 rounded-full"),Ds(m,"width",s[0].epochsDone/s[0].numberOfEpochs*100+"%"),Q(g,"class","w-full bg-gray-700 rounded-full h-2.5")},m(x,b){Tt(x,t,b),wt(t,e),wt(e,n),wt(e,r),wt(t,o),wt(t,a),wt(a,c),wt(a,u),wt(a,d),wt(a,f),Tt(x,p,b),Tt(x,g,b),wt(g,m)},p(x,b){b&1&&i!==(i=x[0].currentLoss.toFixed(4)+"")&&mn(r,i),b&1&&l!==(l=x[0].epochsDone+"")&&mn(c,l),b&1&&h!==(h=x[0].numberOfEpochs+"")&&mn(d,h),b&1&&Ds(m,"width",x[0].epochsDone/x[0].numberOfEpochs*100+"%")},d(x){x&&Ct(t),x&&Ct(p),x&&Ct(g)}}}function spt(s){let t;return{c(){t=Mt("div"),t.textContent=`Changing this value will reset the model. The number of
                    units in the hidden layer. The default value is 16.`,Q(t,"class","max-w-xs text-justify")},m(e,n){Tt(e,t,n)},p:qe,d(e){e&&Ct(t)}}}function jT(s){let t,e,n=s[0].state==qn.None?"New recording":"Stop",i,r,o,a=s[0].state==qn.Demonstrate?"Stop":"Test",l,c,u,h,d,f,p,g,m,x=s[0].storedRecording.length+"",b,v,y,w,S,C,_,T,I,A,D,k,M,E,N,O,L,$,W,q,H,X,it,lt,Y,yt,vt,xt,bt,Dt,ct,ht,_t,Et=(s[0].state!=qn.None||s[0].recording.length>0)&&WT(s),gt=s[0].storedRecording.length>0&&!s[0].isCurrentlyFitting&&GT(s),Ot=s[0].storedRecording.length>0&&!s[0].isCurrentlyFitting&&HT(s),Pt=s[0].isCurrentlyFitting&&qT(s);return q=new l0({props:{placement:"left",$$slots:{default:[spt]},$$scope:{ctx:s}}}),yt=new YR({props:{mode:s[0]}}),xt=new KR({props:{mode:s[0]}}),Dt=new OR({props:{gameWorld:s[0].gameWorld}}),{c(){t=Mt("div"),e=Mt("button"),i=he(n),r=qt(),o=Mt("button"),l=he(a),c=he(" AI car"),h=qt(),Et&&Et.c(),d=qt(),f=Mt("hr"),p=qt(),g=Mt("div"),m=Mt("span"),b=he(x),v=he(" inputs stored. \xA0"),y=qt(),gt&&gt.c(),w=qt(),Ot&&Ot.c(),S=qt(),Pt&&Pt.c(),C=qt(),_=Mt("ul"),T=Mt("li"),T.textContent="Epochs",I=qt(),A=Mt("input"),D=qt(),k=Mt("li"),k.textContent="Batch size",M=qt(),E=Mt("input"),N=qt(),O=Mt("li"),L=he(`Hidden layer units
            `),$=Mt("span"),$.textContent="!",W=qt(),ms(q.$$.fragment),H=qt(),X=Mt("input"),it=qt(),lt=Mt("hr"),Y=qt(),ms(yt.$$.fragment),vt=qt(),ms(xt.$$.fragment),bt=qt(),ms(Dt.$$.fragment),Q(e,"type","button"),Q(e,"class","focus:outline-none text-white grow flex-1 transition py-1 px-2 text-sm focus:ring-red-300 font-bold rounded-l-lg border border-gray-200 focus:z-10 focus:ring-1 bg-red-600 border-gray-600 text-white hover:text-white hover:bg-red-700"),Q(o,"type","button"),Q(o,"class",u="text-purple-700 hover:text-white grow flex-1 transition border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-bold rounded-r-lg text-sm px-2 py-1 text-center dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900 "+(s[0].state==qn.Teach?"opacity-50 cursor-not-allowed":"")),Q(t,"class","flex rounded-md shadow-sm"),Q(t,"role","group"),Q(f,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),Q(m,"class","text-base font-medium text-blue-700 dark:text-white"),Ds(g,"display","hidden"),Q(g,"class","flex justify-between mt-4 mb-1"),Q(T,"class","col-span-2 py-2 px-2 rounded-tl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),Q(A,"type","number"),Q(A,"min","1"),Q(A,"max","1000000"),Q(A,"step","1"),Q(A,"pattern","\\d+"),Q(A,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-tr-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),Q(k,"class","col-span-2 py-2 px-2 border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),Q(E,"type","number"),Q(E,"min","1"),Q(E,"max","256"),Q(E,"step","1"),Q(E,"pattern","\\d+"),Q(E,"class","col-span-1 p-1 text-gray-900 bg-gray-50 border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),Ds($,"line-height","140%"),Q($,"class","inline-block my-auto ml-auto p-0 text-center ml-2 w-[1.25em] h-[1.25em] font-bold text-black bg-orange-100 rounded-full"),Q(O,"class","col-span-2 py-2 px-2 rounded-bl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),Q(X,"type","number"),Q(X,"min","1"),Q(X,"max","1024"),Q(X,"step","1"),Q(X,"pattern","\\d+"),Q(X,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-br-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),Q(_,"class","w-100 mt-4 grid grid-cols-3 flex-row flex-wrap text-sm font-bold rounded-xl border border-gray-600"),Q(lt,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(at,Lt){Tt(at,t,Lt),wt(t,e),wt(e,i),wt(t,r),wt(t,o),wt(o,l),wt(o,c),Tt(at,h,Lt),Et&&Et.m(at,Lt),Tt(at,d,Lt),Tt(at,f,Lt),Tt(at,p,Lt),Tt(at,g,Lt),wt(g,m),wt(m,b),wt(m,v),wt(g,y),gt&&gt.m(g,null),Tt(at,w,Lt),Ot&&Ot.m(at,Lt),Tt(at,S,Lt),Pt&&Pt.m(at,Lt),Tt(at,C,Lt),Tt(at,_,Lt),wt(_,T),wt(_,I),wt(_,A),an(A,s[0].numberOfEpochs),wt(_,D),wt(_,k),wt(_,M),wt(_,E),an(E,s[0].batchSize),wt(_,N),wt(_,O),wt(O,L),wt(O,$),wt(O,W),is(q,O,null),wt(_,H),wt(_,X),an(X,s[0].hiddenLayerSize),Tt(at,it,Lt),Tt(at,lt,Lt),Tt(at,Y,Lt),is(yt,at,Lt),Tt(at,vt,Lt),is(xt,at,Lt),Tt(at,bt,Lt),is(Dt,at,Lt),ct=!0,ht||(_t=[pe(e,"click",s[2]),pe(o,"click",s[3]),pe(A,"input",s[7]),pe(E,"input",s[8]),pe(X,"input",s[9])],ht=!0)},p(at,Lt){(!ct||Lt&1)&&n!==(n=at[0].state==qn.None?"New recording":"Stop")&&mn(i,n),(!ct||Lt&1)&&a!==(a=at[0].state==qn.Demonstrate?"Stop":"Test")&&mn(l,a),(!ct||Lt&1&&u!==(u="text-purple-700 hover:text-white grow flex-1 transition border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-bold rounded-r-lg text-sm px-2 py-1 text-center dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900 "+(at[0].state==qn.Teach?"opacity-50 cursor-not-allowed":"")))&&Q(o,"class",u),at[0].state!=qn.None||at[0].recording.length>0?Et?Et.p(at,Lt):(Et=WT(at),Et.c(),Et.m(d.parentNode,d)):Et&&(Et.d(1),Et=null),(!ct||Lt&1)&&x!==(x=at[0].storedRecording.length+"")&&mn(b,x),at[0].storedRecording.length>0&&!at[0].isCurrentlyFitting?gt?gt.p(at,Lt):(gt=GT(at),gt.c(),gt.m(g,null)):gt&&(gt.d(1),gt=null),at[0].storedRecording.length>0&&!at[0].isCurrentlyFitting?Ot?Ot.p(at,Lt):(Ot=HT(at),Ot.c(),Ot.m(S.parentNode,S)):Ot&&(Ot.d(1),Ot=null),at[0].isCurrentlyFitting?Pt?Pt.p(at,Lt):(Pt=qT(at),Pt.c(),Pt.m(C.parentNode,C)):Pt&&(Pt.d(1),Pt=null),Lt&1&&Ss(A.value)!==at[0].numberOfEpochs&&an(A,at[0].numberOfEpochs),Lt&1&&Ss(E.value)!==at[0].batchSize&&an(E,at[0].batchSize);const re={};Lt&2048&&(re.$$scope={dirty:Lt,ctx:at}),q.$set(re),Lt&1&&Ss(X.value)!==at[0].hiddenLayerSize&&an(X,at[0].hiddenLayerSize);const B={};Lt&1&&(B.mode=at[0]),yt.$set(B);const F={};Lt&1&&(F.mode=at[0]),xt.$set(F);const rt={};Lt&1&&(rt.gameWorld=at[0].gameWorld),Dt.$set(rt)},i(at){ct||(be(q.$$.fragment,at),be(yt.$$.fragment,at),be(xt.$$.fragment,at),be(Dt.$$.fragment,at),ct=!0)},o(at){ke(q.$$.fragment,at),ke(yt.$$.fragment,at),ke(xt.$$.fragment,at),ke(Dt.$$.fragment,at),ct=!1},d(at){at&&Ct(t),at&&Ct(h),Et&&Et.d(at),at&&Ct(d),at&&Ct(f),at&&Ct(p),at&&Ct(g),gt&&gt.d(),at&&Ct(w),Ot&&Ot.d(at),at&&Ct(S),Pt&&Pt.d(at),at&&Ct(C),at&&Ct(_),rs(q),at&&Ct(it),at&&Ct(lt),at&&Ct(Y),rs(yt,at),at&&Ct(vt),rs(xt,at),at&&Ct(bt),rs(Dt,at),ht=!1,ni(_t)}}}function ipt(s){let t=s[1],e,n,i=jT(s);return{c(){i.c(),e=Or()},m(r,o){i.m(r,o),Tt(r,e,o),n=!0},p(r,[o]){o&2&&Zn(t,t=r[1])?(ho(),ke(i,1,1,qe),fo(),i=jT(r),i.c(),be(i,1),i.m(e.parentNode,e)):i.p(r,o)},i(r){n||(be(i),n=!0)},o(r){ke(i),n=!1},d(r){r&&Ct(e),i.d(r)}}}function rpt(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTeachPanel=r;const o=()=>{n.state==qn.None?n.recordButtonPressed():n.state==qn.Teach?n.discardButtonPressed():n.state==qn.Demonstrate&&n.stopAIDemonstration()},a=()=>{n.state==qn.None?n.startAIDemonstration():n.state==qn.Demonstrate&&n.stopAIDemonstration()},l=()=>{n.storeRecording()},c=()=>{n.emptyStoredRecording()},u=()=>{n.trainFromStored()};function h(){n.numberOfEpochs=Ss(this.value),e(0,n)}function d(){n.batchSize=Ss(this.value),e(0,n)}function f(){n.hiddenLayerSize=Ss(this.value),e(0,n)}return s.$$set=p=>{"mode"in p&&e(0,n=p.mode)},[n,i,o,a,l,c,u,h,d,f]}class opt extends ii{constructor(t){super(),si(this,t,rpt,ipt,Zn,{mode:0})}}const yp=new ty(.45,.5,32,1);yp.rotateX(Math.PI/2);const h1=new ul({color:0,side:Ls});h1.depthTest=!1;h1.depthWrite=!1;const d1=new ul({color:16753920,side:Ls});d1.depthTest=!1;d1.depthWrite=!1;const ZR=new ul({color:65280,side:Ls});ZR.depthTest=!1;ZR.depthWrite=!1;const f1=new ul({color:255,side:Ls});f1.depthTest=!1;f1.depthWrite=!1;class apt{constructor(t){Kt(this,"gameWorld");Kt(this,"raycaster");Kt(this,"pointer");Kt(this,"ring");Kt(this,"brushSize",1);Kt(this,"onPointerMove");Kt(this,"onMouseUp");Kt(this,"onMouseDown");Kt(this,"mouseDown");Kt(this,"rings");Kt(this,"road");Kt(this,"roadPoints");this.gameWorld=t,this.roadPoints=[new G(4,0,4),new G(-4,0,4),new G(-4,0,0),new G(4,0,0),new G(4,0,-4),new G(-4,0,-4)],this.road=new OS(this.roadPoints,1),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road,this.raycaster=new B2,this.pointer=new Nt(0,0),this.onPointerMove=e=>{this.pointer.x=e.offsetX/this.gameWorld.canvas.offsetWidth*2-1,this.pointer.y=-(e.offsetY/this.gameWorld.canvas.offsetHeight)*2+1},this.ring=new nn(yp,h1),this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.ring.castShadow=!1,this.ring.receiveShadow=!1,this.ring.renderOrder=999,this.rings=[],this.mouseDown=!1,this.onMouseUp=e=>{e.button===0&&this.endDrawing(),document.removeEventListener("mouseup",this.onMouseUp)},this.onMouseDown=e=>{e.button===0&&(this.startDrawing(),document.addEventListener("mouseup",this.onMouseUp))}}startDrawing(){this.mouseDown=!0;const t=new nn(yp,d1);t.scale.set(this.brushSize,this.brushSize,this.brushSize),t.castShadow=!1,t.receiveShadow=!1,t.renderOrder=999,t.position.copy(this.ring.position),this.rings=[t],this.gameWorld.scene.add(t)}addDrawing(){if(this.rings.some(n=>this.ring.position.distanceTo(n.position)<this.brushSize))return;const e=new nn(yp,f1);e.scale.set(this.brushSize,this.brushSize,this.brushSize),e.castShadow=!1,e.receiveShadow=!1,e.renderOrder=999,e.position.copy(this.ring.position),this.rings.push(e),this.gameWorld.scene.add(e)}endDrawing(){this.mouseDown=!1,this.rings.length>3&&(this.gameWorld.removeGameObject(this.road),this.road.dispose(),this.roadPoints=this.rings.map(t=>t.position),this.road=new OS(this.roadPoints,this.brushSize),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road),this.rings.forEach(t=>{this.gameWorld.scene.remove(t)}),this.rings=[]}update(t){this.raycaster.setFromCamera(this.pointer,this.gameWorld.camera);const e=this.raycaster.intersectObjects([this.gameWorld.ground.mesh]);if(e.length>0){const n=e[0].point;this.ring.position.set(n.x,n.y,n.z),this.ring.visible=!0}else this.ring.visible=!1;this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.mouseDown&&this.addDrawing(),this.gameWorld.controls.target.set(0,0,0)}activate(){this.gameWorld.controls.maxPolarAngle=0,this.gameWorld.controls.minAzimuthAngle=0,this.gameWorld.controls.maxAzimuthAngle=0,this.gameWorld.controls.minDistance=8,this.gameWorld.controls.maxDistance=8,this.gameWorld.controls.target.set(0,0,0),this.ring.visible=!1,this.gameWorld.scene.add(this.ring),this.gameWorld.canvas.addEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.addEventListener("mousedown",this.onMouseDown)}deactivate(){this.gameWorld.controls.maxPolarAngle=Math.PI,this.gameWorld.controls.minAzimuthAngle=1/0,this.gameWorld.controls.maxAzimuthAngle=1/0,this.gameWorld.controls.minDistance=0,this.gameWorld.controls.maxDistance=50,this.gameWorld.resetCamera(),this.gameWorld.scene.remove(this.ring),this.gameWorld.canvas.removeEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.removeEventListener("mousedown",this.onMouseDown)}}const XT=new O2,KT=new dl({color:2236962}),lpt=Sh,cpt=5;class upt{constructor(t){Kt(this,"gameWorld");Kt(this,"teachModeReference");Kt(this,"inputSize");Kt(this,"isTraining",!1);Kt(this,"populationSize",50);Kt(this,"maxRunTime",20);Kt(this,"lastMaxRunTime",20);Kt(this,"population",[]);Kt(this,"hiddenLayerSize",16);Kt(this,"timeLeft",0);Kt(this,"topRatio",.5);Kt(this,"crossoverRate",.25);Kt(this,"mutationRate",.05);Kt(this,"mutationStrength",.02);Kt(this,"generationCount",1);Kt(this,"chaseFirstCar",!1);this.gameWorld=t,this.inputSize=lpt.networkInputSize}generatePopulation(){this.population=[];for(let t=0;t<this.populationSize;t++)this.population.push(this.generateAgent())}loadTeachedModelToPopulation(){!this.teachModeReference||(this.population.length===0&&this.generatePopulation(),this.stopTraining(),this.generationCount=1,this.population.forEach(t=>{var e;t.model.dispose(),(e=this.teachModeReference)==null||e.model.save(DW(async n=>(t.model=await H7(NW(n)),{modelArtifactsInfo:{dateSaved:new Date,modelTopologyType:"JSON"}})))}),this.rerenderTrainPanel())}startTraining(){this.isTraining=!0,this.population.length===0?this.generatePopulation():this.resetCars(),this.timeLeft=this.maxRunTime,this.lastMaxRunTime=this.timeLeft}stopTraining(){this.isTraining=!1,this.timeLeft=this.maxRunTime,this.lastMaxRunTime=this.timeLeft,this.resetCars()}resetPopulation(){this.stopTraining(),this.removeCars(),this.population.forEach(t=>{t.car.dispose(),t.model.dispose()}),this.population=[],this.generationCount=1,this.generatePopulation(),this.rerenderTrainPanel()}update(t){if(this.isTraining){this.timeLeft-=t,this.timeLeft<=0&&(this.doRankingAndCrossover(),this.timeLeft=this.maxRunTime,this.lastMaxRunTime=this.timeLeft,this.resetCars(),this.generationCount++,this.rerenderTrainPanel());let e,n=0;if(this.population.forEach(r=>{if(r.finished)return;const o=r.car.getNetworkInput(this.gameWorld);o.completed>n&&(e=r.car,n=o.completed);const a=Oo([o.networkInput]),l=r.model.predict(a),c=l.arraySync()[0].map(h=>h>=.5);r.car.applyInput(c[0],c[1],c[2],c[3],c[4]),a.dispose(),l.dispose();const u=r.car.getPosition();r.fitness=this.gameWorld.raceTrack.amountCompleted(u.x,u.z),this.gameWorld.raceTrack.isFinished(u.x,u.z)&&(r.finished=!0,r.fitness=1+this.timeLeft)}),this.chaseFirstCar&&e){this.gameWorld.controls.target=e.getPosition(),this.gameWorld.controls.target.y+=.2;let r=e.getForwardDir();r.y=0,r.normalize(),r.multiplyScalar(-.5),r.y=.2,this.gameWorld.camera.position.copy(e.getPosition()),this.gameWorld.camera.position.add(r)}const i=document.getElementById("generation-progress-bar");i&&(i.style.width=`${this.timeLeft/this.lastMaxRunTime*100}%`)}}doRankingAndCrossover(){this.population.forEach(t=>{const e=t.car.getPosition();t.fitness=this.gameWorld.raceTrack.amountCompleted(e.x,e.z)}),this.population.sort((t,e)=>e.fitness-t.fitness),ut(()=>{for(let t=Math.round(this.population.length*this.topRatio);t<this.population.length;t++){if(Math.random()>=this.crossoverRate)continue;const e=this.population[Math.floor(Math.random()*this.population.length*this.topRatio)],n=this.population[Math.floor(Math.random()*this.population.length*this.topRatio)],i=this.population[t],r=Math.random();for(let o=0;o<i.model.weights.length;o++){const a=i.model.weights[o],l=e.model.weights[o],c=n.model.weights[o];a.val.assign(l.val.mul(r).add(c.val.mul(1-r)))}}for(let t=0;t<this.population.length;t++)Math.random()>=this.mutationRate||this.population[t].model.weights.forEach(e=>{const n=wb(e.shape,0,this.mutationStrength);e.val.assign(e.val.add(n))})})}activate(){this.gameWorld.resetCamera()}deactivate(){this.stopTraining(),this.removeCars()}removeCars(){this.population.forEach(t=>{this.gameWorld.removeGameObject(t.car)})}resetCars(){this.population.forEach(t=>{this.gameWorld.removeGameObject(t.car),t.car.dispose();const e=new Sh(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,XT,KT,5,.25,.1);e.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(e),t.car=e,t.fitness=0,t.finished=!1})}generateAgent(){const t=new Sh(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,XT,KT,5,.25,.1);t.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(t);const e=$b({layers:[Qp({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"relu"}),Qp({units:cpt,activation:"sigmoid"})]});return e.compile({optimizer:"adam",loss:"binaryCrossentropy"}),e.weights.forEach(n=>{const i=wb(n.shape);n.val.assign(i),i.dispose()}),{car:t,model:e,fitness:0,finished:!1}}rerenderTrainPanel(){window.rerenderTrainPanel()}}function YT(s,t,e){const n=s.slice();return n[7]=t[e],n[9]=e,n}function ZT(s){let t,e=s[7]+"",n,i,r,o,a;function l(){return s[5](s[9])}return{c(){t=Mt("button"),n=he(e),i=qt(),Q(t,"type","button"),Q(t,"class",r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")},m(c,u){Tt(c,t,u),wt(t,n),wt(t,i),o||(a=pe(t,"click",l),o=!0)},p(c,u){s=c,u&1&&r!==(r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")&&Q(t,"class",r)},d(c){c&&Ct(t),o=!1,a()}}}function hpt(s){let t,e,n,i,r,o=s[1],a=[];for(let u=0;u<o.length;u+=1)a[u]=ZT(YT(s,o,u));var l=s[2][s[0]];function c(u){return{props:{mode:u[3][u[0]]}}}return l&&(i=x1(l,c(s))),{c(){t=Mt("div");for(let u=0;u<a.length;u+=1)a[u].c();e=qt(),n=Mt("div"),i&&ms(i.$$.fragment),Q(t,"class","sticky top-0 z-50 inline-flex rounded-md shadow-sm w-full"),Q(t,"role","group"),Q(n,"class","p-4")},m(u,h){Tt(u,t,h);for(let d=0;d<a.length;d+=1)a[d].m(t,null);Tt(u,e,h),Tt(u,n,h),i&&is(i,n,null),r=!0},p(u,[h]){if(h&19){o=u[1];let f;for(f=0;f<o.length;f+=1){const p=YT(u,o,f);a[f]?a[f].p(p,h):(a[f]=ZT(p),a[f].c(),a[f].m(t,null))}for(;f<a.length;f+=1)a[f].d(1);a.length=o.length}const d={};if(h&1&&(d.mode=u[3][u[0]]),l!==(l=u[2][u[0]])){if(i){ho();const f=i;ke(f.$$.fragment,1,0,()=>{rs(f,1)}),fo()}l?(i=x1(l,c(u)),ms(i.$$.fragment),be(i.$$.fragment,1),is(i,n,null)):i=null}else l&&i.$set(d)},i(u){r||(i&&be(i.$$.fragment,u),r=!0)},o(u){i&&ke(i.$$.fragment,u),r=!1},d(u){u&&Ct(t),i2(a,u),u&&Ct(e),u&&Ct(n),i&&rs(i)}}}const dpt=2;function fpt(s,t,e){const n=["Draw","Play","Train","Teach"],i=[xdt,Xft,Qft,opt],r=[];let o=-1,a;PR.subscribe(u=>{if(u){a=u,r.push(new apt(a)),r.push(new qc(a));const h=new npt(a),d=new upt(a);d.teachModeReference=h,r.push(d),r.push(h),l(dpt)}});function l(u){o!==u&&(o!==-1&&r[o].deactivate(),e(0,o=u),r[o].activate(),a.requestCallbackBeforeRender(r[o].update.bind(r[o])))}return[o,n,i,r,l,u=>l(u)]}class ppt extends ii{constructor(t){super(),si(this,t,fpt,hpt,Zn,{})}}function mpt(s){let t,e,n,i,r,o,a,l,c;return r=new pdt({}),l=new ppt({}),{c(){t=Mt("main"),e=Mt("div"),n=Mt("div"),i=qt(),ms(r.$$.fragment),o=qt(),a=Mt("div"),ms(l.$$.fragment),Q(n,"id","debug-element"),Q(n,"class","fixed top-0 left-0 p-2 pointer-events-none font-mono"),Q(e,"id","canvas-pane"),Q(e,"class","svelte-k4hl9j"),Q(a,"id","menu-pane"),Q(a,"class","overflow-x-hidden overflow-y-auto p-0 m-0 svelte-k4hl9j"),Q(t,"class","svelte-k4hl9j")},m(u,h){Tt(u,t,h),wt(t,e),wt(e,n),wt(e,i),is(r,e,null),wt(t,o),wt(t,a),is(l,a,null),c=!0},p:qe,i(u){c||(be(r.$$.fragment,u),be(l.$$.fragment,u),c=!0)},o(u){ke(r.$$.fragment,u),ke(l.$$.fragment,u),c=!1},d(u){u&&Ct(t),rs(r),rs(l)}}}class gpt extends ii{constructor(t){super(),si(this,t,null,mpt,Zn,{})}}new gpt({target:document.getElementById("app")});
