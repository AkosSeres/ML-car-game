var iA=Object.defineProperty;var rA=(s,t,e)=>t in s?iA(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var le=(s,t,e)=>(rA(s,typeof t!="symbol"?t+"":t,e),e);function oA(s,t){for(var e=0;e<t.length;e++){const n=t[e];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in s)){const r=Object.getOwnPropertyDescriptor(n,i);r&&Object.defineProperty(s,i,r.get?r:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();function Sn(){}function fS(s){return s()}function uy(){return Object.create(null)}function $r(s){s.forEach(fS)}function pS(s){return typeof s=="function"}function lr(s,t){return s!=s?t==t:s!==t||s&&typeof s=="object"||typeof s=="function"}function aA(s){return Object.keys(s).length===0}function re(s,t){s.appendChild(t)}function Bt(s,t,e){s.insertBefore(t,e||null)}function Ot(s){s.parentNode.removeChild(s)}function Gx(s,t){for(let e=0;e<s.length;e+=1)s[e]&&s[e].d(t)}function Yt(s){return document.createElement(s)}function Un(s){return document.createTextNode(s)}function pe(){return Un(" ")}function mS(){return Un("")}function rs(s,t,e,n){return s.addEventListener(t,e,n),()=>s.removeEventListener(t,e,n)}function _t(s,t,e){e==null?s.removeAttribute(t):s.getAttribute(t)!==e&&s.setAttribute(t,e)}function Pg(s){return s===""?null:+s}function lA(s){return Array.from(s.childNodes)}function kr(s,t){t=""+t,s.wholeText!==t&&(s.data=t)}function bl(s,t){s.value=t==null?"":t}function $l(s,t,e,n){e===null?s.style.removeProperty(t):s.style.setProperty(t,e,n?"important":"")}function hy(s,t){return new s(t)}let Qc;function qc(s){Qc=s}function cA(){if(!Qc)throw new Error("Function called outside component initialization");return Qc}function uA(s){cA().$$.on_mount.push(s)}const Lc=[],Og=[],Vd=[],dy=[],hA=Promise.resolve();let zg=!1;function dA(){zg||(zg=!0,hA.then(gS))}function Bg(s){Vd.push(s)}const Mm=new Set;let jh=0;function gS(){const s=Qc;do{for(;jh<Lc.length;){const t=Lc[jh];jh++,qc(t),fA(t.$$)}for(qc(null),Lc.length=0,jh=0;Og.length;)Og.pop()();for(let t=0;t<Vd.length;t+=1){const e=Vd[t];Mm.has(e)||(Mm.add(e),e())}Vd.length=0}while(Lc.length);for(;dy.length;)dy.pop()();zg=!1,Mm.clear(),qc(s)}function fA(s){if(s.fragment!==null){s.update(),$r(s.before_update);const t=s.dirty;s.dirty=[-1],s.fragment&&s.fragment.p(s.ctx,t),s.after_update.forEach(Bg)}}const Wd=new Set;let Ho;function xS(){Ho={r:0,c:[],p:Ho}}function vS(){Ho.r||$r(Ho.c),Ho=Ho.p}function Ar(s,t){s&&s.i&&(Wd.delete(s),s.i(t))}function eo(s,t,e,n){if(s&&s.o){if(Wd.has(s))return;Wd.add(s),Ho.c.push(()=>{Wd.delete(s),n&&(e&&s.d(1),n())}),s.o(t)}else n&&n()}function Dl(s){s&&s.c()}function oa(s,t,e,n){const{fragment:i,after_update:r}=s.$$;i&&i.m(t,e),n||Bg(()=>{const o=s.$$.on_mount.map(fS).filter(pS);s.$$.on_destroy?s.$$.on_destroy.push(...o):$r(o),s.$$.on_mount=[]}),r.forEach(Bg)}function aa(s,t){const e=s.$$;e.fragment!==null&&($r(e.on_destroy),e.fragment&&e.fragment.d(t),e.on_destroy=e.fragment=null,e.ctx=[])}function pA(s,t){s.$$.dirty[0]===-1&&(Lc.push(s),dA(),s.$$.dirty.fill(0)),s.$$.dirty[t/31|0]|=1<<t%31}function uo(s,t,e,n,i,r,o,a=[-1]){const l=Qc;qc(s);const c=s.$$={fragment:null,ctx:[],props:r,update:Sn,not_equal:i,bound:uy(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(l?l.$$.context:[])),callbacks:uy(),dirty:a,skip_bound:!1,root:t.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=e?e(s,t.props||{},(h,d,...f)=>{const p=f.length?f[0]:d;return c.ctx&&i(c.ctx[h],c.ctx[h]=p)&&(!c.skip_bound&&c.bound[h]&&c.bound[h](p),u&&pA(s,h)),d}):[],c.update(),u=!0,$r(c.before_update),c.fragment=n?n(c.ctx):!1,t.target){if(t.hydrate){const h=lA(t.target);c.fragment&&c.fragment.l(h),h.forEach(Ot)}else c.fragment&&c.fragment.c();t.intro&&Ar(s.$$.fragment),oa(s,t.target,t.anchor,t.customElement),gS()}qc(l)}class ho{$destroy(){aa(this,1),this.$destroy=Sn}$on(t,e){if(!pS(e))return Sn;const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const i=n.indexOf(e);i!==-1&&n.splice(i,1)}}$set(t){this.$$set&&!aA(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Hx="146",Ha={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},qa={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},mA=0,fy=1,gA=2,bS=1,yS=2,Pc=3,Fl=0,li=1,ei=2,Yr=0,Il=1,py=2,my=3,gy=4,xA=5,pl=100,vA=101,bA=102,xy=103,vy=104,yA=200,wA=201,_A=202,SA=203,wS=204,_S=205,CA=206,IA=207,TA=208,EA=209,MA=210,kA=0,AA=1,NA=2,Ug=3,RA=4,$A=5,DA=6,FA=7,$f=0,LA=1,PA=2,Er=0,OA=1,zA=2,BA=3,UA=4,VA=5,SS=300,Ll=301,Pl=302,Vg=303,Wg=304,Df=306,Gg=1e3,Ti=1001,Hg=1002,ws=1003,by=1004,yy=1005,Js=1006,WA=1007,Ff=1008,la=1009,GA=1010,HA=1011,CS=1012,qA=1013,qo=1014,Xo=1015,tu=1016,XA=1017,jA=1018,Tl=1020,KA=1021,YA=1022,Ei=1023,ZA=1024,JA=1025,ta=1026,Ol=1027,QA=1028,tN=1029,eN=1030,nN=1031,sN=1033,km=33776,Am=33777,Nm=33778,Rm=33779,wy=35840,_y=35841,Sy=35842,Cy=35843,iN=36196,Iy=37492,Ty=37496,Ey=37808,My=37809,ky=37810,Ay=37811,Ny=37812,Ry=37813,$y=37814,Dy=37815,Fy=37816,Ly=37817,Py=37818,Oy=37819,zy=37820,By=37821,Uy=36492,ca=3e3,an=3001,rN=3200,oN=3201,Lf=0,aN=1,_r="srgb",jo="srgb-linear",$m=7680,lN=519,Vy=35044,Wy="300 es",qg=1035;class Ma{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const es=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Dm=Math.PI/180,Gy=180/Math.PI;function rc(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(es[s&255]+es[s>>8&255]+es[s>>16&255]+es[s>>24&255]+"-"+es[t&255]+es[t>>8&255]+"-"+es[t>>16&15|64]+es[t>>24&255]+"-"+es[e&63|128]+es[e>>8&255]+"-"+es[e>>16&255]+es[e>>24&255]+es[n&255]+es[n>>8&255]+es[n>>16&255]+es[n>>24&255]).toLowerCase()}function ns(s,t,e){return Math.max(t,Math.min(e,s))}function cN(s,t){return(s%t+t)%t}function Fm(s,t,e){return(1-e)*s+e*t}function Hy(s){return(s&s-1)===0&&s!==0}function Xg(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Kh(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function $s(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class Dt{constructor(t=0,e=0){Dt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ni{constructor(){ni.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=r,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],x=i[6],v=i[1],b=i[4],y=i[7],w=i[2],S=i[5],C=i[8];return r[0]=o*g+a*v+l*w,r[3]=o*m+a*b+l*S,r[6]=o*x+a*y+l*C,r[1]=c*g+u*v+h*w,r[4]=c*m+u*b+h*S,r[7]=c*x+u*y+h*C,r[2]=d*g+f*v+p*w,r[5]=d*m+f*b+p*S,r[8]=d*x+f*y+p*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*r*u+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*r,f=c*r-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return t[0]=h*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=d*g,t[4]=(u*e-i*l)*g,t[5]=(i*r-a*e)*g,t[6]=f*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=e*r+n*l,i[3]=e*o+n*c,i[6]=e*a+n*u,i[1]=-n*r+e*l,i[4]=-n*o+e*c,i[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function IS(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Jd(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function ea(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Gd(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Lm={[_r]:{[jo]:ea},[jo]:{[_r]:Gd}},xi={legacyMode:!0,get workingColorSpace(){return jo},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.legacyMode||t===e||!t||!e)return s;if(Lm[t]&&Lm[t][e]!==void 0){const n=Lm[t][e];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}},TS={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},En={r:0,g:0,b:0},vi={h:0,s:0,l:0},Yh={h:0,s:0,l:0};function Pm(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function Zh(s,t){return t.r=s.r,t.g=s.g,t.b=s.b,t}class Le{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=_r){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,xi.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=jo){return this.r=t,this.g=e,this.b=n,xi.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=jo){if(t=cN(t,1),e=ns(e,0,1),n=ns(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=Pm(o,r,t+1/3),this.g=Pm(o,r,t),this.b=Pm(o,r,t-1/3)}return xi.toWorkingColorSpace(this,i),this}setStyle(t,e=_r){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,xi.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,xi.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,u,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,xi.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,xi.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=_r){const n=TS[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ea(t.r),this.g=ea(t.g),this.b=ea(t.b),this}copyLinearToSRGB(t){return this.r=Gd(t.r),this.g=Gd(t.g),this.b=Gd(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=_r){return xi.fromWorkingColorSpace(Zh(this,En),t),ns(En.r*255,0,255)<<16^ns(En.g*255,0,255)<<8^ns(En.b*255,0,255)<<0}getHexString(t=_r){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=jo){xi.fromWorkingColorSpace(Zh(this,En),e);const n=En.r,i=En.g,r=En.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=jo){return xi.fromWorkingColorSpace(Zh(this,En),e),t.r=En.r,t.g=En.g,t.b=En.b,t}getStyle(t=_r){return xi.fromWorkingColorSpace(Zh(this,En),t),t!==_r?`color(${t} ${En.r} ${En.g} ${En.b})`:`rgb(${En.r*255|0},${En.g*255|0},${En.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(vi),vi.h+=t,vi.s+=e,vi.l+=n,this.setHSL(vi.h,vi.s,vi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(vi),t.getHSL(Yh);const n=Fm(vi.h,Yh.h,e),i=Fm(vi.s,Yh.s,e),r=Fm(vi.l,Yh.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Le.NAMES=TS;let Xa;class ES{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Xa===void 0&&(Xa=Jd("canvas")),Xa.width=t.width,Xa.height=t.height;const n=Xa.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Xa}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Jd("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=ea(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(ea(e[n]/255)*255):e[n]=ea(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class MS{constructor(t=null){this.isSource=!0,this.uuid=rc(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(Om(i[o].image)):r.push(Om(i[o]))}else r=Om(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function Om(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ES.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let uN=0;class $i extends Ma{constructor(t=$i.DEFAULT_IMAGE,e=$i.DEFAULT_MAPPING,n=Ti,i=Ti,r=Js,o=Ff,a=Ei,l=la,c=1,u=ca){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:uN++}),this.uuid=rc(),this.name="",this.source=new MS(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Dt(0,0),this.repeat=new Dt(1,1),this.center=new Dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ni,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==SS)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Gg:t.x=t.x-Math.floor(t.x);break;case Ti:t.x=t.x<0?0:1;break;case Hg:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Gg:t.y=t.y-Math.floor(t.y);break;case Ti:t.y=t.y<0?0:1;break;case Hg:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}$i.DEFAULT_IMAGE=null;$i.DEFAULT_MAPPING=SS;class Vn{constructor(t=0,e=0,n=0,i=1){Vn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+x-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const b=(c+1)/2,y=(f+1)/2,w=(x+1)/2,S=(u+d)/4,C=(h+g)/4,_=(p+m)/4;return b>y&&b>w?b<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(b),i=S/n,r=C/n):y>w?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=S/i,r=_/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=C/r,i=_/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-g)/v,this.z=(d-u)/v,this.w=Math.acos((c+f+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ua extends Ma{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Vn(0,0,t,e),this.scissorTest=!1,this.viewport=new Vn(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new $i(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Js,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new MS(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class kS extends $i{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ws,this.minFilter=ws,this.wrapR=Ti,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class hN extends $i{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ws,this.minFilter=ws,this.wrapR=Ti,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ha{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],g=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=g;return}if(h!==g||l!==d||c!==f||u!==p){let m=1-a;const x=l*d+c*f+u*p+h*g,v=x>=0?1:-1,b=1-x*x;if(b>Number.EPSILON){const w=Math.sqrt(b),S=Math.atan2(w,x*v);m=Math.sin(m*S)/w,a=Math.sin(a*S)/w}const y=a*v;if(l=l*m+d*y,c=c*m+f*y,u=u*m+p*y,h=h*m+g*y,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ns(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-n*c,this._z=r*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Y{constructor(t=0,e=0,n=0){Y.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(qy.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(qy.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-r*i,h=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+u*-a-h*-o,this.y=u*l+d*-o+h*-r-c*-a,this.z=h*l+d*-a+c*-o-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return zm.copy(this).projectOnVector(t),this.sub(zm)}reflect(t){return this.sub(zm.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ns(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zm=new Y,qy=new ha;class vu{constructor(t=new Y(1/0,1/0,1/0),e=new Y(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],h=t[l+1],d=t[l+2];u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),h=t.getY(l),d=t.getZ(l);u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ao.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)Ao.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Ao)}else n.boundingBox===null&&n.computeBoundingBox(),Bm.copy(n.boundingBox),Bm.applyMatrix4(t.matrixWorld),this.union(Bm);const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ao),Ao.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ic),Jh.subVectors(this.max,Ic),ja.subVectors(t.a,Ic),Ka.subVectors(t.b,Ic),Ya.subVectors(t.c,Ic),zr.subVectors(Ka,ja),Br.subVectors(Ya,Ka),No.subVectors(ja,Ya);let e=[0,-zr.z,zr.y,0,-Br.z,Br.y,0,-No.z,No.y,zr.z,0,-zr.x,Br.z,0,-Br.x,No.z,0,-No.x,-zr.y,zr.x,0,-Br.y,Br.x,0,-No.y,No.x,0];return!Um(e,ja,Ka,Ya,Jh)||(e=[1,0,0,0,1,0,0,0,1],!Um(e,ja,Ka,Ya,Jh))?!1:(Qh.crossVectors(zr,Br),e=[Qh.x,Qh.y,Qh.z],Um(e,ja,Ka,Ya,Jh))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ao.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Ao).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(hr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),hr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),hr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),hr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),hr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),hr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),hr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),hr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(hr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const hr=[new Y,new Y,new Y,new Y,new Y,new Y,new Y,new Y],Ao=new Y,Bm=new vu,ja=new Y,Ka=new Y,Ya=new Y,zr=new Y,Br=new Y,No=new Y,Ic=new Y,Jh=new Y,Qh=new Y,Ro=new Y;function Um(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Ro.fromArray(s,r);const a=i.x*Math.abs(Ro.x)+i.y*Math.abs(Ro.y)+i.z*Math.abs(Ro.z),l=t.dot(Ro),c=e.dot(Ro),u=n.dot(Ro);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const dN=new vu,Tc=new Y,Vm=new Y;class Pf{constructor(t=new Y,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):dN.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Tc.subVectors(t,this.center);const e=Tc.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Tc,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Vm.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Tc.copy(t.center).add(Vm)),this.expandByPoint(Tc.copy(t.center).sub(Vm))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const dr=new Y,Wm=new Y,td=new Y,Ur=new Y,Gm=new Y,ed=new Y,Hm=new Y;class qx{constructor(t=new Y,e=new Y(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,dr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=dr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(dr.copy(this.direction).multiplyScalar(e).add(this.origin),dr.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Wm.copy(t).add(e).multiplyScalar(.5),td.copy(e).sub(t).normalize(),Ur.copy(this.origin).sub(Wm);const r=t.distanceTo(e)*.5,o=-this.direction.dot(td),a=Ur.dot(this.direction),l=-Ur.dot(td),c=Ur.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=r*u,h>=0)if(d>=-p)if(d<=p){const g=1/u;h*=g,d*=g,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(td).multiplyScalar(d).add(Wm),f}intersectSphere(t,e){dr.subVectors(t.center,this.origin);const n=dr.dot(this.direction),i=dr.dot(dr)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),u>=0?(r=(t.min.y-d.y)*u,o=(t.max.y-d.y)*u):(r=(t.max.y-d.y)*u,o=(t.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-d.z)*h,l=(t.max.z-d.z)*h):(a=(t.max.z-d.z)*h,l=(t.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,dr)!==null}intersectTriangle(t,e,n,i,r){Gm.subVectors(e,t),ed.subVectors(n,t),Hm.crossVectors(Gm,ed);let o=this.direction.dot(Hm),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Ur.subVectors(this.origin,t);const l=a*this.direction.dot(ed.crossVectors(Ur,ed));if(l<0)return null;const c=a*this.direction.dot(Gm.cross(Ur));if(c<0||l+c>o)return null;const u=-a*Ur.dot(Hm);return u<0?null:this.at(u/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class mn{constructor(){mn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m){const x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=o,x[9]=a,x[13]=l,x[2]=c,x[6]=u,x[10]=h,x[14]=d,x[3]=f,x[7]=p,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new mn().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Za.setFromMatrixColumn(t,0).length(),r=1/Za.setFromMatrixColumn(t,1).length(),o=1/Za.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-g*c,e[9]=-a*l,e[2]=g-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d+g*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=g+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d-g*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=g-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+g,e[1]=l*h,e[5]=g*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=g-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-g*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+g,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=g*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(fN,t,pN)}lookAt(t,e,n){const i=this.elements;return Ds.subVectors(t,e),Ds.lengthSq()===0&&(Ds.z=1),Ds.normalize(),Vr.crossVectors(n,Ds),Vr.lengthSq()===0&&(Math.abs(n.z)===1?Ds.x+=1e-4:Ds.z+=1e-4,Ds.normalize(),Vr.crossVectors(n,Ds)),Vr.normalize(),nd.crossVectors(Ds,Vr),i[0]=Vr.x,i[4]=nd.x,i[8]=Ds.x,i[1]=Vr.y,i[5]=nd.y,i[9]=Ds.y,i[2]=Vr.z,i[6]=nd.z,i[10]=Ds.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],x=n[14],v=n[3],b=n[7],y=n[11],w=n[15],S=i[0],C=i[4],_=i[8],I=i[12],T=i[1],N=i[5],O=i[9],M=i[13],E=i[2],A=i[6],R=i[10],V=i[14],P=i[3],$=i[7],D=i[11],W=i[15];return r[0]=o*S+a*T+l*E+c*P,r[4]=o*C+a*N+l*A+c*$,r[8]=o*_+a*O+l*R+c*D,r[12]=o*I+a*M+l*V+c*W,r[1]=u*S+h*T+d*E+f*P,r[5]=u*C+h*N+d*A+f*$,r[9]=u*_+h*O+d*R+f*D,r[13]=u*I+h*M+d*V+f*W,r[2]=p*S+g*T+m*E+x*P,r[6]=p*C+g*N+m*A+x*$,r[10]=p*_+g*O+m*R+x*D,r[14]=p*I+g*M+m*V+x*W,r[3]=v*S+b*T+y*E+w*P,r[7]=v*C+b*N+y*A+w*$,r[11]=v*_+b*O+y*R+w*D,r[15]=v*I+b*M+y*V+w*W,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],g=t[7],m=t[11],x=t[15];return p*(+r*l*h-i*c*h-r*a*d+n*c*d+i*a*f-n*l*f)+g*(+e*l*f-e*c*d+r*o*d-i*o*f+i*c*u-r*l*u)+m*(+e*c*h-e*a*f-r*o*h+n*o*f+r*a*u-n*c*u)+x*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],g=t[13],m=t[14],x=t[15],v=h*m*c-g*d*c+g*l*f-a*m*f-h*l*x+a*d*x,b=p*d*c-u*m*c-p*l*f+o*m*f+u*l*x-o*d*x,y=u*g*c-p*h*c+p*a*f-o*g*f-u*a*x+o*h*x,w=p*h*l-u*g*l-p*a*d+o*g*d+u*a*m-o*h*m,S=e*v+n*b+i*y+r*w;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/S;return t[0]=v*C,t[1]=(g*d*r-h*m*r-g*i*f+n*m*f+h*i*x-n*d*x)*C,t[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*x+n*l*x)*C,t[3]=(h*l*r-a*d*r-h*i*c+n*d*c+a*i*f-n*l*f)*C,t[4]=b*C,t[5]=(u*m*r-p*d*r+p*i*f-e*m*f-u*i*x+e*d*x)*C,t[6]=(p*l*r-o*m*r-p*i*c+e*m*c+o*i*x-e*l*x)*C,t[7]=(o*d*r-u*l*r+u*i*c-e*d*c-o*i*f+e*l*f)*C,t[8]=y*C,t[9]=(p*h*r-u*g*r-p*n*f+e*g*f+u*n*x-e*h*x)*C,t[10]=(o*g*r-p*a*r+p*n*c-e*g*c-o*n*x+e*a*x)*C,t[11]=(u*a*r-o*h*r-u*n*c+e*h*c+o*n*f-e*a*f)*C,t[12]=w*C,t[13]=(u*g*i-p*h*i+p*n*d-e*g*d-u*n*m+e*h*m)*C,t[14]=(p*a*i-o*g*i-p*n*l+e*g*l+o*n*m-e*a*m)*C,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*C,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,u=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,u=o+o,h=a+a,d=r*c,f=r*u,p=r*h,g=o*u,m=o*h,x=a*h,v=l*c,b=l*u,y=l*h,w=n.x,S=n.y,C=n.z;return i[0]=(1-(g+x))*w,i[1]=(f+y)*w,i[2]=(p-b)*w,i[3]=0,i[4]=(f-y)*S,i[5]=(1-(d+x))*S,i[6]=(m+v)*S,i[7]=0,i[8]=(p+b)*C,i[9]=(m-v)*C,i[10]=(1-(d+g))*C,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Za.set(i[0],i[1],i[2]).length();const o=Za.set(i[4],i[5],i[6]).length(),a=Za.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],bi.copy(this);const c=1/r,u=1/o,h=1/a;return bi.elements[0]*=c,bi.elements[1]*=c,bi.elements[2]*=c,bi.elements[4]*=u,bi.elements[5]*=u,bi.elements[6]*=u,bi.elements[8]*=h,bi.elements[9]*=h,bi.elements[10]*=h,e.setFromRotationMatrix(bi),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-i),u=(e+t)/(e-t),h=(n+i)/(n-i),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,o){const a=this.elements,l=1/(e-t),c=1/(n-i),u=1/(o-r),h=(e+t)*l,d=(n+i)*c,f=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Za=new Y,bi=new mn,fN=new Y(0,0,0),pN=new Y(1,1,1),Vr=new Y,nd=new Y,Ds=new Y,Xy=new mn,jy=new ha;class bu{constructor(t=0,e=0,n=0,i=bu.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(ns(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ns(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ns(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-ns(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ns(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ns(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Xy.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Xy,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return jy.setFromEuler(this),this.setFromQuaternion(jy,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}bu.DefaultOrder="XYZ";bu.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Xx{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let mN=0;const Ky=new Y,Ja=new ha,fr=new mn,sd=new Y,Ec=new Y,gN=new Y,xN=new ha,Yy=new Y(1,0,0),Zy=new Y(0,1,0),Jy=new Y(0,0,1),vN={type:"added"},Qy={type:"removed"};class Wn extends Ma{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:mN++}),this.uuid=rc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Wn.DefaultUp.clone();const t=new Y,e=new bu,n=new ha,i=new Y(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new mn},normalMatrix:{value:new ni}}),this.matrix=new mn,this.matrixWorld=new mn,this.matrixAutoUpdate=Wn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Wn.DefaultMatrixWorldAutoUpdate,this.layers=new Xx,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ja.setFromAxisAngle(t,e),this.quaternion.multiply(Ja),this}rotateOnWorldAxis(t,e){return Ja.setFromAxisAngle(t,e),this.quaternion.premultiply(Ja),this}rotateX(t){return this.rotateOnAxis(Yy,t)}rotateY(t){return this.rotateOnAxis(Zy,t)}rotateZ(t){return this.rotateOnAxis(Jy,t)}translateOnAxis(t,e){return Ky.copy(t).applyQuaternion(this.quaternion),this.position.add(Ky.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Yy,t)}translateY(t){return this.translateOnAxis(Zy,t)}translateZ(t){return this.translateOnAxis(Jy,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(fr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?sd.copy(t):sd.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ec.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?fr.lookAt(Ec,sd,this.up):fr.lookAt(sd,Ec,this.up),this.quaternion.setFromRotationMatrix(fr),i&&(fr.extractRotation(i.matrixWorld),Ja.setFromRotationMatrix(fr),this.quaternion.premultiply(Ja.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(vN)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Qy)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Qy)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),fr.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),fr.multiply(t.parent.matrixWorld)),t.applyMatrix4(fr),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ec,t,gN),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ec,xN,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(t.shapes,h)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Wn.DefaultUp=new Y(0,1,0);Wn.DefaultMatrixAutoUpdate=!0;Wn.DefaultMatrixWorldAutoUpdate=!0;const yi=new Y,pr=new Y,qm=new Y,mr=new Y,Qa=new Y,tl=new Y,tw=new Y,Xm=new Y,jm=new Y,Km=new Y;class Cr{constructor(t=new Y,e=new Y,n=new Y){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),yi.subVectors(t,e),i.cross(yi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){yi.subVectors(i,e),pr.subVectors(n,e),qm.subVectors(t,e);const o=yi.dot(yi),a=yi.dot(pr),l=yi.dot(qm),c=pr.dot(pr),u=pr.dot(qm),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,mr),mr.x>=0&&mr.y>=0&&mr.x+mr.y<=1}static getUV(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,mr),l.set(0,0),l.addScaledVector(r,mr.x),l.addScaledVector(o,mr.y),l.addScaledVector(a,mr.z),l}static isFrontFacing(t,e,n,i){return yi.subVectors(n,e),pr.subVectors(t,e),yi.cross(pr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return yi.subVectors(this.c,this.b),pr.subVectors(this.a,this.b),yi.cross(pr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Cr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Cr.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return Cr.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return Cr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Cr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;Qa.subVectors(i,n),tl.subVectors(r,n),Xm.subVectors(t,n);const l=Qa.dot(Xm),c=tl.dot(Xm);if(l<=0&&c<=0)return e.copy(n);jm.subVectors(t,i);const u=Qa.dot(jm),h=tl.dot(jm);if(u>=0&&h<=u)return e.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(Qa,o);Km.subVectors(t,r);const f=Qa.dot(Km),p=tl.dot(Km);if(p>=0&&f<=p)return e.copy(r);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),e.copy(n).addScaledVector(tl,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return tw.subVectors(r,i),a=(h-u)/(h-u+(f-p)),e.copy(i).addScaledVector(tw,a);const x=1/(m+g+d);return o=g*x,a=d*x,e.copy(n).addScaledVector(Qa,o).addScaledVector(tl,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let bN=0;class fo extends Ma{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:bN++}),this.uuid=rc(),this.name="",this.type="Material",this.blending=Il,this.side=Fl,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=wS,this.blendDst=_S,this.blendEquation=pl,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ug,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=lN,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=$m,this.stencilZFail=$m,this.stencilZPass=$m,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Il&&(n.blending=this.blending),this.side!==Fl&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ka extends fo{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$f,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const bn=new Y,id=new Dt;class er{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Vy,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)id.fromBufferAttribute(this,e),id.applyMatrix3(t),this.setXY(e,id.x,id.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)bn.fromBufferAttribute(this,e),bn.applyMatrix3(t),this.setXYZ(e,bn.x,bn.y,bn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)bn.fromBufferAttribute(this,e),bn.applyMatrix4(t),this.setXYZ(e,bn.x,bn.y,bn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)bn.fromBufferAttribute(this,e),bn.applyNormalMatrix(t),this.setXYZ(e,bn.x,bn.y,bn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)bn.fromBufferAttribute(this,e),bn.transformDirection(t),this.setXYZ(e,bn.x,bn.y,bn.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Kh(e,this.array)),e}setX(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Kh(e,this.array)),e}setY(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Kh(e,this.array)),e}setZ(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Kh(e,this.array)),e}setW(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=$s(e,this.array),n=$s(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=$s(e,this.array),n=$s(n,this.array),i=$s(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=$s(e,this.array),n=$s(n,this.array),i=$s(i,this.array),r=$s(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Vy&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class AS extends er{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class NS extends er{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class gn extends er{constructor(t,e,n){super(new Float32Array(t),e,n)}}let yN=0;const qs=new mn,Ym=new Wn,el=new Y,Fs=new vu,Mc=new vu,zn=new Y;class Bs extends Ma{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:yN++}),this.uuid=rc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(IS(t)?NS:AS)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new ni().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return qs.makeRotationFromQuaternion(t),this.applyMatrix4(qs),this}rotateX(t){return qs.makeRotationX(t),this.applyMatrix4(qs),this}rotateY(t){return qs.makeRotationY(t),this.applyMatrix4(qs),this}rotateZ(t){return qs.makeRotationZ(t),this.applyMatrix4(qs),this}translate(t,e,n){return qs.makeTranslation(t,e,n),this.applyMatrix4(qs),this}scale(t,e,n){return qs.makeScale(t,e,n),this.applyMatrix4(qs),this}lookAt(t){return Ym.lookAt(t),Ym.updateMatrix(),this.applyMatrix4(Ym.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(el).negate(),this.translate(el.x,el.y,el.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new gn(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vu);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new Y(-1/0,-1/0,-1/0),new Y(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Fs.setFromBufferAttribute(r),this.morphTargetsRelative?(zn.addVectors(this.boundingBox.min,Fs.min),this.boundingBox.expandByPoint(zn),zn.addVectors(this.boundingBox.max,Fs.max),this.boundingBox.expandByPoint(zn)):(this.boundingBox.expandByPoint(Fs.min),this.boundingBox.expandByPoint(Fs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Pf);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new Y,1/0);return}if(t){const n=this.boundingSphere.center;if(Fs.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];Mc.setFromBufferAttribute(a),this.morphTargetsRelative?(zn.addVectors(Fs.min,Mc.min),Fs.expandByPoint(zn),zn.addVectors(Fs.max,Mc.max),Fs.expandByPoint(zn)):(Fs.expandByPoint(Mc.min),Fs.expandByPoint(Mc.max))}Fs.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)zn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(zn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)zn.fromBufferAttribute(a,c),l&&(el.fromBufferAttribute(t,c),zn.add(el)),i=Math.max(i,n.distanceToSquared(zn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new er(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let T=0;T<a;T++)c[T]=new Y,u[T]=new Y;const h=new Y,d=new Y,f=new Y,p=new Dt,g=new Dt,m=new Dt,x=new Y,v=new Y;function b(T,N,O){h.fromArray(i,T*3),d.fromArray(i,N*3),f.fromArray(i,O*3),p.fromArray(o,T*2),g.fromArray(o,N*2),m.fromArray(o,O*2),d.sub(h),f.sub(h),g.sub(p),m.sub(p);const M=1/(g.x*m.y-m.x*g.y);!isFinite(M)||(x.copy(d).multiplyScalar(m.y).addScaledVector(f,-g.y).multiplyScalar(M),v.copy(f).multiplyScalar(g.x).addScaledVector(d,-m.x).multiplyScalar(M),c[T].add(x),c[N].add(x),c[O].add(x),u[T].add(v),u[N].add(v),u[O].add(v))}let y=this.groups;y.length===0&&(y=[{start:0,count:n.length}]);for(let T=0,N=y.length;T<N;++T){const O=y[T],M=O.start,E=O.count;for(let A=M,R=M+E;A<R;A+=3)b(n[A+0],n[A+1],n[A+2])}const w=new Y,S=new Y,C=new Y,_=new Y;function I(T){C.fromArray(r,T*3),_.copy(C);const N=c[T];w.copy(N),w.sub(C.multiplyScalar(C.dot(N))).normalize(),S.crossVectors(_,N);const M=S.dot(u[T])<0?-1:1;l[T*4]=w.x,l[T*4+1]=w.y,l[T*4+2]=w.z,l[T*4+3]=M}for(let T=0,N=y.length;T<N;++T){const O=y[T],M=O.start,E=O.count;for(let A=M,R=M+E;A<R;A+=3)I(n[A+0]),I(n[A+1]),I(n[A+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new er(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new Y,r=new Y,o=new Y,a=new Y,l=new Y,c=new Y,u=new Y,h=new Y;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),g=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,g),o.fromBufferAttribute(e,m),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)zn.fromBufferAttribute(t,e),zn.normalize(),t.setXYZ(e,zn.x,zn.y,zn.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*u;for(let x=0;x<u;x++)d[p++]=c[f++]}return new er(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Bs,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(t.data))}u.length>0&&(i[l]=u,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const r=t.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const ew=new mn,nl=new qx,Zm=new Pf,Wr=new Y,Gr=new Y,Hr=new Y,Jm=new Y,Qm=new Y,tg=new Y,rd=new Y,od=new Y,ad=new Y,ld=new Dt,cd=new Dt,ud=new Dt,eg=new Y,hd=new Y;class sn extends Wn{constructor(t=new Bs,e=new ka){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Zm.copy(n.boundingSphere),Zm.applyMatrix4(r),t.ray.intersectsSphere(Zm)===!1)||(ew.copy(r).invert(),nl.copy(t.ray).applyMatrix4(ew),n.boundingBox!==null&&nl.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],v=i[x.materialIndex],b=Math.max(x.start,p.start),y=Math.min(a.count,Math.min(x.start+x.count,p.start+p.count));for(let w=b,S=y;w<S;w+=3){const C=a.getX(w),_=a.getX(w+1),I=a.getX(w+2);o=dd(this,v,t,nl,l,c,u,h,d,C,_,I),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let x=g,v=m;x<v;x+=3){const b=a.getX(x),y=a.getX(x+1),w=a.getX(x+2);o=dd(this,i,t,nl,l,c,u,h,d,b,y,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],v=i[x.materialIndex],b=Math.max(x.start,p.start),y=Math.min(l.count,Math.min(x.start+x.count,p.start+p.count));for(let w=b,S=y;w<S;w+=3){const C=w,_=w+1,I=w+2;o=dd(this,v,t,nl,l,c,u,h,d,C,_,I),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let x=g,v=m;x<v;x+=3){const b=x,y=x+1,w=x+2;o=dd(this,i,t,nl,l,c,u,h,d,b,y,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}}}function wN(s,t,e,n,i,r,o,a){let l;if(t.side===li?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,t.side!==ei,a),l===null)return null;hd.copy(a),hd.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(hd);return c<e.near||c>e.far?null:{distance:c,point:hd.clone(),object:s}}function dd(s,t,e,n,i,r,o,a,l,c,u,h){Wr.fromBufferAttribute(i,c),Gr.fromBufferAttribute(i,u),Hr.fromBufferAttribute(i,h);const d=s.morphTargetInfluences;if(r&&d){rd.set(0,0,0),od.set(0,0,0),ad.set(0,0,0);for(let p=0,g=r.length;p<g;p++){const m=d[p],x=r[p];m!==0&&(Jm.fromBufferAttribute(x,c),Qm.fromBufferAttribute(x,u),tg.fromBufferAttribute(x,h),o?(rd.addScaledVector(Jm,m),od.addScaledVector(Qm,m),ad.addScaledVector(tg,m)):(rd.addScaledVector(Jm.sub(Wr),m),od.addScaledVector(Qm.sub(Gr),m),ad.addScaledVector(tg.sub(Hr),m)))}Wr.add(rd),Gr.add(od),Hr.add(ad)}s.isSkinnedMesh&&(s.boneTransform(c,Wr),s.boneTransform(u,Gr),s.boneTransform(h,Hr));const f=wN(s,t,e,n,Wr,Gr,Hr,eg);if(f){a&&(ld.fromBufferAttribute(a,c),cd.fromBufferAttribute(a,u),ud.fromBufferAttribute(a,h),f.uv=Cr.getUV(eg,Wr,Gr,Hr,ld,cd,ud,new Dt)),l&&(ld.fromBufferAttribute(l,c),cd.fromBufferAttribute(l,u),ud.fromBufferAttribute(l,h),f.uv2=Cr.getUV(eg,Wr,Gr,Hr,ld,cd,ud,new Dt));const p={a:c,b:u,c:h,normal:new Y,materialIndex:0};Cr.getNormal(Wr,Gr,Hr,p.normal),f.face=p}return f}class po extends Bs{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new gn(c,3)),this.setAttribute("normal",new gn(u,3)),this.setAttribute("uv",new gn(h,2));function p(g,m,x,v,b,y,w,S,C,_,I){const T=y/C,N=w/_,O=y/2,M=w/2,E=S/2,A=C+1,R=_+1;let V=0,P=0;const $=new Y;for(let D=0;D<R;D++){const W=D*N-M;for(let G=0;G<A;G++){const X=G*T-O;$[g]=X*v,$[m]=W*b,$[x]=E,c.push($.x,$.y,$.z),$[g]=0,$[m]=0,$[x]=S>0?1:-1,u.push($.x,$.y,$.z),h.push(G/C),h.push(1-D/_),V+=1}}for(let D=0;D<_;D++)for(let W=0;W<C;W++){const G=d+W+A*D,X=d+W+A*(D+1),it=d+(W+1)+A*(D+1),at=d+(W+1)+A*D;l.push(G,X,at),l.push(X,it,at),P+=6}a.addGroup(f,P,I),f+=P,d+=V}}static fromJSON(t){return new po(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function zl(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function hs(s){const t={};for(let e=0;e<s.length;e++){const n=zl(s[e]);for(const i in n)t[i]=n[i]}return t}function _N(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}const SN={clone:zl,merge:hs};var CN=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,IN=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class da extends fo{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=CN,this.fragmentShader=IN,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=zl(t.uniforms),this.uniformsGroups=_N(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class RS extends Wn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new mn,this.projectionMatrix=new mn,this.projectionMatrixInverse=new mn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Qs extends RS{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Gy*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Dm*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Gy*2*Math.atan(Math.tan(Dm*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Dm*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const sl=90,il=1;class TN extends Wn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new Qs(sl,il,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Y(1,0,0)),this.add(i);const r=new Qs(sl,il,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Y(-1,0,0)),this.add(r);const o=new Qs(sl,il,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new Y(0,1,0)),this.add(o);const a=new Qs(sl,il,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new Y(0,-1,0)),this.add(a);const l=new Qs(sl,il,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Y(0,0,1)),this.add(l);const c=new Qs(sl,il,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new Y(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,u=t.getRenderTarget(),h=t.toneMapping,d=t.xr.enabled;t.toneMapping=Er,t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.toneMapping=h,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class $S extends $i{constructor(t,e,n,i,r,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:Ll,super(t,e,n,i,r,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class EN extends ua{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new $S(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Js}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new po(5,5,5),r=new da({name:"CubemapFromEquirect",uniforms:zl(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:li,blending:Yr});r.uniforms.tEquirect.value=e;const o=new sn(i,r),a=e.minFilter;return e.minFilter===Ff&&(e.minFilter=Js),new TN(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const ng=new Y,MN=new Y,kN=new ni;class Po{constructor(t=new Y(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ng.subVectors(n,e).cross(MN.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(ng),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||kN.getNormalMatrix(t),i=this.coplanarPoint(ng).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const rl=new Pf,fd=new Y;class jx{constructor(t=new Po,e=new Po,n=new Po,i=new Po,r=new Po,o=new Po){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],p=n[10],g=n[11],m=n[12],x=n[13],v=n[14],b=n[15];return e[0].setComponents(a-i,h-l,g-d,b-m).normalize(),e[1].setComponents(a+i,h+l,g+d,b+m).normalize(),e[2].setComponents(a+r,h+c,g+f,b+x).normalize(),e[3].setComponents(a-r,h-c,g-f,b-x).normalize(),e[4].setComponents(a-o,h-u,g-p,b-v).normalize(),e[5].setComponents(a+o,h+u,g+p,b+v).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),rl.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(rl)}intersectsSprite(t){return rl.center.set(0,0,0),rl.radius=.7071067811865476,rl.applyMatrix4(t.matrixWorld),this.intersectsSphere(rl)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(fd.x=i.normal.x>0?t.max.x:t.min.x,fd.y=i.normal.y>0?t.max.y:t.min.y,fd.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(fd)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function DS(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function AN(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,d=c.usage,f=s.createBuffer();s.bindBuffer(u,f),s.bufferData(u,h,d),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,f=u.updateRange;s.bindBuffer(h,c),f.count===-1?s.bufferSubData(h,0,d):(e?s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class Of extends Bs{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,d=e/l,f=[],p=[],g=[],m=[];for(let x=0;x<u;x++){const v=x*d-o;for(let b=0;b<c;b++){const y=b*h-r;p.push(y,-v,0),g.push(0,0,1),m.push(b/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let v=0;v<a;v++){const b=v+c*x,y=v+c*(x+1),w=v+1+c*(x+1),S=v+1+c*x;f.push(b,y,S),f.push(y,w,S)}this.setIndex(f),this.setAttribute("position",new gn(p,3)),this.setAttribute("normal",new gn(g,3)),this.setAttribute("uv",new gn(m,2))}static fromJSON(t){return new Of(t.width,t.height,t.widthSegments,t.heightSegments)}}var NN=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,RN=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,$N=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,DN=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,FN=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,LN=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,PN="vec3 transformed = vec3( position );",ON=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,zN=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,BN=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,UN=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,VN=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,WN=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,GN=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,HN=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,qN=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,XN=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,jN=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,KN=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,YN=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,ZN=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,JN=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,QN=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,tR=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,eR=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,nR=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,sR="gl_FragColor = linearToOutputTexel( gl_FragColor );",iR=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,oR=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,aR=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,lR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,cR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,uR=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,hR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,dR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,pR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,mR=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,gR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,xR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,vR=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,bR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,yR=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,wR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,_R=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,SR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,CR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,IR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,TR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ER=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,MR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,AR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,NR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,RR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,$R=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,DR=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,FR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,LR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,PR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,OR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,zR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,BR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,UR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,VR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,WR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,GR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,HR=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,qR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,XR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,jR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,KR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,YR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,ZR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,JR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,QR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,t$=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,e$=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,n$=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,s$=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,i$=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,r$=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,o$=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,a$=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,l$=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,c$=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,u$=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,h$=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,d$=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,f$=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,p$=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,m$=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,g$=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,x$=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,v$=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,b$=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,y$=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,w$=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,_$=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,S$=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,C$=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,I$=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,T$=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,E$=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,M$=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const k$=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,A$=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,N$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,R$=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,$$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,D$=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,F$=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,L$=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,P$=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,O$=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,z$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,B$=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,U$=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,V$=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,W$=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,G$=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,H$=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,q$=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,X$=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,j$=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,K$=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Y$=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Z$=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,J$=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Q$=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,tD=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eD=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nD=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sD=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,iD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,rD=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oD=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,aD=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,be={alphamap_fragment:NN,alphamap_pars_fragment:RN,alphatest_fragment:$N,alphatest_pars_fragment:DN,aomap_fragment:FN,aomap_pars_fragment:LN,begin_vertex:PN,beginnormal_vertex:ON,bsdfs:zN,iridescence_fragment:BN,bumpmap_pars_fragment:UN,clipping_planes_fragment:VN,clipping_planes_pars_fragment:WN,clipping_planes_pars_vertex:GN,clipping_planes_vertex:HN,color_fragment:qN,color_pars_fragment:XN,color_pars_vertex:jN,color_vertex:KN,common:YN,cube_uv_reflection_fragment:ZN,defaultnormal_vertex:JN,displacementmap_pars_vertex:QN,displacementmap_vertex:tR,emissivemap_fragment:eR,emissivemap_pars_fragment:nR,encodings_fragment:sR,encodings_pars_fragment:iR,envmap_fragment:rR,envmap_common_pars_fragment:oR,envmap_pars_fragment:aR,envmap_pars_vertex:lR,envmap_physical_pars_fragment:yR,envmap_vertex:cR,fog_vertex:uR,fog_pars_vertex:hR,fog_fragment:dR,fog_pars_fragment:fR,gradientmap_pars_fragment:pR,lightmap_fragment:mR,lightmap_pars_fragment:gR,lights_lambert_fragment:xR,lights_lambert_pars_fragment:vR,lights_pars_begin:bR,lights_toon_fragment:wR,lights_toon_pars_fragment:_R,lights_phong_fragment:SR,lights_phong_pars_fragment:CR,lights_physical_fragment:IR,lights_physical_pars_fragment:TR,lights_fragment_begin:ER,lights_fragment_maps:MR,lights_fragment_end:kR,logdepthbuf_fragment:AR,logdepthbuf_pars_fragment:NR,logdepthbuf_pars_vertex:RR,logdepthbuf_vertex:$R,map_fragment:DR,map_pars_fragment:FR,map_particle_fragment:LR,map_particle_pars_fragment:PR,metalnessmap_fragment:OR,metalnessmap_pars_fragment:zR,morphcolor_vertex:BR,morphnormal_vertex:UR,morphtarget_pars_vertex:VR,morphtarget_vertex:WR,normal_fragment_begin:GR,normal_fragment_maps:HR,normal_pars_fragment:qR,normal_pars_vertex:XR,normal_vertex:jR,normalmap_pars_fragment:KR,clearcoat_normal_fragment_begin:YR,clearcoat_normal_fragment_maps:ZR,clearcoat_pars_fragment:JR,iridescence_pars_fragment:QR,output_fragment:t$,packing:e$,premultiplied_alpha_fragment:n$,project_vertex:s$,dithering_fragment:i$,dithering_pars_fragment:r$,roughnessmap_fragment:o$,roughnessmap_pars_fragment:a$,shadowmap_pars_fragment:l$,shadowmap_pars_vertex:c$,shadowmap_vertex:u$,shadowmask_pars_fragment:h$,skinbase_vertex:d$,skinning_pars_vertex:f$,skinning_vertex:p$,skinnormal_vertex:m$,specularmap_fragment:g$,specularmap_pars_fragment:x$,tonemapping_fragment:v$,tonemapping_pars_fragment:b$,transmission_fragment:y$,transmission_pars_fragment:w$,uv_pars_fragment:_$,uv_pars_vertex:S$,uv_vertex:C$,uv2_pars_fragment:I$,uv2_pars_vertex:T$,uv2_vertex:E$,worldpos_vertex:M$,background_vert:k$,background_frag:A$,backgroundCube_vert:N$,backgroundCube_frag:R$,cube_vert:$$,cube_frag:D$,depth_vert:F$,depth_frag:L$,distanceRGBA_vert:P$,distanceRGBA_frag:O$,equirect_vert:z$,equirect_frag:B$,linedashed_vert:U$,linedashed_frag:V$,meshbasic_vert:W$,meshbasic_frag:G$,meshlambert_vert:H$,meshlambert_frag:q$,meshmatcap_vert:X$,meshmatcap_frag:j$,meshnormal_vert:K$,meshnormal_frag:Y$,meshphong_vert:Z$,meshphong_frag:J$,meshphysical_vert:Q$,meshphysical_frag:tD,meshtoon_vert:eD,meshtoon_frag:nD,points_vert:sD,points_frag:iD,shadow_vert:rD,shadow_frag:oD,sprite_vert:aD,sprite_frag:lD},Mt={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new ni},uv2Transform:{value:new ni},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ni}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new Dt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ni}}},Yi={basic:{uniforms:hs([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.fog]),vertexShader:be.meshbasic_vert,fragmentShader:be.meshbasic_frag},lambert:{uniforms:hs([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,Mt.lights,{emissive:{value:new Le(0)}}]),vertexShader:be.meshlambert_vert,fragmentShader:be.meshlambert_frag},phong:{uniforms:hs([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,Mt.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:be.meshphong_vert,fragmentShader:be.meshphong_frag},standard:{uniforms:hs([Mt.common,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.roughnessmap,Mt.metalnessmap,Mt.fog,Mt.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:be.meshphysical_vert,fragmentShader:be.meshphysical_frag},toon:{uniforms:hs([Mt.common,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.gradientmap,Mt.fog,Mt.lights,{emissive:{value:new Le(0)}}]),vertexShader:be.meshtoon_vert,fragmentShader:be.meshtoon_frag},matcap:{uniforms:hs([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,{matcap:{value:null}}]),vertexShader:be.meshmatcap_vert,fragmentShader:be.meshmatcap_frag},points:{uniforms:hs([Mt.points,Mt.fog]),vertexShader:be.points_vert,fragmentShader:be.points_frag},dashed:{uniforms:hs([Mt.common,Mt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:be.linedashed_vert,fragmentShader:be.linedashed_frag},depth:{uniforms:hs([Mt.common,Mt.displacementmap]),vertexShader:be.depth_vert,fragmentShader:be.depth_frag},normal:{uniforms:hs([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,{opacity:{value:1}}]),vertexShader:be.meshnormal_vert,fragmentShader:be.meshnormal_frag},sprite:{uniforms:hs([Mt.sprite,Mt.fog]),vertexShader:be.sprite_vert,fragmentShader:be.sprite_frag},background:{uniforms:{uvTransform:{value:new ni},t2D:{value:null}},vertexShader:be.background_vert,fragmentShader:be.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:be.backgroundCube_vert,fragmentShader:be.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:be.cube_vert,fragmentShader:be.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:be.equirect_vert,fragmentShader:be.equirect_frag},distanceRGBA:{uniforms:hs([Mt.common,Mt.displacementmap,{referencePosition:{value:new Y},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:be.distanceRGBA_vert,fragmentShader:be.distanceRGBA_frag},shadow:{uniforms:hs([Mt.lights,Mt.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:be.shadow_vert,fragmentShader:be.shadow_frag}};Yi.physical={uniforms:hs([Yi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Dt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null}}]),vertexShader:be.meshphysical_vert,fragmentShader:be.meshphysical_frag};function cD(s,t,e,n,i,r,o){const a=new Le(0);let l=r===!0?0:1,c,u,h=null,d=0,f=null;function p(m,x){let v=!1,b=x.isScene===!0?x.background:null;b&&b.isTexture&&(b=(x.backgroundBlurriness>0?e:t).get(b));const y=s.xr,w=y.getSession&&y.getSession();w&&w.environmentBlendMode==="additive"&&(b=null),b===null?g(a,l):b&&b.isColor&&(g(b,1),v=!0),(s.autoClear||v)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),b&&(b.isCubeTexture||b.mapping===Df)?(u===void 0&&(u=new sn(new po(1,1,1),new da({name:"BackgroundCubeMaterial",uniforms:zl(Yi.backgroundCube.uniforms),vertexShader:Yi.backgroundCube.vertexShader,fragmentShader:Yi.backgroundCube.fragmentShader,side:li,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,C,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=b,u.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,(h!==b||d!==b.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=b,d=b.version,f=s.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):b&&b.isTexture&&(c===void 0&&(c=new sn(new Of(2,2),new da({name:"BackgroundMaterial",uniforms:zl(Yi.background.uniforms),vertexShader:Yi.background.vertexShader,fragmentShader:Yi.background.fragmentShader,side:Fl,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=b,b.matrixAutoUpdate===!0&&b.updateMatrix(),c.material.uniforms.uvTransform.value.copy(b.matrix),(h!==b||d!==b.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,h=b,d=b.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function g(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(m,x=1){a.set(m),l=x,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:p}}function uD(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,u=!1;function h(E,A,R,V,P){let $=!1;if(o){const D=g(V,R,A);c!==D&&(c=D,f(c.object)),$=x(E,V,R,P),$&&v(E,V,R,P)}else{const D=A.wireframe===!0;(c.geometry!==V.id||c.program!==R.id||c.wireframe!==D)&&(c.geometry=V.id,c.program=R.id,c.wireframe=D,$=!0)}P!==null&&e.update(P,34963),($||u)&&(u=!1,_(E,A,R,V),P!==null&&s.bindBuffer(34963,e.get(P).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(E){return n.isWebGL2?s.bindVertexArray(E):r.bindVertexArrayOES(E)}function p(E){return n.isWebGL2?s.deleteVertexArray(E):r.deleteVertexArrayOES(E)}function g(E,A,R){const V=R.wireframe===!0;let P=a[E.id];P===void 0&&(P={},a[E.id]=P);let $=P[A.id];$===void 0&&($={},P[A.id]=$);let D=$[V];return D===void 0&&(D=m(d()),$[V]=D),D}function m(E){const A=[],R=[],V=[];for(let P=0;P<i;P++)A[P]=0,R[P]=0,V[P]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:R,attributeDivisors:V,object:E,attributes:{},index:null}}function x(E,A,R,V){const P=c.attributes,$=A.attributes;let D=0;const W=R.getAttributes();for(const G in W)if(W[G].location>=0){const it=P[G];let at=$[G];if(at===void 0&&(G==="instanceMatrix"&&E.instanceMatrix&&(at=E.instanceMatrix),G==="instanceColor"&&E.instanceColor&&(at=E.instanceColor)),it===void 0||it.attribute!==at||at&&it.data!==at.data)return!0;D++}return c.attributesNum!==D||c.index!==V}function v(E,A,R,V){const P={},$=A.attributes;let D=0;const W=R.getAttributes();for(const G in W)if(W[G].location>=0){let it=$[G];it===void 0&&(G==="instanceMatrix"&&E.instanceMatrix&&(it=E.instanceMatrix),G==="instanceColor"&&E.instanceColor&&(it=E.instanceColor));const at={};at.attribute=it,it&&it.data&&(at.data=it.data),P[G]=at,D++}c.attributes=P,c.attributesNum=D,c.index=V}function b(){const E=c.newAttributes;for(let A=0,R=E.length;A<R;A++)E[A]=0}function y(E){w(E,0)}function w(E,A){const R=c.newAttributes,V=c.enabledAttributes,P=c.attributeDivisors;R[E]=1,V[E]===0&&(s.enableVertexAttribArray(E),V[E]=1),P[E]!==A&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](E,A),P[E]=A)}function S(){const E=c.newAttributes,A=c.enabledAttributes;for(let R=0,V=A.length;R<V;R++)A[R]!==E[R]&&(s.disableVertexAttribArray(R),A[R]=0)}function C(E,A,R,V,P,$){n.isWebGL2===!0&&(R===5124||R===5125)?s.vertexAttribIPointer(E,A,R,P,$):s.vertexAttribPointer(E,A,R,V,P,$)}function _(E,A,R,V){if(n.isWebGL2===!1&&(E.isInstancedMesh||V.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;b();const P=V.attributes,$=R.getAttributes(),D=A.defaultAttributeValues;for(const W in $){const G=$[W];if(G.location>=0){let X=P[W];if(X===void 0&&(W==="instanceMatrix"&&E.instanceMatrix&&(X=E.instanceMatrix),W==="instanceColor"&&E.instanceColor&&(X=E.instanceColor)),X!==void 0){const it=X.normalized,at=X.itemSize,J=e.get(X);if(J===void 0)continue;const bt=J.buffer,xt=J.type,vt=J.bytesPerElement;if(X.isInterleavedBufferAttribute){const pt=X.data,At=pt.stride,Rt=X.offset;if(pt.isInstancedInterleavedBuffer){for(let It=0;It<G.locationSize;It++)w(G.location+It,pt.meshPerAttribute);E.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let It=0;It<G.locationSize;It++)y(G.location+It);s.bindBuffer(34962,bt);for(let It=0;It<G.locationSize;It++)C(G.location+It,at/G.locationSize,xt,it,At*vt,(Rt+at/G.locationSize*It)*vt)}else{if(X.isInstancedBufferAttribute){for(let pt=0;pt<G.locationSize;pt++)w(G.location+pt,X.meshPerAttribute);E.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=X.meshPerAttribute*X.count)}else for(let pt=0;pt<G.locationSize;pt++)y(G.location+pt);s.bindBuffer(34962,bt);for(let pt=0;pt<G.locationSize;pt++)C(G.location+pt,at/G.locationSize,xt,it,at*vt,at/G.locationSize*pt*vt)}}else if(D!==void 0){const it=D[W];if(it!==void 0)switch(it.length){case 2:s.vertexAttrib2fv(G.location,it);break;case 3:s.vertexAttrib3fv(G.location,it);break;case 4:s.vertexAttrib4fv(G.location,it);break;default:s.vertexAttrib1fv(G.location,it)}}}}S()}function I(){O();for(const E in a){const A=a[E];for(const R in A){const V=A[R];for(const P in V)p(V[P].object),delete V[P];delete A[R]}delete a[E]}}function T(E){if(a[E.id]===void 0)return;const A=a[E.id];for(const R in A){const V=A[R];for(const P in V)p(V[P].object),delete V[P];delete A[R]}delete a[E.id]}function N(E){for(const A in a){const R=a[A];if(R[E.id]===void 0)continue;const V=R[E.id];for(const P in V)p(V[P].object),delete V[P];delete R[E.id]}}function O(){M(),u=!0,c!==l&&(c=l,f(c.object))}function M(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:O,resetDefaultState:M,dispose:I,releaseStatesOfGeometry:T,releaseStatesOfProgram:N,initAttributes:b,enableAttribute:y,disableUnusedAttributes:S}}function hD(s,t,e,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,u){s.drawArrays(r,c,u),e.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,f;if(i)d=s,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,c,u,h),e.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function dD(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const C=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(C){if(C==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=s.getParameter(34930),d=s.getParameter(35660),f=s.getParameter(3379),p=s.getParameter(34076),g=s.getParameter(34921),m=s.getParameter(36347),x=s.getParameter(36348),v=s.getParameter(36349),b=d>0,y=o||t.has("OES_texture_float"),w=b&&y,S=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:v,vertexTextures:b,floatFragmentTextures:y,floatVertexTextures:w,maxSamples:S}}function fD(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new Po,a=new ni,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const p=h.length!==0||d||n!==0||i;return i=d,e=u(h,f,0),n=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,d,f){const p=h.clippingPlanes,g=h.clipIntersection,m=h.clipShadows,x=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?u(null):c();else{const v=r?0:n,b=v*4;let y=x.clippingState||null;l.value=y,y=u(p,d,b,f);for(let w=0;w!==b;++w)y[w]=e[w];x.clippingState=y,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,d,f,p){const g=h!==null?h.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const x=f+g*4,v=d.matrixWorldInverse;a.getNormalMatrix(v),(m===null||m.length<x)&&(m=new Float32Array(x));for(let b=0,y=f;b!==g;++b,y+=4)o.copy(h[b]).applyMatrix4(v,a),o.normal.toArray(m,y),m[y+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,m}}function pD(s){let t=new WeakMap;function e(o,a){return a===Vg?o.mapping=Ll:a===Wg&&(o.mapping=Pl),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Vg||a===Wg)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new EN(l.height/2);return c.fromEquirectangularTexture(s,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class FS extends RS{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const yl=4,nw=[.125,.215,.35,.446,.526,.582],Bo=20,sg=new FS,sw=new Le;let ig=null;const Oo=(1+Math.sqrt(5))/2,ol=1/Oo,iw=[new Y(1,1,1),new Y(-1,1,1),new Y(1,1,-1),new Y(-1,1,-1),new Y(0,Oo,ol),new Y(0,Oo,-ol),new Y(ol,0,Oo),new Y(-ol,0,Oo),new Y(Oo,ol,0),new Y(-Oo,ol,0)];class rw{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){ig=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=lw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=aw(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(ig),t.scissorTest=!1,pd(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Ll||t.mapping===Pl?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),ig=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Js,minFilter:Js,generateMipmaps:!1,type:tu,format:Ei,encoding:ca,depthBuffer:!1},i=ow(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ow(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=mD(r)),this._blurMaterial=gD(r,t,e)}return i}_compileMaterial(t){const e=new sn(this._lodPlanes[0],t);this._renderer.compile(e,sg)}_sceneToCubeUV(t,e,n,i){const a=new Qs(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(sw),u.toneMapping=Er,u.autoClear=!1;const f=new ka({name:"PMREM.Background",side:li,depthWrite:!1,depthTest:!1}),p=new sn(new po,f);let g=!1;const m=t.background;m?m.isColor&&(f.color.copy(m),t.background=null,g=!0):(f.color.copy(sw),g=!0);for(let x=0;x<6;x++){const v=x%3;v===0?(a.up.set(0,l[x],0),a.lookAt(c[x],0,0)):v===1?(a.up.set(0,0,l[x]),a.lookAt(0,c[x],0)):(a.up.set(0,l[x],0),a.lookAt(0,0,c[x]));const b=this._cubeSize;pd(i,v*b,x>2?b:0,b,b),u.setRenderTarget(i),g&&u.render(p,a),u.render(t,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=d,u.autoClear=h,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Ll||t.mapping===Pl;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=lw()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=aw());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new sn(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;pd(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,sg)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=iw[(i-1)%iw.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new sn(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Bo-1),g=r/p,m=isFinite(r)?1+Math.floor(u*g):Bo;m>Bo&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Bo}`);const x=[];let v=0;for(let C=0;C<Bo;++C){const _=C/g,I=Math.exp(-_*_/2);x.push(I),C===0?v+=I:C<m&&(v+=2*I)}for(let C=0;C<x.length;C++)x[C]=x[C]/v;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=x,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:b}=this;d.dTheta.value=p,d.mipInt.value=b-n;const y=this._sizeLods[i],w=3*y*(i>b-yl?i-b+yl:0),S=4*(this._cubeSize-y);pd(e,w,S,3*y,2*y),l.setRenderTarget(e),l.render(h,sg)}}function mD(s){const t=[],e=[],n=[];let i=s;const r=s-yl+1+nw.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>s-yl?l=nw[o-s+yl-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,g=3,m=2,x=1,v=new Float32Array(g*p*f),b=new Float32Array(m*p*f),y=new Float32Array(x*p*f);for(let S=0;S<f;S++){const C=S%3*2/3-1,_=S>2?0:-1,I=[C,_,0,C+2/3,_,0,C+2/3,_+1,0,C,_,0,C+2/3,_+1,0,C,_+1,0];v.set(I,g*p*S),b.set(d,m*p*S);const T=[S,S,S,S,S,S];y.set(T,x*p*S)}const w=new Bs;w.setAttribute("position",new er(v,g)),w.setAttribute("uv",new er(b,m)),w.setAttribute("faceIndex",new er(y,x)),t.push(w),i>yl&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function ow(s,t,e){const n=new ua(s,t,e);return n.texture.mapping=Df,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function pd(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function gD(s,t,e){const n=new Float32Array(Bo),i=new Y(0,1,0);return new da({name:"SphericalGaussianBlur",defines:{n:Bo,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Kx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Yr,depthTest:!1,depthWrite:!1})}function aw(){return new da({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Kx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Yr,depthTest:!1,depthWrite:!1})}function lw(){return new da({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Kx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Yr,depthTest:!1,depthWrite:!1})}function Kx(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function xD(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Vg||l===Wg,u=l===Ll||l===Pl;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=t.get(a);return e===null&&(e=new rw(s)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),t.set(a,h),h.texture}else{if(t.has(a))return t.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){e===null&&(e=new rw(s));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function vD(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function bD(s,t,e,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(h){const d=h.attributes;for(const p in d)t.update(d[p],34962);const f=h.morphAttributes;for(const p in f){const g=f[p];for(let m=0,x=g.length;m<x;m++)t.update(g[m],34962)}}function c(h){const d=[],f=h.index,p=h.attributes.position;let g=0;if(f!==null){const v=f.array;g=f.version;for(let b=0,y=v.length;b<y;b+=3){const w=v[b+0],S=v[b+1],C=v[b+2];d.push(w,S,S,C,C,w)}}else{const v=p.array;g=p.version;for(let b=0,y=v.length/3-1;b<y;b+=3){const w=b+0,S=b+1,C=b+2;d.push(w,S,S,C,C,w)}}const m=new(IS(d)?NS:AS)(d,1);m.version=g;const x=r.get(h);x&&t.remove(x),r.set(h,m)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function yD(s,t,e,n){const i=n.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,f){s.drawElements(r,f,a,d*l),e.update(f,r,1)}function h(d,f,p){if(p===0)return;let g,m;if(i)g=s,m="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](r,f,a,d*l,p),e.update(f,r,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function wD(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function _D(s,t){return s[0]-t[0]}function SD(s,t){return Math.abs(t[1])-Math.abs(s[1])}function CD(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new Vn,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,d){const f=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=g!==void 0?g.length:0;let x=r.get(u);if(x===void 0||x.count!==m){let R=function(){E.dispose(),r.delete(u),u.removeEventListener("dispose",R)};var p=R;x!==void 0&&x.texture.dispose();const y=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,C=u.morphAttributes.position||[],_=u.morphAttributes.normal||[],I=u.morphAttributes.color||[];let T=0;y===!0&&(T=1),w===!0&&(T=2),S===!0&&(T=3);let N=u.attributes.position.count*T,O=1;N>t.maxTextureSize&&(O=Math.ceil(N/t.maxTextureSize),N=t.maxTextureSize);const M=new Float32Array(N*O*4*m),E=new kS(M,N,O,m);E.type=Xo,E.needsUpdate=!0;const A=T*4;for(let V=0;V<m;V++){const P=C[V],$=_[V],D=I[V],W=N*O*4*V;for(let G=0;G<P.count;G++){const X=G*A;y===!0&&(o.fromBufferAttribute(P,G),M[W+X+0]=o.x,M[W+X+1]=o.y,M[W+X+2]=o.z,M[W+X+3]=0),w===!0&&(o.fromBufferAttribute($,G),M[W+X+4]=o.x,M[W+X+5]=o.y,M[W+X+6]=o.z,M[W+X+7]=0),S===!0&&(o.fromBufferAttribute(D,G),M[W+X+8]=o.x,M[W+X+9]=o.y,M[W+X+10]=o.z,M[W+X+11]=D.itemSize===4?o.w:1)}}x={count:m,texture:E,size:new Dt(N,O)},r.set(u,x),u.addEventListener("dispose",R)}let v=0;for(let y=0;y<f.length;y++)v+=f[y];const b=u.morphTargetsRelative?1:1-v;d.getUniforms().setValue(s,"morphTargetBaseInfluence",b),d.getUniforms().setValue(s,"morphTargetInfluences",f),d.getUniforms().setValue(s,"morphTargetsTexture",x.texture,e),d.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const g=f===void 0?0:f.length;let m=n[u.id];if(m===void 0||m.length!==g){m=[];for(let w=0;w<g;w++)m[w]=[w,0];n[u.id]=m}for(let w=0;w<g;w++){const S=m[w];S[0]=w,S[1]=f[w]}m.sort(SD);for(let w=0;w<8;w++)w<g&&m[w][1]?(a[w][0]=m[w][0],a[w][1]=m[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(_D);const x=u.morphAttributes.position,v=u.morphAttributes.normal;let b=0;for(let w=0;w<8;w++){const S=a[w],C=S[0],_=S[1];C!==Number.MAX_SAFE_INTEGER&&_?(x&&u.getAttribute("morphTarget"+w)!==x[C]&&u.setAttribute("morphTarget"+w,x[C]),v&&u.getAttribute("morphNormal"+w)!==v[C]&&u.setAttribute("morphNormal"+w,v[C]),i[w]=_,b+=_):(x&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),v&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),i[w]=0)}const y=u.morphTargetsRelative?1:1-b;d.getUniforms().setValue(s,"morphTargetBaseInfluence",y),d.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function ID(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);return i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const LS=new $i,PS=new kS,OS=new hN,zS=new $S,cw=[],uw=[],hw=new Float32Array(16),dw=new Float32Array(9),fw=new Float32Array(4);function oc(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=cw[i];if(r===void 0&&(r=new Float32Array(i),cw[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Dn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Fn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function zf(s,t){let e=uw[t];e===void 0&&(e=new Int32Array(t),uw[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function TD(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function ED(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Dn(e,t))return;s.uniform2fv(this.addr,t),Fn(e,t)}}function MD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Dn(e,t))return;s.uniform3fv(this.addr,t),Fn(e,t)}}function kD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Dn(e,t))return;s.uniform4fv(this.addr,t),Fn(e,t)}}function AD(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Dn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Fn(e,t)}else{if(Dn(e,n))return;fw.set(n),s.uniformMatrix2fv(this.addr,!1,fw),Fn(e,n)}}function ND(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Dn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Fn(e,t)}else{if(Dn(e,n))return;dw.set(n),s.uniformMatrix3fv(this.addr,!1,dw),Fn(e,n)}}function RD(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Dn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Fn(e,t)}else{if(Dn(e,n))return;hw.set(n),s.uniformMatrix4fv(this.addr,!1,hw),Fn(e,n)}}function $D(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function DD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Dn(e,t))return;s.uniform2iv(this.addr,t),Fn(e,t)}}function FD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Dn(e,t))return;s.uniform3iv(this.addr,t),Fn(e,t)}}function LD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Dn(e,t))return;s.uniform4iv(this.addr,t),Fn(e,t)}}function PD(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function OD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Dn(e,t))return;s.uniform2uiv(this.addr,t),Fn(e,t)}}function zD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Dn(e,t))return;s.uniform3uiv(this.addr,t),Fn(e,t)}}function BD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Dn(e,t))return;s.uniform4uiv(this.addr,t),Fn(e,t)}}function UD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||LS,i)}function VD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||OS,i)}function WD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||zS,i)}function GD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||PS,i)}function HD(s){switch(s){case 5126:return TD;case 35664:return ED;case 35665:return MD;case 35666:return kD;case 35674:return AD;case 35675:return ND;case 35676:return RD;case 5124:case 35670:return $D;case 35667:case 35671:return DD;case 35668:case 35672:return FD;case 35669:case 35673:return LD;case 5125:return PD;case 36294:return OD;case 36295:return zD;case 36296:return BD;case 35678:case 36198:case 36298:case 36306:case 35682:return UD;case 35679:case 36299:case 36307:return VD;case 35680:case 36300:case 36308:case 36293:return WD;case 36289:case 36303:case 36311:case 36292:return GD}}function qD(s,t){s.uniform1fv(this.addr,t)}function XD(s,t){const e=oc(t,this.size,2);s.uniform2fv(this.addr,e)}function jD(s,t){const e=oc(t,this.size,3);s.uniform3fv(this.addr,e)}function KD(s,t){const e=oc(t,this.size,4);s.uniform4fv(this.addr,e)}function YD(s,t){const e=oc(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function ZD(s,t){const e=oc(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function JD(s,t){const e=oc(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function QD(s,t){s.uniform1iv(this.addr,t)}function tF(s,t){s.uniform2iv(this.addr,t)}function eF(s,t){s.uniform3iv(this.addr,t)}function nF(s,t){s.uniform4iv(this.addr,t)}function sF(s,t){s.uniform1uiv(this.addr,t)}function iF(s,t){s.uniform2uiv(this.addr,t)}function rF(s,t){s.uniform3uiv(this.addr,t)}function oF(s,t){s.uniform4uiv(this.addr,t)}function aF(s,t,e){const n=this.cache,i=t.length,r=zf(e,i);Dn(n,r)||(s.uniform1iv(this.addr,r),Fn(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||LS,r[o])}function lF(s,t,e){const n=this.cache,i=t.length,r=zf(e,i);Dn(n,r)||(s.uniform1iv(this.addr,r),Fn(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||OS,r[o])}function cF(s,t,e){const n=this.cache,i=t.length,r=zf(e,i);Dn(n,r)||(s.uniform1iv(this.addr,r),Fn(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||zS,r[o])}function uF(s,t,e){const n=this.cache,i=t.length,r=zf(e,i);Dn(n,r)||(s.uniform1iv(this.addr,r),Fn(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||PS,r[o])}function hF(s){switch(s){case 5126:return qD;case 35664:return XD;case 35665:return jD;case 35666:return KD;case 35674:return YD;case 35675:return ZD;case 35676:return JD;case 5124:case 35670:return QD;case 35667:case 35671:return tF;case 35668:case 35672:return eF;case 35669:case 35673:return nF;case 5125:return sF;case 36294:return iF;case 36295:return rF;case 36296:return oF;case 35678:case 36198:case 36298:case 36306:case 35682:return aF;case 35679:case 36299:case 36307:return lF;case 35680:case 36300:case 36308:case 36293:return cF;case 36289:case 36303:case 36311:case 36292:return uF}}class dF{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=HD(e.type)}}class fF{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=hF(e.type)}}class pF{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const rg=/(\w+)(\])?(\[|\.)?/g;function pw(s,t){s.seq.push(t),s.map[t.id]=t}function mF(s,t,e){const n=s.name,i=n.length;for(rg.lastIndex=0;;){const r=rg.exec(n),o=rg.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){pw(e,c===void 0?new dF(a,s,t):new fF(a,s,t));break}else{let h=e.map[a];h===void 0&&(h=new pF(a),pw(e,h)),e=h}}}class Hd{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);mF(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function mw(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let gF=0;function xF(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function vF(s){switch(s){case ca:return["Linear","( value )"];case an:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function gw(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+xF(s.getShaderSource(t),o)}else return i}function bF(s,t){const e=vF(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function yF(s,t){let e;switch(t){case OA:e="Linear";break;case zA:e="Reinhard";break;case BA:e="OptimizedCineon";break;case UA:e="ACESFilmic";break;case VA:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function wF(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Oc).join(`
`)}function _F(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function SF(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function Oc(s){return s!==""}function xw(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function vw(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const CF=/^[ \t]*#include +<([\w\d./]+)>/gm;function jg(s){return s.replace(CF,IF)}function IF(s,t){const e=be[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return jg(e)}const TF=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function bw(s){return s.replace(TF,EF)}function EF(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function yw(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function MF(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===bS?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===yS?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Pc&&(t="SHADOWMAP_TYPE_VSM"),t}function kF(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Ll:case Pl:t="ENVMAP_TYPE_CUBE";break;case Df:t="ENVMAP_TYPE_CUBE_UV";break}return t}function AF(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Pl:t="ENVMAP_MODE_REFRACTION";break}return t}function NF(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case $f:t="ENVMAP_BLENDING_MULTIPLY";break;case LA:t="ENVMAP_BLENDING_MIX";break;case PA:t="ENVMAP_BLENDING_ADD";break}return t}function RF(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function $F(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=MF(e),c=kF(e),u=AF(e),h=NF(e),d=RF(e),f=e.isWebGL2?"":wF(e),p=_F(r),g=i.createProgram();let m,x,v=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[p].filter(Oc).join(`
`),m.length>0&&(m+=`
`),x=[f,p].filter(Oc).join(`
`),x.length>0&&(x+=`
`)):(m=[yw(e),"#define SHADER_NAME "+e.shaderName,p,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Oc).join(`
`),x=[f,yw(e),"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Er?"#define TONE_MAPPING":"",e.toneMapping!==Er?be.tonemapping_pars_fragment:"",e.toneMapping!==Er?yF("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",be.encodings_pars_fragment,bF("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Oc).join(`
`)),o=jg(o),o=xw(o,e),o=vw(o,e),a=jg(a),a=xw(a,e),a=vw(a,e),o=bw(o),a=bw(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",e.glslVersion===Wy?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Wy?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const b=v+m+o,y=v+x+a,w=mw(i,35633,b),S=mw(i,35632,y);if(i.attachShader(g,w),i.attachShader(g,S),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const I=i.getProgramInfoLog(g).trim(),T=i.getShaderInfoLog(w).trim(),N=i.getShaderInfoLog(S).trim();let O=!0,M=!0;if(i.getProgramParameter(g,35714)===!1){O=!1;const E=gw(i,w,"vertex"),A=gw(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+I+`
`+E+`
`+A)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(T===""||N==="")&&(M=!1);M&&(this.diagnostics={runnable:O,programLog:I,vertexShader:{log:T,prefix:m},fragmentShader:{log:N,prefix:x}})}i.deleteShader(w),i.deleteShader(S);let C;this.getUniforms=function(){return C===void 0&&(C=new Hd(i,g)),C};let _;return this.getAttributes=function(){return _===void 0&&(_=SF(i,g)),_},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=gF++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=S,this}let DF=0;class FF{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new LF(t),e.set(t,n)),n}}class LF{constructor(t){this.id=DF++,this.code=t,this.usedTimes=0}}function PF(s,t,e,n,i,r,o){const a=new Xx,l=new FF,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(_,I,T,N,O){const M=N.fog,E=O.geometry,A=_.isMeshStandardMaterial?N.environment:null,R=(_.isMeshStandardMaterial?e:t).get(_.envMap||A),V=!!R&&R.mapping===Df?R.image.height:null,P=p[_.type];_.precision!==null&&(f=i.getMaxPrecision(_.precision),f!==_.precision&&console.warn("THREE.WebGLProgram.getParameters:",_.precision,"not supported, using",f,"instead."));const $=E.morphAttributes.position||E.morphAttributes.normal||E.morphAttributes.color,D=$!==void 0?$.length:0;let W=0;E.morphAttributes.position!==void 0&&(W=1),E.morphAttributes.normal!==void 0&&(W=2),E.morphAttributes.color!==void 0&&(W=3);let G,X,it,at;if(P){const At=Yi[P];G=At.vertexShader,X=At.fragmentShader}else G=_.vertexShader,X=_.fragmentShader,l.update(_),it=l.getVertexShaderID(_),at=l.getFragmentShaderID(_);const J=s.getRenderTarget(),bt=_.alphaTest>0,xt=_.clearcoat>0,vt=_.iridescence>0;return{isWebGL2:u,shaderID:P,shaderName:_.type,vertexShader:G,fragmentShader:X,defines:_.defines,customVertexShaderID:it,customFragmentShaderID:at,isRawShaderMaterial:_.isRawShaderMaterial===!0,glslVersion:_.glslVersion,precision:f,instancing:O.isInstancedMesh===!0,instancingColor:O.isInstancedMesh===!0&&O.instanceColor!==null,supportsVertexTextures:d,outputEncoding:J===null?s.outputEncoding:J.isXRRenderTarget===!0?J.texture.encoding:ca,map:!!_.map,matcap:!!_.matcap,envMap:!!R,envMapMode:R&&R.mapping,envMapCubeUVHeight:V,lightMap:!!_.lightMap,aoMap:!!_.aoMap,emissiveMap:!!_.emissiveMap,bumpMap:!!_.bumpMap,normalMap:!!_.normalMap,objectSpaceNormalMap:_.normalMapType===aN,tangentSpaceNormalMap:_.normalMapType===Lf,decodeVideoTexture:!!_.map&&_.map.isVideoTexture===!0&&_.map.encoding===an,clearcoat:xt,clearcoatMap:xt&&!!_.clearcoatMap,clearcoatRoughnessMap:xt&&!!_.clearcoatRoughnessMap,clearcoatNormalMap:xt&&!!_.clearcoatNormalMap,iridescence:vt,iridescenceMap:vt&&!!_.iridescenceMap,iridescenceThicknessMap:vt&&!!_.iridescenceThicknessMap,displacementMap:!!_.displacementMap,roughnessMap:!!_.roughnessMap,metalnessMap:!!_.metalnessMap,specularMap:!!_.specularMap,specularIntensityMap:!!_.specularIntensityMap,specularColorMap:!!_.specularColorMap,opaque:_.transparent===!1&&_.blending===Il,alphaMap:!!_.alphaMap,alphaTest:bt,gradientMap:!!_.gradientMap,sheen:_.sheen>0,sheenColorMap:!!_.sheenColorMap,sheenRoughnessMap:!!_.sheenRoughnessMap,transmission:_.transmission>0,transmissionMap:!!_.transmissionMap,thicknessMap:!!_.thicknessMap,combine:_.combine,vertexTangents:!!_.normalMap&&!!E.attributes.tangent,vertexColors:_.vertexColors,vertexAlphas:_.vertexColors===!0&&!!E.attributes.color&&E.attributes.color.itemSize===4,vertexUvs:!!_.map||!!_.bumpMap||!!_.normalMap||!!_.specularMap||!!_.alphaMap||!!_.emissiveMap||!!_.roughnessMap||!!_.metalnessMap||!!_.clearcoatMap||!!_.clearcoatRoughnessMap||!!_.clearcoatNormalMap||!!_.iridescenceMap||!!_.iridescenceThicknessMap||!!_.displacementMap||!!_.transmissionMap||!!_.thicknessMap||!!_.specularIntensityMap||!!_.specularColorMap||!!_.sheenColorMap||!!_.sheenRoughnessMap,uvsVertexOnly:!(!!_.map||!!_.bumpMap||!!_.normalMap||!!_.specularMap||!!_.alphaMap||!!_.emissiveMap||!!_.roughnessMap||!!_.metalnessMap||!!_.clearcoatNormalMap||!!_.iridescenceMap||!!_.iridescenceThicknessMap||_.transmission>0||!!_.transmissionMap||!!_.thicknessMap||!!_.specularIntensityMap||!!_.specularColorMap||_.sheen>0||!!_.sheenColorMap||!!_.sheenRoughnessMap)&&!!_.displacementMap,fog:!!M,useFog:_.fog===!0,fogExp2:M&&M.isFogExp2,flatShading:!!_.flatShading,sizeAttenuation:_.sizeAttenuation,logarithmicDepthBuffer:h,skinning:O.isSkinnedMesh===!0,morphTargets:E.morphAttributes.position!==void 0,morphNormals:E.morphAttributes.normal!==void 0,morphColors:E.morphAttributes.color!==void 0,morphTargetsCount:D,morphTextureStride:W,numDirLights:I.directional.length,numPointLights:I.point.length,numSpotLights:I.spot.length,numSpotLightMaps:I.spotLightMap.length,numRectAreaLights:I.rectArea.length,numHemiLights:I.hemi.length,numDirLightShadows:I.directionalShadowMap.length,numPointLightShadows:I.pointShadowMap.length,numSpotLightShadows:I.spotShadowMap.length,numSpotLightShadowsWithMaps:I.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:_.dithering,shadowMapEnabled:s.shadowMap.enabled&&T.length>0,shadowMapType:s.shadowMap.type,toneMapping:_.toneMapped?s.toneMapping:Er,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:_.premultipliedAlpha,doubleSided:_.side===ei,flipSided:_.side===li,useDepthPacking:!!_.depthPacking,depthPacking:_.depthPacking||0,index0AttributeName:_.index0AttributeName,extensionDerivatives:_.extensions&&_.extensions.derivatives,extensionFragDepth:_.extensions&&_.extensions.fragDepth,extensionDrawBuffers:_.extensions&&_.extensions.drawBuffers,extensionShaderTextureLOD:_.extensions&&_.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:_.customProgramCacheKey()}}function m(_){const I=[];if(_.shaderID?I.push(_.shaderID):(I.push(_.customVertexShaderID),I.push(_.customFragmentShaderID)),_.defines!==void 0)for(const T in _.defines)I.push(T),I.push(_.defines[T]);return _.isRawShaderMaterial===!1&&(x(I,_),v(I,_),I.push(s.outputEncoding)),I.push(_.customProgramCacheKey),I.join()}function x(_,I){_.push(I.precision),_.push(I.outputEncoding),_.push(I.envMapMode),_.push(I.envMapCubeUVHeight),_.push(I.combine),_.push(I.vertexUvs),_.push(I.fogExp2),_.push(I.sizeAttenuation),_.push(I.morphTargetsCount),_.push(I.morphAttributeCount),_.push(I.numDirLights),_.push(I.numPointLights),_.push(I.numSpotLights),_.push(I.numSpotLightMaps),_.push(I.numHemiLights),_.push(I.numRectAreaLights),_.push(I.numDirLightShadows),_.push(I.numPointLightShadows),_.push(I.numSpotLightShadows),_.push(I.numSpotLightShadowsWithMaps),_.push(I.shadowMapType),_.push(I.toneMapping),_.push(I.numClippingPlanes),_.push(I.numClipIntersection),_.push(I.depthPacking)}function v(_,I){a.disableAll(),I.isWebGL2&&a.enable(0),I.supportsVertexTextures&&a.enable(1),I.instancing&&a.enable(2),I.instancingColor&&a.enable(3),I.map&&a.enable(4),I.matcap&&a.enable(5),I.envMap&&a.enable(6),I.lightMap&&a.enable(7),I.aoMap&&a.enable(8),I.emissiveMap&&a.enable(9),I.bumpMap&&a.enable(10),I.normalMap&&a.enable(11),I.objectSpaceNormalMap&&a.enable(12),I.tangentSpaceNormalMap&&a.enable(13),I.clearcoat&&a.enable(14),I.clearcoatMap&&a.enable(15),I.clearcoatRoughnessMap&&a.enable(16),I.clearcoatNormalMap&&a.enable(17),I.iridescence&&a.enable(18),I.iridescenceMap&&a.enable(19),I.iridescenceThicknessMap&&a.enable(20),I.displacementMap&&a.enable(21),I.specularMap&&a.enable(22),I.roughnessMap&&a.enable(23),I.metalnessMap&&a.enable(24),I.gradientMap&&a.enable(25),I.alphaMap&&a.enable(26),I.alphaTest&&a.enable(27),I.vertexColors&&a.enable(28),I.vertexAlphas&&a.enable(29),I.vertexUvs&&a.enable(30),I.vertexTangents&&a.enable(31),I.uvsVertexOnly&&a.enable(32),_.push(a.mask),a.disableAll(),I.fog&&a.enable(0),I.useFog&&a.enable(1),I.flatShading&&a.enable(2),I.logarithmicDepthBuffer&&a.enable(3),I.skinning&&a.enable(4),I.morphTargets&&a.enable(5),I.morphNormals&&a.enable(6),I.morphColors&&a.enable(7),I.premultipliedAlpha&&a.enable(8),I.shadowMapEnabled&&a.enable(9),I.physicallyCorrectLights&&a.enable(10),I.doubleSided&&a.enable(11),I.flipSided&&a.enable(12),I.useDepthPacking&&a.enable(13),I.dithering&&a.enable(14),I.specularIntensityMap&&a.enable(15),I.specularColorMap&&a.enable(16),I.transmission&&a.enable(17),I.transmissionMap&&a.enable(18),I.thicknessMap&&a.enable(19),I.sheen&&a.enable(20),I.sheenColorMap&&a.enable(21),I.sheenRoughnessMap&&a.enable(22),I.decodeVideoTexture&&a.enable(23),I.opaque&&a.enable(24),_.push(a.mask)}function b(_){const I=p[_.type];let T;if(I){const N=Yi[I];T=SN.clone(N.uniforms)}else T=_.uniforms;return T}function y(_,I){let T;for(let N=0,O=c.length;N<O;N++){const M=c[N];if(M.cacheKey===I){T=M,++T.usedTimes;break}}return T===void 0&&(T=new $F(s,I,_,r),c.push(T)),T}function w(_){if(--_.usedTimes===0){const I=c.indexOf(_);c[I]=c[c.length-1],c.pop(),_.destroy()}}function S(_){l.remove(_)}function C(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:b,acquireProgram:y,releaseProgram:w,releaseShaderCache:S,programs:c,dispose:C}}function OF(){let s=new WeakMap;function t(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function e(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function zF(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function ww(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function _w(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(h,d,f,p,g,m){let x=s[t];return x===void 0?(x={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:g,group:m},s[t]=x):(x.id=h.id,x.object=h,x.geometry=d,x.material=f,x.groupOrder=p,x.renderOrder=h.renderOrder,x.z=g,x.group=m),t++,x}function a(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.push(x):f.transparent===!0?i.push(x):e.push(x)}function l(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.unshift(x):f.transparent===!0?i.unshift(x):e.unshift(x)}function c(h,d){e.length>1&&e.sort(h||zF),n.length>1&&n.sort(d||ww),i.length>1&&i.sort(d||ww)}function u(){for(let h=t,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function BF(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new _w,s.set(n,[o])):i>=r.length?(o=new _w,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function UF(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new Y,color:new Le};break;case"SpotLight":e={position:new Y,direction:new Y,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new Y,color:new Le,distance:0,decay:0};break;case"HemisphereLight":e={direction:new Y,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":e={color:new Le,position:new Y,halfWidth:new Y,halfHeight:new Y};break}return s[t.id]=e,e}}}function VF(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let WF=0;function GF(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function HF(s,t){const e=new UF,n=VF(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new Y);const r=new Y,o=new mn,a=new mn;function l(u,h){let d=0,f=0,p=0;for(let N=0;N<9;N++)i.probe[N].set(0,0,0);let g=0,m=0,x=0,v=0,b=0,y=0,w=0,S=0,C=0,_=0;u.sort(GF);const I=h!==!0?Math.PI:1;for(let N=0,O=u.length;N<O;N++){const M=u[N],E=M.color,A=M.intensity,R=M.distance,V=M.shadow&&M.shadow.map?M.shadow.map.texture:null;if(M.isAmbientLight)d+=E.r*A*I,f+=E.g*A*I,p+=E.b*A*I;else if(M.isLightProbe)for(let P=0;P<9;P++)i.probe[P].addScaledVector(M.sh.coefficients[P],A);else if(M.isDirectionalLight){const P=e.get(M);if(P.color.copy(M.color).multiplyScalar(M.intensity*I),M.castShadow){const $=M.shadow,D=n.get(M);D.shadowBias=$.bias,D.shadowNormalBias=$.normalBias,D.shadowRadius=$.radius,D.shadowMapSize=$.mapSize,i.directionalShadow[g]=D,i.directionalShadowMap[g]=V,i.directionalShadowMatrix[g]=M.shadow.matrix,y++}i.directional[g]=P,g++}else if(M.isSpotLight){const P=e.get(M);P.position.setFromMatrixPosition(M.matrixWorld),P.color.copy(E).multiplyScalar(A*I),P.distance=R,P.coneCos=Math.cos(M.angle),P.penumbraCos=Math.cos(M.angle*(1-M.penumbra)),P.decay=M.decay,i.spot[x]=P;const $=M.shadow;if(M.map&&(i.spotLightMap[C]=M.map,C++,$.updateMatrices(M),M.castShadow&&_++),i.spotLightMatrix[x]=$.matrix,M.castShadow){const D=n.get(M);D.shadowBias=$.bias,D.shadowNormalBias=$.normalBias,D.shadowRadius=$.radius,D.shadowMapSize=$.mapSize,i.spotShadow[x]=D,i.spotShadowMap[x]=V,S++}x++}else if(M.isRectAreaLight){const P=e.get(M);P.color.copy(E).multiplyScalar(A),P.halfWidth.set(M.width*.5,0,0),P.halfHeight.set(0,M.height*.5,0),i.rectArea[v]=P,v++}else if(M.isPointLight){const P=e.get(M);if(P.color.copy(M.color).multiplyScalar(M.intensity*I),P.distance=M.distance,P.decay=M.decay,M.castShadow){const $=M.shadow,D=n.get(M);D.shadowBias=$.bias,D.shadowNormalBias=$.normalBias,D.shadowRadius=$.radius,D.shadowMapSize=$.mapSize,D.shadowCameraNear=$.camera.near,D.shadowCameraFar=$.camera.far,i.pointShadow[m]=D,i.pointShadowMap[m]=V,i.pointShadowMatrix[m]=M.shadow.matrix,w++}i.point[m]=P,m++}else if(M.isHemisphereLight){const P=e.get(M);P.skyColor.copy(M.color).multiplyScalar(A*I),P.groundColor.copy(M.groundColor).multiplyScalar(A*I),i.hemi[b]=P,b++}}v>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Mt.LTC_FLOAT_1,i.rectAreaLTC2=Mt.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Mt.LTC_HALF_1,i.rectAreaLTC2=Mt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const T=i.hash;(T.directionalLength!==g||T.pointLength!==m||T.spotLength!==x||T.rectAreaLength!==v||T.hemiLength!==b||T.numDirectionalShadows!==y||T.numPointShadows!==w||T.numSpotShadows!==S||T.numSpotMaps!==C)&&(i.directional.length=g,i.spot.length=x,i.rectArea.length=v,i.point.length=m,i.hemi.length=b,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=S+C-_,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=_,T.directionalLength=g,T.pointLength=m,T.spotLength=x,T.rectAreaLength=v,T.hemiLength=b,T.numDirectionalShadows=y,T.numPointShadows=w,T.numSpotShadows=S,T.numSpotMaps=C,i.version=WF++)}function c(u,h){let d=0,f=0,p=0,g=0,m=0;const x=h.matrixWorldInverse;for(let v=0,b=u.length;v<b;v++){const y=u[v];if(y.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),d++}else if(y.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(y.matrixWorld),w.position.applyMatrix4(x),w.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),p++}else if(y.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(y.matrixWorld),w.position.applyMatrix4(x),a.identity(),o.copy(y.matrixWorld),o.premultiply(x),a.extractRotation(o),w.halfWidth.set(y.width*.5,0,0),w.halfHeight.set(0,y.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(y.isPointLight){const w=i.point[f];w.position.setFromMatrixPosition(y.matrixWorld),w.position.applyMatrix4(x),f++}else if(y.isHemisphereLight){const w=i.hemi[m];w.direction.setFromMatrixPosition(y.matrixWorld),w.direction.transformDirection(x),m++}}}return{setup:l,setupView:c,state:i}}function Sw(s,t){const e=new HF(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function qF(s,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new Sw(s,t),e.set(r,[l])):o>=a.length?(l=new Sw(s,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class XF extends fo{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=rN,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class jF extends fo{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new Y,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const KF=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,YF=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function ZF(s,t,e){let n=new jx;const i=new Dt,r=new Dt,o=new Vn,a=new XF({depthPacking:oN}),l=new jF,c={},u=e.maxTextureSize,h={0:li,1:Fl,2:ei},d=new da({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Dt},radius:{value:4}},vertexShader:KF,fragmentShader:YF}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new Bs;p.setAttribute("position",new er(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new sn(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=bS,this.render=function(y,w,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||y.length===0)return;const C=s.getRenderTarget(),_=s.getActiveCubeFace(),I=s.getActiveMipmapLevel(),T=s.state;T.setBlending(Yr),T.buffers.color.setClear(1,1,1,1),T.buffers.depth.setTest(!0),T.setScissorTest(!1);for(let N=0,O=y.length;N<O;N++){const M=y[N],E=M.shadow;if(E===void 0){console.warn("THREE.WebGLShadowMap:",M,"has no shadow.");continue}if(E.autoUpdate===!1&&E.needsUpdate===!1)continue;i.copy(E.mapSize);const A=E.getFrameExtents();if(i.multiply(A),r.copy(E.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/A.x),i.x=r.x*A.x,E.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/A.y),i.y=r.y*A.y,E.mapSize.y=r.y)),E.map===null){const V=this.type!==Pc?{minFilter:ws,magFilter:ws}:{};E.map=new ua(i.x,i.y,V),E.map.texture.name=M.name+".shadowMap",E.camera.updateProjectionMatrix()}s.setRenderTarget(E.map),s.clear();const R=E.getViewportCount();for(let V=0;V<R;V++){const P=E.getViewport(V);o.set(r.x*P.x,r.y*P.y,r.x*P.z,r.y*P.w),T.viewport(o),E.updateMatrices(M,V),n=E.getFrustum(),b(w,S,E.camera,M,this.type)}E.isPointLightShadow!==!0&&this.type===Pc&&x(E,S),E.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(C,_,I)};function x(y,w){const S=t.update(g);d.defines.VSM_SAMPLES!==y.blurSamples&&(d.defines.VSM_SAMPLES=y.blurSamples,f.defines.VSM_SAMPLES=y.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),y.mapPass===null&&(y.mapPass=new ua(i.x,i.y)),d.uniforms.shadow_pass.value=y.map.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,s.setRenderTarget(y.mapPass),s.clear(),s.renderBufferDirect(w,null,S,d,g,null),f.uniforms.shadow_pass.value=y.mapPass.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,s.setRenderTarget(y.map),s.clear(),s.renderBufferDirect(w,null,S,f,g,null)}function v(y,w,S,C,_,I){let T=null;const N=S.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(N!==void 0?T=N:T=S.isPointLight===!0?l:a,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const O=T.uuid,M=w.uuid;let E=c[O];E===void 0&&(E={},c[O]=E);let A=E[M];A===void 0&&(A=T.clone(),E[M]=A),T=A}return T.visible=w.visible,T.wireframe=w.wireframe,I===Pc?T.side=w.shadowSide!==null?w.shadowSide:w.side:T.side=w.shadowSide!==null?w.shadowSide:h[w.side],T.alphaMap=w.alphaMap,T.alphaTest=w.alphaTest,T.clipShadows=w.clipShadows,T.clippingPlanes=w.clippingPlanes,T.clipIntersection=w.clipIntersection,T.displacementMap=w.displacementMap,T.displacementScale=w.displacementScale,T.displacementBias=w.displacementBias,T.wireframeLinewidth=w.wireframeLinewidth,T.linewidth=w.linewidth,S.isPointLight===!0&&T.isMeshDistanceMaterial===!0&&(T.referencePosition.setFromMatrixPosition(S.matrixWorld),T.nearDistance=C,T.farDistance=_),T}function b(y,w,S,C,_){if(y.visible===!1)return;if(y.layers.test(w.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&_===Pc)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,y.matrixWorld);const N=t.update(y),O=y.material;if(Array.isArray(O)){const M=N.groups;for(let E=0,A=M.length;E<A;E++){const R=M[E],V=O[R.materialIndex];if(V&&V.visible){const P=v(y,V,C,S.near,S.far,_);s.renderBufferDirect(S,null,N,P,y,R)}}}else if(O.visible){const M=v(y,O,C,S.near,S.far,_);s.renderBufferDirect(S,null,N,M,y,null)}}const T=y.children;for(let N=0,O=T.length;N<O;N++)b(T[N],w,S,C,_)}}function JF(s,t,e){const n=e.isWebGL2;function i(){let tt=!1;const ft=new Vn;let Ct=null;const Ut=new Vn(0,0,0,0);return{setMask:function(ie){Ct!==ie&&!tt&&(s.colorMask(ie,ie,ie,ie),Ct=ie)},setLocked:function(ie){tt=ie},setClear:function(ie,$e,On,ts,Eo){Eo===!0&&(ie*=ts,$e*=ts,On*=ts),ft.set(ie,$e,On,ts),Ut.equals(ft)===!1&&(s.clearColor(ie,$e,On,ts),Ut.copy(ft))},reset:function(){tt=!1,Ct=null,Ut.set(-1,0,0,0)}}}function r(){let tt=!1,ft=null,Ct=null,Ut=null;return{setTest:function(ie){ie?bt(2929):xt(2929)},setMask:function(ie){ft!==ie&&!tt&&(s.depthMask(ie),ft=ie)},setFunc:function(ie){if(Ct!==ie){switch(ie){case kA:s.depthFunc(512);break;case AA:s.depthFunc(519);break;case NA:s.depthFunc(513);break;case Ug:s.depthFunc(515);break;case RA:s.depthFunc(514);break;case $A:s.depthFunc(518);break;case DA:s.depthFunc(516);break;case FA:s.depthFunc(517);break;default:s.depthFunc(515)}Ct=ie}},setLocked:function(ie){tt=ie},setClear:function(ie){Ut!==ie&&(s.clearDepth(ie),Ut=ie)},reset:function(){tt=!1,ft=null,Ct=null,Ut=null}}}function o(){let tt=!1,ft=null,Ct=null,Ut=null,ie=null,$e=null,On=null,ts=null,Eo=null;return{setTest:function(Qe){tt||(Qe?bt(2960):xt(2960))},setMask:function(Qe){ft!==Qe&&!tt&&(s.stencilMask(Qe),ft=Qe)},setFunc:function(Qe,ur,Gs){(Ct!==Qe||Ut!==ur||ie!==Gs)&&(s.stencilFunc(Qe,ur,Gs),Ct=Qe,Ut=ur,ie=Gs)},setOp:function(Qe,ur,Gs){($e!==Qe||On!==ur||ts!==Gs)&&(s.stencilOp(Qe,ur,Gs),$e=Qe,On=ur,ts=Gs)},setLocked:function(Qe){tt=Qe},setClear:function(Qe){Eo!==Qe&&(s.clearStencil(Qe),Eo=Qe)},reset:function(){tt=!1,ft=null,Ct=null,Ut=null,ie=null,$e=null,On=null,ts=null,Eo=null}}}const a=new i,l=new r,c=new o,u=new WeakMap,h=new WeakMap;let d={},f={},p=new WeakMap,g=[],m=null,x=!1,v=null,b=null,y=null,w=null,S=null,C=null,_=null,I=!1,T=null,N=null,O=null,M=null,E=null;const A=s.getParameter(35661);let R=!1,V=0;const P=s.getParameter(7938);P.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(P)[1]),R=V>=1):P.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]),R=V>=2);let $=null,D={};const W=s.getParameter(3088),G=s.getParameter(2978),X=new Vn().fromArray(W),it=new Vn().fromArray(G);function at(tt,ft,Ct){const Ut=new Uint8Array(4),ie=s.createTexture();s.bindTexture(tt,ie),s.texParameteri(tt,10241,9728),s.texParameteri(tt,10240,9728);for(let $e=0;$e<Ct;$e++)s.texImage2D(ft+$e,0,6408,1,1,0,6408,5121,Ut);return ie}const J={};J[3553]=at(3553,3553,1),J[34067]=at(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),bt(2929),l.setFunc(Ug),Ht(!1),ue(fy),bt(2884),jt(Yr);function bt(tt){d[tt]!==!0&&(s.enable(tt),d[tt]=!0)}function xt(tt){d[tt]!==!1&&(s.disable(tt),d[tt]=!1)}function vt(tt,ft){return f[tt]!==ft?(s.bindFramebuffer(tt,ft),f[tt]=ft,n&&(tt===36009&&(f[36160]=ft),tt===36160&&(f[36009]=ft)),!0):!1}function pt(tt,ft){let Ct=g,Ut=!1;if(tt)if(Ct=p.get(ft),Ct===void 0&&(Ct=[],p.set(ft,Ct)),tt.isWebGLMultipleRenderTargets){const ie=tt.texture;if(Ct.length!==ie.length||Ct[0]!==36064){for(let $e=0,On=ie.length;$e<On;$e++)Ct[$e]=36064+$e;Ct.length=ie.length,Ut=!0}}else Ct[0]!==36064&&(Ct[0]=36064,Ut=!0);else Ct[0]!==1029&&(Ct[0]=1029,Ut=!0);Ut&&(e.isWebGL2?s.drawBuffers(Ct):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(Ct))}function At(tt){return m!==tt?(s.useProgram(tt),m=tt,!0):!1}const Rt={[pl]:32774,[vA]:32778,[bA]:32779};if(n)Rt[xy]=32775,Rt[vy]=32776;else{const tt=t.get("EXT_blend_minmax");tt!==null&&(Rt[xy]=tt.MIN_EXT,Rt[vy]=tt.MAX_EXT)}const It={[yA]:0,[wA]:1,[_A]:768,[wS]:770,[MA]:776,[TA]:774,[CA]:772,[SA]:769,[_S]:771,[EA]:775,[IA]:773};function jt(tt,ft,Ct,Ut,ie,$e,On,ts){if(tt===Yr){x===!0&&(xt(3042),x=!1);return}if(x===!1&&(bt(3042),x=!0),tt!==xA){if(tt!==v||ts!==I){if((b!==pl||S!==pl)&&(s.blendEquation(32774),b=pl,S=pl),ts)switch(tt){case Il:s.blendFuncSeparate(1,771,1,771);break;case py:s.blendFunc(1,1);break;case my:s.blendFuncSeparate(0,769,0,1);break;case gy:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",tt);break}else switch(tt){case Il:s.blendFuncSeparate(770,771,1,771);break;case py:s.blendFunc(770,1);break;case my:s.blendFuncSeparate(0,769,0,1);break;case gy:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",tt);break}y=null,w=null,C=null,_=null,v=tt,I=ts}return}ie=ie||ft,$e=$e||Ct,On=On||Ut,(ft!==b||ie!==S)&&(s.blendEquationSeparate(Rt[ft],Rt[ie]),b=ft,S=ie),(Ct!==y||Ut!==w||$e!==C||On!==_)&&(s.blendFuncSeparate(It[Ct],It[Ut],It[$e],It[On]),y=Ct,w=Ut,C=$e,_=On),v=tt,I=null}function Zt(tt,ft){tt.side===ei?xt(2884):bt(2884);let Ct=tt.side===li;ft&&(Ct=!Ct),Ht(Ct),tt.blending===Il&&tt.transparent===!1?jt(Yr):jt(tt.blending,tt.blendEquation,tt.blendSrc,tt.blendDst,tt.blendEquationAlpha,tt.blendSrcAlpha,tt.blendDstAlpha,tt.premultipliedAlpha),l.setFunc(tt.depthFunc),l.setTest(tt.depthTest),l.setMask(tt.depthWrite),a.setMask(tt.colorWrite);const Ut=tt.stencilWrite;c.setTest(Ut),Ut&&(c.setMask(tt.stencilWriteMask),c.setFunc(tt.stencilFunc,tt.stencilRef,tt.stencilFuncMask),c.setOp(tt.stencilFail,tt.stencilZFail,tt.stencilZPass)),ht(tt.polygonOffset,tt.polygonOffsetFactor,tt.polygonOffsetUnits),tt.alphaToCoverage===!0?bt(32926):xt(32926)}function Ht(tt){T!==tt&&(tt?s.frontFace(2304):s.frontFace(2305),T=tt)}function ue(tt){tt!==mA?(bt(2884),tt!==N&&(tt===fy?s.cullFace(1029):tt===gA?s.cullFace(1028):s.cullFace(1032))):xt(2884),N=tt}function ne(tt){tt!==O&&(R&&s.lineWidth(tt),O=tt)}function ht(tt,ft,Ct){tt?(bt(32823),(M!==ft||E!==Ct)&&(s.polygonOffset(ft,Ct),M=ft,E=Ct)):xt(32823)}function Ft(tt){tt?bt(3089):xt(3089)}function ze(tt){tt===void 0&&(tt=33984+A-1),$!==tt&&(s.activeTexture(tt),$=tt)}function U(tt,ft,Ct){Ct===void 0&&($===null?Ct=33984+A-1:Ct=$);let Ut=D[Ct];Ut===void 0&&(Ut={type:void 0,texture:void 0},D[Ct]=Ut),(Ut.type!==tt||Ut.texture!==ft)&&($!==Ct&&(s.activeTexture(Ct),$=Ct),s.bindTexture(tt,ft||J[tt]),Ut.type=tt,Ut.texture=ft)}function L(){const tt=D[$];tt!==void 0&&tt.type!==void 0&&(s.bindTexture(tt.type,null),tt.type=void 0,tt.texture=void 0)}function ct(){try{s.compressedTexImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function wt(){try{s.compressedTexImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function St(){try{s.texSubImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Et(){try{s.texSubImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function se(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function H(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function et(){try{s.texStorage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Lt(){try{s.texStorage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function zt(){try{s.texImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function $t(){try{s.texImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Qt(tt){X.equals(tt)===!1&&(s.scissor(tt.x,tt.y,tt.z,tt.w),X.copy(tt))}function Jt(tt){it.equals(tt)===!1&&(s.viewport(tt.x,tt.y,tt.z,tt.w),it.copy(tt))}function Ce(tt,ft){let Ct=h.get(ft);Ct===void 0&&(Ct=new WeakMap,h.set(ft,Ct));let Ut=Ct.get(tt);Ut===void 0&&(Ut=s.getUniformBlockIndex(ft,tt.name),Ct.set(tt,Ut))}function Ee(tt,ft){const Ut=h.get(ft).get(tt);u.get(tt)!==Ut&&(s.uniformBlockBinding(ft,Ut,tt.__bindingPointIndex),u.set(tt,Ut))}function Be(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},$=null,D={},f={},p=new WeakMap,g=[],m=null,x=!1,v=null,b=null,y=null,w=null,S=null,C=null,_=null,I=!1,T=null,N=null,O=null,M=null,E=null,X.set(0,0,s.canvas.width,s.canvas.height),it.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:bt,disable:xt,bindFramebuffer:vt,drawBuffers:pt,useProgram:At,setBlending:jt,setMaterial:Zt,setFlipSided:Ht,setCullFace:ue,setLineWidth:ne,setPolygonOffset:ht,setScissorTest:Ft,activeTexture:ze,bindTexture:U,unbindTexture:L,compressedTexImage2D:ct,compressedTexImage3D:wt,texImage2D:zt,texImage3D:$t,updateUBOMapping:Ce,uniformBlockBinding:Ee,texStorage2D:et,texStorage3D:Lt,texSubImage2D:St,texSubImage3D:Et,compressedTexSubImage2D:se,compressedTexSubImage3D:H,scissor:Qt,viewport:Jt,reset:Be}}function QF(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(typeof navigator>"u"?"":navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(U,L){return x?new OffscreenCanvas(U,L):Jd("canvas")}function b(U,L,ct,wt){let St=1;if((U.width>wt||U.height>wt)&&(St=wt/Math.max(U.width,U.height)),St<1||L===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap){const Et=L?Xg:Math.floor,se=Et(St*U.width),H=Et(St*U.height);g===void 0&&(g=v(se,H));const et=ct?v(se,H):g;return et.width=se,et.height=H,et.getContext("2d").drawImage(U,0,0,se,H),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+U.width+"x"+U.height+") to ("+se+"x"+H+")."),et}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+U.width+"x"+U.height+")."),U;return U}function y(U){return Hy(U.width)&&Hy(U.height)}function w(U){return a?!1:U.wrapS!==Ti||U.wrapT!==Ti||U.minFilter!==ws&&U.minFilter!==Js}function S(U,L){return U.generateMipmaps&&L&&U.minFilter!==ws&&U.minFilter!==Js}function C(U){s.generateMipmap(U)}function _(U,L,ct,wt,St=!1){if(a===!1)return L;if(U!==null){if(s[U]!==void 0)return s[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Et=L;return L===6403&&(ct===5126&&(Et=33326),ct===5131&&(Et=33325),ct===5121&&(Et=33321)),L===33319&&(ct===5126&&(Et=33328),ct===5131&&(Et=33327),ct===5121&&(Et=33323)),L===6408&&(ct===5126&&(Et=34836),ct===5131&&(Et=34842),ct===5121&&(Et=wt===an&&St===!1?35907:32856),ct===32819&&(Et=32854),ct===32820&&(Et=32855)),(Et===33325||Et===33326||Et===33327||Et===33328||Et===34842||Et===34836)&&t.get("EXT_color_buffer_float"),Et}function I(U,L,ct){return S(U,ct)===!0||U.isFramebufferTexture&&U.minFilter!==ws&&U.minFilter!==Js?Math.log2(Math.max(L.width,L.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?L.mipmaps.length:1}function T(U){return U===ws||U===by||U===yy?9728:9729}function N(U){const L=U.target;L.removeEventListener("dispose",N),M(L),L.isVideoTexture&&p.delete(L)}function O(U){const L=U.target;L.removeEventListener("dispose",O),A(L)}function M(U){const L=n.get(U);if(L.__webglInit===void 0)return;const ct=U.source,wt=m.get(ct);if(wt){const St=wt[L.__cacheKey];St.usedTimes--,St.usedTimes===0&&E(U),Object.keys(wt).length===0&&m.delete(ct)}n.remove(U)}function E(U){const L=n.get(U);s.deleteTexture(L.__webglTexture);const ct=U.source,wt=m.get(ct);delete wt[L.__cacheKey],o.memory.textures--}function A(U){const L=U.texture,ct=n.get(U),wt=n.get(L);if(wt.__webglTexture!==void 0&&(s.deleteTexture(wt.__webglTexture),o.memory.textures--),U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let St=0;St<6;St++)s.deleteFramebuffer(ct.__webglFramebuffer[St]),ct.__webglDepthbuffer&&s.deleteRenderbuffer(ct.__webglDepthbuffer[St]);else{if(s.deleteFramebuffer(ct.__webglFramebuffer),ct.__webglDepthbuffer&&s.deleteRenderbuffer(ct.__webglDepthbuffer),ct.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ct.__webglMultisampledFramebuffer),ct.__webglColorRenderbuffer)for(let St=0;St<ct.__webglColorRenderbuffer.length;St++)ct.__webglColorRenderbuffer[St]&&s.deleteRenderbuffer(ct.__webglColorRenderbuffer[St]);ct.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ct.__webglDepthRenderbuffer)}if(U.isWebGLMultipleRenderTargets)for(let St=0,Et=L.length;St<Et;St++){const se=n.get(L[St]);se.__webglTexture&&(s.deleteTexture(se.__webglTexture),o.memory.textures--),n.remove(L[St])}n.remove(L),n.remove(U)}let R=0;function V(){R=0}function P(){const U=R;return U>=l&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+l),R+=1,U}function $(U){const L=[];return L.push(U.wrapS),L.push(U.wrapT),L.push(U.wrapR||0),L.push(U.magFilter),L.push(U.minFilter),L.push(U.anisotropy),L.push(U.internalFormat),L.push(U.format),L.push(U.type),L.push(U.generateMipmaps),L.push(U.premultiplyAlpha),L.push(U.flipY),L.push(U.unpackAlignment),L.push(U.encoding),L.join()}function D(U,L){const ct=n.get(U);if(U.isVideoTexture&&Ft(U),U.isRenderTargetTexture===!1&&U.version>0&&ct.__version!==U.version){const wt=U.image;if(wt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(wt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{xt(ct,U,L);return}}e.bindTexture(3553,ct.__webglTexture,33984+L)}function W(U,L){const ct=n.get(U);if(U.version>0&&ct.__version!==U.version){xt(ct,U,L);return}e.bindTexture(35866,ct.__webglTexture,33984+L)}function G(U,L){const ct=n.get(U);if(U.version>0&&ct.__version!==U.version){xt(ct,U,L);return}e.bindTexture(32879,ct.__webglTexture,33984+L)}function X(U,L){const ct=n.get(U);if(U.version>0&&ct.__version!==U.version){vt(ct,U,L);return}e.bindTexture(34067,ct.__webglTexture,33984+L)}const it={[Gg]:10497,[Ti]:33071,[Hg]:33648},at={[ws]:9728,[by]:9984,[yy]:9986,[Js]:9729,[WA]:9985,[Ff]:9987};function J(U,L,ct){if(ct?(s.texParameteri(U,10242,it[L.wrapS]),s.texParameteri(U,10243,it[L.wrapT]),(U===32879||U===35866)&&s.texParameteri(U,32882,it[L.wrapR]),s.texParameteri(U,10240,at[L.magFilter]),s.texParameteri(U,10241,at[L.minFilter])):(s.texParameteri(U,10242,33071),s.texParameteri(U,10243,33071),(U===32879||U===35866)&&s.texParameteri(U,32882,33071),(L.wrapS!==Ti||L.wrapT!==Ti)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(U,10240,T(L.magFilter)),s.texParameteri(U,10241,T(L.minFilter)),L.minFilter!==ws&&L.minFilter!==Js&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const wt=t.get("EXT_texture_filter_anisotropic");if(L.type===Xo&&t.has("OES_texture_float_linear")===!1||a===!1&&L.type===tu&&t.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||n.get(L).__currentAnisotropy)&&(s.texParameterf(U,wt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,i.getMaxAnisotropy())),n.get(L).__currentAnisotropy=L.anisotropy)}}function bt(U,L){let ct=!1;U.__webglInit===void 0&&(U.__webglInit=!0,L.addEventListener("dispose",N));const wt=L.source;let St=m.get(wt);St===void 0&&(St={},m.set(wt,St));const Et=$(L);if(Et!==U.__cacheKey){St[Et]===void 0&&(St[Et]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ct=!0),St[Et].usedTimes++;const se=St[U.__cacheKey];se!==void 0&&(St[U.__cacheKey].usedTimes--,se.usedTimes===0&&E(L)),U.__cacheKey=Et,U.__webglTexture=St[Et].texture}return ct}function xt(U,L,ct){let wt=3553;(L.isDataArrayTexture||L.isCompressedArrayTexture)&&(wt=35866),L.isData3DTexture&&(wt=32879);const St=bt(U,L),Et=L.source;e.bindTexture(wt,U.__webglTexture,33984+ct);const se=n.get(Et);if(Et.version!==se.__version||St===!0){e.activeTexture(33984+ct),s.pixelStorei(37440,L.flipY),s.pixelStorei(37441,L.premultiplyAlpha),s.pixelStorei(3317,L.unpackAlignment),s.pixelStorei(37443,0);const H=w(L)&&y(L.image)===!1;let et=b(L.image,H,!1,u);et=ze(L,et);const Lt=y(et)||a,zt=r.convert(L.format,L.encoding);let $t=r.convert(L.type),Qt=_(L.internalFormat,zt,$t,L.encoding,L.isVideoTexture);J(wt,L,Lt);let Jt;const Ce=L.mipmaps,Ee=a&&L.isVideoTexture!==!0,Be=se.__version===void 0||St===!0,tt=I(L,et,Lt);if(L.isDepthTexture)Qt=6402,a?L.type===Xo?Qt=36012:L.type===qo?Qt=33190:L.type===Tl?Qt=35056:Qt=33189:L.type===Xo&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===ta&&Qt===6402&&L.type!==CS&&L.type!==qo&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=qo,$t=r.convert(L.type)),L.format===Ol&&Qt===6402&&(Qt=34041,L.type!==Tl&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=Tl,$t=r.convert(L.type))),Be&&(Ee?e.texStorage2D(3553,1,Qt,et.width,et.height):e.texImage2D(3553,0,Qt,et.width,et.height,0,zt,$t,null));else if(L.isDataTexture)if(Ce.length>0&&Lt){Ee&&Be&&e.texStorage2D(3553,tt,Qt,Ce[0].width,Ce[0].height);for(let ft=0,Ct=Ce.length;ft<Ct;ft++)Jt=Ce[ft],Ee?e.texSubImage2D(3553,ft,0,0,Jt.width,Jt.height,zt,$t,Jt.data):e.texImage2D(3553,ft,Qt,Jt.width,Jt.height,0,zt,$t,Jt.data);L.generateMipmaps=!1}else Ee?(Be&&e.texStorage2D(3553,tt,Qt,et.width,et.height),e.texSubImage2D(3553,0,0,0,et.width,et.height,zt,$t,et.data)):e.texImage2D(3553,0,Qt,et.width,et.height,0,zt,$t,et.data);else if(L.isCompressedTexture)if(L.isCompressedArrayTexture){Ee&&Be&&e.texStorage3D(35866,tt,Qt,Ce[0].width,Ce[0].height,et.depth);for(let ft=0,Ct=Ce.length;ft<Ct;ft++)Jt=Ce[ft],L.format!==Ei?zt!==null?Ee?e.compressedTexSubImage3D(35866,ft,0,0,0,Jt.width,Jt.height,et.depth,zt,Jt.data,0,0):e.compressedTexImage3D(35866,ft,Qt,Jt.width,Jt.height,et.depth,0,Jt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ee?e.texSubImage3D(35866,ft,0,0,0,Jt.width,Jt.height,et.depth,zt,$t,Jt.data):e.texImage3D(35866,ft,Qt,Jt.width,Jt.height,et.depth,0,zt,$t,Jt.data)}else{Ee&&Be&&e.texStorage2D(3553,tt,Qt,Ce[0].width,Ce[0].height);for(let ft=0,Ct=Ce.length;ft<Ct;ft++)Jt=Ce[ft],L.format!==Ei?zt!==null?Ee?e.compressedTexSubImage2D(3553,ft,0,0,Jt.width,Jt.height,zt,Jt.data):e.compressedTexImage2D(3553,ft,Qt,Jt.width,Jt.height,0,Jt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ee?e.texSubImage2D(3553,ft,0,0,Jt.width,Jt.height,zt,$t,Jt.data):e.texImage2D(3553,ft,Qt,Jt.width,Jt.height,0,zt,$t,Jt.data)}else if(L.isDataArrayTexture)Ee?(Be&&e.texStorage3D(35866,tt,Qt,et.width,et.height,et.depth),e.texSubImage3D(35866,0,0,0,0,et.width,et.height,et.depth,zt,$t,et.data)):e.texImage3D(35866,0,Qt,et.width,et.height,et.depth,0,zt,$t,et.data);else if(L.isData3DTexture)Ee?(Be&&e.texStorage3D(32879,tt,Qt,et.width,et.height,et.depth),e.texSubImage3D(32879,0,0,0,0,et.width,et.height,et.depth,zt,$t,et.data)):e.texImage3D(32879,0,Qt,et.width,et.height,et.depth,0,zt,$t,et.data);else if(L.isFramebufferTexture){if(Be)if(Ee)e.texStorage2D(3553,tt,Qt,et.width,et.height);else{let ft=et.width,Ct=et.height;for(let Ut=0;Ut<tt;Ut++)e.texImage2D(3553,Ut,Qt,ft,Ct,0,zt,$t,null),ft>>=1,Ct>>=1}}else if(Ce.length>0&&Lt){Ee&&Be&&e.texStorage2D(3553,tt,Qt,Ce[0].width,Ce[0].height);for(let ft=0,Ct=Ce.length;ft<Ct;ft++)Jt=Ce[ft],Ee?e.texSubImage2D(3553,ft,0,0,zt,$t,Jt):e.texImage2D(3553,ft,Qt,zt,$t,Jt);L.generateMipmaps=!1}else Ee?(Be&&e.texStorage2D(3553,tt,Qt,et.width,et.height),e.texSubImage2D(3553,0,0,0,zt,$t,et)):e.texImage2D(3553,0,Qt,zt,$t,et);S(L,Lt)&&C(wt),se.__version=Et.version,L.onUpdate&&L.onUpdate(L)}U.__version=L.version}function vt(U,L,ct){if(L.image.length!==6)return;const wt=bt(U,L),St=L.source;e.bindTexture(34067,U.__webglTexture,33984+ct);const Et=n.get(St);if(St.version!==Et.__version||wt===!0){e.activeTexture(33984+ct),s.pixelStorei(37440,L.flipY),s.pixelStorei(37441,L.premultiplyAlpha),s.pixelStorei(3317,L.unpackAlignment),s.pixelStorei(37443,0);const se=L.isCompressedTexture||L.image[0].isCompressedTexture,H=L.image[0]&&L.image[0].isDataTexture,et=[];for(let ft=0;ft<6;ft++)!se&&!H?et[ft]=b(L.image[ft],!1,!0,c):et[ft]=H?L.image[ft].image:L.image[ft],et[ft]=ze(L,et[ft]);const Lt=et[0],zt=y(Lt)||a,$t=r.convert(L.format,L.encoding),Qt=r.convert(L.type),Jt=_(L.internalFormat,$t,Qt,L.encoding),Ce=a&&L.isVideoTexture!==!0,Ee=Et.__version===void 0||wt===!0;let Be=I(L,Lt,zt);J(34067,L,zt);let tt;if(se){Ce&&Ee&&e.texStorage2D(34067,Be,Jt,Lt.width,Lt.height);for(let ft=0;ft<6;ft++){tt=et[ft].mipmaps;for(let Ct=0;Ct<tt.length;Ct++){const Ut=tt[Ct];L.format!==Ei?$t!==null?Ce?e.compressedTexSubImage2D(34069+ft,Ct,0,0,Ut.width,Ut.height,$t,Ut.data):e.compressedTexImage2D(34069+ft,Ct,Jt,Ut.width,Ut.height,0,Ut.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ce?e.texSubImage2D(34069+ft,Ct,0,0,Ut.width,Ut.height,$t,Qt,Ut.data):e.texImage2D(34069+ft,Ct,Jt,Ut.width,Ut.height,0,$t,Qt,Ut.data)}}}else{tt=L.mipmaps,Ce&&Ee&&(tt.length>0&&Be++,e.texStorage2D(34067,Be,Jt,et[0].width,et[0].height));for(let ft=0;ft<6;ft++)if(H){Ce?e.texSubImage2D(34069+ft,0,0,0,et[ft].width,et[ft].height,$t,Qt,et[ft].data):e.texImage2D(34069+ft,0,Jt,et[ft].width,et[ft].height,0,$t,Qt,et[ft].data);for(let Ct=0;Ct<tt.length;Ct++){const ie=tt[Ct].image[ft].image;Ce?e.texSubImage2D(34069+ft,Ct+1,0,0,ie.width,ie.height,$t,Qt,ie.data):e.texImage2D(34069+ft,Ct+1,Jt,ie.width,ie.height,0,$t,Qt,ie.data)}}else{Ce?e.texSubImage2D(34069+ft,0,0,0,$t,Qt,et[ft]):e.texImage2D(34069+ft,0,Jt,$t,Qt,et[ft]);for(let Ct=0;Ct<tt.length;Ct++){const Ut=tt[Ct];Ce?e.texSubImage2D(34069+ft,Ct+1,0,0,$t,Qt,Ut.image[ft]):e.texImage2D(34069+ft,Ct+1,Jt,$t,Qt,Ut.image[ft])}}}S(L,zt)&&C(34067),Et.__version=St.version,L.onUpdate&&L.onUpdate(L)}U.__version=L.version}function pt(U,L,ct,wt,St){const Et=r.convert(ct.format,ct.encoding),se=r.convert(ct.type),H=_(ct.internalFormat,Et,se,ct.encoding);n.get(L).__hasExternalTextures||(St===32879||St===35866?e.texImage3D(St,0,H,L.width,L.height,L.depth,0,Et,se,null):e.texImage2D(St,0,H,L.width,L.height,0,Et,se,null)),e.bindFramebuffer(36160,U),ht(L)?d.framebufferTexture2DMultisampleEXT(36160,wt,St,n.get(ct).__webglTexture,0,ne(L)):(St===3553||St>=34069&&St<=34074)&&s.framebufferTexture2D(36160,wt,St,n.get(ct).__webglTexture,0),e.bindFramebuffer(36160,null)}function At(U,L,ct){if(s.bindRenderbuffer(36161,U),L.depthBuffer&&!L.stencilBuffer){let wt=33189;if(ct||ht(L)){const St=L.depthTexture;St&&St.isDepthTexture&&(St.type===Xo?wt=36012:St.type===qo&&(wt=33190));const Et=ne(L);ht(L)?d.renderbufferStorageMultisampleEXT(36161,Et,wt,L.width,L.height):s.renderbufferStorageMultisample(36161,Et,wt,L.width,L.height)}else s.renderbufferStorage(36161,wt,L.width,L.height);s.framebufferRenderbuffer(36160,36096,36161,U)}else if(L.depthBuffer&&L.stencilBuffer){const wt=ne(L);ct&&ht(L)===!1?s.renderbufferStorageMultisample(36161,wt,35056,L.width,L.height):ht(L)?d.renderbufferStorageMultisampleEXT(36161,wt,35056,L.width,L.height):s.renderbufferStorage(36161,34041,L.width,L.height),s.framebufferRenderbuffer(36160,33306,36161,U)}else{const wt=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let St=0;St<wt.length;St++){const Et=wt[St],se=r.convert(Et.format,Et.encoding),H=r.convert(Et.type),et=_(Et.internalFormat,se,H,Et.encoding),Lt=ne(L);ct&&ht(L)===!1?s.renderbufferStorageMultisample(36161,Lt,et,L.width,L.height):ht(L)?d.renderbufferStorageMultisampleEXT(36161,Lt,et,L.width,L.height):s.renderbufferStorage(36161,et,L.width,L.height)}}s.bindRenderbuffer(36161,null)}function Rt(U,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,U),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),D(L.depthTexture,0);const wt=n.get(L.depthTexture).__webglTexture,St=ne(L);if(L.depthTexture.format===ta)ht(L)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,wt,0,St):s.framebufferTexture2D(36160,36096,3553,wt,0);else if(L.depthTexture.format===Ol)ht(L)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,wt,0,St):s.framebufferTexture2D(36160,33306,3553,wt,0);else throw new Error("Unknown depthTexture format")}function It(U){const L=n.get(U),ct=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!L.__autoAllocateDepthBuffer){if(ct)throw new Error("target.depthTexture not supported in Cube render targets");Rt(L.__webglFramebuffer,U)}else if(ct){L.__webglDepthbuffer=[];for(let wt=0;wt<6;wt++)e.bindFramebuffer(36160,L.__webglFramebuffer[wt]),L.__webglDepthbuffer[wt]=s.createRenderbuffer(),At(L.__webglDepthbuffer[wt],U,!1)}else e.bindFramebuffer(36160,L.__webglFramebuffer),L.__webglDepthbuffer=s.createRenderbuffer(),At(L.__webglDepthbuffer,U,!1);e.bindFramebuffer(36160,null)}function jt(U,L,ct){const wt=n.get(U);L!==void 0&&pt(wt.__webglFramebuffer,U,U.texture,36064,3553),ct!==void 0&&It(U)}function Zt(U){const L=U.texture,ct=n.get(U),wt=n.get(L);U.addEventListener("dispose",O),U.isWebGLMultipleRenderTargets!==!0&&(wt.__webglTexture===void 0&&(wt.__webglTexture=s.createTexture()),wt.__version=L.version,o.memory.textures++);const St=U.isWebGLCubeRenderTarget===!0,Et=U.isWebGLMultipleRenderTargets===!0,se=y(U)||a;if(St){ct.__webglFramebuffer=[];for(let H=0;H<6;H++)ct.__webglFramebuffer[H]=s.createFramebuffer()}else{if(ct.__webglFramebuffer=s.createFramebuffer(),Et)if(i.drawBuffers){const H=U.texture;for(let et=0,Lt=H.length;et<Lt;et++){const zt=n.get(H[et]);zt.__webglTexture===void 0&&(zt.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&U.samples>0&&ht(U)===!1){const H=Et?L:[L];ct.__webglMultisampledFramebuffer=s.createFramebuffer(),ct.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,ct.__webglMultisampledFramebuffer);for(let et=0;et<H.length;et++){const Lt=H[et];ct.__webglColorRenderbuffer[et]=s.createRenderbuffer(),s.bindRenderbuffer(36161,ct.__webglColorRenderbuffer[et]);const zt=r.convert(Lt.format,Lt.encoding),$t=r.convert(Lt.type),Qt=_(Lt.internalFormat,zt,$t,Lt.encoding,U.isXRRenderTarget===!0),Jt=ne(U);s.renderbufferStorageMultisample(36161,Jt,Qt,U.width,U.height),s.framebufferRenderbuffer(36160,36064+et,36161,ct.__webglColorRenderbuffer[et])}s.bindRenderbuffer(36161,null),U.depthBuffer&&(ct.__webglDepthRenderbuffer=s.createRenderbuffer(),At(ct.__webglDepthRenderbuffer,U,!0)),e.bindFramebuffer(36160,null)}}if(St){e.bindTexture(34067,wt.__webglTexture),J(34067,L,se);for(let H=0;H<6;H++)pt(ct.__webglFramebuffer[H],U,L,36064,34069+H);S(L,se)&&C(34067),e.unbindTexture()}else if(Et){const H=U.texture;for(let et=0,Lt=H.length;et<Lt;et++){const zt=H[et],$t=n.get(zt);e.bindTexture(3553,$t.__webglTexture),J(3553,zt,se),pt(ct.__webglFramebuffer,U,zt,36064+et,3553),S(zt,se)&&C(3553)}e.unbindTexture()}else{let H=3553;(U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(a?H=U.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(H,wt.__webglTexture),J(H,L,se),pt(ct.__webglFramebuffer,U,L,36064,H),S(L,se)&&C(H),e.unbindTexture()}U.depthBuffer&&It(U)}function Ht(U){const L=y(U)||a,ct=U.isWebGLMultipleRenderTargets===!0?U.texture:[U.texture];for(let wt=0,St=ct.length;wt<St;wt++){const Et=ct[wt];if(S(Et,L)){const se=U.isWebGLCubeRenderTarget?34067:3553,H=n.get(Et).__webglTexture;e.bindTexture(se,H),C(se),e.unbindTexture()}}}function ue(U){if(a&&U.samples>0&&ht(U)===!1){const L=U.isWebGLMultipleRenderTargets?U.texture:[U.texture],ct=U.width,wt=U.height;let St=16384;const Et=[],se=U.stencilBuffer?33306:36096,H=n.get(U),et=U.isWebGLMultipleRenderTargets===!0;if(et)for(let Lt=0;Lt<L.length;Lt++)e.bindFramebuffer(36160,H.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Lt,36161,null),e.bindFramebuffer(36160,H.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Lt,3553,null,0);e.bindFramebuffer(36008,H.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,H.__webglFramebuffer);for(let Lt=0;Lt<L.length;Lt++){Et.push(36064+Lt),U.depthBuffer&&Et.push(se);const zt=H.__ignoreDepthValues!==void 0?H.__ignoreDepthValues:!1;if(zt===!1&&(U.depthBuffer&&(St|=256),U.stencilBuffer&&(St|=1024)),et&&s.framebufferRenderbuffer(36008,36064,36161,H.__webglColorRenderbuffer[Lt]),zt===!0&&(s.invalidateFramebuffer(36008,[se]),s.invalidateFramebuffer(36009,[se])),et){const $t=n.get(L[Lt]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,$t,0)}s.blitFramebuffer(0,0,ct,wt,0,0,ct,wt,St,9728),f&&s.invalidateFramebuffer(36008,Et)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),et)for(let Lt=0;Lt<L.length;Lt++){e.bindFramebuffer(36160,H.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Lt,36161,H.__webglColorRenderbuffer[Lt]);const zt=n.get(L[Lt]).__webglTexture;e.bindFramebuffer(36160,H.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Lt,3553,zt,0)}e.bindFramebuffer(36009,H.__webglMultisampledFramebuffer)}}function ne(U){return Math.min(h,U.samples)}function ht(U){const L=n.get(U);return a&&U.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function Ft(U){const L=o.render.frame;p.get(U)!==L&&(p.set(U,L),U.update())}function ze(U,L){const ct=U.encoding,wt=U.format,St=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||U.format===qg||ct!==ca&&(ct===an?a===!1?t.has("EXT_sRGB")===!0&&wt===Ei?(U.format=qg,U.minFilter=Js,U.generateMipmaps=!1):L=ES.sRGBToLinear(L):(wt!==Ei||St!==la)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ct)),L}this.allocateTextureUnit=P,this.resetTextureUnits=V,this.setTexture2D=D,this.setTexture2DArray=W,this.setTexture3D=G,this.setTextureCube=X,this.rebindTextures=jt,this.setupRenderTarget=Zt,this.updateRenderTargetMipmap=Ht,this.updateMultisampleRenderTarget=ue,this.setupDepthRenderbuffer=It,this.setupFrameBufferTexture=pt,this.useMultisampledRTT=ht}function t3(s,t,e){const n=e.isWebGL2;function i(r,o=null){let a;if(r===la)return 5121;if(r===XA)return 32819;if(r===jA)return 32820;if(r===GA)return 5120;if(r===HA)return 5122;if(r===CS)return 5123;if(r===qA)return 5124;if(r===qo)return 5125;if(r===Xo)return 5126;if(r===tu)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===KA)return 6406;if(r===Ei)return 6408;if(r===ZA)return 6409;if(r===JA)return 6410;if(r===ta)return 6402;if(r===Ol)return 34041;if(r===QA)return 6403;if(r===YA)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===qg)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===tN)return 36244;if(r===eN)return 33319;if(r===nN)return 33320;if(r===sN)return 36249;if(r===km||r===Am||r===Nm||r===Rm)if(o===an)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===km)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Am)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Nm)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Rm)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===km)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Am)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Nm)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Rm)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===wy||r===_y||r===Sy||r===Cy)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===wy)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===_y)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Sy)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Cy)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===iN)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Iy||r===Ty)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===Iy)return o===an?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Ty)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Ey||r===My||r===ky||r===Ay||r===Ny||r===Ry||r===$y||r===Dy||r===Fy||r===Ly||r===Py||r===Oy||r===zy||r===By)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===Ey)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===My)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===ky)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Ay)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Ny)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Ry)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===$y)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Dy)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Fy)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Ly)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Py)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Oy)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===zy)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===By)return o===an?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Uy)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===Uy)return o===an?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===Tl?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class e3 extends Qs{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class md extends Wn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const n3={type:"move"};class og{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new md,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new md,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Y,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Y),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new md,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Y,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Y),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const m=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const v=new md;v.matrixAutoUpdate=!1,v.visible=!1,c.joints[g.jointName]=v,c.add(v)}const x=c.joints[g.jointName];m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=m.radius),x.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(n3)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class s3 extends $i{constructor(t,e,n,i,r,o,a,l,c,u){if(u=u!==void 0?u:ta,u!==ta&&u!==Ol)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===ta&&(n=qo),n===void 0&&u===Ol&&(n=Tl),super(null,i,r,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ws,this.minFilter=l!==void 0?l:ws,this.flipY=!1,this.generateMipmaps=!1}}class i3 extends Ma{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,d=null,f=null;const p=e.getContextAttributes();let g=null,m=null;const x=[],v=[],b=new Qs;b.layers.enable(1),b.viewport=new Vn;const y=new Qs;y.layers.enable(2),y.viewport=new Vn;const w=[b,y],S=new e3;S.layers.enable(1),S.layers.enable(2);let C=null,_=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let D=x[$];return D===void 0&&(D=new og,x[$]=D),D.getTargetRaySpace()},this.getControllerGrip=function($){let D=x[$];return D===void 0&&(D=new og,x[$]=D),D.getGripSpace()},this.getHand=function($){let D=x[$];return D===void 0&&(D=new og,x[$]=D),D.getHandSpace()};function I($){const D=v.indexOf($.inputSource);if(D===-1)return;const W=x[D];W!==void 0&&W.dispatchEvent({type:$.type,data:$.inputSource})}function T(){i.removeEventListener("select",I),i.removeEventListener("selectstart",I),i.removeEventListener("selectend",I),i.removeEventListener("squeeze",I),i.removeEventListener("squeezestart",I),i.removeEventListener("squeezeend",I),i.removeEventListener("end",T),i.removeEventListener("inputsourceschange",N);for(let $=0;$<x.length;$++){const D=v[$];D!==null&&(v[$]=null,x[$].disconnect(D))}C=null,_=null,t.setRenderTarget(g),d=null,h=null,u=null,i=null,m=null,P.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){r=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function($){l=$},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function($){if(i=$,i!==null){if(g=t.getRenderTarget(),i.addEventListener("select",I),i.addEventListener("selectstart",I),i.addEventListener("selectend",I),i.addEventListener("squeeze",I),i.addEventListener("squeezestart",I),i.addEventListener("squeezeend",I),i.addEventListener("end",T),i.addEventListener("inputsourceschange",N),p.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const D={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,D),i.updateRenderState({baseLayer:d}),m=new ua(d.framebufferWidth,d.framebufferHeight,{format:Ei,type:la,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let D=null,W=null,G=null;p.depth&&(G=p.stencil?35056:33190,D=p.stencil?Ol:ta,W=p.stencil?Tl:qo);const X={colorFormat:32856,depthFormat:G,scaleFactor:r};u=new XRWebGLBinding(i,e),h=u.createProjectionLayer(X),i.updateRenderState({layers:[h]}),m=new ua(h.textureWidth,h.textureHeight,{format:Ei,type:la,depthTexture:new s3(h.textureWidth,h.textureHeight,W,void 0,void 0,void 0,void 0,void 0,void 0,D),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const it=t.properties.get(m);it.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),P.setContext(i),P.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function N($){for(let D=0;D<$.removed.length;D++){const W=$.removed[D],G=v.indexOf(W);G>=0&&(v[G]=null,x[G].dispatchEvent({type:"disconnected",data:W}))}for(let D=0;D<$.added.length;D++){const W=$.added[D];let G=v.indexOf(W);if(G===-1){for(let it=0;it<x.length;it++)if(it>=v.length){v.push(W),G=it;break}else if(v[it]===null){v[it]=W,G=it;break}if(G===-1)break}const X=x[G];X&&X.dispatchEvent({type:"connected",data:W})}}const O=new Y,M=new Y;function E($,D,W){O.setFromMatrixPosition(D.matrixWorld),M.setFromMatrixPosition(W.matrixWorld);const G=O.distanceTo(M),X=D.projectionMatrix.elements,it=W.projectionMatrix.elements,at=X[14]/(X[10]-1),J=X[14]/(X[10]+1),bt=(X[9]+1)/X[5],xt=(X[9]-1)/X[5],vt=(X[8]-1)/X[0],pt=(it[8]+1)/it[0],At=at*vt,Rt=at*pt,It=G/(-vt+pt),jt=It*-vt;D.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(jt),$.translateZ(It),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const Zt=at+It,Ht=J+It,ue=At-jt,ne=Rt+(G-jt),ht=bt*J/Ht*Zt,Ft=xt*J/Ht*Zt;$.projectionMatrix.makePerspective(ue,ne,ht,Ft,Zt,Ht)}function A($,D){D===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(D.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(i===null)return;S.near=y.near=b.near=$.near,S.far=y.far=b.far=$.far,(C!==S.near||_!==S.far)&&(i.updateRenderState({depthNear:S.near,depthFar:S.far}),C=S.near,_=S.far);const D=$.parent,W=S.cameras;A(S,D);for(let X=0;X<W.length;X++)A(W[X],D);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),$.matrix.copy(S.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const G=$.children;for(let X=0,it=G.length;X<it;X++)G[X].updateMatrixWorld(!0);W.length===2?E(S,b,y):S.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function($){h!==null&&(h.fixedFoveation=$),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=$)};let R=null;function V($,D){if(c=D.getViewerPose(l||o),f=D,c!==null){const W=c.views;d!==null&&(t.setRenderTargetFramebuffer(m,d.framebuffer),t.setRenderTarget(m));let G=!1;W.length!==S.cameras.length&&(S.cameras.length=0,G=!0);for(let X=0;X<W.length;X++){const it=W[X];let at=null;if(d!==null)at=d.getViewport(it);else{const bt=u.getViewSubImage(h,it);at=bt.viewport,X===0&&(t.setRenderTargetTextures(m,bt.colorTexture,h.ignoreDepthValues?void 0:bt.depthStencilTexture),t.setRenderTarget(m))}let J=w[X];J===void 0&&(J=new Qs,J.layers.enable(X),J.viewport=new Vn,w[X]=J),J.matrix.fromArray(it.transform.matrix),J.projectionMatrix.fromArray(it.projectionMatrix),J.viewport.set(at.x,at.y,at.width,at.height),X===0&&S.matrix.copy(J.matrix),G===!0&&S.cameras.push(J)}}for(let W=0;W<x.length;W++){const G=v[W],X=x[W];G!==null&&X!==void 0&&X.update(G,D,l||o)}R&&R($,D),f=null}const P=new DS;P.setAnimationLoop(V),this.setAnimationLoop=function($){R=$},this.dispose=function(){}}}function r3(s,t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,v,b){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),h(g,m),m.isMeshPhysicalMaterial&&d(g,m,b)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),p(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,x,v):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===li&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===li&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const y=s.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*y}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let v;m.map?v=m.map:m.specularMap?v=m.specularMap:m.displacementMap?v=m.displacementMap:m.normalMap?v=m.normalMap:m.bumpMap?v=m.bumpMap:m.roughnessMap?v=m.roughnessMap:m.metalnessMap?v=m.metalnessMap:m.alphaMap?v=m.alphaMap:m.emissiveMap?v=m.emissiveMap:m.clearcoatMap?v=m.clearcoatMap:m.clearcoatNormalMap?v=m.clearcoatNormalMap:m.clearcoatRoughnessMap?v=m.clearcoatRoughnessMap:m.iridescenceMap?v=m.iridescenceMap:m.iridescenceThicknessMap?v=m.iridescenceThicknessMap:m.specularIntensityMap?v=m.specularIntensityMap:m.specularColorMap?v=m.specularColorMap:m.transmissionMap?v=m.transmissionMap:m.thicknessMap?v=m.thicknessMap:m.sheenColorMap?v=m.sheenColorMap:m.sheenRoughnessMap&&(v=m.sheenRoughnessMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix));let b;m.aoMap?b=m.aoMap:m.lightMap&&(b=m.lightMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),g.uv2Transform.value.copy(b.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,x,v){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=v*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let b;m.map?b=m.map:m.alphaMap&&(b=m.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),g.uvTransform.value.copy(b.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===li&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function o3(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(35375):0;function l(v,b){const y=b.program;n.uniformBlockBinding(v,y)}function c(v,b){let y=i[v.id];y===void 0&&(p(v),y=u(v),i[v.id]=y,v.addEventListener("dispose",m));const w=b.program;n.updateUBOMapping(v,w);const S=t.render.frame;r[v.id]!==S&&(d(v),r[v.id]=S)}function u(v){const b=h();v.__bindingPointIndex=b;const y=s.createBuffer(),w=v.__size,S=v.usage;return s.bindBuffer(35345,y),s.bufferData(35345,w,S),s.bindBuffer(35345,null),s.bindBufferBase(35345,b,y),y}function h(){for(let v=0;v<a;v++)if(o.indexOf(v)===-1)return o.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(v){const b=i[v.id],y=v.uniforms,w=v.__cache;s.bindBuffer(35345,b);for(let S=0,C=y.length;S<C;S++){const _=y[S];if(f(_,S,w)===!0){const I=_.value,T=_.__offset;typeof I=="number"?(_.__data[0]=I,s.bufferSubData(35345,T,_.__data)):(_.value.isMatrix3?(_.__data[0]=_.value.elements[0],_.__data[1]=_.value.elements[1],_.__data[2]=_.value.elements[2],_.__data[3]=_.value.elements[0],_.__data[4]=_.value.elements[3],_.__data[5]=_.value.elements[4],_.__data[6]=_.value.elements[5],_.__data[7]=_.value.elements[0],_.__data[8]=_.value.elements[6],_.__data[9]=_.value.elements[7],_.__data[10]=_.value.elements[8],_.__data[11]=_.value.elements[0]):I.toArray(_.__data),s.bufferSubData(35345,T,_.__data))}}s.bindBuffer(35345,null)}function f(v,b,y){const w=v.value;if(y[b]===void 0)return typeof w=="number"?y[b]=w:y[b]=w.clone(),!0;if(typeof w=="number"){if(y[b]!==w)return y[b]=w,!0}else{const S=y[b];if(S.equals(w)===!1)return S.copy(w),!0}return!1}function p(v){const b=v.uniforms;let y=0;const w=16;let S=0;for(let C=0,_=b.length;C<_;C++){const I=b[C],T=g(I);if(I.__data=new Float32Array(T.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=y,C>0){S=y%w;const N=w-S;S!==0&&N-T.boundary<0&&(y+=w-S,I.__offset=y)}y+=T.storage}return S=y%w,S>0&&(y+=w-S),v.__size=y,v.__cache={},this}function g(v){const b=v.value,y={boundary:0,storage:0};return typeof b=="number"?(y.boundary=4,y.storage=4):b.isVector2?(y.boundary=8,y.storage=8):b.isVector3||b.isColor?(y.boundary=16,y.storage=12):b.isVector4?(y.boundary=16,y.storage=16):b.isMatrix3?(y.boundary=48,y.storage=48):b.isMatrix4?(y.boundary=64,y.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),y}function m(v){const b=v.target;b.removeEventListener("dispose",m);const y=o.indexOf(b.__bindingPointIndex);o.splice(y,1),s.deleteBuffer(i[b.id]),delete i[b.id],delete r[b.id]}function x(){for(const v in i)s.deleteBuffer(i[v]);o=[],i={},r={}}return{bind:l,update:c,dispose:x}}function a3(){const s=Jd("canvas");return s.style.display="block",s}function BS(s={}){this.isWebGLRenderer=!0;const t=s.canvas!==void 0?s.canvas:a3(),e=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;e!==null?u=e.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let h=null,d=null;const f=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ca,this.physicallyCorrectLights=!1,this.toneMapping=Er,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,x=0,v=0,b=null,y=-1,w=null;const S=new Vn,C=new Vn;let _=null,I=t.width,T=t.height,N=1,O=null,M=null;const E=new Vn(0,0,I,T),A=new Vn(0,0,I,T);let R=!1;const V=new jx;let P=!1,$=!1,D=null;const W=new mn,G=new Dt,X=new Y,it={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function at(){return b===null?N:1}let J=e;function bt(B,rt){for(let dt=0;dt<B.length;dt++){const nt=B[dt],mt=t.getContext(nt,rt);if(mt!==null)return mt}return null}try{const B={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Hx}`),t.addEventListener("webglcontextlost",Qt,!1),t.addEventListener("webglcontextrestored",Jt,!1),t.addEventListener("webglcontextcreationerror",Ce,!1),J===null){const rt=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&rt.shift(),J=bt(rt,B),J===null)throw bt(rt)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(B){throw console.error("THREE.WebGLRenderer: "+B.message),B}let xt,vt,pt,At,Rt,It,jt,Zt,Ht,ue,ne,ht,Ft,ze,U,L,ct,wt,St,Et,se,H,et,Lt;function zt(){xt=new vD(J),vt=new dD(J,xt,s),xt.init(vt),H=new t3(J,xt,vt),pt=new JF(J,xt,vt),At=new wD,Rt=new OF,It=new QF(J,xt,pt,Rt,vt,H,At),jt=new pD(g),Zt=new xD(g),Ht=new AN(J,vt),et=new uD(J,xt,Ht,vt),ue=new bD(J,Ht,At,et),ne=new ID(J,ue,Ht,At),St=new CD(J,vt,It),L=new fD(Rt),ht=new PF(g,jt,Zt,xt,vt,et,L),Ft=new r3(g,Rt),ze=new BF,U=new qF(xt,vt),wt=new cD(g,jt,Zt,pt,ne,u,o),ct=new ZF(g,ne,vt),Lt=new o3(J,At,vt,pt),Et=new hD(J,xt,At,vt),se=new yD(J,xt,At,vt),At.programs=ht.programs,g.capabilities=vt,g.extensions=xt,g.properties=Rt,g.renderLists=ze,g.shadowMap=ct,g.state=pt,g.info=At}zt();const $t=new i3(g,J);this.xr=$t,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const B=xt.get("WEBGL_lose_context");B&&B.loseContext()},this.forceContextRestore=function(){const B=xt.get("WEBGL_lose_context");B&&B.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(B){B!==void 0&&(N=B,this.setSize(I,T,!1))},this.getSize=function(B){return B.set(I,T)},this.setSize=function(B,rt,dt){if($t.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}I=B,T=rt,t.width=Math.floor(B*N),t.height=Math.floor(rt*N),dt!==!1&&(t.style.width=B+"px",t.style.height=rt+"px"),this.setViewport(0,0,B,rt)},this.getDrawingBufferSize=function(B){return B.set(I*N,T*N).floor()},this.setDrawingBufferSize=function(B,rt,dt){I=B,T=rt,N=dt,t.width=Math.floor(B*dt),t.height=Math.floor(rt*dt),this.setViewport(0,0,B,rt)},this.getCurrentViewport=function(B){return B.copy(S)},this.getViewport=function(B){return B.copy(E)},this.setViewport=function(B,rt,dt,nt){B.isVector4?E.set(B.x,B.y,B.z,B.w):E.set(B,rt,dt,nt),pt.viewport(S.copy(E).multiplyScalar(N).floor())},this.getScissor=function(B){return B.copy(A)},this.setScissor=function(B,rt,dt,nt){B.isVector4?A.set(B.x,B.y,B.z,B.w):A.set(B,rt,dt,nt),pt.scissor(C.copy(A).multiplyScalar(N).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(B){pt.setScissorTest(R=B)},this.setOpaqueSort=function(B){O=B},this.setTransparentSort=function(B){M=B},this.getClearColor=function(B){return B.copy(wt.getClearColor())},this.setClearColor=function(){wt.setClearColor.apply(wt,arguments)},this.getClearAlpha=function(){return wt.getClearAlpha()},this.setClearAlpha=function(){wt.setClearAlpha.apply(wt,arguments)},this.clear=function(B=!0,rt=!0,dt=!0){let nt=0;B&&(nt|=16384),rt&&(nt|=256),dt&&(nt|=1024),J.clear(nt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Qt,!1),t.removeEventListener("webglcontextrestored",Jt,!1),t.removeEventListener("webglcontextcreationerror",Ce,!1),ze.dispose(),U.dispose(),Rt.dispose(),jt.dispose(),Zt.dispose(),ne.dispose(),et.dispose(),Lt.dispose(),ht.dispose(),$t.dispose(),$t.removeEventListener("sessionstart",Ut),$t.removeEventListener("sessionend",ie),D&&(D.dispose(),D=null),$e.stop()};function Qt(B){B.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Jt(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const B=At.autoReset,rt=ct.enabled,dt=ct.autoUpdate,nt=ct.needsUpdate,mt=ct.type;zt(),At.autoReset=B,ct.enabled=rt,ct.autoUpdate=dt,ct.needsUpdate=nt,ct.type=mt}function Ce(B){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",B.statusMessage)}function Ee(B){const rt=B.target;rt.removeEventListener("dispose",Ee),Be(rt)}function Be(B){tt(B),Rt.remove(B)}function tt(B){const rt=Rt.get(B).programs;rt!==void 0&&(rt.forEach(function(dt){ht.releaseProgram(dt)}),B.isShaderMaterial&&ht.releaseShaderCache(B))}this.renderBufferDirect=function(B,rt,dt,nt,mt,oe){rt===null&&(rt=it);const fe=mt.isMesh&&mt.matrixWorld.determinant()<0,ye=tA(B,rt,dt,nt,mt);pt.setMaterial(nt,fe);let ve=dt.index;const De=dt.attributes.position;if(ve===null){if(De===void 0||De.count===0)return}else if(ve.count===0)return;let _e=1;nt.wireframe===!0&&(ve=ue.getWireframeAttribute(dt),_e=2),et.setup(mt,nt,ye,dt,ve);let Me,on=Et;ve!==null&&(Me=Ht.get(ve),on=se,on.setIndex(Me));const Mo=ve!==null?ve.count:De.count,Va=dt.drawRange.start*_e,Wa=dt.drawRange.count*_e,Vi=oe!==null?oe.start*_e:0,Fe=oe!==null?oe.count*_e:1/0,Ga=Math.max(Va,Vi),vn=Math.min(Mo,Va+Wa,Vi+Fe)-1,Hs=Math.max(0,vn-Ga+1);if(Hs!==0){if(mt.isMesh)nt.wireframe===!0?(pt.setLineWidth(nt.wireframeLinewidth*at()),on.setMode(1)):on.setMode(4);else if(mt.isLine){let Or=nt.linewidth;Or===void 0&&(Or=1),pt.setLineWidth(Or*at()),mt.isLineSegments?on.setMode(1):mt.isLineLoop?on.setMode(2):on.setMode(3)}else mt.isPoints?on.setMode(0):mt.isSprite&&on.setMode(4);if(mt.isInstancedMesh)on.renderInstances(Ga,Hs,mt.count);else if(dt.isInstancedBufferGeometry){const Or=Math.min(dt.instanceCount,dt._maxInstanceCount);on.renderInstances(Ga,Hs,Or)}else on.render(Ga,Hs)}},this.compile=function(B,rt){function dt(nt,mt,oe){nt.transparent===!0&&nt.side===ei?(nt.side=li,nt.needsUpdate=!0,Gs(nt,mt,oe),nt.side=Fl,nt.needsUpdate=!0,Gs(nt,mt,oe),nt.side=ei):Gs(nt,mt,oe)}d=U.get(B),d.init(),p.push(d),B.traverseVisible(function(nt){nt.isLight&&nt.layers.test(rt.layers)&&(d.pushLight(nt),nt.castShadow&&d.pushShadow(nt))}),d.setupLights(g.physicallyCorrectLights),B.traverse(function(nt){const mt=nt.material;if(mt)if(Array.isArray(mt))for(let oe=0;oe<mt.length;oe++){const fe=mt[oe];dt(fe,B,nt)}else dt(mt,B,nt)}),p.pop(),d=null};let ft=null;function Ct(B){ft&&ft(B)}function Ut(){$e.stop()}function ie(){$e.start()}const $e=new DS;$e.setAnimationLoop(Ct),typeof self<"u"&&$e.setContext(self),this.setAnimationLoop=function(B){ft=B,$t.setAnimationLoop(B),B===null?$e.stop():$e.start()},$t.addEventListener("sessionstart",Ut),$t.addEventListener("sessionend",ie),this.render=function(B,rt){if(rt!==void 0&&rt.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),rt.parent===null&&rt.matrixWorldAutoUpdate===!0&&rt.updateMatrixWorld(),$t.enabled===!0&&$t.isPresenting===!0&&($t.cameraAutoUpdate===!0&&$t.updateCamera(rt),rt=$t.getCamera()),B.isScene===!0&&B.onBeforeRender(g,B,rt,b),d=U.get(B,p.length),d.init(),p.push(d),W.multiplyMatrices(rt.projectionMatrix,rt.matrixWorldInverse),V.setFromProjectionMatrix(W),$=this.localClippingEnabled,P=L.init(this.clippingPlanes,$,rt),h=ze.get(B,f.length),h.init(),f.push(h),On(B,rt,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(O,M),P===!0&&L.beginShadows();const dt=d.state.shadowsArray;if(ct.render(dt,B,rt),P===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),wt.render(h,B),d.setupLights(g.physicallyCorrectLights),rt.isArrayCamera){const nt=rt.cameras;for(let mt=0,oe=nt.length;mt<oe;mt++){const fe=nt[mt];ts(h,B,fe,fe.viewport)}}else ts(h,B,rt);b!==null&&(It.updateMultisampleRenderTarget(b),It.updateRenderTargetMipmap(b)),B.isScene===!0&&B.onAfterRender(g,B,rt),et.resetDefaultState(),y=-1,w=null,p.pop(),p.length>0?d=p[p.length-1]:d=null,f.pop(),f.length>0?h=f[f.length-1]:h=null};function On(B,rt,dt,nt){if(B.visible===!1)return;if(B.layers.test(rt.layers)){if(B.isGroup)dt=B.renderOrder;else if(B.isLOD)B.autoUpdate===!0&&B.update(rt);else if(B.isLight)d.pushLight(B),B.castShadow&&d.pushShadow(B);else if(B.isSprite){if(!B.frustumCulled||V.intersectsSprite(B)){nt&&X.setFromMatrixPosition(B.matrixWorld).applyMatrix4(W);const fe=ne.update(B),ye=B.material;ye.visible&&h.push(B,fe,ye,dt,X.z,null)}}else if((B.isMesh||B.isLine||B.isPoints)&&(B.isSkinnedMesh&&B.skeleton.frame!==At.render.frame&&(B.skeleton.update(),B.skeleton.frame=At.render.frame),!B.frustumCulled||V.intersectsObject(B))){nt&&X.setFromMatrixPosition(B.matrixWorld).applyMatrix4(W);const fe=ne.update(B),ye=B.material;if(Array.isArray(ye)){const ve=fe.groups;for(let De=0,_e=ve.length;De<_e;De++){const Me=ve[De],on=ye[Me.materialIndex];on&&on.visible&&h.push(B,fe,on,dt,X.z,Me)}}else ye.visible&&h.push(B,fe,ye,dt,X.z,null)}}const oe=B.children;for(let fe=0,ye=oe.length;fe<ye;fe++)On(oe[fe],rt,dt,nt)}function ts(B,rt,dt,nt){const mt=B.opaque,oe=B.transmissive,fe=B.transparent;d.setupLightsView(dt),oe.length>0&&Eo(mt,rt,dt),nt&&pt.viewport(S.copy(nt)),mt.length>0&&Qe(mt,rt,dt),oe.length>0&&Qe(oe,rt,dt),fe.length>0&&Qe(fe,rt,dt),pt.buffers.depth.setTest(!0),pt.buffers.depth.setMask(!0),pt.buffers.color.setMask(!0),pt.setPolygonOffset(!1)}function Eo(B,rt,dt){const nt=vt.isWebGL2;D===null&&(D=new ua(1,1,{generateMipmaps:!0,type:xt.has("EXT_color_buffer_half_float")?tu:la,minFilter:Ff,samples:nt&&r===!0?4:0})),g.getDrawingBufferSize(G),nt?D.setSize(G.x,G.y):D.setSize(Xg(G.x),Xg(G.y));const mt=g.getRenderTarget();g.setRenderTarget(D),g.clear();const oe=g.toneMapping;g.toneMapping=Er,Qe(B,rt,dt),g.toneMapping=oe,It.updateMultisampleRenderTarget(D),It.updateRenderTargetMipmap(D),g.setRenderTarget(mt)}function Qe(B,rt,dt){const nt=rt.isScene===!0?rt.overrideMaterial:null;for(let mt=0,oe=B.length;mt<oe;mt++){const fe=B[mt],ye=fe.object,ve=fe.geometry,De=nt===null?fe.material:nt,_e=fe.group;ye.layers.test(dt.layers)&&ur(ye,rt,dt,ve,De,_e)}}function ur(B,rt,dt,nt,mt,oe){B.onBeforeRender(g,rt,dt,nt,mt,oe),B.modelViewMatrix.multiplyMatrices(dt.matrixWorldInverse,B.matrixWorld),B.normalMatrix.getNormalMatrix(B.modelViewMatrix),mt.onBeforeRender(g,rt,dt,nt,B,oe),mt.transparent===!0&&mt.side===ei?(mt.side=li,mt.needsUpdate=!0,g.renderBufferDirect(dt,rt,nt,mt,B,oe),mt.side=Fl,mt.needsUpdate=!0,g.renderBufferDirect(dt,rt,nt,mt,B,oe),mt.side=ei):g.renderBufferDirect(dt,rt,nt,mt,B,oe),B.onAfterRender(g,rt,dt,nt,mt,oe)}function Gs(B,rt,dt){rt.isScene!==!0&&(rt=it);const nt=Rt.get(B),mt=d.state.lights,oe=d.state.shadowsArray,fe=mt.state.version,ye=ht.getParameters(B,mt.state,oe,rt,dt),ve=ht.getProgramCacheKey(ye);let De=nt.programs;nt.environment=B.isMeshStandardMaterial?rt.environment:null,nt.fog=rt.fog,nt.envMap=(B.isMeshStandardMaterial?Zt:jt).get(B.envMap||nt.environment),De===void 0&&(B.addEventListener("dispose",Ee),De=new Map,nt.programs=De);let _e=De.get(ve);if(_e!==void 0){if(nt.currentProgram===_e&&nt.lightsStateVersion===fe)return ly(B,ye),_e}else ye.uniforms=ht.getUniforms(B),B.onBuild(dt,ye,g),B.onBeforeCompile(ye,g),_e=ht.acquireProgram(ye,ve),De.set(ve,_e),nt.uniforms=ye.uniforms;const Me=nt.uniforms;(!B.isShaderMaterial&&!B.isRawShaderMaterial||B.clipping===!0)&&(Me.clippingPlanes=L.uniform),ly(B,ye),nt.needsLights=nA(B),nt.lightsStateVersion=fe,nt.needsLights&&(Me.ambientLightColor.value=mt.state.ambient,Me.lightProbe.value=mt.state.probe,Me.directionalLights.value=mt.state.directional,Me.directionalLightShadows.value=mt.state.directionalShadow,Me.spotLights.value=mt.state.spot,Me.spotLightShadows.value=mt.state.spotShadow,Me.rectAreaLights.value=mt.state.rectArea,Me.ltc_1.value=mt.state.rectAreaLTC1,Me.ltc_2.value=mt.state.rectAreaLTC2,Me.pointLights.value=mt.state.point,Me.pointLightShadows.value=mt.state.pointShadow,Me.hemisphereLights.value=mt.state.hemi,Me.directionalShadowMap.value=mt.state.directionalShadowMap,Me.directionalShadowMatrix.value=mt.state.directionalShadowMatrix,Me.spotShadowMap.value=mt.state.spotShadowMap,Me.spotLightMatrix.value=mt.state.spotLightMatrix,Me.spotLightMap.value=mt.state.spotLightMap,Me.pointShadowMap.value=mt.state.pointShadowMap,Me.pointShadowMatrix.value=mt.state.pointShadowMatrix);const on=_e.getUniforms(),Mo=Hd.seqWithValue(on.seq,Me);return nt.currentProgram=_e,nt.uniformsList=Mo,_e}function ly(B,rt){const dt=Rt.get(B);dt.outputEncoding=rt.outputEncoding,dt.instancing=rt.instancing,dt.skinning=rt.skinning,dt.morphTargets=rt.morphTargets,dt.morphNormals=rt.morphNormals,dt.morphColors=rt.morphColors,dt.morphTargetsCount=rt.morphTargetsCount,dt.numClippingPlanes=rt.numClippingPlanes,dt.numIntersection=rt.numClipIntersection,dt.vertexAlphas=rt.vertexAlphas,dt.vertexTangents=rt.vertexTangents,dt.toneMapping=rt.toneMapping}function tA(B,rt,dt,nt,mt){rt.isScene!==!0&&(rt=it),It.resetTextureUnits();const oe=rt.fog,fe=nt.isMeshStandardMaterial?rt.environment:null,ye=b===null?g.outputEncoding:b.isXRRenderTarget===!0?b.texture.encoding:ca,ve=(nt.isMeshStandardMaterial?Zt:jt).get(nt.envMap||fe),De=nt.vertexColors===!0&&!!dt.attributes.color&&dt.attributes.color.itemSize===4,_e=!!nt.normalMap&&!!dt.attributes.tangent,Me=!!dt.morphAttributes.position,on=!!dt.morphAttributes.normal,Mo=!!dt.morphAttributes.color,Va=nt.toneMapped?g.toneMapping:Er,Wa=dt.morphAttributes.position||dt.morphAttributes.normal||dt.morphAttributes.color,Vi=Wa!==void 0?Wa.length:0,Fe=Rt.get(nt),Ga=d.state.lights;if(P===!0&&($===!0||B!==w)){const Rs=B===w&&nt.id===y;L.setState(nt,B,Rs)}let vn=!1;nt.version===Fe.__version?(Fe.needsLights&&Fe.lightsStateVersion!==Ga.state.version||Fe.outputEncoding!==ye||mt.isInstancedMesh&&Fe.instancing===!1||!mt.isInstancedMesh&&Fe.instancing===!0||mt.isSkinnedMesh&&Fe.skinning===!1||!mt.isSkinnedMesh&&Fe.skinning===!0||Fe.envMap!==ve||nt.fog===!0&&Fe.fog!==oe||Fe.numClippingPlanes!==void 0&&(Fe.numClippingPlanes!==L.numPlanes||Fe.numIntersection!==L.numIntersection)||Fe.vertexAlphas!==De||Fe.vertexTangents!==_e||Fe.morphTargets!==Me||Fe.morphNormals!==on||Fe.morphColors!==Mo||Fe.toneMapping!==Va||vt.isWebGL2===!0&&Fe.morphTargetsCount!==Vi)&&(vn=!0):(vn=!0,Fe.__version=nt.version);let Hs=Fe.currentProgram;vn===!0&&(Hs=Gs(nt,rt,mt));let Or=!1,Cc=!1,Im=!1;const us=Hs.getUniforms(),ko=Fe.uniforms;if(pt.useProgram(Hs.program)&&(Or=!0,Cc=!0,Im=!0),nt.id!==y&&(y=nt.id,Cc=!0),Or||w!==B){if(us.setValue(J,"projectionMatrix",B.projectionMatrix),vt.logarithmicDepthBuffer&&us.setValue(J,"logDepthBufFC",2/(Math.log(B.far+1)/Math.LN2)),w!==B&&(w=B,Cc=!0,Im=!0),nt.isShaderMaterial||nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshStandardMaterial||nt.envMap){const Rs=us.map.cameraPosition;Rs!==void 0&&Rs.setValue(J,X.setFromMatrixPosition(B.matrixWorld))}(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial)&&us.setValue(J,"isOrthographic",B.isOrthographicCamera===!0),(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial||nt.isShadowMaterial||mt.isSkinnedMesh)&&us.setValue(J,"viewMatrix",B.matrixWorldInverse)}if(mt.isSkinnedMesh){us.setOptional(J,mt,"bindMatrix"),us.setOptional(J,mt,"bindMatrixInverse");const Rs=mt.skeleton;Rs&&(vt.floatVertexTextures?(Rs.boneTexture===null&&Rs.computeBoneTexture(),us.setValue(J,"boneTexture",Rs.boneTexture,It),us.setValue(J,"boneTextureSize",Rs.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Tm=dt.morphAttributes;if((Tm.position!==void 0||Tm.normal!==void 0||Tm.color!==void 0&&vt.isWebGL2===!0)&&St.update(mt,dt,nt,Hs),(Cc||Fe.receiveShadow!==mt.receiveShadow)&&(Fe.receiveShadow=mt.receiveShadow,us.setValue(J,"receiveShadow",mt.receiveShadow)),nt.isMeshGouraudMaterial&&nt.envMap!==null&&(ko.envMap.value=ve,ko.flipEnvMap.value=ve.isCubeTexture&&ve.isRenderTargetTexture===!1?-1:1),Cc&&(us.setValue(J,"toneMappingExposure",g.toneMappingExposure),Fe.needsLights&&eA(ko,Im),oe&&nt.fog===!0&&Ft.refreshFogUniforms(ko,oe),Ft.refreshMaterialUniforms(ko,nt,N,T,D),Hd.upload(J,Fe.uniformsList,ko,It)),nt.isShaderMaterial&&nt.uniformsNeedUpdate===!0&&(Hd.upload(J,Fe.uniformsList,ko,It),nt.uniformsNeedUpdate=!1),nt.isSpriteMaterial&&us.setValue(J,"center",mt.center),us.setValue(J,"modelViewMatrix",mt.modelViewMatrix),us.setValue(J,"normalMatrix",mt.normalMatrix),us.setValue(J,"modelMatrix",mt.matrixWorld),nt.isShaderMaterial||nt.isRawShaderMaterial){const Rs=nt.uniformsGroups;for(let Em=0,sA=Rs.length;Em<sA;Em++)if(vt.isWebGL2){const cy=Rs[Em];Lt.update(cy,Hs),Lt.bind(cy,Hs)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Hs}function eA(B,rt){B.ambientLightColor.needsUpdate=rt,B.lightProbe.needsUpdate=rt,B.directionalLights.needsUpdate=rt,B.directionalLightShadows.needsUpdate=rt,B.pointLights.needsUpdate=rt,B.pointLightShadows.needsUpdate=rt,B.spotLights.needsUpdate=rt,B.spotLightShadows.needsUpdate=rt,B.rectAreaLights.needsUpdate=rt,B.hemisphereLights.needsUpdate=rt}function nA(B){return B.isMeshLambertMaterial||B.isMeshToonMaterial||B.isMeshPhongMaterial||B.isMeshStandardMaterial||B.isShadowMaterial||B.isShaderMaterial&&B.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(B,rt,dt){Rt.get(B.texture).__webglTexture=rt,Rt.get(B.depthTexture).__webglTexture=dt;const nt=Rt.get(B);nt.__hasExternalTextures=!0,nt.__hasExternalTextures&&(nt.__autoAllocateDepthBuffer=dt===void 0,nt.__autoAllocateDepthBuffer||xt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),nt.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(B,rt){const dt=Rt.get(B);dt.__webglFramebuffer=rt,dt.__useDefaultFramebuffer=rt===void 0},this.setRenderTarget=function(B,rt=0,dt=0){b=B,x=rt,v=dt;let nt=!0,mt=null,oe=!1,fe=!1;if(B){const ve=Rt.get(B);ve.__useDefaultFramebuffer!==void 0?(pt.bindFramebuffer(36160,null),nt=!1):ve.__webglFramebuffer===void 0?It.setupRenderTarget(B):ve.__hasExternalTextures&&It.rebindTextures(B,Rt.get(B.texture).__webglTexture,Rt.get(B.depthTexture).__webglTexture);const De=B.texture;(De.isData3DTexture||De.isDataArrayTexture||De.isCompressedArrayTexture)&&(fe=!0);const _e=Rt.get(B).__webglFramebuffer;B.isWebGLCubeRenderTarget?(mt=_e[rt],oe=!0):vt.isWebGL2&&B.samples>0&&It.useMultisampledRTT(B)===!1?mt=Rt.get(B).__webglMultisampledFramebuffer:mt=_e,S.copy(B.viewport),C.copy(B.scissor),_=B.scissorTest}else S.copy(E).multiplyScalar(N).floor(),C.copy(A).multiplyScalar(N).floor(),_=R;if(pt.bindFramebuffer(36160,mt)&&vt.drawBuffers&&nt&&pt.drawBuffers(B,mt),pt.viewport(S),pt.scissor(C),pt.setScissorTest(_),oe){const ve=Rt.get(B.texture);J.framebufferTexture2D(36160,36064,34069+rt,ve.__webglTexture,dt)}else if(fe){const ve=Rt.get(B.texture),De=rt||0;J.framebufferTextureLayer(36160,36064,ve.__webglTexture,dt||0,De)}y=-1},this.readRenderTargetPixels=function(B,rt,dt,nt,mt,oe,fe){if(!(B&&B.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ye=Rt.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&fe!==void 0&&(ye=ye[fe]),ye){pt.bindFramebuffer(36160,ye);try{const ve=B.texture,De=ve.format,_e=ve.type;if(De!==Ei&&H.convert(De)!==J.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Me=_e===tu&&(xt.has("EXT_color_buffer_half_float")||vt.isWebGL2&&xt.has("EXT_color_buffer_float"));if(_e!==la&&H.convert(_e)!==J.getParameter(35738)&&!(_e===Xo&&(vt.isWebGL2||xt.has("OES_texture_float")||xt.has("WEBGL_color_buffer_float")))&&!Me){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}rt>=0&&rt<=B.width-nt&&dt>=0&&dt<=B.height-mt&&J.readPixels(rt,dt,nt,mt,H.convert(De),H.convert(_e),oe)}finally{const ve=b!==null?Rt.get(b).__webglFramebuffer:null;pt.bindFramebuffer(36160,ve)}}},this.copyFramebufferToTexture=function(B,rt,dt=0){const nt=Math.pow(2,-dt),mt=Math.floor(rt.image.width*nt),oe=Math.floor(rt.image.height*nt);It.setTexture2D(rt,0),J.copyTexSubImage2D(3553,dt,0,0,B.x,B.y,mt,oe),pt.unbindTexture()},this.copyTextureToTexture=function(B,rt,dt,nt=0){const mt=rt.image.width,oe=rt.image.height,fe=H.convert(dt.format),ye=H.convert(dt.type);It.setTexture2D(dt,0),J.pixelStorei(37440,dt.flipY),J.pixelStorei(37441,dt.premultiplyAlpha),J.pixelStorei(3317,dt.unpackAlignment),rt.isDataTexture?J.texSubImage2D(3553,nt,B.x,B.y,mt,oe,fe,ye,rt.image.data):rt.isCompressedTexture?J.compressedTexSubImage2D(3553,nt,B.x,B.y,rt.mipmaps[0].width,rt.mipmaps[0].height,fe,rt.mipmaps[0].data):J.texSubImage2D(3553,nt,B.x,B.y,fe,ye,rt.image),nt===0&&dt.generateMipmaps&&J.generateMipmap(3553),pt.unbindTexture()},this.copyTextureToTexture3D=function(B,rt,dt,nt,mt=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const oe=B.max.x-B.min.x+1,fe=B.max.y-B.min.y+1,ye=B.max.z-B.min.z+1,ve=H.convert(nt.format),De=H.convert(nt.type);let _e;if(nt.isData3DTexture)It.setTexture3D(nt,0),_e=32879;else if(nt.isDataArrayTexture)It.setTexture2DArray(nt,0),_e=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}J.pixelStorei(37440,nt.flipY),J.pixelStorei(37441,nt.premultiplyAlpha),J.pixelStorei(3317,nt.unpackAlignment);const Me=J.getParameter(3314),on=J.getParameter(32878),Mo=J.getParameter(3316),Va=J.getParameter(3315),Wa=J.getParameter(32877),Vi=dt.isCompressedTexture?dt.mipmaps[0]:dt.image;J.pixelStorei(3314,Vi.width),J.pixelStorei(32878,Vi.height),J.pixelStorei(3316,B.min.x),J.pixelStorei(3315,B.min.y),J.pixelStorei(32877,B.min.z),dt.isDataTexture||dt.isData3DTexture?J.texSubImage3D(_e,mt,rt.x,rt.y,rt.z,oe,fe,ye,ve,De,Vi.data):dt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),J.compressedTexSubImage3D(_e,mt,rt.x,rt.y,rt.z,oe,fe,ye,ve,Vi.data)):J.texSubImage3D(_e,mt,rt.x,rt.y,rt.z,oe,fe,ye,ve,De,Vi),J.pixelStorei(3314,Me),J.pixelStorei(32878,on),J.pixelStorei(3316,Mo),J.pixelStorei(3315,Va),J.pixelStorei(32877,Wa),mt===0&&nt.generateMipmaps&&J.generateMipmap(_e),pt.unbindTexture()},this.initTexture=function(B){B.isCubeTexture?It.setTextureCube(B,0):B.isData3DTexture?It.setTexture3D(B,0):B.isDataArrayTexture||B.isCompressedArrayTexture?It.setTexture2DArray(B,0):It.setTexture2D(B,0),pt.unbindTexture()},this.resetState=function(){x=0,v=0,b=null,pt.reset(),et.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class l3 extends BS{}l3.prototype.isWebGL1Renderer=!0;class c3 extends Wn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class US extends fo{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Cw=new Y,Iw=new Y,Tw=new mn,ag=new qx,gd=new Pf;class u3 extends Wn{constructor(t=new Bs,e=new US){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)Cw.fromBufferAttribute(e,i-1),Iw.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Cw.distanceTo(Iw);t.setAttribute("lineDistance",new gn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),gd.copy(n.boundingSphere),gd.applyMatrix4(i),gd.radius+=r,t.ray.intersectsSphere(gd)===!1)return;Tw.copy(i).invert(),ag.copy(t.ray).applyMatrix4(Tw);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new Y,u=new Y,h=new Y,d=new Y,f=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(p!==null){const x=Math.max(0,o.start),v=Math.min(p.count,o.start+o.count);for(let b=x,y=v-1;b<y;b+=f){const w=p.getX(b),S=p.getX(b+1);if(c.fromBufferAttribute(m,w),u.fromBufferAttribute(m,S),ag.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const _=t.ray.origin.distanceTo(d);_<t.near||_>t.far||e.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),v=Math.min(m.count,o.start+o.count);for(let b=x,y=v-1;b<y;b+=f){if(c.fromBufferAttribute(m,b),u.fromBufferAttribute(m,b+1),ag.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const S=t.ray.origin.distanceTo(d);S<t.near||S>t.far||e.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class cr{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=e||(o.isVector2?new Dt:new Y);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new Y,i=[],r=[],o=[],a=new Y,l=new mn;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new Y)}r[0]=new Y,o[0]=new Y;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ns(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(ns(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(f=-f);for(let p=1;p<=t;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Yx extends cr{constructor(t=0,e=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new Dt,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class h3 extends Yx{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Zx(){let s=0,t=0,e=0,n=0;function i(r,o,a,l){s=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let d=(o-r)/c-(a-r)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+t*r+e*o+n*a}}}const xd=new Y,lg=new Zx,cg=new Zx,ug=new Zx;class VS extends cr{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new Y){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(xd.subVectors(i[0],i[1]).add(i[0]),c=xd);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(xd.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=xd),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),lg.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,g,m),cg.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,g,m),ug.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,g,m)}else this.curveType==="catmullrom"&&(lg.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),cg.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),ug.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(lg.calc(l),cg.calc(l),ug.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Y().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ew(s,t,e,n,i){const r=(n-t)*.5,o=(i-e)*.5,a=s*s,l=s*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*s+e}function d3(s,t){const e=1-s;return e*e*t}function f3(s,t){return 2*(1-s)*s*t}function p3(s,t){return s*s*t}function Xc(s,t,e,n){return d3(s,t)+f3(s,e)+p3(s,n)}function m3(s,t){const e=1-s;return e*e*e*t}function g3(s,t){const e=1-s;return 3*e*e*s*t}function x3(s,t){return 3*(1-s)*s*s*t}function v3(s,t){return s*s*s*t}function jc(s,t,e,n,i){return m3(s,t)+g3(s,e)+x3(s,n)+v3(s,i)}class WS extends cr{constructor(t=new Dt,e=new Dt,n=new Dt,i=new Dt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Dt){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(jc(t,i.x,r.x,o.x,a.x),jc(t,i.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class b3 extends cr{constructor(t=new Y,e=new Y,n=new Y,i=new Y){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Y){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(jc(t,i.x,r.x,o.x,a.x),jc(t,i.y,r.y,o.y,a.y),jc(t,i.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Jx extends cr{constructor(t=new Dt,e=new Dt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Dt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Dt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class y3 extends cr{constructor(t=new Y,e=new Y){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new Y){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class GS extends cr{constructor(t=new Dt,e=new Dt,n=new Dt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Dt){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Xc(t,i.x,r.x,o.x),Xc(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class w3 extends cr{constructor(t=new Y,e=new Y,n=new Y){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Y){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Xc(t,i.x,r.x,o.x),Xc(t,i.y,r.y,o.y),Xc(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class HS extends cr{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Dt){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Ew(a,l.x,c.x,u.x,h.x),Ew(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Dt().fromArray(i))}return this}}var _3=Object.freeze({__proto__:null,ArcCurve:h3,CatmullRomCurve3:VS,CubicBezierCurve:WS,CubicBezierCurve3:b3,EllipseCurve:Yx,LineCurve:Jx,LineCurve3:y3,QuadraticBezierCurve:GS,QuadraticBezierCurve3:w3,SplineCurve:HS});class S3 extends cr{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Jx(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new _3[i.type]().fromJSON(i))}return this}}class Kg extends S3{constructor(t){super(),this.type="Path",this.currentPoint=new Dt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Jx(this.currentPoint.clone(),new Dt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new GS(this.currentPoint.clone(),new Dt(t,e),new Dt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,o){const a=new WS(this.currentPoint.clone(),new Dt(t,e),new Dt(n,i),new Dt(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new HS(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,r,o),this}absarc(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this}ellipse(t,e,n,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,r,o,a,l),this}absellipse(t,e,n,i,r,o,a,l){const c=new Yx(t,e,n,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Qd extends Bs{constructor(t=1,e=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new Y,u=new Dt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=e;h++,d+=3){const f=n+h/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[d]/t+1)/2,u.y=(o[d+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new gn(o,3)),this.setAttribute("normal",new gn(a,3)),this.setAttribute("uv",new gn(l,2))}static fromJSON(t){return new Qd(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ko extends Bs{constructor(t=1,e=1,n=1,i=8,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const g=[],m=n/2;let x=0;v(),o===!1&&(t>0&&b(!0),e>0&&b(!1)),this.setIndex(u),this.setAttribute("position",new gn(h,3)),this.setAttribute("normal",new gn(d,3)),this.setAttribute("uv",new gn(f,2));function v(){const y=new Y,w=new Y;let S=0;const C=(e-t)/n;for(let _=0;_<=r;_++){const I=[],T=_/r,N=T*(e-t)+t;for(let O=0;O<=i;O++){const M=O/i,E=M*l+a,A=Math.sin(E),R=Math.cos(E);w.x=N*A,w.y=-T*n+m,w.z=N*R,h.push(w.x,w.y,w.z),y.set(A,C,R).normalize(),d.push(y.x,y.y,y.z),f.push(M,1-T),I.push(p++)}g.push(I)}for(let _=0;_<i;_++)for(let I=0;I<r;I++){const T=g[I][_],N=g[I+1][_],O=g[I+1][_+1],M=g[I][_+1];u.push(T,N,M),u.push(N,O,M),S+=6}c.addGroup(x,S,0),x+=S}function b(y){const w=p,S=new Dt,C=new Y;let _=0;const I=y===!0?t:e,T=y===!0?1:-1;for(let O=1;O<=i;O++)h.push(0,m*T,0),d.push(0,T,0),f.push(.5,.5),p++;const N=p;for(let O=0;O<=i;O++){const E=O/i*l+a,A=Math.cos(E),R=Math.sin(E);C.x=I*R,C.y=m*T,C.z=I*A,h.push(C.x,C.y,C.z),d.push(0,T,0),S.x=A*.5+.5,S.y=R*.5*T+.5,f.push(S.x,S.y),p++}for(let O=0;O<i;O++){const M=w+O,E=N+O;y===!0?u.push(E,E+1,M):u.push(E+1,E,M),_+=3}c.addGroup(x,_,y===!0?1:2),x+=_}}static fromJSON(t){return new Ko(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class qS extends Kg{constructor(t){super(t),this.uuid=rc(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Kg().fromJSON(i))}return this}}const C3={triangulate:function(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=XS(s,0,i,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,d,f;if(n&&(r=k3(s,t,r,e)),s.length>80*e){a=c=s[0],l=u=s[1];for(let p=e;p<i;p+=e)h=s[p],d=s[p+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=f!==0?32767/f:0}return eu(r,o,e,a,l,f,0),o}};function XS(s,t,e,n,i){let r,o;if(i===B3(s,t,e,n)>0)for(r=t;r<e;r+=n)o=Mw(r,s[r],s[r+1],o);else for(r=e-n;r>=t;r-=n)o=Mw(r,s[r],s[r+1],o);return o&&Bf(o,o.next)&&(su(o),o=o.next),o}function fa(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Bf(e,e.next)||rn(e.prev,e,e.next)===0)){if(su(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function eu(s,t,e,n,i,r,o){if(!s)return;!o&&r&&D3(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?T3(s,n,i,r):I3(s)){t.push(l.i/e|0),t.push(s.i/e|0),t.push(c.i/e|0),su(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=E3(fa(s),t,e),eu(s,t,e,n,i,r,2)):o===2&&M3(s,t,e,n,i,r):eu(fa(s),t,e,n,i,r,1);break}}}function I3(s){const t=s.prev,e=s,n=s.next;if(rn(t,e,n)>=0)return!1;const i=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<r?i<o?i:o:r<o?r:o,h=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==t;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&wl(i,a,r,l,o,c,p.x,p.y)&&rn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function T3(s,t,e,n){const i=s.prev,r=s,o=s.next;if(rn(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,u=i.y,h=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=u<h?u<d?u:d:h<d?h:d,g=a>l?a>c?a:c:l>c?l:c,m=u>h?u>d?u:d:h>d?h:d,x=Yg(f,p,t,e,n),v=Yg(g,m,t,e,n);let b=s.prevZ,y=s.nextZ;for(;b&&b.z>=x&&y&&y.z<=v;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&wl(a,u,l,h,c,d,b.x,b.y)&&rn(b.prev,b,b.next)>=0||(b=b.prevZ,y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&wl(a,u,l,h,c,d,y.x,y.y)&&rn(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;b&&b.z>=x;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&wl(a,u,l,h,c,d,b.x,b.y)&&rn(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;y&&y.z<=v;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&wl(a,u,l,h,c,d,y.x,y.y)&&rn(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function E3(s,t,e){let n=s;do{const i=n.prev,r=n.next.next;!Bf(i,r)&&jS(i,n,n.next,r)&&nu(i,r)&&nu(r,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),su(n),su(n.next),n=s=r),n=n.next}while(n!==s);return fa(n)}function M3(s,t,e,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&P3(o,a)){let l=KS(o,a);o=fa(o,o.next),l=fa(l,l.next),eu(o,t,e,n,i,r,0),eu(l,t,e,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function k3(s,t,e,n){const i=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:s.length,c=XS(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(L3(c));for(i.sort(A3),r=0;r<i.length;r++)e=N3(i[r],e);return e}function A3(s,t){return s.x-t.x}function N3(s,t){const e=R3(s,t);if(!e)return t;const n=KS(e,s);return fa(n,n.next),fa(e,e.next)}function R3(s,t){let e=t,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=r&&d>n&&(n=d,i=e.x<e.next.x?e:e.next,d===r))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,h;e=i;do r>=e.x&&e.x>=l&&r!==e.x&&wl(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(h=Math.abs(o-e.y)/(r-e.x),nu(e,s)&&(h<u||h===u&&(e.x>i.x||e.x===i.x&&$3(i,e)))&&(i=e,u=h)),e=e.next;while(e!==a);return i}function $3(s,t){return rn(s.prev,s,t.prev)<0&&rn(t.next,s,s.next)<0}function D3(s,t,e,n){let i=s;do i.z===0&&(i.z=Yg(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,F3(i)}function F3(s){let t,e,n,i,r,o,a,l,c=1;do{for(e=s,s=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;e=n}r.nextZ=null,c*=2}while(o>1);return s}function Yg(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function L3(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function wl(s,t,e,n,i,r,o,a){return(i-o)*(t-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(i-o)*(n-a)}function P3(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!O3(s,t)&&(nu(s,t)&&nu(t,s)&&z3(s,t)&&(rn(s.prev,s,t.prev)||rn(s,t.prev,t))||Bf(s,t)&&rn(s.prev,s,s.next)>0&&rn(t.prev,t,t.next)>0)}function rn(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Bf(s,t){return s.x===t.x&&s.y===t.y}function jS(s,t,e,n){const i=bd(rn(s,t,e)),r=bd(rn(s,t,n)),o=bd(rn(e,n,s)),a=bd(rn(e,n,t));return!!(i!==r&&o!==a||i===0&&vd(s,e,t)||r===0&&vd(s,n,t)||o===0&&vd(e,s,n)||a===0&&vd(e,t,n))}function vd(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function bd(s){return s>0?1:s<0?-1:0}function O3(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&jS(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function nu(s,t){return rn(s.prev,s,s.next)<0?rn(s,t,s.next)>=0&&rn(s,s.prev,t)>=0:rn(s,t,s.prev)<0||rn(s,s.next,t)<0}function z3(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function KS(s,t){const e=new Zg(s.i,s.x,s.y),n=new Zg(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function Mw(s,t,e,n){const i=new Zg(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function su(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Zg(s,t,e){this.i=s,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function B3(s,t,e,n){let i=0;for(let r=t,o=e-n;r<e;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class Kc{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return Kc.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];kw(t),Aw(n,t);let o=t.length;e.forEach(kw);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,Aw(n,e[l]);const a=C3.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function kw(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function Aw(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class Qx extends Bs{constructor(t=.5,e=1,n=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=t;const d=(e-t)/i,f=new Y,p=new Dt;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const x=r+m/n*o;f.x=h*Math.cos(x),f.y=h*Math.sin(x),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,u.push(p.x,p.y)}h+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let x=0;x<n;x++){const v=x+m,b=v,y=v+n+1,w=v+n+2,S=v+1;a.push(b,y,S),a.push(y,w,S)}}this.setIndex(a),this.setAttribute("position",new gn(l,3)),this.setAttribute("normal",new gn(c,3)),this.setAttribute("uv",new gn(u,2))}static fromJSON(t){return new Qx(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class t0 extends Bs{constructor(t=new qS([new Dt(0,.5),new Dt(-.5,-.5),new Dt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new gn(i,3)),this.setAttribute("normal",new gn(r,3)),this.setAttribute("uv",new gn(o,2));function c(u){const h=i.length/3,d=u.extractPoints(e);let f=d.shape;const p=d.holes;Kc.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,x=p.length;m<x;m++){const v=p[m];Kc.isClockWise(v)===!0&&(p[m]=v.reverse())}const g=Kc.triangulateShape(f,p);for(let m=0,x=p.length;m<x;m++){const v=p[m];f=f.concat(v)}for(let m=0,x=f.length;m<x;m++){const v=f[m];i.push(v.x,v.y,0),r.push(0,0,1),o.push(v.x,v.y)}for(let m=0,x=g.length;m<x;m++){const v=g[m],b=v[0]+h,y=v[1]+h,w=v[2]+h;n.push(b,y,w),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return U3(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const o=e[t.shapes[i]];n.push(o)}return new t0(n,t.curveSegments)}}function U3(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class yu extends fo{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lf,this.normalScale=new Dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$f,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class V3 extends fo{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lf,this.normalScale=new Dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class YS extends fo{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lf,this.normalScale=new Dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$f,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class ZS extends Wn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const hg=new mn,Nw=new Y,Rw=new Y;class W3{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Dt(512,512),this.map=null,this.mapPass=null,this.matrix=new mn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new jx,this._frameExtents=new Dt(1,1),this._viewportCount=1,this._viewports=[new Vn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Nw.setFromMatrixPosition(t.matrixWorld),e.position.copy(Nw),Rw.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Rw),e.updateMatrixWorld(),hg.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hg),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(hg)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class G3 extends W3{constructor(){super(new FS(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class H3 extends ZS{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Wn.DefaultUp),this.updateMatrix(),this.target=new Wn,this.shadow=new G3}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class q3 extends ZS{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class X3{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=$w(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=$w();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function $w(){return(typeof performance>"u"?Date:performance).now()}class JS{constructor(t,e,n=0,i=1/0){this.ray=new qx(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Xx,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Jg(t,this,n,e),n.sort(Dw),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Jg(t[i],this,n,e);return n.sort(Dw),n}}function Dw(s,t){return s.distance-t.distance}function Jg(s,t,e,n){if(s.layers.test(t.layers)&&s.raycast(t,e),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)Jg(i[r],t,e,!0)}}class Fw{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ns(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Lw=new Y;let yd,dg;class j3 extends Wn{constructor(t=new Y(0,0,1),e=new Y(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",yd===void 0&&(yd=new Bs,yd.setAttribute("position",new gn([0,0,0,0,1,0],3)),dg=new Ko(0,.5,1,5,1),dg.translate(0,-.5,0)),this.position.copy(e),this.line=new u3(yd,new US({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new sn(dg,new ka({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Lw.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Lw,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Hx}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Hx);class Mi{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new k);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new k);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new Mi);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],u=n[4],h=n[5],d=n[6],f=n[7],p=n[8],g=i[0],m=i[1],x=i[2],v=i[3],b=i[4],y=i[5],w=i[6],S=i[7],C=i[8];return r[0]=o*g+a*v+l*w,r[1]=o*m+a*b+l*S,r[2]=o*x+a*y+l*C,r[3]=c*g+u*v+h*w,r[4]=c*m+u*b+h*S,r[5]=c*x+u*y+h*C,r[6]=d*g+f*v+p*w,r[7]=d*m+f*b+p*S,r[8]=d*x+f*y+p*C,e}scale(t,e){e===void 0&&(e=new Mi);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new k);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=t.x,r[3+4*1]=t.y,r[3+4*2]=t.z;let l=3;const c=l;let u;const h=4;let d;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){u=h;do d=h-u,r[d+i*o]+=r[d+i*a];while(--u);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const f=r[o+i*a]/r[o+i*o];u=h;do d=h-u,r[d+i*a]=d<=o?0:r[d+i*a]-r[d+i*o]*f;while(--u)}}while(--l);if(e.z=r[2*i+3]/r[2*i+2],e.y=(r[1*i+3]-r[1*i+2]*e.z)/r[1*i+1],e.x=(r[0*i+3]-r[0*i+2]*e.z-r[0*i+1]*e.y)/r[0*i+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new Mi);const e=3,n=6,i=K3;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const u=n;let h;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=u;do h=u-c,i[h+n*r]+=i[h+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const d=i[r+n*o]/i[r+n*r];c=u;do h=u-c,i[h+n*o]=h<=r?0:i[h+n*o]-i[h+n*r]*d;while(--c)}}while(--a);r=2;do{o=r-1;do{const d=i[r+n*o]/i[r+n*r];c=n;do h=n-c,i[h+n*o]=i[h+n*o]-i[h+n*r]*d;while(--c)}while(o--)}while(--r);r=2;do{const d=1/i[r+n*r];c=n;do h=n-c,i[h+n*r]=i[h+n*r]*d;while(--c)}while(r--);r=2;do{o=2;do{if(h=i[e+o+n*r],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(r,o,h)}while(o--)}while(r--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,u=e*a,h=e*l,d=n*a,f=n*l,p=i*l,g=r*o,m=r*a,x=r*l,v=this.elements;return v[3*0+0]=1-(d+p),v[3*0+1]=u-x,v[3*0+2]=h+m,v[3*1+0]=u+x,v[3*1+1]=1-(c+p),v[3*1+2]=f-g,v[3*2+0]=h-m,v[3*2+1]=f+g,v[3*2+2]=1-(c+d),this}transpose(t){t===void 0&&(t=new Mi);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const K3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class k{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new k);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new k(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new k(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new Mi([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new k);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new k);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new k),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new k),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new k),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=Y3,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=Z3;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(Pw),Pw.almostEquals(t,e)}clone(){return new k(this.x,this.y,this.z)}}k.ZERO=new k(0,0,0);k.UNIT_X=new k(1,0,0);k.UNIT_Y=new k(0,1,0);k.UNIT_Z=new k(0,0,1);const Y3=new k,Z3=new k,Pw=new k;class Us{constructor(t){t===void 0&&(t={}),this.lowerBound=new k,this.upperBound=new k,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,Ow),c=Ow),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new Us().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,u=this.upperBound;t.copy(c),e.set(u.x,c.y,c.z),n.set(u.x,u.y,c.z),i.set(c.x,u.y,u.z),r.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(t,e){const n=zw,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=zw,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,u=(this.upperBound.y-n.y)*r,h=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,f=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(h,d)),p=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(h,d));return!(p<0||f>p)}}const Ow=new k,zw=[new k,new k,new k,new k,new k,new k,new k,new k];class Bw{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class QS{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,t)}return this}}class fn{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new k),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=J3,i=Q3;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new fn);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,u=t.w;return e.x=n*u+o*a+i*c-r*l,e.y=i*u+o*l+r*a-n*c,e.z=r*u+o*c+n*l-i*a,e.w=o*u-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new fn);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new fn),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new k);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*n+a*r-l*i,h=c*i+l*n-o*r,d=c*r+o*i-a*n,f=-o*n-a*i-l*r;return e.x=u*c+f*-o+h*-l-d*-a,e.y=h*c+f*-a+d*-o-u*-l,e.z=d*c+f*-l+u*-a-h*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(e){case"YZX":const u=o*a+l*c;if(u>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),u<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const h=o*o,d=a*a,f=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*f),i=Math.asin(2*u),r=Math.atan2(2*o*c-2*a*l,1-2*h-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),u=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="YXZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="ZXY"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="ZYX"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="YZX"?(this.x=l*o*a+r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a-l*c*u):i==="XZY"&&(this.x=l*o*a-r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a+l*c*u),this}clone(){return new fn(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new fn);const i=this.x,r=this.y,o=this.z,a=this.w;let l=t.x,c=t.y,u=t.z,h=t.w,d,f,p,g,m;return f=i*l+r*c+o*u+a*h,f<0&&(f=-f,l=-l,c=-c,u=-u,h=-h),1-f>1e-6?(d=Math.acos(f),p=Math.sin(d),g=Math.sin((1-e)*d)/p,m=Math.sin(e*d)/p):(g=1-e,m=e),n.x=g*i+m*l,n.y=g*r+m*c,n.z=g*o+m*u,n.w=g*a+m*h,n}integrate(t,e,n,i){i===void 0&&(i=new fn);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,u=this.z,h=this.w,d=e*.5;return i.x+=d*(r*h+o*u-a*c),i.y+=d*(o*h+a*l-r*u),i.z+=d*(a*h+r*c-o*l),i.w+=d*(-r*l-o*c-a*u),i}}const J3=new k,Q3=new k,tL={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Vt{constructor(t){t===void 0&&(t={}),this.id=Vt.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Vt.idCounter=0;Vt.types=tL;class Re{constructor(t){t===void 0&&(t={}),this.position=new k,this.quaternion=new fn,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return Re.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return Re.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new k),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new k),n.vsub(t,i),e.conjugate(Uw),Uw.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new k),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new k),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new k),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const Uw=new fn;class Yc extends Vt{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:Vt.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new k;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let u=!1;for(let h=0;h!==n.length;h++)if(n[h].almostEquals(i)||n[h].almostEquals(i)){u=!0;break}u||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new k;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[t].length;i++)console.warn(`.vertices[${this.faces[t][i]}] = Vec3(${this.vertices[this.faces[t][i]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];Yc.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new k,o=new k;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const u=new k;let h=-1,d=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),r.vmult(u,u);const g=u.dot(o);g>d&&(d=g,h=p)}const f=[];for(let p=0;p<n.faces[h].length;p++){const g=n.vertices[n.faces[h][p]],m=new k;m.copy(g),r.vmult(m,m),i.vadd(m,m),f.push(m)}h>=0&&this.clipFaceAgainstHull(o,t,e,f,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new k,u=new k,h=new k,d=new k,f=new k,p=new k;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let x=0;x!==m.uniqueAxes.length;x++){n.vmult(m.uniqueAxes[x],c);const v=m.testSepAxis(c,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(c))}else{const x=a?a.length:m.faces.length;for(let v=0;v<x;v++){const b=a?a[v]:v;c.copy(m.faceNormals[b]),n.vmult(c,c);const y=m.testSepAxis(c,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(c))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){r.vmult(t.uniqueAxes[x],u);const v=m.testSepAxis(u,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(u))}else{const x=l?l.length:t.faces.length;for(let v=0;v<x;v++){const b=l?l[v]:v;u.copy(t.faceNormals[b]),r.vmult(u,u);const y=m.testSepAxis(u,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(u))}}for(let x=0;x!==m.uniqueEdges.length;x++){n.vmult(m.uniqueEdges[x],d);for(let v=0;v!==t.uniqueEdges.length;v++)if(r.vmult(t.uniqueEdges[v],f),d.cross(f,p),!p.almostZero()){p.normalize();const b=m.testSepAxis(p,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(p))}}return i.vsub(e,h),h.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){const a=this;Yc.project(a,t,n,i,fg),Yc.project(e,t,r,o,pg);const l=fg[0],c=fg[1],u=pg[0],h=pg[1];if(l<h||u<c)return!1;const d=l-h,f=u-c;return d<f?d:f}calculateLocalInertia(t,e){const n=new k,i=new k;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new k,c=new k,u=new k,h=new k,d=new k,f=new k,p=new k,g=new k,m=this,x=[],v=i,b=x;let y=-1,w=Number.MAX_VALUE;for(let T=0;T<m.faces.length;T++){l.copy(m.faceNormals[T]),n.vmult(l,l);const N=l.dot(t);N<w&&(w=N,y=T)}if(y<0)return;const S=m.faces[y];S.connectedFaces=[];for(let T=0;T<m.faces.length;T++)for(let N=0;N<m.faces[T].length;N++)S.indexOf(m.faces[T][N])!==-1&&T!==y&&S.connectedFaces.indexOf(T)===-1&&S.connectedFaces.push(T);const C=S.length;for(let T=0;T<C;T++){const N=m.vertices[S[T]],O=m.vertices[S[(T+1)%C]];N.vsub(O,c),u.copy(c),n.vmult(u,u),e.vadd(u,u),h.copy(this.faceNormals[y]),n.vmult(h,h),e.vadd(h,h),u.cross(h,d),d.negate(d),f.copy(N),n.vmult(f,f),e.vadd(f,f);const M=S.connectedFaces[T];p.copy(this.faceNormals[M]);const E=this.getPlaneConstantOfFace(M);g.copy(p),n.vmult(g,g);const A=E-g.dot(e);for(this.clipFaceAgainstPlane(v,b,g,A);v.length;)v.shift();for(;b.length;)v.push(b.shift())}p.copy(this.faceNormals[y]);const _=this.getPlaneConstantOfFace(y);g.copy(p),n.vmult(g,g);const I=_-g.dot(e);for(let T=0;T<v.length;T++){let N=g.dot(v[T])+I;if(N<=r&&(console.log(`clamped: depth=${N} to minDist=${r}`),N=r),N<=o){const O=v[T];if(N<=1e-6){const M={point:O,normal:g,depth:N};a.push(M)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let u=0;u<a;u++){if(c=t[u],o=n.dot(c)+i,r<0)if(o<0){const h=new k;h.copy(c),e.push(h)}else{const h=new k;l.lerp(c,r/(r-o),h),e.push(h)}else if(o<0){const h=new k;l.lerp(c,r/(r-o),h),e.push(h),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new k);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new k);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,u,h,d=new k;for(let f=0;f<r.length;f++){d.copy(r[f]),e.vmult(d,d),t.vadd(d,d);const p=d;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(a===void 0||p.y<a)&&(a=p.y),(u===void 0||p.y>u)&&(u=p.y),(l===void 0||p.z<l)&&(l=p.z),(h===void 0||p.z>h)&&(h=p.z)}n.set(o,a,l),i.set(c,u,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new k);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new k;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=e[n[a][0]],u=new k;t.vsub(c,u);const h=l.dot(u),d=new k;o.vsub(c,d);const f=l.dot(d);if(h<0&&f>0||h>0&&f<0)return!1}return r?1:-1}static project(t,e,n,i,r){const o=t.vertices.length,a=eL;let l=0,c=0;const u=nL,h=t.vertices;u.setZero(),Re.vectorToLocalFrame(n,i,e,a),Re.pointToLocalFrame(n,i,u,u);const d=u.dot(a);c=l=h[0].dot(a);for(let f=1;f<o;f++){const p=h[f].dot(a);p>l&&(l=p),p<c&&(c=p)}if(c-=d,l-=d,c>l){const f=c;c=l,l=f}r[0]=l,r[1]=c}}const fg=[],pg=[];new k;const eL=new k,nL=new k;class wu extends Vt{constructor(t){super({type:Vt.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=k,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new Yc({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new k),wu.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)qr.set(r[o][0],r[o][1],r[o][2]),e.vmult(qr,qr),t.vadd(qr,qr),n(qr.x,qr.y,qr.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;Wi[0].set(r.x,r.y,r.z),Wi[1].set(-r.x,r.y,r.z),Wi[2].set(-r.x,-r.y,r.z),Wi[3].set(-r.x,-r.y,-r.z),Wi[4].set(r.x,-r.y,-r.z),Wi[5].set(r.x,r.y,-r.z),Wi[6].set(-r.x,r.y,-r.z),Wi[7].set(r.x,-r.y,r.z);const o=Wi[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=Wi[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,u=l.y,h=l.z;c>i.x&&(i.x=c),u>i.y&&(i.y=u),h>i.z&&(i.z=h),c<n.x&&(n.x=c),u<n.y&&(n.y=u),h<n.z&&(n.z=h)}}}const qr=new k,Wi=[new k,new k,new k,new k,new k,new k,new k,new k],e0={DYNAMIC:1,STATIC:2,KINEMATIC:4},n0={AWAKE:0,SLEEPY:1,SLEEPING:2};class Pt extends QS{constructor(t){t===void 0&&(t={}),super(),this.id=Pt.idCounter++,this.index=-1,this.world=null,this.vlambda=new k,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new k,this.previousPosition=new k,this.interpolatedPosition=new k,this.initPosition=new k,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new k,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new k,this.force=new k;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?Pt.STATIC:Pt.DYNAMIC,typeof t.type==typeof Pt.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=Pt.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new k,this.quaternion=new fn,this.initQuaternion=new fn,this.previousQuaternion=new fn,this.interpolatedQuaternion=new fn,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new k,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new k,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new k,this.invInertia=new k,this.invInertiaWorld=new Mi,this.invMassSolve=0,this.invInertiaSolve=new k,this.invInertiaWorldSolve=new Mi,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new k(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new k(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new Us,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new k,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=Pt.AWAKE,this.wakeUpAfterNarrowphase=!1,t===Pt.SLEEPING&&this.dispatchEvent(Pt.wakeupEvent)}sleep(){this.sleepState=Pt.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===Pt.AWAKE&&n<i?(this.sleepState=Pt.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(Pt.sleepyEvent)):e===Pt.SLEEPY&&n>i?this.wakeUp():e===Pt.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(Pt.sleepEvent))}}updateSolveMassProperties(){this.sleepState===Pt.SLEEPING||this.type===Pt.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new k),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new k),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new k),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new k),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new k,r=new fn;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=sL,o=iL,a=this.quaternion,l=this.aabb,c=rL;for(let u=0;u!==i;u++){const h=t[u];a.vmult(e[u],r),r.vadd(this.position,r),a.mult(n[u],o),h.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=oL,i=aL;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new k),this.type!==Pt.DYNAMIC)return;this.sleepState===Pt.SLEEPING&&this.wakeUp();const n=cL;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new k),this.type!==Pt.DYNAMIC)return;const n=uL,i=hL;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===Pt.DYNAMIC&&(this.sleepState===Pt.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new k),this.type!==Pt.DYNAMIC)return;this.sleepState===Pt.SLEEPING&&this.wakeUp();const n=e,i=dL;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=fL;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new k),this.type!==Pt.DYNAMIC)return;const n=pL,i=mL;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=gL;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),wu.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new k;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===Pt.DYNAMIC||this.type===Pt.KINEMATIC)||this.sleepState===Pt.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,h=this.invInertiaWorld,d=this.linearFactor,f=u*t;i.x+=a.x*f*d.x,i.y+=a.y*f*d.y,i.z+=a.z*f*d.z;const p=h.elements,g=this.angularFactor,m=l.x*g.x,x=l.y*g.y,v=l.z*g.z;r.x+=t*(p[0]*m+p[1]*x+p[2]*v),r.y+=t*(p[3]*m+p[4]*x+p[5]*v),r.z+=t*(p[6]*m+p[7]*x+p[8]*v),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}Pt.idCounter=0;Pt.COLLIDE_EVENT_NAME="collide";Pt.DYNAMIC=e0.DYNAMIC;Pt.STATIC=e0.STATIC;Pt.KINEMATIC=e0.KINEMATIC;Pt.AWAKE=n0.AWAKE;Pt.SLEEPY=n0.SLEEPY;Pt.SLEEPING=n0.SLEEPING;Pt.wakeupEvent={type:"wakeup"};Pt.sleepyEvent={type:"sleepy"};Pt.sleepEvent={type:"sleep"};const sL=new k,iL=new fn,rL=new Us,oL=new Mi,aL=new Mi,lL=new Mi,cL=new k,uL=new k,hL=new k,dL=new k,fL=new k,pL=new k,mL=new k,gL=new k;class xL{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&Pt.STATIC)!==0||t.sleepState===Pt.SLEEPING)&&((e.type&Pt.STATIC)!==0||e.sleepState===Pt.SLEEPING))}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=vL;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=bL,i=yL,r=wL,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,u=l<c?`${l},${c}`:`${c},${l}`;n[u]=a,n.keys.push(u)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new k;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const vL=new k;new k;new fn;new k;const bL={keys:[]},yL=[],wL=[];new k;new k;new k;class _L extends xL{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class tf{constructor(){this.rayFromWorld=new k,this.rayToWorld=new k,this.hitNormalWorld=new k,this.hitPointWorld=new k,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let tC,eC,nC,sC,iC,rC,oC;const s0={CLOSEST:1,ANY:2,ALL:4};tC=Vt.types.SPHERE;eC=Vt.types.PLANE;nC=Vt.types.BOX;sC=Vt.types.CYLINDER;iC=Vt.types.CONVEXPOLYHEDRON;rC=Vt.types.HEIGHTFIELD;oC=Vt.types.TRIMESH;class yn{get[tC](){return this._intersectSphere}get[eC](){return this._intersectPlane}get[nC](){return this._intersectBox}get[sC](){return this._intersectConvex}get[iC](){return this._intersectConvex}get[rC](){return this._intersectHeightfield}get[oC](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new k),e===void 0&&(e=new k),this.from=t.clone(),this.to=e.clone(),this.direction=new k,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=yn.ANY,this.result=new tf,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||yn.ANY,this.result=e.result||new tf,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Vw),mg.length=0,t.broadphase.aabbQuery(t,Vw,mg),this.intersectBodies(mg),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const i=SL,r=CL;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if(!(n&&!l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){const r=this.from;if(OL(r,this.direction,n)>t.boundingSphereRadius)return;const a=this[t.type];a&&a.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new k(0,0,1);e.vmult(c,c);const u=new k;o.vsub(n,u);const h=u.dot(c);a.vsub(n,u);const d=u.dot(c);if(h*d>0||o.distanceTo(a)<h)return;const f=c.dot(l);if(Math.abs(f)<this.precision)return;const p=new k,g=new k,m=new k;o.vsub(n,p);const x=-c.dot(p)/f;l.scale(x,g),o.vadd(g,m),this.reportIntersection(c,m,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){t.data,t.elementSize;const o=IL;o.from.copy(this.from),o.to.copy(this.to),Re.pointToLocalFrame(n,e,o.from,o.from),Re.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=TL;let l,c,u,h;l=c=0,u=h=t.data.length-1;const d=new Us;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),u=Math.min(u,a[0]+1),h=Math.min(h,a[1]+1);for(let f=l;f<u;f++)for(let p=c;p<h;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),Re.pointToWorldFrame(n,e,t.pillarOffset,wd),this._intersectConvex(t.pillarConvex,e,wd,i,r,Ww),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),Re.pointToWorldFrame(n,e,t.pillarOffset,wd),this._intersectConvex(t.pillarConvex,e,wd,i,r,Ww)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),h=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,d=u**2-4*c*h,f=EL,p=ML;if(!(d<0))if(d===0)o.lerp(a,d,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1);else{const g=(-u-Math.sqrt(d))/(2*c),m=(-u+Math.sqrt(d))/(2*c);if(g>=0&&g<=1&&(o.lerp(a,g,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=kL,l=Gw,c=o&&o.faceList||null,u=t.faces,h=t.vertices,d=t.faceNormals,f=this.direction,p=this.from,g=this.to,m=p.distanceTo(g),x=c?c.length:u.length,v=this.result;for(let b=0;!v.shouldStop&&b<x;b++){const y=c?c[b]:b,w=u[y],S=d[y],C=e,_=n;l.copy(h[w[0]]),C.vmult(l,l),l.vadd(_,l),l.vsub(p,l),C.vmult(S,a);const I=f.dot(a);if(Math.abs(I)<this.precision)continue;const T=a.dot(l)/I;if(!(T<0)){f.scale(T,bs),bs.vadd(p,bs),wi.copy(h[w[0]]),C.vmult(wi,wi),_.vadd(wi,wi);for(let N=1;!v.shouldStop&&N<w.length-1;N++){Gi.copy(h[w[N]]),Hi.copy(h[w[N+1]]),C.vmult(Gi,Gi),C.vmult(Hi,Hi),_.vadd(Gi,Gi),_.vadd(Hi,Hi);const O=bs.distanceTo(p);!(yn.pointInTriangle(bs,wi,Gi,Hi)||yn.pointInTriangle(bs,Gi,wi,Hi))||O>m||this.reportIntersection(a,bs,r,i,y)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=AL,l=LL,c=PL,u=Gw,h=NL,d=RL,f=$L,p=FL,g=DL,m=t.indices;t.vertices;const x=this.from,v=this.to,b=this.direction;c.position.copy(n),c.quaternion.copy(e),Re.vectorToLocalFrame(n,e,b,h),Re.pointToLocalFrame(n,e,x,d),Re.pointToLocalFrame(n,e,v,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,h),h.normalize();const y=d.distanceSquared(f);t.tree.rayQuery(this,c,l);for(let w=0,S=l.length;!this.result.shouldStop&&w!==S;w++){const C=l[w];t.getNormal(C,a),t.getVertex(m[C*3],wi),wi.vsub(d,u);const _=h.dot(a),I=a.dot(u)/_;if(I<0)continue;h.scale(I,bs),bs.vadd(d,bs),t.getVertex(m[C*3+1],Gi),t.getVertex(m[C*3+2],Hi);const T=bs.distanceSquared(d);!(yn.pointInTriangle(bs,Gi,wi,Hi)||yn.pointInTriangle(bs,wi,Gi,Hi))||T>y||(Re.vectorToWorldFrame(e,a,g),Re.pointToWorldFrame(n,e,bs,p),this.reportIntersection(g,p,r,i,C))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r<"u"?r:-1,this.mode){case yn.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case yn.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case yn.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(t,e,n,i){i.vsub(e,Uo),n.vsub(e,kc),t.vsub(e,gg);const r=Uo.dot(Uo),o=Uo.dot(kc),a=Uo.dot(gg),l=kc.dot(kc),c=kc.dot(gg);let u,h;return(u=l*a-o*c)>=0&&(h=r*c-o*a)>=0&&u+h<r*l-o*o}}yn.CLOSEST=s0.CLOSEST;yn.ANY=s0.ANY;yn.ALL=s0.ALL;const Vw=new Us,mg=[],kc=new k,gg=new k,SL=new k,CL=new fn,bs=new k,wi=new k,Gi=new k,Hi=new k;new k;new tf;const Ww={faceList:[0]},wd=new k,IL=new yn,TL=[],EL=new k,ML=new k,kL=new k;new k;new k;const Gw=new k,AL=new k,NL=new k,RL=new k,$L=new k,DL=new k,FL=new k;new Us;const LL=[],PL=new Re,Uo=new k,_d=new k;function OL(s,t,e){e.vsub(s,Uo);const n=Uo.dot(t);return t.scale(n,_d),_d.vadd(s,_d),e.distanceTo(_d)}class aC{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class Uf{constructor(t,e,n){n===void 0&&(n={}),n=aC.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Uf.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Uf.idCounter=0;class Hw{constructor(){this.spatial=new k,this.rotational=new k}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Aa{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=Aa.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Hw,this.jacobianElementB=new Hw,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*t-i*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,u=i.invMassSolve;return r.scale(c,qw),a.scale(u,Xw),n.invInertiaWorldSolve.vmult(o,jw),i.invInertiaWorldSolve.vmult(l,Kw),t.multiplyVectors(qw,jw)+e.multiplyVectors(Xw,Kw)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,Sd),c+=Sd.dot(t.rotational),l.vmult(e.rotational,Sd),c+=Sd.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=zL;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Aa.idCounter=0;const qw=new k,Xw=new k,jw=new k,Kw=new k,Sd=new k,zL=new k;class qd extends Aa{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new k,this.rj=new k,this.ni=new k}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=BL,c=UL,u=i.velocity,h=i.angularVelocity;i.force,i.torque;const d=r.velocity,f=r.angularVelocity;r.force,r.torque;const p=VL,g=this.jacobianElementA,m=this.jacobianElementB,x=this.ni;o.cross(x,l),a.cross(x,c),x.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(x),m.rotational.copy(c),p.copy(r.position),p.vadd(a,p),p.vsub(i.position,p),p.vsub(o,p);const v=x.dot(p),b=this.restitution+1,y=b*d.dot(x)-b*u.dot(x)+f.dot(c)-h.dot(l),w=this.computeGiMf();return-v*e-y*n-t*w}getImpactVelocityAlongNormal(){const t=WL,e=GL,n=HL,i=qL,r=XL;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const BL=new k,UL=new k,VL=new k,WL=new k,GL=new k,HL=new k,qL=new k,XL=new k;class jL extends Uf{constructor(t,e,n,i,r){e===void 0&&(e=new k),i===void 0&&(i=new k),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new qd(t,n),a=this.equationY=new qd(t,n),l=this.equationZ=new qd(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}new k;new k;class Yw extends Aa{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new k(1,0,0),this.axisB=n.axisB?n.axisB.clone():new k(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=KL,a=YL,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.maxAngle)-i.dot(r),h=this.computeGW(),d=this.computeGiMf();return-u*e-h*n-t*d}}const KL=new k,YL=new k;new k;new k;new k;new k;class ZL extends Aa{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new k,this.axisB=new k,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*e-t*l}}class Cd extends jL{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new k,o=n.pivotB?n.pivotB.clone():new k;super(t,r,e,o,i),(this.axisA=n.axisA?n.axisA.clone():new k(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new k(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new Yw(t,e,n),u=this.rotationalEquation2=new Yw(t,e,n),h=this.motorEquation=new ZL(t,e,i);h.enabled=!1,this.equations.push(c,u,h)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=JL,a=QL,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const JL=new k,QL=new k;class Zw extends Aa{constructor(t,e,n){super(t,e,-n,n),this.ri=new k,this.rj=new k,this.t=new k}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=tP,o=eP,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),h=this.computeGiMf();return-u*e-t*h}}const tP=new k,eP=new k;class Vf{constructor(t,e,n){n=aC.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Vf.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Vf.idCounter=0;class mo{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=mo.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}mo.idCounter=0;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new yn;new k;new k;new k;new k(1,0,0),new k(0,1,0),new k(0,0,1);new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;class Id extends Vt{constructor(t){if(super({type:Vt.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new k);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}new k;new k;new k;new k;new k;new k;new k;new k;new k;class nP extends Vt{constructor(){super({type:Vt.types.PLANE}),this.worldNormal=new k,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new k),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,i){gr.set(0,0,1),e.vmult(gr,gr);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),gr.x===1?i.x=t.x:gr.x===-1&&(n.x=t.x),gr.y===1?i.y=t.y:gr.y===-1&&(n.y=t.y),gr.z===1?i.z=t.z:gr.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const gr=new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new Us;new k;new Us;new k;new k;new k;new k;new k;new k;new k;new Us;new k;new Re;new Us;class sP{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class iP extends sP{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,u=t;let h,d,f,p,g,m;if(a!==0)for(let y=0;y!==c;y++)l[y].updateSolveMassProperties();const x=oP,v=aP,b=rP;x.length=a,v.length=a,b.length=a;for(let y=0;y!==a;y++){const w=o[y];b[y]=0,v[y]=w.computeB(u),x[y]=1/w.computeC()}if(a!==0){for(let S=0;S!==c;S++){const C=l[S],_=C.vlambda,I=C.wlambda;_.set(0,0,0),I.set(0,0,0)}for(n=0;n!==i;n++){p=0;for(let S=0;S!==a;S++){const C=o[S];h=v[S],d=x[S],m=b[S],g=C.computeGWlambda(),f=d*(h-g-C.eps*m),m+f<C.minForce?f=C.minForce-m:m+f>C.maxForce&&(f=C.maxForce-m),b[S]+=f,p+=f>0?f:-f,C.addToWlambda(f)}if(p*p<r)break}for(let S=0;S!==c;S++){const C=l[S],_=C.velocity,I=C.angularVelocity;C.vlambda.vmul(C.linearFactor,C.vlambda),_.vadd(C.vlambda,_),C.wlambda.vmul(C.angularFactor,C.wlambda),I.vadd(C.wlambda,I)}let y=o.length;const w=1/u;for(;y--;)o[y].multiplier=b[y]*w}return n}}const rP=[],oP=[],aP=[];Pt.STATIC;class lP{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class cP extends lP{constructor(){super(...arguments),this.type=k}constructObject(){return new k}}const Ke={sphereSphere:Vt.types.SPHERE,spherePlane:Vt.types.SPHERE|Vt.types.PLANE,boxBox:Vt.types.BOX|Vt.types.BOX,sphereBox:Vt.types.SPHERE|Vt.types.BOX,planeBox:Vt.types.PLANE|Vt.types.BOX,convexConvex:Vt.types.CONVEXPOLYHEDRON,sphereConvex:Vt.types.SPHERE|Vt.types.CONVEXPOLYHEDRON,planeConvex:Vt.types.PLANE|Vt.types.CONVEXPOLYHEDRON,boxConvex:Vt.types.BOX|Vt.types.CONVEXPOLYHEDRON,sphereHeightfield:Vt.types.SPHERE|Vt.types.HEIGHTFIELD,boxHeightfield:Vt.types.BOX|Vt.types.HEIGHTFIELD,convexHeightfield:Vt.types.CONVEXPOLYHEDRON|Vt.types.HEIGHTFIELD,sphereParticle:Vt.types.PARTICLE|Vt.types.SPHERE,planeParticle:Vt.types.PLANE|Vt.types.PARTICLE,boxParticle:Vt.types.BOX|Vt.types.PARTICLE,convexParticle:Vt.types.PARTICLE|Vt.types.CONVEXPOLYHEDRON,cylinderCylinder:Vt.types.CYLINDER,sphereCylinder:Vt.types.SPHERE|Vt.types.CYLINDER,planeCylinder:Vt.types.PLANE|Vt.types.CYLINDER,boxCylinder:Vt.types.BOX|Vt.types.CYLINDER,convexCylinder:Vt.types.CONVEXPOLYHEDRON|Vt.types.CYLINDER,heightfieldCylinder:Vt.types.HEIGHTFIELD|Vt.types.CYLINDER,particleCylinder:Vt.types.PARTICLE|Vt.types.CYLINDER,sphereTrimesh:Vt.types.SPHERE|Vt.types.TRIMESH,planeTrimesh:Vt.types.PLANE|Vt.types.TRIMESH};class uP{get[Ke.sphereSphere](){return this.sphereSphere}get[Ke.spherePlane](){return this.spherePlane}get[Ke.boxBox](){return this.boxBox}get[Ke.sphereBox](){return this.sphereBox}get[Ke.planeBox](){return this.planeBox}get[Ke.convexConvex](){return this.convexConvex}get[Ke.sphereConvex](){return this.sphereConvex}get[Ke.planeConvex](){return this.planeConvex}get[Ke.boxConvex](){return this.boxConvex}get[Ke.sphereHeightfield](){return this.sphereHeightfield}get[Ke.boxHeightfield](){return this.boxHeightfield}get[Ke.convexHeightfield](){return this.convexHeightfield}get[Ke.sphereParticle](){return this.sphereParticle}get[Ke.planeParticle](){return this.planeParticle}get[Ke.boxParticle](){return this.boxParticle}get[Ke.convexParticle](){return this.convexParticle}get[Ke.cylinderCylinder](){return this.convexConvex}get[Ke.sphereCylinder](){return this.sphereConvex}get[Ke.planeCylinder](){return this.planeConvex}get[Ke.boxCylinder](){return this.boxConvex}get[Ke.convexCylinder](){return this.convexConvex}get[Ke.heightfieldCylinder](){return this.heightfieldCylinder}get[Ke.particleCylinder](){return this.particleCylinder}get[Ke.sphereTrimesh](){return this.sphereTrimesh}get[Ke.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new cP,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new qd(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,u=i.material||e.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=r.material||n.material,h=o.material||i.material;if(u&&h&&u.friction>=0&&h.friction>=0&&(c=u.friction*h.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let f=n.invMass+i.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,g=p.length?p.pop():new Zw(n,i,d*f),m=p.length?p.pop():new Zw(n,i,d*f);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-d*f,g.maxForce=m.maxForce=d*f,g.ri.copy(t.ri),g.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=t.enabled,e.push(g,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];$o.setZero(),al.setZero(),ll.setZero();const r=e.bi;e.bj;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?($o.vadd(e.ni,$o),al.vadd(e.ri,al),ll.vadd(e.rj,ll)):($o.vsub(e.ni,$o),al.vadd(e.rj,al),ll.vadd(e.ri,ll));const o=1/t;al.scale(o,n.ri),ll.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),$o.normalize(),$o.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=fP,c=pP,u=hP,h=dP;for(let d=0,f=t.length;d!==f;d++){const p=t[d],g=e[d];let m=null;p.material&&g.material&&(m=n.getContactMaterial(p.material,g.material)||null);const x=p.type&Pt.KINEMATIC&&g.type&Pt.STATIC||p.type&Pt.STATIC&&g.type&Pt.KINEMATIC||p.type&Pt.KINEMATIC&&g.type&Pt.KINEMATIC;for(let v=0;v<p.shapes.length;v++){p.quaternion.mult(p.shapeOrientations[v],l),p.quaternion.vmult(p.shapeOffsets[v],u),u.vadd(p.position,u);const b=p.shapes[v];for(let y=0;y<g.shapes.length;y++){g.quaternion.mult(g.shapeOrientations[y],c),g.quaternion.vmult(g.shapeOffsets[y],h),h.vadd(g.position,h);const w=g.shapes[y];if(!(b.collisionFilterMask&w.collisionFilterGroup&&w.collisionFilterMask&b.collisionFilterGroup)||u.distanceTo(h)>b.boundingSphereRadius+w.boundingSphereRadius)continue;let S=null;b.material&&w.material&&(S=n.getContactMaterial(b.material,w.material)||null),this.currentContactMaterial=S||m||n.defaultContactMaterial;const C=b.type|w.type,_=this[C];if(_){let I=!1;b.type<w.type?I=_.call(this,b,w,u,h,l,c,p,g,b,w,x):I=_.call(this,w,b,h,u,c,l,g,p,b,w,x),I&&x&&(n.shapeOverlapKeeper.set(b.id,w.id),n.bodyOverlapKeeper.set(p.id,g.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,u,h){if(h)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,u);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,u,h){const d=this.createContactEquation(a,l,t,e,c,u);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,Td),d.ni.scale(d.ni.dot(Td),Jw),Td.vsub(Jw,d.rj),-Td.dot(d.ni)<=t.radius){if(h)return!0;const f=d.ri,p=d.rj;f.vadd(n,f),f.vsub(a.position,f),p.vadd(i,p),p.vsub(l.position,p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}sphereBox(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool,f=BP;n.vsub(i,Ed),e.getSideNormals(f,o);const p=t.radius;let g=!1;const m=VP,x=WP,v=GP;let b=null,y=0,w=0,S=0,C=null;for(let R=0,V=f.length;R!==V&&g===!1;R++){const P=PP;P.copy(f[R]);const $=P.length();P.normalize();const D=Ed.dot(P);if(D<$+p&&D>0){const W=OP,G=zP;W.copy(f[(R+1)%3]),G.copy(f[(R+2)%3]);const X=W.length(),it=G.length();W.normalize(),G.normalize();const at=Ed.dot(W),J=Ed.dot(G);if(at<X&&at>-X&&J<it&&J>-it){const bt=Math.abs(D-$-p);if((C===null||bt<C)&&(C=bt,w=at,S=J,b=$,m.copy(P),x.copy(W),v.copy(G),y++,h))return!0}}}if(y){g=!0;const R=this.createContactEquation(a,l,t,e,c,u);m.scale(-p,R.ri),R.ni.copy(m),R.ni.negate(R.ni),m.scale(b,m),x.scale(w,x),m.vadd(x,m),v.scale(S,v),m.vadd(v,R.rj),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(i,R.rj),R.rj.vsub(l.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}let _=d.get();const I=UP;for(let R=0;R!==2&&!g;R++)for(let V=0;V!==2&&!g;V++)for(let P=0;P!==2&&!g;P++)if(_.set(0,0,0),R?_.vadd(f[0],_):_.vsub(f[0],_),V?_.vadd(f[1],_):_.vsub(f[1],_),P?_.vadd(f[2],_):_.vsub(f[2],_),i.vadd(_,I),I.vsub(n,I),I.lengthSquared()<p*p){if(h)return!0;g=!0;const $=this.createContactEquation(a,l,t,e,c,u);$.ri.copy(I),$.ri.normalize(),$.ni.copy($.ri),$.ri.scale(p,$.ri),$.rj.copy(_),$.ri.vadd(n,$.ri),$.ri.vsub(a.position,$.ri),$.rj.vadd(i,$.rj),$.rj.vsub(l.position,$.rj),this.result.push($),this.createFrictionEquationsFromContact($,this.frictionResult)}d.release(_),_=null;const T=d.get(),N=d.get(),O=d.get(),M=d.get(),E=d.get(),A=f.length;for(let R=0;R!==A&&!g;R++)for(let V=0;V!==A&&!g;V++)if(R%3!==V%3){f[V].cross(f[R],T),T.normalize(),f[R].vadd(f[V],N),O.copy(n),O.vsub(N,O),O.vsub(i,O);const P=O.dot(T);T.scale(P,M);let $=0;for(;$===R%3||$===V%3;)$++;E.copy(n),E.vsub(M,E),E.vsub(N,E),E.vsub(i,E);const D=Math.abs(P),W=E.length();if(D<f[$].length()&&W<p){if(h)return!0;g=!0;const G=this.createContactEquation(a,l,t,e,c,u);N.vadd(M,G.rj),G.rj.copy(G.rj),E.negate(G.ni),G.ni.normalize(),G.ri.copy(G.rj),G.ri.vadd(i,G.ri),G.ri.vsub(n,G.ri),G.ri.normalize(),G.ri.scale(p,G.ri),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult)}}d.release(T,N,O,M,E)}planeBox(t,e,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}convexConvex(t,e,n,i,r,o,a,l,c,u,h,d,f){const p=rO;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,p,d,f)){const g=[],m=oO;t.clipAgainstHull(n,r,e,i,o,p,-100,100,g);let x=0;for(let v=0;v!==g.length;v++){if(h)return!0;const b=this.createContactEquation(a,l,t,e,c,u),y=b.ri,w=b.rj;p.negate(b.ni),g[v].normal.negate(m),m.scale(g[v].depth,m),g[v].point.vadd(m,y),w.copy(g[v].point),y.vsub(n,y),w.vsub(i,w),y.vadd(n,y),y.vsub(a.position,y),w.vadd(i,w),w.vsub(l.position,w),this.result.push(b),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(b,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool;n.vsub(i,HP);const f=e.faceNormals,p=e.faces,g=e.vertices,m=t.radius;let x=!1;for(let v=0;v!==g.length;v++){const b=g[v],y=KP;o.vmult(b,y),i.vadd(y,y);const w=jP;if(y.vsub(n,w),w.lengthSquared()<m*m){if(h)return!0;x=!0;const S=this.createContactEquation(a,l,t,e,c,u);S.ri.copy(w),S.ri.normalize(),S.ni.copy(S.ri),S.ri.scale(m,S.ri),y.vsub(i,S.rj),S.ri.vadd(n,S.ri),S.ri.vsub(a.position,S.ri),S.rj.vadd(i,S.rj),S.rj.vsub(l.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);return}}for(let v=0,b=p.length;v!==b&&x===!1;v++){const y=f[v],w=p[v],S=YP;o.vmult(y,S);const C=ZP;o.vmult(g[w[0]],C),C.vadd(i,C);const _=JP;S.scale(-m,_),n.vadd(_,_);const I=QP;_.vsub(C,I);const T=I.dot(S),N=tO;if(n.vsub(C,N),T<0&&N.dot(S)>0){const O=[];for(let M=0,E=w.length;M!==E;M++){const A=d.get();o.vmult(g[w[M]],A),i.vadd(A,A),O.push(A)}if(LP(O,S,n)){if(h)return!0;x=!0;const M=this.createContactEquation(a,l,t,e,c,u);S.scale(-m,M.ri),S.negate(M.ni);const E=d.get();S.scale(-T,E);const A=d.get();S.scale(-m,A),n.vsub(i,M.rj),M.rj.vadd(A,M.rj),M.rj.vadd(E,M.rj),M.rj.vadd(i,M.rj),M.rj.vsub(l.position,M.rj),M.ri.vadd(n,M.ri),M.ri.vsub(a.position,M.ri),d.release(E),d.release(A),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult);for(let R=0,V=O.length;R!==V;R++)d.release(O[R]);return}else for(let M=0;M!==w.length;M++){const E=d.get(),A=d.get();o.vmult(g[w[(M+1)%w.length]],E),o.vmult(g[w[(M+2)%w.length]],A),i.vadd(E,E),i.vadd(A,A);const R=qP;A.vsub(E,R);const V=XP;R.unit(V);const P=d.get(),$=d.get();n.vsub(E,$);const D=$.dot(V);V.scale(D,P),P.vadd(E,P);const W=d.get();if(P.vsub(n,W),D>0&&D*D<R.lengthSquared()&&W.lengthSquared()<m*m){if(h)return!0;const G=this.createContactEquation(a,l,t,e,c,u);P.vsub(i,G.rj),P.vsub(n,G.ni),G.ni.normalize(),G.ni.scale(m,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult);for(let X=0,it=O.length;X!==it;X++)d.release(O[X]);d.release(E),d.release(A),d.release(P),d.release(W),d.release($);return}d.release(E),d.release(A),d.release(P),d.release(W),d.release($)}for(let M=0,E=O.length;M!==E;M++)d.release(O[M])}}}planeConvex(t,e,n,i,r,o,a,l,c,u,h){const d=eO,f=nO;f.set(0,0,1),r.vmult(f,f);let p=0;const g=sO;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,g),f.dot(g)<=0){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u),b=iO;f.scale(f.dot(g),b),d.vsub(b,b),b.vsub(n,v.ri),v.ni.copy(f),d.vsub(i,v.rj),v.ri.vadd(n,v.ri),v.ri.vsub(a.position,v.ri),v.rj.vadd(i,v.rj),v.rj.vsub(l.position,v.rj),this.result.push(v),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}sphereHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=t.radius,p=e.elementSize,g=vO,m=xO;Re.pointToLocalFrame(i,o,n,m);let x=Math.floor((m.x-f)/p)-1,v=Math.ceil((m.x+f)/p)+1,b=Math.floor((m.y-f)/p)-1,y=Math.ceil((m.y+f)/p)+1;if(v<0||y<0||x>d.length||b>d[0].length)return;x<0&&(x=0),v<0&&(v=0),b<0&&(b=0),y<0&&(y=0),x>=d.length&&(x=d.length-1),v>=d.length&&(v=d.length-1),y>=d[0].length&&(y=d[0].length-1),b>=d[0].length&&(b=d[0].length-1);const w=[];e.getRectMinMax(x,b,v,y,w);const S=w[0],C=w[1];if(m.z-f>C||m.z+f<S)return;const _=this.result;for(let I=x;I<v;I++)for(let T=b;T<y;T++){const N=_.length;let O=!1;if(e.getConvexTrianglePillar(I,T,!1),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(O=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&O||(e.getConvexTrianglePillar(I,T,!0),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(O=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&O))return!0;if(_.length-N>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=e.elementSize,p=t.boundingSphereRadius,g=mO,m=gO,x=pO;Re.pointToLocalFrame(i,o,n,x);let v=Math.floor((x.x-p)/f)-1,b=Math.ceil((x.x+p)/f)+1,y=Math.floor((x.y-p)/f)-1,w=Math.ceil((x.y+p)/f)+1;if(b<0||w<0||v>d.length||y>d[0].length)return;v<0&&(v=0),b<0&&(b=0),y<0&&(y=0),w<0&&(w=0),v>=d.length&&(v=d.length-1),b>=d.length&&(b=d.length-1),w>=d[0].length&&(w=d[0].length-1),y>=d[0].length&&(y=d[0].length-1);const S=[];e.getRectMinMax(v,y,b,w,S);const C=S[0],_=S[1];if(!(x.z-p>_||x.z+p<C))for(let I=v;I<b;I++)for(let T=y;T<w;T++){let N=!1;if(e.getConvexTrianglePillar(I,T,!1),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(N=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&N||(e.getConvexTrianglePillar(I,T,!0),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(N=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&N))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,u,h){const d=uO;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(h)return!0;const p=this.createContactEquation(l,a,e,t,c,u);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,u,h){const d=aO;d.set(0,0,1),a.quaternion.vmult(d,d);const f=lO;if(i.vsub(a.position,f),d.dot(f)<=0){if(h)return!0;const g=this.createContactEquation(l,a,e,t,c,u);g.ni.copy(d),g.ni.negate(g.ni),g.ri.set(0,0,0);const m=cO;d.scale(d.dot(i),m),i.vsub(m,m),g.rj.copy(m),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexParticle(t,e,n,i,r,o,a,l,c,u,h){let d=-1;const f=dO,p=fO;let g=null;const m=hO;if(m.copy(i),m.vsub(n,m),r.conjugate(Qw),Qw.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let x=0,v=t.faces.length;x!==v;x++){const b=[t.worldVertices[t.faces[x][0]]],y=t.worldFaceNormals[x];i.vsub(b[0],t1);const w=-y.dot(t1);if(g===null||Math.abs(w)<Math.abs(g)){if(h)return!0;g=w,d=x,f.copy(y)}}if(d!==-1){const x=this.createContactEquation(l,a,e,t,c,u);f.scale(g,p),p.vadd(i,p),p.vsub(n,p),x.rj.copy(p),f.negate(x.ni),x.ri.set(0,0,0);const v=x.ri,b=x.rj;v.vadd(i,v),v.vsub(l.position,v),b.vadd(n,b),b.vsub(a.position,b),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,u,h)}particleCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexParticle(e,t,i,n,o,r,l,a,c,u,h)}sphereTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=_P,f=SP,p=CP,g=IP,m=TP,x=EP,v=NP,b=wP,y=bP,w=RP;Re.pointToLocalFrame(i,o,n,m);const S=t.radius;v.lowerBound.set(m.x-S,m.y-S,m.z-S),v.upperBound.set(m.x+S,m.y+S,m.z+S),e.getTrianglesInAABB(v,w);const C=yP,_=t.radius*t.radius;for(let M=0;M<w.length;M++)for(let E=0;E<3;E++)if(e.getVertex(e.indices[w[M]*3+E],C),C.vsub(m,y),y.lengthSquared()<=_){if(b.copy(C),Re.pointToWorldFrame(i,o,b,C),C.vsub(n,y),h)return!0;let A=this.createContactEquation(a,l,t,e,c,u);A.ni.copy(y),A.ni.normalize(),A.ri.copy(A.ni),A.ri.scale(t.radius,A.ri),A.ri.vadd(n,A.ri),A.ri.vsub(a.position,A.ri),A.rj.copy(C),A.rj.vsub(l.position,A.rj),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult)}for(let M=0;M<w.length;M++)for(let E=0;E<3;E++){e.getVertex(e.indices[w[M]*3+E],d),e.getVertex(e.indices[w[M]*3+(E+1)%3],f),f.vsub(d,p),m.vsub(f,x);const A=x.dot(p);m.vsub(d,x);let R=x.dot(p);if(R>0&&A<0&&(m.vsub(d,x),g.copy(p),g.normalize(),R=x.dot(g),g.scale(R,x),x.vadd(d,x),x.distanceTo(m)<t.radius)){if(h)return!0;const P=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,P.ni),P.ni.normalize(),P.ni.scale(t.radius,P.ri),P.ri.vadd(n,P.ri),P.ri.vsub(a.position,P.ri),Re.pointToWorldFrame(i,o,x,x),x.vsub(l.position,P.rj),Re.vectorToWorldFrame(o,P.ni,P.ni),Re.vectorToWorldFrame(o,P.ri,P.ri),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}}const I=MP,T=kP,N=AP,O=vP;for(let M=0,E=w.length;M!==E;M++){e.getTriangleVertices(w[M],I,T,N),e.getNormal(w[M],O),m.vsub(I,x);let A=x.dot(O);if(O.scale(A,x),m.vsub(x,x),A=x.distanceTo(m),yn.pointInTriangle(x,I,T,N)&&A<t.radius){if(h)return!0;let R=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,R.ni),R.ni.normalize(),R.ni.scale(t.radius,R.ri),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),Re.pointToWorldFrame(i,o,x,x),x.vsub(l.position,R.rj),Re.vectorToWorldFrame(o,R.ni,R.ni),Re.vectorToWorldFrame(o,R.ri,R.ri),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}}w.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=new k,f=mP;f.set(0,0,1),r.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,d);const g=new k;g.copy(d),Re.pointToWorldFrame(i,o,g,d);const m=gP;if(d.vsub(n,m),f.dot(m)<=0){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u);v.ni.copy(f);const b=xP;f.scale(m.dot(f),b),d.vsub(b,b),v.ri.copy(b),v.ri.vsub(a.position,v.ri),v.rj.copy(d),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const $o=new k,al=new k,ll=new k,hP=new k,dP=new k,fP=new fn,pP=new fn,mP=new k,gP=new k,xP=new k,vP=new k,bP=new k;new k;const yP=new k,wP=new k,_P=new k,SP=new k,CP=new k,IP=new k,TP=new k,EP=new k,MP=new k,kP=new k,AP=new k,NP=new Us,RP=[],Td=new k,Jw=new k,$P=new k,DP=new k,FP=new k;function LP(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=$P;s[(r+1)%i].vsub(o,a);const l=DP;a.cross(t,l);const c=FP;e.vsub(o,c);const u=l.dot(c);if(n===null||u>0&&n===!0||u<=0&&n===!1){n===null&&(n=u>0);continue}else return!1}return!0}const Ed=new k,PP=new k,OP=new k,zP=new k,BP=[new k,new k,new k,new k,new k,new k],UP=new k,VP=new k,WP=new k,GP=new k,HP=new k,qP=new k,XP=new k,jP=new k,KP=new k,YP=new k,ZP=new k,JP=new k,QP=new k,tO=new k;new k;new k;const eO=new k,nO=new k,sO=new k,iO=new k,rO=new k,oO=new k,aO=new k,lO=new k,cO=new k,uO=new k,Qw=new fn,hO=new k;new k;const dO=new k,t1=new k,fO=new k,pO=new k,mO=new k,gO=[0],xO=new k,vO=new k;class e1{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const u=n[l];for(;u>i[a];)a++;c=u===i[a],c||n1(t,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=i[l];for(;u>n[a];)a++;c=n[a]===u,c||n1(e,u)}}}function n1(s,t){s.push((t&4294901760)>>16,t&65535)}const xg=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class bO{constructor(){this.data={keys:[]}}get(t,e){const n=xg(t,e);return this.data[n]}set(t,e,n){const i=xg(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=xg(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class yO extends QS{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new k,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new k,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new _L,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new iP,this.constraints=[],this.narrowphase=new uP(this),this.collisionMatrix=new Bw,this.collisionMatrixPrevious=new Bw,this.bodyOverlapKeeper=new e1,this.shapeOverlapKeeper=new e1,this.contactmaterials=[],this.contactMaterialTable=new bO,this.defaultMaterial=new mo("default"),this.defaultContactMaterial=new Vf(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof tf?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=yn.ALL,n.from=t,n.to=e,n.callback=i,vg.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=yn.ANY,n.from=t,n.to=e,n.result=i,vg.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=yn.CLOSEST,n.from=t,n.to=e,n.result=i,vg.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof Pt&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=Mn.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const i=n-this.lastCallTime;this.step(t,i,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=Mn.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!(Mn.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=IO,i=TO,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,h=Pt.DYNAMIC;let d=-1/0;const f=this.constraints,p=CO;l.length();const g=l.x,m=l.y,x=l.z;let v=0;for(c&&(d=Mn.now()),v=0;v!==r;v++){const M=o[v];if(M.type===h){const E=M.force,A=M.mass;E.x+=A*g,E.y+=A*m,E.z+=A*x}}for(let M=0,E=this.subsystems.length;M!==E;M++)this.subsystems[M].update();c&&(d=Mn.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(u.broadphase=Mn.now()-d);let b=f.length;for(v=0;v!==b;v++){const M=f[v];if(!M.collideConnected)for(let E=n.length-1;E>=0;E-=1)(M.bodyA===n[E]&&M.bodyB===i[E]||M.bodyB===n[E]&&M.bodyA===i[E])&&(n.splice(E,1),i.splice(E,1))}this.collisionMatrixTick(),c&&(d=Mn.now());const y=SO,w=e.length;for(v=0;v!==w;v++)y.push(e[v]);e.length=0;const S=this.frictionEquations.length;for(v=0;v!==S;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,y,this.frictionEquations,p),c&&(u.narrowphase=Mn.now()-d),c&&(d=Mn.now()),v=0;v<this.frictionEquations.length;v++)a.addEquation(this.frictionEquations[v]);const C=e.length;for(let M=0;M!==C;M++){const E=e[M],A=E.bi,R=E.bj,V=E.si,P=E.sj;let $;if(A.material&&R.material?$=this.getContactMaterial(A.material,R.material)||this.defaultContactMaterial:$=this.defaultContactMaterial,$.friction,A.material&&R.material&&(A.material.friction>=0&&R.material.friction>=0&&A.material.friction*R.material.friction,A.material.restitution>=0&&R.material.restitution>=0&&(E.restitution=A.material.restitution*R.material.restitution)),a.addEquation(E),A.allowSleep&&A.type===Pt.DYNAMIC&&A.sleepState===Pt.SLEEPING&&R.sleepState===Pt.AWAKE&&R.type!==Pt.STATIC){const D=R.velocity.lengthSquared()+R.angularVelocity.lengthSquared(),W=R.sleepSpeedLimit**2;D>=W*2&&(A.wakeUpAfterNarrowphase=!0)}if(R.allowSleep&&R.type===Pt.DYNAMIC&&R.sleepState===Pt.SLEEPING&&A.sleepState===Pt.AWAKE&&A.type!==Pt.STATIC){const D=A.velocity.lengthSquared()+A.angularVelocity.lengthSquared(),W=A.sleepSpeedLimit**2;D>=W*2&&(R.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(A,R,!0),this.collisionMatrixPrevious.get(A,R)||(Ac.body=R,Ac.contact=E,A.dispatchEvent(Ac),Ac.body=A,R.dispatchEvent(Ac)),this.bodyOverlapKeeper.set(A.id,R.id),this.shapeOverlapKeeper.set(V.id,P.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=Mn.now()-d,d=Mn.now()),v=0;v!==r;v++){const M=o[v];M.wakeUpAfterNarrowphase&&(M.wakeUp(),M.wakeUpAfterNarrowphase=!1)}for(b=f.length,v=0;v!==b;v++){const M=f[v];M.update();for(let E=0,A=M.equations.length;E!==A;E++){const R=M.equations[E];a.addEquation(R)}}a.solve(t,this),c&&(u.solve=Mn.now()-d),a.removeAllEquations();const _=Math.pow;for(v=0;v!==r;v++){const M=o[v];if(M.type&h){const E=_(1-M.linearDamping,t),A=M.velocity;A.scale(E,A);const R=M.angularVelocity;if(R){const V=_(1-M.angularDamping,t);R.scale(V,R)}}}this.dispatchEvent(_O),c&&(d=Mn.now());const T=this.stepnumber%(this.quatNormalizeSkip+1)===0,N=this.quatNormalizeFast;for(v=0;v!==r;v++)o[v].integrate(t,T,N);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=Mn.now()-d),this.stepnumber+=1,this.dispatchEvent(wO);let O=!0;if(this.allowSleep)for(O=!1,v=0;v!==r;v++){const M=o[v];M.sleepTick(this.time),M.sleepState!==Pt.SLEEPING&&(O=!0)}this.hasActiveBodies=O}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(xr,vr),t){for(let r=0,o=xr.length;r<o;r+=2)Nc.bodyA=this.getBodyById(xr[r]),Nc.bodyB=this.getBodyById(xr[r+1]),this.dispatchEvent(Nc);Nc.bodyA=Nc.bodyB=null}if(e){for(let r=0,o=vr.length;r<o;r+=2)Rc.bodyA=this.getBodyById(vr[r]),Rc.bodyB=this.getBodyById(vr[r+1]),this.dispatchEvent(Rc);Rc.bodyA=Rc.bodyB=null}xr.length=vr.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(xr,vr),n){for(let r=0,o=xr.length;r<o;r+=2){const a=this.getShapeById(xr[r]),l=this.getShapeById(xr[r+1]);br.shapeA=a,br.shapeB=l,a&&(br.bodyA=a.body),l&&(br.bodyB=l.body),this.dispatchEvent(br)}br.bodyA=br.bodyB=br.shapeA=br.shapeB=null}if(i){for(let r=0,o=vr.length;r<o;r+=2){const a=this.getShapeById(vr[r]),l=this.getShapeById(vr[r+1]);yr.shapeA=a,yr.shapeB=l,a&&(yr.bodyA=a.body),l&&(yr.bodyB=l.body),this.dispatchEvent(yr)}yr.bodyA=yr.bodyB=yr.shapeA=yr.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new Us;const vg=new yn,Mn=globalThis.performance||{};if(!Mn.now){let s=Date.now();Mn.timing&&Mn.timing.navigationStart&&(s=Mn.timing.navigationStart),Mn.now=()=>Date.now()-s}new k;const wO={type:"postStep"},_O={type:"preStep"},Ac={type:Pt.COLLIDE_EVENT_NAME,body:null,contact:null},SO=[],CO=[],IO=[],TO=[],xr=[],vr=[],Nc={type:"beginContact",bodyA:null,bodyB:null},Rc={type:"endContact",bodyA:null,bodyB:null},br={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},yr={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},s1={type:"change"},bg={type:"start"},i1={type:"end"};class EO extends Ma{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new Y,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ha.ROTATE,MIDDLE:Ha.DOLLY,RIGHT:Ha.PAN},this.touches={ONE:qa.ROTATE,TWO:qa.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(H){H.addEventListener("keydown",ze),this._domElementKeyEvents=H},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(s1),n.update(),r=i.NONE},this.update=function(){const H=new Y,et=new ha().setFromUnitVectors(t.up,new Y(0,1,0)),Lt=et.clone().invert(),zt=new Y,$t=new ha,Qt=2*Math.PI;return function(){const Ce=n.object.position;H.copy(Ce).sub(n.target),H.applyQuaternion(et),a.setFromVector3(H),n.autoRotate&&r===i.NONE&&I(C()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Ee=n.minAzimuthAngle,Be=n.maxAzimuthAngle;return isFinite(Ee)&&isFinite(Be)&&(Ee<-Math.PI?Ee+=Qt:Ee>Math.PI&&(Ee-=Qt),Be<-Math.PI?Be+=Qt:Be>Math.PI&&(Be-=Qt),Ee<=Be?a.theta=Math.max(Ee,Math.min(Be,a.theta)):a.theta=a.theta>(Ee+Be)/2?Math.max(Ee,a.theta):Math.min(Be,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),H.setFromSpherical(a),H.applyQuaternion(Lt),Ce.copy(n.target).add(H),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||zt.distanceToSquared(n.object.position)>o||8*(1-$t.dot(n.object.quaternion))>o?(n.dispatchEvent(s1),zt.copy(n.object.position),$t.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ct),n.domElement.removeEventListener("pointerdown",jt),n.domElement.removeEventListener("pointercancel",ue),n.domElement.removeEventListener("wheel",Ft),n.domElement.removeEventListener("pointermove",Zt),n.domElement.removeEventListener("pointerup",Ht),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",ze)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new Fw,l=new Fw;let c=1;const u=new Y;let h=!1;const d=new Dt,f=new Dt,p=new Dt,g=new Dt,m=new Dt,x=new Dt,v=new Dt,b=new Dt,y=new Dt,w=[],S={};function C(){return 2*Math.PI/60/60*n.autoRotateSpeed}function _(){return Math.pow(.95,n.zoomSpeed)}function I(H){l.theta-=H}function T(H){l.phi-=H}const N=function(){const H=new Y;return function(Lt,zt){H.setFromMatrixColumn(zt,0),H.multiplyScalar(-Lt),u.add(H)}}(),O=function(){const H=new Y;return function(Lt,zt){n.screenSpacePanning===!0?H.setFromMatrixColumn(zt,1):(H.setFromMatrixColumn(zt,0),H.crossVectors(n.object.up,H)),H.multiplyScalar(Lt),u.add(H)}}(),M=function(){const H=new Y;return function(Lt,zt){const $t=n.domElement;if(n.object.isPerspectiveCamera){const Qt=n.object.position;H.copy(Qt).sub(n.target);let Jt=H.length();Jt*=Math.tan(n.object.fov/2*Math.PI/180),N(2*Lt*Jt/$t.clientHeight,n.object.matrix),O(2*zt*Jt/$t.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(N(Lt*(n.object.right-n.object.left)/n.object.zoom/$t.clientWidth,n.object.matrix),O(zt*(n.object.top-n.object.bottom)/n.object.zoom/$t.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function E(H){n.object.isPerspectiveCamera?c/=H:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*H)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function A(H){n.object.isPerspectiveCamera?c*=H:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/H)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(H){d.set(H.clientX,H.clientY)}function V(H){v.set(H.clientX,H.clientY)}function P(H){g.set(H.clientX,H.clientY)}function $(H){f.set(H.clientX,H.clientY),p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const et=n.domElement;I(2*Math.PI*p.x/et.clientHeight),T(2*Math.PI*p.y/et.clientHeight),d.copy(f),n.update()}function D(H){b.set(H.clientX,H.clientY),y.subVectors(b,v),y.y>0?E(_()):y.y<0&&A(_()),v.copy(b),n.update()}function W(H){m.set(H.clientX,H.clientY),x.subVectors(m,g).multiplyScalar(n.panSpeed),M(x.x,x.y),g.copy(m),n.update()}function G(H){H.deltaY<0?A(_()):H.deltaY>0&&E(_()),n.update()}function X(H){let et=!1;switch(H.code){case n.keys.UP:M(0,n.keyPanSpeed),et=!0;break;case n.keys.BOTTOM:M(0,-n.keyPanSpeed),et=!0;break;case n.keys.LEFT:M(n.keyPanSpeed,0),et=!0;break;case n.keys.RIGHT:M(-n.keyPanSpeed,0),et=!0;break}et&&(H.preventDefault(),n.update())}function it(){if(w.length===1)d.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),et=.5*(w[0].pageY+w[1].pageY);d.set(H,et)}}function at(){if(w.length===1)g.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),et=.5*(w[0].pageY+w[1].pageY);g.set(H,et)}}function J(){const H=w[0].pageX-w[1].pageX,et=w[0].pageY-w[1].pageY,Lt=Math.sqrt(H*H+et*et);v.set(0,Lt)}function bt(){n.enableZoom&&J(),n.enablePan&&at()}function xt(){n.enableZoom&&J(),n.enableRotate&&it()}function vt(H){if(w.length==1)f.set(H.pageX,H.pageY);else{const Lt=se(H),zt=.5*(H.pageX+Lt.x),$t=.5*(H.pageY+Lt.y);f.set(zt,$t)}p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const et=n.domElement;I(2*Math.PI*p.x/et.clientHeight),T(2*Math.PI*p.y/et.clientHeight),d.copy(f)}function pt(H){if(w.length===1)m.set(H.pageX,H.pageY);else{const et=se(H),Lt=.5*(H.pageX+et.x),zt=.5*(H.pageY+et.y);m.set(Lt,zt)}x.subVectors(m,g).multiplyScalar(n.panSpeed),M(x.x,x.y),g.copy(m)}function At(H){const et=se(H),Lt=H.pageX-et.x,zt=H.pageY-et.y,$t=Math.sqrt(Lt*Lt+zt*zt);b.set(0,$t),y.set(0,Math.pow(b.y/v.y,n.zoomSpeed)),E(y.y),v.copy(b)}function Rt(H){n.enableZoom&&At(H),n.enablePan&&pt(H)}function It(H){n.enableZoom&&At(H),n.enableRotate&&vt(H)}function jt(H){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(H.pointerId),n.domElement.addEventListener("pointermove",Zt),n.domElement.addEventListener("pointerup",Ht)),wt(H),H.pointerType==="touch"?U(H):ne(H))}function Zt(H){n.enabled!==!1&&(H.pointerType==="touch"?L(H):ht(H))}function Ht(H){St(H),w.length===0&&(n.domElement.releasePointerCapture(H.pointerId),n.domElement.removeEventListener("pointermove",Zt),n.domElement.removeEventListener("pointerup",Ht)),n.dispatchEvent(i1),r=i.NONE}function ue(H){St(H)}function ne(H){let et;switch(H.button){case 0:et=n.mouseButtons.LEFT;break;case 1:et=n.mouseButtons.MIDDLE;break;case 2:et=n.mouseButtons.RIGHT;break;default:et=-1}switch(et){case Ha.DOLLY:if(n.enableZoom===!1)return;V(H),r=i.DOLLY;break;case Ha.ROTATE:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enablePan===!1)return;P(H),r=i.PAN}else{if(n.enableRotate===!1)return;R(H),r=i.ROTATE}break;case Ha.PAN:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enableRotate===!1)return;R(H),r=i.ROTATE}else{if(n.enablePan===!1)return;P(H),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(bg)}function ht(H){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;$(H);break;case i.DOLLY:if(n.enableZoom===!1)return;D(H);break;case i.PAN:if(n.enablePan===!1)return;W(H);break}}function Ft(H){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(H.preventDefault(),n.dispatchEvent(bg),G(H),n.dispatchEvent(i1))}function ze(H){n.enabled===!1||n.enablePan===!1||X(H)}function U(H){switch(Et(H),w.length){case 1:switch(n.touches.ONE){case qa.ROTATE:if(n.enableRotate===!1)return;it(),r=i.TOUCH_ROTATE;break;case qa.PAN:if(n.enablePan===!1)return;at(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case qa.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;bt(),r=i.TOUCH_DOLLY_PAN;break;case qa.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;xt(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(bg)}function L(H){switch(Et(H),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;vt(H),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;pt(H),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Rt(H),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;It(H),n.update();break;default:r=i.NONE}}function ct(H){n.enabled!==!1&&H.preventDefault()}function wt(H){w.push(H)}function St(H){delete S[H.pointerId];for(let et=0;et<w.length;et++)if(w[et].pointerId==H.pointerId){w.splice(et,1);return}}function Et(H){let et=S[H.pointerId];et===void 0&&(et=new Dt,S[H.pointerId]=et),et.set(H.pageX,H.pageY)}function se(H){const et=H.pointerId===w[0].pointerId?w[1]:w[0];return S[et.pointerId]}n.domElement.addEventListener("contextmenu",ct),n.domElement.addEventListener("pointerdown",jt),n.domElement.addEventListener("pointercancel",ue),n.domElement.addEventListener("wheel",Ft,{passive:!1}),this.update()}}class Wf{constructor(){this.meshes=[],this.bodies=[],this.constraints=[]}syncMeshesToBodies(){this.meshes.forEach((t,e)=>{t.position.x=this.bodies[e].position.x,t.position.y=this.bodies[e].position.y,t.position.z=this.bodies[e].position.z,t.quaternion.x=this.bodies[e].quaternion.x,t.quaternion.y=this.bodies[e].quaternion.y,t.quaternion.z=this.bodies[e].quaternion.z,t.quaternion.w=this.bodies[e].quaternion.w})}}class MO extends Wf{constructor(t,e,n,i,r,o,a,l=1,c=.05,u=.1){super(),this.bodies.push(new Pt({mass:l,position:new k(t,e,n),shape:new wu(new k(i/2,r/2,o/2)),material:new mo({friction:c,restitution:u})}));let h=new sn(new po(i,r,o),a);h.castShadow=!0,h.receiveShadow=!0,h.translateX(t),h.translateY(e),h.translateZ(n),this.meshes.push(h)}rotateY(t){this.bodies[0].quaternion.setFromAxisAngle(new k(0,1,0),t),this.meshes[0].rotateY(t)}}var Na=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function kO(s){var t=s.default;if(typeof t=="function"){var e=function(){return t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),e}function Di(s,t){this.current=s,this.next=t,this._inNormal=this.inwardsNormal(),this._outNormal=this.outwardsNormal()}Di.prototype.outwardsNormal=function(){var s=this.inwardsNormal();return[-s[0],-s[1]]};Di.prototype.inwardsNormal=function(){var s=this.next[0]-this.current[0],t=this.next[1]-this.current[1],e=Math.sqrt(s*s+t*t);if(e===0)throw new Error("Vertices overlap");return[-t/e,s/e]};Di.prototype.offset=function(s,t){return Di.offsetEdge(this.current,this.next,s,t)};Di.prototype.inverseOffset=function(s,t){return Di.offsetEdge(this.next,this.current,s,t)};Di.offsetEdge=function(s,t,e,n){return new Di([s[0]+e,s[1]+n],[t[0]+e,t[1]+n])};Di.prototype.inverse=function(){return new Di(this.next,this.current)};var AO=Di,lC={exports:{}},di={exports:{}},cC={NORMAL:0,NON_CONTRIBUTING:1,SAME_TRANSITION:2,DIFFERENT_TRANSITION:3},i0={exports:{}};i0.exports=iu;i0.exports.default=iu;function iu(s,t){if(!(this instanceof iu))return new iu(s,t);if(this.data=s||[],this.length=this.data.length,this.compare=t||NO,this.length>0)for(var e=(this.length>>1)-1;e>=0;e--)this._down(e)}function NO(s,t){return s<t?-1:s>t?1:0}iu.prototype={push:function(s){this.data.push(s),this.length++,this._up(this.length-1)},pop:function(){if(this.length!==0){var s=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),s}},peek:function(){return this.data[0]},_up:function(s){for(var t=this.data,e=this.compare,n=t[s];s>0;){var i=s-1>>1,r=t[i];if(e(n,r)>=0)break;t[s]=r,s=i}t[s]=n},_down:function(s){for(var t=this.data,e=this.compare,n=this.length>>1,i=t[s];s<n;){var r=(s<<1)+1,o=r+1,a=t[r];if(o<this.length&&e(t[o],a)<0&&(r=o,a=t[o]),e(a,i)>=0)break;t[s]=a,s=r}t[s]=i}};function zi(){}zi.prototype.clear=function(){this._root=null,this.size=0};zi.prototype.find=function(s){for(var t=this._root;t!==null;){var e=this._comparator(s,t.data);if(e===0)return t.data;t=t.get_child(e>0)}return null};zi.prototype.findIter=function(s){for(var t=this._root,e=this.iterator();t!==null;){var n=this._comparator(s,t.data);if(n===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(n>0)}return null};zi.prototype.lowerBound=function(s){for(var t=this._root,e=this.iterator(),n=this._comparator;t!==null;){var i=n(s,t.data);if(i===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(i>0)}for(var r=e._ancestors.length-1;r>=0;--r)if(t=e._ancestors[r],n(s,t.data)<0)return e._cursor=t,e._ancestors.length=r,e;return e._ancestors.length=0,e};zi.prototype.upperBound=function(s){for(var t=this.lowerBound(s),e=this._comparator;t.data()!==null&&e(t.data(),s)===0;)t.next();return t};zi.prototype.min=function(){var s=this._root;if(s===null)return null;for(;s.left!==null;)s=s.left;return s.data};zi.prototype.max=function(){var s=this._root;if(s===null)return null;for(;s.right!==null;)s=s.right;return s.data};zi.prototype.iterator=function(){return new ac(this)};zi.prototype.each=function(s){for(var t=this.iterator(),e;(e=t.next())!==null;)if(s(e)===!1)return};zi.prototype.reach=function(s){for(var t=this.iterator(),e;(e=t.prev())!==null;)if(s(e)===!1)return};function ac(s){this._tree=s,this._ancestors=[],this._cursor=null}ac.prototype.data=function(){return this._cursor!==null?this._cursor.data:null};ac.prototype.next=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._minNode(s)}else if(this._cursor.right===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.right===t)}else this._ancestors.push(this._cursor),this._minNode(this._cursor.right);return this._cursor!==null?this._cursor.data:null};ac.prototype.prev=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._maxNode(s)}else if(this._cursor.left===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.left===t)}else this._ancestors.push(this._cursor),this._maxNode(this._cursor.left);return this._cursor!==null?this._cursor.data:null};ac.prototype._minNode=function(s){for(;s.left!==null;)this._ancestors.push(s),s=s.left;this._cursor=s};ac.prototype._maxNode=function(s){for(;s.right!==null;)this._ancestors.push(s),s=s.right;this._cursor=s};var uC=zi,RO=uC;function El(s){this.data=s,this.left=null,this.right=null,this.red=!0}El.prototype.get_child=function(s){return s?this.right:this.left};El.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Gf(s){this._root=null,this._comparator=s,this.size=0}Gf.prototype=new RO;Gf.prototype.insert=function(s){var t=!1;if(this._root===null)this._root=new El(s),t=!0,this.size++;else{var e=new El(void 0),n=0,i=0,r=null,o=e,a=null,l=this._root;for(o.right=this._root;;){if(l===null?(l=new El(s),a.set_child(n,l),t=!0,this.size++):Zs(l.left)&&Zs(l.right)&&(l.red=!0,l.left.red=!1,l.right.red=!1),Zs(l)&&Zs(a)){var c=o.right===r;l===a.get_child(i)?o.set_child(c,ru(r,!i)):o.set_child(c,hC(r,!i))}var u=this._comparator(l.data,s);if(u===0)break;i=n,n=u<0,r!==null&&(o=r),r=a,a=l,l=l.get_child(n)}this._root=e.right}return this._root.red=!1,t};Gf.prototype.remove=function(s){if(this._root===null)return!1;var t=new El(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=null,o=1;e.get_child(o)!==null;){var a=o;i=n,n=e,e=e.get_child(o);var l=this._comparator(s,e.data);if(o=l>0,l===0&&(r=e),!Zs(e)&&!Zs(e.get_child(o))){if(Zs(e.get_child(!o))){var c=ru(e,o);n.set_child(a,c),n=c}else if(!Zs(e.get_child(!o))){var u=n.get_child(!a);if(u!==null)if(!Zs(u.get_child(!a))&&!Zs(u.get_child(a)))n.red=!1,u.red=!0,e.red=!0;else{var h=i.right===n;Zs(u.get_child(a))?i.set_child(h,hC(n,a)):Zs(u.get_child(!a))&&i.set_child(h,ru(n,a));var d=i.get_child(h);d.red=!0,e.red=!0,d.left.red=!1,d.right.red=!1}}}}return r!==null&&(r.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this.size--),this._root=t.right,this._root!==null&&(this._root.red=!1),r!==null};function Zs(s){return s!==null&&s.red}function ru(s,t){var e=s.get_child(!t);return s.set_child(!t,e.get_child(t)),e.set_child(t,s),s.red=!0,e.red=!1,e}function hC(s,t){return s.set_child(!t,ru(s.get_child(!t),!t)),ru(s,t)}var $O=Gf,DO=uC;function ou(s){this.data=s,this.left=null,this.right=null}ou.prototype.get_child=function(s){return s?this.right:this.left};ou.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Hf(s){this._root=null,this._comparator=s,this.size=0}Hf.prototype=new DO;Hf.prototype.insert=function(s){if(this._root===null)return this._root=new ou(s),this.size++,!0;for(var t=0,e=null,n=this._root;;){if(n===null)return n=new ou(s),e.set_child(t,n),ret=!0,this.size++,!0;if(this._comparator(n.data,s)===0)return!1;t=this._comparator(n.data,s)<0,e=n,n=n.get_child(t)}};Hf.prototype.remove=function(s){if(this._root===null)return!1;var t=new ou(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=1;e.get_child(r)!==null;){n=e,e=e.get_child(r);var o=this._comparator(s,e.data);r=o>0,o===0&&(i=e)}return i!==null?(i.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this._root=t.right,this.size--,!0):!1};var FO=Hf,LO={RBTree:$O,BinTree:FO},r0=function(t,e,n){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])},r1=r0,PO=cC;function dC(s,t,e,n,i){this.left=t,this.point=s,this.otherEvent=e,this.isSubject=n,this.type=i||PO.NORMAL,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.inResult=!1,this.resultInOut=!1}dC.prototype={isBelow:function(s){return this.left?r1(this.point,this.otherEvent.point,s)>0:r1(this.otherEvent.point,this.point,s)>0},isAbove:function(s){return!this.isBelow(s)},isVertical:function(){return this.point[0]===this.otherEvent.point[0]}};var OO=dC,zO=r0,fC=function(t,e){var n=t.point,i=e.point;return n[0]>i[0]?1:n[0]<i[0]?-1:n[1]!==i[1]?n[1]>i[1]?1:-1:BO(t,e,n)};function BO(s,t,e,n){return s.left!==t.left?s.left?1:-1:zO(e,s.otherEvent.point,t.otherEvent.point)!==0?s.isBelow(t.otherEvent.point)?-1:1:!s.isSubject&&t.isSubject?1:-1}var pC=function(t,e){return t[0]===e[0]&&t[1]===e[1]},o1=r0,a1=fC,yg=pC,UO=function(t,e){if(t===e)return 0;if(o1(t.point,t.otherEvent.point,e.point)!==0||o1(t.point,t.otherEvent.point,e.otherEvent.point)!==0)return yg(t.point,e.point)?t.isBelow(e.otherEvent.point)?-1:1:t.point[0]===e.point[0]?t.point[1]<e.point[1]?-1:1:a1(t,e)===1?e.isAbove(t.point)?-1:1:t.isBelow(e.point)?-1:1;if(t.isSubject===e.isSubject){if(yg(t.point,e.point))return yg(t.otherEvent.point,e.otherEvent.point)?0:t.contourId>e.contourId?1:-1}else return t.isSubject?-1:1;return a1(t,e)===1?1:-1},l1=1e-9;function Md(s,t){return s[0]*t[1]-s[1]*t[0]}function $c(s,t){return s[0]*t[0]+s[1]*t[1]}var VO=function(s,t,e,n,i){var r=[t[0]-s[0],t[1]-s[1]],o=[n[0]-e[0],n[1]-e[1]];function a(y,w,S){return[y[0]+w*S[0],y[1]+w*S[1]]}var l=[e[0]-s[0],e[1]-s[1]],c=Md(r,o),u=c*c,h=$c(r,r),d=$c(o,o);if(u>l1*h*d){var f=Md(l,o)/c;if(f<0||f>1)return null;var p=Md(l,r)/c;return p<0||p>1||i?null:[a(s,f,r)]}var g=$c(l,l);if(c=Md(l,r),u=c*c,u>l1*h*g)return null;var m=$c(r,l)/h,x=m+$c(r,o)/h,v=Math.min(m,x),b=Math.max(m,x);return v<=1&&b>=0?v===1?i?null:[a(s,v>0?v:0,r)]:b===0?i?null:[a(s,b<1?b:1,r)]:i&&v===0&&b===1?null:[a(s,v>0?v:0,r),a(s,b<1?b:1,r)]:null},pa=0,Bl=1,ma=2,_u=3,ef=[],Yo=cC,WO=i0.exports,GO=LO.RBTree,nf=OO,Ul=fC,HO=UO,qO=VO,Xi=pC,c1=Math.max,Qg=Math.min;function XO(s,t,e,n,i,r){var o=new nf(s,!1,void 0,e),a=new nf(t,!1,o,e);o.otherEvent=a,o.contourId=a.contourId=n,Ul(o,a)>0?a.left=!0:o.left=!0,r[0]=Qg(r[0],s[0]),r[1]=Qg(r[1],s[1]),r[2]=c1(r[2],s[0]),r[3]=c1(r[3],s[1]),i.push(o),i.push(a)}var tx=0;function ex(s,t,e,n,i){var r,o;if(typeof s[0][0]=="number")for(r=0,o=s.length-1;r<o;r++)XO(s[r],s[r+1],t,e+1,n,i);else for(r=0,o=s.length;r<o;r++)tx++,ex(s[r],t,tx,n,i)}function mC(s,t,e,n){var i=new WO(null,Ul);return tx=0,ex(s,!0,0,i,e),ex(t,!1,0,i,n),i}function ml(s,t,e,n){t===null?(s.inOut=!1,s.otherInOut=!0):s.isSubject===t.isSubject?(s.inOut=!t.inOut,s.otherInOut=t.otherInOut):(s.inOut=!t.otherInOut,s.otherInOut=t.isVertical()?!t.inOut:t.inOut),t&&(s.prevInResult=!u1(t,n)||t.isVertical()?t.prevInResult:t),s.inResult=u1(s,n)}function u1(s,t){switch(s.type){case Yo.NORMAL:switch(t){case pa:return!s.otherInOut;case Bl:return s.otherInOut;case ma:return s.isSubject&&s.otherInOut||!s.isSubject&&!s.otherInOut;case _u:return!0}case Yo.SAME_TRANSITION:return t===pa||t===Bl;case Yo.DIFFERENT_TRANSITION:return t===ma;case Yo.NON_CONTRIBUTING:return!1}return!1}function Xd(s,t,e){var n=qO(s.point,s.otherEvent.point,t.point,t.otherEvent.point),i=n?n.length:0;if(i===0||i===1&&(Xi(s.point,t.point)||Xi(s.otherEvent.point,t.otherEvent.point)))return 0;if(i===2&&s.isSubject===t.isSubject)return s.contourId===t.contourId&&console.warn("Edges of the same polygon overlap",s.point,s.otherEvent.point,t.point,t.otherEvent.point),0;if(i===1)return!Xi(s.point,n[0])&&!Xi(s.otherEvent.point,n[0])&&wr(s,n[0],e),!Xi(t.point,n[0])&&!Xi(t.otherEvent.point,n[0])&&wr(t,n[0],e),1;var r=[],o=!1,a=!1;return Xi(s.point,t.point)?o=!0:Ul(s,t)===1?r.push(t,s):r.push(s,t),Xi(s.otherEvent.point,t.otherEvent.point)?a=!0:Ul(s.otherEvent,t.otherEvent)===1?r.push(t.otherEvent,s.otherEvent):r.push(s.otherEvent,t.otherEvent),o&&a||o?(s.type=Yo.NON_CONTRIBUTING,t.type=s.inOut===t.inOut?Yo.SAME_TRANSITION:Yo.DIFFERENT_TRANSITION,o&&!a&&wr(r[0].otherEvent,r[1].point,e),2):a?(wr(r[0],r[1].point,e),3):r[0]!==r[3].otherEvent?(wr(r[0],r[1].point,e),wr(r[1],r[2].point,e),3):(wr(r[0],r[1].point,e),wr(r[3].otherEvent,r[2].point,e),3)}function wr(s,t,e){var n=new nf(t,!1,s,s.isSubject),i=new nf(t,!0,s.otherEvent,s.isSubject);return Xi(s.point,s.otherEvent.point)&&console.warn("what is that?",s),n.contourId=i.contourId=s.contourId,Ul(i,s.otherEvent)>0&&(s.otherEvent.left=!0,i.left=!1),s.otherEvent.otherEvent=i,s.otherEvent=n,e.push(i),e.push(n),e}function gC(s,t,e,n,i,r){for(var a=[],c,u,o=new GO(HO),a=[],l=Qg(n[2],i[2]),c,u;s.length;){var h=s.pop();if(a.push(h),r===pa&&h.point[0]>l||r===ma&&h.point[0]>n[2])break;if(h.left){if(o.insert(h),u=o.findIter(h),c=o.findIter(h),h.iterator=o.findIter(h),!c||!u){console.log("brute");var d=jO(o);c=d[0],u=d[1]}if(c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),ml(h,c.data(),o,r),u.data()&&Xd(h,u.data(),s)===2&&(ml(h,c.data(),o,r),ml(h,u.data(),o,r)),c.data()&&Xd(c.data(),h,s)===2){var f=o.findIter(c.data());f.data()!==o.min()?f.prev():(f=o.findIter(o.max()),f.next()),ml(c.data(),f.data(),o,r),ml(h,c.data(),o,r)}}else{if(h=h.otherEvent,u=o.findIter(h),c=o.findIter(h),!(c&&u))continue;c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),o.remove(h),u.data()&&c.data()&&Xd(c.data(),u.data(),s)}}return a}function jO(s,t){for(var e=s.iterator(),n=s.iterator(),i=s.iterator(),r;(r=i.next())!==null&&(e.next(),n.next(),r!==event););return[e,n]}function KO(s,t,e){var n=s[t];s[t]=s[e],s[e]=n}function YO(s){return s.reverse()}function h1(s){return Object.prototype.toString.call(s)==="[object Array]"}function d1(s,t){return h1(s[0])&&!h1(s[0][0])&&(s=[s]),s[t]=[],s}function ZO(s){var t,e,n,i=[];for(e=0,n=s.length;e<n;e++)t=s[e],(t.left&&t.inResult||!t.left&&t.otherEvent.inResult)&&i.push(t);for(var r=!1;!r;)for(r=!0,e=0,n=i.length;e<n;e++)e+1<n&&Ul(i[e],i[e+1])===1&&(KO(i,e,e+1),r=!1);for(e=0,n=i.length;e<n;e++)i[e].pos=e;for(e=0,n=i.length;e<n;e++)if(!i[e].left){var o=i[e].pos;i[e].pos=i[e].otherEvent.pos,i[e].otherEvent.pos=o}return i}function JO(s){var t,e,n=ZO(s),i=Array(n.length),r=[],o=[],a=[],l={};for(t=0,e=n.length;t<e;t++)if(!i[t]){var c=[];r.push(c);var u=r.length-1;if(o.push(0),a.push(-1),n[t].prevInResult){var h=n[t].prevInResult.contourId;n[t].prevInResult.resultInOut?l[h]&&(d1(r[a[h]],u),a[u]=a[h],o[u]=o[h],l[u]=!0):(d1(r[h],u),a[u]=h,o[u]=o[h]+1,l[u]=!0)}var d=t,f=n[t].point;for(c.push(f);d>=t;)i[d]=!0,n[d].left?(n[d].resultInOut=!1,n[d].contourId=u):(n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u),d=n[d].pos,i[d]=!0,c.push(n[d].point),d=QO(d,n,i);d=d===-1?t:d,i[d]=i[n[d].pos]=!0,n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u,o[u]&1&&YO(c)}return r}function QO(s,t,e){for(var n=s+1,i=t.length;n<i&&Xi(t[n].point,t[s].point);)if(e[n])n=n+1;else return n;for(n=s-1;e[n];)n=n-1;return n}function tz(s,t,e){var n=null;return s.length*t.length===0&&(e===pa?n=ef:e===ma?n=s:(e===Bl||e===_u)&&(n=s.length===0?t:s)),n}function ez(s,t,e,n,i){var r=null;return(e[0]>n[2]||n[0]>e[2]||e[1]>n[3]||n[1]>e[3])&&(i===pa?r=ef:i===ma?r=s:(i===Bl||i===_u)&&(r=s.concat(t))),r}function Su(s,t,e){var n=tz(s,t,e);if(n)return n===ef?null:n;var i=[1/0,1/0,-1/0,-1/0],r=[1/0,1/0,-1/0,-1/0],o=mC(s,t,i,r);if(n=ez(s,t,i,r,e),n)return n===ef?null:n;var a=gC(o,s,t,i,r,e);return JO(a)}di.exports=Su;di.exports.union=function(s,t){return Su(s,t,Bl)};di.exports.diff=function(s,t){return Su(s,t,ma)};di.exports.xor=function(s,t){return Su(s,t,_u)};di.exports.intersection=function(s,t){return Su(s,t,pa)};di.exports.operations={INTERSECTION:pa,DIFFERENCE:ma,UNION:Bl,XOR:_u};di.exports.fillQueue=mC;di.exports.computeFields=ml;di.exports.subdivideSegments=gC;di.exports.divideSegment=wr;di.exports.possibleIntersection=Xd;(function(s){s.exports=di.exports})(lC);var Cu={},nz=Cu.isArray=Array.isArray||function(s){return Object.prototype.toString.call(s)==="[object Array]"},wg=Cu.isNonEmptyArray=function(s){return nz(s)&&s.length};Cu.equals=function(t,e){return t[0]===e[0]&&t[1]===e[1]};Cu.orientRings=function s(t,e,n){e=e||0;var i,r;if(wg(t)&&typeof t[0][0]=="number"){var o=0,a=t;for(i=0,r=a.length;i<r;i++){var l=a[i],c=a[(i+1)%r];o+=l[0]*c[1],o-=c[0]*l[1]}(!n&&o>0||n&&o<0)&&a.reverse()}else for(i=0,r=t.length;i<r;i++)s(t[i],e+1,i>0);if(e===0&&wg(t)&&wg(t[0])&&typeof t[0][0][0]=="number"){var u=t[0].slice(0,1)[0];t[0].pop(),t[0].push([u[0],u[1]])}return t};var sz=AO,au=lC.exports,o0=Cu,lu=o0.isArray,xC=o0.equals,lc=o0.orientRings;function Hn(s,t){this.vertices=null,this.edges=null,this._closed=!1,this._distance=0,s&&this.data(s),this._arcSegments=t!==void 0?t:5}Hn.prototype.data=function(s){if(this._edges=[],!lu(s))throw new Error("Offset requires at least one coodinate to work with");return lu(s)&&typeof s[0]=="number"?this.vertices=s:(this.vertices=lc(s),this._processContour(this.vertices,this._edges)),this};Hn.prototype._processContour=function(s,t){var e,n;if(lu(s[0])&&typeof s[0][0]=="number")for(n=s.length,xC(s[0],s[n-1])&&(n-=1),e=0;e<n;e++)t.push(new sz(s[e],s[(e+1)%n]));else for(e=0,n=s.length;e<n;e++)t.push([]),this._processContour(s[e],t[t.length-1])};Hn.prototype.arcSegments=function(s){return this._arcSegments=s,this};Hn.prototype.validate=function(s){var t=s.length;return typeof s[0]=="number"?[s]:(s[0][0]===s[t-1][0]&&s[0][1]===s[t-1][1]&&t>1&&(s=s.slice(0,t-1),this._closed=!0),s)};Hn.prototype.createArc=function(s,t,e,n,i,r,o){var a=Math.PI*2,l=Math.atan2(n[1]-t[1],n[0]-t[0]),c=Math.atan2(i[1]-t[1],i[0]-t[0]);r%2===0&&(r-=1),l<0&&(l+=a),c<0&&(c+=a);var u=l>c?l-c:l+a-c,h=(o?-u:a-u)/r;s.push(n);for(var d=1;d<r;++d)u=l+h*d,s.push([t[0]+Math.cos(u)*e,t[1]+Math.sin(u)*e]);return s.push(i),s};Hn.prototype.distance=function(s,t){return this._distance=s||0,this};Hn.degreesToUnits=function(s,t){switch(t){case"miles":s=s/69.047;break;case"feet":s=s/364568;break;case"kilometers":s=s/111.12;break;case"meters":case"metres":s=s/111120;break}return s};Hn.prototype.ensureLastPoint=function(s){return xC(s[0],s[s.length-1])||s.push([s[0][0],s[0][1]]),s};Hn.prototype.offset=function(s){return this.distance(s),this._distance===0?this.vertices:this._distance>0?this.margin(this._distance):this.padding(-this._distance)};Hn.prototype._offsetSegment=function(s,t,e,n){for(var i=[],r=[e.offset(e._inNormal[0]*n,e._inNormal[1]*n),e.inverseOffset(e._outNormal[0]*n,e._outNormal[1]*n)],o=0,a=2;o<a;o++){var l=r[o],c=r[(o+a-1)%a];this.createArc(i,o===0?s:t,n,c.next,l.current,this._arcSegments,!0)}return i};Hn.prototype.margin=function(s){if(this.distance(s),typeof this.vertices[0]=="number")return this.offsetPoint(this._distance);if(s===0)return this.vertices;var t=this.offsetLines(this._distance);return t=au.union(this.vertices,t),lc(t)};Hn.prototype.padding=function(s){if(this.distance(s),this._distance===0)return this.ensureLastPoint(this.vertices);if(this.vertices.length===2&&typeof this.vertices[0]=="number")return this.vertices;var t=this.offsetLines(this._distance),e=au.diff(this.vertices,t);return lc(e)};Hn.prototype.offsetLine=function(s){return s===0?this.vertices:lc(this.offsetLines(s))};Hn.prototype.offsetLines=function(s){if(s<0)throw new Error("Cannot apply negative margin to the line");var t;if(this.distance(s),lu(this.vertices[0])&&typeof this.vertices[0][0]!="number")for(var e=0,n=this._edges.length;e<n;e++)t=e===0?this.offsetContour(this.vertices[e],this._edges[e]):au.union(t,this.offsetContour(this.vertices[e],this._edges[e]));else t=this.vertices.length===1?this.offsetPoint():this.offsetContour(this.vertices,this._edges);return t};Hn.prototype.offsetContour=function(s,t){var e,n,i;if(lu(s[0])&&typeof s[0][0]=="number")for(n=0,i=s.length-1;n<i;n++){var r=this.ensureLastPoint(this._offsetSegment(s[n],s[n+1],t[n],this._distance));e=n===0?[this.ensureLastPoint(r)]:au.union(e,this.ensureLastPoint(r))}else for(n=0,i=t.length;n<i;n++)e=n===0?this.offsetContour(s[n],t[n]):au.union(e,this.offsetContour(s[n],t[n]));return e};Hn.prototype.offsetPoint=function(s){this.distance(s);var t=this._arcSegments*2,e=[],n=this.vertices,i=this._distance,r=0;t%2===0&&t++;for(var o=0;o<t;o++)r+=2*Math.PI/t,e.push([n[0]+i*Math.cos(r),n[1]+i*Math.sin(r)]);return lc([this.ensureLastPoint(e)])};Hn.orientRings=lc;var iz=Hn;const a0=4,f1=16,vC=.19,rz=new po(.04,.04,vC),oz=new yu({color:16777215}),az=new YS({color:5329233,wireframe:!1}),lz=new yu({color:16753920}),cz=new yu({color:65280});class p1 extends Wf{constructor(t,e=1,n=.15){super(),this.roadSpline=new VS(t,!1,"catmullrom",.5),this.roadWidth=e,this.roadLength=this.roadSpline.getLength();let i=new iz,r=new YS({color:16771584,wireframe:!1});const o=new Pt({mass:0,material:new mo({friction:.15,restitution:.25})}),a=this.roadSpline.getSpacedPoints(Math.floor(this.roadLength/n)).map(b=>[b.x,b.z]),l=i.data(a).arcSegments(20).offsetLine(e/2).map(b=>b.map(y=>new Y(y[0],0,y[1]))),c=new qS(l[0].map(b=>new Dt(b.x,b.z)));for(let b=0;b<l.length;b++){const y=l[b];b>0&&c.holes.push(new Kg(y.map(w=>new Dt(w.x,w.z))));for(let w=1;w<y.length;w++){let S=y[w].clone().sub(y[w-1]),C=y[w].clone().add(y[w-1]).divideScalar(2),_=new MO(C.x,C.y+.1,C.z,S.length(),.2,.01,r,0);_.rotateY(Math.atan2(-S.z,S.x)),_.meshes[0].layers.enable(a0),_.meshes[0].receiveShadow=!1,o.addShape(_.bodies[0].shapes[0],_.bodies[0].position,_.bodies[0].quaternion),this.meshes.push(_.meshes[0])}}let u=new t0(c),h=new sn(u,az);h.rotateX(Math.PI/2),h.scale.setZ(-1),h.translateZ(-.01),h.receiveShadow=!0,this.meshes.push(h);let d=this.roadSpline.getLength(),f=Math.floor(d/vC/2);for(let b=1;b<f;b+=2){let y=b/f,w=this.roadSpline.getPointAt(y),S=this.roadSpline.getTangentAt(y),C=new sn(rz,oz);C.receiveShadow=!0,C.castShadow=!1,C.position.x=w.x,C.position.y=w.y,C.position.z=w.z,C.rotateY(Math.atan2(S.x,S.z)),this.meshes.push(C)}const p=new Qd(this.roadWidth/2,16);p.rotateX(-Math.PI/2),p.translate(t[0].x,.025,t[0].z);const g=new sn(p,lz);this.meshes.push(g);const m=new Qd(this.roadWidth/2,16);m.rotateX(-Math.PI/2),this.finishX=t[t.length-1].x,this.finishZ=t[t.length-1].z,m.translate(this.finishX,.025,this.finishZ);const x=new sn(m,cz);this.meshes.push(x),o.collisionFilterGroup=f1,o.collisionFilterMask=~f1,this.bodies.push(o),this.barrrierBody=o,this.startX=t[0].x,this.startZ=t[0].z;const v=this.roadSpline.getTangentAt(0);this.startRotation=-Math.atan2(-v.z,v.x)+Math.PI/2,this.endX=t[t.length-1].x,this.endZ=t[t.length-1].z}isFinished(t,e){return(this.finishX-t)**2+(this.finishZ-e)**2<this.roadWidth**2}syncMeshesToBodies(){}}const uz=new yu({color:16777215});class hz extends Wf{constructor(t=0,e=100,n=100){super(),this.ylevel=t;const i=new Of(e,n),r=new sn(i,uz);r.rotation.x=-Math.PI/2,r.position.y=t,r.layers.enable(a0),this.mesh=r,this.meshes.push(r);const o=new nP,a=new Pt({mass:0,material:new mo({friction:.12,restitution:.5})});a.addShape(o),a.quaternion.setFromAxisAngle(new k(1,0,0),-Math.PI/2),a.position.y=t,this.body=a,this.bodies.push(a)}syncMeshesToBodies(){}}class dz{constructor(t){le(this,"canvas");le(this,"scene");le(this,"renderer");le(this,"gameObjects");le(this,"world");le(this,"controls");le(this,"camera");le(this,"cameraPosition");le(this,"cameraQuaternion");le(this,"resizeFunction");le(this,"callback");le(this,"ground");le(this,"raceTrack");this.canvas=t,this.createCamera(),this.scene=new c3,this.addLighting(),this.createRenderer(),this.enableAutoResizer(),this.setupControls(),this.createPhyiscsWorld(),this.callback=()=>{};let e=new X3;const n=()=>{const i=Math.min(e.getDelta(),.1);i>0&&this.update(i)};this.renderer.setAnimationLoop(n),this.gameObjects=[],this.ground=new hz,this.addGameObject(this.ground)}update(t){this.world.step(t),this.gameObjects.forEach(n=>n.syncMeshesToBodies()),this.controls.update(),this.cameraPosition.lerp(this.camera.position,1-.9**(t/.016)),this.cameraQuaternion.slerp(this.camera.quaternion,1-.9**(t/.016));const e=this.camera.clone();e.position.copy(this.cameraPosition),e.quaternion.copy(this.cameraQuaternion),this.callback(t),this.renderer.render(this.scene,e)}requestCallbackBeforeRender(t){this.callback=t}addGameObject(t){this.gameObjects.push(t),t.meshes.forEach(e=>this.scene.add(e)),t.bodies.forEach(e=>this.world.addBody(e)),t.constraints.forEach(e=>this.world.addConstraint(e))}removeGameObject(t){this.gameObjects=this.gameObjects.filter(e=>e!==t),t.meshes.forEach(e=>this.scene.remove(e)),t.bodies.forEach(e=>this.world.removeBody(e)),t.constraints.forEach(e=>this.world.removeConstraint(e))}addLighting(){this.scene.add(new q3(4210752));const t=new H3(16777215,.6);t.position.set(-1.1,1,.9),t.castShadow=!0,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,this.scene.add(t)}createRenderer(){this.renderer=new BS({antialias:!0,canvas:this.canvas}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=yS}createCamera(){this.camera=new Qs(70,window.innerWidth/window.innerHeight,.01,100),this.camera.position.z=6,this.camera.position.y=3,this.camera.position.x=6,this.cameraPosition=this.camera.position.clone(),this.cameraQuaternion=this.camera.quaternion.clone()}createPhyiscsWorld(){this.world=new yO,this.world.gravity.set(0,-9.82,0),this.world.allowSleep=!0}setGravity(t,e,n){this.world.gravity.set(t,e,n)}enableAutoResizer(){if(this.resizeFunction)return;const t=()=>{this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight,!1),this.camera.aspect=this.canvas.offsetWidth/this.canvas.offsetHeight,this.camera.updateProjectionMatrix()};this.resizeFunction=t,window.addEventListener("resize",t),t()}disableAutoResizer(){this.resizeFunction&&window.removeEventListener("resize",this.resizeFunction),this.resizeFunction=void 0}setupControls(){this.controls=new EO(this.camera,this.renderer.domElement),this.controls.enableDamping=!1}}const cl=[];function fz(s,t=Sn){let e;const n=new Set;function i(a){if(lr(s,a)&&(s=a,e)){const l=!cl.length;for(const c of n)c[1](),cl.push(c,s);if(l){for(let c=0;c<cl.length;c+=2)cl[c][0](cl[c+1]);cl.length=0}}}function r(a){i(a(s))}function o(a,l=Sn){const c=[a,l];return n.add(c),n.size===1&&(e=t(i)||Sn),a(s),()=>{n.delete(c),n.size===0&&(e(),e=null)}}return{set:i,update:r,subscribe:o}}const bC=fz(null);function pz(s){let t;return{c(){t=Yt("canvas"),_t(t,"class","svelte-1v9nuep")},m(e,n){Bt(e,t,n),s[1](t)},p:Sn,i:Sn,o:Sn,d(e){e&&Ot(t),s[1](null)}}}function mz(s,t,e){let n,i;uA(()=>{i=new dz(n),bC.set(i)});function r(o){Og[o?"unshift":"push"](()=>{n=o,e(0,n)})}return[n,r]}class gz extends ho{constructor(t){super(),uo(this,t,mz,pz,lr,{})}}function xz(s){let t,e,n,i=s[0].brushSize+"",r,o,a,l,c;return{c(){t=Yt("label"),e=Un("Road width: "),n=Yt("b"),r=Un(i),o=pe(),a=Yt("input"),_t(t,"for","steps-range"),_t(t,"class","block mb-2 text-sm font-medium text-gray-300"),_t(a,"id","steps-range"),_t(a,"type","range"),_t(a,"min","0.8"),_t(a,"max","2"),_t(a,"step","0.1"),_t(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(u,h){Bt(u,t,h),re(t,e),re(t,n),re(n,r),Bt(u,o,h),Bt(u,a,h),bl(a,s[0].brushSize),l||(c=[rs(a,"change",s[1]),rs(a,"input",s[1])],l=!0)},p(u,[h]){h&1&&i!==(i=u[0].brushSize+"")&&kr(r,i),h&1&&bl(a,u[0].brushSize)},i:Sn,o:Sn,d(u){u&&Ot(t),u&&Ot(o),u&&Ot(a),l=!1,$r(c)}}}function vz(s,t,e){let{mode:n}=t;function i(){n.brushSize=Pg(this.value),e(0,n)}return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class bz extends ho{constructor(t){super(),uo(this,t,vz,xz,lr,{mode:0})}}function m1(s){let t,e,n,i=s[0].ground.body.material.friction+"",r,o,a,l,c,u,h,d=s[0].raceTrack.barrrierBody.material.friction+"",f,p,g,m,x;return{c(){t=Yt("label"),e=Un("Ground friction: "),n=Yt("b"),r=Un(i),o=pe(),a=Yt("input"),l=pe(),c=Yt("label"),u=Un("Barrier friction: "),h=Yt("b"),f=Un(d),p=pe(),g=Yt("input"),_t(t,"for","steps-range"),_t(t,"class","block mb-2 text-sm font-medium text-gray-300"),_t(a,"id","steps-range"),_t(a,"type","range"),_t(a,"min","0.05"),_t(a,"max","1"),_t(a,"step","0.02"),_t(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),_t(c,"for","steps-range"),_t(c,"class","block my-2 text-sm font-medium text-gray-300"),_t(g,"id","steps-range"),_t(g,"type","range"),_t(g,"min","0.0"),_t(g,"max","1"),_t(g,"step","0.02"),_t(g,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(v,b){Bt(v,t,b),re(t,e),re(t,n),re(n,r),Bt(v,o,b),Bt(v,a,b),bl(a,s[0].ground.body.material.friction),Bt(v,l,b),Bt(v,c,b),re(c,u),re(c,h),re(h,f),Bt(v,p,b),Bt(v,g,b),bl(g,s[0].raceTrack.barrrierBody.material.friction),m||(x=[rs(a,"change",s[1]),rs(a,"input",s[1]),rs(g,"change",s[2]),rs(g,"input",s[2])],m=!0)},p(v,b){b&1&&i!==(i=v[0].ground.body.material.friction+"")&&kr(r,i),b&1&&bl(a,v[0].ground.body.material.friction),b&1&&d!==(d=v[0].raceTrack.barrrierBody.material.friction+"")&&kr(f,d),b&1&&bl(g,v[0].raceTrack.barrrierBody.material.friction)},d(v){v&&Ot(t),v&&Ot(o),v&&Ot(a),v&&Ot(l),v&&Ot(c),v&&Ot(p),v&&Ot(g),m=!1,$r(x)}}}function yz(s){let t,e=s[0]!==null&&m1(s);return{c(){e&&e.c(),t=mS()},m(n,i){e&&e.m(n,i),Bt(n,t,i)},p(n,[i]){n[0]!==null?e?e.p(n,i):(e=m1(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:Sn,o:Sn,d(n){e&&e.d(n),n&&Ot(t)}}}function wz(s,t,e){let{gameWorld:n}=t;function i(){n.ground.body.material.friction=Pg(this.value),e(0,n)}function r(){n.raceTrack.barrrierBody.material.friction=Pg(this.value),e(0,n)}return s.$$set=o=>{"gameWorld"in o&&e(0,n=o.gameWorld)},[n,i,r]}class yC extends ho{constructor(t){super(),uo(this,t,wz,yz,lr,{gameWorld:0})}}function g1(s,t,e){const n=s.slice();return n[4]=t[e],n[6]=e,n}function x1(s){let t,e,n=s[4].distance.toFixed(2)+"",i;return{c(){t=Yt("div"),e=Yt("div"),i=Un(n),_t(e,"id","arrow-length-indicator-"+s[6]),_t(e,"class","bg-blue-600 mb-px bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"),$l(e,"width",s[4].distance*100+"%"),_t(t,"class","w-full bg-gray-200 rounded-full dark:bg-gray-700")},m(r,o){Bt(r,t,o),re(t,e),re(e,i)},p(r,o){o&1&&n!==(n=r[4].distance.toFixed(2)+"")&&kr(i,n),o&1&&$l(e,"width",r[4].distance*100+"%")},d(r){r&&Ot(t)}}}function _z(s){let t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m,x,v,b,y,w,S,C,_,I,T,N,O,M,E,A,R,V,P=s[0].sensorData,$=[];for(let D=0;D<P.length;D+=1)$[D]=x1(g1(s,P,D));return T=new yC({props:{gameWorld:s[0].gameWorld}}),{c(){t=Yt("label"),e=Yt("input"),n=pe(),i=Yt("div"),r=pe(),o=Yt("span"),o.textContent="Chase camera",a=pe(),l=Yt("br"),c=pe(),u=Yt("label"),h=Yt("input"),d=pe(),f=Yt("div"),p=pe(),g=Yt("span"),g.textContent="Visualize sensors",m=pe(),x=Yt("hr"),v=pe(),b=Yt("div"),b.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Sensors</span>',y=pe();for(let D=0;D<$.length;D+=1)$[D].c();w=pe(),S=Yt("div"),S.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Velocity: <span id="velocity-element"></span></span>',C=pe(),_=Yt("hr"),I=pe(),Dl(T.$$.fragment),N=pe(),O=Yt("hr"),M=pe(),E=Yt("button"),E.textContent="Reset car",_t(e,"type","checkbox"),e.__value="",e.value=e.__value,_t(e,"id","chase-mode-toggle"),_t(e,"class","sr-only peer"),_t(i,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),_t(o,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),_t(t,"for","chase-mode-toggle"),_t(t,"class","inline-flex relative items-center cursor-pointer mb-4"),_t(h,"type","checkbox"),h.__value="",h.value=h.__value,_t(h,"id","show-sensors-toggle"),_t(h,"class","sr-only peer"),_t(f,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),_t(g,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),_t(u,"for","show-sensors-toggle"),_t(u,"class","inline-flex relative items-center cursor-pointer"),_t(x,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),_t(b,"class","flex justify-between mb-1"),_t(S,"class","flex justify-between mt-4 mb-1"),_t(_,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),_t(O,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),_t(E,"type","button"),_t(E,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900")},m(D,W){Bt(D,t,W),re(t,e),e.checked=s[0].chaseMode,re(t,n),re(t,i),re(t,r),re(t,o),re(t,a),Bt(D,l,W),Bt(D,c,W),Bt(D,u,W),re(u,h),h.checked=s[0].showSensors,re(u,d),re(u,f),re(u,p),re(u,g),Bt(D,m,W),Bt(D,x,W),Bt(D,v,W),Bt(D,b,W),Bt(D,y,W);for(let G=0;G<$.length;G+=1)$[G].m(D,W);Bt(D,w,W),Bt(D,S,W),Bt(D,C,W),Bt(D,_,W),Bt(D,I,W),oa(T,D,W),Bt(D,N,W),Bt(D,O,W),Bt(D,M,W),Bt(D,E,W),A=!0,R||(V=[rs(e,"change",s[1]),rs(h,"change",s[2]),rs(E,"click",s[3])],R=!0)},p(D,[W]){if(W&1&&(e.checked=D[0].chaseMode),W&1&&(h.checked=D[0].showSensors),W&1){P=D[0].sensorData;let X;for(X=0;X<P.length;X+=1){const it=g1(D,P,X);$[X]?$[X].p(it,W):($[X]=x1(it),$[X].c(),$[X].m(w.parentNode,w))}for(;X<$.length;X+=1)$[X].d(1);$.length=P.length}const G={};W&1&&(G.gameWorld=D[0].gameWorld),T.$set(G)},i(D){A||(Ar(T.$$.fragment,D),A=!0)},o(D){eo(T.$$.fragment,D),A=!1},d(D){D&&Ot(t),D&&Ot(l),D&&Ot(c),D&&Ot(u),D&&Ot(m),D&&Ot(x),D&&Ot(v),D&&Ot(b),D&&Ot(y),Gx($,D),D&&Ot(w),D&&Ot(S),D&&Ot(C),D&&Ot(_),D&&Ot(I),aa(T,D),D&&Ot(N),D&&Ot(O),D&&Ot(M),D&&Ot(E),R=!1,$r(V)}}}function Sz(s,t,e){let{mode:n}=t;function i(){n.chaseMode=this.checked,e(0,n)}function r(){n.showSensors=this.checked,e(0,n)}const o=()=>{n.respawnCar()};return s.$$set=a=>{"mode"in a&&e(0,n=a.mode)},[n,i,r,o]}class Cz extends ho{constructor(t){super(),uo(this,t,Sz,_z,lr,{mode:0})}}function Iz(s){let t;return{c(){t=Un("Train panel")},m(e,n){Bt(e,t,n)},p:Sn,i:Sn,o:Sn,d(e){e&&Ot(t)}}}function Tz(s,t,e){let{mode:n}=t;return s.$$set=i=>{"mode"in i&&e(0,n=i.mode)},[n]}class Ez extends ho{constructor(t){super(),uo(this,t,Tz,Iz,lr,{mode:0})}}const v1=[0,-15,15,-30,30,-45,45,-60,60,-75,75,-90,90].map(s=>s*Math.PI/180).sort(function(s,t){return s-t}),qi=8;class wC extends Wf{constructor(t,e,n,i,r,o=1,a=.25,l=.1){super();const c=new mo({friction:a,restitution:l}),u=new po(.1,.1,.2),h=new sn(u,i);h.castShadow=!0,h.receiveShadow=!0,h.position.x=t,h.position.y=e,h.position.z=n,h.updateMatrix(),this.meshes.push(h),this.carBodyMesh=h;const d=new wu(new k(.05,.05,.1)),f=new Pt({mass:o/2,allowSleep:!1,collisionFilterGroup:qi,collisionFilterMask:~qi});f.addShape(d),f.position.x=h.position.x,f.position.y=h.position.y,f.position.z=h.position.z,this.bodies.push(f);const p=new Ko(.033,.033,.02,16);p.rotateZ(Math.PI/2);const g=new sn(p,r);g.castShadow=!0,g.receiveShadow=!0,g.position.x=-.1+h.position.x,g.position.y=-.05+h.position.y,g.position.z=-.1+h.position.z,this.meshes.push(g),this.wheelLFMesh=g;const m=new Id(.033),x=new Pt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:qi,collisionFilterMask:~qi});x.addShape(m),x.position.x=g.position.x,x.position.y=g.position.y,x.position.z=g.position.z,this.bodies.push(x);const v=new Ko(.033,.033,.02,16);v.rotateZ(Math.PI/2);const b=new sn(v,r);b.castShadow=!0,b.receiveShadow=!0,b.position.x=.1+h.position.x,b.position.y=-.05+h.position.y,b.position.z=-.1+h.position.z,this.meshes.push(b),this.wheelRFMesh=b;const y=new Id(.033),w=new Pt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:qi,collisionFilterMask:~qi});w.addShape(y),w.position.x=b.position.x,w.position.y=b.position.y,w.position.z=b.position.z,this.bodies.push(w);const S=new Ko(.04,.04,.033);S.rotateZ(Math.PI/2);const C=new sn(S,r);C.castShadow=!0,C.receiveShadow=!0,C.position.x=-.1+h.position.x,C.position.y=-.05+h.position.y,C.position.z=.1+h.position.z,this.meshes.push(C),this.wheelLBMesh=C;const _=new Id(.04),I=new Pt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:qi,collisionFilterMask:~qi});I.addShape(_),I.position.x=C.position.x,I.position.y=C.position.y,I.position.z=C.position.z,this.bodies.push(I);const T=new Ko(.04,.04,.033);T.rotateZ(Math.PI/2);const N=new sn(T,r);N.castShadow=!0,N.receiveShadow=!0,N.position.x=.1+h.position.x,N.position.y=-.05+h.position.y,N.position.z=.1+h.position.z,this.meshes.push(N),this.wheelRBMesh=N;const O=new Id(.04),M=new Pt({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:qi,collisionFilterMask:~qi});M.addShape(O),M.position.x=N.position.x,M.position.y=N.position.y,M.position.z=N.position.z,this.bodies.push(M);const E=new k(1,0,0),A=new k(1,0,0),R=new k(1,0,0),V=new k(1,0,0);this.constraintLF=new Cd(f,x,{pivotA:new k(-.1,-.05,-.1),axisA:E,maxForce:.99}),this.constraints.push(this.constraintLF),this.constraintRF=new Cd(f,w,{pivotA:new k(.1,-.05,-.1),axisA:A,maxForce:.99}),this.constraints.push(this.constraintRF),this.constraintLB=new Cd(f,I,{pivotA:new k(-.1,-.05,.1),axisA:R,maxForce:.99}),this.constraints.push(this.constraintLB),this.constraintRB=new Cd(f,M,{pivotA:new k(.1,-.05,.1),axisA:V,maxForce:.99}),this.constraints.push(this.constraintRB),this.accelMotorForce=.004,this.brakeMotorForce=1,this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.enableMotor(),this.constraintRB.enableMotor()}getSensorRays(){const t=this.getForwardDir(),e=this.getSideDir();let n=this.carBodyMesh.position.clone().add(t.clone().multiplyScalar(.1));return v1.map(i=>{let r=t.clone().multiplyScalar(Math.cos(i)).add(e.clone().multiplyScalar(Math.sin(i))),o=n.clone().add(e.clone().multiplyScalar(.05*Math.sin(i))),a=new JS(o,r,.01,1);return a.layers.set(a0),a})}getSensorData(t){return this.getSensorRays().map(n=>{let i=n.intersectObjects(t.scene.children),r=i.length>0?i[0].distance/n.far:1,o=n.ray.origin,a=n.ray.direction;return{distance:r,origin:o,direction:a}})}static get sensorNumber(){return v1.length}getForwardVelocity(){let t=this.getForwardDir();t.y=0,t.normalize();let e=this.bodies[0].velocity;return t.x*e.x+t.z*e.z}getPosition(){return this.carBodyMesh.position.clone()}getForwardDir(){let t=this.wheelLFMesh.position.clone().sub(this.wheelLBMesh.position).normalize(),e=this.wheelRFMesh.position.clone().sub(this.wheelRBMesh.position).normalize();return t.clone().add(e).divideScalar(2)}getSideDir(){let t=this.wheelLBMesh.position.clone().sub(this.wheelRBMesh.position).normalize(),e=this.wheelLFMesh.position.clone().sub(this.wheelRFMesh.position).normalize();return t.clone().add(e).divideScalar(2)}rotateY(t){const e=this.getPosition();this.bodies.forEach(n=>{const i=new Y(n.position.x,n.position.y,n.position.z).sub(e);i.applyAxisAngle(new Y(0,1,0),t),n.position.set(i.x+e.x,i.y+e.y,i.z+e.z),n.quaternion=n.quaternion.mult(new fn().setFromAxisAngle(new k(0,1,0),-t))})}applyInput(t,e,n,i,r){t&&!n&&(this.constraintLB.setMotorSpeed(100),this.constraintRB.setMotorSpeed(100)),n&&!t&&(this.constraintLB.setMotorSpeed(-20),this.constraintRB.setMotorSpeed(-20)),(!t&&!n||t&&n)&&(this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0)),e&&!i&&(this.constraintLF.axisA.z=-.25,this.constraintRF.axisA.z=-.25),i&&!e&&(this.constraintLF.axisA.z=.25,this.constraintRF.axisA.z=.25),(!e&&!i||e&&i)&&(this.constraintLF.axisA.z=0,this.constraintRF.axisA.z=0),r?(this.constraintLB.setMotorMaxForce(this.brakeMotorForce),this.constraintRB.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0),this.constraintLF.enableMotor(),this.constraintRF.enableMotor(),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLF.setMotorSpeed(0),this.constraintRF.setMotorSpeed(0)):(this.constraintLF.disableMotor(),this.constraintRF.disableMotor(),this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce))}}const Mz=new V3,kz=new yu({color:2236962});class _C{constructor(t){le(this,"gameWorld");le(this,"car");le(this,"keyupHandler");le(this,"keydownHandler");le(this,"arrowHelpers",[]);le(this,"sensorData",[]);le(this,"chaseMode",!0);le(this,"W",!1);le(this,"A",!1);le(this,"S",!1);le(this,"D",!1);le(this,"SPACE",!1);le(this,"_showSensors",!1);this.gameWorld=t,this.keydownHandler=e=>{switch(e.key){case"w":this.W=!0,e.preventDefault();break;case"a":this.A=!0,e.preventDefault();break;case"s":this.S=!0,e.preventDefault();break;case"d":this.D=!0,e.preventDefault();break;case" ":this.SPACE=!0,e.preventDefault();break}},this.keyupHandler=e=>{switch(e.key){case"w":this.W=!1,e.preventDefault();break;case"a":this.A=!1,e.preventDefault();break;case"s":this.S=!1,e.preventDefault();break;case"d":this.D=!1,e.preventDefault();break;case" ":this.SPACE=!1,e.preventDefault();break}}}update(t){var e;if((e=this.car)==null||e.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.car&&(this.sensorData=this.car.getSensorData(this.gameWorld),this.sensorData.forEach((n,i)=>{const r=this.arrowHelpers[i];r.setLength(n.distance,.05,.03),r.setDirection(n.direction),r.position.copy(n.origin),r.updateMatrix();const o=document.getElementById("arrow-length-indicator-"+i);o&&(o.style.width=n.distance*100+"%",o.innerText=n.distance.toFixed(2))})),this.car&&(document.getElementById("velocity-element").innerText=this.car.getForwardVelocity().toFixed(2)),this.chaseMode&&this.car){this.gameWorld.controls.target=this.car.getPosition(),this.gameWorld.controls.target.y+=.2;let n=this.car.getForwardDir();n.y=0,n.normalize(),n.multiplyScalar(-.5),n.y=.2,this.gameWorld.camera.position.copy(this.car.getPosition()),this.gameWorld.camera.position.add(n)}}get showSensors(){return this._showSensors}set showSensors(t){this._showSensors=t,this.arrowHelpers.forEach(e=>{e.visible=t})}removeCar(){this.car&&this.gameWorld.removeGameObject(this.car),delete this.car,this.arrowHelpers.forEach(t=>{this.gameWorld.scene.remove(t),t.dispose()}),this.arrowHelpers=[],this.sensorData=[]}respawnCar(){this.removeCar(),this.car=new wC(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,Mz,kz,5,.25,.1),this.car.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(this.car),this.arrowHelpers=this.car.getSensorRays().map(t=>{const e=t.ray.direction;e.normalize();const n=t.ray.origin,i=e.length(),r=16776960,o=new j3(e,n,i,r);return o.visible=this.showSensors,this.gameWorld.scene.add(o),o}),this.sensorData=this.car.getSensorData(this.gameWorld)}activate(){this.W=this.A=this.S=this.D=this.SPACE=!1,this.respawnCar(),document.addEventListener("keydown",this.keydownHandler),document.addEventListener("keyup",this.keyupHandler)}deactivate(){this.removeCar(),document.removeEventListener("keydown",this.keydownHandler),document.removeEventListener("keyup",this.keyupHandler)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=1e-7,Nz=1e-4;class SC{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class l0{refCount(t){return ys("refCount")}incRef(t){return ys("incRef")}timerAvailable(){return!0}time(t){return ys("time")}read(t){return ys("read")}readSync(t){return ys("readSync")}readToGPU(t,e){return ys("readToGPU")}numDataIds(){return ys("numDataIds")}disposeData(t,e){return ys("disposeData")}write(t,e,n){return ys("write")}move(t,e,n,i,r){return ys("move")}createTensorFromTexture(t,e,n){return ys("createTensorFromTexture")}memory(){return ys("memory")}floatPrecision(){return ys("floatPrecision")}epsilon(){return this.floatPrecision()===32?Az:Nz}dispose(){return ys("dispose")}}function ys(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(s){let t=s.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,gl(s,t,e)}function ga(s,t,e){return Math.max(s,Math.min(t,e))}function c0(s){return s%2===0?s:s+1}function gl(s,t,e){const n=s[t];s[t]=s[e],s[e]=n}function $z(s){let t=0;for(let e=0;e<s.length;e++)t+=s[e];return t}function F(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function fi(s,t,e=""){F(Ae(s,t),()=>e+` Shapes ${s} and ${t} must match`)}function CC(s){F(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Vl(s,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(s)||Fi(s)&&!e)for(let n=0;n<s.length;++n)Vl(s[n],t,e);else t.push(s);return t}function ut(s){if(s.length===0)return 1;let t=s[0];for(let e=1;e<s.length;e++)t*=s[e];return t}function Ae(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let e=0;e<s.length;e++)if(s[e]!==t[e])return!1;return!0}function Wl(s){return s%1===0}function nx(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function Ml(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function b1(s,t=i=>0,e,n){return new Promise((i,r)=>{let o=0;const a=()=>{if(s()){i();return}o++;const l=t(o);if(e!=null&&o>=e){r();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function IC(s,t){let e=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)e*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(e===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const i=s.slice();return i[n]=t/e,i}function xe(s,t){const e=t.length;return s=s==null?t.map((n,i)=>i):[].concat(s),F(s.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${s}`),F(s.every(n=>Wl(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?e+n:n)}function go(s,t){const e=[],n=[],i=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||i?null:xe(t,s).sort();let o=0;for(let a=0;a<s.length;++a){if(r!=null){if(r[o]===a&&s[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${s[a]}' is not 1`);(r[o]==null||r[o]>a)&&s[a]===1&&(e.push(s[a]),n.push(a)),r[o]<=a&&o++}s[a]!==1&&(e.push(s[a]),n.push(a))}return{newShape:e,keptDims:n}}function Gn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return e}function pn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else if(s==="string")e=new Array(t);else throw new Error(`Unknown data type ${s}`);return e}function Dz(s,t){for(let e=0;e<s.length;e++){const n=s[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function Fz(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function TC(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function Fi(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}function sx(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function Lz(s){if(s==null)return 0;let t=0;return s.forEach(e=>t+=e.length),t}function Iu(s){return typeof s=="string"||s instanceof String}function Pz(s){return typeof s=="boolean"}function ix(s){return typeof s=="number"}function Tu(s){return Array.isArray(s)?Tu(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":ix(s)?"float32":Iu(s)?"string":Pz(s)?"bool":"float32"}function rx(s){return!!(s&&s.constructor&&s.call&&s.apply)}function ox(s,t){for(let e=t;e<s;++e)if(s%e===0)return e;return s}function ee(s){const t=s.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=s[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*s[n+1];return e}function EC(s,t,e,n=!1){const i=new Array;if(t.length===1){const r=t[0]*(n?2:1);for(let o=0;o<r;o++)i[o]=e[s+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((l,c)=>l*c)*(n?2:1);for(let l=0;l<r;l++)i[l]=EC(s+l*a,o,e,n)}return i}function Ai(s,t,e=!1){if(s.length===0)return t[0];const n=s.reduce((i,r)=>i*r)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return EC(0,s,t,e)}function u0(s,t){const e=Jn(s,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function Jn(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function MC(s,t){const e=s.reduce((n,i)=>n*i,1);if(t==null||t==="float32")return Ai(s,new Float32Array(e));if(t==="int32")return Ai(s,new Int32Array(e));if(t==="bool")return Ai(s,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function kC(s){s.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function nr(s,t,e){if(t===0)return 0;if(t===1)return s[0];let n=s[s.length-1];for(let i=0;i<s.length-1;++i)n+=e[i]*s[i];return n}function cc(s,t,e){if(t===0)return[];if(t===1)return[s];const n=new Array(t);for(let i=0;i<n.length-1;++i)n[i]=Math.floor(s/e[i]),s-=n[i]*e[i];return n[n.length-1]=s,n}function h0(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y1="tfjsflags";class Oz{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=zz,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(ot().getBool("IS_TEST")||ot().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){const i=this.urlFlags[t];ot().getBool("IS_TEST")||ot().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${i}.`),this.set(t,i)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(h0(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);y1 in t&&t[y1].split(",").forEach(n=>{const[i,r]=n.split(":");this.urlFlags[i]=Uz(i,r)})}}function zz(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(Bz(t,n[0],n[1]),n.join("="))),t}function Bz(s,t,e){s[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Uz(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function ot(){return AC}let AC=null;function Vz(s){AC=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _g;function NC(){if(_g==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");_g=s}return _g}function Wz(){const s=NC();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function d0(s,t){const e=Wz();if(e.has(s))return e.get(s);{const n=t();return e.set(s,n),e.get(s)}}const qf="Abs",Eu="Acos",Mu="Acosh",uc="Add",f0="AddN",p0="All",m0="Any",Xf="ArgMax",jf="ArgMin",ku="Asin",Au="Asinh",Nu="Atan",Ru="Atanh",$u="Atan2",Kf="AvgPool",g0="AvgPoolGrad",Yf="AvgPool3D",x0="AvgPool3DGrad",Zf="BatchMatMul",Jf="BatchToSpaceND",v0="Bincount",Gz="BroadcastTo",RC="BroadcastArgs",Du="Cast",Fu="Ceil",Lu="ClipByValue",b0="Complex",Qf="ComplexAbs",tp="Concat",ep="Conv2D",y0="Conv2DBackpropFilter",np="Conv2DBackpropInput",sp="Conv3D",w0="Conv3DBackpropFilterV2",_0="Conv3DBackpropInputV2",Pu="Cos",Ou="Cosh",S0="Cumprod",ip="Cumsum",C0="CropAndResize",I0="DenseBincount",T0="DepthToSpace",rp="DepthwiseConv2dNative",E0="DepthwiseConv2dNativeBackpropFilter",M0="DepthwiseConv2dNativeBackpropInput",$C="Diag",op="Dilation2D",ax="Dilation2DBackpropInput",lx="Dilation2DBackpropFilter",zu="RealDiv",DC="Einsum",Bu="Elu",k0="EluGrad",Uu="Erf",ap="Equal",Vu="Exp",lp="ExpandDims",Wu="Expm1",A0="FFT",N0="Fill",R0="FlipLeftRight",Gu="Floor",Hu="FloorDiv",cp="FusedBatchNorm",up="GatherV2",FC="GatherNd",hp="Greater",qu="GreaterEqual",Xu="Identity",$0="IFFT",D0="Imag",ju="IsFinite",Ku="IsInf",Yu="IsNan",dp="LeakyRelu",fp="Less",pp="LessEqual",LC="LinSpace",Zu="Log",Ju="Log1p",mp="LogicalAnd",gp="LogicalNot",xp="LogicalOr",Hz="LogSoftmax",vp="LRN",F0="LRNGrad",bp="Max",Qu="Maximum",yp="MaxPool",L0="MaxPoolGrad",wp="MaxPool3D",P0="MaxPool3DGrad",PC="MaxPoolWithArgmax",_p="Mean",Sp="Min",th="Minimum",Cp="MirrorPad",eh="Mod",OC="Multinomial",nh="Multiply",Ip="Neg",Tp="NotEqual",O0="NonMaxSuppressionV3",z0="NonMaxSuppressionV4",B0="NonMaxSuppressionV5",Ep="OnesLike",Mp="OneHot",kp="Pack",Ap="PadV2",sh="Pow",Np="Prelu",Rp="Prod",zC="RaggedGather",BC="RaggedRange",UC="RaggedTensorToTensor",U0="Range",V0="Real",ih="Reciprocal",rh="Relu",$p="Reshape",Dp="ResizeNearestNeighbor",W0="ResizeNearestNeighborGrad",Fp="ResizeBilinear",G0="ResizeBilinearGrad",oh="Relu6",Lp="Reverse",ah="Round",lh="Rsqrt",VC="ScatterNd",WC="SearchSorted",Pp="Select",ch="Selu",Op="Slice",uh="Sin",hh="Sinh",dh="Sign",fh="Sigmoid",ph="Softplus",mh="Sqrt",zp="Sum",Bp="SpaceToBatchND",Up="SplitV",Vp="Softmax",H0="SparseFillEmptyRows",q0="SparseReshape",X0="SparseSegmentMean",j0="SparseSegmentSum",GC="SparseToDense",gh="SquaredDifference",K0="Square",Y0="StridedSlice",Z0="StringNGrams",J0="StringSplit",Q0="StringToHashBucketFast",xh="Sub",vh="Tan",bh="Tanh",yh="Tile",tv="TopK",ev="Transform",kl="Transpose",nv="Unique",Wp="Unpack",Gp="UnsortedSegmentSum",Hp="ZerosLike",wh="Step",qz="FromPixels",sv="RotateWithOffset",sf="_FusedMatMul",rf="FusedConv2D",HC="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(...s){ot().getBool("IS_TEST")||ot().getBool("PROD")||console.warn(...s)}function Xz(...s){ot().getBool("IS_TEST")||ot().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const of=d0("kernelRegistry",()=>new Map),cx=d0("gradRegistry",()=>new Map);function w1(s,t){const e=XC(s,t);return of.get(e)}function _1(s){return cx.get(s)}function S1(s){const t=of.entries(),e=[];for(;;){const{done:n,value:i}=t.next();if(n)break;const[r,o]=i,[a]=r.split("_");a===s&&e.push(o)}return e}function qC(s){const{kernelName:t,backendName:e}=s,n=XC(t,e);of.has(n)&&Ls(`The kernel '${t}' for backend '${e}' is already registered`),of.set(n,s)}function jz(s){const{kernelName:t}=s;cx.has(t)&&ot().getBool("DEBUG")&&Ls(`Overriding the gradient for '${t}'`),cx.set(t,s)}function XC(s,t){return`${t}_${s}`}var ux=Xe,si=null;try{si=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Xe(s,t,e){this.low=s|0,this.high=t|0,this.unsigned=!!e}Xe.prototype.__isLong__;Object.defineProperty(Xe.prototype,"__isLong__",{value:!0});function Ns(s){return(s&&s.__isLong__)===!0}Xe.isLong=Ns;var C1={},I1={};function Ra(s,t){var e,n,i;return t?(s>>>=0,(i=0<=s&&s<256)&&(n=I1[s],n)?n:(e=je(s,(s|0)<0?-1:0,!0),i&&(I1[s]=e),e)):(s|=0,(i=-128<=s&&s<128)&&(n=C1[s],n)?n:(e=je(s,s<0?-1:0,!1),i&&(C1[s]=e),e))}Xe.fromInt=Ra;function ii(s,t){if(isNaN(s))return t?Zo:ri;if(t){if(s<0)return Zo;if(s>=jC)return ZC}else{if(s<=-E1)return Cs;if(s+1>=E1)return YC}return s<0?ii(-s,t).neg():je(s%Gl|0,s/Gl|0,t)}Xe.fromNumber=ii;function je(s,t,e){return new Xe(s,t,e)}Xe.fromBits=je;var af=Math.pow;function iv(s,t,e){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return ri;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return iv(s.substring(1),t,e).neg();for(var i=ii(af(e,8)),r=ri,o=0;o<s.length;o+=8){var a=Math.min(8,s.length-o),l=parseInt(s.substring(o,o+a),e);if(a<8){var c=ii(af(e,a));r=r.mul(c).add(ii(l))}else r=r.mul(i),r=r.add(ii(l))}return r.unsigned=t,r}Xe.fromString=iv;function Bi(s,t){return typeof s=="number"?ii(s,t):typeof s=="string"?iv(s,t):je(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}Xe.fromValue=Bi;var T1=1<<16,Kz=1<<24,Gl=T1*T1,jC=Gl*Gl,E1=jC/2,M1=Ra(Kz),ri=Ra(0);Xe.ZERO=ri;var Zo=Ra(0,!0);Xe.UZERO=Zo;var _l=Ra(1);Xe.ONE=_l;var KC=Ra(1,!0);Xe.UONE=KC;var hx=Ra(-1);Xe.NEG_ONE=hx;var YC=je(-1,2147483647,!1);Xe.MAX_VALUE=YC;var ZC=je(-1,-1,!0);Xe.MAX_UNSIGNED_VALUE=ZC;var Cs=je(0,-2147483648,!1);Xe.MIN_VALUE=Cs;var Tt=Xe.prototype;Tt.toInt=function(){return this.unsigned?this.low>>>0:this.low};Tt.toNumber=function(){return this.unsigned?(this.high>>>0)*Gl+(this.low>>>0):this.high*Gl+(this.low>>>0)};Tt.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Cs)){var e=ii(t),n=this.div(e),i=n.mul(e).sub(this);return n.toString(t)+i.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var r=ii(af(t,6),this.unsigned),o=this,a="";;){var l=o.div(r),c=o.sub(l.mul(r)).toInt()>>>0,u=c.toString(t);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Tt.getHighBits=function(){return this.high};Tt.getHighBitsUnsigned=function(){return this.high>>>0};Tt.getLowBits=function(){return this.low};Tt.getLowBitsUnsigned=function(){return this.low>>>0};Tt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Cs)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};Tt.isZero=function(){return this.high===0&&this.low===0};Tt.eqz=Tt.isZero;Tt.isNegative=function(){return!this.unsigned&&this.high<0};Tt.isPositive=function(){return this.unsigned||this.high>=0};Tt.isOdd=function(){return(this.low&1)===1};Tt.isEven=function(){return(this.low&1)===0};Tt.equals=function(t){return Ns(t)||(t=Bi(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};Tt.eq=Tt.equals;Tt.notEquals=function(t){return!this.eq(t)};Tt.neq=Tt.notEquals;Tt.ne=Tt.notEquals;Tt.lessThan=function(t){return this.comp(t)<0};Tt.lt=Tt.lessThan;Tt.lessThanOrEqual=function(t){return this.comp(t)<=0};Tt.lte=Tt.lessThanOrEqual;Tt.le=Tt.lessThanOrEqual;Tt.greaterThan=function(t){return this.comp(t)>0};Tt.gt=Tt.greaterThan;Tt.greaterThanOrEqual=function(t){return this.comp(t)>=0};Tt.gte=Tt.greaterThanOrEqual;Tt.ge=Tt.greaterThanOrEqual;Tt.compare=function(t){if(Ns(t)||(t=Bi(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};Tt.comp=Tt.compare;Tt.negate=function(){return!this.unsigned&&this.eq(Cs)?Cs:this.not().add(_l)};Tt.neg=Tt.negate;Tt.add=function(t){Ns(t)||(t=Bi(t));var e=this.high>>>16,n=this.high&65535,i=this.low>>>16,r=this.low&65535,o=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,h=0,d=0,f=0;return f+=r+c,d+=f>>>16,f&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=n+a,u+=h>>>16,h&=65535,u+=e+o,u&=65535,je(d<<16|f,u<<16|h,this.unsigned)};Tt.subtract=function(t){return Ns(t)||(t=Bi(t)),this.add(t.neg())};Tt.sub=Tt.subtract;Tt.multiply=function(t){if(this.isZero())return ri;if(Ns(t)||(t=Bi(t)),si){var e=si.mul(this.low,this.high,t.low,t.high);return je(e,si.get_high(),this.unsigned)}if(t.isZero())return ri;if(this.eq(Cs))return t.isOdd()?Cs:ri;if(t.eq(Cs))return this.isOdd()?Cs:ri;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(M1)&&t.lt(M1))return ii(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,f=0,p=0;return p+=o*u,f+=p>>>16,p&=65535,f+=r*u,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=n*u+i*c+r*l+o*a,h&=65535,je(f<<16|p,h<<16|d,this.unsigned)};Tt.mul=Tt.multiply;Tt.divide=function(t){if(Ns(t)||(t=Bi(t)),t.isZero())throw Error("division by zero");if(si){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?si.div_u:si.div_s)(this.low,this.high,t.low,t.high);return je(e,si.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Zo:ri;var n,i,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Zo;if(t.gt(this.shru(1)))return KC;r=Zo}else{if(this.eq(Cs)){if(t.eq(_l)||t.eq(hx))return Cs;if(t.eq(Cs))return _l;var o=this.shr(1);return n=o.div(t).shl(1),n.eq(ri)?t.isNegative()?_l:hx:(i=this.sub(t.mul(n)),r=n.add(i.div(t)),r)}else if(t.eq(Cs))return this.unsigned?Zo:ri;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=ri}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:af(2,a-48),c=ii(n),u=c.mul(t);u.isNegative()||u.gt(i);)n-=l,c=ii(n,this.unsigned),u=c.mul(t);c.isZero()&&(c=_l),r=r.add(c),i=i.sub(u)}return r};Tt.div=Tt.divide;Tt.modulo=function(t){if(Ns(t)||(t=Bi(t)),si){var e=(this.unsigned?si.rem_u:si.rem_s)(this.low,this.high,t.low,t.high);return je(e,si.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};Tt.mod=Tt.modulo;Tt.rem=Tt.modulo;Tt.not=function(){return je(~this.low,~this.high,this.unsigned)};Tt.and=function(t){return Ns(t)||(t=Bi(t)),je(this.low&t.low,this.high&t.high,this.unsigned)};Tt.or=function(t){return Ns(t)||(t=Bi(t)),je(this.low|t.low,this.high|t.high,this.unsigned)};Tt.xor=function(t){return Ns(t)||(t=Bi(t)),je(this.low^t.low,this.high^t.high,this.unsigned)};Tt.shiftLeft=function(t){return Ns(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?je(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):je(0,this.low<<t-32,this.unsigned)};Tt.shl=Tt.shiftLeft;Tt.shiftRight=function(t){return Ns(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?je(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):je(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};Tt.shr=Tt.shiftRight;Tt.shiftRightUnsigned=function(t){if(Ns(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return je(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?je(e,0,this.unsigned):je(e>>>t-32,0,this.unsigned)};Tt.shru=Tt.shiftRightUnsigned;Tt.shr_u=Tt.shiftRightUnsigned;Tt.toSigned=function(){return this.unsigned?je(this.low,this.high,!1):this};Tt.toUnsigned=function(){return this.unsigned?this:je(this.low,this.high,!0)};Tt.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};Tt.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};Tt.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Xe.fromBytes=function(t,e,n){return n?Xe.fromBytesLE(t,e):Xe.fromBytesBE(t,e)};Xe.fromBytesLE=function(t,e){return new Xe(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Xe.fromBytesBE=function(t,e){return new Xe(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const Yz=oA({__proto__:null,default:ux},[ux]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo=ux||Yz;function qp(s){return Vo.fromString(s,!0,16)}const JC=qp("c3a5c85c97cb3127"),zo=qp("b492b66fbe98f273"),ss=qp("9ae16a3b2f90404f");function dx(s){return s.xor(s.shru(47))}function QC(s,t,e){const n=s.slice(t,t+e);return Vo.fromBytes(Array.from(n),!0,!0)}function Ve(s,t){return QC(s,t,8)}function k1(s,t){return QC(s,t,4)}function Nn(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function Zr(s,t,e=qp("9ddfea08eb382d69")){let n=s.xor(t).mul(e);n=n.xor(n.shru(47));let i=t.xor(n).mul(e);return i=i.xor(i.shru(47)),i=i.mul(e),i}function Zz(s,t,e,n,i,r){i=i.add(s),r=Nn(r.add(i).add(n),21);const o=i;return i=i.add(t),i=i.add(e),r=r.add(Nn(i,44)),[i.add(n),r.add(o)]}function kd(s,t,e,n){return Zz(Ve(s,t),Ve(s,t+8),Ve(s,t+16),Ve(s,t+24),e,n)}function Jz(s,t=s.length){if(t>=8){const e=ss.add(t*2),n=Ve(s,0).add(ss),i=Ve(s,t-8),r=Nn(i,37).mul(e).add(n),o=Nn(n,25).add(i).mul(e);return Zr(r,o,e)}if(t>=4){const e=ss.add(t*2),n=k1(s,0);return Zr(n.shl(3).add(t),k1(s,t-4),e)}if(t>0){const e=s[0],n=s[t>>1],i=s[t-1],r=e+(n<<8),o=t+(i<<2);return dx(ss.mul(r).xor(JC.mul(o))).mul(ss)}return ss}function Qz(s,t=s.length){const e=ss.add(t*2),n=Ve(s,0).mul(zo),i=Ve(s,8),r=Ve(s,t-8).mul(e),o=Ve(s,t-16).mul(ss);return Zr(Nn(n.add(i),43).add(Nn(r,30)).add(o),n.add(Nn(i.add(ss),18)).add(r),e)}function tB(s,t=s.length){const e=ss.add(t*2),n=Ve(s,0).mul(ss),i=Ve(s,8),r=Ve(s,t-8).mul(e),o=Ve(s,t-16).mul(ss),a=Nn(n.add(i),43).add(Nn(r,30)).add(o),l=Zr(a,n.add(Nn(i.add(ss),18)).add(r),e),c=Ve(s,16).mul(e),u=Ve(s,24),h=a.add(Ve(s,t-32)).mul(e),d=l.add(Ve(s,t-24)).mul(e);return Zr(Nn(c.add(u),43).add(Nn(h,30)).add(d),c.add(Nn(u.add(n),18)).add(h),e)}function eB(s,t=s.length){const e=Vo.fromNumber(81,!0);if(t<=32)return t<=16?Jz(s,t):Qz(s,t);if(t<=64)return tB(s,t);let n=e,i=e.mul(zo).add(113),r=dx(i.mul(ss).add(113)).mul(ss),o=[Vo.UZERO,Vo.UZERO],a=[Vo.UZERO,Vo.UZERO];n=n.mul(ss).add(Ve(s,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do n=Nn(n.add(i).add(o[0]).add(Ve(s,l+8)),37).mul(zo),i=Nn(i.add(o[1]).add(Ve(s,l+48)),42).mul(zo),n=n.xor(a[1]),i=i.add(o[0]).add(Ve(s,l+40)),r=Nn(r.add(a[0]),33).mul(zo),o=kd(s,l,o[1].mul(zo),n.add(a[0])),a=kd(s,l+32,r.add(a[1]),i.add(Ve(s,l+16))),[r,n]=[n,r],l+=64;while(l!==c);const h=zo.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),n=Nn(n.add(i).add(o[0]).add(Ve(s,l+8)),37).mul(h),i=Nn(i.add(o[1]).add(Ve(s,l+48)),42).mul(h),n=n.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(Ve(s,l+40))),r=Nn(r.add(a[0]),33).mul(h),o=kd(s,l,o[1].mul(h),n.add(a[0])),a=kd(s,l+32,r.add(a[1]),i.add(Ve(s,l+16))),[r,n]=[n,r],Zr(Zr(o[0],a[0],h).add(dx(i).mul(JC)).add(r),Zr(o[1],a[1],h).add(n),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(s,t){return t==="string"?Jr(s):$a([s],t)}function nB(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function $a(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=Vl(s)),ot().getBool("DEBUG")&&Dz(s,t),nB(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const e=new Uint8Array(s.length);for(let n=0;n<e.length;++n)Math.round(s[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Kn(){return ot().platform.now()}function Jr(s,t="utf-8"){return t=t||"utf-8",ot().platform.encode(s,t)}function no(s,t="utf-8"){return t=t||"utf-8",ot().platform.decode(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sB{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new rB)}profileKernel(t,e,n){let i;const r=()=>{i=n()};let o;const a=Kn();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const c of i)c.dataSync();o=Promise.resolve({kernelMs:Kn()-a})}if(ot().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<i.length;c++){const u=i[c];u.data().then(h=>{iB(h,u.dtype,t)})}return{kernelName:t,outputs:i,inputs:e,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:i,inputs:r,extraInfo:o}=t;n.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],r,l[2])})})}}function iB(s,t,e){if(t!=="float32")return!1;for(let n=0;n<s.length;n++){const i=s[n];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${e}'`),!0}return!1}class rB{logKernelProfile(t,e,n,i,r,o){const a=typeof i=="number"?Ml(`${i}ms`,9):i.error,l=Ml(t,25),c=e.rank,u=e.size,h=Ml(e.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const g=p.shape||e.shape,m=g.length;d+=`${f}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(s,t,e){const n={},i={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<s.length;l++){const c=s[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<t.length;p++)if(n[d.id]){c.outputs.forEach(g=>n[g.id]=!0),f=!0,i[c.id]=!0;break}if(f)break}}const r={};r[e.id]=!0;const o={};for(let l=s.length-1;l>=0;l--){const c=s[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<s.length;l++){const c=s[l];if(i[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];n[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function aB(s,t,e,n){for(let i=t.length-1;i>=0;i--){const r=t[i],o=[];if(r.outputs.forEach(l=>{const c=s[l.id];c!=null?o.push(c):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Ae(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(s[u.id]==null)s[u.id]=c;else{const h=s[u.id];s[u.id]=n(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1=20,Dc=3,Sg=7;function lB(s,t,e,n){const i=ee(t),r=cB(s,t,e,i),o=t.length,a=jd(s,t,e,i,r),l=["Tensor"];return n&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function cB(s,t,e,n){const i=ut(t),r=n[n.length-1],o=new Array(r).fill(0),a=t.length,l=e==="complex64"?Bc(s):s;if(a>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],zc(l[u+h],0,e).length)}return o}function zc(s,t,e){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(Sg))} + ${parseFloat(s[1].toFixed(Sg))}j`:Iu(s)?n=`'${s}'`:e==="bool"?n=tI(s):n=parseFloat(s.toFixed(Sg)).toString(),Ml(n,t)}function tI(s){return s===0?"false":"true"}function jd(s,t,e,n,i,r=!0){const o=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const g=Bc(s);return[zc(g[0],0,e)]}return e==="bool"?[tI(s[0])]:[s[0].toString()]}if(l===1){if(a>A1){const m=Dc*o;let x=Array.from(s.slice(0,m)),v=Array.from(s.slice((a-Dc)*o,a*o));return e==="complex64"&&(x=Bc(x),v=Bc(v)),["["+x.map((b,y)=>zc(b,i[y],e)).join(", ")+", ..., "+v.map((b,y)=>zc(b,i[a-Dc+y],e)).join(", ")+"]"]}return["["+(e==="complex64"?Bc(s):Array.from(s)).map((m,x)=>zc(m,i[x],e)).join(", ")+"]"]}const c=t.slice(1),u=n.slice(1),h=n[0]*o,d=[];if(a>A1){for(let g=0;g<Dc;g++){const m=g*h,x=m+h;d.push(...jd(s.slice(m,x),c,e,u,i,!1))}d.push("...");for(let g=a-Dc;g<a;g++){const m=g*h,x=m+h;d.push(...jd(s.slice(m,x),c,e,u,i,g===a-1))}}else for(let g=0;g<a;g++){const m=g*h,x=m+h;d.push(...jd(s.slice(m,x),c,e,u,i,g===a-1))}const f=l===2?",":"";d[0]="["+d[0]+f;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+f;let p=`,
`;for(let g=2;g<l;g++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function Bc(s){const t=[];for(let e=0;e<s.length;e+=2)t.push([s[e],s[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ut(t),n!=null){const i=n.length;F(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||pn(e,this.size),this.strides=ee(t)}set(t,...e){e.length===0&&(e=[0]),F(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const i of t){if(i<0||i>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let n=t[t.length-1];for(let i=0;i<t.length-1;++i)n+=this.strides[i]*t[i];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Si().makeTensor(this.values,this.shape,this.dtype)}}let Si=null,xl=null;function uB(s){Si=s}function hB(s){xl=s}class Ye{constructor(t,e,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ut(t),this.strides=ee(t),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return xl.buffer(this.shape,this.dtype,t)}bufferSync(){return xl.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Ai(this.shape,t,this.dtype==="complex64")}arraySync(){return Ai(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Si().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(n=>no(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Si().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Si().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>no(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Si().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Si().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return xl.print(this,t)}clone(){return this.throwIfDisposed(),xl.clone(this)}toString(t=!1){const e=this.dataSync();return lB(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),xl.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Si().makeVariable(this,t,e,n)}}Object.defineProperty(Ye,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function lt(){return d0("Tensor",()=>Ye)}lt();class lf extends Ye{constructor(t,e,n,i){super(t.shape,t.dtype,t.dataId,i),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Ae(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Si().disposeTensor(this),this.dataId=t.dataId,Si().incRef(this,null)}dispose(){Si().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(lf,Symbol.hasInstance,{value:s=>s instanceof Ye&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var N1;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(N1||(N1={}));var fx;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(fx||(fx={}));var px;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(px||(px={}));var mx;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(mx||(mx={}));var gx;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(gx||(gx={}));const dB={float32:mx,int32:fx,bool:px,complex64:gx};function Ts(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return dB[s][t]}function rv(s){return Ts(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(s,t){if(s.dtype===t.dtype)return[s,t];const e=Ts(s.dtype,t.dtype);return[s.cast(e),t.cast(e)]}function ov(s,t){return t.some(e=>e.id===s.id)}function so(s){const t=[];return eI(s,t,new Set),t}function eI(s,t,e){if(s==null)return;if(s instanceof Ye){t.push(s);return}if(!fB(s))return;const n=s;for(const i in n){const r=n[i];e.has(r)||(e.add(r),eI(r,t,e))}}function fB(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cg(s){return s.kernelName!=null}class R1{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Hl{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new R1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Ls(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new sB(this.backendInstance),!0}setupRegisteredKernels(){S1(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){S1(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(n&&!(n instanceof l0)&&typeof n.then=="function"){const i=++this.pendingBackendInitId,r=n.then(o=>i<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Ls(`Initialization of backend ${t} failed`),Ls(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Ls(`Initialization of backend ${t} failed`),Ls(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:i,asyncInit:r}=this.initializeBackend(n);if(r||i)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),i=n.backend,r=this.readSync(e),o=i.refCount(e);i.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=e(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(t,e,n){t();try{const i=n();return e(),i}catch(i){throw e(),i}}nextTensorId(){return Hl.nextTensorId++}nextVariableId(){return Hl.nextVariableId++}clone(t){const e=K.runKernel(Xu,{x:t}),n={x:t},i=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return K.runKernel(Du,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[e],i,r,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(w1(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const i=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-e-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=Cg(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Cg(t)){const{kernelName:p,inputs:g,attrs:m}=t;this.backendName==null&&this.backend;const x=w1(p,this.backendName);F(x!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const v=this.backend.numDataIds();l=x.kernelFunc({inputs:g,attrs:m,backend:this.backend});const b=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,v,b);const y=b.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(p,g,y);n=this.saveTensorsForBackwardMode(w)}return y}}else{const{forwardFunc:p}=t,g=m=>{!i||(n=m.map(x=>this.keep(this.clone(x))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,g));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,x),x}}const{inputs:u,attrs:h}=t,d=Cg(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),i&&this.addTapeNode(c,u,e,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:e.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){const i=_1(t);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(F(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=r.map(c=>e[c]);const l=n.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(t,e,n,i){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let r=t;n==="string"&&Iu(t[0])&&(r=t.map(l=>Jr(l)));const o=i.write(r,e,n),a=new Ye(e,n,o,this.nextTensorId());if(this.trackTensor(a,i),n==="string"){const l=this.state.tensorInfo.get(o),c=Lz(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,n,i){n=n||"float32";const r={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:i,dtype:r}=t,o=new Ye(i,r,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==t.dtype&&(t=t.cast(i));const r=new lf(t,e,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*sx(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof lf||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const n=t.size*sx(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},l=_1(t);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=n[h],f=Jn(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=so(t),n=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!n.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(t,e,n,i=!1){if(F(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));F(r instanceof Ye,()=>"The result y returned by f() must be a tensor.");const o=oB(this.state.activeTape,e,r);if(!i&&o.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=n==null?pB(r.shape):n,aB(a,o,c=>this.tidy(c),mB);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(t){return F(rx(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{F(e.every(a=>a instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const i={};e.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(n=t(...e,l),F(n.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(rx(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(a,l)=>{const c=n.gradFunc(a,l),u=Array.isArray(c)?c:[c];F(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(u.every(d=>d instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Kn(),n=await this.backend.time(t);return n.wallMs=Kn()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new R1;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Hl.nextTensorId=0;Hl.nextVariableId=0;function pB(s){const t=u0(ut(s),"float32");return K.makeTensor(t,s,"float32")}function nI(){const s=NC();if(s._tfengine==null){const t=new Oz(s);s._tfengine=new Hl(t)}return Vz(s._tfengine.ENV),uB(()=>s._tfengine),s._tfengine}const K=nI();function mB(s,t){const e={a:s,b:t};return K.runKernel(uc,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(){return typeof navigator<"u"&&navigator!=null}function sI(s){if(s||gB()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=s;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function iI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es=ot();Es.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Es.registerFlag("IS_BROWSER",()=>iI());Es.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Es.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Es.registerFlag("PROD",()=>!1);Es.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Es.getBool("DEBUG"));Es.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Es.registerFlag("IS_TEST",()=>!1);Es.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Es.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Es.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Es.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Es.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xp(s,t){let e=s;if(Fi(s))return t==="string"?[]:[s.length];if(typeof s=="object"&&"texture"in s){const i=s.channels||"RGBA";return[s.height,s.width*i.length]}if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(e)||Fi(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(s)&&ot().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&rI(s,n,[]),n}function rI(s,t,e){if(e=e||[],!Array.isArray(s)&&!Fi(s)){F(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${s.length} elements`),F(s.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const n=t.slice(1);for(let i=0;i<s.length;++i)rI(s[i],n,e.concat(i))}function $1(s,t,e,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${s} tensor, but got ${t} tensor`)}}function z(s,t,e,n="numeric"){if(s instanceof Ye)return $1(n,s.dtype,t,e),s;let i=Tu(s);if(i!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(i=n),$1(n,i,t,e),s==null||!Fi(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const r=Xp(s,i);!Fi(s)&&!Array.isArray(s)&&(s=[s]);const a=i!=="string"?$a(s,i):Vl(s,[],!0);return K.makeTensor(a,r,i)}function oI(s,t,e,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,o)=>z(r,`${t}[${o}]`,e,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB="__op";function Z(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const n=s[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+xB;const i=(...r)=>{K.startScope(e);try{const o=n(...r);return h0(o)&&console.error("Cannot return a Promise inside of tidy."),K.endScope(o),o}catch(o){throw K.endScope(null),o}};return Object.defineProperty(i,"name",{value:e,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(s,t){const e=z(s,"real","complex"),n=z(t,"imag","complex");fi(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);const i={real:e,imag:n};return K.runKernel(b0,i)}const ql=Z({complex_:vB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(s,t,e,n){if(n==null&&(n=Tu(s)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof s=="object"&&"texture"in s){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return s.channels=s.channels||"RGBA",K.backend.createTensorFromTexture(s,t||e,n)}if(!Fi(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){kC(t);const i=ut(t),r=ut(e);F(i===r,()=>`Based on the provided shape, [${t}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<e.length;++o){const a=e[o],l=o===e.length-1?a!==ut(t.slice(o)):!0;F(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Fi(s)&&!Array.isArray(s)&&(s=[s]),t=t||e,s=n!=="string"?$a(s,n):Vl(s,[],!0),K.makeTensor(s,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(s,t,e){const n=Xp(s,e);return jp(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D1=4;async function F1(s,t){const e=[],n=[],i=Array.isArray(s)?s.map(o=>o.name):Object.keys(s);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(s)?s[o].tensor:s[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,x)=>m+x.length,0)+D1*d.length,p=new Uint8Array(f);let g=0;for(let m=0;m<d.length;m++){const x=d[m],v=new Uint8Array(new Uint32Array([x.length]).buffer);p.set(v,g),g+=D1,p.set(x,g),g+=x.length}h(p)});n.push(u)}else n.push(l.data());t!=null&&(c.group=t),e.push(c)}const r=await Promise.all(n);return{data:bB(r),specs:e}}function bB(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const e=[];s.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(t);let i=0;return e.forEach(r=>{n.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),n.buffer}const lv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function L1(s){return lv?Buffer.byteLength(s):new Blob([s]).size}function yB(s){if(lv)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function wB(s){if(lv){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const t=atob(s),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function aI(s){if(s.length===1)return s[0];let t=0;s.forEach(i=>{t+=i.byteLength});const e=new Uint8Array(t);let n=0;return s.forEach(i=>{e.set(new Uint8Array(i),n),n+=i.byteLength}),e.buffer}function lI(s,t){const e={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(e.signature=s.signature),s.userDefinedMetadata!=null&&(e.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(e.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(e.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(e.trainingConfig=s.trainingConfig),e}function _B(s,t,e){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function SB(s,t){let e,n;return s.weightsManifest!=null&&([e,n]=await t(s.weightsManifest)),_B(s,e,n)}function Kp(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:L1(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:L1(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function CB(s){const t=[];for(const e of s)t.push(...e.weights);return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return kn.instance==null&&(kn.instance=new kn),kn.instance}static registerSaveRouter(t){kn.getInstance().saveRouters.push(t)}static registerLoadRouter(t){kn.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return kn.getHandlers(t,"save")}static getLoadHandlers(t,e){return kn.getHandlers(t,"load",e)}static getHandlers(t,e,n){const i=[];return(e==="load"?kn.getInstance().loadRouters:kn.getInstance().saveRouters).forEach(o=>{const a=o(t,n);a!==null&&i.push(a)}),i}}const IB=s=>kn.getSaveHandlers(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xx="tensorflowjs",vx=1,Jo="models_store",Xr="model_info_store";function cI(){if(!ot().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function bx(s){const t=s.result;t.createObjectStore(Jo,{keyPath:"modelPath"}),t.createObjectStore(Xr,{keyPath:"modelPath"})}class xa{constructor(t){if(this.indexedDB=cI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,i)=>{const r=this.indexedDB.open(xx,vx);r.onupgradeneeded=()=>bx(r),r.onsuccess=()=>{const o=r.result;if(e==null){const a=o.transaction(Jo,"readonly"),c=a.objectStore(Jo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=u=>(o.close(),i(c.error)),a.oncomplete=()=>o.close()}else{const a=Kp(e),l=o.transaction(Xr,"readwrite");let c=l.objectStore(Xr);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=o.transaction(Jo,"readwrite");const f=h.objectStore(Jo).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(Xr);const g=c.delete(this.modelPath);g.onsuccess=()=>(o.close(),i(f.error)),g.onerror=m=>(o.close(),i(f.error))}},u.onerror=d=>(o.close(),i(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}xa.URL_SCHEME="indexeddb://";const uI=s=>ot().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(xa.URL_SCHEME)?TB(s.slice(xa.URL_SCHEME.length)):null;kn.registerSaveRouter(uI);kn.registerLoadRouter(uI);function TB(s){return new xa(s)}function EB(s){return s.startsWith(xa.URL_SCHEME)?s.slice(xa.URL_SCHEME.length):s}class MB{constructor(){this.indexedDB=cI()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(xx,vx);n.onupgradeneeded=()=>bx(n),n.onsuccess=()=>{const i=n.result,r=i.transaction(Xr,"readonly"),a=r.objectStore(Xr).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(i.close(),e(a.error)),r.oncomplete=()=>i.close()},n.onerror=i=>e(n.error)})}async removeModel(t){return t=EB(t),new Promise((e,n)=>{const i=this.indexedDB.open(xx,vx);i.onupgradeneeded=()=>bx(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(Xr,"readwrite"),a=o.objectStore(Xr),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),h=()=>{c=r.transaction(Jo,"readwrite");const f=c.objectStore(Jo).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=p=>n(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),n(l.error))}},l.onerror=u=>(r.close(),n(l.error)),o.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>n(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir="/",vl="tensorflowjs_models",hI="info",kB="model_topology",AB="weight_specs",NB="weight_data",RB="model_metadata";function dI(s){return{info:[vl,s,hI].join(Ir),topology:[vl,s,kB].join(Ir),weightSpecs:[vl,s,AB].join(Ir),weightData:[vl,s,NB].join(Ir),modelMetadata:[vl,s,RB].join(Ir)}}function fI(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function $B(s){const t=s.split(Ir);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(Ir)}function DB(s){return s.startsWith(va.URL_SCHEME)?s.slice(va.URL_SCHEME.length):s}class va{constructor(t){if(!ot().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=dI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),i=Kp(t);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,yB(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw fI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=wB(o),e}}va.URL_SCHEME="localstorage://";const pI=s=>ot().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(va.URL_SCHEME)?FB(s.slice(va.URL_SCHEME.length)):null;kn.registerSaveRouter(pI);kn.registerLoadRouter(pI);function FB(s){return new va(s)}class LB{constructor(){F(ot().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=vl+Ir,n=Ir+hI;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(e)&&r.endsWith(n)){const o=$B(r);t[o]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=DB(t);const e=dI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return fI(e),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P1="://";class Ki{constructor(){this.managers={}}static getInstance(){return Ki.instance==null&&(Ki.instance=new Ki),Ki.instance}static registerManager(t,e){F(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(P1)&&(t=t.slice(0,t.indexOf(P1))),F(t.length>0,()=>"scheme must not be an empty string.");const n=Ki.getInstance();F(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=Ki.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Ki.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PB{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!ot().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const i=this.functionRefs[n.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(ot().get("IS_BROWSER")){ot().setPlatform("browser",new PB);try{Ki.registerManager(va.URL_SCHEME,new LB)}catch{}try{Ki.registerManager(xa.URL_SCHEME,new MB)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB={importFetch:()=>require("node-fetch")};let Ig;class zB{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return ot().global.fetch!=null?ot().global.fetch(t,e):(Ig==null&&(Ig=OB.importFetch()),Ig(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}ot().get("IS_NODE")&&!ot().get("IS_BROWSER")&&ot().setPlatform("node",new zB);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(s,t="float32",e){return t=t||"float32",kC(s),new Yn(s,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(s,t){const e=z(s,"x","cast");if(!Fz(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:e},i={dtype:t};return K.runKernel(Du,n,i)}const Nt=Z({cast_:BB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(s){const e={x:z(s,"x","clone","string_or_numeric")};return K.runKernel(Xu,e)}const na=Z({clone_:UB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */nI();const WB={buffer:ge,cast:Nt,clone:na,print:VB};hB(WB);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB="model",HB=".json",qB=".weights.bin";function O1(s){return new Promise(t=>setTimeout(t)).then(s)}class ba{constructor(t){if(!ot().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(ba.URL_SCHEME)&&(t=t.slice(ba.URL_SCHEME.length)),(t==null||t.length===0)&&(t=GB),this.modelJsonFileName=t+HB,this.weightDataFileName=t+qB}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=lI(t,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await O1(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await O1(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kp(t)}}}}ba.URL_SCHEME="downloads://";const XB=s=>ot().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(ba.URL_SCHEME)?jB(s.slice(ba.URL_SCHEME.length)):null;kn.registerSaveRouter(XB);function jB(s="model"){return new ba(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z1(s,t,e,n){o(s),e=e==null?0:e,n=n==null?1:n,a(e,n);let i=0;const r=l=>(l.then(c=>{const u=e+ ++i/s.length*(n-e);return t(u),c}),l);function o(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),F(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KB(s,t){t==null&&(t={});const e=t.fetchFunc==null?ot().platform.fetch:t.fetchFunc,n=s.map(h=>e(h,t.requestInit,{isBinary:!0})),i=0,r=.5,a=(t.onProgress==null?await Promise.all(n):await z1(n,t.onProgress,i,r)).map(h=>h.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(a):await z1(a,t.onProgress,l,c)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB="application/octet-stream",ZB="application/json";class cv{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(F(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=ot().platform.fetch,F(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&F(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],i=lI(t,n);e.body.append("model.json",new Blob([JSON.stringify(i)],{type:ZB}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:YB}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Kp(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const n=e.modelTopology,i=e.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return SB(e,r=>this.loadWeights(r))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=JB(e),r=this.weightPathPrefix||n,o=CB(t),a=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(r+h+i);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await KB(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,aI(c)]}}cv.URL_SCHEME_REGEX=/^https?:\/\//;function JB(s){const t=s.lastIndexOf("/"),e=s.lastIndexOf("?"),n=s.substring(0,t),i=e>t?s.substring(e):"";return[n+"/",i]}function B1(s){return s.match(cv.URL_SCHEME_REGEX)!=null}const mI=(s,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(s)?e=s.every(n=>B1(n)):e=B1(s),e)return QB(s,t)}return null};kn.registerSaveRouter(mI);kn.registerLoadRouter(mI);function QB(s,t){return new cv(s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(s,t,e=!1,n=!1){let i=z(s,"a","matMul"),r=z(t,"b","matMul");[i,r]=cn(i,r);const o={a:i,b:r},a={transposeA:e,transposeB:n};return K.runKernel(Zf,o,a)}const ke=Z({matMul_:t4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(s,t,e=1,n=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:z(s,"indices","oneHot","int32")},a={dtype:i,depth:t,onValue:e,offValue:n};return K.runKernel(Mp,o,a)}const gI=Z({oneHot_:e4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ji(){return K}function yx(){return K.memory()}function st(s,t){return K.tidy(s,t)}function me(s){so(s).forEach(e=>e.dispose())}function rr(s){return K.keep(s)}function n4(s){return K.setBackend(s)}function xI(s,t,e=1){return K.registerBackend(s,t,e)}function s4(){return K.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(s){const e={input:z(s,"input","imag")};return K.runKernel(D0,e)}const uv=Z({imag_:i4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(s){const e={x:z(s,"x","neg")};return K.runKernel(Ip,e)}const en=Z({neg_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(s){const e={input:z(s,"input","real")};return K.runKernel(V0,e)}const cf=Z({real_:o4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(s,t,e){const n=z(s,"x","transpose");if(t==null&&(t=n.shape.map((o,a)=>a).reverse()),F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(o=>{F(o>=0&&o<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const i={x:n},r={perm:t};return n.dtype==="complex64"?st(()=>{let o=cf(n),a=uv(n);return o=K.runKernel(kl,{x:o},r),a=K.runKernel(kl,{x:a},r),e&&(a=en(a)),ql(o,a)}):K.runKernel(kl,i,r)}const Se=Z({transpose_:a4});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xl(s,t){const e=s.length,n=[];for(let i=0;i<e;i++){const r=e-1-i,o=s[r]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(r)}return n}function Tn(s,t){const e=[];for(let n=0;n<t.length;n++){const i=s[s.length-n-1],r=t.length-n-1,o=t[r];(i==null||i===1&&o>1)&&e.unshift(r)}return e}function he(s,t){const e=[],n=Math.max(s.length,t.length);for(let i=0;i<n;i++){let r=s[s.length-i-1];r==null&&(r=1);let o=t[t.length-i-1];if(o==null&&(o=1),r===1)e.unshift(o);else if(o===1)e.unshift(r);else if(r!==o){const a=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(a)}else e.unshift(r)}return e}function hv(s,t){const e=s.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(ut(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const i=t.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=s.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<e;++h)c*=a[h],l.push(a[h]);const u=[...ee(s.shape).map(h=>h/c),1].slice(0,r);return[l,o,c,u]}function vI(s,t,e){const n=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${i}.`;if(e.rank<i)throw new Error(r+` update.rank < ${i}. `);if(s.length<n+(e.rank-i))throw new Error(r+` Output shape length < ${n+(e.rank-i)}`);if(e.rank!==i+s.length-n)throw new Error(r+` update.rank != ${i+s.length-n}`);for(let o=0;o<i;++o)if(e.shape[o]!==t.shape[o])throw new Error(r+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-i;++o)if(e.shape[o+i]!==s[o+n])throw new Error(r+` updates.shape[${o+i}] (${e.shape[o+i]}) != shape[${o+i}] (${s[o+i]})`)}function l4(s,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}vI(e,t,s)}function _h(s,t,e){const n=t.shape.length,i=n>1?t.shape[n-1]:1,r=e.length;let o=1;for(let h=i;h<r;++h)o*=e[h];const a=i<1?1:i,l=ut(t.shape)/a,c=[...ee(e.slice(0,i)),1],u=ut(e);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wx=-2,c4=-1;function dv(s,t,e){const n=s.shape.length;F(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),F(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let i=0;i<n;++i)F(t[i]+e[i]<=s.shape[i],()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${s.shape[i]})`)}function u4(s){const t=[];let e=0;for(;s>0;)s&1&&t.push(e),s/=2,e++;return t}function fv(s,t,e){const n=[];for(let i=0;i<s.length;i++)n[i]=Math.ceil((t[i]-s[i])/e[i]);return n}function bI(s,t,e,n){const i=[...s];for(let r=i.length;r<n.length;r++)i.push(1);for(let r=0;r<e;r++)r===0?i[t]=1:(i.splice(t,0,1),i.pop());return i}function yI(s,t,e){return e<=s?e:e-(t-1)}function wI(s,t){const e=[];for(let n=0;n<s;n++)e.push(t+n);return e}function h4(s,t,e,n,i,r,o,a,l){const c=s.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const f=t[0],p=e+1;u=_I(o,f,p,n,s),h=SI(a,f,p,i,s),d=bI(r,f,p,s)}else for(let f=0;f<c;f++)u[f]=II(o,n,r,s,f,l),h[f]=TI(a,i,r,s,f,l),d[f]=CI(r,f,l);return{begin:u,end:h,strides:d}}function _I(s,t,e,n,i){const r=[...i],o=wI(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=yI(t,e,a);let c=n[l];s&1<<l&&(c=0),r[a]=c}return r}function SI(s,t,e,n,i){const r=[...i],o=wI(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=yI(t,e,a);let c=n[l];s&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=ga(0,r[a],i[a])}return r}function CI(s,t,e){let n=s[t];return(e&1<<t||n==null)&&(n=1),n}function II(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),o=ga(0,o,l-1),o}function TI(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),a>0?o=ga(0,o,l):o=ga(-1,o,l-1),o}function pv(s,t,e){let n=e.length;for(let i=0;i<e.length;i++)if(e[i]>1){n=i;break}for(let i=n+1;i<e.length;i++)if(t[i]>0||e[i]!==s[i])return!1;return!0}function mv(s,t){let e=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)e+=s[n]*t[n];return e}function Yp(s,t,e){let n;const i=s.shape.length;typeof t=="number"?n=[t,...new Array(i-1).fill(0)]:t.length<i?n=t.concat(new Array(i-t.length).fill(0)):n=t.slice(),n.forEach(o=>{F(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(i).fill(-1):typeof e=="number"?r=[e,...new Array(i-1).fill(-1)]:e.length<i?r=e.concat(new Array(i-e.length).fill(-1)):r=e,r=r.map((o,a)=>o>=0?o:(F(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),s.shape[a]-n[a])),[n,r]}function gv(s,t,e,n,i,r,o,a,l){let c;if(n==null?(c=new Array(t.length),c.fill(1)):c=n,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)u&&(1<<b&a)!==0&&h.numAddAxisAfterEllipsis++,1<<b&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};d4(h,d);let f=!0,p=!0,g=!0;const m=[],x=[];for(let b=0;b<s.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<b),w=s[b];if(w===-1){m.push(y?1:-1);continue}const S=[d.beginMask&1<<b,d.endMask&1<<b],C=[d.strides[b]>0?0:-1,d.strides[b]>0?w:w-1];if(y&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[b]===1;const _=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(y){const O=d.begin[b]<0?w+d.begin[b]:d.begin[b];if(d.begin[b]=O,d.end[b]=d.begin[b]+1,O<0||O>=w)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=U1(d.begin[b],0,d.strides[b],w,S,C),d.end[b]=U1(d.end[b],1,d.strides[b],w,S,C);const N=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===w;f=f&&N,p=p&&(b===0&&d.strides[b]===1||N)}else f=f&&d.strides[b]===1&&_,p=p&&(b===0&&d.strides[b]===1||_);let I,T=!1;if(d.beginValid&&d.endValid?(I=d.end[b]-d.begin[b],T=!0):y?(I=1,T=!0):_&&w>=0&&(d.strides[b]<0?I=-w:I=w,T=!0),T){let N;I===0||I<0!=d.strides[b]<0?N=0:N=Math.trunc(I/d.strides[b])+(I%d.strides[b]!==0?1:0),m.push(N)}else m.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const y=d.finalShapeGatherIndices[b];y>=0?x.push(m[y]):y===wx&&x.push(1)}return{finalShapeSparse:x.filter((b,y)=>d.finalShapeGatherIndices[y]!==wx),finalShape:x,isIdentity:f,sliceDim0:p,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function d4(s,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=s.begin!=null,t.endValid=s.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const i=Math.min(t.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,t.dims);for(;e<i;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&s.newAxisMask)t.finalShapeGatherIndices.push(wx),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);s.begin!=null&&(t.begin[e]=s.begin[n]),s.end!=null&&(t.end[e]=s.end[n]),t.strides[e]=s.strides[n],s.beginMask&1<<n&&(t.beginMask|=1<<e),s.endMask&1<<n&&(t.endMask|=1<<e),s.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(c4),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function U1(s,t,e,n,i,r){if(i[t])return e>0?r[t]:r[t+1&1];{const o=s<0?n+s:s;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const f4=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:dv,maskToAxes:u4,computeOutShape:fv,stridesWithElidedDims:bI,getNormalizedAxes:h4,startIndicesWithElidedDims:_I,stopIndicesWithElidedDims:SI,stridesForAxis:CI,startForAxis:II,stopForAxis:TI,isSliceContinous:pv,computeFlatOffset:mv,parseSliceParams:Yp,sliceInfo:gv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hc{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ti{constructor(){this.classNameMap={}}static getMap(){return ti.instance==null&&(ti.instance=new ti),ti.instance}static register(t){ti.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function gt(s){F(s.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),F(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ti.register(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(s,t){let e=z(s,"a","add"),n=z(t,"b","add");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel(uc,i)}const yt=Z({add_:p4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(s,t){let e=z(s,"a","floorDiv"),n=z(t,"b","floorDiv");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel(Hu,i)}const EI=Z({floorDiv_:m4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(s,t){let e=z(s,"a","div"),n=z(t,"b","div");if([e,n]=cn(e,n),e.dtype==="int32"&&n.dtype==="int32")return EI(e,n);const i={a:e,b:n},r={};return K.runKernel(zu,i,r)}const te=Z({div_:g4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(s,t){let e=z(s,"a","mul"),n=z(t,"b","mul");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel(nh,i)}const q=Z({mul_:x4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(s){const t=z(s,"x","abs");if(t.dtype==="complex64"){const e={x:t};return K.runKernel(Qf,e)}else{const e={x:t};return K.runKernel(qf,e)}}const An=Z({abs_:v4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(s){const e={x:z(s,"x","acos")};return K.runKernel(Eu,e)}const y4=Z({acos_:b4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(s){const e={x:z(s,"x","acosh")};return K.runKernel(Mu,e)}const _4=Z({acosh_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(s,t=null,e=!1){const i={x:z(s,"x","all","bool")},r={axis:t,keepDims:e};return K.runKernel(p0,i,r)}const MI=Z({all_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(s,t=null,e=!1){const i={x:z(s,"x","any","bool")},r={axis:t,keepDims:e};return K.runKernel(m0,i,r)}const _x=Z({any_:C4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(s,t=0){const n={x:z(s,"x","argMax")},i={axis:t};return K.runKernel(Xf,n,i)}const cu=Z({argMax_:I4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(s,t=0){const n={x:z(s,"x","argMin")},i={axis:t};return K.runKernel(jf,n,i)}const E4=Z({argMin_:T4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(s){const e={x:z(s,"x","asin")};return K.runKernel(ku,e)}const k4=Z({asin_:M4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(s){const e={x:z(s,"x","asinh")};return K.runKernel(Au,e)}const N4=Z({asinh_:A4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(s){const e={x:z(s,"x","atan")};return K.runKernel(Nu,e)}const $4=Z({atan_:R4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(s,t){let e=z(s,"a","atan2"),n=z(t,"b","atan2");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel($u,i)}const F4=Z({atan2_:D4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(s){const e={x:z(s,"x","atanh")};return K.runKernel(Ru,e)}const P4=Z({atanh_:L4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(s,t,e,n,i="NHWC",r){const o=s[3],a=[...t,o],l=Fr(i);return qn(s,a,e,r,n,null,null,l)}function pi(s,t,e,n,i,r,o="channelsLast"){const[a,l]=uf(t);let c;if(o==="channelsLast")c=[a,l,s[3],s[3]];else if(o==="channelsFirst")c=[a,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return qn(s,c,e,n,i,r,!1,o)}function Dr(s,t,e,n,i,r,o="NDHWC"){const[a,l,c]=Sx(t);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,s[4],s[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return vo(s,u,e,n,i,!1,h,r)}function qn(s,t,e,n,i,r,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=s;else if(a==="channelsFirst")[l,h,c,u]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=t,[g,m]=uf(e),[x,v]=uf(n),b=Al(d,x),y=Al(f,v),{padInfo:w,outHeight:S,outWidth:C}=B4(i,c,u,g,m,b,y,r,a),_=o?p*h:p;let I;return a==="channelsFirst"?I=[l,_,S,C]:a==="channelsLast"&&(I=[l,S,C,_]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:S,outWidth:C,outChannels:_,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:b,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:v,inShape:s,outShape:I,filterShape:t}}function vo(s,t,e,n,i,r=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=s;else if(o==="channelsFirst")[l,d,c,u,h]=s;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,g,,m]=t,[x,v,b]=Sx(e),[y,w,S]=Sx(n),C=Al(f,y),_=Al(p,w),I=Al(g,S),{padInfo:T,outDepth:N,outHeight:O,outWidth:M}=U4(i,c,u,h,x,v,b,C,_,I,a),E=r?m*d:m;let A;return o==="channelsFirst"?A=[l,E,N,O,M]:o==="channelsLast"&&(A=[l,N,O,M,E]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:N,outHeight:O,outWidth:M,outChannels:E,padInfo:T,strideDepth:x,strideHeight:v,strideWidth:b,filterDepth:f,filterHeight:p,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:_,effectiveFilterWidth:I,dilationDepth:y,dilationHeight:w,dilationWidth:S,inShape:s,outShape:A,filterShape:t}}function O4(s,t,e,n,i){n==null&&(n=xv(s,t,e));const r=s[0],o=s[1],a=sa((r-t+2*n)/e+1,i),l=sa((o-t+2*n)/e+1,i);return[a,l]}function z4(s,t,e,n,i,r){i==null&&(i=xv(s,t,n));const o=s[0],a=s[1],l=s[2],c=sa((o-t+2*i)/n+1,r),u=sa((a-t+2*i)/n+1,r),h=sa((l-t+2*i)/n+1,r);return[c,u,h,e]}function xv(s,t,e,n=1){const i=Al(t,n);return Math.floor((s[0]*(e-1)-e+i)/2)}function uf(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function Sx(s){return typeof s=="number"?[s,s,s]:s}function Al(s,t){return t<=1?s:s+(s-1)*(t-1)}function B4(s,t,e,n,i,r,o,a,l){let c,u,h;if(typeof s=="number"){c={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=O4([t,e],r,n,s,a);u=f[0],h=f[1]}else if(s==="same"){u=Math.ceil(t/n),h=Math.ceil(e/i);const d=Math.max(0,(u-1)*n+r-t),f=Math.max(0,(h-1)*i+o-e),p=Math.floor(d/2),g=d-p,m=Math.floor(f/2),x=f-m;c={top:p,bottom:g,left:m,right:x,type:"SAME"}}else if(s==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/n),h=Math.ceil((e-o+1)/i);else if(typeof s=="object"){const d=l==="channelsLast"?s[1][0]:s[2][0],f=l==="channelsLast"?s[1][1]:s[2][1],p=l==="channelsLast"?s[2][0]:s[3][0],g=l==="channelsLast"?s[2][1]:s[3][1];c={top:d,bottom:f,left:p,right:g,type:d===0&&f===0&&p===0&&g===0?"VALID":"EXPLICIT"},u=sa((t-r+d+f)/n+1,a),h=sa((e-o+p+g)/i+1,a)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:c,outHeight:u,outWidth:h}}function U4(s,t,e,n,i,r,o,a,l,c,u){let h,d,f,p;if(typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const m=z4([t,e,n,1],a,1,i,s,u);d=m[0],f=m[1],p=m[2]}else if(s==="same"){d=Math.ceil(t/i),f=Math.ceil(e/r),p=Math.ceil(n/o);const g=(d-1)*i+a-t,m=(f-1)*r+l-e,x=(p-1)*o+c-n,v=Math.floor(g/2),b=g-v,y=Math.floor(m/2),w=m-y,S=Math.floor(x/2),C=x-S;h={top:y,bottom:w,left:S,right:C,front:v,back:b,type:"SAME"}}else if(s==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-a+1)/i),f=Math.ceil((e-l+1)/r),p=Math.ceil((n-c+1)/o);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function sa(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function ya(s){const[t,e,n]=uf(s);return t===1&&e===1&&n===1}function Qn(s,t){return ya(s)||ya(t)}function Fr(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function xs(s,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")F(Wl(t),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(i=>{F(Wl(i),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${i}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(s,t){const n={x:z(s,"x","reshape","string_or_numeric")},i={shape:t};return K.runKernel($p,n,i)}const Q=Z({reshape_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(s,t,e,n,i){const r=z(s,"x","avgPool","float32"),o=1;F(Qn(e,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),F(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),xs("avgPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i};let h=K.runKernel(Kf,c,u);return h=Nt(h,r.dtype),l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const vv=Z({avgPool_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(s,t,e,n,i,r="NDHWC"){const o=z(s,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xs("avgPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r};let h=K.runKernel(Yf,c,u);return h=Nt(h,a.dtype),l?Q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const H4=Z({avgPool3d_:G4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(s,t=0){F(s.length>=1,()=>"Pass at least one tensor to concat");const e=oI(s,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return na(e[0]);const n=e,i={axis:t};return K.runKernel(tp,n,i)}const Zn=Z({concat_:q4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(s){const e={x:z(s,"x","sigmoid","float32")};return K.runKernel(fh,e)}const dc=Z({sigmoid_:X4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(s,t,e){const n=z(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const i={x:n},r={begin:t,size:e};return K.runKernel(Op,i,r)}const Oe=Z({slice_:j4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(s){const e={x:z(s,"x","tanh","float32")};return K.runKernel(bh,e)}const bv=Z({tanh_:K4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(s,t,e){const n=z(s,"x","batchToSpaceND"),i=t.reduce((a,l)=>a*l);F(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),F(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),F(n.shape[0]%i===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`);const r={x:n},o={blockShape:t,crops:e};return K.runKernel(Jf,r,o)}const yv=Z({batchToSpaceND_:Y4});function Z4(s){let t;return s.rank===0||s.rank===1?t=Q(s,[1,1,1,s.size]):s.rank===2?t=Q(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(s,t,e,n,i,r){r==null&&(r=.001);const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;n!=null&&(u=z(n,"offset","batchNorm")),F(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:Z4(o),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:r},p=K.runKernel(cp,d,f);return Q(p,o.shape)}const Zp=Z({batchNorm_:J4});function Q4(s,t,e,n,i,r){const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;return n!=null&&(u=z(n,"offset","batchNorm")),F(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),F(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Zp(o,a,l,u,c,r)}const tU=Z({batchNorm2d_:Q4});function eU(s,t,e,n,i,r){const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;return n!=null&&(u=z(n,"offset","batchNorm")),F(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),F(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Zp(o,a,l,u,c,r)}const nU=Z({batchNorm3d_:eU});function sU(s,t,e,n,i,r){const o=z(s,"x","batchNorm"),a=z(t,"mean","batchNorm"),l=z(e,"variance","batchNorm");let c;i!=null&&(c=z(i,"scale","batchNorm"));let u;return n!=null&&(u=z(n,"offset","batchNorm")),F(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),F(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Zp(o,a,l,u,c,r)}const iU=Z({batchNorm4d_:sU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(s,t,e){const n=z(s,"x","bincount"),i=z(t,"weights","bincount");F(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),F(e>=0,()=>`size must be non-negative, but got ${e}.`),F(i.size===n.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${i.shape}.`);const r={x:n,weights:i},o={size:e};return K.runKernel(v0,r,o)}const oU=Z({bincount_:rU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(s,t){let e=z(s,"broadcastTo","x");const n=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=Q(e,c)}const i=e.shape,r=Array.from(t);for(let c=t.length-1;c>=0;c--)if(i[c]===t[c])r[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return na(e);const a={x:e},l={reps:r};return K.runKernel(yh,a,l)}const Zc=Z({broadcastTo_:aU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(s){const e={x:z(s,"x","ceil","float32")};return K.runKernel(Fu,e)}const cU=Z({ceil_:lU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ch(s,t,e){const n={shape:s,value:t,dtype:e};return K.runKernel(N0,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(s,t,e){const n=z(s,"x","clipByValue");if(F(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ch(n.shape,t,n.dtype);const i={x:n},r={clipValueMin:t,clipValueMax:e};return K.runKernel(Lu,i,r)}const zs=Z({clipByValue_:uU});function hU(s){return Zn(s,0)}const dU=Z({concat1d_:hU});function fU(s,t){return Zn(s,t)}const pU=Z({concat2d_:fU});function mU(s,t){return Zn(s,t)}const gU=Z({concat3d_:mU});function xU(s,t){return Zn(s,t)}const vU=Z({concat4d_:xU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(s,t,e,n,i="NHWC",r=[1,1],o){const a=z(s,"x","conv2d","float32"),l=z(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),xs("conv2d",n,o);const h=i==="NHWC"?c.shape[3]:c.shape[1];F(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),F(Qn(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=K.runKernel(ep,d,f);return u?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const wa=Z({conv2d_:bU});function yU(s,t,e,n,i="NWC",r=1,o){const a=z(s,"x","conv1d"),l=z(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1]])),F(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),xs("conv1d",n,o),F(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(Qn(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),F(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=Q(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Q(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=wa(d,h,[1,e],n,"NHWC",[1,r],o);return u?Q(m,[m.shape[2],m.shape[3]]):Q(m,[m.shape[0],m.shape[2],m.shape[3]])}const kI=Z({conv1d_:yU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(s,t,e,n,i,r="NHWC",o){F(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,l=t,c=!1;t.rank===3&&(c=!0,l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,s[0],s[1],s[2]]),F(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];F(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),F(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),xs("conv2dDerInput",i,o);const d={dy:l,filter:e},f={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},p=K.runKernel(np,d,f);return c?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const wv=Z({conv2DBackpropInput_:wU});function _U(s,t,e,n,i,r){const o=z(s,"x","conv2dTranspose"),a=z(t,"filter","conv2dTranspose");return wv(e,o,a,n,i,"NHWC",r)}const AI=Z({conv2dTranspose_:_U});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(s,t,e,n,i="NDHWC",r=[1,1,1]){const o=z(s,"x","conv3d"),a=z(t,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(Qn(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),F(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:e,pad:n,dataFormat:i,dilations:r},d=K.runKernel(sp,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const CU=Z({conv3d_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(s,t,e,n,i){F(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let r=s,o=t,a=!1;t.rank===4&&(a=!0,o=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],c=o.shape[4];F(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),F(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),F(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),F(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),F(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:o,filter:e},h={pad:i,strides:n,inputShape:r},d=K.runKernel(_0,u,h);return a?Q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const NI=Z({conv3DBackpropInput_:IU});function TU(s,t,e,n,i){const r=z(s,"x","conv3dTranspose"),o=z(t,"filter","conv3dTranspose");return NI(e,r,o,n,i)}const EU=Z({conv3dTranspose_:TU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(s){const e={x:z(s,"x","cos","float32")};return K.runKernel(Pu,e)}const _v=Z({cos_:MU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(s){const e={x:z(s,"x","cosh","float32")};return K.runKernel(Ou,e)}const RI=Z({cosh_:kU});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(s,t=0,e=!1,n=!1){const r={x:z(s,"x","cumprod")},o={axis:t,exclusive:e,reverse:n};return K.runKernel(S0,r,o)}const Cx=Z({cumprod_:AU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(s,t=0,e=!1,n=!1){const r={x:z(s,"x","cumsum")},o={axis:t,exclusive:e,reverse:n};return K.runKernel(ip,r,o)}const $I=Z({cumsum_:NU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(s,t,e,n=!1){const i=z(s,"x","denseBincount"),r=z(t,"weights","denseBincount");F(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),F(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),F(e>=0,()=>`size must be non-negative, but got ${e}.`),F(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:e,binaryOutput:n};return K.runKernel(I0,o,a)}const V1=Z({denseBincount_:RU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(s,t,e="NHWC"){const n=z(s,"x","depthToSpace","float32"),i=e==="NHWC"?n.shape[1]:n.shape[2],r=e==="NHWC"?n.shape[2]:n.shape[3],o=e==="NHWC"?n.shape[3]:n.shape[1];F(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),F(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t}  for depthToSpace with input shape
    ${n.shape}`),F(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${n.shape}`),F(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${n.shape}`);const a={x:n},l={blockSize:t,dataFormat:e};return K.runKernel(T0,a,l)}const DU=Z({depthToSpace_:$U});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(s,t,e,n,i="NHWC",r=[1,1],o){const a=z(s,"x","depthwiseConv2d","float32"),l=z(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];F(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),xs("depthwiseConv2d",n,o);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=K.runKernel(rp,d,f);return u?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Sv=Z({depthwiseConv2d_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(s,t,e,n,i=[1,1],r="NHWC"){const o=z(s,"x","dilation2d"),a=z(t,"filter","dilation2d");F(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),F(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,c=!1;o.rank===3&&(l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:e,pad:n,dilations:i},d=K.runKernel(op,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const PU=Z({dilation2d_:LU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(s,t){let e=z(s,"a","equal","string_or_numeric"),n=z(t,"b","equal","string_or_numeric");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(ap,i)}const or=Z({equal_:OU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(s,t,e){const n=z(t,"a","where"),i=z(e,"b","where"),r=z(s,"condition","where","bool"),o=he(he(r.shape,n.shape),i.shape),a=Zc(r,o),l=Zc(n,o),c=Zc(i,o),u={condition:a,t:l,e:c};return K.runKernel(Pp,u)}const Ms=Z({where_:zU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(s){const e={x:z(s,"x","zerosLike")};return K.runKernel(Hp,e)}const Ie=Z({zerosLike_:BU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(s,t){let e=z(s,"a","div"),n=z(t,"b","div");[e,n]=cn(e,n);const i=te(e,n),r=Ie(i),o=or(n,r);return Ms(o,r,i)}const VU=Z({divNoNan_:UU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(s,t){const e=z(s,"t1","dot"),n=z(t,"t2","dot");F((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);const i=e.rank===1?e.size:e.shape[1],r=n.rank===1?n.size:n.shape[0];if(F(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),e.rank===1&&n.rank===1){const o=Q(e,[1,-1]),a=Q(n,[-1,1]),l=ke(o,a);return Q(l,[])}else if(e.rank===1&&n.rank===2){const o=Q(e,[1,-1]),a=Q(n,[n.shape[0],n.shape[1]]),l=ke(o,a);return Q(l,[l.size])}else if(e.rank===2&&n.rank===1){const o=Q(n,[-1,1]),a=ke(e,o);return Q(a,[a.size])}else{const o=Q(n,[n.shape[0],n.shape[1]]);return ke(e,o)}}const GU=Z({dot_:WU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(s){const e={x:z(s,"x","elu","float32")};return K.runKernel(Bu,e)}const Jp=Z({elu_:HU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(s){let t=z(s,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Nt(t,"float32"));const e={x:t};return K.runKernel(Uu,e)}const XU=Z({erf_:qU});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(s,t){for(let e=0;e<s.length;++e)if(s[s.length-e-1]!==t-1-e)return!1;return!0}function DI(s,t,e){const n=s.length+t.length,i=[];let r=0,o=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?i.push(s[r++]):i.push(t[o++]);return i}function Ln(s,t){const e=[],n=s.length;for(let r=0;r<n;r++)t.indexOf(r)===-1&&e.push(s[r]);const i=t.map(r=>s[r]);return[e,i]}function un(s,t){const e=t.map(n=>1);return DI(s,e,t)}function Xn(s,t,e){F(Cv(t,e),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function nn(s,t){if(Cv(s,t))return null;const e=[];for(let n=0;n<t;++n)s.indexOf(n)===-1&&e.push(n);return s.forEach(n=>e.push(n)),e}function bo(s){return s.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function hn(s,t){const e=[];for(let n=t-s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(s,t=null,e=!1){const i={x:z(s,"x","max")},r={reductionIndices:t,keepDims:e};return K.runKernel(bp,i,r)}const Ni=Z({max_:jU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(s,t=null,e=!1){const i={x:z(s,"x","min")},r={axis:t,keepDims:e};return K.runKernel(Sp,i,r)}const hf=Z({min_:KU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(s,t){let e=z(s,"base","pow"),n=z(t,"exp","pow");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel(sh,i)}const jl=Z({pow_:YU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ae(s,t){if((Fi(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Fi(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return jp(s,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(s){const e={x:z(s,"x","sqrt","float32")};return K.runKernel(mh,e)}const os=Z({sqrt_:ZU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(s){const t=z(s,"x","square"),e={};return K.runKernel("Square",{x:t},e)}const We=Z({square_:JU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(s,t=null,e=!1){let n=z(s,"x","sum");n.dtype==="bool"&&(n=Nt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return K.runKernel(zp,i,r)}const qt=Z({sum_:QU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(s,t="euclidean",e=null,n=!1){s=z(s,"x","norm");const i=FI(s,t,e);let r=i.shape;if(n){const o=xe(e,s.shape);r=un(i.shape,o)}return Q(i,r)}function FI(s,t,e=null){if(s.rank===0)return An(s);if(s.rank!==1&&e===null)return FI(Q(s,[-1]),t,e);if(s.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return qt(An(s),e);if(t===1/0)return Ni(An(s),e);if(t===-1/0)return hf(An(s),e);if(t==="euclidean"||t===2)return os(qt(jl(An(s),ae(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Ni(qt(An(s),e[0]),e[1]-1);if(t===1/0)return Ni(qt(An(s),e[1]),e[0]);if(t===-1/0)return hf(qt(An(s),e[1]),e[0]);if(t==="fro"||t==="euclidean")return os(qt(We(s),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Qp=Z({norm_:tV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(s,t=null,e=!1){return Qp(s,"euclidean",t,e)}const nV=Z({euclideanNorm_:eV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(s){const e={x:z(s,"x","exp")};return K.runKernel(Vu,e)}const ci=Z({exp_:sV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(s,t=0){const e=z(s,"x","expandDims","string_or_numeric");F(t<=e.rank,()=>"Axis must be <= rank of the tensor");const n={input:e},i={dim:t};return K.runKernel(lp,n,i)}const _s=Z({expandDims_:iV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(s){const e={x:z(s,"x","expm1")};return K.runKernel(Wu,e)}const oV=Z({expm1_:rV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(s,t){const e=z(s,"x","tile","string_or_numeric");F(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const n={x:e},i={reps:t};return K.runKernel(yh,n,i)}const ki=Z({tile_:aV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(s,t,e,n="float32"){t==null&&(t=s);const i=ge([s,t],n),r=s<=t?s:t;for(let a=0;a<r;++a)i.set(1,a,a);const o=Q(i.toTensor(),[s,t]);if(e==null)return o;if(e.length===1)return ki(_s(o,0),[e[0],1,1]);if(e.length===2)return ki(_s(_s(o,0),0),[e[0],e[1],1,1]);if(e.length===3)return ki(_s(_s(_s(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const LI=Z({eye_:lV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(s){const e={x:z(s,"x","floor","float32")};return K.runKernel(Gu,e)}const tm=Z({floor_:cV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(s,t,e=0,n=0){const i=z(s,"x","gather"),r=z(t,"indices","gather","int32"),o={x:i,indices:r},a={axis:e,batchDims:n};return K.runKernel(up,o,a)}const Iv=Z({gather_:uV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(s,t){let e=z(s,"a","greater","string_or_numeric"),n=z(t,"b","greater","string_or_numeric");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(hp,i)}const Vs=Z({greater_:hV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(s,t){let e=z(s,"a","greaterEqual","string_or_numeric"),n=z(t,"b","greaterEqual","string_or_numeric");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(qu,i)}const Da=Z({greaterEqual_:dV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(s){const e={x:z(s,"x","isFinite")};return K.runKernel(ju,e)}const pV=Z({isFinite_:fV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(s){const e={x:z(s,"x","isInf")};return K.runKernel(Ku,e)}const gV=Z({isInf_:mV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(s){const e={x:z(s,"x","isNaN")};return K.runKernel(Yu,e)}const vV=Z({isNaN_:xV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(s,t=.2){const n={x:z(s,"x","leakyRelu")},i={alpha:t};return K.runKernel(dp,n,i)}const Tv=Z({leakyRelu_:bV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(s,t){let e=z(s,"a","less","string_or_numeric"),n=z(t,"b","less","string_or_numeric");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(fp,i)}const PI=Z({less_:yV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(s,t){let e=z(s,"a","lessEqual","string_or_numeric"),n=z(t,"b","lessEqual","string_or_numeric");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(pp,i)}const fc=Z({lessEqual_:wV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(s,t=5,e=1,n=1,i=.5){const r=z(s,"x","localResponseNormalization");F(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),F(Wl(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},c={depthRadius:t,bias:e,alpha:n,beta:i},u=K.runKernel(vp,l,c);return a?Q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const SV=Z({localResponseNormalization_:_V});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(s){const e={x:z(s,"x","log","float32")};return K.runKernel(Zu,e)}const ui=Z({log_:CV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(s){const e={x:z(s,"x","log1p")};return K.runKernel(Ju,e)}const Ev=Z({log1p_:IV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(s,t){F(rx(s),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(c=>c instanceof lf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in K.registeredVariables)t.push(K.registeredVariables[c])}const n=e?t.filter(c=>!c.trainable):null,i=t.length;t=t.filter(c=>c.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=K.gradients(s,t,null,r);F(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),n!=null&&n.forEach(c=>l[c.name]=null),{value:o,grads:l}}function _a(s){return K.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(s){const e={x:z(s,"x","softplus")};return K.runKernel(ph,e)}const Ih=Z({softplus_:EV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(s){const t=z(s,"x","logSigmoid");return _a(n=>({value:en(Ih(en(n))),gradFunc:o=>q(o,dc(en(n)))}))(t)}const kV=Z({logSigmoid_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(s,t){let e=z(s,"a","sub"),n=z(t,"b","sub");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel(xh,i)}const Xt=Z({sub_:AV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(s,t=-1){const e=z(s,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return _a((i,r)=>{const a=Ni(i,t,!0),l=Xt(i,a),c=Xt(Nt(l,"float32"),ui(qt(ci(l),t,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,g=ci(f);return Xt(h,q(qt(h,t,p),g))}}})(e)}const OI=Z({logSoftmax_:NV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(s,t=null,e=!1){const n=z(s,"x","logSumExp"),i=xe(t,n.shape),r=Ni(n,i,!0),o=Xt(n,r),a=ci(o),l=qt(a,i),c=ui(l),u=yt(Q(r,c.shape),c);if(e){const h=un(u.shape,i);return Q(u,h)}return u}const zI=Z({logSumExp_:RV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(s,t){const e=z(s,"a","logicalAnd","bool"),n=z(t,"b","logicalAnd","bool");he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(mp,i)}const Nr=Z({logicalAnd_:$V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(s){const e={x:z(s,"x","logicalNot","bool")};return K.runKernel(gp,e)}const Mv=Z({logicalNot_:DV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(s,t){const e=z(s,"a","logicalOr","bool"),n=z(t,"b","logicalOr","bool");he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(xp,i)}const BI=Z({logicalOr_:FV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(s,t){const e=z(s,"a","logicalXor","bool"),n=z(t,"b","logicalXor","bool");return he(e.shape,n.shape),Nr(BI(s,t),Mv(Nr(s,t)))}const PV=Z({logicalXor_:LV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(s,t,e,n,i){const r=z(s,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),F(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),F(Qn(e,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),xs("maxPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i},h=K.runKernel(yp,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const kv=Z({maxPool_:OV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(s,t=[1,1,1],e,n,i,r="NDHWC"){const o=z(s,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xs("maxPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r},h=K.runKernel(wp,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const BV=Z({maxPool3d_:zV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(s,t){let e=z(s,"a","maximum"),n=z(t,"b","maximum");[e,n]=cn(e,n),e.dtype==="bool"&&(e=Nt(e,"int32"),n=Nt(n,"int32")),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(Qu,i)}const yo=Z({maximum_:UV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(s,t=null,e=!1){const i={x:z(s,"x","mean")},r={axis:t,keepDims:e};return K.runKernel(_p,i,r)}const ln=Z({mean_:VV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(s,t="float32"){if(t==="complex64"){const n=Rn(s,"float32"),i=Rn(s,"float32");return ql(n,i)}const e=Jn(ut(s),t);return K.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(s,t="float32"){if(t==="complex64"){const n=wo(s,"float32"),i=Rn(s,"float32");return ql(n,i)}const e=u0(ut(s),t);return K.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(s,t){let e=z(s,"a","minimum"),n=z(t,"b","minimum");[e,n]=cn(e,n),e.dtype==="bool"&&(e=Nt(e,"int32"),n=Nt(n,"int32")),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(th,i)}const em=Z({minimum_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(s,t,e){F(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const n=z(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);const i=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)F(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[a][0]>=0&&t[a][0]<=n.shape[a]-i&&t[a][1]>=0&&t[a][1]<=n.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-i} or less than 0 for input of shape ${n.shape}`);const r={paddings:t,mode:e},o={x:n};return K.runKernel(Cp,o,r)}const HV=Z({mirrorPad_:GV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(s,t){let e=z(s,"a","mod"),n=z(t,"b","mod");[e,n]=cn(e,n);const i={a:e,b:n};return K.runKernel(eh,i)}const XV=Z({mod_:qV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(s,t=null,e=!1){s=z(s,"x","moments");const n=xe(t,s.shape),i=ln(s,n,e);let r=i.shape;e||(r=un(i.shape,n));const o=We(Xt(Nt(s,"float32"),Q(i,r))),a=ln(o,n,e);return{mean:i,variance:a}}const Av=Z({moments_:jV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(s,t){let e=z(s,"a","notEqual","string_or_numeric"),n=z(t,"b","notEqual","string_or_numeric");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n};return K.runKernel(Tp,i)}const uu=Z({notEqual_:KV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(s){const e={x:z(s,"x","onesLike")};return K.runKernel(Ep,e)}const hi=Z({onesLike_:YV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(s,t,e=0){const n=z(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:e},r={x:n};return K.runKernel(Ap,r,i)}const Nv=Z({pad_:ZV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(s,t,e){const n=z(s,"x","spaceToBatchND");F(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),F(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),F(n.shape.reduce((o,a,l)=>l>0&&l<=t.length?o&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const i={x:n},r={blockShape:t,paddings:e};return K.runKernel(Bp,i,r)}const Rv=Z({spaceToBatchND_:JV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(s,t,e,n,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),n===0&&(n="valid");const a=z(s,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(Qn(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=pi(l.shape,t,r,i,n),h=[u.dilationHeight,u.dilationWidth];let d;n==="same"?d=eW([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,g]=tW([u.inHeight,u.inWidth],h,d),m=f?n:"valid",x=f?l:Rv(l,h,p),b=(e==="avg"?()=>vv(x,t,r,m,o):()=>kv(x,t,r,m,o))(),y=f?b:yv(b,h,g);return c?Q(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function tW(s,t,e){const n=e.map(u=>u[0]),i=e.map(u=>u[1]),r=s.concat(n,i),o=t.map((u,h)=>(u-r[h]%u)%u),a=i.map((u,h)=>u+o[h]),l=t.map((u,h)=>[n[h],a[h]]),c=t.map((u,h)=>[0,o[h]]);return[l,c]}function eW(s,t){const n=s.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),i=n.map(o=>Math.floor(o/2)),r=n.map((o,a)=>o-i[a]);return n.map((o,a)=>[i[a],r[a]])}const nW=Z({pool_:QV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(s,t){const e=z(s,"x","prelu"),n=z(t,"alpha","prelu"),i={x:e,alpha:n};return K.runKernel(Np,i)}const $v=Z({prelu_:sW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(s,t=null,e=!1){let n=z(s,"x","prod");n.dtype==="bool"&&(n=Nt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return K.runKernel(Rp,i,r)}const rW=Z({prod_:iW});var UI={exports:{}};(function(s){(function(t,e,n){function i(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(Na,s,!1)})(UI);var VI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(Na,s,!1)})(VI);var WI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(Na,s,!1)})(WI);var GI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(Na,s,!1)})(GI);var HI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,g,m,x=[],v=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,v=Math.max(v,h.length)),p=0,g=-32;g<v;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=m+1640531527|0,d=x[g&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(x[(h&&h.length||0)&127]=-1),p=127,g=4*128;g>0;--g)f=x[p+34&127],d=x[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,x[p]=f^d;u.w=m,u.X=x,u.i=p}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(Na,s,!1)})(HI);var qI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(Na,s,!1)})(qI);var XI={exports:{}};const oW={},aW=Object.freeze(Object.defineProperty({__proto__:null,default:oW},Symbol.toStringTag,{value:"Module"})),lW=kO(aW);(function(s){(function(t,e,n){var i=256,r=6,o=52,a="random",l=n.pow(i,r),c=n.pow(2,o),u=c*2,h=i-1,d;function f(y,w,S){var C=[];w=w==!0?{entropy:!0}:w||{};var _=x(m(w.entropy?[y,b(e)]:y==null?v():y,3),C),I=new p(C),T=function(){for(var N=I.g(r),O=l,M=0;N<c;)N=(N+M)*i,O*=i,M=I.g(1);for(;N>=u;)N/=2,O/=2,M>>>=1;return(N+M)/O};return T.int32=function(){return I.g(4)|0},T.quick=function(){return I.g(4)/4294967296},T.double=T,x(b(I.S),e),(w.pass||S||function(N,O,M,E){return E&&(E.S&&g(E,I),N.state=function(){return g(I,{})}),M?(n[a]=N,O):N})(T,_,"global"in w?w.global:this==n,w.state)}function p(y){var w,S=y.length,C=this,_=0,I=C.i=C.j=0,T=C.S=[];for(S||(y=[S++]);_<i;)T[_]=_++;for(_=0;_<i;_++)T[_]=T[I=h&I+y[_%S]+(w=T[_])],T[I]=w;(C.g=function(N){for(var O,M=0,E=C.i,A=C.j,R=C.S;N--;)O=R[E=h&E+1],M=M*i+R[h&(R[E]=R[A=h&A+O])+(R[A]=O)];return C.i=E,C.j=A,M})(i)}function g(y,w){return w.i=y.i,w.j=y.j,w.S=y.S.slice(),w}function m(y,w){var S=[],C=typeof y,_;if(w&&C=="object")for(_ in y)try{S.push(m(y[_],w-1))}catch{}return S.length?S:C=="string"?y:y+"\0"}function x(y,w){for(var S=y+"",C,_=0;_<S.length;)w[h&_]=h&(C^=w[h&_]*19)+S.charCodeAt(_++);return b(w)}function v(){try{var y;return d&&(y=d.randomBytes)?y=y(i):(y=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(y)),b(y)}catch{var w=t.navigator,S=w&&w.plugins;return[+new Date,t,S,t.screen,b(e)]}}function b(y){return String.fromCharCode.apply(0,y)}if(x(n.random(),e),s.exports){s.exports=f;try{d=lW}catch{}}else n["seed"+a]=f})(typeof self<"u"?self:Na,[],Math)})(XI);var cW=UI.exports,uW=VI.exports,hW=WI.exports,dW=GI.exports,fW=HI.exports,pW=qI.exports,Fa=XI.exports;Fa.alea=cW;Fa.xor128=uW;Fa.xorwow=hW;Fa.xorshift7=dW;Fa.xor4096=fW;Fa.tychei=pW;var Th=Fa;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jI{constructor(t,e,n,i,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=Th.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let t,e,n=!1;for(;!n;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*i*a,e=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class mW{constructor(t=0,e=1,n,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Th.alea(i)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new jI(t,e,n,!1,i),o=ge(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const xW=Z({randomNormal_:gW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(s,t=0,e=1,n="float32",i){const r=ge(s,n),o=new mW(t,e,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const nm=Z({randomUniform_:vW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function df(s,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");const i={start:s,stop:t,step:e,dtype:n};return K.runKernel(U0,{},i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(s){const e={x:z(s,"x","reciprocal")};return K.runKernel(ih,e)}const yW=Z({reciprocal_:bW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(s){const e={x:z(s,"x","relu")};return K.runKernel(rh,e)}const Lr=Z({relu_:wW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(s){const e={x:z(s,"x","relu6")};return K.runKernel(oh,e)}const KI=Z({relu6_:_W});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(s,t){const n={x:z(s,"x","reverse")},i={dims:t};return K.runKernel(Lp,n,i)}const Sa=Z({reverse_:SW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(s){const e={x:z(s,"x","round")};return K.runKernel(ah,e)}const YI=Z({round_:CW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(s){const e={x:z(s,"x","rsqrt","float32")};return K.runKernel(lh,e)}const ZI=Z({rsqrt_:IW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(s){const e={x:z(s,"x","selu")};return K.runKernel(ch,e)}const JI=Z({selu_:TW});function EW(s,t,e,n,i,r=[1,1],o="NHWC"){const a=z(s,"x","separableConv2d"),l=z(t,"depthwiseFilter","separableConv2d"),c=z(e,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),F(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];F(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=Sv(u,l,n,i,o,r),m=wa(p,c,1,"valid",o);return h?Q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const QI=Z({separableConv2d_:EW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(s){const e={x:z(s,"x","sign")};return K.runKernel(dh,e)}const kW=Z({sign_:MW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(s){const e={x:z(s,"x","sin","float32")};return K.runKernel(uh,e)}const tT=Z({sin_:AW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(s){const e={x:z(s,"x","sinh")};return K.runKernel(hh,e)}const eT=Z({sinh_:NW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(s,t,e){const n=z(s,"x","slice1d");return F(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Oe(n,[t],[e])}const Dv=Z({slice1d_:RW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(s,t,e){const n=z(s,"x","slice2d");return F(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}const nT=Z({slice2d_:$W});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(s,t,e){const n=z(s,"x","slice3d");return F(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}const Fv=Z({slice3d_:DW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(s,t,e){const n=z(s,"x","slice4d");return F(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}const ff=Z({slice4d_:FW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(s,t=-1){const e=z(s,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const n={logits:e},i={dim:t};return K.runKernel(Vp,n,i)}const Lv=Z({softmax_:LW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s){F(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return K.runKernel(A0,t)}const sT=Z({fft_:PW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(s){F(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return K.runKernel($0,t)}const Ix=Z({ifft_:OW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(s){const t=s.shape[s.shape.length-1],e=s.size/t;let n;if(t<=2){const i=Q(s,[e,t]);n=Ix(i)}else{const i=[e,2*(t-1)],r=Q(cf(s),[e,t]),o=Q(uv(s),[e,t]),a=Sa(Oe(r,[0,1],[e,t-2]),1),l=q(Sa(Oe(o,[0,1],[e,t-2]),1),ae(-1)),c=Zn([r,a],1),u=Zn([o,l],1),h=Q(ql(c,u),[i[0],i[1]]);n=Ix(h)}if(n=cf(n),s.rank===3&&s.shape[0]!==0){const i=n,r=s.shape[0];n=Q(n,[r,n.shape[0]/r,n.shape[1]]),i.dispose()}return n}const BW=Z({irfft_:zW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(s,t,e=0){const i={x:z(s,"x","split")},r={numOrSizeSplits:t,axis:e};return K.runKernel(Up,i,r)}const Os=Z({split_:UW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(s,t){F(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let e=s.shape[s.shape.length-1];const n=s.size/e;let i;if(t!=null&&t<e){const p=s.shape.map(m=>0),g=s.shape.map(m=>m);g[s.shape.length-1]=t,i=Oe(s,p,g),e=t}else if(t!=null&&t>e){const p=s.shape.map(g=>g);p[s.shape.length-1]=t-e,i=Zn([s,Rn(p)],s.shape.length-1),e=t}else i=s;const r=Ie(i),o=Q(ql(i,r),[n,e]),a=sT(o),l=Math.floor(e/2)+1,c=cf(a),u=uv(a),h=Os(c,[l,e-l],c.shape.length-1),d=Os(u,[l,e-l],u.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=l,Q(ql(h[0],d[0]),f)}const iT=Z({rfft_:VW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(s,t){let e=z(s,"a","squaredDifference"),n=z(t,"b","squaredDifference");[e,n]=cn(e,n),he(e.shape,n.shape);const i={a:e,b:n},r={};return K.runKernel(gh,i,r)}const rT=Z({squaredDifference_:WW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(s,t){const e=z(s,"x","squeeze","string_or_numeric");return Q(e,go(e.shape,t).newShape)}const Eh=Z({squeeze_:GW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(s,t=0){const e=oI(s,"tensors","stack","string_or_numeric");F(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&F(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const n=e,i={axis:t};return K.runKernel(kp,n,i)}const io=Z({stack_:HW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(s,t=0){const n={x:z(s,"x","step")},i={alpha:t};return K.runKernel(wh,n,i)}const Mh=Z({step_:qW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s,t,e,n,i=0,r=0,o=0,a=0,l=0){const u={x:z(s,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:n,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return K.runKernel(Y0,u,h)}const jW=Z({stridedSlice_:XW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(s){const e={x:z(s,"x","tan","float32")};return K.runKernel(vh,e)}const YW=Z({tan_:KW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(s,t){CC(s);const e=Xp(s,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return jp(s,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(s,t,e){if(CC(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=Xp(s,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return jp(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(s,t=1,e=!0){const n=z(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const r={x:n},o={k:t,sorted:e},[a,l]=K.runKernel(tv,r,o);return{values:a,indices:l}}const JW=Z({topk_:ZW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new jI(t,e,n,!0,i),o=ge(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const oT=Z({truncatedNormal_:QW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(s,t=0){const e=z(s,"x","unique","string_or_numeric");F(e.rank>0,()=>"The input tensor must be at least 1D");const n={x:e},i={axis:t},[r,o]=K.runKernel(nv,n,i);return{values:r,indices:o}}const eG=Z({unique_:tG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(s,t,e){const n=z(s,"x","unsortedSegmentSum"),i=z(t,"segmentIds","unsortedSegmentSum","int32");F(Wl(e),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:i},o={numSegments:e};return K.runKernel(Gp,r,o)}const aT=Z({unsortedSegmentSum_:nG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(s,t=0){const e=z(s,"x","unstack","string_or_numeric");F(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const n={value:e},i={axis:t};return K.runKernel(Wp,n,i)}const Kl=Z({unstack_:sG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(s,t=!0,e,n){return K.makeVariable(s,t,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(s,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const n=ge(s,"int32"),i=ge([e.length,s.length],"int32");for(let r=0;r<e.length;r++){const o=n.indexToLoc(e[r]),a=r*s.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(s,t){if(t==null)return s.shape.slice();if(Ae(s.shape,t))return t;if(s.shape.length===t.length){const e=[];for(let n=0;n<s.shape.length;n++)t[n]==null&&s.shape[n]!=null?e.push(s.shape[n]):e.push(t[n]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(s,t,e,n){const i=z(s,"x","dropout");if(F(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof Ye?i.clone():i;const r=rG(i,e),o=1-t,a=te(tm(yt(nm(r,0,1,"float32",n),o)),o);return q(i,a)}const aG=Z({dropout_:oG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function cT(s,t,e){const n=1-s%2,i=new Float32Array(s);for(let r=0;r<s;++r){const o=2*Math.PI*r/(s+n-1);i[r]=t-e*Math.cos(o)}return Is(i,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(s,t,e,n,i,r="NHWC",o){let a=s;s.rank===3&&(a=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];F(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),F(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),xs("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:e};return K.runKernel(y0,h,d)}const Pv=Z({conv2DBackpropFilter_:cG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(s,t,e){if(e==null||e==="linear")return s;if(e==="relu")return q(s,Mh(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function zv(s,t){let e=t;const n=Tn(s.shape,t.shape);return n.length>0&&(e=qt(e,n)),Q(e,s.shape)}function Bv(s,t,e,n){if(t==="linear")return s;if(t==="relu")return Lr(s);if(t==="elu")return Jp(s);if(t==="relu6")return KI(s);if(t==="prelu")return $v(s,e);if(t==="leakyrelu")return Tv(s,n);if(t==="sigmoid")return dc(s);throw new Error(`Unknown fused activation ${t}.`)}const Uv=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG({x:s,filter:t,strides:e,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Uv(K.state.gradientDepth,l)===!1){F(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=wa(s,t,e,n,i,r,o);return a!=null&&(S=yt(S,a)),Bv(S,l,c,u)}const h=z(s,"x","conv2d","float32"),d=z(t,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=Q(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),F(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),xs("fused conv2d",n,o);const g=i==="NHWC"?f.shape[3]:f.shape[1];F(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),F(Qn(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const m=qn(f.shape,d.shape,e,r,n,o);let x;a!=null&&(x=z(a,"bias","fused conv2d"),[x]=cn(x,h),i==="NHWC"?he(m.outShape,x.shape):(F(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),F(x.shape.length===0||x.shape[0]===m.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let v;if(c!=null){const S=c.shape;if(F(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)F(S[0]===1||S[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${m.outChannels}).`);else if(S.length===3)try{he(S,m.outShape)}catch{const _=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(_)}v=z(c,"prelu weights","fused conv2d")}const b=(S,C)=>{F(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[_,I,T,N]=C,O=Ov(S,T,l);F(ya(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const M=wv(I.shape,O,_,e,n),E=Pv(I,O,_.shape,e,n),A=[M,E];if(N!=null){const R=zv(N,O);A.push(R)}return A},y={x:f,filter:d,bias:x,preluActivationWeights:v},w={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?_a((C,_,I)=>{let T=K.runKernel(rf,y,w);return I([_,C,T]),p&&(T=Q(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:b}})(f,d):_a((C,_,I,T)=>{let N=K.runKernel(rf,y,w);return T([_,C,N,I]),p&&(N=Q(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:b}})(f,d,x)}const hG=Z({fusedConv2d_:uG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(s,t,e,n,i,r=[1,1],o){let a=s;s.rank===3&&(a=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,filterShape:e};return K.runKernel(E0,c,u)}const fG=Z({depthwiseConv2dNativeBackpropFilter_:dG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(s,t,e,n,i,r=[1,1],o){let a=t,l=!1;t.rank===3&&(l=!0,a=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,inputShape:s},h=K.runKernel(M0,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const mG=Z({depthwiseConv2dNativeBackpropInput_:pG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG({a:s,b:t,transposeA:e=!1,transposeB:n=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Uv(K.state.gradientDepth,r)===!1){let N=ke(s,t,e,n);return i!=null&&(N=yt(N,i)),Bv(N,r,o,a)}let l=z(s,"a","fused matMul"),c=z(t,"b","fused matMul");[l,c]=cn(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),g=c.shape.slice(0,-2),m=ut(p),x=ut(g);F(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${n} must match.`);const b=he(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),y=e?Q(l,[m,u,d]):Q(l,[m,d,u]),w=n?Q(c,[x,f,h]):Q(c,[x,h,f]);let S;i!=null&&(S=z(i,"bias","fused matMul"),[S]=cn(S,l),he(b,S.shape));let C;o!=null&&(C=z(o,"prelu weights","fused matMul"));const _=(N,O)=>{const[M,E,A,R]=O,V=Ov(Q(N,A.shape),A,r);let P,$;if(!e&&!n?(P=ke(V,E,!1,!0),$=ke(M,V,!0,!1)):!e&&n?(P=ke(V,E,!1,!1),$=ke(V,M,!0,!1)):e&&!n?(P=ke(E,V,!1,!0),$=ke(M,V,!1,!1)):(P=ke(E,V,!0,!0),$=ke(V,M,!0,!0)),i!=null){const D=zv(R,V);return[P,$,D]}else return[P,$]},I={a:y,b:w,bias:S,preluActivationWeights:C},T={transposeA:e,transposeB:n,activation:r,leakyreluAlpha:a};return i==null?_a((O,M,E)=>{const A=K.runKernel(sf,I,T);return E([O,M,A]),{value:Q(A,b),gradFunc:_}})(y,w):_a((O,M,E,A)=>{const R=K.runKernel(sf,I,T);return A([O,M,R,E]),{value:Q(R,b),gradFunc:_}})(y,w,S)}const W1=Z({fusedMatMul_:gG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(s){return cT(s,.54,.46)}const pct=Z({hammingWindow_:xG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(s){return cT(s,.5,.5)}const bG=Z({hannWindow_:vG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(s,t,e,n=!1,i=0){let r=0;const o=[];for(;r+t<=s.size;)o.push(Oe(s,r,t)),r+=e;if(n)for(;r<s.size;){const a=r+t-s.size,l=Zn([Oe(s,r,t-a),Ch([a],i)]);o.push(l),r+=e}return o.length===0?Kd([],[0,t]):Q(Zn(o),[o.length,t])}const wG=Z({frame_:yG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(s,t,e,n,i=bG){n==null&&(n=lG(t));const r=wG(s,t,e),o=q(r,i(t));return iT(o,n)}const mct=Z({stft_:_G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(s,t,e,n,i="bilinear",r=0){const o=z(s,"image","cropAndResize"),a=z(t,"boxes","cropAndResize","float32"),l=z(e,"boxInd","cropAndResize","int32"),c=a.shape[0];F(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),F(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),F(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),F(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),F(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),F(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:n};return K.runKernel(C0,u,h)}const CG=Z({cropAndResize_:SG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(s){const t=z(s,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return K.runKernel(R0,e,{})}const TG=Z({flipLeftRight_:IG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(s){const t=z(s,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];F(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),F(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const i=new Array(t.rank);return i.fill(1,0,e),i[e]=3,ki(t,i)}const MG=Z({grayscaleToRGB_:EG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(s,t,e=0,n=.5){const i=z(s,"image","rotateWithOffset","float32");F(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:t,fillValue:e,center:n};return K.runKernel(sv,r,o)}const AG=Z({rotateWithOffset_:kG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pc(s,t,e,n,i,r){n==null&&(n=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=s.shape[0];return e=Math.min(e,o),F(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),F(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),F(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),F(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=z(s,"boxes","nonMaxSuppression","float32"),o=z(t,"scores","nonMaxSuppression","float32"),a=pc(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:n,scoreThreshold:i};return K.runKernel(O0,{boxes:r,scores:o},l)}const RG=Z({nonMaxSuppression_:NG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(s,t,e){const n=DG(s,t,e),i=n<0?-(n+1):n;s.splice(i,0,t)}function DG(s,t,e){return LG(s,t,e||FG)}function FG(s,t){return s>t?1:s<t?-1:0}function LG(s,t,e){let n=0,i=s.length,r=0,o=!1;for(;n<i;){r=n+(i-n>>>1);const a=e(t,s[r]);a>0?n=r+1:(i=r,o=!a)}return o?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(s,t,e,n,i){return Hv(s,t,e,n,i,0)}function Wv(s,t,e,n,i,r){return Hv(s,t,e,n,i,0,!1,r,!0)}function Gv(s,t,e,n,i,r){return Hv(s,t,e,n,i,r,!0)}function Hv(s,t,e,n,i,r,o=!1,a=!1,l=!1){const c=[];for(let m=0;m<t.length;m++)t[m]>i&&c.push({score:t[m],boxIndex:m,suppressBeginIndex:0});c.sort(G1);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<e&&c.length>0;){const m=c.pop(),{score:x,boxIndex:v,suppressBeginIndex:b}=m;if(x<i)break;let y=!1;for(let w=h.length-1;w>=b;--w){const S=PG(s,v,h[w]);if(S>=n){y=!0;break}if(m.score=m.score*OG(n,u,S),m.score<=i)break}m.suppressBeginIndex=h.length,y||(m.score===x?(h.push(v),d.push(m.score)):m.score>i&&$G(c,m,G1))}const f=h.length,p=e-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=f),g}function PG(s,t,e){const n=s.subarray(t*4,t*4+4),i=s.subarray(e*4,e*4+4),r=Math.min(n[0],n[2]),o=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(a-r)*(l-o),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const g=Math.max(r,c),m=Math.max(o,u),x=Math.min(a,h),v=Math.min(l,d),b=Math.max(x-g,0)*Math.max(v-m,0);return b/(f+p-b)}function OG(s,t,e){const n=Math.exp(t*e*e);return e<=s?n:0}function G1(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=z(s,"boxes","nonMaxSuppressionAsync"),o=z(t,"scores","nonMaxSuppressionAsync"),a=pc(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=Vv(c,u,e,n,i);return r!==s&&r.dispose(),o!==t&&o.dispose(),Is(h,"int32")}const BG=zG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=z(s,"boxes","nonMaxSuppression"),a=z(t,"scores","nonMaxSuppression"),l=pc(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r},h=K.runKernel(B0,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const VG=Z({nonMaxSuppressionWithScore_:UG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=z(s,"boxes","nonMaxSuppressionAsync"),a=z(t,"scores","nonMaxSuppressionAsync"),l=pc(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=Gv(u,h,e,n,i,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Is(d,"int32"),selectedScores:Is(f)}}const GG=WG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=z(s,"boxes","nonMaxSuppression"),a=z(t,"scores","nonMaxSuppression"),l=pc(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},p=K.runKernel(z0,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const qG=Z({nonMaxSuppressionPadded_:HG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function XG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=z(s,"boxes","nonMaxSuppressionAsync"),a=z(t,"scores","nonMaxSuppressionAsync"),l=pc(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:g}=Wv(d,f,c,u,h,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Is(p,"int32"),validOutputs:ae(g,"int32")}}const jG=XG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(s,t,e=!1,n=!1){const i=z(s,"images","resizeBilinear");F(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=Q(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=K.runKernel(Fp,a,l);return o?Q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const uT=Z({resizeBilinear_:KG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(s,t,e=!1,n=!1){const i=z(s,"images","resizeNearestNeighbor");F(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=Q(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=K.runKernel(Dp,a,l);return o?Q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const hT=Z({resizeNearestNeighbor_:YG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s,t="binary",e=!1,n=.5){const i=z(s,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let c=q(Is([n]),255),u,h,d,f;if(F(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),F(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),F(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),F(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),i.shape[2]===3){[u,h,d]=Os(i,[1,1,1],-1);const m=q(u,r),x=q(h,o),v=q(d,a);f=yt(yt(m,x),v)}else f=s;if(t==="otsu"){const m=oU(Nt(YI(f),"int32"),av([]),256);c=JG(m,l)}const p=e?fc(f,c):Vs(f,c);return Nt(q(p,255),"int32")}function JG(s,t){let e=Is([-1]),n=Is([0]),i=Is([0]),r,o,a,l,c,u;for(let h=0;h<s.size-1;h++){r=Oe(s,0,h+1),o=Oe(s,h+1),c=te(qt(r),t),u=te(qt(o),t);const d=qt(q(r,df(0,r.size)));a=te(d,qt(r));const f=Ch(o.shape,r.size),p=yt(df(0,o.size),f),g=q(o,p);l=te(qt(g),qt(o));const m=Xt(a,l),x=Xt(a,l),v=q(c,u);i=q(q(v,m),x);const b=Vs(i,n);n=Ms(b,i,n),e=Ms(b,Is([h]),e)}return e}const QG=Z({threshold_:ZG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(s,t,e="nearest",n="constant",i=0,r){const o=z(s,"image","transform","float32"),a=z(t,"transforms","transform","float32");F(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),F(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},c={interpolation:e,fillMode:n,fillValue:i,outputShape:r};return K.runKernel(ev,l,c)}const eH=Z({transform_:tH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(s,t,e){F(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const n=z(s,"a","bandPart");F(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const i=n.shape,[r,o]=n.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(e<=o))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`);t<0&&(t=r),e<0&&(e=o);const a=Q(df(0,r,1,"int32"),[-1,1]),l=df(0,o,1,"int32"),c=Xt(a,l),u=Nr(fc(c,ae(+t,"int32")),Da(c,ae(-e,"int32"))),h=Rn([r,o],n.dtype);return Q(io(Kl(Q(n,[-1,r,o])).map(d=>Ms(u,d,h))),i)}const sH=Z({bandPart_:nH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(s){let t;if(Array.isArray(s)){t=!1,F(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=s[0].shape[0];for(let r=1;r<s.length;++r)F(s[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${i})`)}else t=!0,s=Os(s,s.shape[0],0).map(i=>Eh(i,[0]));F(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const e=[],n=s;for(let i=0;i<s.length;++i)e.push(K.tidy(()=>{let r=n[i];if(i>0)for(let o=0;o<i;++o){const a=q(qt(q(e[o],r)),e[o]);r=Xt(r,a)}return te(r,Qp(r,"euclidean"))}));return t?io(e,0):e}const rH=Z({gramSchmidt_:iH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(s,t=!1){if(F(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return H1(s,t);{const e=s.shape.slice(0,s.shape.length-2).reduce((l,c)=>l*c),n=Kl(Q(s,[e,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),i=[],r=[];n.forEach(l=>{const[c,u]=H1(l,t);i.push(c),r.push(u)});const o=Q(io(i,0),s.shape),a=Q(io(r,0),s.shape);return[o,a]}}function H1(s,t=!1){return K.tidy(()=>{F(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const e=s.shape[0],n=s.shape[1];let i=LI(e),r=na(s);const o=Kd([[1]],[1,1]);let a=na(o);const l=e>=n?n:e;for(let c=0;c<l;++c){const u=r,h=a,d=i;[a,r,i]=K.tidy(()=>{const f=Oe(r,[c,c],[e-c,1]),p=Qp(f),g=Oe(r,[c,c],[1,1]),m=Ms(Vs(g,0),Kd([[-1]]),Kd([[1]])),x=Xt(g,q(m,p)),v=te(f,x);v.shape[0]===1?a=na(o):a=Zn([o,Oe(v,[1,0],[v.shape[0]-1,v.shape[1]])],0);const b=en(te(ke(m,x),p)),y=Oe(r,[c,0],[e-c,n]),w=q(b,a),S=Se(a);if(c===0)r=Xt(y,ke(w,ke(S,y)));else{const I=Xt(y,ke(w,ke(S,y)));r=Zn([Oe(r,[0,0],[c,n]),I],0)}const C=Se(w),_=Oe(i,[0,c],[e,i.shape[1]-c]);if(c===0)i=Xt(_,ke(ke(_,a),C));else{const I=Xt(_,ke(ke(_,a),C));i=Zn([Oe(i,[0,0],[e,c]),I],1)}return[a,r,i]}),me([u,h,d])}return!t&&e>n&&(i=Oe(i,[0,0],[e,n]),r=Oe(r,[0,0],[n,n])),[i,r]})}const aH=Z({qr_:oH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ps;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ps||(ps={}));function lH(s,t,e=ps.SUM_BY_NONZERO_WEIGHTS){const n=z(s,"losses","computeWeightedLoss");let i=null;t!=null&&(i=z(t,"weights","computeWeightedLoss"));const r=i==null?n:q(n,i);if(e===ps.NONE)return r;if(e===ps.SUM)return qt(r);if(e===ps.MEAN){if(i==null)return ln(r);{const o=n.size/i.size,a=te(qt(r),qt(i));return o>1?te(a,ae(o)):a}}if(e===ps.SUM_BY_NONZERO_WEIGHTS){if(i==null)return te(qt(r),ae(n.size));{const o=q(i,wo(n.shape)),a=Nt(qt(uu(o,ae(0))),"float32");return te(qt(r),a)}}throw Error(`Unknown reduction: ${e}`)}const _o=Z({computeWeightedLoss_:lH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(s,t,e,n=ps.SUM_BY_NONZERO_WEIGHTS){const i=z(s,"labels","absoluteDifference"),r=z(t,"predictions","absoluteDifference");let o=null;e!=null&&(o=z(e,"weights","absoluteDifference")),fi(i.shape,r.shape,"Error in absoluteDifference: ");const a=An(Xt(i,r));return _o(a,o,n)}const gct=Z({absoluteDifference_:cH});function uH(s,t,e,n,i=ps.SUM_BY_NONZERO_WEIGHTS){const r=z(s,"labels","cosineDistance"),o=z(t,"predictions","cosineDistance");let a=null;n!=null&&(a=z(n,"weights","cosineDistance")),fi(r.shape,o.shape,"Error in cosineDistance: ");const l=ae(1),c=Xt(l,qt(q(r,o),e,!0));return _o(c,a,i)}const xct=Z({cosineDistance_:uH});function hH(s,t,e,n=ps.SUM_BY_NONZERO_WEIGHTS){let i=z(s,"labels","hingeLoss");const r=z(t,"predictions","hingeLoss");let o=null;e!=null&&(o=z(e,"weights","hingeLoss")),fi(i.shape,r.shape,"Error in hingeLoss: ");const a=ae(1);i=Xt(q(ae(2),i),a);const l=Lr(Xt(a,q(i,r)));return _o(l,o,n)}const vct=Z({hingeLoss_:hH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s,t,e,n=1,i=ps.SUM_BY_NONZERO_WEIGHTS){const r=z(s,"labels","huberLoss"),o=z(t,"predictions","huberLoss");let a=null;e!=null&&(a=z(e,"weights","huberLoss")),fi(r.shape,o.shape,"Error in huberLoss: ");const l=ae(n),c=An(Xt(o,r)),u=em(c,l),h=Xt(c,u),d=yt(q(ae(.5),We(u)),q(l,h));return _o(d,a,i)}const bct=Z({huberLoss_:dH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(s,t,e,n=1e-7,i=ps.SUM_BY_NONZERO_WEIGHTS){const r=z(s,"labels","logLoss"),o=z(t,"predictions","logLoss");let a=null;e!=null&&(a=z(e,"weights","logLoss")),fi(r.shape,o.shape,"Error in logLoss: ");const l=ae(1),c=ae(n),u=en(q(r,ui(yt(o,c)))),h=q(Xt(l,r),ui(yt(Xt(l,o),c))),d=Xt(u,h);return _o(d,a,i)}const yct=Z({logLoss_:fH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(s,t,e,n=ps.SUM_BY_NONZERO_WEIGHTS){const i=z(s,"labels","meanSquaredError"),r=z(t,"predictions","meanSquaredError");let o=null;e!=null&&(o=z(e,"weights","meanSquaredError")),fi(i.shape,r.shape,"Error in meanSquaredError: ");const a=rT(i,r);return _o(a,o,n)}const wct=Z({meanSquaredError_:pH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(s,t){const e=z(s,"labels","sigmoidCrossEntropyWithLogits"),n=z(t,"logits","sigmoidCrossEntropyWithLogits");fi(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Lr(n),r=q(n,e),o=Ev(ci(en(An(n))));return yt(Xt(i,r),o)}function gH(s,t,e,n=0,i=ps.SUM_BY_NONZERO_WEIGHTS){let r=z(s,"multiClassLabels","sigmoidCrossEntropy");const o=z(t,"logits","sigmoidCrossEntropy");let a=null;if(e!=null&&(a=z(e,"weights","sigmoidCrossEntropy")),fi(r.shape,o.shape,"Error in sigmoidCrossEntropy: "),n>0){const c=ae(n),u=ae(1),h=ae(.5);r=yt(q(r,Xt(u,c)),q(h,c))}const l=mH(r,o);return _o(l,a,i)}const _ct=Z({sigmoidCrossEntropy_:gH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(s,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return _a((i,r,o)=>{const l=zI(r,[e],!0),c=Xt(Nt(r,"float32"),l);o([i,c]);const u=en(q(c,i));return{value:qt(u,[e]),gradFunc:(f,p)=>{const[g,m]=p,x=un(f.shape,[e]);return[q(Q(f,x),Xt(Nt(g,"float32"),ci(m))),q(Q(f,x),Xt(ci(m),Nt(g,"float32")))]}}})(s,t)}function vH(s,t,e,n=0,i=ps.SUM_BY_NONZERO_WEIGHTS){let r=z(s,"onehotLabels","softmaxCrossEntropy");const o=z(t,"logits","softmaxCrossEntropy");let a=null;if(e!=null&&(a=z(e,"weights","softmaxCrossEntropy")),fi(r.shape,o.shape,"Error in softmaxCrossEntropy: "),n>0){const c=ae(n),u=ae(1),h=ae(r.shape[1]);r=yt(q(r,Xt(u,c)),te(c,h))}const l=xH(r,o);return _o(l,a,i)}const Sct=Z({softmaxCrossEntropy_:vH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s,t,e,n){const i=z(s,"indices","sparseFillEmptyRows","int32"),r=z(t,"values","sparseFillEmptyRows"),o=z(e,"denseShape","sparseFillEmptyRows","int32"),a=z(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:i,values:r,denseShape:o,defaultValue:a},c=K.runKernel(H0,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const Cct=Z({sparseFillEmptyRows_:bH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(s,t,e){const n=z(s,"inputIndices","sparseReshape","int32"),i=z(t,"inputShape","sparseReshape","int32"),r=z(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const o={inputIndices:n,inputShape:i,newShape:r},a=K.runKernel(q0,o);return{outputIndices:a[0],outputShape:a[1]}}const Ict=Z({sparseReshape_:yH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(s,t,e){const n=z(s,"data","sparseSegmentMean"),i=z(t,"indices","sparseSegmentMean","int32"),r=z(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return K.runKernel(X0,o)}const Tct=Z({sparseSegmentMean_:wH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(s,t,e){const n=z(s,"data","sparseSegmentSum"),i=z(t,"indices","sparseSegmentSum","int32"),r=z(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return K.runKernel(j0,o)}const Ect=Z({sparseSegmentSum_:_H});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(s,t,e,n,i,r,o,a){const l=z(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=z(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:e,nGramWidths:n,leftPad:i,rightPad:r,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:c},d=K.runKernel(Z0,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const Mct=Z({stringNGrams_:SH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(s,t,e=!0){const n=z(s,"input","stringSplit","string"),i=z(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:e},o={input:n,delimiter:i},a=K.runKernel(J0,o,r);return{indices:a[0],values:a[1],shape:a[2]}}const kct=Z({stringSplit_:CH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(s,t){const e=z(s,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:e};return K.runKernel(Q0,i,n)}const Act=Z({stringToHashBucketFast_:IH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sl={flipLeftRight:TG,grayscaleToRGB:MG,resizeNearestNeighbor:hT,resizeBilinear:uT,rotateWithOffset:AG,cropAndResize:CG,nonMaxSuppression:RG,nonMaxSuppressionAsync:BG,nonMaxSuppressionWithScore:VG,nonMaxSuppressionWithScoreAsync:GG,nonMaxSuppressionPadded:qG,nonMaxSuppressionPaddedAsync:jG,threshold:QG,transform:eH},TH={bandPart:sH,gramSchmidt:rH,qr:aH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class So extends hc{minimize(t,e=!1,n){const{value:i,grads:r}=this.computeGradients(t,n);if(n!=null){const o=n.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return me(r),e?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return TV(t,e)}dispose(){this.iterations_!=null&&me(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ae(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(So,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qv extends So{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=K.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=K.registeredVariables[n],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accum_grad`,variable:st(()=>Ie(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${n}/accum_var`,variable:st(()=>Ie(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;st(()=>{const u=yt(q(l,this.rho),q(We(a),1-this.rho)),h=q(te(os(yt(c,this.epsilon)),os(yt(l,this.epsilon))),a),d=yt(q(c,this.rho),q(We(h),1-this.rho));l.assign(u),c.assign(d);const f=yt(q(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(me(this.accumulatedGrads.map(t=>t.variable)),me(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}qv.className="Adadelta";gt(qv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xv extends So{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=K.registeredVariables[n];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accumulator`,variable:st(()=>Ch(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[i].tensor:t[n];if(o==null)return;const a=this.accumulatedGrads[i].variable;st(()=>{const l=yt(a,We(o));a.assign(l);const c=yt(q(te(o,os(yt(l,K.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&me(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Xv.className="Adagrad";gt(Xv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jv extends So{constructor(t,e,n,i=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],st(()=>{this.accBeta1=ae(e).variable(),this.accBeta2=ae(n).variable()}),i==null&&(this.epsilon=K.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);st(()=>{const n=Xt(1,this.accBeta1),i=Xt(1,this.accBeta2);e.forEach((r,o)=>{const a=K.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:st(()=>Ie(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:st(()=>Ie(a).variable(l))});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=yt(q(u,this.beta1),q(c,1-this.beta1)),f=yt(q(h,this.beta2),q(We(c),1-this.beta2)),p=te(d,n),g=te(f,i);u.assign(d),h.assign(f);const m=yt(q(te(p,yt(os(g),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(q(this.accBeta1,this.beta1)),this.accBeta2.assign(q(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&me(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&me(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),st(()=>{this.accBeta1.assign(jl(this.beta1,this.iterations_+1)),this.accBeta2.assign(jl(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}jv.className="Adam";gt(jv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kv extends So{constructor(t,e,n,i=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],st(()=>{this.iteration=ae(0).variable(),this.accBeta1=ae(e).variable()}),i==null&&(this.epsilon=K.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);st(()=>{const n=Xt(1,this.accBeta1),i=te(-this.learningRate,yt(q(this.iteration,this.decay),1));e.forEach((r,o)=>{const a=K.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:Ie(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:Ie(a).variable(l)});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=yt(q(u,this.beta1),q(c,1-this.beta1)),f=q(h,this.beta2),p=An(c),g=yo(f,p);u.assign(d),h.assign(g);const m=yt(q(te(i,n),te(d,yt(g,this.epsilon))),a);a.assign(m)}),this.iteration.assign(yt(this.iteration,1)),this.accBeta1.assign(q(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&me(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&me(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Kv.className="Adamax";gt(Kv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sm extends So{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Array.isArray(t)?t[i].tensor:t[n];if(r==null)return;const o=K.registeredVariables[n];st(()=>{const a=yt(q(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=rr(ae(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}sm.className="SGD";gt(sm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yv extends sm{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=ae(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=K.registeredVariables[n];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${n}/momentum`,variable:st(()=>Ie(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(t)?t[i].tensor:t[n];a!=null&&st(()=>{let l;const c=yt(q(this.m,o),a);this.useNesterov?l=yt(q(this.c,yt(a,q(c,this.m))),r):l=yt(q(this.c,c),r),o.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&me(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Yv.className="Momentum";gt(Yv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv extends So{constructor(t,e=.9,n=0,i=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=K.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=K.registeredVariables[n],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${n}/rms`,variable:st(()=>Ie(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${n}/momentum`,variable:st(()=>Ie(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${n}/mg`,variable:st(()=>Ie(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,c=this.accumulatedMoments[i].variable;st(()=>{const u=yt(q(l,this.decay),q(We(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=yt(q(h,this.decay),q(a,1-this.decay)),f=te(q(a,this.learningRate),os(Xt(u,yt(We(d),this.epsilon)))),p=yt(q(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const g=Xt(r,p);r.assign(g)}else{const h=yt(q(l,this.decay),q(We(a),1-this.decay)),d=yt(q(c,this.momentum),te(q(a,this.learningRate),os(yt(h,this.epsilon))));l.assign(h),c.assign(d);const f=Xt(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&me(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&me(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&me(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Zv.className="RMSProp";gt(Zv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Do{static sgd(t){return new sm(t)}static momentum(t,e,n=!1){return new Yv(t,e,n)}static rmsprop(t,e=.9,n=0,i=null,r=!1){return new Zv(t,e,n,i,r)}static adam(t=.001,e=.9,n=.999,i=null){return new jv(t,e,n,i)}static adadelta(t=.001,e=.95,n=null){return new qv(t,e,n)}static adamax(t=.002,e=.9,n=.999,i=null,r=0){return new Kv(t,e,n,i,r)}static adagrad(t,e=.1){return new Xv(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ul={sgd:Do.sgd,momentum:Do.momentum,adadelta:Do.adadelta,adagrad:Do.adagrad,rmsprop:Do.rmsprop,adamax:Do.adamax,adam:Do.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s())();function dT(){return new Promise(s=>EH(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jv(s,t){const e=s[0].length;s.forEach((i,r)=>{F(i.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),F(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const n=s[0];s.forEach((i,r)=>{for(let o=0;o<e;o++)F(o===t||i[o]===n[o],()=>`Error in concat${e}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function sr(s,t){const e=s[0].slice();for(let n=1;n<s.length;n++)e[t]+=s[n][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ci;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(Ci||(Ci={}));function fT(s,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<s+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(s+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${s+e.length}, but shape.rank = ${n.length}`);for(let i=1;i<e.length;++i){const r=e[i],o=n[n.length-e.length+i],a=n[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+s}] = ${r} but shape[${i+s}] = ${a}`)}else n[o]=r}return n}function pT(s){const t={FIRST_DIM_SIZE:Ci.FIRST_DIM_SIZE,VALUE_ROWIDS:Ci.VALUE_ROWIDS,ROW_LENGTHS:Ci.ROW_LENGTHS,ROW_SPLITS:Ci.ROW_SPLITS,ROW_LIMITS:Ci.ROW_LIMITS,ROW_STARTS:Ci.ROW_STARTS},e=[];for(const n of s)if(n in t)e.push(t[n]);else break;return e}function mT(s){return s.length===0?0:s[0]===Ci.FIRST_DIM_SIZE?s.length-1:s.length}function gT(s,t){if(s==null||t==null)return;const e=s.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let i=0;i<Math.min(e,n-1);++i){const r=s[i],o=t[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-s.length}] = ${r} but ragged tensor input.flatValues.shape[${i-s.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qv=30;function im(s){return s<=Qv?s:ox(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(s,t,e){const n=e*(typeof s=="number"?s:s[0]),i=t*(typeof s=="number"?s:s[1]);return[n,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kh(s,t,e,n=!0){let i=[];if(n)i=i.concat(t.slice(0)),i.push(s[0]/e),i=i.concat(s.slice(1));else{i=i.concat(s[0]);const r=t.length;for(let o=0;o<r;++o)i=i.concat([s[o+1]/t[o],t[o]]);i=i.concat(s.slice(r+1))}return i}function Ah(s,t,e=!0){const n=[];if(e){n.push(t);for(let i=t+1;i<s;++i)i<=2*t?(n.push(i),n.push(i-(t+1))):n.push(i)}else{const i=[],r=[];for(let o=1;o<s;++o)o>=t*2+1||o%2===1?r.push(o):i.push(o);n.push(...i),n.push(0),n.push(...r)}return n}function Nh(s,t,e,n=!0){const i=[];n?i.push(s[0]/e):i.push(s[0]*e);for(let r=1;r<s.length;++r)r<=t.length?n?i.push(t[r-1]*s[r]):i.push(s[r]/t[r-1]):i.push(s[r]);return i}function eb(s,t){const e=[0];for(let n=0;n<t;++n)e.push(s[n][0]);return e}function nb(s,t,e){const n=s.slice(0,1);for(let i=0;i<e;++i)n.push(s[i+1]-t[i][0]-t[i][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rm=1.7580993408473768,om=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb=.3275911,ib=.254829592,rb=-.284496736,ob=1.421413741,ab=-1.453152027,lb=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const e=new Float32Array(s.length*2);for(let n=0;n<e.length;n+=2)e[n]=s[n/2],e[n+1]=t[n/2];return e}function xT(s){const t=new Float32Array(s.length/2),e=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)t[n/2]=s[n],e[n/2]=s[n+1];return{real:t,imag:e}}function vT(s){const t=Math.ceil(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=0;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function bT(s){const t=Math.floor(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=2;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function cb(s,t){const e=s[t*2],n=s[t*2+1];return{real:e,imag:n}}function yT(s,t,e,n){s[n*2]=t,s[n*2+1]=e}function wT(s,t){const e=new Float32Array(s/2),n=new Float32Array(s/2);for(let i=0;i<Math.ceil(s/2);i++){const r=(t?2:-2)*Math.PI*(i/s);e[i]=Math.cos(r),n[i]=Math.sin(r)}return{real:e,imag:n}}function _T(s,t,e){const n=(e?2:-2)*Math.PI*(s/t),i=Math.cos(n),r=Math.sin(n);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tg="->",MH=/->/g,q1=",",X1="...";function ub(s,t){s=s.replace(/\s/g,"");const e=(s.length-s.replace(MH,"").length)/Tg.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Tg}").`);const[n,i]=s.split(Tg);F(n.indexOf(X1)===-1,()=>`The ellipsis notation ("${X1}") is not supported yet.`);const r=n.split(q1),o=r.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const f=i[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<n.length;++d){const f=n[d];a.indexOf(f)===-1&&f!==q1&&a.push(f)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const c=a.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function hb(s,t){let e=new Array(s);e.fill(-1);for(let i=0;i<t.length;++i)e[t[i]]=i;const n=[];for(let i=0;i<s;++i)e[i]===-1&&n.push(i);return e=e.filter(i=>i!==-1),{permutationIndices:e,expandDims:n}}function db(s,t,e){const n=new Array(s);for(let i=0;i<e.length;++i){const r=e[i].shape;for(let o=0;o<t[i].length;++o)n[t[i][o]]===void 0?n[t[i][o]]=r[o]:F(n[t[i][o]]===r[o],()=>`Expected dimension ${n[t[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function fb(s,t){const e=s,n=[];let i=0;s.length===0&&e.push(-1),i=s.length+1;for(let o=0;o<i;++o)n.push([]);const r=[];for(let o=0;o<e.length;++o){const a=e[o],l=kH(t,a);for(const c of l)r.indexOf(c)===-1&&(n[o].push(c),r.push(c))}return{path:e,steps:n}}function pb(s){return s.every((t,e)=>t===e)}function kH(s,t){const e=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function mb(s,t,e=0){let n=[];if(typeof t=="number")F(s.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(s.shape[e]/t);else{const i=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);F(i<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const o=t.reduce((a,l)=>l>0?a+l:a);t[r]=s.shape[e]-o}F(s.shape[e]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function CT(s,t){return`indices(${s}, 0) is invalid: ${t} < 0`}function IT(s,t,e){return`indices(${s}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(s,t){return`only one output dimension may be -1, not both ${s} and ${t}`}function ET(s,t){return`size ${s} must be non-negative, not ${t}`}function MT(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function kT(s,t){const e=ut(s),n=ut(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${t}`}function AT(s,t){const e=ut(s),n=ut(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(){return"segment ids must be >= 0"}function NT(){return"segment ids are not increasing"}function RT(s,t){return`Segment id ${s} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function $T(s,t,e){return`Bad: indices[${s}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(s,t){let e=!1,n;for(s<=Qv?(n=s,e=!0):n=ox(s,Math.floor(Math.sqrt(s)));!e;)n>t||n===s?e=!0:n=ox(s,n+1);return n}function FT(s,t,e){const n=[],i=s.length;for(let r=0;r<i;r++)r!==t?n.push(s[r]):n.push(e);return n}function gb(s,t,e,n){const i=t.shape.length,r=s.shape.length;if(n!==0&&(n<-i||n>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${n}`);if(n<0&&(n+=i),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let h=0;h<n;++h)if(s.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${s.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=s.shape[e],a=[];let l=1,c=1,u=1;for(let h=0;h<n;++h)a.push(s.shape[h]),l*=s.shape[h];for(let h=n;h<e;h++)a.push(s.shape[h]),c*=s.shape[h];for(let h=n;h<i;h++)a.push(t.shape[h]);for(let h=e+1;h<r;h++)a.push(s.shape[h]),u*=s.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const AH=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:DT,computeOutShape:FT,collectGatherOpShapeInfo:gb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ca(s){try{return s.map(t=>no(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function LT(s){return s.map(t=>Jr(t))}const NH=Object.freeze(Object.defineProperty({__proto__:null,slice_util:f4,segment_util:AH,fromUint8ToStringArray:Ca,fromStringArrayToUint8:LT,upcastType:Ts,axesAreInnerMostDims:Cv,combineLocations:DI,computeOutAndReduceShapes:Ln,expandShapeToKeepDim:un,assertAxesAreInnerMostDims:Xn,getAxesPermutation:nn,getUndoAxesPermutation:bo,getInnerMostAxes:hn,getBroadcastDims:Xl,getReductionAxes:Tn,assertAndGetBroadcastShape:he,assertParamsConsistent:Jv,computeOutShape:sr,computeDilation2DInfo:Sh,computePool2DInfo:pi,computePool3DInfo:Dr,computeConv2DInfo:qn,computeConv3DInfo:vo,computeDefaultPad:xv,tupleValuesAreOne:ya,eitherStridesOrDilationsAreOne:Qn,convertConv2DDataFormat:Fr,checkPadOnDimRoundingMode:xs,getFusedDyActivation:Ov,getFusedBiasGradient:zv,applyActivation:Bv,shouldFuse:Uv,get RowPartitionType(){return Ci},combineRaggedTensorToTensorShapes:fT,getRowPartitionTypesHelper:pT,getRaggedRank:mT,validateDefaultValueShape:gT,PARALLELIZE_THRESHOLD:Qv,computeOptimalWindowSize:im,getImageCenter:tb,getReshaped:kh,getPermuted:Ah,getReshapedPermuted:Nh,getSliceBeginCoords:eb,getSliceSize:nb,prepareAndValidate:hv,validateUpdateShape:vI,validateInput:l4,calculateShapes:_h,SELU_SCALEALPHA:rm,SELU_SCALE:om,ERF_P:sb,ERF_A1:ib,ERF_A2:rb,ERF_A3:ob,ERF_A4:ab,ERF_A5:lb,warn:Ls,log:Xz,mergeRealAndImagArrays:Rr,splitRealAndImagArrays:xT,complexWithEvenIndex:vT,complexWithOddIndex:bT,getComplexWithIndex:cb,assignToTypedArray:yT,exponents:wT,exponent:_T,decodeEinsumEquation:ub,getEinsumPermutation:hb,checkEinsumDimSizes:db,getEinsumComputePath:fb,isIdentityPermutation:pb,prepareSplitSize:mb,getSparseFillEmptyRowsIndicesDenseShapeMismatch:ST,getSparseFillEmptyRowsNegativeIndexErrorMessage:CT,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:IT,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:TT,getSparseReshapeNegativeOutputDimErrorMessage:ET,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:MT,getSparseReshapeInputOutputMultipleErrorMessage:kT,getSparseReshapeInputOutputMismatchErrorMessage:AT,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Tx,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:NT,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:RT,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:$T},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT={kernelName:qf,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,Mh(Nt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH={kernelName:Eu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=We(Nt(e,"float32")),i=os(Xt(ae(1),n));return en(te(s,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:Mu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=os(Xt(We(Nt(e,"float32")),1));return te(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DH={kernelName:uc,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{let a=s;const l=Tn(e.shape,i);return l.length>0&&(a=qt(a,l)),Q(a,e.shape)},b:()=>{let a=s;const l=Tn(n.shape,i);return l.length>0&&(a=qt(a,l)),Q(a,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH={kernelName:f0,saveAllInputs:!0,gradFunc:(s,t)=>{const e={};return t.forEach((n,i)=>{e[i]=()=>s.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:Xf,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Ie(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH={kernelName:jf,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Ie(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH={kernelName:ku,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,os(Xt(ae(1),We(Nt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH={kernelName:Au,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=os(yt(ae(1),We(Nt(e,"float32"))));return te(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH={kernelName:$u,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{const a=yt(We(e),We(n));let l=q(s,te(n,a));const c=Tn(e.shape,i);return c.length>0&&(l=qt(l,c)),Q(l,e.shape)},b:()=>{const a=yt(We(e),We(n));let l=en(q(s,te(e,a)));const c=Tn(n.shape,i);return c.length>0&&(l=qt(l,c)),Q(l,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:Nu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,yt(We(Nt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:Ru,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,Xt(ae(1),We(Nt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(s,t,e,n,i,r){const o=z(s,"dy","avgPool3dGrad"),a=z(t,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),F(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),F(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),xs("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:e,strides:n,pad:i,dimRoundingMode:r},f=K.runKernel(x0,h,d);return u?Q(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const GH=Z({avgPool3dGrad_:WH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:Yf,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:a}=e;return{x:()=>GH(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(s,t,e,n,i){const r=z(s,"dy","avgPoolGrad"),o=z(t,"input","avgPoolGrad");F(o.rank===r.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${r.rank})`);let a=o,l=r,c=!1;o.rank===3&&(c=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),F(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),F(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:e,strides:n,pad:i},d=K.runKernel(g0,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const XH=Z({avgPoolGrad_:qH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:Kf,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o}=e;return{x:()=>XH(s,n,i,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH={kernelName:Zf,inputsToSave:["a","b"],gradFunc:(s,t,e)=>{const[n,i]=t,{transposeA:r,transposeB:o}=e;return!r&&!o?{a:()=>ke(s,i,!1,!0),b:()=>ke(n,s,!0,!1)}:!r&&o?{a:()=>ke(s,i,!1,!1),b:()=>ke(s,n,!0,!1)}:r&&!o?{a:()=>ke(i,s,!1,!0),b:()=>ke(n,s,!1,!1)}:{a:()=>ke(i,s,!0,!0),b:()=>ke(s,n,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH={kernelName:Jf,gradFunc:(s,t,e)=>{const{blockShape:n,crops:i}=e;return{x:()=>Rv(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:Gz,gradFunc:(s,t,e)=>{const n=e,i=n.inputShape,r=n.shape,o=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])o[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>qt(s,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH={kernelName:Du,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:Fu,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:Lu,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{clipValueMin:i,clipValueMax:r}=e;return{x:()=>Ms(Nr(Da(n,i),fc(n,r)),s,Ie(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5={kernelName:Qf,inputsToSave:["x"],gradFunc:PT.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5={kernelName:tp,saveAllInputs:!0,gradFunc:(s,t,e)=>{const n=t.map(l=>l.shape),{axis:i}=e,r=xe(i,t[0].shape)[0],o=n.map(l=>l[r]);return Os(s,o,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5={kernelName:ep,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{dilations:r,strides:o,pad:a,dataFormat:l}=e;return F(ya(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>wv(n.shape,s,i,o,a,l),filter:()=>Pv(n,s,i.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5={kernelName:np,inputsToSave:["dy","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{strides:r,pad:o,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>wa(s,i,r,o,a,1,l),filter:()=>Pv(s,n,i.shape,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(s,t,e,n,i){let r=s;s.rank===4&&(r=Q(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let o=t;o.rank===4&&(o=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),F(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),F(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),F(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),F(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:r,dy:o},l={strides:n,pad:i,filterShape:e};return K.runKernel(w0,a,l)}const o5=Z({conv3DBackpropFilter_:r5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:sp,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r}=e;F(ya(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);const[o,a]=t;return{x:()=>NI(o.shape,s,a,i,r),filter:()=>o5(o,s,a.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:Pu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(en(tT(Nt(e,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:Ou,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(eT(Nt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:ip,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i,exclusive:r,reverse:o}=e;return{x:()=>{const a=nn([i],n.rank);let l=$I(s,i,r,!o);return a!=null&&(l=Se(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5={kernelName:rp,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r,dimRoundingMode:o}=e,a=n==null?[1,1]:n;F(ya(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return F(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),F(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),F(Qn(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),xs("depthwiseConv2d",r,o),{x:()=>mG(l.shape,s,c,i,r,a,o),filter:()=>fG(l,s,c.shape,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:op,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,r={x:n,filter:i,dy:s},o={x:n,filter:i,dy:s};return{x:()=>K.runKernel(ax,r,e),filter:()=>K.runKernel(lx,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5={kernelName:Bu,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t,n={dy:s,y:e};return{x:()=>K.runKernel(k0,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:Uu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=q(ci(en(We(e))),2/Math.sqrt(Math.PI));return{x:()=>q(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={kernelName:Vu,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:lp,inputsToSave:["input"],gradFunc:(s,t)=>{const[e]=t;return{input:()=>Q(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5={kernelName:Wu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,ci(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5={kernelName:Gu,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5={kernelName:Hu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{const a=te(s,Nt(n,"float32")),l=Tn(e.shape,i);return l.length>0?Q(qt(a,l),e.shape):a},b:()=>{let a=q(s,Nt(e,"float32"));const l=Tn(n.shape,i);l.length>0&&(a=Q(qt(a,l),n.shape));const c=We(n);return en(te(a,Nt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5={kernelName:cp,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,e)=>{const{varianceEpsilon:n}=e,[i,r,o,a]=t,l=a==null?ae(1):a,c=Tn(r.shape,i.shape),u=[];if(r.rank===1){for(let y=0;y<i.shape.length-1;++y)u.push(i.shape[y]);u.push(1)}const h=Xt(i,r),d=q(s,l),f=ZI(yt(o,ae(n))),p=q(q(q(f,f),f),ae(-.5));return{x:()=>r.rank===1?Q(q(q(s,ki(Q(f,[1,1,1,r.shape[0]]),u)),l),i.shape):Q(q(q(s,f),l),i.shape),mean:()=>{let y=q(q(f,ae(-1)),d);return r.rank===1&&(y=qt(y,c)),Q(y,r.shape)},variance:()=>{let y=q(q(p,h),d);return r.rank===1&&(y=qt(y,c)),Q(y,r.shape)},scale:()=>{const y=q(h,f);let w=q(s,y);return r.rank===1&&(w=qt(w,c)),Q(w,r.shape)},offset:()=>{let y=s;return r.rank===1&&(y=qt(y,c)),Q(y,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:up,inputsToSave:["x","indices"],gradFunc:(s,t,e)=>{const[n,i]=t,{axis:r}=e,o=xe(r,n.shape)[0];return{x:()=>{const l=n.shape,c=i.size,u=l.slice(0,o),h=u.length,d=l.slice(r,l.length).slice(1),f=d.length,p=j1(0,h),g=j1(h+1,h+1+f),m=K1([u,[c],d]),x=Q(s,m),v=Q(i,[c]),b=K1([[h],p,g]),y=Se(x,b);let w=aT(y,v,n.shape[o]);const S=bo(b);return w=Se(w,S),w},indices:()=>i}}};function j1(s,t){const e=[];for(let n=s;n<t;++n)e.push(n);return e}function K1(s){const t=[];for(let e=0;e<s.length;++e)for(let n=0;n<s[e].length;++n)t.push(s[e][n]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:qu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>Ie(e),b:()=>Ie(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:Xu,gradFunc:s=>({x:()=>Nt(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:ju,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5={kernelName:Ku,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:Yu,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5={kernelName:dp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{alpha:i}=e,r=Vs(n,0);return{x:()=>Ms(r,s,q(s,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:Ju,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,yt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5={kernelName:Zu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,Nt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5={kernelName:Hz,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;return{logits:()=>{const o=ci(n);return Xt(s,q(qt(s,i,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(s,t,e,n=5,i=1,r=1,o=.5){const a={x:s,y:t,dy:e},l={depthRadius:n,bias:i,alpha:r,beta:o};return K.runKernel(F0,a,l)}const R5=Z({localResponseNormalizationBackprop_:N5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5={kernelName:vp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{depthRadius:r,bias:o,alpha:a,beta:l}=e;return{x:()=>R5(n,i,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(s,t,e,n){return t.rank<e.rank&&(t=Q(t,un(t.shape,n))),s.rank<e.rank&&(s=Q(s,un(s.shape,n))),{x:()=>q(s,Nt(or(e,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1={kernelName:bp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{reductionIndices:i}=n,r=t[0],o=t[1],a=xe(i,r.shape),l=OT(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5={kernelName:Qu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>q(s,Nt(Da(e,n),"float32")),b:()=>q(s,Nt(PI(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(s,t,e,n,i,r,o){const a=z(s,"dy","maxPool3dGrad"),l=z(t,"input","maxPool3dGrad"),c=z(e,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=Q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=Q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Q(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),F(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),xs("maxPool3dGrad",r,o);const p={dy:u,input:h,output:d},g={filterSize:n,strides:i,pad:r,dimRoundingMode:o},m=K.runKernel(P0,p,g);return f?Q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const L5=Z({maxPool3dGrad_:F5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5={kernelName:wp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=e;return{x:()=>L5(s,n,i,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(s,t,e,n,i,r,o){const a=z(s,"dy","maxPoolGrad"),l=z(t,"input","maxPoolGrad"),c=z(e,"output","maxPoolGrad");F(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),F(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),F(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),xs("maxPoolGrad",r,o);const u={dy:a,input:l,output:c},h={filterSize:n,strides:i,pad:r,dimRoundingMode:o};return K.runKernel(L0,u,h)}const z5=Z({maxPoolGrad_:O5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:yp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>z5(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5={kernelName:_p,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e,r=xe(i,n.shape),a=Ln(n.shape,r)[1],l=ut(a);return{x:()=>{const u=n.shape.slice();r.forEach(f=>{u[f]=1});const h=Q(s,u);return te(q(h,wo(n.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5={kernelName:Sp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{axis:i}=n,[r,o]=t,a=xe(i,r.shape),l=OT(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5={kernelName:th,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>q(s,Nt(fc(e,n),"float32")),b:()=>q(s,Nt(Vs(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5={kernelName:Cp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>Oe(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:eh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{const a=Tn(e.shape,i);return a.length>0?Q(qt(s,a),e.shape):s},b:()=>{const a=q(s,en(tm(te(e,n)))),l=Tn(n.shape,i);return l.length>0?Q(qt(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5={kernelName:nh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{const a=q(s,Nt(n,"float32")),l=Tn(e.shape,i);return l.length>0?Q(qt(a,l),e.shape):a},b:()=>{const a=q(s,Nt(e,"float32")),l=Tn(n.shape,i);return l.length>0?Q(qt(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:Ip,gradFunc:s=>({x:()=>en(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5={kernelName:Mp,inputsToSave:["indices"],gradFunc:(s,t)=>{const e=t[0];return{indices:()=>Rn(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5={kernelName:Ep,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5={kernelName:kp,saveAllInputs:!0,gradFunc:(s,t,e)=>{const{axis:n}=e;return Kl(s,n).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1={kernelName:Ap,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>Oe(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5={kernelName:sh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[e,n,i]=t,r=e,o=n,a=he(r.shape,o.shape);return{a:()=>{const u=Nt(o,"float32");let h=q(s,q(u,jl(r,Xt(u,ae(1)))));const d=Tn(r.shape,a);return d.length>0&&(h=qt(h,d)),Q(h,r.shape)},b:()=>{const u=Vs(r,0),h=Ms(u,ui(r),Ie(r));let d=q(s,q(i,h));const f=Tn(o.shape,a);return f.length>0&&(d=qt(d,f)),Q(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5={kernelName:Np,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[e,n]=t,i=Vs(e,0);return{x:()=>Ms(i,s,q(s,n)),alpha:()=>{let r=Ms(i,Ie(s),q(s,e));const o=Tn(n.shape,s.shape);return o.length>0&&(r=qt(r,o)),Q(r,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(s,t,e){const n=s.shape.slice();n[e]=1;const i=Q(t,n),r=Cx(s,e,!0,!1),o=Cx(s,e,!0,!0),a=q(r,o);return q(i,a)}function t6(s,t,e){const n=s.shape.length,i=n-e.length,r=nn(e,n);let o=s;r!=null&&(o=Se(s,r));const a=o.shape.slice(),c=a.splice(n-e.length,e.length).reduce((d,f)=>d*f,1);a.push(c);const u=o.reshape(a);let h=Q5(u,t,i);if(h=h.reshape(o.shape),r!=null){const d=bo(r);h=Se(h,d)}return h}const e6={kernelName:Rp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;let r=[];return i==null?r=n.shape.map((o,a)=>a):typeof i=="number"?r=[i]:r=i,{x:()=>t6(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:zu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{const a=te(s,Nt(n,"float32")),l=Tn(e.shape,i);return l.length>0?Q(qt(a,l),e.shape):a},b:()=>{let a=q(s,Nt(e,"float32"));const l=Tn(n.shape,i);l.length>0&&(a=Q(qt(a,l),n.shape));const c=We(n);return en(te(a,Nt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:ih,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,en(We(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:oh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=q(fc(e,6),Mh(e));return{x:()=>q(s,Nt(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:rh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,Nt(Mh(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={kernelName:$p,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Q(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6={kernelName:Fp,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>K.runKernel(G0,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:Dp,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>K.runKernel(W0,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:Lp,gradFunc:(s,t,e)=>{const{dims:n}=e,i=xe(n,s.shape);return{x:()=>Sa(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:ah,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6={kernelName:lh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>en(te(s,q(jl(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6={kernelName:Pp,inputsToSave:["condition"],gradFunc:(s,t)=>{const[e]=t;return{condition:()=>Nt(Ie(e),"float32"),t:()=>q(s,Nt(e,s.dtype)),e:()=>q(s,Nt(Mv(e),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6={kernelName:ch,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=Vs(e,ae(0)),i=ae(rm),r=ae(om),o=q(s,r),a=q(q(s,i),ci(Nt(e,"float32")));return Ms(n,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:fh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,q(e,Xt(ae(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6={kernelName:dh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6={kernelName:uh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(_v(Nt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:hh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(RI(Nt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:Op,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{begin:i,size:r}=e,o=n.shape,[a,l]=Yp(n,i,r),c=[];for(let u=0;u<s.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>Nv(s,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:Vp,outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{dim:i}=e,r=!0,o=q(s,n);return{logits:()=>Xt(o,q(qt(o,[i],r),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:ph,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,dc(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1={kernelName:Bp,gradFunc:(s,t,e)=>{const{blockShape:n,paddings:i}=e;return{x:()=>yv(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q1={kernelName:Up,gradFunc:(s,t,e)=>{const{axis:n}=e;return{x:()=>Zn(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6={kernelName:mh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,q(os(Nt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:K0,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,q(Nt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:gh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(2);return{a:()=>q(s,q(i,Xt(e,n))),b:()=>q(s,q(i,Xt(n,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6={kernelName:wh,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:xh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=he(e.shape,n.shape);return{a:()=>{let a=s;const l=Tn(e.shape,i);return l.length>0&&(a=qt(a,l)),Q(a,e.shape)},b:()=>{let a=s;const l=Tn(n.shape,i);return l.length>0&&(a=qt(a,l)),Q(en(a),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6={kernelName:zp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,i=n.shape.slice(),{axis:r}=e;xe(r,n.shape).forEach(c=>{i[c]=1});const a=Q(s,i),l=q(a,wo(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6={kernelName:vh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>te(s,We(_v(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:bh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(Xt(ae(1),We(e)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:yh,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{reps:i}=e;return{x:()=>{let o=Ie(n);if(n.rank===1)for(let a=0;a<i[0];++a)o=yt(o,Oe(s,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)o=yt(o,Oe(s,[a*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)o=yt(o,Oe(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)for(let u=0;u<i[3];++u)o=yt(o,Oe(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2],u*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:kl,gradFunc:(s,t,e)=>{const n=e,{perm:i}=n,r=bo(i);return{x:()=>Se(s,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:Wp,gradFunc:(s,t,e)=>{const n=e,{axis:i}=n;return{value:()=>io(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:Gp,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>$6(s,e)}}};function $6(s,t){const e=yo(t,Ie(t)),n=Iv(s,e);let i=Da(t,ae(0,"int32"));const r=n.rank-i.rank;for(let a=0;a<r;++a)i=_s(i,a+1);i=Nr(i,wo(n.shape,"bool"));const o=Ie(n);return Ms(i,n,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:Hp,gradFunc:s=>({x:()=>Ie(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6=[PT,RH,$H,DH,FH,LH,PH,OH,zH,BH,UH,VH,HH,jH,KH,YH,ZH,JH,QH,t5,e5,n5,i5,s5,a5,l5,c5,u5,h5,d5,n6,f5,p5,m5,g5,x5,b5,v5,y5,w5,_5,S5,C5,I5,T5,E5,M5,k5,A5,$5,Y1,Y1,D5,P5,B5,U5,V5,W5,G5,H5,q5,X5,j5,K5,Y5,Z1,Z1,Z5,J5,e6,s6,i6,r6,o6,a6,l6,c6,u6,h6,d6,f6,p6,m6,g6,x6,v6,b6,y6,J1,J1,Q1,Q1,w6,S6,_6,C6,I6,T6,E6,M6,k6,A6,N6,R6,D6];for(const s of F6)jz(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.abs=function(){return this.throwIfDisposed(),An(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.acos=function(){return this.throwIfDisposed(),y4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.acosh=function(){return this.throwIfDisposed(),_4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.add=function(s){return this.throwIfDisposed(),yt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.all=function(s,t){return this.throwIfDisposed(),MI(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.any=function(s,t){return this.throwIfDisposed(),_x(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.argMax=function(s){return this.throwIfDisposed(),cu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.argMin=function(s){return this.throwIfDisposed(),E4(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.asScalar=function(){return this.throwIfDisposed(),F(this.size===1,()=>"The array must have only 1 element."),Q(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.asType=function(s){return this.throwIfDisposed(),Nt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.as1D=function(){return this.throwIfDisposed(),Q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.as2D=function(s,t){return this.throwIfDisposed(),Q(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.as3D=function(s,t,e){return this.throwIfDisposed(),Q(this,[s,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.as4D=function(s,t,e,n){return this.throwIfDisposed(),Q(this,[s,t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.as5D=function(s,t,e,n,i){return this.throwIfDisposed(),Q(this,[s,t,e,n,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.asin=function(){return this.throwIfDisposed(),k4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.asinh=function(){return this.throwIfDisposed(),N4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.atan=function(){return this.throwIfDisposed(),$4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.atan2=function(s){return this.throwIfDisposed(),F4(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.atanh=function(){return this.throwIfDisposed(),P4(this)};lt().prototype.avgPool=function(s,t,e,n){return this.throwIfDisposed(),vv(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),yv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.batchNorm=function(s,t,e,n,i){return this.throwIfDisposed(),Zp(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.broadcastTo=function(s){return this.throwIfDisposed(),Zc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.cast=function(s){return this.throwIfDisposed(),Nt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.ceil=function(){return this.throwIfDisposed(),cU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),zs(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof Ye&&(s=[s]),Zn([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.conv1d=function(s,t,e,n,i,r){return this.throwIfDisposed(),kI(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.conv2dTranspose=function(s,t,e,n,i){return this.throwIfDisposed(),AI(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.conv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),wa(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.cos=function(){return this.throwIfDisposed(),_v(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.cosh=function(){return this.throwIfDisposed(),RI(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.cumprod=function(s,t,e){return this.throwIfDisposed(),Cx(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.cumsum=function(s,t,e){return this.throwIfDisposed(),$I(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),DU(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.depthwiseConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),Sv(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.dilation2d=function(s,t,e,n,i){return this.throwIfDisposed(),PU(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.divNoNan=function(s){return this.throwIfDisposed(),VU(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.div=function(s){return this.throwIfDisposed(),te(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.dot=function(s){return this.throwIfDisposed(),GU(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.elu=function(){return this.throwIfDisposed(),Jp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.equal=function(s){return this.throwIfDisposed(),or(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.erf=function(){return this.throwIfDisposed(),XU(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.euclideanNorm=function(s,t){return this.throwIfDisposed(),nV(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.exp=function(){return this.throwIfDisposed(),ci(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.expandDims=function(s){return this.throwIfDisposed(),_s(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.expm1=function(){return this.throwIfDisposed(),oV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.fft=function(){return this.throwIfDisposed(),sT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.flatten=function(){return this.throwIfDisposed(),Q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.floor=function(){return this.throwIfDisposed(),tm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.floorDiv=function(s){return this.throwIfDisposed(),EI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.gather=function(s,t){return this.throwIfDisposed(),Iv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.greaterEqual=function(s){return this.throwIfDisposed(),Da(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.greater=function(s){return this.throwIfDisposed(),Vs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.ifft=function(){return this.throwIfDisposed(),Ix(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.irfft=function(){return this.throwIfDisposed(),BW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.isFinite=function(){return this.throwIfDisposed(),pV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.isInf=function(){return this.throwIfDisposed(),gV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.isNaN=function(){return this.throwIfDisposed(),vV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.leakyRelu=function(s){return this.throwIfDisposed(),Tv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.lessEqual=function(s){return this.throwIfDisposed(),fc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.less=function(s){return this.throwIfDisposed(),PI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.localResponseNormalization=function(s,t,e,n){return this.throwIfDisposed(),SV(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logSigmoid=function(){return this.throwIfDisposed(),kV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logSoftmax=function(s){return this.throwIfDisposed(),OI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),zI(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.log=function(){return this.throwIfDisposed(),ui(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.log1p=function(){return this.throwIfDisposed(),Ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logicalAnd=function(s){return this.throwIfDisposed(),Nr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logicalNot=function(){return this.throwIfDisposed(),Mv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logicalOr=function(s){return this.throwIfDisposed(),BI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.logicalXor=function(s){return this.throwIfDisposed(),PV(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.matMul=function(s,t,e){return this.throwIfDisposed(),ke(this,s,t,e)};lt().prototype.maxPool=function(s,t,e,n){return this.throwIfDisposed(),kv(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.max=function(s,t){return this.throwIfDisposed(),Ni(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.maximum=function(s){return this.throwIfDisposed(),yo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.mean=function(s,t){return this.throwIfDisposed(),ln(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.min=function(s,t){return this.throwIfDisposed(),hf(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.minimum=function(s){return this.throwIfDisposed(),em(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),HV(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.mod=function(s){return this.throwIfDisposed(),XV(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.mul=function(s){return this.throwIfDisposed(),q(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.neg=function(){return this.throwIfDisposed(),en(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.norm=function(s,t,e){return this.throwIfDisposed(),Qp(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.notEqual=function(s){return this.throwIfDisposed(),uu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.oneHot=function(s,t=1,e=0){return this.throwIfDisposed(),gI(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.onesLike=function(){return this.throwIfDisposed(),hi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.pad=function(s,t){return this.throwIfDisposed(),Nv(this,s,t)};lt().prototype.pool=function(s,t,e,n,i,r){return this.throwIfDisposed(),nW(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.pow=function(s){return this.throwIfDisposed(),jl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.prelu=function(s){return this.throwIfDisposed(),$v(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.prod=function(s,t){return this.throwIfDisposed(),rW(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.reciprocal=function(){return this.throwIfDisposed(),yW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.relu=function(){return this.throwIfDisposed(),Lr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.relu6=function(){return this.throwIfDisposed(),KI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.reshapeAs=function(s){return this.throwIfDisposed(),Q(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.reshape=function(s){return this.throwIfDisposed(),Q(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.resizeBilinear=function(s,t,e){return this.throwIfDisposed(),uT(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.resizeNearestNeighbor=function(s,t,e){return this.throwIfDisposed(),hT(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.reverse=function(s){return this.throwIfDisposed(),Sa(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.rfft=function(){return this.throwIfDisposed(),iT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.round=function(){return this.throwIfDisposed(),YI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.rsqrt=function(){return this.throwIfDisposed(),ZI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.selu=function(){return this.throwIfDisposed(),JI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.separableConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),QI(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sigmoid=function(){return this.throwIfDisposed(),dc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sign=function(){return this.throwIfDisposed(),kW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sin=function(){return this.throwIfDisposed(),tT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sinh=function(){return this.throwIfDisposed(),eT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.slice=function(s,t){return this.throwIfDisposed(),Oe(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.softmax=function(s){return this.throwIfDisposed(),Lv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.softplus=function(){return this.throwIfDisposed(),Ih(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),Rv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.split=function(s,t){return this.throwIfDisposed(),Os(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sqrt=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.square=function(){return this.throwIfDisposed(),We(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.squaredDifference=function(s){return this.throwIfDisposed(),rT(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.squeeze=function(s){return this.throwIfDisposed(),Eh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.stack=function(s,t){this.throwIfDisposed();const e=s instanceof Ye?[this,s]:[this,...s];return io(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.step=function(s){return this.throwIfDisposed(),Mh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.stridedSlice=function(s,t,e,n,i,r,o,a){return this.throwIfDisposed(),jW(this,s,t,e,n,i,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sub=function(s){return this.throwIfDisposed(),Xt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.sum=function(s,t){return this.throwIfDisposed(),qt(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.tan=function(){return this.throwIfDisposed(),YW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.tanh=function(){return this.throwIfDisposed(),bv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.tile=function(s){return this.throwIfDisposed(),ki(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.toBool=function(){return this.throwIfDisposed(),Nt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.toFloat=function(){return this.throwIfDisposed(),Nt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.toInt=function(){return this.throwIfDisposed(),Nt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.topk=function(s,t){return this.throwIfDisposed(),JW(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.transpose=function(s){return this.throwIfDisposed(),Se(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.unique=function(s){return this.throwIfDisposed(),eG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),aT(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.unstack=function(s){return this.throwIfDisposed(),Kl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.where=function(s,t){return this.throwIfDisposed(),Ms(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lt().prototype.zerosLike=function(){return this.throwIfDisposed(),Ie(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zi extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zi.prototype)}}class oi extends Error{constructor(t){super(t),Object.setPrototypeOf(this,oi.prototype)}}class j extends Error{constructor(t){super(t),Object.setPrototypeOf(this,j.prototype)}}class de extends Error{constructor(t){super(t),Object.setPrototypeOf(this,de.prototype)}}class xb extends Error{constructor(t){super(t),Object.setPrototypeOf(this,xb.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zT{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ia(s,t){if(Array.isArray(s)){let e=[];for(let n=0;n<t;n++)e=e.concat(s);return e}else{const e=new Array(t);return e.fill(s),e}}function Ji(s,t){if(!s)throw new xb(t)}function t_(s,t){let e=0;for(const n of s)n===t&&e++;return e}function ds(s){return s.length===1?s[0]:s}function qe(s){return Array.isArray(s)?s:[s]}function Sr(s){const e=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Wo(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Xs={};function vb(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function Ex(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>Ex(t));else{const t=Object.keys(s);for(const e of t){const n=s[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?s[e]=n.value:Ex(n))}}}function Rh(s,t={},e={},n="object",i=!1){if(typeof s=="string"){const r=s;let o;if(r in e)o=e[r];else if(r in Xs)o=Xs[r];else if(o=t[r],o==null)throw new j(`Unknown ${n}: ${s}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const r=s;if(r.className==null||r.config==null)throw new j(`${n}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const o=r.className;let a,l;if(o in e?[a,l]=e[o]:o in Xs?[a,l]=Xs.className:o in t&&([a,l]=t[o]),a==null)throw new j(`Unknown ${n}: ${o}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(Xs))c[f]=Xs[f];for(const f of Object.keys(e))c[f]=e[f];const u=r.config;u.customObjects=c;const h=Object.assign({},Xs);for(const f of Object.keys(e))Xs[f]=e[f];Ex(r.config);const d=l(a,r.config,e,i);return Xs=Object.assign({},h),d}else{const c=Object.assign({},Xs);for(const h of Object.keys(e))Xs[h]=e[h];const u=new a(r.config);return Xs=Object.assign({},c),u}}}function L6(s,t){return s<t?-1:s>t?1:0}function Ad(s,t){return-1*L6(s,t)}function Qr(s){if(s==null)return s;const t=[];for(const e of s)t.indexOf(e)===-1&&t.push(e);return t}function P6(s){if(s==null)throw new j(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function La(s,t,e){if(e!=null&&s.indexOf(e)<0)throw new j(`${e} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function bb(s,t,e=0,n=1/0){return Ji(e>=0),Ji(n>=e),Array.isArray(s)&&s.length>=e&&s.length<=n&&s.every(i=>typeof i===t)}function $n(s,t){Array.isArray(s)?(F(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((e,n)=>$n(e,`element ${n+1} of ${t}`))):F(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${BT(s)}.`)}function BT(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>BT(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function O6(s,t,e){let n=e!=null?e():Kn(),i;return(...o)=>{const a=e!=null?e():Kn();return a-n<t||(n=a,i=s(...o)),i}}function UT(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let z6=0;function VT(){return z6++}const Nd={};function am(s=""){return s in Nd||(Nd[s]=0),Nd[s]+=1,s+Nd[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const B6=["channelsFirst","channelsLast"],U6=["nearest","bilinear"],V6=["valid","same","causal"],W6=["max","avg"],G6=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const hl=new Map;function dn(s){La(B6,"DataFormat",s)}function H6(s){La(U6,"InterpolationFormat",s)}function Ws(s){La(V6,"PaddingMode",s)}function WT(s){La(W6,"PoolMode",s)}const Jc=[],e_="/";function ia(s,t){Jc.push(s);try{const e=t();return Jc.pop(),e}catch(e){throw Jc.pop(),e}}function q6(){return Jc.length===0?"":Jc.join(e_)+e_}function GT(s){if(!qT(s))throw new Error("Not a valid tensor name: '"+s+"'");return q6()+s}function HT(s){if(!qT(s))throw new Error("Not a valid tensor name: '"+s+"'");hl.has(s)||hl.set(s,0);const t=hl.get(s);if(hl.set(s,hl.get(s)+1),t>0){const e=`${s}_${t}`;return hl.set(e,1),e}else return s}const X6=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function qT(s){return!!s.match(X6)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function j6(s){return s===parseInt(s.toString(),10)}function to(s,t,e){t==null&&(t=0),e==null&&(e=s.length);let n=1;for(let i=t;i<e;++i)n*=s[i];return n}function Yl(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n<t&&(t=n)}return t}function ro(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n>t&&(t=n)}return t}function Li(s,t){if(t<s)throw new j(`end (${t}) < begin (${s}) is forbidden.`);const e=[];for(let n=s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Eg;function wn(){return Eg==null&&(Eg=s4().epsilon()),Eg}function Pi(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pa(s,t){return Nt(s,t)}function $h(s,t=-1){const e=s.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),Q(s,e)}function K6(s,t){return st(()=>{if(s.shape.length!==2)throw new j(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const e=$h(s,1);return Mx(e,[1,t,1])})}function Y6(s){const t=[to(s.shape)];return Q(s,t)}function Z6(s){if(s.rank<=1)throw new j(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],to(s.shape,1)];return Q(s,t)}function ra(s,t,e){return st(()=>{switch(s.rank){case 1:return Dv(s,t,e);case 2:return nT(s,[t,0],[e,s.shape[1]]);case 3:return Fv(s,[t,0,0],[e,s.shape[1],s.shape[2]]);case 4:return ff(s,[t,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3]]);case 5:return Oe(s,[t,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return Oe(s,[t,0,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new j(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Mg(s,t,e){return st(()=>{switch(s.rank){case 1:return Dv(s,t,e);case 2:return nT(s,[0,t],[s.shape[0],e]);case 3:return Fv(s,[0,0,t],[s.shape[0],s.shape[1],e]);case 4:return ff(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],e]);default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Rd(s,t,e,n){return st(()=>{switch(s.rank){case 1:return Dv(s,t,e);case 2:switch(n){case 1:return ra(s,t,e);case 2:return Mg(s,t,e);default:throw new j(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return ra(s,t,e);case 2:return Fv(s,[0,t,0],[s.shape[0],e,s.shape[2]]);case 3:return Mg(s,t,e);default:throw new j(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return ra(s,t,e);case 2:return ff(s,[0,t,0,0],[s.shape[0],e,s.shape[2],s.shape[3]]);case 3:return ff(s,[0,0,t,0],[s.shape[0],s.shape[1],e,s.shape[3]]);case 4:return Mg(s,t,e);default:throw new j(`The axis is not within the rank of the tensor ${n}`)}default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function yb(s,t=-1){let e;return t<0&&(e=s[0].rank,e!==0?t=e:t=0),t===s[0].rank&&(t=-1),Zn(s,t)}function n_(s,t){switch(s.rank){case 1:return dU([s,t]);case 2:return pU([s,t],0);case 3:return gU([s,t],0);case 4:return vU([s,t],0);default:throw new j(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function Mx(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new j(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return ki(s,t)}function lm(s,t=0,e=1,n,i){return xW(s,t,e,n,i)}function ir(s,t,e,n){if(s.rank<2||t.rank<2)throw new de(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const i=s.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(i!==r)throw new de(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return W1({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?kx(s.rank,n,Pi()):null,activation:e});{const i=s.shape.slice(),r=i.pop();s=Q(s,[-1,r]);const o=t.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:t.rank},(p,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=Q(Se(t,u),[l,-1]);const h=[...i,...c];return Q(W1({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?kx(s.rank,n,Pi()):null,activation:e}),h)}}function XT(s,t,e){return st(()=>(Array.isArray(t)?t=Is(t,"int32"):t=Nt(t,"int32"),Iv(s,t,e)))}function Dh(s){return q(s,s)}function kx(s,t,e){const n=t.shape;if(t.rank!==1&&t.rank!==s)throw new j(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1,1,1]):Q(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,1,1,n[0]]):Q(t,[1].concat(n))}else if(s===4){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1,1]):Q(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,1,n[0]]):Q(t,[1].concat(n))}else if(s===3){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1]):Q(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,n[0]]):Q(t,[1].concat(n))}else if(s<3)return t;throw new j(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ui(s,t,e){return st(()=>(e==null&&(e=Pi()),dn(e),yt(s,kx(s.rank,t,e))))}function J6(s,t=1){if(t!==1)throw new de(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Jp(s)}function Q6(s){return st(()=>te(s,yt(An(s),1)))}function jT(s,t,e,n){return st(()=>aG(s,t,e,n))}function tq(s){return st(()=>{const t=yt(.5,q(.2,s));return zs(t,0,1)})}function Fh(s,t,e=!1){return e?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const eq=["fanIn","fanOut","fanAvg"],nq=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sq(s){La(eq,"FanMode",s)}function iq(s){La(nq,"Distribution",s)}class mi extends hc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class KT extends mi{apply(t,e){return Rn(t,e)}}KT.className="Zeros";gt(KT);class wb extends mi{apply(t,e){return wo(t,e)}}wb.className="Ones";gt(wb);class YT extends mi{constructor(t){if(super(),typeof t!="object")throw new j(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new j(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return st(()=>q(ae(this.value),wo(t,e)))}getConfig(){return{value:this.value}}}YT.className="Constant";gt(YT);class ZT extends mi{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return nm(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ZT.className="RandomUniform";gt(ZT);class JT extends mi{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new de(`randomNormal does not support dType ${e}.`);return lm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}JT.className="RandomNormal";gt(JT);class QT extends mi{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new de(`truncatedNormal does not support dType ${e}.`);return oT(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}QT.className="TruncatedNormal";gt(QT);class tE extends mi{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return st(()=>{if(t.length!==2||t[0]!==t[1])throw new j("Identity matrix initializer can only be used for 2D square matrices.");return q(this.gain,LI(t[0]))})}getConfig(){return{gain:this.gain}}}tE.className="Identity";gt(tE);function rq(s,t="channelsLast"){let e,n;if(dn(t),s.length===2)e=s[0],n=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const i=to(s,2);e=s[1]*i,n=s[0]*i}else if(t==="channelsLast"){const i=to(s,0,s.length-2);e=s[s.length-2]*i,n=s[s.length-1]*i}}else{const i=to(s);e=Math.sqrt(i),n=Math.sqrt(i)}return[e,n]}class ks extends mi{constructor(t){if(super(),t.scale<0)throw new j(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,sq(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,iq(this.distribution),this.seed=t.seed}apply(t,e){const n=rq(t),i=n[0],r=n[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,i):this.mode==="fanOut"?o/=Math.max(1,r):o/=Math.max(1,(i+r)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new de(`${this.getClassName()} does not support dType ${e}.`);return oT(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*o);return nm(t,-a,a,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ks.className="VarianceScaling";gt(ks);class _b extends ks{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return ks.className}}_b.className="GlorotUniform";gt(_b);class Sb extends ks{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Sb.className="GlorotNormal";gt(Sb);class Cb extends ks{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Cb.className="HeNormal";gt(Cb);class Ib extends ks{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Ib.className="HeUniform";gt(Ib);class Tb extends ks{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Tb.className="LeCunNormal";gt(Tb);class Eb extends ks{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Eb.className="LeCunNormal";gt(Eb);class eE extends mi{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new de("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return st(()=>{if(t.length<2)throw new de("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const n=t[0]>t[1]?[t[1],t[0]]:t,i=lm(n,0,1,"float32");let r=TH.gramSchmidt(i);return t[0]>t[1]&&(r=Se(r)),q(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}eE.className="Orthogonal";gt(eE);const s_={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function i_(s,t={}){return Rh(s,ti.getMap().classNameMap,t,"initializer")}function tn(s){return vb(s)}function Ze(s){if(typeof s=="string"){const t=s in s_?s_[s]:s;if(t==="GlorotNormal")return new Sb;if(t==="GlorotUniform")return new _b;if(t==="HeNormal")return new Cb;if(t==="HeUniform")return new Ib;if(t==="LeCunNormal")return new Tb;if(t==="LeCunUniform")return new Eb;{const e={};return e.className=t,e.config={},i_(e)}}else return s instanceof mi?s:i_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ax(s){return Array.isArray(s)&&Array.isArray(s[0])}function pf(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function ce(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new j(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Ne(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new j(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mf(s){let t=0;for(const e of s)e.shape.length===0?t+=1:t+=e.shape.reduce((n,i)=>n*i);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const r_="Variable";class oq{constructor(t,e="float32",n=r_,i=!0,r=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=VT(),n=n==null?r_:n,this.originalName=GT(n),this.name=HT(this.originalName),this.trainable_=i,this.constraint=r,this.val=iG(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),aq(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function aq(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function Nx(s){return s.map(t=>t.read())}function Mb(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _n{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class tr{constructor(t,e,n,i,r,o,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=i,this.callArgs=r,this.outputTensorIndex=a,this.id=VT(),o!=null&&(this.originalName=GT(o),this.name=HT(this.originalName)),this.rank=e.length}}let lq=0;class cm{constructor(t,e){this.callArgs=e,this.id=lq++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)n!=null&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let cq=0;class we extends hc{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=cq++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const n=this.getClassName();e=Sr(n)+"_"+am(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),n=[r].concat(t.inputShape)}this.batchInputShape=n;let i=t.dtype;i==null&&(i=t.inputDType),i==null&&(i="float32"),this.dtype=i}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new oi(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new j(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ds(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ds(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zi(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Zi(`Layer ${this.name} is not connected, no input to return.`);return ds(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Zi(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zi(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ds(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=qe(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=qe(this.inputSpec);if(t.length!==e.length)throw new j(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const i=t[n],r=e[n];if(r==null)continue;const o=i.rank;if(r.ndim!=null&&o!==r.ndim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${o}`);if(r.maxNDim!=null&&o>r.maxNDim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${o}`);if(r.minNDim!=null&&o<r.minNDim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${o}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new j(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const a=i.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(r.shape!=null)for(let a=0;a<r.shape.length;++a){const l=r.shape[a],c=i.shape[a];if(l!=null&&c!=null&&l!==c)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=qe(t);let i=!0;for(const o of n)if(!(o instanceof tr)){i=!1;break}let r=!0;for(const o of n)if(o instanceof tr){r=!1;break}if(i===r)throw new j("Arguments to apply() must be all SymbolicTensors or all Tensors");return ia(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of qe(t))o.push(a.shape);this.build(ds(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let o=this.call(t,e);const a=qe(o),l=[];for(let c of a)n.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=ds(l),this.activityRegularizer!=null)throw new de("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=uq(t),a=this.computeOutputShape(o);let l;const c=hq(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new tr(c,u,this,qe(t),e,this.name,h)):l=new tr(c,a,this,qe(t),e,this.name),this.addInboundNode(t,l,null,null,o,a,e),this._refCount++,this.activityRegularizer!=null)throw new de("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,i)=>{n!=null&&t[i]!=null&&t[i]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Zi(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Zi(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new oi(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return mf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Nx(t?this.trainableWeights:this.weights)}setWeights(t){st(()=>{const e=this.weights;if(e.length!==t.length)throw new j(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const n=[],i=Nx(e);for(let r=0;r<i.length;++r){const o=i[r],a=e[r],l=t[r];if(!Ae(o.shape,l.shape))throw new j(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);n.push([a,l])}Mb(n)})}addWeight(t,e,n,i,r,o,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new j(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():Ze("zeros"));const c=i.apply(e,n),u=new oq(c,n,t,o,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=qe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,n,i,r,o,a=null){const l=qe(t);e=qe(e),n=qe(n),i=qe(i),r=pf(r),o=pf(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new cm({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:n,outputMasks:i,inputShapes:r,outputShapes:o},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function uq(s){s=qe(s);const t=[];for(const e of s)t.push(e.shape);return ds(t)}function hq(s){return"float32"}function nE(s,t,e){if((t==null||e!=null&&e>0)&&(t=s.sourceLayer,e=s.nodeIndex),t.inboundNodes.length===0)return[s];{const n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{const i=[];for(let r=0;r<n.inboundLayers.length;r++){const o=n.inputTensors[r],a=n.inboundLayers[r],l=n.nodeIndices[r],c=nE(o,a,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Lh extends we{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:am("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new j("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new j("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new j("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const i=new tr(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new j(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Lh.className="InputLayer";gt(Lh);function dq(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new j("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let e=s.dtype;return e==null&&(e="float32"),new Lh({batchInputShape:t,name:s.name,dtype:e,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fq(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return Nt(t,s.dtype)}catch{throw new j(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class jr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof jr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=fq(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new j(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof tr){if(this.id2Value[t.id]==null)throw new j(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new j(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof tr){if(this.id2Value[t.id]==null)throw new j(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new j(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&me(this.id2Mask)}}const gf=new zT,xf=new zT;function pq(s){gf!=null&&gf.setMaxEntries(s),xf!=null&&xf.setMaxEntries(s)}function Uc(s,t,e,n){const i=e==null?!1:e.training,r=Array.isArray(s),o=r?s:[s],a=o.map(p=>p.name),l=[],c=t.names();for(const p of a)c.indexOf(p)!==-1?l.push(t.getValue(p)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let h=gf.get(u),d;if(h==null){const p=mq(o,t);h=p.sorted,d=p.recipientCounts,gf.put(u,h),xf.put(u,d)}d={},i||Object.assign(d,xf.get(u));const f=new jr(t);for(let p=0;p<h.length;++p){if(n!=null){const I=yx().numTensors;I>n.maxNumTensors&&(n.maxNumTensors=I),I<n.minNumTensors&&(n.minNumTensors=I)}const g=h[p],m=g.sourceLayer;if(m instanceof Lh)continue;const x=[],v=[],b=[];let y=!1;for(const I of g.inputs){const T=f.getValue(I),N=f.getMask(I);x.push(T),v.push(N),N!=null&&(y=!0),i||(d[I.name]--,d[I.name]===0&&!t.hasKey(I)&&a.indexOf(I.name)===-1&&!T.isDisposed&&I.sourceLayer.stateful!==!0&&b.push(T))}y&&(e=e||{},e.mask=v[0]);const w=qe(m.apply(x,e));let S=null;m.supportsMasking&&(S=m.computeMask(x,v));const C=xq(g),_=Array.isArray(C)?C:[C];for(let I=0;I<_.length;++I){f.hasKey(_[I])||f.add(_[I],w[I],Array.isArray(S)?S[0]:S);const T=a.indexOf(_[I].name);T!==-1&&(l[T]=w[I])}i||me(b)}return f.disposeMasks(),r?l:l[0]}function mq(s,t){F(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(s.length===1){const i=o_(s[0],t);e=i.sorted,n=i.recipientMap}else{const i=new Set;for(const r of s){const{sorted:o,recipientMap:a}=o_(r,t);for(const l of o)i.has(l.name)||(e.push(l),i.add(l.name));for(const l in a)n[l]==null&&(n[l]=new Set),a[l].forEach(c=>n[l].add(c))}}return{sorted:e,recipientCounts:gq(n)}}function gq(s){const t={};for(const e in s)t[e]=s[e].size;return t}function o_(s,t){const e=new Set,n=[],i={};for(const a of t.names())e.add(a);const r=[],o=[];for(r.push(s);r.length>0;){const a=r[r.length-1];if(e.has(a.name)){r.pop();continue}const l=o[o.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),n.push(a),e.add(a.name),l&&o.pop();else{o.push(r.length-1);for(const c of a.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(a.name),!e.has(c.name)&&r.push(c)}}return{sorted:n,recipientMap:i}}function xq(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let e=null;for(let n=0;n<s.sourceLayer.inboundNodes.length;++n)for(const i of s.sourceLayer.inboundNodes[n].outputTensors)if(i.id===s.id){e=n;break}t=s.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=ot();vq.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,pq);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kb(s,t){return st(()=>os(qt(q(s,s),t,!0)))}class Ph extends hc{getConfig(){return{}}}class sE extends Ph{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return st(()=>{const e=kb(t,this.axis),n=zs(e,0,this.maxValue);return q(t,te(n,yt(wn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}sE.className="MaxNorm";gt(sE);class iE extends Ph{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return st(()=>te(t,yt(wn(),kb(t,this.axis))))}getConfig(){return{axis:this.axis}}}iE.className="UnitNorm";gt(iE);class rE extends Ph{apply(t){return Lr(t)}}rE.className="NonNeg";gt(rE);class oE extends Ph{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return st(()=>{const e=kb(t,this.axis),n=yt(q(this.rate,zs(e,this.minValue,this.maxValue)),q(1-this.rate,e));return q(t,te(n,yt(wn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}oE.className="MinMaxNorm";gt(oE);const a_={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Cn(s){return vb(s)}function l_(s,t={}){return Rh(s,ti.getMap().classNameMap,t,"constraint")}function In(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in a_?a_[s]:s,config:{}};return l_(e)}else return s instanceof Ph?s:l_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Fo(s){if(s==null)return;const t=[],e=[],n=[];for(const i in s){const r=s[i];if(typeof r!="number"){const o=r;t.push(o.data()),e.push(i),n.push(o)}}if(t.length>0){const i=await Promise.all(t);for(let r=0;r<i.length;++r)s[e[r]]=i[r][0];me(n)}}function aE(s){if(s!=null)for(const t in s){const e=s[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var c_;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(c_||(c_={}));const bq=125;class hu{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class yq{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class wq extends hu{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const n=e.size==null?0:e.size;this.seen+=n;for(const i in e){const r=e[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*n;else{let o;i in this.totals?o=this.totals[i]:this.totals[i]=0;const a=st(()=>yt(this.totals[i],q(r,n)));this.totals[i]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:st(()=>{const i=q(te(1,this.seen),this.totals[n]);e[n]=i,this.totals[n].dispose(),rr(e[n])}))}}class _q extends hu{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const o=this.history[r];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];t.push(l.data()),e.push(r),n.push(a)}}const i=await Promise.all(t);for(let r=0;r<i.length;++r)this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=i[r][0]}}class Sq extends hu{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||dT,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=bq),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ix(this.yieldEvery)&&(this.maybeWait=O6(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const i=[];this.yield!=null&&(await Fo(n),i.push(this.yield(t,e,n))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Fo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];this.epochEnd!=null&&(await Fo(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Fo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];this.batchEnd!=null&&(await Fo(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):ix(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){this.trainBegin!=null&&(await Fo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Fo(t),await this.trainEnd(t))}}function lE(s,t){return s==null&&(s={}),s instanceof hu?[s]:Array.isArray(s)&&s[0]instanceof hu?s:qe(s).map(n=>new Sq(n,t))}class Ys{constructor(){}static registerCallbackConstructor(t,e){F(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Ys.checkForDuplicate(e),Ys.constructors[t]==null&&(Ys.constructors[t]=[]),Ys.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ys.constructors)Ys.constructors[+e].forEach(i=>{if(i===t)throw new j("Duplicate callback constructor.")})}static clear(){Ys.constructors={}}static createCallbacks(t){const e=[];for(const n in Ys.constructors){const i=+n;t>=i&&e.push(...Ys.constructors[i])}return e.map(n=>new n)}}Ys.constructors={};function cE(s,t,e,n,i,r,o,a,l){const c=new _q,u=[new wq,...Ys.createCallbacks(t)];s!=null&&u.push(...s),u.push(c);const h=new yq(u);return h.setParams({epochs:e,initialEpoch:n,samples:i,steps:r,batchSize:o,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mr(s,t={},e=!1){return Rh(s,ti.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vf(s,t){return st(()=>{s.dtype!=="float32"&&(s=Nt(s,"float32"));const e=qt(Dh(s),t,!0),n=Ch(e.shape,wn()),i=os(yo(e,n));return te(s,i)})}function um(s,t){return st(()=>ln(Dh(Xt(t,s)),-1))}function Ab(s,t){return st(()=>ln(An(Xt(t,s)),-1))}function Nb(s,t){return st(()=>{const e=Xt(s,t),n=zs(An(s),wn(),Number.MAX_VALUE),i=An(te(e,n));return q(100,ln(i,-1))})}function Cq(s,t){return st(()=>{const e=zs(t,wn(),Number.MAX_VALUE),n=ui(yt(1,e)),i=zs(s,wn(),Number.MAX_VALUE),r=ui(yt(1,i));return ln(Dh(Xt(n,r)),-1)})}function Iq(s,t){return st(()=>{const e=yo(0,Xt(1,q(s,t)));return ln(Dh(e),-1)})}function Tq(s,t){return st(()=>{const e=yo(0,Xt(1,q(s,t)));return ln(e,-1)})}function Eq(s,t){return st(()=>{const e=qt(q(s,t),-1),n=Ni(q(Xt(1,s),t),-1);return yo(0,yt(1,Xt(n,e)))})}function Mq(s,t){return st(()=>{const e=Math.log(2),n=Xt(t,s),i=Xt(yt(n,Ih(q(-2,n))),e);return ln(i,-1)})}function du(s,t,e=!1){return st(()=>{if(e)t=Lv(t);else{const n=qt(t,t.shape.length-1,!0);t=te(t,n)}return t=zs(t,wn(),1-wn()),en(qt(q(Nt(s,"float32"),ui(t)),t.shape.length-1))})}function bf(s,t,e=!1){return st(()=>{const n=Nt(tm(Y6(s)),"int32");t=zs(t,wn(),1-wn());const i=t.shape,r=Q(gI(n,i[i.length-1]),i);return du(r,t,e)})}function kq(s,t){if(!Ae(s.shape,t.shape))throw new j(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return st(()=>{const e=Lr(t),n=en(An(t));return yt(Xt(e,q(t,s)),Ev(ci(n)))})}function hm(s,t){return st(()=>{let e;return e=zs(t,wn(),1-wn()),e=ui(te(e,Xt(1,e))),ln(kq(s,e),-1)})}function Aq(s,t){return st(()=>{const e=zs(s,wn(),1),n=zs(t,wn(),1);return qt(q(s,ui(te(e,n))),-1)})}function Nq(s,t){return st(()=>{const e=ui(yt(wn(),t));return ln(Xt(t,q(s,e)),-1)})}function uE(s,t){return st(()=>{const e=vf(s,-1),n=vf(t,-1),i=q(e,n);return en(qt(i,-1))})}const yf={meanSquaredError:um,meanAbsoluteError:Ab,meanAbsolutePercentageError:Nb,meanSquaredLogarithmicError:Cq,squaredHinge:Iq,hinge:Tq,categoricalHinge:Eq,logcosh:Mq,categoricalCrossentropy:du,sparseCategoricalCrossentropy:bf,binaryCrossentropy:hm,kullbackLeiblerDivergence:Aq,poisson:Nq,cosineProximity:uE};function kg(s){if(typeof s=="string"){if(s in yf)return yf[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new j(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hE(s,t){return st(()=>{const e=q(.5,hi(t)),n=Pa(Vs(t,e),s.dtype);return ln(or(s,n),-1)})}function dE(s,t){return st(()=>Pa(or(cu(s,-1),cu(t,-1)),"float32"))}function Rq(s,t){return st(()=>Nt(qt(Nr(or(s,1),or(t,1))),"float32"))}function $q(s,t){return st(()=>Nt(qt(Nr(or(s,0),or(t,1))),"float32"))}function Dq(s,t){return st(()=>{const e=Rq(s,t),n=$q(s,t),i=yt(e,n);return Nt(Ms(Vs(i,0),te(e,i),0),"float32")})}function Fq(s,t){return hm(s,t)}function Lq(s,t){return s.rank===t.rank&&(s=Eh(s,[s.rank-1])),t=cu(t,-1),t.dtype!==s.dtype&&(t=Nt(t,s.dtype)),Nt(or(s,t),"float32")}const Pq=um,Oq=um,zq=Ab,Bq=Ab,Uq=Nb,Vq=Nb,fE=du,Wq=uE,pE=bf,wf={binaryAccuracy:hE,categoricalAccuracy:dE,precision:Dq,categoricalCrossentropy:fE,sparseCategoricalCrossentropy:pE,mse:Pq,MSE:Oq,mae:zq,MAE:Bq,mape:Uq,MAPE:Vq,cosine:Wq};function Gq(s){if(typeof s=="string"&&s in wf)return wf[s];if(typeof s!="string"&&s!=null)return s;throw new j(`Unknown metric ${s}`)}function $d(s){if(Ji(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const e of Object.keys(yf))if(yf[e]===s){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(wf))if(wf[e]===s){t=e;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hq(s){const t={Adagrad:()=>ul.adagrad(.01),Adadelta:()=>ul.adadelta(1,.95,wn()),Adam:()=>ul.adam(.001,.9,.999,wn()),Adamax:()=>ul.adamax(.002,.9,.999,wn(),0),RMSProp:()=>ul.rmsprop(.001,.9,0,wn()),SGD:()=>ul.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new j(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const u_=1*1024*1024;function h_(s,t,e=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!Rx(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const n=JSON.stringify(s);n.length>u_&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${u_}.`)}}function Rx(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const e of t)if(typeof e!="string"||!Rx(s[e]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!Rx(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qq(s,t,e,n=console.log){const i=jq(s),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let o;if(!i){r.push("Receives inputs"),o=[];for(const u in s.nodesByDepth)o.push(...s.nodesByDepth[u])}n("_".repeat(t)),_f(r,e,n),n("=".repeat(t));const a=s.layers;for(let u=0;u<a.length;++u)i?Kq(a[u],e,n):Yq(a[u],e,o,n),n((u===a.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const l=Xq(s),c=mf(s.nonTrainableWeights);n(`Total params: ${l+c}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${c}`),n("_".repeat(t))}function Xq(s){let t;return s.collectedTrainableWeights!=null?t=mf(s.collectedTrainableWeights):t=mf(s.trainableWeights),t}function jq(s){let t=!0;const e=[],n=[];for(const i in s.nodesByDepth)e.push(s.nodesByDepth[i]);for(const i of e){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){t=!1;break}n.push(...i)}if(t)for(const i of s.layers){let r=!1;for(const o of i.inboundNodes)if(n.indexOf(o)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function _f(s,t,e=console.log){let n="";for(let i=0;i<s.length;++i)i>0&&(n=n.slice(0,n.length-1)+" "),n+=s[i],n=n.slice(0,t[i]),n+=" ".repeat(t[i]-n.length);e(n)}function Kq(s,t,e){let n,i;try{i=s.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{n=JSON.stringify(s.outputShape)}catch{n="multiple"}const r=s.name,o=s.getClassName(),a=[`${r} (${o})`,i,n,s.countParams().toString()];_f(a,t,e)}function Yq(s,t,e,n){let i,r;try{r=s.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(s.outputShape)}catch{i="multiple"}const o=[];for(const h of s.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],g=h.tensorIndices[d];o.push(`${f}[${p}][${g}]`)}const a=s.name,l=s.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,r,i,s.countParams().toString(),c];_f(u,t,n);for(let h=1;h<o.length;++h)_f(["","","","",o[h]],t,n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mE(s,t,e){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof e=="string"}function $x(s,t){if(s===null)return null;if(typeof s=="string")return Wo(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];mE(t,i,r)?e.push(r):e.push($x(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n];if(n==="name"&&typeof i=="string")e[n]=i;else{const r=Wo(n);e[r]=$x(i,r)}}return e}}function Dx(s,t){if(s==null)return null;if(typeof s=="string")return Sr(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];mE(t,i,r)?e.push(r):e.push(Dx(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n],r=Sr(n);(n==="name"||n==="className")&&typeof i=="string"?e[r]=i:e[r]=Dx(i,n)}return e}}/** @license See the LICENSE file. */const gE="4.0.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _i extends we{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const v=this.getClassName().toLowerCase();this.name=am(v)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Qr(this.inputs).length!==this.inputs.length)throw new j(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(v=>v.name)}`);Qr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(v=>v.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const v of this.outputs){const b=v.sourceLayer,y=v.nodeIndex,w=v.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(w)}for(const v of this.inputs){const b=v.sourceLayer,y=v.nodeIndex,w=v.tensorIndex;Ji(y===0,"input layer has >1 nodes"),Ji(w===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let v=0;v<this.inputLayers.length;v++){const b=this.inputLayers[v];if(!(b instanceof Lh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${v} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const v of this.outputLayers)this.outputNames.push(v.name);this.internalInputShapes=this.inputs.map(v=>v.shape),this.internalOutputShapes=this.outputs.map(v=>v.shape);const e={},n={},i={},r={},o={},a=[],l=(v,b,y,w,S,C)=>{(w==null||S==null||C==null)&&(w=v.sourceLayer,S=v.nodeIndex,C=v.tensorIndex);const _=w.inboundNodes[S];if(y.indexOf(_)!==-1)throw new oi(`The tensor ${v.name} at layer "${w.name}" is part of a cycle.`);if(b.indexOf(_)!==-1)return;this.containerNodes.add(_i.nodeKey(w,S)),w.id in o||(o[w.id]=Object.keys(o).length),y.indexOf(_)===-1&&y.push(_);const I=_.inboundLayers.length;for(let T=0;T<I;T++){const N=_.inputTensors[T],O=_.inboundLayers[T],M=_.nodeIndices[T],E=_.tensorIndices[T];l(N,b,y,O,M,E)}for(b.push(_);y.indexOf(_)>=0;)y.splice(y.indexOf(_),1);a.push(_)},c=[],u=[];for(const v of this.outputs)l(v,c,u);const h=a.slice().reverse();for(const v of h){n[v.id]=v,v.id in e||(e[v.id]=0);let b=e[v.id];const y=i[v.outboundLayer.id]==null?0:i[v.outboundLayer.id];b=Math.max(b,y),i[v.outboundLayer.id]=b,r[v.outboundLayer.id]=v.outboundLayer,e[v.id]=b;for(let w=0;w<v.inboundLayers.length;w++){const S=v.inboundLayers[w],C=v.nodeIndices[w],_=S.inboundNodes[C],I=e[_.id]==null?0:e[_.id];e[_.id]=Math.max(b+1,I),n[_.id]=_}}const d={};for(const v in e){const b=e[v];b in d||(d[b]=[]),d[b].push(n[v])}const f={};for(const v in i){const b=i[v];b in f||(f[b]=[]),f[b].push(r[v])}let p=Object.keys(f).map(v=>parseInt(v,10)).sort(Ad);this.layers=[];for(const v of p){const b=f[v];b.sort((y,w)=>{const S=o[y.id],C=o[w.id];return S<C?-1:S>C?1:0});for(const y of b)y instanceof _i&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=f,p=Object.keys(d).map(v=>parseInt(v,10)).sort(Ad);const g=this.inputs.slice(),m=[];for(const v of p)for(const b of d[v]){const y=b.outboundLayer;if(y!=null){for(const w of b.inputTensors)if(g.indexOf(w)===-1)throw new oi(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${y.name}". The following previous layers were accessed without issue: ${m}`);for(const w of b.outputTensors)g.push(w);m.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(v=>v.name);for(const v of x){const b=x.filter(y=>y===v).length;if(b!==1)throw new oi(`The name "${v}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(v=>null),outputMasks:this.outputs.map(v=>null),inputShapes:this.inputs.map(v=>v.shape),outputShapes:this.outputs.map(v=>v.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new j("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let i=0;for(const o of this.layers)for(const a of o.weights){if(n[a.originalName]!=null)throw new j(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,i++}const r=[];for(const o in t){let a=o;if(n[o]==null){const l=o.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[a]!=null)r.push([n[a],t[o]]);else if(e)throw new j(`Provided weight data has no target variable: ${o}`);delete n[a]}if(e){const o=[];for(const a in n)o.push(a);if(o.length>0)throw new j(`${o.length} of ${i} weights are not set: ${o}`)}Mb(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${gE}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Dx(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return st(()=>{t=qe(t);const n=new jr;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],t[i]);return Uc(this.outputs,n,e)})}computeMask(t,e){return st(()=>{t=qe(t);let n;return e==null?n=Ia(null,t.length):n=qe(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=pf(t);if(e.length!==this.inputLayers.length)throw new j(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";n[u]=c}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Ad);if(i.length>1)for(const a of i){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const m=c.inboundLayers[g],x=c.nodeIndices[g],v=c.tensorIndices[g],b=`${m.name}_${x}_${v}`,y=n[b];h.push(y)}const d=u.computeOutputShape(ds(h)),f=pf(d),p=u.inboundNodes.indexOf(c);for(let g=0;g<f.length;g++){const m=`${u.name}_${p}_${g}`;n[m]=f[g]}}}const r=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];Ji(l in n),r.push(n[l])}return ds(r)}runInternalGraph(t,e){e==null&&(e=Ia(null,t.length));const n={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];n[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Ad);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const g of d)g.id in n&&p.push(n[g.id]);if(p.length===d.length){let g={},m,x,v,b;if(u.callArgs!=null&&(g=u.callArgs),p.length===1){const[y,w]=p[0];g.mask==null&&(g.mask=w),v=qe(h.call(y,g)),b=qe(h.computeMask(y,w)),m=[y],x=[w]}else m=p.map(y=>y[0]),x=p.map(y=>y[1]),g.mask==null&&(g.mask=x),v=qe(h.call(m,g)),b=qe(h.computeMask(m,x));if(h.activityRegularizer)throw new de("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<f.length;++y){const w=f[y],S=v[y],C=b[y];n[w.id]=[S,C]}}}}const r=[],o=[],a=[];for(const l of this.outputs){Ji(l.id in n,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=n[l.id];a.push(c.shape),r.push(c),o.push(u)}return[r,o,a]}buildNodeConversionMap(t){const e={};let n;for(const i of this.layers){n=i instanceof _i?1:0;for(let r=0;r<i.inboundNodes.length;r++){const o=_i.nodeKey(i,r);this.containerNodes.has(o)&&(e[o]=n,n+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new j(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new j("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new j(`No such layer: ${t}`)}calculateLosses(){return st(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const i=_i.nodeKey(e,n);this.containerNodes.has(i)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],f=_i.nodeKey(o,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const x=d.inboundLayers[m],v=d.nodeIndices[m],b=d.tensorIndices[m],y=_i.nodeKey(x,v);let w=e[y];w==null&&(w=0),g.push([x.name,w,b,p])}c.push(g)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,n.push(u)}t.layers=n;const i=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=_i.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];i.push([a.name,u,h])}t.inputLayers=i;const r=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=_i.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];r.push([a.name,u,h])}return t.outputLayers=r,t}static fromConfig(t,e,n={},i=!1){const r={},o={};function a(m,x){m.name in o?o[m.name].push(x):o[m.name]=[x]}function l(m,x){const v=[];let b;for(const y of x){const w=y[0],S=y[1],C=y[2];if(b=y[3]==null?{}:y[3],!(w in r)){a(m,x);return}const _=r[w];if(_.inboundNodes.length<=S){a(m,x);return}const I=_.inboundNodes[S];v.push(I.outputTensors[C])}v.length>0&&m.apply(ds(v),b)}function c(m){const x=m.name,v=Mr(m,e.customObjects!=null?e.customObjects:{});v.setFastWeightInitDuringBuild(i),r[x]=v,m.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new j(`Corrupted configuration, expected array for nodeData: ${y}`);a(v,y)})}const u=e.name,h=e.layers;for(const m of h)c(m);for(;!P6(o);)for(const m of h){const x=r[m.name];if(x.name in o){const v=o[x.name];delete o[x.name];for(const b of v)l(x,b)}}const d=[],f=[],p=e.inputLayers;for(const m of p){const x=m[0],v=m[1],b=m[2];Ji(x in r);const w=r[x].inboundNodes[v].outputTensors;d.push(w[b])}const g=e.outputLayers;for(const m of g){const x=m[0],v=m[1],b=m[2];Ji(x in r);const w=r[x].inboundNodes[v].outputTensors;f.push(w[b])}return new t({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new j("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){st(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zq(s,t,e){const n=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(i=>null);if(n===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==n)throw new Error(`Provided ${e} is an array of ${s.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const i=[];return t.forEach(r=>{r in s?i.push(s[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(s)}`)}function xE(s,t){return Zq(s,t,"classWeight")}async function vE(s,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const i=st(()=>{if(s.shape.length===1)return na(s);if(s.shape.length===2){if(s.shape[1]>1)return cu(s,1);if(s.shape[1]===1)return Q(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());me(i);const o=[];return r.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(e[a])}),Is(o,"float32")}else return null}function Jq(s,t){return q(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Qq=32;function bE(s,t){let e,n;const i=t;e=i.xs,n=i.ys,F(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=d_("input",s.inputNames,e),o=d_("output",s.outputNames,n),a=r[0].shape[0];F(r.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),F(o.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let l=0;l<r.length;l++)F(r[l].shape[0]===a,()=>`Batch size mismatch: input ${s.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);for(let l=0;l<o.length;l++)F(o[l].shape[0]===a,()=>`Batch size mismatch: output ${s.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);return{xs:r,ys:o}}function d_(s,t,e){if(e instanceof Ye)return[e];if(Array.isArray(e))return F(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),e;{const n=[];for(const i of t){if(e[i]==null)throw new j(`The feature data generated by the dataset lacks the required ${s} key '${i}'.`);n.push(e[i])}return n}}function t8(s){if(s.length===3)throw new de("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function e8(s,t,e){const n=e.batchesPerEpoch!=null;if(F(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),F(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),F(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const i=e.validationData!=null;let r,o;if(i)if(f_(e.validationData))F(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=t8(e.validationData);r=m.xs,o=m.ys}const a=s.makeTrainFunction(),l=s.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(m=>"val_"+m)):c=l.slice();const u=lE(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:f}=cE(u,h,e.epochs,null,null,n8(t,e),null,i,c);d.setModel(s),s.history=f,await d.onTrainBegin(),s.stopTraining_=!1;let p=e.initialEpoch==null?0:e.initialEpoch,g=await t.iterator();for(;p<e.epochs;){const m={};await d.onEpochBegin(p);let x=0,v=0;for(n||(g=await t.iterator());!n||x<e.batchesPerEpoch;){const b=await g.next();if(n&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(b.value!=null){const{xs:y,ys:w}=bE(s,b.value),S={};S.batch=v,S.size=y[0].shape[0],await d.onBatchBegin(v,S);const C=[];if(e.classWeight!=null){const T=xE(e.classWeight,s.outputNames);for(let N=0;N<T.length;++N)C.push(await vE(w[N],null,T[N]))}const _=y.concat(w).concat(C),I=a(_);me(_);for(let T=0;T<l.length;++T){const N=l[T],O=I[T];S[N]=O,rr(O)}await d.onBatchEnd(v,S),aE(S),v++,x++}if(n?x>=e.batchesPerEpoch:b.done){if(i){let y;f_(e.validationData)?y=qe(await s.evaluateDataset(e.validationData,{batches:e.validationBatches})):y=qe(s.evaluate(r,o,{batchSize:e.validationBatchSize==null?Qq:e.validationBatchSize,verbose:0}));for(let w=0;w<s.metricsNames.length;++w)m[`val_${s.metricsNames[w]}`]=y[w]}break}if(s.stopTraining_)break}if(await d.onEpochEnd(p,m),p++,s.stopTraining_)break}return await d.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function n8(s,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(s.size)&&(e=s.size),e}function f_(s){return typeof s.iterator=="function"}function s8(s){return typeof s.next=="function"}async function i8(s,t,e){e=e||{};const n=e.batches!=null,i=s.testFunction;let r=[];if(e.verbose>0)throw new de("Verbose mode is not implemented yet.");F(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=s8(t)?t:await t.iterator();let a=0,l=0;for(;!n||l<e.batches;){const c=await o.next();if(r=st(()=>{if(c.value){const{xs:u,ys:h}=bE(s,c.value),d=u.concat(h),f=st(()=>i(d));if(me(d),l===0)for(let g=0;g<f.length;++g)r.push(ae(0));const p=d[0].shape[0];for(let g=0;g<f.length;++g){const m=f[g],x=r[g];r[g]=st(()=>yt(r[g],q(p,m))),l>0&&me(x)}me(f),a+=p,++l}return r}),c.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=te(r[c],a),me(u)}return ds(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fx(s){F(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function Vc(s,t,e){return s==null?[null]:Array.isArray(s)?s.map(n=>ra(n,t,e-t)):ra(s,t,e-t)}function Rb(s,t){return st(()=>s==null?null:Array.isArray(s)?s.map(e=>Rb(e,t)):XT(s,t.dtype==="int32"?t:Nt(t,"int32")))}function Lx(s,t){const e=[];let n=0,i=null;for(;n<s;)i=n+t,i>=s&&(i=s),e.push([n,i]),n=i;return e}async function r8(s,t,e,n,i,r,o,a,l,c,u,h,d,f,p){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),p!=null&&(g=!0,f==null))throw new j("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=s.checkNumSamples(e,i,f,"steps_per_epoch");let x;m!=null&&(x=Li(0,m)),o==null&&(o=1);const{callbackList:v,history:b}=cE(a,o,r,d,m,f,i,g,h);v.setModel(s),s.history=b,await v.onTrainBegin(),s.stopTraining_=!1;for(let y=d;y<r;++y){await v.onEpochBegin(y);const w={};if(f!=null)throw new de("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new de("batch shuffling is not implemneted yet");u&&Rz(x);const S=Is(x),C=Lx(m,i);for(let _=0;_<C.length;++_){const I={};if(await v.onBatchBegin(_,I),st(()=>{const T=C[_][0],N=C[_][1],O=ra(S,T,N-T);I.batch=_,I.size=N-T;const M=Rb(e,O),E=t(M);for(let A=0;A<n.length;++A){const R=n[A],V=E[A];I[R]=V,rr(V)}if(_===C.length-1&&g){const A=s.testLoop(l,c,i);for(let R=0;R<n.length;++R){const V=n[R],P=A[R];rr(P),w["val_"+V]=P}}}),await v.onBatchEnd(_,I),aE(I),s.stopTraining_)break}S.dispose()}if(await v.onEpochEnd(y,w),s.stopTraining_)break}return await v.onTrainEnd(),await s.history.syncData(),s.history}async function o8(s,t,e,n={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let i,r,o,a,l,c,u,h,d;try{const f=n.batchSize==null?32:n.batchSize;Fx(f);const p=!1,g=await s.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,f);i=g[0],r=g[1],d=g[2];let m=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)l=n.validationData[0],c=n.validationData[1];else throw n.validationData.length===3?new de("validationData including sample weights is not supported yet."):new j(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);const I=!0,T=await s.standardizeUserData(l,c,null,null,I,f);u=T[0],h=T[1],x=u.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;const I=Math.floor(i[0].shape[0]*(1-n.validationSplit)),T=i[0].shape[0];u=Vc(i,I,T),o=i,i=Vc(i,0,I),h=Vc(r,I,T),a=r,r=Vc(r,0,I),x=u.concat(h)}else n.validationSteps!=null&&(m=!0);const v=i.concat(r).concat(d);s.checkTrainableWeightsConsistency();const b=s.makeTrainFunction(),y=s.getDedupedMetricsNames();let w,S;m?(s.makeTestFunction(),w=s.testFunction,S=y.slice().concat(y.map(I=>"val_"+I))):(w=null,x=[],S=y.slice());const C=lE(n.callbacks,n.yieldEvery);return await r8(s,b,v,y,f,n.epochs,n.verbose,C,w,x,n.shuffle,S,n.initialEpoch,null,null)}finally{s.isTraining=!1,Ii(i,t),Ii(r,e),Ii(o,t),Ii(a,e),Ii(u,l),Ii(h,c),d!=null&&me(d)}}function yE(s){const t=[];s instanceof Ye&&(s=[s]);for(let e=0;e<s.length;++e){const n=s[e];if(n.rank===1)t.push($h(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Ii(s,t){if(s==null)return;const e=[];if(t instanceof Ye)e.push(t.id);else if(Array.isArray(t))t.forEach(i=>e.push(i.id));else if(t!=null)for(const i in t){const r=t[i];e.push(r.id)}const n=[];if(s instanceof Ye)e.indexOf(s.id)===-1&&n.push(s);else if(Array.isArray(s))s.forEach(i=>{e.indexOf(i.id)===-1&&n.push(i)});else if(s!=null)for(const i in s){const r=s[i];e.indexOf(r.id)===-1&&n.push(r)}n.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a8(s){return s instanceof Ye}function Px(s){return Array.isArray(s)}function p_(s){return!a8(s)&&!Px(s)}function m_(s,t,e,n=!0,i=""){if(t==null||t.length===0){if(s!=null){let o=!1;if(Px(s)&&s.length>0)o=!0;else if(p_(s)){for(const a in s)if(s.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new j(`Error when checking model ${i} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(o=>null);let r;if(p_(s)){s=s,r=[];for(const o of t){if(s[o]==null)throw new j(`No data provided for "${o}". Need data for each key in: ${t}`);r.push(s[o])}}else if(Px(s)){if(s=s,s.length!==t.length)throw new j(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);r=s}else{if(s=s,t.length>1)throw new j(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);r=[s]}if(r=yE(r),e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new j(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u>=0&&c!==u)throw new j(`${i} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function l8(s,t,e){const n=Qr(s.map(r=>r.shape[0]));n.sort();const i=Qr(t.map(r=>r.shape[0]));if(i.sort(),n.length>1)throw new j(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(r=>r.shape))}`);if(i.length>1)throw new j(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(n.length>0&&i.length>0&&!Ae(n,i))throw new j(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${i[0]} target sample(s).`)}function c8(s,t,e){const n=[um,hm,du];for(let i=0;i<s.length;++i){const r=s[i],o=t[i],a=e[i];if(o!=null){if(o===du&&r.shape[r.shape.length-1]===1)throw new j(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(o)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new j(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function g_(s,t,e,n=!0,i=""){let r;if(Array.isArray(s)){if(s.length!==t.length)throw new j(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);r=s}else{if(t.length>1)throw new j(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);r=[s]}if(e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new j(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u!==c)throw new j(`Error when checking ${i}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function u8(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(n=>[]);let e;if(typeof s=="string"||typeof s=="function")e=[s];else if(Array.isArray(s)||typeof s=="object")e=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(e))return t.map(n=>e);{const n=[];for(const i of t){let r=e.hasOwnProperty(i)?e[i]:[];Array.isArray(r)||(r=[r]),n.push(r)}return n}}const h8="layers-model";class Nl extends _i{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new j("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");qq(this,t,e,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=Hq(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof So))throw new j("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new j(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),e.push(kg(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new j(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>kg(a))}else{const o=kg(t.loss);this.outputs.forEach(a=>{e.push(o)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ia("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const i=u8(t.metrics,this.outputNames),r=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};ia("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=i[o];(c=>{const u="";let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===hm?["accuracy","acc"].indexOf(p)!==-1?d=hE:["crossentropy","ce"].indexOf(p)!==-1&&(d=Fq):this.lossFunctions[o]===bf?["accuracy","acc"].indexOf(p)!==-1?d=Lq:["crossentropy","ce"].indexOf(p)!==-1&&(d=pE):["accuracy","acc"].indexOf(p)!==-1?d=dE:["crossentropy","ce"].indexOf(p)!==-1&&(d=fE);let x;["accuracy","acc"].indexOf(p)!==-1?x="acc":["crossentropy","ce"].indexOf(p)!==-1&&(x="ce"),f=d,h=u+x}else f=Gq(p),h=u+$d(p);let g;ia(h,()=>{g=f}),r(o,h,g)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const i=n.batchSize==null?32:n.batchSize;Fx(i);const r=!0,o=this.standardizeUserDataXY(t,e,r,i);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,i,n.verbose,n.steps);return ds(c)}finally{Ii(o[0],t),Ii(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),i8(this,t,e)}checkNumSamples(t,e,n,i="steps"){let r;if(n!=null){if(r=null,e!=null)throw new j(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new j(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new j("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),i=n?e:[e],r=this.retrieveSymbolicTensors(i),o=new jr;if(t instanceof Ye&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new j(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new j(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=Uc(r,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Ia(null,t.length);let n=t.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],o=r.map(a=>a.name);for(let a=0;a<t.length;++a){const l=o.indexOf(t[a]);if(l!==-1&&(e[a]=r[l],n--),n===0)break}if(n===0)break}if(n>0){const i=[];throw e.forEach((r,o)=>{r==null&&i.push(t[o])}),new j(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return e}predictLoop(t,e=32,n=!1){return st(()=>{const i=this.checkNumSamples(t);if(n)throw new de("Verbose predictLoop() is not implemented yet.");const r=Lx(i,e),o=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)st(()=>{const c=r[a][0],u=r[a][1],h=Vc(t,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new jr(d);return Uc(this.outputs,f)}).forEach((c,u)=>o[u].push(c));return ds(o.map(a=>Zn(a,0)))})}predict(t,e={}){const n=yE(t);g_(n,this.inputNames,this.feedInputShapes,!1);try{const i=e.batchSize==null?32:e.batchSize;return Fx(i),this.predictLoop(n,i)}finally{Ii(n,t)}}predictOnBatch(t){g_(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,i){if(this.optimizer_==null)throw new oi("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===bf?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(t=m_(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=m_(e,this.feedOutputNames,r,!1,"target"),l8(t,e),c8(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&t[0].shape[0]%i!==0)throw new j(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,i,r=!0,o){const[a,l]=this.standardizeUserDataXY(t,e,r,o);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=xE(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await vE(l[h],null,u[h]))}return[a,l,c]}testLoop(t,e,n,i=0,r){return st(()=>{const o=this.checkNumSamples(e,n,r,"steps"),a=[];if(i>0)throw new de("Verbose mode is not implemented yet.");if(r!=null)throw new de("steps mode in testLoop() is not implemented yet");{const l=Lx(o,n),c=Is(Li(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=ra(c,h,d-h),p=Rb(e,f),g=t(p);if(u===0)for(let m=0;m<g.length;++m)a.push(ae(0));for(let m=0;m<g.length;++m){const x=g[m];a[m]=yt(a[m],q(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=te(a[u],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const i=t[n];let r=i;if(t_(t,i)>1){const o=t_(t.slice(0,n),i);r+=`_${o}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:n[g]});const d=new jr(h),f=Uc(this.outputs,d,{training:!0});let p;for(let g=0;g<this.lossFunctions.length;++g){const m=this.lossFunctions[g];let x=m(i[g],f[g]);r[g]!=null&&(x=Jq(x,r[g]));const v=ln(x);e.push(v),g===0?p=x:p=yt(p,x)}for(let g=0;g<this.metricsTensors.length;++g){let m;if(this.outputs.length>1&&g<this.outputs.length)m=e[g];else{const x=this.metricsTensors[g][0],v=this.metricsTensors[g][1];m=ln(x(i[v],f[v]))}rr(m),o.push(m)}return p=ln(p),this.calculateLosses().forEach(g=>{p=yt(p,g)}),p},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(o)}}makeTestFunction(){this.testFunction=t=>st(()=>{const e=[];let n;const i=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:i[c]});const a=new jr(o),l=Uc(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=ln(u(r[c],l[c]));c===0?n=h:n=yt(n,h),e.push(n)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=ln(u(r[h],l[h]));e.push(d)}return e})}async fit(t,e,n={}){return o8(this,t,e,n)}async fitDataset(t,e){return e8(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),i=n[0],r=n[1],a=this.makeTrainFunction()(i.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return me(a),Ii(n[0],t),Ii(n[1],e),ds(l)}getNamedWeights(t){const e=[],n=t!=null&&t.trainableOnly,i=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<i.length;++o)n&&!i[o].trainable||e.push({name:i[o].originalName,tensor:r[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=yx().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-yx().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Sr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Sr(e))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const i of e)if(typeof n[i]=="string")t[i]=Sr(n[i]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Sr($d(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Sr($d(t)));{const t={};for(const e in this.metrics)t[e]=Sr($d(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=$x(t.optimizer_config),n=Mr(e);let i;if(typeof t.loss=="string")i=Wo(t.loss);else if(Array.isArray(t.loss))i=t.loss.map(o=>Wo(o));else if(t.loss!=null){i={};for(const o in t.loss)i[o]=Wo(t.loss[o])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(o=>Wo(o));else if(t.metrics!=null){r={};for(const o in t.metrics)r[o]=Wo(t.metrics[o])}this.compile({loss:i,metrics:r,optimizer:n})}async save(t,e){if(typeof t=="string"){const c=IB(t);if(c.length===0)throw new j(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new j(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new j("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await F1(this.getNamedWeights(e)),i=!1,r=null,a={modelTopology:this.toJSON(r,i),format:h8,generatedBy:`TensorFlow.js tfjs-layers v${gE}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await F1(await this.optimizer.getWeights(),c);n.specs.push(...h),n.data=aI([n.data,u])}return this.userDefinedMetadata!=null&&(h_(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){h_(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Nl.className="Model";gt(Nl);class wE extends Nl{}wE.className="Functional";gt(wE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zl extends Nl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:am("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new j(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Zl||t instanceof Nl;let n;if(e){if(n=t,n.outputs.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new j("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new j("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=dq({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new j(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=nE(this.outputs[0])}this.inboundNodes=[],new cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ia(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=t.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Ne(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Nl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new oi("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new oi("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new oi("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new oi("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},i=!1){let r,o={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new j("Legacy serialization format not supported yet.");r=e}else F(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof Zl))throw new de(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=Mr(l,void 0,i);i&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new j("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new j("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Zl.className="Sequential";gt(Zl);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function d8(s){return new Zl(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vs extends hc{getConfig(){return{}}}class _E extends vs{apply(t,e=1){return J6(t,e)}}_E.className="elu";gt(_E);class SE extends vs{apply(t){return JI(t)}}SE.className="selu";gt(SE);class CE extends vs{apply(t){return Lr(t)}}CE.className="relu";gt(CE);class IE extends vs{apply(t){return st(()=>em(6,Lr(t)))}}IE.className="relu6";gt(IE);class TE extends vs{apply(t){return t}}TE.className="linear";gt(TE);class EE extends vs{apply(t){return dc(t)}}EE.className="sigmoid";gt(EE);class ME extends vs{apply(t){return tq(t)}}ME.className="hardSigmoid";gt(ME);class kE extends vs{apply(t){return Ih(t)}}kE.className="softplus";gt(kE);class AE extends vs{apply(t){return Q6(t)}}AE.className="softsign";gt(AE);class NE extends vs{apply(t){return bv(t)}}NE.className="tanh";gt(NE);class $b extends vs{apply(t,e=-1){return Lv(t,e)}}$b.className="softmax";gt($b);class RE extends vs{apply(t,e=-1){return OI(t,e)}}RE.className="logSoftmax";gt(RE);class $E extends vs{apply(t,e=1){return st(()=>q(dc(q(t,e)),t))}}$E.className="swish";gt($E);class DE extends vs{apply(t){return st(()=>q(t,bv(Ih(t))))}}DE.className="mish";gt(DE);function oo(s){return s.getClassName()}function Ag(s,t={}){return Rh(s,ti.getMap().classNameMap,t,"activation")}function ao(s){if(s==null){const t={};return t.className="linear",t.config={},Ag(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},Ag(t)}else return s instanceof vs?s:Ag(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f8(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class FE extends hc{}class LE extends FE{constructor(t){super(),f8(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return st(()=>{let e=Rn([1]);return this.hasL1&&(e=yt(e,qt(q(this.l1,An(t))))),this.hasL2&&(e=yt(e,qt(q(this.l2,Dh(t))))),Q(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}LE.className="L1L2";gt(LE);const x_={l1l2:"L1L2"};function Ue(s){return vb(s)}function v_(s,t={}){return Rh(s,ti.getMap().classNameMap,t,"regularizer")}function Je(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in x_?x_[s]:s,config:{}};return v_(e)}else return s instanceof FE?s:v_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class PE extends we{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=ce(t);let n=Lr(t);return this.maxValue!=null&&(n=zs(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}PE.className="ReLU";gt(PE);class OE extends we{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ce(t);return Tv(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}OE.className="LeakyReLU";gt(OE);class zE extends we{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ze(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Je(t.alphaRegularizer),this.alphaConstraint=In(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new j(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Ne(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(this.sharedAxes!=null)for(let i=1;i<t.length;++i)n[i]=t[i];this.inputSpec=[new _n({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ce(t),$v(t,this.alpha.read())}getConfig(){const t={alphaInitializer:tn(this.alphaInitializer),alphaRegularizer:Ue(this.alphaRegularizer),alphaConstraint:Cn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}zE.className="PReLU";gt(zE);class BE extends we{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new de(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ce(t);return Jp(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}BE.className="ELU";gt(BE);class UE extends we{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const n=ce(t);return q(n,Nt(Vs(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}UE.className="ThresholdedReLU";gt(UE);class VE extends we{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new $b().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ce(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}VE.className="Softmax";gt(VE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rl(s,t,e){if(typeof s=="number")return Ia(s,t);if(s.length!==t)throw new j(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let n=0;n<t;++n){const i=s[n];if(!j6(i))throw new j(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${i}`)}return s}function Ri(s,t,e,n,i=1){if(s==null)return s;const r=t+(t-1)*(i-1);let o;return e==="same"?o=s:o=s-r+1,Math.floor((o+n-1)/n)}function Qi(s,t,e,n){if(s==null)return null;if(n==="valid")s=s*t+ro([e-t,0]);else if(n==="same")s=s*t;else throw new j(`Unsupport padding mode: ${n}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Db(s,t){return st(()=>(dn(t),t==="channelsFirst"?Se(s,[0,2,3,1]):s))}function WE(s,t){return st(()=>(dn(t),t==="channelsFirst"?Se(s,[0,2,3,4,1]):s))}function p8(s,t,e,n=1,i="valid",r,o=1){return st(()=>{if(r==null&&(r=Pi()),dn(r),s.shape.length!==3)throw new j(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new j(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new j(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(s=Se(s,[0,2,1])),i==="causal")throw new de("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=kI(s,t,n,i==="same"?"same":"valid","NWC",o);return e!=null&&(a=Ui(a,e)),a})}function b_(s,t,e,n=[1,1],i="valid",r,o,a=null){return st(()=>{if(r==null&&(r=Pi()),dn(r),s.rank!==3&&s.rank!==4)throw new j(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new j(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let l=Db(s,r);if(i==="causal")throw new de("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=hG({x:l,filter:t,strides:n,pad:i==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:a}),r==="channelsFirst"&&(l=Se(l,[0,3,1,2])),l})}function m8(s,t,e,n=[1,1,1],i="valid",r,o){return st(()=>{if(r==null&&(r=Pi()),dn(r),s.rank!==4&&s.rank!==5)throw new j(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new j(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let a=WE(s,r);if(i==="causal")throw new de("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=CU(a,t,n,i==="same"?"same":"valid","NDHWC",o),e!=null&&(a=Ui(a,e)),r==="channelsFirst"&&(a=Se(a,[0,4,1,2,3])),a})}class dm extends we{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",dm.verifyArgs(e),this.rank=t,$n(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new de(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Rl(e.kernelSize,t,"kernelSize"),this.strides=Rl(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Ws(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,dn(this.dataFormat),this.activation=ao(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Ze(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=In(e.biasConstraint),this.biasRegularizer=Je(e.biasRegularizer),this.activityRegularizer=Je(e.activityRegularizer),this.dilationRate=Rl(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new j(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new j(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new j(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Ji("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!bb(t.kernelSize,"number",1,3))throw new j(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:oo(this.activation),useBias:this.useBias,biasInitializer:tn(this.biasInitializer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),biasConstraint:Cn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class mc extends dm{constructor(t,e){super(t,e),this.kernel=null,mc.verifyArgs(e),this.filters=e.filters,$n(this.filters,"filters"),this.kernelInitializer=Ze(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=In(e.kernelConstraint),this.kernelRegularizer=Je(e.kernelRegularizer)}build(t){t=Ne(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new j(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],i=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return st(()=>{t=ce(t);let n;const i=this.bias==null?null:this.bias.read(),r=UT(this.activation.getClassName());if(r!=null&&this.rank===2)n=b_(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=p8(t,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=b_(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=m8(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new de("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Ne(t);const e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const o=Ri(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(o)}let i=[t[0]];return this.dataFormat==="channelsLast"?(i=i.concat(e),i.push(this.filters)):(i.push(this.filters),i=i.concat(e)),i}getConfig(){const t={filters:this.filters,kernelInitializer:tn(this.kernelInitializer),kernelRegularizer:Ue(this.kernelRegularizer),kernelConstraint:Cn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new j(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Oh extends mc{constructor(t){super(2,t),Oh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!bb(t.kernelSize,"number",1,2))throw new j(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Oh.className="Conv2D";gt(Oh);class zh extends mc{constructor(t){super(3,t),zh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new j(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}zh.className="Conv3D";gt(zh);class GE extends Oh{constructor(t){if(super(t),this.inputSpec=[new _n({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ne(t),t.length!==4)throw new j("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _n({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return st(()=>{let n=ce(t);if(n.shape.length!==4)throw new j(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=i[o],c=i[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=Qi(l,d,u,this.padding),g=Qi(c,f,h,this.padding),m=[r,p,g,this.filters];this.dataFormat!=="channelsLast"&&(n=Se(n,[0,2,3,1]));let x=AI(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Se(x,[0,3,1,2])),this.bias!=null&&(x=Ui(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Ne(t);const e=t.slice();let n,i,r;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3):(n=3,i=1,r=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[i]=Qi(e[i],l,o,this.padding),e[r]=Qi(e[r],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}GE.className="Conv2DTranspose";gt(GE);class HE extends zh{constructor(t){if(super(t),this.inputSpec=[new _n({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ne(t),t.length!==5)throw new j("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _n({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return st(()=>{let n=ce(t);if(n.shape.length!==5)throw new j(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=i[l],u=i[o],h=i[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],g=this.strides[0],m=this.strides[1],x=this.strides[2],v=Qi(c,g,d,this.padding),b=Qi(u,m,f,this.padding),y=Qi(h,x,p,this.padding),w=[r,v,b,y,this.filters];this.dataFormat!=="channelsLast"&&(n=Se(n,[0,2,3,4,1]));let S=EU(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Se(S,[0,4,1,2,3])),this.bias!==null&&(S=Ui(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=Ne(t);const e=t.slice();let n,i,r,o;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3,o=4):(n=4,i=1,r=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return e[n]=this.filters,e[i]=Qi(e[i],u,a,this.padding),e[r]=Qi(e[r],h,l,this.padding),e[o]=Qi(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}HE.className="Conv3DTranspose";gt(HE);class qE extends mc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new j("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new j("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new j(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ze(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Je(e.depthwiseRegularizer),this.depthwiseConstraint=In(e.depthwiseConstraint),this.pointwiseInitializer=Ze(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Je(e.pointwiseRegularizer),this.pointwiseConstraint=In(e.pointwiseConstraint)}build(t){if(t=Ne(t),t.length<this.rank+2)throw new j(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new j(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],i=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new _n({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return st(()=>{t=ce(t);let n;if(this.rank===1)throw new de("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Se(t,[0,2,3,1])),n=QI(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Ui(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Se(n,[0,3,1,2])),n})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=tn(this.depthwiseInitializer),t.pointwiseInitializer=tn(this.pointwiseInitializer),t.depthwiseRegularizer=Ue(this.depthwiseRegularizer),t.pointwiseRegularizer=Ue(this.pointwiseRegularizer),t.depthwiseConstraint=Cn(this.depthwiseConstraint),t.pointwiseConstraint=Cn(this.pointwiseConstraint),t}}qE.className="SeparableConv";class XE extends qE{constructor(t){super(2,t)}}XE.className="SeparableConv2D";gt(XE);class fm extends mc{constructor(t){super(1,t),fm.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!bb(t.kernelSize,"number",1,1))throw new j(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}fm.className="Conv1D";gt(fm);class jE extends we{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return st(()=>{if(t=ce(t),this.dataFormat==="channelsLast"){const n=Rd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Rd(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const n=Rd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Rd(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}jE.className="Cropping2D";gt(jE);class KE extends we{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,dn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,H6(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,n]}else{const e=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return st(()=>{let n=ce(t);const i=n.shape;if(this.dataFormat==="channelsFirst"){n=Se(n,[0,2,3,1]);const r=this.size[0]*i[2],o=this.size[1]*i[3],a=this.interpolation==="nearest"?Sl.resizeNearestNeighbor(n,[r,o]):Sl.resizeBilinear(n,[r,o]);return Se(a,[0,3,1,2])}else{const r=this.size[0]*i[1],o=this.size[1]*i[2];return this.interpolation==="nearest"?Sl.resizeNearestNeighbor(n,[r,o]):Sl.resizeBilinear(n,[r,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}KE.className="UpSampling2D";gt(KE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g8(s,t,e=[1,1],n="valid",i,r){return st(()=>{i==null&&(i=Pi()),dn(i);let o=Db(s,i);if(s.rank!==4)throw new j(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new j(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Sv(o,t,e,n==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(o=Se(o,[0,3,1,2])),o})}class YE extends dm{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ze(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=In(t.depthwiseConstraint),this.depthwiseRegularizer=Je(t.depthwiseRegularizer)}build(t){if(t=Ne(t),t.length<4)throw new j(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new j(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],i=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return st(()=>{t=ce(t);let n=g8(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Ui(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Ne(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Ri(e,this.kernelSize[0],this.padding,this.strides[0]),o=Ri(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],i,r,o]:[t[0],r,o,i]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=tn(this.depthwiseInitializer),t.depthwiseRegularizer=Ue(this.depthwiseRegularizer),t.depthwiseConstraint=Cn(this.depthwiseRegularizer),t}}YE.className="DepthwiseConv2D";gt(YE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZE(s,t,e,n){if(Array.isArray(s)){if(t!=null||e!=null)throw new j("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=s.slice(s.length-n,s.length),s=s.slice(0,s.length-n)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return t=i(t),e=i(e),{inputs:s,initialState:t,constants:e}}function JE(s,t,e,n=!1,i,r,o=!1,a=!1){return st(()=>{const l=t.shape.length;if(l<3)throw new j(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Li(2,l));if(t=Se(t,c),r!=null)throw new de("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Nt(Nt(i,"bool"),"float32"),i.rank===l-1&&(i=_s(i,-1)),i=Se(i,c)),n&&(t=Sa(t,0),i!=null&&(i=Sa(i,0)));const u=[];let h,d=e;const f=t.shape[0],p=Kl(t);let g;i!=null&&(g=Kl(i));for(let x=0;x<f;++x){const v=p[x],b=st(()=>s(v,d));if(i==null)h=b[0],d=b[1];else{const y=st(()=>{const w=g[x],S=Xt(hi(w),w),C=yt(q(b[0],w),q(d[0],S)),_=d.map((I,T)=>yt(q(b[1][T],w),q(I,S)));return{output:C,newStates:_}});h=y.output,d=y.newStates}a&&u.push(h)}let m;return a&&(m=io(u,1)),[h,m,d]})}class Co extends we{constructor(t){super(t);let e;if(t.cell==null)throw new j("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Pb({cells:t.cell}):e=t.cell,e.stateSize==null)throw new j("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new _n({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Li(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ax(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let i;if(this.returnSequences?i=[t[0],t[1],n]:i=[t[0],n],this.returnState){const r=[];for(const o of e)r.push([t[0],o]);return[i].concat(r)}else return i}computeMask(t,e){return st(()=>{Array.isArray(e)&&(e=e[0]);const n=this.returnSequences?e:null;if(this.returnState){const i=this.states.map(r=>null);return[n].concat(i)}else return n})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new de("Constants support is not implemented in RNN yet.");Ax(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new _n({shape:[e,null,...n]});const i=[t[0]].concat(t.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ae(this.stateSpec.map(o=>o.shape[o.shape.length-1]),r))throw new j(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(o=>new _n({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){st(()=>{if(!this.stateful)throw new Zi("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(n==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>Rn([n,i])):this.states_=[Rn([n,this.cell.stateSize])];else if(t==null)me(this.states_),this.keptStates!=null&&(me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>Rn([n,i])):this.states_[0]=Rn([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):me(this.states_);for(let i=0;i<this.states_.length;++i){const r=t[i],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[n,o];if(!Ae(r.shape,a))throw new j(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>rr(i.clone()))})}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=ZE(t,n,i,this.numConstants);t=r.inputs,n=r.initialState,i=r.constants;let o=[],a=[];if(n!=null){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const c of n)this.stateSpec.push(new _n({shape:c.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(e.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof tr){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return st(()=>{const n=e==null?null:e.mask,i=e==null?null:e.training;let r=e==null?null:e.initialState;t=ce(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new j(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},c=JE((p,g)=>{const m=this.cell.call([p].concat(g),a);return[m[0],m.slice(1)]},t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,i);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(t){return st(()=>{let e=Rn(t.shape);return e=qt(e,[1,2]),e=$h(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Mx(e,[1,n]):e):this.cell.stateSize>1?[Mx(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Co.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const i=e.cell,r=Mr(i,n);return new t(Object.assign(e,{cell:r}))}}Co.className="RNN";gt(Co);class pm extends we{}class Fb extends pm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$n(this.units,"units"),this.activation=ao(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ze(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Je(t.kernelRegularizer),this.recurrentRegularizer=Je(t.recurrentRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=Yl([1,ro([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Yl([1,ro([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ne(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return st(()=>{if(t=t,t.length!==2)throw new j(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const i=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lo({ones:()=>hi(t),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lo({ones:()=>hi(n),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?r=ir(q(t,o),this.kernel.read()):r=ir(t,this.kernel.read()),this.bias!=null&&(r=Ui(r,this.bias.read())),a!=null&&(n=q(n,a));let l=yt(r,ir(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:oo(this.activation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Ue(this.kernelRegularizer),recurrentRegularizer:Ue(this.recurrentRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Cn(this.kernelConstraint),recurrentConstraint:Cn(this.recurrentConstraint),biasConstraint:Cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Fb.className="SimpleRNNCell";gt(Fb);class QE extends Co{constructor(t){t.cell=new Fb(t),super(t)}call(t,e){return st(()=>{this.cell.dropoutMask!=null&&(me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return new t(e)}}QE.className="SimpleRNN";gt(QE);class Lb extends pm{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new j("GRUCell does not support reset_after parameter set to true.");this.units=t.units,$n(this.units,"units"),this.activation=ao(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ao(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ze(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Je(t.kernelRegularizer),this.recurrentRegularizer=Je(t.recurrentRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=Yl([1,ro([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Yl([1,ro([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ne(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return st(()=>{if(t=t,t.length!==2)throw new j(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training==null?!1:e.training;let i=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lo({ones:()=>hi(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lo({ones:()=>hi(i),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=q(t,r[0]));let u=ir(t,this.kernel.read());this.useBias&&(u=Ui(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=q(i,o[0]));const h=this.recurrentKernel.read(),[d,f]=Os(h,[2*this.units,this.units],h.rank-1),p=ir(i,d),[g,m,x]=Os(u,3,u.rank-1),[v,b]=Os(p,2,p.rank-1);a=this.recurrentActivation.apply(yt(g,v)),l=this.recurrentActivation.apply(yt(m,b));const y=ir(q(l,i),f);c=this.activation.apply(yt(x,y));const w=yt(q(a,i),q(yt(1,en(a)),c));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:oo(this.activation),recurrentActivation:oo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Ue(this.kernelRegularizer),recurrentRegularizer:Ue(this.recurrentRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Cn(this.kernelConstraint),recurrentConstraint:Cn(this.recurrentConstraint),biasConstraint:Cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Lb.className="GRUCell";gt(Lb);class t2 extends Co{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Lb(t),super(t)}call(t,e){return st(()=>{this.cell.dropoutMask!=null&&(me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}t2.className="GRU";gt(t2);class mm extends pm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$n(this.units,"units"),this.activation=ao(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ao(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ze(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Je(t.kernelRegularizer),this.recurrentRegularizer=Je(t.recurrentRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=Yl([1,ro([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Yl([1,ro([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Ne(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,o=this.units;i=new(e=class extends mi{apply(l,c){const u=r.apply([o]),h=new wb().apply([o]),d=r.apply([o*2]);return n_(n_(u,h),d)}},e.className="CustomInit",e)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return st(()=>{const n=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new j(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let i=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lo({ones:()=>hi(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lo({ones:()=>hi(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=q(t,o[0]));let d=ir(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=q(i,a[0])),d=yt(d,ir(i,this.recurrentKernel.read())),this.useBias&&(d=Ui(d,this.bias.read()));const[f,p,g,m]=Os(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=yt(q(c,r),q(l,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const x=q(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:oo(this.activation),recurrentActivation:oo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ue(this.kernelRegularizer),recurrentRegularizer:Ue(this.recurrentRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Cn(this.kernelConstraint),recurrentConstraint:Cn(this.recurrentConstraint),biasConstraint:Cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}mm.className="LSTMCell";gt(mm);class e2 extends Co{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new mm(t),super(t)}call(t,e){return st(()=>{this.cell.dropoutMask!=null&&(me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}e2.className="LSTM";gt(e2);class Pb extends pm{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return st(()=>{t=t;let n=t.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(n.splice(0,a.stateSize.length)):i.push(n.splice(0,1));i.reverse();const r=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];n=i[a],a===0?o=[t[0]].concat(n):o=[o[0]].concat(n),o=l.call(o,e),r.push(o.slice(1))}n=[];for(const a of r.slice().reverse())n.push(...a);return[o[0]].concat(n)})}build(t){Ax(t)&&(t=t[0]),t=t;let e;this.cells.forEach((n,i)=>{ia(`RNNCell_${i}`,()=>{n.build(t),Array.isArray(n.stateSize)?e=n.stateSize[0]:e=n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),i={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),i)}static fromConfig(t,e,n={}){const i=[];for(const r of e.cells)i.push(Mr(r,n));return new t({cells:i})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Nx(t)}setWeights(t){const e=[];for(const n of this.cells){const i=n.weights.length,r=t.splice(i);for(let o=0;o<n.weights.length;++o)e.push([n.weights[o],r[o]])}Mb(e)}}Pb.className="StackedRNNCells";gt(Pb);function lo(s){const{ones:t,rate:e,training:n=!1,count:i=1,dropoutFunc:r}=s,o=()=>r!=null?r(t(),e):jT(t(),e),a=()=>Fh(o,t,n);return!i||i<=1?rr(a().clone()):Array(i).fill(void 0).map(a).map(c=>rr(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var x8=globalThis&&globalThis.__rest||function(s,t){var e={};for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&t.indexOf(n)<0&&(e[n]=s[n]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,n=Object.getOwnPropertySymbols(s);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(s,n[i])&&(e[n[i]]=s[n[i]]);return e};class n2 extends Co{constructor(t){if(t.unroll)throw new de("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new de("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new _n({ndim:5})]}call(t,e){return st(()=>{if(this.cell.dropoutMask!=null&&(me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new j("ConvRNN2D cell does not support constants");const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return st(()=>{const{stateSize:e}=this.cell,n=t.shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)],o=Rn(r);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){st(()=>{if(!this.stateful)throw new Zi("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)];if(n[0]==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Rn(r)):this.states_=[Rn(r)];else if(t==null)me(this.states_),this.keptStates!=null&&(me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Rn(r)):this.states_[0]=Rn(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):me(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=r;if(!Ae(l.shape,c))throw new j(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>rr(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:i,padding:r,strides:o,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=Ri(c,i[0],r,o[0],a[0]),d=Ri(u,i[1],r,o[1],a[1]);return[...t.slice(0,2),...l?[n,h,d]:[h,d,n]]}}n2.className="ConvRNN2D";class Ob extends mm{constructor(t){const{filters:e,kernelSize:n,strides:i,padding:r,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,$n(this.filters,"filters"),this.kernelSize=Rl(n,2,"kernelSize"),this.kernelSize.forEach(l=>$n(l,"kernelSize")),this.strides=Rl(i||1,2,"strides"),this.strides.forEach(l=>$n(l,"strides")),this.padding=r||"valid",Ws(this.padding),this.dataFormat=o||"channelsLast",dn(this.dataFormat),this.dilationRate=Rl(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>$n(l,"dilationRate"))}build(t){var e;t=Ne(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new j(`The channel dimension of the input should be defined. Found ${t[n]}`);const i=t[n],r=4,o=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends mi{apply(d,f){const p=c.apply([u]),g=wo([u]),m=c.apply([u*2]);return yb([p,g,m])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return st(()=>{if(t.length!==3)throw new j(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,i=t[0],r=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lo({ones:()=>hi(i),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(D,W,G)=>!W||!W[G]?D:q(W[G],D);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),f=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lo({ones:()=>hi(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let g=c(r,p,0),m=c(r,p,1),x=c(r,p,2),v=c(r,p,3);const b=3,[y,w,S,C]=Os(this.kernel.read(),a,b),[_,I,T,N]=this.useBias?Os(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,_,this.padding),h=this.inputConv(h,w,I,this.padding),d=this.inputConv(d,S,T,this.padding),f=this.inputConv(f,C,N,this.padding);const[O,M,E,A]=Os(this.recurrentKernel.read(),a,b);g=this.recurrentConv(g,O),m=this.recurrentConv(m,M),x=this.recurrentConv(x,E),v=this.recurrentConv(v,A);const R=this.recurrentActivation.apply(yt(u,g)),V=this.recurrentActivation.apply(yt(h,m)),P=yt(q(V,o),q(R,this.activation.apply(yt(d,x)))),$=q(this.recurrentActivation.apply(yt(f,v)),this.activation.apply(P));return[$,$,P]})}getConfig(){const t=super.getConfig(),e=x8(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),n)}inputConv(t,e,n,i){const r=wa(t,e,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Ui(r,n,this.dataFormat):r}recurrentConv(t,e){return wa(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Ob.className="ConvLSTM2DCell";gt(Ob);class s2 extends n2{constructor(t){const e=new Ob(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}s2.className="ConvLSTM2D";gt(s2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zb extends we{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,n=[];for(let i=0;i<this.noiseShape.length;++i)n.push(this.noiseShape[i]==null?e[i]:this.noiseShape[i]);return n}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t);if(0<this.rate&&this.rate<1){const i=e.training==null?!1:e.training,r=this.getNoiseShape(n);return Fh(()=>jT(n,this.rate,r,this.seed),()=>n,i)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}zb.className="Dropout";gt(zb);class i2 extends zb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}i2.className="SpatialDropout1D";gt(i2);class Bb extends we{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,$n(this.units,"units"),this.activation=ao(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=In(t.kernelConstraint),this.biasConstraint=In(t.biasConstraint),this.kernelRegularizer=Je(t.kernelRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.activityRegularizer=Je(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Ne(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Ne(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t),i=UT(this.activation.getClassName());let r;return i!=null?r=ir(n,this.kernel.read(),i,this.bias?this.bias.read():null):(r=ir(n,this.kernel.read()),this.bias!=null&&(r=Ui(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:oo(this.activation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Ue(this.kernelRegularizer),biasRegularizer:Ue(this.biasRegularizer),activityRegularizer:Ue(this.activityRegularizer),kernelConstraint:Cn(this.kernelConstraint),biasConstraint:Cn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Bb.className="Dense";gt(Bb);class r2 extends we{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ne(t);for(const e of t.slice(1))if(e==null)throw new j(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],to(t,1)]}call(t,e){return st(()=>{this.invokeCallHook(t,e);let n=ce(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){const i=[0];for(let r=2;r<n.rank;++r)i.push(r);i.push(1),n=Se(n,i)}return Z6(n)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}r2.className="Flatten";gt(r2);class o2 extends we{constructor(t){super(t),this.supportsMasking=!0,this.activation=ao(t.activation)}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t);return this.activation.apply(n)})}getConfig(){const t={activation:oo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}o2.className="Activation";gt(o2);class a2 extends we{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return st(()=>(t=ce(t),K6(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}a2.className="RepeatVector";gt(a2);class l2 extends we{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",i=e.slice();let r=1,o=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(o===null)o=l;else throw new j("Can only specifiy one unknown dimension.");else r*=c}const a=to(t);if(o!==null){if(r===0||a%r!==0)throw new j(n);i[o]=a/r}else if(a!==r)throw new j(n);return i}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t),i=n.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return Q(n,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}l2.className="Reshape";gt(l2);class c2 extends we{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Li(1,t.dims.length+1);if(!Ae(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _n({ndim:this.dims.length+1})]}computeOutputShape(t){t=Ne(t);const e=t.slice();return this.dims.forEach((n,i)=>{e[i+1]=t[n]}),e}call(t,e){return Se(ce(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}c2.className="Permute";gt(c2);class u2 extends we{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ce(t),i=-1;return _x(uu(n,this.maskValue),i)}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t),i=-1,r=!0,o=_x(uu(n,this.maskValue),i,r);return q(n,Nt(o,n.dtype))})}}u2.className="Masking";gt(u2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class h2 extends we{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(qe(t.inputLength))}this.inputDim=t.inputDim,$n(this.inputDim,"inputDim"),this.outputDim=t.outputDim,$n(this.outputDim,"outputDim"),this.embeddingsInitializer=Ze(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Je(t.embeddingsRegularizer),this.activityRegularizer=Je(t.activityRegularizer),this.embeddingsConstraint=In(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return st(()=>this.maskZero?(t=ce(t),uu(t,Ie(t))):null)}computeOutputShape(t){if(t=Ne(t),this.inputLength==null)return[...t,this.outputDim];const e=qe(this.inputLength);if(e.length!==t.length-1)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let i=0;i<e.length;++i){const r=e[i],o=t[i+1];if(r!=null&&o!=null&&r!==o)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return st(()=>{this.invokeCallHook(t,e);let n=ce(t);n.dtype!=="int32"&&(n=Pa(n,"int32"));const i=XT(this.embeddings.read(),Q(n,[n.size]));return Q(i,Ne(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:tn(this.embeddingsInitializer),embeddingsRegularizer:Ue(this.embeddingsRegularizer),activityRegularizer:Ue(this.activityRegularizer),embeddingsConstraint:Cn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}h2.className="Embedding";gt(h2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Oa extends we{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new de}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const n=t.slice(0,t.length-e.length);for(let i=0;i<e.length;++i){const r=t[t.length-e.length+i],o=e[i];if(r==null||o==null||r<0||o<0)n.push(null);else if(r===1)n.push(o);else if(o===1)n.push(r);else{if(r!==o)throw new j("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ne(t)]),t=t,t.length<2)throw new j(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=Qr(e),e.length>1)throw new j(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}const i=t.map(r=>r.length);t.indexOf(null)===-1&&Qr(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return st(()=>{if(t=t,this.reshapeRequired){const n=[],i=t.map(r=>r.rank);if(i.indexOf(null)===-1){const r=ro(i);for(let o of t){const a=o.rank;for(let l=0;l<r-a;++l)o=$h(o,1);n.push(o)}return this.mergeFunction(n)}else{let r=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=Q(l,[h].concat(to(u.slice(1))));f=Se(f,[1,0]),f=Q(f,d),n.push(f),r=!0}else if(c>1){const u=Li(1,c).concat([0]);n.push(Se(l,u)),r=!0}else n.push(l)}let o=this.mergeFunction(n);const a=o.rank;if(r){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=Q(Se(Q(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Li(0,a-1));o=Se(o,l)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let i=1;i<t.length;++i){const r=t[i]==null?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);return n=Qr(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return st(()=>{if(e==null)return null;if(!Array.isArray(e))throw new j("`mask` should be an Array");if(!Array.isArray(t))throw new j("`inputs` should be an Array");if(e.length!==t.length)throw new j(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(i=>i==null))return null;e=e.map(i=>i==null?i:_s(i,0));let n=e[0];for(let i=1;i<e.length-1;++i)n=Nr(n,e[i]);return n})}}class d2 extends Oa{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=yt(e,t[n]);return e})}}d2.className="Add";gt(d2);class f2 extends Oa{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=q(e,t[n]);return e})}}f2.className="Multiply";gt(f2);class p2 extends Oa{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=yt(e,t[n]);return q(1/t.length,e)})}}p2.className="Average";gt(p2);class m2 extends Oa{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=yo(e,t[n]);return e})}}m2.className="Maximum";gt(m2);class g2 extends Oa{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=em(e,t[n]);return e})}}g2.className="Minimum";gt(g2);class x2 extends Oa{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new j("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const i of t)if(i!=null){e=!1;break}if(e)return;const n=[];for(let i=0;i<t.length;++i){const r=t[i].slice();r.splice(this.axis,1);let o=!1;for(const a of n)if(Ae(a,r)){o=!0;break}o||n.push(r)}if(n.length>1)throw new j("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return st(()=>yb(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new j("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),i=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(n[i]==null||r[i]==null){n[i]=null;break}n[i]+=r[i]}return n}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new j("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new j("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new j(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return st(()=>{let n=!0;if(e.forEach(o=>{if(o!=null){n=!1;return}}),n)return null;const i=[];for(let o=0;o<t.length;++o)e[o]==null?i.push(Nt(hi(t[o]),"bool")):e[o].rank<t[o].rank?i.push(_s(e[o],-1)):i.push(e[o]);const r=Zn(i,this.axis);return MI(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}x2.className="Concatenate";gt(x2);function Fc(s,t){for(;s<0;)s+=t;return s}function v8(s,t,e){if(s.shape.length>3||t.shape.length>3)throw new de("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),F(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),s.dtype==="complex64"||t.dtype==="complex64")throw new de("batchDot is not implemented for complex64-type Tensors yet.");const n=s.shape.length,i=t.shape.length;e==null&&(e=[n-1,i-2]);const r=e;return st(()=>{let o;if(n>i){o=n-i;const l=[];for(let c=0;c<o;++c)l.push(1);t=Q(t,t.shape.concat(l))}else if(i>n){o=i-n;const l=[];for(let c=0;c<o;++c)l.push(1);s=Q(s,s.shape.concat(l))}else o=0;let a;if(s.shape.length===2&&t.shape.length===2)r[0]===r[1]?a=qt(q(s,t),r[0]):a=qt(q(Se(s,[1,0]),t),r[1]);else{const l=r[0]!==s.shape.length-1,c=r[1]===t.shape.length-1;a=ke(s,t,l,c)}if(o>0){let l;n>i?l=n+i-3:l=n-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=Eh(a,c)}return a.shape.length===1&&(a=_s(a,1)),a})}class v2 extends Oa{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){F(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new de("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);if(e[i[0]]!==n[i[1]])throw new j(`Dimension incompatibility: ${e[i[0]]} !== ${n[i[1]]}`)}mergeFunction(t){if(t.length!==2)throw new j(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],n=t[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,o)=>Fc(r,t[o].shape.length)):i=[Fc(this.axes,e.shape.length),Fc(this.axes,n.shape.length)],this.normalize&&(e=vf(e,i[0]),n=vf(n,i[1])),v8(e,n,i)}interpretAxes(t,e){let n;return Array.isArray(this.axes)?n=this.axes:n=[Fc(this.axes,t.length),Fc(this.axes,e.length)],n}computeOutputShape(t){F(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new de("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);e.splice(i[0],1),n.splice(i[1],1),n.splice(0,1);const r=e.concat(n);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}v2.className="Dot";gt(v2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class b2 extends we{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t);return Fh(()=>yt(lm(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}b2.className="GaussianNoise";gt(b2);class y2 extends we{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=ce(t);return this.rate>0&&this.rate<1?Fh(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return q(n,lm(n.shape,1,r))},()=>n,e.training||!1):n})}}y2.className="GaussianDropout";gt(y2);class w2 extends we{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ce(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return st(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Fh(()=>{const r=ce(t),o=1.6732632423543772,a=1.0507009873554805,l=-o*a;let c=Da(nm(n),this.rate);c=Pa(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=yt(q(r,c),q(yt(c,-1),l));return yt(q(d,u),h)},()=>ce(t),e.training||!1)}return t})}}w2.className="AlphaDropout";gt(w2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fu(s,t,e,n,i,r=.001){let o;if(s.rank===2)o=tU(s,t,e,n,i,r);else if(s.rank===3)o=nU(s,t,e,n,i,r);else if(s.rank===4)o=iU(s,t,e,n,i,r);else throw new de(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return o}function b8(s,t,e,n,i=.001){return st(()=>{const r=Av(s,n),o=r.mean,a=r.variance;return[fu(s,o,a,e,t,i),o,a]})}function y8(s,t,e,n,i=.001){return st(()=>{const r=Av(s,n),o=r.mean,a=r.variance,l=[];for(const p of Li(0,s.rank))n.indexOf(p)!==-1?l.push(1):l.push(s.shape[p]);const c=Q(o,l),u=Q(a,l),h=t==null?null:Q(t,l),d=e==null?null:Q(e,l);return[fu(s,c,u,d,h,i),o,a]})}function w8(s,t,e,n,i=.001){return Ae(n.slice().sort(),Li(0,s.rank-1))?b8(s,t,e,n,i):y8(s,t,e,n,i)}class _2 extends we{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ze(t.betaInitializer||"zeros"),this.gammaInitializer=Ze(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ze(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ze(t.movingVarianceInitializer||"ones"),this.betaConstraint=In(t.betaConstraint),this.gammaConstraint=In(t.gammaConstraint),this.betaRegularizer=Je(t.betaRegularizer),this.gammaRegularizer=Je(t.gammaRegularizer)}build(t){t=Ne(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(n==null)throw new j(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new _n({ndim:t.length,axes:{[e]:n}})];const i=[n];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return st(()=>{const n=e.training==null?!1:e.training,i=ce(t),r=i.shape,o=r.length,a=Li(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=Ia(1,o);c[l]=r[l];const u=a.slice();u.sort();const h=!Ae(u,Li(0,o).slice(0,o-1)),d=()=>{if(h){const v=Q(this.movingMean.read(),c),b=Q(this.movingVariance.read(),c),y=this.center?Q(this.beta.read(),c):null,w=this.scale?Q(this.gamma.read(),c):null;return fu(i,v,b,y,w,this.epsilon)}else return fu(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[f,p,g]=w8(i,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(v,b,y)=>{st(()=>{const w=1-y,S=v.read(),C=q(Xt(S,b),w);v.write(Xt(S,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tn(this.betaInitializer),gammaInitializer:tn(this.gammaInitializer),movingMeanInitializer:tn(this.movingMeanInitializer),movingVarianceInitializer:tn(this.movingVarianceInitializer),betaRegularizer:Ue(this.betaRegularizer),gammaRegularizer:Ue(this.gammaRegularizer),betaConstraint:Cn(this.betaConstraint),gammaConstraint:Cn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}_2.className="BatchNormalization";gt(_2);class S2 extends we{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ze(t.betaInitializer||"zeros"),this.gammaInitializer=Ze(t.gammaInitializer||"ones"),this.betaRegularizer=Je(t.betaRegularizer),this.gammaRegularizer=Je(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Ne(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Qr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(r=>t[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(t,e){const n=ce(t),i=n.shape,r=i.length;return st(()=>{let{mean:a,variance:l}=Av(n,this.axis,!0);const c=Ia(1,r);for(const g of this.axis)c[g]=i[g];const u=g=>g!=null&&g.shape.length!==r?Q(g,c):g;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(f.push(i[g]),p.push(1)):(f.push(1),p.push(i[g]));return a=ki(a,f),l=ki(l,f),h!=null&&(h=ki(h,p)),d!=null&&(d=ki(d,p)),fu(n,a,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tn(this.betaInitializer),gammaInitializer:tn(this.gammaInitializer),betaRegularizer:Ue(this.betaRegularizer),gammaRegularizer:Ue(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}S2.className="LayerNormalization";gt(S2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _8(s,t,e){return st(()=>{if(s.rank!==4)throw new j(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new j("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Pi()),e!=="channelsLast"&&e!=="channelsFirst")throw new j(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],Nv(s,n)})}class C2 extends we{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Pi():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new j(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new j(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new j(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new _n({ndim:4})]}computeOutputShape(t){t=Ne(t);let e,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],e,n]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],e,n,t[3]])}call(t,e){return st(()=>_8(ce(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}C2.className="ZeroPadding2D";gt(C2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gm(s,t,e,n,i,r){return st(()=>{dn(i),WT(r),Ws(n),e==null&&(e=[1,1]),n==null&&(n="valid"),i==null&&(i=Pi()),r==null&&(r="max"),s=Db(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=kv(s,t,e,a):o=vv(s,t,e,a),i==="channelsFirst"&&(o=Se(o,[0,3,1,2])),o})}function I2(s,t,e,n,i,r){return st(()=>{dn(i),WT(r),Ws(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),i==null&&(i=Pi()),r==null&&(r="max"),s=WE(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=BV(s,t,e,a):o=H4(s,t,e,a),i==="channelsFirst"&&(o=Se(o,[0,4,1,2,3])),o})}class T2 extends we{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new j(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if($n(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new j(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);$n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Ws(this.padding),this.inputSpec=[new _n({ndim:3})]}computeOutputShape(t){t=Ne(t);const e=Ri(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return st(()=>{this.invokeCallHook(t,e),t=$h(ce(t),2);const n=this.poolingFunction(ce(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Eh(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class E2 extends T2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return dn(r),Ws(i),gm(t,e,n,i,r,"max")}}E2.className="MaxPooling1D";gt(E2);class M2 extends T2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return dn(r),Ws(i),gm(t,e,n,i,r,"avg")}}M2.className="AveragePooling1D";gt(M2);class k2 extends we{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new j(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];$n(this.poolSize,"poolSize"),$n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,dn(this.dataFormat),Ws(this.padding),this.inputSpec=[new _n({ndim:4})]}computeOutputShape(t){t=Ne(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Ri(e,this.poolSize[0],this.padding,this.strides[0]),n=Ri(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return st(()=>(this.invokeCallHook(t,e),this.poolingFunction(ce(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class A2 extends k2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return dn(r),Ws(i),gm(t,e,n,i,r,"max")}}A2.className="MaxPooling2D";gt(A2);class N2 extends k2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return dn(r),Ws(i),gm(t,e,n,i,r,"avg")}}N2.className="AveragePooling2D";gt(N2);class R2 extends we{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new j(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];$n(this.poolSize,"poolSize"),$n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,dn(this.dataFormat),Ws(this.padding),this.inputSpec=[new _n({ndim:5})]}computeOutputShape(t){t=Ne(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Ri(e,this.poolSize[0],this.padding,this.strides[0]),n=Ri(n,this.poolSize[1],this.padding,this.strides[1]),i=Ri(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,i]:[t[0],e,n,i,t[4]]}call(t,e){return st(()=>(this.invokeCallHook(t,e),this.poolingFunction(ce(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class $2 extends R2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return dn(r),Ws(i),I2(t,e,n,i,r,"max")}}$2.className="MaxPooling3D";gt($2);class D2 extends R2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return dn(r),Ws(i),I2(t,e,n,i,r,"avg")}}D2.className="AveragePooling3D";gt(D2);class F2 extends we{constructor(t){super(t),this.inputSpec=[new _n({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new de}}class L2 extends F2{constructor(t){super(t||{})}call(t,e){return st(()=>{const n=ce(t);return ln(n,1)})}}L2.className="GlobalAveragePooling1D";gt(L2);class P2 extends F2{constructor(t){super(t||{})}call(t,e){return st(()=>{const n=ce(t);return Ni(n,1)})}}P2.className="GlobalMaxPooling1D";gt(P2);class O2 extends we{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,dn(this.dataFormat),this.inputSpec=[new _n({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new de}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class z2 extends O2{call(t,e){return st(()=>{const n=ce(t);return this.dataFormat==="channelsLast"?ln(n,[1,2]):ln(n,[2,3])})}}z2.className="GlobalAveragePooling2D";gt(z2);class B2 extends O2{call(t,e){return st(()=>{const n=ce(t);return this.dataFormat==="channelsLast"?Ni(n,[1,2]):Ni(n,[2,3])})}}B2.className="GlobalMaxPooling2D";gt(B2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class U2 extends we{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const i=e.layer,r=Mr(i,n);delete e.layer;const o={layer:r};return Object.assign(o,e),new t(o)}}class V2 extends U2{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Ne(t),t.length<3)throw new j(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Ne(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),i=t[1];return[n[0],i].concat(n.slice(1))}call(t,e){return st(()=>(t=ce(t),JE((o,a)=>[ce(this.layer.call(o,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}V2.className="TimeDistributed";gt(V2);function S8(s){La(G6,"BidirectionalMergeMode",s)}const C8="concat";class W2 extends U2{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Mr(n),e.goBackwards=e.goBackwards!==!0;const i={};if(i.className=t.layer.getClassName(),i.config=e,this.backwardLayer=Mr(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?C8:t.mergeMode,S8(this.mergeMode),t.weights)throw new de("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let n,i,r;return this.returnState&&(r=e.slice(1)),n=e[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,i=[n]):this.mergeMode==null?i=[n,n.slice()]:i=[n],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):ds(i)}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=ZE(t,n,i,this.numConstants);if(t=r.inputs,n=r.initialState,i=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&i==null)return super.apply(t,e);const o=[],a=[];if(n!=null){const c=n.length;if(c%2>0)throw new j("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const u=n.map(h=>new _n({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(i!=null)throw new de("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof tr;for(const c of o)if(c instanceof tr!==l)throw new j("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return st(()=>{const n=e.initialState;let i,r;if(n==null)i=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);i=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let o;this.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=Sa(r,1));let a;return this.mergeMode==="concat"?a=yb([i,r]):this.mergeMode==="sum"?a=yt(i,r):this.mergeMode==="ave"?a=q(.5,yt(i,r)):this.mergeMode==="mul"?a=q(i,r):this.mergeMode==null&&(a=[i,r]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ia(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ia(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[e,e]:n=e:this.mergeMode==null?n=[null,null]:n=null,this.returnState){const r=this.forwardLayer.states.map(o=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Mr(e.layer);if(delete e.layer,e.numConstants!=null)throw new de("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=e;return i.layer=n,new t(i)}}W2.className="Bidirectional";gt(W2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class G2 extends we{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return st(()=>(t=ce(t),t.dtype!=="float32"&&(t=Pa(t,"float32")),yt(q(t,this.scale),this.offset)))}}G2.className="Rescaling";gt(G2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const I8=["bilinear","nearest"],y_=new Set(I8);class H2 extends we{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(y_.has(t.interpolation))this.interpolation=t.interpolation;else throw new j(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Ne(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return st(()=>{const n=[this.height,this.width];if(this.interpolation==="bilinear")return Sl.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Sl.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...y_]} are supported`)})}}H2.className="Resizing";gt(H2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T8(s,t,e,n){let i=ce(s);if(i.dtype!=="int32"&&(i=Pa(i,"int32")),t==="int")return i;const r=i.shape;if(i.rank===0&&(i=_s(i,-1)),t==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=_s(i,-1)),i.rank>2)throw new j(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${i.rank}.`);const o=["multiHot","oneHot"].includes(t),a=i;let l;if(typeof n<"u"&&t==="count"?l=V1(a,n,e,o):l=V1(a,[],e,o),t!=="tfIdf")return l;if(n)return q(l,n);throw new j("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q2 extends we{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Ne(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return st(()=>{t=ce(t),t.dtype!=="int32"&&(t=Pa(t,"int32"));let n;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new j(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);n=ce(e.countWeights)}const i=Ni(t),r=hf(t),o=Vs(this.numTokens,i).bufferSync().get(0),a=Da(r,0).bufferSync().get(0);if(!(o&&a))throw new j(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return T8(t,this.outputMode,this.numTokens,n)})}}q2.className="CategoryEncoding";gt(q2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w_(s){return new Bb(s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=ot();E8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var __;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(__||(__={}));var S_;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(S_||(S_={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function M8(s,t){return Sf(s,t)}function Sf(s,t,e=new Map,n=new Set){if(s==null)return null;if(typeof Blob=="function"&&s instanceof Blob)return s.slice();if(n.has(s))throw new Error("Circular references are not supported.");if(e.has(s))return e.get(s);const i=t(s);if(i.recurse&&i.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse)if(Jl(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const o in s){const a=s[o],l=Sf(a,t,e,n);r[o]=l}return n.delete(s),s.__proto__&&(r.__proto__=s.__proto__),r}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return e.set(s,i.value),i.value}function k8(s,t=j2){return X2(s,t)}function X2(s,t,e=new Set){const n=s[0];if(e.has(n))throw new Error("Circular references are not supported.");const i=t(s);if(i.recurse&&i.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse)if(Jl(n)){const r=Array.isArray(n)?[]:{};e.add(n);for(const o in n){const a=s.map(c=>c[o]),l=X2(a,t,e);r[o]=l}return e.delete(n),r}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return i.value}function j2(s){return s===null?null:Jl(s[0])?{value:null,recurse:!0}:{value:s,recurse:!1}}async function K2(s,t){const e=new Map;Sf(s,t,e);for(const i of Array.from(e.keys())){const r=e.get(i);if(h0(r)){const o=await r;e.set(i,o)}}return Sf(s,t,e)}function Jl(s){let t=!1;if(ot().get("IS_BROWSER"))t=s instanceof TextDecoder;else{const{StringDecoder:e}=require("string_decoder");t=s instanceof e}return s!=null&&!ArrayBuffer.isView(s)&&(Array.isArray(s)||typeof s=="object"&&!(s instanceof Ye)&&!(s instanceof Promise)&&!t)}function A8(s){return s==null||N8(s)||Array.isArray(s)||typeof s=="object"&&s instanceof Ye||Fi(s)}function N8(s){return s===null||typeof s!="object"&&typeof s!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function R8(s){return M8(s,$8)}function $8(s){return s instanceof Ye?{value:s.clone(),recurse:!1}:Jl(s)?{value:null,recurse:!0}:{value:s,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Y2{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class xm extends Y2{constructor(){super(xm.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=this.capacity*2,e=new Array(t),n=this.length();for(let i=0;i<n;i++)e[i]=this.get(this.wrap(this.begin+i));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}xm.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Z2(s){return new P8(s)}function D8(s){return new O8(s)}function F8(s,t){return new J2(s,t)}function L8(s,t=Kr.FAIL){return new j8(s,t)}class ms{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new H8(this,t)}filter(t){return new W8(this,t)}map(t){return new G8(this,t)}mapAsync(t){return new C_(this,t)}serialMapAsync(t){return new C_(this,t).serial()}flatmap(t){return new X8(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new V8(this,t,e)}columnMajorBatch(t,e=!0,n=j2){return this.rowMajorBatch(t,e).map(r=>k8(r,n))}concatenate(t,e){return new J2(Z2([this,t]),e)}take(t){return t<0||t==null?this:new U8(this,t)}skip(t){return t<0||t==null?this:new B8(this,t)}prefetch(t){return new Q2(this,t)}shuffle(t,e){return new K8(this,t,e)}serial(){return new z8(this)}}class P8 extends ms{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:R8(t),done:!1}}}class O8 extends ms{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class z8 extends ms{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class B8 extends ms{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;me(t.value)}return this.upstream.next()}}class U8 extends ms{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class V8 extends ms{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class W8 extends ms{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;me(t.value)}}}class G8 extends ms{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=so(t.value),n=this.transform(t.value),i=so(n);for(const r of e)ov(r,i)||r.dispose();return{value:n,done:!1}}}class H8 extends ms{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class C_ extends ms{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=so(t.value),n=await this.transform(t.value),i=so(n);for(const r of e)ov(r,i)||r.dispose();return{value:n,done:!1}}}class q8 extends ms{constructor(){super(),this.outputQueue=new xm,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class X8 extends q8{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=so(t.value),n=this.transform(t.value),i=so(n);this.outputQueue.pushAll(n);for(const r of e)ov(r,i)||r.dispose();return!0}}class J2 extends ms{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){const n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var Kr;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(Kr||(Kr={}));class j8 extends ms{constructor(t,e=Kr.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;function i(o){return o instanceof ms?{value:o.next().then(l=>(e++,l.done&&n++,l.value)),recurse:!1}:{value:null,recurse:!0}}const r=await K2(this.iterators,i);if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Kr.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Kr.SHORTEST:return{value:null,done:!0};case Kr.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Q2 extends ms{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Y2(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class K8 extends Q2{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Th.alea(n||Kn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Ub{constructor(){this.size=null}batch(t,e=!0){const n=this;F(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let i;return this.size===1/0||this.size==null?i=this.size:e?i=Math.ceil(this.size/t):i=Math.floor(this.size/t),Ks(async()=>(await n.iterator()).columnMajorBatch(t,e,Z8),i)}concatenate(t){const e=this;let n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,Ks(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return this.size===1/0?n=1/0:n=null,Ks(async()=>(await e.iterator()).filter(i=>st(()=>t(i))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Ks(async()=>(await e.iterator()).map(n=>st(()=>t(n))),this.size)}mapAsync(t){const e=this;return Ks(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Ks(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,Ks(async()=>{const i=D8(async()=>({value:await e.iterator(),done:!1}));return F8(i.take(t))},n)}skip(t){const e=this;let n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,Ks(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const i=this,r=Th.alea(e||Kn().toString());return Ks(async()=>{let o=r.int32();return n&&(o+=r.int32()),(await i.iterator()).shuffle(t,o.toString())},this.size)}take(t){const e=this;let n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,Ks(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}Ub.MAX_BUFFER_SIZE=1e4;function Ks(s,t=null){return new class extends Ub{constructor(){super(...arguments),this.size=t}async iterator(){return s()}}}function I_(s){return Ks(async()=>Z2(s),s.length)}function Y8(s){if(!Jl(s))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(s))for(let e=0;e<s.length;e++)t=t==null?s[e].size:Math.min(t,s[e].size);else if(s instanceof Object)for(const e in s)t=t==null?s[e].size:Math.min(t,s[e].size);return Ks(async()=>{const e=await K2(s,n=>{if(n instanceof Ub)return{value:n.iterator(),recurse:!1};if(Jl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return L8(e,Kr.SHORTEST)},t)}function Z8(s){if(s===null)return null;const t=s[0];return A8(t)?{value:J8(s),recurse:!1}:{value:null,recurse:!0}}function J8(s){if(s.length===0)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof Ye?io(s):av(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wt(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&F(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=lT;class vm extends l0{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new SC(this,ji())}nextDataId(){return vm.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,ot().get("IS_NODE")&&Ls(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:t,dtype:n,refCount:1}),i}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Iu(n[0])){const r=n.map(o=>Jr(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return{dataId:i,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,n,i,r){this.data.set(t,{values:e,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if(e==="complex64"){const i=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return Rr(i,r)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>no(i));return ge(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ge(t.shape,t.dtype,e)}makeOutput(t,e,n){return ji().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Kn();return t(),{kernelMs:Kn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Wt([t],"where");const e=this.readSync(t.dataId);return Q8(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}vm.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(s){const t=new Float32Array(s.length);for(let e=0;e<s.length;++e)t[e]=Math.abs(s[e]);return t}const tX=s=>{const{x:t}=s.inputs,e=s.backend;Wt(t,"abs");let n=new Float32Array(ut(t.shape));const i=e.data.get(t.dataId).values;return n=tM(i),e.makeOutput(n,t.shape,t.dtype)},eX={kernelName:qf,backendName:"cpu",kernelFunc:tX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(s){return(t,e,n,i,r)=>{const o=he(t,e),a=o.length,l=ee(o),c=ut(o),u=Gn(r,c),h=t.length,d=e.length,f=ee(t),p=ee(e),g=Xl(t,o),m=Xl(e,o);if(g.length+m.length===0)for(let x=0;x<u.length;++x)u[x]=s(n[x%n.length],i[x%i.length]);else for(let x=0;x<u.length;++x){const v=cc(x,a,l),b=v.slice(-h);g.forEach(C=>b[C]=0);const y=nr(b,h,f),w=v.slice(-d);m.forEach(C=>w[C]=0);const S=nr(w,d,p);u[x]=s(n[y],i[S])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",r),imag:e.makeTensorInfo(i.shape,"float32",o)},a}const nX={kernelName:b0,backendName:"cpu",kernelFunc:Ss};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cf(s,t,e="float32"){if(e==="complex64"){const i=Cf(s,t,"float32"),r=Cf(s,t,"float32");return Ss({inputs:{real:i,imag:r},backend:s})}const n=Jn(ut(t),e);return s.makeTensorInfo(t,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const sX={kernelName:Xu,backendName:"cpu",kernelFunc:ar};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ta(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.real,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const iX={kernelName:V0,backendName:"cpu",kernelFunc:Ta};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(s,t,e,n){if(n==="int32"){const i=Int32Array.from(s);return[t,"int32",i]}if(n==="bool"){const i=$a([0],e),[r,o]=xn((a,l)=>a!==l?1:0)(t,[],s,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function co(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return ar({inputs:{x:i},backend:e});const u=Cf(e,i.shape,i.dtype),h=co({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),d=Ss({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=Ta({inputs:{input:i},backend:e}),h=co({inputs:{x:u},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(u),h}if(!TC(i.dtype,r)){const u=ar({inputs:{x:i},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:r}}const o=e.data.get(i.dataId).values,[a,l,c]=eM(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}const rX={kernelName:Du,backendName:"cpu",kernelFunc:co};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(s,t,e,n){return e==null?({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;Wt([o,a],s);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?Ca(c):c,d=o.dtype==="string"?Ca(u):u,f=n||o.dtype,[p,g]=t(o.shape,a.shape,h,d,f);return l.makeTensorInfo(g,f,p)}:({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=co({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,g=co({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.real,v=m.complexTensorInfos.imag,b=l.data.get(x.dataId).values,y=l.data.get(v.dataId).values,[w,S,C]=e(o.shape,a.shape,f,p,b,y),_=l.makeTensorInfo(C,"float32",w),I=l.makeTensorInfo(C,"float32",S),T=Ss({inputs:{real:_,imag:I},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo(I),T}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=n||o.dtype,[d,f]=t(o.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function Vb(s){return(t,e,n,i,r,o)=>{const a=he(t,e),l=ut(a),c=a.length,u=ee(a),h=Gn("float32",l),d=Gn("float32",l),f=Xl(t,a),p=Xl(e,a),g=Rr(n,i),m=Rr(r,o),x=t.length,v=ee(t),b=e.length,y=ee(e);if(f.length+p.length===0)for(let w=0;w<h.length;w++){const S=w%g.length,C=w%m.length,_=s(g[S*2],g[S*2+1],m[C*2],m[C*2+1]);h[w]=_.real,d[w]=_.imag}else for(let w=0;w<h.length;w++){const S=cc(w,c,u),C=S.slice(-x);f.forEach(O=>C[O]=0);const _=nr(C,x,v),I=S.slice(-b);p.forEach(O=>I[O]=0);const T=nr(I,b,y),N=s(g[_*2],g[_*2+1],m[T*2],m[T*2+1]);h[w]=N.real,d[w]=N.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nM=xn((s,t)=>s+t),oX=Vb((s,t,e,n)=>({real:s+e,imag:t+n})),Ql=Pn(uc,nM,oX),aX={kernelName:uc,backendName:"cpu",kernelFunc:Ql};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wb(s,t,e,n,i){const r=ut(n),o=Jn(i,e);for(let a=0;a<s.length;a++){const l=s[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=t[a]:o[l]+=1)}return o}function sM(s,t,e,n=!1){const i=s.shape[0],r=s.shape[1],o=ge([i,e],t.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const c=s.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(n?o.set(1,a,c):t.size>0?o.set(o.get(a,c)+t.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Io(s){return(t,e,n)=>{const i=Gn(e,t.length);for(let r=0;r<t.length;++r)i[r]=s(t[r],n);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Wt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=ut(o.shape),u=e||o.dtype,h=pn(u,c);for(let d=0;d<c;++d)h[d]=t(l[d],i);return a.makeTensorInfo(o.shape,u,h)}}function gc(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(Wt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=e||o.dtype,u=t(l,c,i);return a.makeTensorInfo(o.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM=Io(s=>Math.ceil(s)),lX=gc(Fu,iM),cX={kernelName:Fu,backendName:"cpu",kernelFunc:lX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(s,t,e,n){const i=pn(e,ut(t));if(n&&e!=="string"){let r=0;s.forEach(o=>{const a=ut(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;s.forEach(o=>{const a=e==="string"?Ca(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*t[1]+r;for(let h=0;h<o.shape[1];++h)i[u+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oM=xn((s,t)=>s===t?1:0),aM=Pn(ap,oM,null,"bool"),uX={kernelName:ap,backendName:"cpu",kernelFunc:aM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lM=Io(s=>Math.exp(s)),cM=gc(Vu,lM,"float32"),hX={kernelName:Vu,backendName:"cpu",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM=Io(s=>Math.expm1(s)),dX=gc(Wu,uM),fX={kernelName:Wu,backendName:"cpu",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM=Io(s=>Math.floor(s)),pX=gc(Gu,hM),mX={kernelName:Gu,backendName:"cpu",kernelFunc:pX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(s,t,e,n,i,r,o,a,l){const c=ge([n,r],e);for(let u=0;u<n;u++){const h=[];let d=0;for(let f=0;f<i;f++){const p=s[u*i+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)c.values[u*r+f]=t.get(...t.indexToLoc(d*r+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(s,t,e){const n=ge(e,s.dtype);for(let i=0;i<n.size;++i){const o=n.indexToLoc(i).slice(),a=o[0],l=o[2],c=t.locToIndex([a,l]);o[2]=t.values[c];const u=s.locToIndex(o);0<=u&&u<s.values.length&&(n.values[i]=s.values[u])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM=xn((s,t)=>s>t?1:0),gX=Pn(hp,pM,null,"bool"),xX={kernelName:hp,backendName:"cpu",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=xn((s,t)=>s>=t?1:0),vX=Pn(qu,mM,null,"bool"),bX={kernelName:qu,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=xn((s,t)=>s<t?1:0),yX=Pn(fp,gM,null,"bool"),wX={kernelName:fp,backendName:"cpu",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xM=xn((s,t)=>s<=t?1:0),_X=Pn(pp,xM,null,"bool"),SX={kernelName:pp,backendName:"cpu",kernelFunc:_X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(s,t,e){const n=(t-s)/(e-1),i=Jn(e,"float32");i[0]=s;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM=Io(s=>Math.log(s)),CX=gc(Zu,bM),IX={kernelName:Zu,backendName:"cpu",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(s,t,e,n){const i=Gn(n,ut(e));for(let r=0;r<i.length;++r){const o=r*t;let a=s[o];for(let l=0;l<t;++l){const c=s[o+l];(Number.isNaN(c)||c>a)&&(a=c)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=xn((s,t)=>Math.max(s,t)),TX=Pn(Qu,wM),EX={kernelName:Qu,backendName:"cpu",kernelFunc:TX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M=xn((s,t)=>Math.min(s,t)),MX=Pn(th,_M),kX={kernelName:th,backendName:"cpu",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gb=xn((s,t)=>s*t),AX=Vb((s,t,e,n)=>({real:s*e-t*n,imag:s*n+t*e})),bm=Pn(nh,Gb,AX),NX={kernelName:nh,backendName:"cpu",kernelFunc:bm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(s,t,e){const n=xo(-1,e);return Gb([],t,n,s,e)}function RX(s){const{inputs:t,backend:e}=s,{x:n}=t;Wt(n,"neg");const i=e.data.get(n.dataId).values,[r,o]=SM(i,n.shape,n.dtype);return e.makeTensorInfo(o,n.dtype,r)}const $X={kernelName:Ip,backendName:"cpu",kernelFunc:RX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM=xn((s,t)=>s!==t?1:0),DX=Pn(Tp,CM,null,"bool"),FX={kernelName:Tp,backendName:"cpu",kernelFunc:DX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hb(s,t,e,n,i){const r=t.length,o=ut(t),a=ee(t),l=ee(i),c=Gn(e,ut(i));for(let u=0;u<o;++u){const h=cc(u,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[n[p]];const f=nr(d,r,l);c[f]=s[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(s){const{inputs:t,attrs:e,backend:n}=s,{x:i}=t,{perm:r}=e;Wt(i,"transpose");const o=i.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=i.shape[r[h]];const l=n.data.get(i.dataId).values,c=Hb(l,i.shape,i.dtype,r,a);return{dataId:n.write(c,a,i.dtype),shape:a,dtype:i.dtype}}const LX={kernelName:kl,backendName:"cpu",kernelFunc:gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(s,t,e,n){const[i,r]=Ln(s,n),o=Ts(t,"int32"),a=Jn(ut(i),o),l=ut(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];a[c]=h}return{outVals:a,outShape:i,outDtype:o}}function PX(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Wt(i,"prod");const a=i.shape.length,l=xe(r,i.shape),c=nn(l,a);let u=l,h=i;const d=[];c!=null&&(h=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),d.push(h),u=hn(u.length,a));const f=e.data.get(h.dataId).values,{outVals:p,outShape:g,outDtype:m}=IM(h.shape,h.dtype,f,u);let x=g;return o&&(x=un(g,l)),d.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(x,m,p)}const OX={kernelName:Rp,backendName:"cpu",kernelFunc:PX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(s,t,e){s.forEach((n,i)=>{if(n<0||n>=e){const r=cc(i,t.length,ee(t)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${e})`)}})}function BX(s,t){for(let e=0;e<s.length;++e){const n=s[e],i=e===s.length-1?t:s[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function UX(s,t,e,n){const i=[];let r=0;const o=t.length-1+e.length,a=new Array(o).fill(null).map(()=>[0]);BX(e,n);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<s.length;++c){let u=s[c],h=s[c]+1;for(let d=0;d<e.length;++d){const f=e[d],p=d+t.length-1;if(p>=0){const g=a[p],m=g[g.length-1]-f[u];for(let x=u;x<h;++x)a[p].push(f[x+1]+m)}u=f[u],h=f[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:i,numValues:r}}function VX(s){const t=[];for(let e=0;e<s.length;++e){const n=s[e].length,i=pn("int32",n);t.push(i),s[e].forEach((r,o)=>i[o]=r)}return t}function T_(s,t){const e=s.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<s.length;n++)e[t-1]*=s[n];return e}function WX(s,t,e,n,i,r){const o=T_(t,2)[1],a=T_(r,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let h=0;h<n;++h)i[l*a+h]=s[u*o+h];++l}}function GX(s,t,e,n,i){const r=t.slice();r[0]=i;const o=pn(e,ut(r)),a=s.length,l=a===0?0:a/t[0];return WX(s,t,n,l,o,r),[o,r]}function TM(s,t,e,n,i,r,o,a){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(zX(r,o,l),n.length===0)throw new Error("params.rank must be nonzero");const c=n[0],{outSplits:u,valueSlices:h,numValues:d}=UX(r,o,s,c),f=VX(u),p=GX(e,n,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E_=2147483647;function EM(s,t,e,n,i,r,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=i.length===0,c=o.length===0,u=[];a||u.push(t[0]),l||u.push(i[0]),c||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=pn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const x=a?s[0]:s[m],v=l?n[0]:n[m],b=c?r[0]:r[m];if(b===0)throw new Error("Requires delta != 0");let y;if(b>0&&v<x||b<0&&v>x)y=0;else if(y=Math.ceil(Math.abs((v-x)/b)),y>E_)throw new Error(`Requires ((limit - start) / delta) <= ${E_}`);d[m+1]=d[m]+y}const f=d[h],p=pn(e,f);let g=0;for(let m=0;m<h;++m){const x=d[m+1]-d[m];let v=a?s[0]:s[m];const b=c?r[0]:r[m];for(let y=0;y<x;++y)p[g++]=v,v+=b}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var js=Ci;class If{constructor(t,e,n,i,r,o,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=pT(u),this.raggedRank=mT(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===js.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===js.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case js.VALUE_ROWIDS:return If.getMaxWidthValueRowID(e);case js.ROW_SPLITS:return If.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${js[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let n=0;for(let i=0;i<e-1;++i){const r=t[i+1]-t[i];r>n&&(n=r)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let n=0,i=t[0],r=0;for(let o=1;o<e;++o){const a=t[o];a!==i&&(i=a,r=Math.max(o-n,r),n=o)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return k_(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;gT(n,e);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=fT(this.raggedRank,i,e);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,e,n){const i=Math.min(t,n),r=[];let o=0;for(let a=0;a<i;++a,o+=e)r.push(o);for(let a=i;a<t;++a)r.push(-1);return F(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,n,i){const r=t.length,o=[];for(let a=0;a<r-1;++a){const l=t[a+1]-t[a];let c=Math.min(i,l),u=e[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=n;for(let h=0;h<l-c;++h)o.push(-1)}if(r>0&&o.length!==t[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,i){const r=t.length,o=[];if(r===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];o.push(c);for(let u=1;u<r;++u){const h=t[u];if(h===l)c>=0&&(++a,a<i?c+=n:c=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,i){const r=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case js.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,i);case js.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,n,i);default:throw new Error(`Unsupported partition type: ${js[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case js.FIRST_DIM_SIZE:return t[0];case js.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case js.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${js[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*n[l+1];const r=k_(n,!1),o=pn(this.valuesDType,ut(r));if(i[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(e,i[0],n[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,i[c],n[c]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(t,e,n,i){if(n.length===0)return;const r=this.values,o=n;let a=i.slice();a=a.slice(t+1);const l=ut(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;st(()=>{const g=Q(u,p);u=Zc(g,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let g=p<c?e[p]:-1;if(g===f){++f;continue}if(d<f){const m=r.subarray(h*l),x=o.subarray(d*l),v=(f-d)*l;M_(x,m,v)}if(p>=c){const m=n.length;g=Math.floor(m/l)}if(g>f)if(this.defaultValue.length===1)o.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){const m=o.slice(f*l);M_(m,u,l),++f}g<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function M_(s,t,e){for(let n=0;n<e;n++)s[n]=t[n]}function k_(s,t){const e=[];for(let n of s){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function MM(s,t,e,n,i,r,o,a,l,c){return new If(s,t,e,n,i,r,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(s,t,e,n){const i=s===t,r=s<t&&e<0,o=t<s&&e>1;if(i||r||o)return Jn(0,n);const a=Math.abs(Math.ceil((t-s)/e)),l=Jn(a,n);t<s&&e===1&&(e=-1),l[0]=s;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM=Io(s=>1/Math.sqrt(s)),HX=gc(lh,AM),qX={kernelName:lh,backendName:"cpu",kernelFunc:HX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(s,t,e,n,i,r,o,a,l,c){const u=[n/i,i],h=s.values,d=t.values;if(n===0)return ge(e,t.dtype);const f=ge(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const g=[];let m=0;for(let x=0;x<o;x++){const v=h[p*o+x];g.push(v),m+=v*a[x]}if(m<0||m>=n/i)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let x=0;x<i;x++)c?f.values[m*i+x]+=d[p*i+x]:f.values[m*i+x]=t.rank===0?d[0]:d[p*i+x]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX=Io(s=>1/(1+Math.exp(-s))),NM=Pe(fh,s=>1/(1+Math.exp(-s))),jX={kernelName:fh,backendName:"cpu",kernelFunc:NM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(s,t,e,n,i){const r=pv(n,t,e),o=ut(e),a=ee(n);if(r){const h=mv(t,a);return i==="string"?s.slice(h,h+o):s.subarray(h,h+o)}const l=i==="string"?Ca(s):s,c=ge(n,i,l),u=ge(e,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,g)=>p+t[g]);u.set(c.get(...f),...d)}return i==="string"?LT(u.values):u.values}function Ea(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n;Wt(i,"slice");const[a,l]=Yp(i,r,o);dv(i,a,l);const c=e.data.get(i.dataId).values,u=RM(c,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,u)}const KX={kernelName:Op,backendName:"cpu",kernelFunc:Ea};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(s,t,e,n,i,r,o){const a=t[0],l=r[0],c=new Array(l),u=new Array(a),h=t[1];if(l===0){if(a!==0)throw new Error(ST(a));const m=pn(e,0),x=pn(i,0);return[m,[0,h],x,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const x=s[m*h];if(x<0)throw new Error(CT(m,x));if(x>=l)throw new Error(IT(m,x,l));++p[x],d=d&&x>=f,f=x}let g=!0;for(let m=0;m<l;++m){const x=p[m]===0;c[m]=x,g=g&&!x,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(g&&d){const m=s,x=n;for(let v=0;v<a;++v)u[v]=v;return[m,[a,h],x,c,u]}else{const m=p[l-1],x=pn(e,m*h),v=pn(i,m),b=new Array(l).fill(0);for(let y=0;y<a;++y){const w=s[y*h],S=b[w],C=(w===0?0:p[w-1])+S;b[w]++;for(let _=0;_<h;++_)x[C*h+_]=s[y*h+_];v[C]=n[y],u[y]=C}for(let y=0;y<l;++y)if(b[y]===0){const S=y===0?0:p[y-1];x[S*h+0]=y;for(let C=1;C<h;++C)x[S*h+C]=0;v[S]=o}return[x,[m,h],v,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(s,t,e,n,i){const r=ut(n),o=t[0],a=i.length,l=[];let c=1,u=-1;for(let m=0;m<a;++m){const x=i[m];if(x===-1){if(u!==-1)throw new Error(TT(u,m));u=m,l.push(1)}else{if(x<0)throw new Error(ET(m,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(MT());const m=Math.trunc(r/c);if(c*m!==r)throw new Error(kT(n,l));l[u]=m}if(ut(l)!==r)throw new Error(AT(n,l));const d=n.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*n[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const g=pn(e,o*a);for(let m=0;m<o;++m){let x=0;for(let v=0;v<d;++v)x+=s[m*d+v]*f[v];for(let v=0;v<a;++v)g[m*a+v]=Math.trunc(x/p[v]),x%=p[v]}return[g,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(s,t,e,n,i,r=!1,o=0){const a=n.length,l=[t[0],s.length/t[0]],c=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(Tx());const d=t.slice();d[0]=h;const f=d.reduce((b,y)=>b*y,1),p=pn(e,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(Tx());let g=0,m=1,x=0,v=i[g];for(;;){let b=0;if(m<a){if(b=i[m],v===b){++m;continue}if(v>=b)throw new Error(NT())}if(v<0||v>=h)throw new Error(RT(v,h));v>x&&p.fill(o,x*c,v*c);for(let y=g;y<m;++y){const w=n[y];if(w<0||w>=l[0])throw new Error($T(y,n[y],l[0]));for(let S=0;S<c;S++)p[v*c+S]+=s[w*c+S]}if(r)for(let y=0;y<c;y++)p[v*c+y]/=m-g;if(g=m,++m,x=v+1,v=b,m>a)break}return x<h&&p.fill(o,x*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX=Io(s=>Math.sqrt(s)),ZX=Pe(mh,s=>Math.sqrt(s)),JX={kernelName:mh,backendName:"cpu",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FM=xn((s,t)=>{const e=s-t;return e*e}),QX=Pn(gh,FM),tj={kernelName:gh,backendName:"cpu",kernelFunc:QX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(s,t,e,n){const i=ge(s,t.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*e[l]+n[l];i.set(t.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ej{constructor(t,e,n,i,r,o){this.separator=Jr(t),this.nGramWidths=e,this.leftPad=Jr(n),this.rightPad=Jr(i),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=o-(c+u),d=e+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let v=0;v<h;++v)f+=t[d+v].length;f+=u*this.rightPad.length;const p=c+u+h-1;f+=p*this.separator.length,n[i+a]=new Uint8Array(f);const g=n[i+a];let m=0;const x=v=>v.forEach(b=>g[m++]=b);for(let v=0;v<c;++v)x(this.leftPad),x(this.separator);for(let v=0;v<h-1;++v)x(t[d+v]),x(this.separator);if(h>0){x(t[d+h-1]);for(let v=0;v<u;++v)x(this.separator),x(this.rightPad)}else{for(let v=0;v<u-1;++v)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){const n=t.length,i=e.length;if(i>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=e[c]>=l;if(u=u&&e[c]<=n,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${n}]`);l=e[c]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=i-1,o=pn("int32",i);if(n===0||i===0){const l=new Array(n);for(let c=0;c<=r;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[r]);for(let l=0;l<r;++l){const c=e[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=e[l+1]-e[l],f=this.getNumNGrams(d,h);this.createNGrams(t,c,a,u,f,h),u+=f}),this.preserveShort&&u===o[l]){const h=e[l+1]-e[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(t,c,a,u,f,d)}}return[a,o]}}function PM(s,t,e,n,i,r,o,a){return new ej(e,n,i,r,o,a).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(s,t,e,n){if(!s.length)return;if(t.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(t.length===1){const r=t[0];let o=s.indexOf(r);for(;o!==-1;){const a=s.subarray(0,o);(!e||a.length!==0)&&n.push(a),s=s.subarray(o+1),o=s.indexOf(r)}(!e||s.length!==0)&&n.push(s);return}let i=0;for(let r=0;r<s.length+1;r++)if(r===s.length||t.indexOf(s[r])!==-1){const o=s.subarray(i,r);(!e||o.length!==0)&&n.push(o),i=r+1}}function OM(s,t,e){const n=s.length,i=[];let r=0,o=0;const a=new Array(n);for(let d=0;d<n;++d){const f=i.length;nj(s[d],t,e,i);const p=i.length-f;a[d]=p,r+=p,o=Math.max(o,p)}const l=pn("int32",r*2),c=new Array(r),u=[n,o];let h=0;for(let d=0;d<n;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(s,t){const e=pn("int32",s.length);for(let n=0;n<s.length;++n)e[n]=eB(s[n]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BM=xn((s,t)=>s-t),sj=Vb((s,t,e,n)=>({real:s-e,imag:t-n})),Xb=Pn(xh,BM,sj),ij={kernelName:xh,backendName:"cpu",kernelFunc:Xb};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(s,t){const e=new Array(s.rank);for(let i=0;i<e.length;i++)e[i]=s.shape[i]*t[i];const n=ge(e,s.dtype);for(let i=0;i<n.values.length;++i){const r=n.indexToLoc(i),o=new Array(s.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%s.shape[l];const a=s.locToIndex(o);n.values[i]=s.values[a]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wc=(s,t)=>{const e=t.value-s.value;return e===0?s.index-t.index:e};function VM(s,t,e=0,n=s.length-1){for(;n>e;){if(n-e>600){const a=n-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*u/a+h)),f=Math.min(n,Math.floor(t+(a-l)*u/a+h));VM(s,t,d,f)}const i=s[t];let r=e,o=n;for(gl(s,e,t),Wc(s[n],i)>0&&gl(s,e,n);r<o;){for(gl(s,r,o),r++,o--;Wc(s[r],i)<0;)r=r+1;for(;Wc(s[o],i)>0;)o=o-1}Wc(s[e],i)===0?gl(s,e,o):(o=o+1,gl(s,o,n)),o<=t&&(e=o+1),t<=o&&(n=o-1)}}function WM(s,t,e,n,i){const r=t[t.length-1],[o,a]=[s.length/r,r],l=Gn(e,o*n),c=Gn("int32",o*n);for(let h=0;h<o;h++){const d=h*a,f=s.subarray(d,d+a);let p=new Array(f.length);f.forEach((v,b)=>p[b]={value:v,index:b}),n<p.length&&(VM(p,n),p=p.slice(0,n)),i&&p.sort(Wc);const g=h*n,m=l.subarray(g,g+n),x=c.subarray(g,g+n);for(let v=0;v<n;v++)m[v]=p[v].value,x[v]=p[v].index}const u=t.slice();return u[u.length-1]=n,[ge(u,e,l),ge(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(s,t,e,n){const i=xe(t,e)[0],r=[1,e[0],1];for(let p=0;p<i;p++)r[0]*=e[p];r[1]=e[i];for(let p=i+1;p<e.length;p++)r[2]*=e[p];const o={},a=new Int32Array(e[i]),l=new Yn(r,n,s),c=[],u=r[0]===1&&r[2]===1;for(let p=0;p<e[i];p++){let g;if(u)g=s[p].toString();else{const m=[];for(let x=0;x<r[0];x++)for(let v=0;v<r[2];v++)m.push(l.get(x,p,v));g=m.join(",")}if(o[g]!==void 0)a[p]=o[g];else{const m=Object.keys(o).length;o[g]=m,a[p]=m,c.push(p)}}const h=r.slice();h[1]=Object.keys(o).length;const d=new Yn(h,n);c.forEach((p,g)=>{for(let m=0;m<r[0];m++)for(let x=0;x<r[2];x++)d.set(l.get(m,p,x),m,g,x)});const f=e.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:tM,addImpl:nM,bincountImpl:Wb,bincountReduceImpl:sM,castImpl:eM,ceilImpl:iM,concatImpl:rM,equalImpl:oM,expImpl:lM,expm1Impl:uM,floorImpl:hM,gatherNdImpl:dM,gatherV2Impl:fM,greaterImpl:pM,greaterEqualImpl:mM,lessImpl:gM,lessEqualImpl:xM,linSpaceImpl:vM,logImpl:bM,maxImpl:yM,maximumImpl:wM,minimumImpl:_M,multiplyImpl:Gb,negImpl:SM,notEqualImpl:CM,prodImpl:IM,raggedGatherImpl:TM,raggedRangeImpl:EM,raggedTensorToTensorImpl:MM,rangeImpl:kM,rsqrtImpl:AM,scatterImpl:Cl,sigmoidImpl:XX,sliceImpl:RM,sparseFillEmptyRowsImpl:$M,sparseReshapeImpl:DM,sparseSegmentReductionImpl:qb,sqrtImpl:YX,squaredDifferenceImpl:FM,stridedSliceImpl:LM,stringNGramsImpl:PM,stringSplitImpl:OM,stringToHashBucketFastImpl:zM,subImpl:BM,tileImpl:UM,topKImpl:WM,transposeImpl:Hb,uniqueImpl:GM},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */xI("cpu",()=>new vm,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM=Pe(Bu,s=>s>=0?s:Math.exp(s)-1),oj={kernelName:Bu,backendName:"cpu",kernelFunc:HM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n;Wt([i],"leakyRelu");const o=ut(i.shape),a=e.data.get(i.dataId).values,l=Gn("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return e.makeTensorInfo(i.shape,"float32",l)}const aj={kernelName:dp,backendName:"cpu",kernelFunc:qM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj=xn((s,t)=>s<0?t*s:s);function XM(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t;Wt([n,i],"prelu");const r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,[a,l]=lj(n.shape,i.shape,r,o,"float32");return e.makeTensorInfo(l,"float32",a)}const cj={kernelName:Np,backendName:"cpu",kernelFunc:XM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM=Pe(rh,s=>Math.max(0,s)),uj={kernelName:rh,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KM=Pe(oh,s=>Math.min(Math.max(0,s),6)),hj={kernelName:oh,backendName:"cpu",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tf(s,t,e,n,i){if(e==="linear")return ar({inputs:{x:t},backend:s});if(e==="relu")return jM({inputs:{x:t},backend:s});if(e==="elu")return HM({inputs:{x:t},backend:s});if(e==="relu6")return KM({inputs:{x:t},backend:s});if(e==="prelu")return XM({inputs:{x:t,alpha:n},backend:s});if(e==="leakyrelu")return qM({inputs:{x:t},backend:s,attrs:{alpha:i}});if(e==="sigmoid")return NM({inputs:{x:t},backend:s});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=ut(i.shape),a=IC(r,o),l=ut(a);F(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(i.dataId);const c=e.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const dj={kernelName:$p,backendName:"cpu",kernelFunc:Ge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;Wt([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=o?i.shape[l-2]:i.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=o?i.shape[l-1]:i.shape[l-2],f=a?r.shape[c-2]:r.shape[c-1],p=i.shape.slice(0,-2),g=r.shape.slice(0,-2),m=ut(p),x=ut(g),b=he(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,f]);F(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${o} and transposeB=${a} must match.`);const y=o?[m,u,d]:[m,d,u],w=a?[x,f,h]:[x,h,f],S=Ge({inputs:{x:i},backend:e,attrs:{shape:y}}),C=Ge({inputs:{x:r},backend:e,attrs:{shape:w}}),_=o?S.shape[1]:S.shape[2],I=o?S.shape[2]:S.shape[1],T=a?C.shape[1]:C.shape[2],N=Math.max(m,x),O=e.data.get(S.dataId).values,M=e.data.get(C.dataId).values,E=ee(S.shape),A=ee(C.shape),[R,V,P]=o?[E[0],1,E[1]]:[E[0],E[1],1],[$,D,W]=a?[1,A[1],A[0]]:[A[1],1,A[0]],G=I*T,X=ge([N,I,T],S.dtype),it=X.values,at=e.blockSize;for(let J=0;J<N;J++)for(let bt=0;bt<I;bt+=at)for(let xt=0;xt<T;xt+=at)for(let vt=0;vt<_;vt+=at){const pt=Math.min(bt+at,I),At=Math.min(xt+at,T),Rt=Math.min(vt+at,_);for(let It=bt;It<pt;It++)for(let jt=xt;jt<At;jt++){let Zt=0;for(let Ht=vt;Ht<Rt;Ht++){const ue=Math.min(J,m-1)*R,ne=Math.min(J,x-1)*W,ht=O[ue+It*V+Ht*P],Ft=M[Ht*$+jt*D+ne];Zt+=ht*Ft}it[J*G+(It*T+jt)]+=Zt}}return e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),e.makeTensorInfo(b,X.dtype,X.values)}const fj={kernelName:Zf,backendName:"cpu",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pj(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;let d,f,p;const g=[];d=YM({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:e}),o&&(f=Ql({inputs:{a:d,b:o},backend:e}),g.push(d),d=f),u&&(p=Tf(e,d,u,a,h),g.push(d),d=p);for(const x of g)e.disposeIntermediateTensorInfo(x);return d}const mj={kernelName:sf,backendName:"cpu",kernelFunc:pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj=Pe(Eu,s=>Math.acos(s)),xj={kernelName:Eu,backendName:"cpu",kernelFunc:gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=Pe(Mu,s=>Math.acosh(s)),bj={kernelName:Mu,backendName:"cpu",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(s){const{inputs:t,backend:e}=s,n=t;Wt(t,"addN");const i=n.map(a=>e.data.get(a.dataId).values),r=ge(n[0].shape,n[0].dtype),o=r.values;for(let a=0;a<n.length;a++){const l=i[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const wj={kernelName:f0,backendName:"cpu",kernelFunc:yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _j(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Wt(i,"all");const a=xe(r,i.shape);let l=a;const c=nn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=hn(l.length,i.shape.length)),Xn("all",l,u.shape.length);const[h,d]=Ln(u.shape,l),f=ut(d),p=Jn(ut(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let b=g[v];for(let y=0;y<f;++y){const w=g[v+y];b=b&&w}p[x]=b}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=un(h,a),v=Ge({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const Sj={kernelName:p0,backendName:"cpu",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Wt(i,"any");const a=xe(r,i.shape);let l=a;const c=nn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=hn(l.length,i.shape.length)),Xn("any",l,u.shape.length);const[h,d]=Ln(u.shape,l),f=ut(d),p=Jn(ut(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let b=g[v];for(let y=0;y<f;++y){const w=g[v+y];b=b||w}p[x]=b}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=un(h,a),v=Ge({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const Ij={kernelName:m0,backendName:"cpu",kernelFunc:Cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Wt(i,"argMax");let o=xe(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=hn(o.length,l.shape.length)),o=[o[0]],Xn("argMax",o,l.shape.length);const[u,h]=Ln(l.shape,o),d=ut(u),f=Jn(d,"int32"),p=ut(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x],b=0;for(let y=0;y<p;++y){const w=g[x+y];w>v&&(v=w,b=y)}f[m]=b}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const Ej={kernelName:Xf,backendName:"cpu",kernelFunc:Tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;Wt(i,"argMin");let o=xe(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=hn(o.length,l.shape.length)),o=[o[0]],Xn("argMin",o,l.shape.length);const[u,h]=Ln(l.shape,o),d=ut(u),f=Jn(d,"int32"),p=ut(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x],b=0;for(let y=0;y<p;++y){const w=g[x+y];w<v&&(v=w,b=y)}f[m]=b}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const kj={kernelName:jf,backendName:"cpu",kernelFunc:Mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aj=Pe(ku,s=>Math.asin(s)),Nj={kernelName:ku,backendName:"cpu",kernelFunc:Aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rj=Pe(Au,s=>Math.asinh(s)),$j={kernelName:Au,backendName:"cpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj=Pe(Nu,s=>Math.atan(s)),Fj={kernelName:Nu,backendName:"cpu",kernelFunc:Dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lj=xn((s,t)=>Math.atan2(s,t)),Pj=Pn($u,Lj),Oj={kernelName:$u,backendName:"cpu",kernelFunc:Pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj=Pe(Ru,s=>Math.atanh(s)),Bj={kernelName:Ru,backendName:"cpu",kernelFunc:zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(s,t,e,n,i,r){const o=i.strideHeight,a=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,f=i.padInfo.left,p=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ge(i.outShape,e),m=g.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],v=i.outShape[2]*i.outShape[3],b=i.outShape[3];for(let y=0;y<i.batchSize;++y){const w=y*x,S=y*n[0];for(let C=0;C<i.inChannels;++C)for(let _=0;_<i.outHeight;++_){const I=_*o-d,T=Math.max(0,I),N=Math.min(i.inHeight,u+I),O=w+_*v;for(let M=0;M<i.outWidth;++M){const E=M*a-f,A=Math.max(0,E),R=Math.min(i.inWidth,h+E);let V=p,P=0,$=0;for(let W=T;W<N;W+=l){const G=S+W*n[1];for(let X=A;X<R;X+=c){const it=G+X*n[2],at=s[it+C];r==="max"&&at>V?V=at:r==="avg"&&(P+=at,$++)}if(isNaN(V))break}const D=O+M*b+C;m[D]=r==="avg"?P/$:V}}}return g}function ZM(s,t,e,n,i=!1,r=!1){const o=ge(n.outShape,"int32"),a=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,u=n.dilationWidth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,f=n.padInfo.top,p=n.padInfo.left,g=ge(t,e,s);for(let m=0;m<n.batchSize;++m)for(let x=0;x<n.inChannels;++x)for(let v=0;v<n.outHeight;++v){const b=v*a-f;let y=b;for(;y<0;)y+=c;const w=Math.min(n.inHeight,h+b);for(let S=0;S<n.outWidth;++S){const C=S*l-p;let _=C;for(;_<0;)_+=u;const I=Math.min(n.inWidth,d+C);let T=Number.NEGATIVE_INFINITY,N=-1;for(let O=y;O<w;O+=c){const M=O-b;for(let E=_;E<I;E+=u){const A=E-C,R=g.get(m,O,E,x);R>T&&(T=R,i?N=r?((m*n.inHeight+O)*n.inWidth+E)*n.inChannels+x:(O*n.inWidth+E)*n.inChannels+x:N=M*d+A)}}o.set(N,m,v,S,x)}}return o}function JM(s,t,e,n,i,r){const o=i.strideDepth,a=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,f=i.effectiveFilterHeight,p=i.effectiveFilterWidth,g=i.padInfo.front,m=i.padInfo.top,x=i.padInfo.left,v=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=ge(i.outShape,e),y=b.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[2]*i.outShape[3]*i.outShape[4],C=i.outShape[3]*i.outShape[4],_=i.outShape[4];for(let I=0;I<i.batchSize;++I){const T=I*w,N=I*n[0];for(let O=0;O<i.inChannels;++O)for(let M=0;M<i.outDepth;++M){const E=M*o-g;let A=E;for(;A<0;)A+=c;const R=Math.min(i.inDepth,d+E),V=T+M*S;for(let P=0;P<i.outHeight;++P){const $=P*a-m;let D=$;for(;D<0;)D+=u;const W=Math.min(i.inHeight,f+$),G=V+P*C;for(let X=0;X<i.outWidth;++X){const it=X*l-x;let at=it;for(;at<0;)at+=h;const J=Math.min(i.inWidth,p+it),bt=G+X*_;let xt=v,vt=0,pt=0;for(let Rt=A;Rt<R;Rt+=c){const It=N+Rt*n[1];for(let jt=D;jt<W;jt+=u){const Zt=It+jt*n[2];for(let Ht=at;Ht<J;Ht+=h){const ue=Zt+Ht*n[3],ne=s[ue+O];if(r==="max"&&ne>xt?xt=ne:r==="avg"&&(vt+=ne,pt++),isNaN(xt))break}if(isNaN(xt))break}if(isNaN(xt))break}const At=bt+O;y[At]=r==="avg"?vt/pt:xt}}}}return b}function Uj(s,t){const e=ge(t.outShape,"int32"),n=t.strideDepth,i=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,p=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let x=0;x<t.outDepth;++x){const v=x*n-d;let b=v;for(;b<0;)b+=o;const y=Math.min(t.inDepth,c+v);for(let w=0;w<t.outHeight;++w){const S=w*i-f;let C=S;for(;C<0;)C+=a;const _=Math.min(t.inHeight,u+S);for(let I=0;I<t.outWidth;++I){const T=I*r-p;let N=T;for(;N<0;)N+=l;const O=Math.min(t.inWidth,h+T);let M=Number.NEGATIVE_INFINITY,E=-1;for(let A=b;A<y;A+=o){const R=A-v;for(let V=C;V<_;V+=a){const P=V-S;for(let $=N;$<O;$+=l){const D=$-T,W=s.get(g,A,V,$,m);W>=M&&(M=W,E=R*u*h+P*u+D)}}}e.set(E,g,x,w,I,m)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Wt(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(Qn(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=pi(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Ae(u.inShape,u.outShape))h=ar({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=ee(i.shape),p=jb(d,i.shape,i.dtype,f,u,"avg");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const Wj={kernelName:Kf,backendName:"cpu",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Wt(i,"avgPool3d");const u=Dr(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=JM(h,i.shape,i.dtype,ee(i.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const Hj={kernelName:Yf,backendName:"cpu",kernelFunc:Gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qj(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Wt([i,r],"avgPool3DGrad");const u=Dr(r.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,g=u.filterHeight,m=u.filterWidth,x=u.dilationDepth,v=u.dilationHeight,b=u.dilationWidth,y=u.effectiveFilterDepth,w=u.effectiveFilterHeight,S=u.effectiveFilterWidth,C=y-1-u.padInfo.front,_=S-1-u.padInfo.left,I=w-1-u.padInfo.top,T=ge(r.shape,"float32"),N=1/(p*g*m),O=e.bufferSync(i);for(let M=0;M<u.batchSize;++M)for(let E=0;E<u.inChannels;++E)for(let A=0;A<u.inDepth;++A)for(let R=0;R<u.inHeight;++R)for(let V=0;V<u.inWidth;++V){const P=A-C,$=R-I,D=V-_;let W=0;for(let G=0;G<y;G+=x){const X=(P+G)/h;if(!(X<0||X>=u.outDepth||Math.floor(X)!==X))for(let it=0;it<w;it+=v){const at=($+it)/d;if(!(at<0||at>=u.outHeight||Math.floor(at)!==at))for(let J=0;J<S;J+=b){const bt=(D+J)/f;if(bt<0||bt>=u.outWidth||Math.floor(bt)!==bt)continue;const xt=O.get(M,X,at,bt,E);W+=xt}}}T.set(W*N,M,A,R,V,E)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const Xj={kernelName:x0,backendName:"cpu",kernelFunc:qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Wt([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=pi(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,b=v-1-u.padInfo.left,y=x-1-u.padInfo.top,w=ge(o.shape,"float32"),S=1/(f*p),C=e.data.get(i.dataId).values,_=ge(i.shape,"float32",C);for(let I=0;I<u.batchSize;++I)for(let T=0;T<u.inChannels;++T)for(let N=0;N<u.inHeight;++N)for(let O=0;O<u.inWidth;++O){const M=N-y,E=O-b;let A=0;for(let R=0;R<x;R+=g){const V=(M+R)/h;if(!(V<0||V>=u.outHeight||Math.floor(V)!==V))for(let P=0;P<v;P+=m){const $=(E+P)/d;if($<0||$>=u.outWidth||Math.floor($)!==$)continue;const D=_.get(I,V,$,T);A+=D}}w.set(A*S,I,N,O,T)}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const Kj={kernelName:g0,backendName:"cpu",kernelFunc:jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,scale:r,offset:o,mean:a,variance:l}=t;F(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Wt([i,a,l,r,o],"batchNorm");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=e.data.get(i.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,f=r?e.data.get(r.dataId).values:new Float32Array([1]),p=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=p.length,x=f.length,v=d.length,b=h.length;let y=0,w=0,S=0,C=0;for(let _=0;_<u.length;++_)g[_]=p[y++]+(u[_]-h[w++])*f[S++]/Math.sqrt(d[C++]+c),y>=m&&(y=0),w>=b&&(w=0),S>=x&&(S=0),C>=v&&(C=0);return e.makeTensorInfo(i.shape,i.dtype,g)}const Zj={kernelName:cp,backendName:"cpu",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;Wt([i],"batchToSpaceND");const a=r.reduce((x,v)=>x*v),l=kh(i.shape,r,a),c=Ah(l.length,r.length),u=Nh(i.shape,r,a),h=eb(o,r.length),d=nb(u,o,r.length),f=Ge({inputs:{x:i},backend:e,attrs:{shape:l}}),p=gs({inputs:{x:f},backend:e,attrs:{perm:c}}),g=Ge({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Ea({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const Qj={kernelName:Jf,backendName:"cpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=Wb(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const e7={kernelName:v0,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=he(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const s7={kernelName:RC,backendName:"cpu",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7=Pe(Lu,(s,t)=>{const e=t;return s>e.clipValueMax?e.clipValueMax:s<e.clipValueMin?e.clipValueMin:s}),r7={kernelName:Lu,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=s=>{const{x:t}=s.inputs,e=s.backend,n=new Float32Array(ut(t.shape)),i=e.data.get(t.dataId),r=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];n[c]=Math.hypot(u,h)}return e.makeOutput(n,t.shape,"float32")},a7={kernelName:Qf,backendName:"cpu",kernelFunc:o7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tc(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.imag,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const l7={kernelName:D0,backendName:"cpu",kernelFunc:tc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ec(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=xe(i,t[0].shape)[0],o=t.map(g=>g.shape);Jv(o,r);let a=sr(t.map(g=>g.shape),r);if(ut(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(g=>ut(g.shape)>0);if(l.length===1)return ar({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const g=l.map(y=>Ta({inputs:{input:y},backend:e})),m=l.map(y=>tc({inputs:{input:y},backend:e})),x=ec({inputs:g,backend:e,attrs:{axis:r}}),v=ec({inputs:m,backend:e,attrs:{axis:r}}),b=Ss({inputs:{real:x,imag:v},backend:e});return g.forEach(y=>e.disposeIntermediateTensorInfo(y)),m.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),b}const c=l.map(g=>{const x=[-1,ut(g.shape.slice(r))];return Ge({inputs:{x:g},backend:e,attrs:{shape:x}})}),u=c.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=sr(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=rM(u,a,t[0].dtype,h),f=sr(l.map(g=>g.shape),r),p=e.makeTensorInfo(f,t[0].dtype,d);return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const c7={kernelName:tp,backendName:"cpu",kernelFunc:ec};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n;Wt([i,r],"conv2d");const h=Fr(l),d=qn(i.shape,r.shape,o,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,x=d.padInfo.left,v=d.padInfo.top,b=d.dataFormat==="channelsLast",y=new Yn(d.outShape,i.dtype),w=ee(i.shape),S=ee(r.shape),C=w[0],_=b?w[1]:w[2],I=b?w[2]:1,T=b?1:w[1],N=y.strides[0],O=b?y.strides[1]:y.strides[2],M=b?y.strides[2]:1,E=b?1:y.strides[1],A=e.data.get(i.dataId).values,R=e.data.get(r.dataId).values,V=y.values;for(let P=0;P<d.batchSize;++P){const $=P*C,D=P*N;for(let W=0;W<d.outHeight;++W){const G=D+W*O,X=W*d.strideHeight-v;for(let it=0;it<f;++it){const at=X+it*g;if(at<0||at>=d.inHeight)continue;const J=it*S[0],bt=$+at*_;for(let xt=0;xt<d.outWidth;++xt){const vt=G+xt*M,pt=xt*d.strideWidth-x;for(let At=0;At<p;++At){const Rt=pt+At*m;if(Rt<0||Rt>=d.inWidth)continue;const It=J+At*S[1],jt=bt+Rt*I;let Zt=It;for(let Ht=0;Ht<d.inChannels;++Ht){const ue=A[jt+Ht*T];for(let ne=0;ne<d.outChannels;++ne)V[vt+ne*E]+=ue*R[Zt+ne];Zt+=d.outChannels}}}}}}return e.makeTensorInfo(y.shape,y.dtype,V)}const u7={kernelName:ep,backendName:"cpu",kernelFunc:QM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n;Wt([i,r],"conv2dBackpropFilter");const h=Fr(l),d=qn(i.shape,u,o,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:g,filterWidth:m}=d,x=d.dataFormat==="channelsLast",v=new Yn(d.filterShape,"float32"),b=d.padInfo.left,y=d.padInfo.top,w=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,C=new Yn(i.shape,i.dtype,w),_=new Yn(r.shape,r.dtype,S);for(let I=0;I<g;++I){const T=Math.max(0,Math.ceil((y-I)/f)),N=Math.min(d.outHeight,(d.inHeight+y-I)/f);for(let O=0;O<m;++O){const M=Math.max(0,Math.ceil((b-O)/p)),E=Math.min(d.outWidth,(d.inWidth+b-O)/p);for(let A=0;A<d.inChannels;++A)for(let R=0;R<d.outChannels;++R){let V=0;for(let P=0;P<d.batchSize;++P)for(let $=T;$<N;++$){const D=I+$*f-y;for(let W=M;W<E;++W){const G=O+W*p-b;x?V+=C.get(P,D,G,A)*_.get(P,$,W,R):V+=C.get(P,A,D,G)*_.get(P,R,$,W)}}v.set(V,I,O,A,R)}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const d7={kernelName:y0,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n;Wt([i,r],"conv2dBackpropInput");const h=ee(r.shape),d=ee(i.shape);let f=Fr(c);const p=qn(o,r.shape,a,1,l,u,!1,f),g=new Yn(p.inShape,"float32"),m=g.values,x=e.data.get(i.dataId).values,v=e.data.get(r.dataId).values,[b,y,w]=h,{batchSize:S,filterHeight:C,filterWidth:_,inChannels:I,inHeight:T,inWidth:N,outChannels:O,outHeight:M,outWidth:E,strideHeight:A,strideWidth:R}=p;f=p.dataFormat;const V=C-1-p.padInfo.top,P=_-1-p.padInfo.left,$=f==="channelsLast",D=g.strides[0],W=$?g.strides[1]:g.strides[2],G=$?g.strides[2]:1,X=$?1:g.strides[1],it=d[0],at=$?d[1]:d[2],J=$?d[2]:1,bt=$?1:d[1];for(let xt=0;xt<S;++xt)for(let vt=0;vt<I;++vt)for(let pt=0;pt<T;++pt){const At=pt-V,Rt=Math.max(0,Math.ceil(At/A)),It=Math.min(M,(C+At)/A);for(let jt=0;jt<N;++jt){const Zt=jt-P,Ht=Math.max(0,Math.ceil(Zt/R)),ue=Math.min(E,(_+Zt)/R);let ne=0;for(let Ft=Rt;Ft<It;++Ft){const ze=Ft*A-At;for(let U=Ht;U<ue;++U){const L=U*R-Zt,ct=it*xt+at*Ft+J*U,wt=b*(C-1-ze)+y*(_-1-L)+w*vt;for(let St=0;St<O;++St){const Et=x[ct+bt*St],se=v[wt+St];ne+=Et*se}}}const ht=D*xt+W*pt+G*jt+X*vt;m[ht]=ne}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const p7={kernelName:np,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n;Wt([i,r],"conv3d");const c=vo(i.shape,r.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:g,padInfo:m}=c,x=m.front,v=m.left,b=m.top,y=new Yn(c.outShape,i.dtype),w=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,C=y.values,_=ee(i.shape),I=ee(r.shape);for(let T=0;T<c.batchSize;++T){const N=T*_[0],O=T*y.strides[0];for(let M=0;M<c.outDepth;++M){const E=O+M*y.strides[1],A=M*c.strideDepth-x;for(let R=0;R<u;++R){const V=A+R*f;if(V<0||V>=c.inDepth)continue;const P=R*I[0],$=N+V*_[1];for(let D=0;D<c.outHeight;++D){const W=E+D*y.strides[2],G=D*c.strideHeight-b;for(let X=0;X<h;++X){const it=G+X*p;if(it<0||it>=c.inHeight)continue;const at=P+X*I[1],J=$+it*_[2];for(let bt=0;bt<c.outWidth;++bt){const xt=W+bt*c.outChannels,vt=bt*c.strideWidth-v;for(let pt=0;pt<d;++pt){const At=vt+pt*g;if(At<0||At>=c.inWidth)continue;const Rt=at+pt*I[2],It=J+At*c.inChannels;let jt=Rt;for(let Zt=0;Zt<c.inChannels;++Zt){const Ht=w[It+Zt];for(let ue=0;ue<c.outChannels;++ue)C[xt+ue]+=Ht*S[jt+ue];jt+=c.outChannels}}}}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const g7={kernelName:sp,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n;Wt([i,r],"conv3dBackpropFilterV2");const c=ee(i.shape),u=ee(r.shape),h=vo(i.shape,l,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,g=h.filterDepth,m=h.filterHeight,x=h.filterWidth,v=new Yn(h.filterShape,"float32"),b=v.values,[y,w,S,C]=v.strides,_=e.data.get(r.dataId).values,[I,T,N,O]=u,M=e.data.get(i.dataId).values,[E,A,R,V]=c,P=h.padInfo.front,$=h.padInfo.left,D=h.padInfo.top;for(let W=0;W<g;++W){const G=Math.max(0,Math.ceil((P-W)/d)),X=Math.min(h.outDepth,(h.inDepth+P-W)/d),it=W*y;for(let at=0;at<m;++at){const J=Math.max(0,Math.ceil((D-at)/f)),bt=Math.min(h.outHeight,(h.inHeight+D-at)/f),xt=at*w+it;for(let vt=0;vt<x;++vt){const pt=Math.max(0,Math.ceil(($-vt)/p)),At=Math.min(h.outWidth,(h.inWidth+$-vt)/p),Rt=vt*S+xt;for(let It=0;It<h.inChannels;++It){const jt=It*C+Rt;for(let Zt=0;Zt<h.outChannels;++Zt){let Ht=0;for(let ue=0;ue<h.batchSize;++ue){const ne=ue*E,ht=ue*I;for(let Ft=G;Ft<X;++Ft){const U=(W+Ft*d-P)*A+ne,L=Ft*T+ht;for(let ct=J;ct<bt;++ct){const St=(at+ct*f-D)*R+U,Et=ct*N+L;for(let se=pt;se<At;++se){const et=(vt+se*p-$)*V+St,Lt=se*O+Et;Ht+=M[et+It]*_[Lt+Zt]}}}}b[jt+Zt]=Ht}}}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const v7={kernelName:w0,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n;Wt([i],"conv3dBackpropInputV2");const c=ee(i.shape),u=ee(r.shape),h=vo(l,r.shape,a,1,o),d=new Yn(h.inShape,"float32"),f=d.values,[p,g,m,x]=d.strides,v=e.data.get(i.dataId).values,[b,y,w,S]=c,C=e.data.get(r.dataId).values,[_,I,T,N]=u,{batchSize:O,filterDepth:M,filterHeight:E,filterWidth:A,inChannels:R,inDepth:V,inHeight:P,inWidth:$,outChannels:D,outDepth:W,outHeight:G,outWidth:X,strideDepth:it,strideHeight:at,strideWidth:J}=h,bt=M-1-h.padInfo.front,xt=E-1-h.padInfo.top,vt=A-1-h.padInfo.left;for(let pt=0;pt<O;++pt)for(let At=0;At<R;++At)for(let Rt=0;Rt<V;++Rt){const It=Rt-bt,jt=Math.max(0,Math.ceil(It/it)),Zt=Math.min(W,(M+It)/it);for(let Ht=0;Ht<P;++Ht){const ue=Ht-xt,ne=Math.max(0,Math.ceil(ue/at)),ht=Math.min(G,(E+ue)/at);for(let Ft=0;Ft<$;++Ft){const ze=Ft-vt,U=Math.max(0,Math.ceil(ze/J)),L=Math.min(X,(A+ze)/J);let ct=0;for(let wt=jt;wt<Zt;++wt){const St=wt*it-It;for(let Et=ne;Et<ht;++Et){const se=Et*at-ue;for(let H=U;H<L;++H){const et=H*J-ze,Lt=b*pt+y*wt+w*Et+S*H,zt=_*(M-1-St)+I*(E-1-se)+T*(A-1-et)+N*At;for(let $t=0;$t<D;++$t){const Qt=v[Lt+$t],Jt=C[zt+$t];ct+=Qt*Jt}}}}f[p*pt+g*Rt+m*Ht+x*Ft+At]=ct}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const y7={kernelName:_0,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7=Pe(Pu,s=>Math.cos(s)),_7={kernelName:Pu,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7=Pe(Ou,s=>Math.cosh(s)),C7={kernelName:Ou,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,[u,h,d,f]=i.shape,p=r.shape[0],[g,m]=a,x=ge([p,g,m,f],"float32"),v=e.data.get(r.dataId).values,b=e.data.get(o.dataId).values,y=e.data.get(i.dataId).values,w=ee(i.shape),S=ee(x.shape);for(let C=0;C<p;C++){const _=C*4,I=v[_],T=v[_+1],N=v[_+2],O=v[_+3],M=b[C];if(M>=u)continue;const E=g>1?(N-I)*(h-1)/(g-1):0,A=m>1?(O-T)*(d-1)/(m-1):0;for(let R=0;R<g;R++){const V=g>1?I*(h-1)+R*E:.5*(I+N)*(h-1);if(V<0||V>h-1){for(let P=0;P<m;P++)for(let $=0;$<f;$++){const D=$+P*S[2]+R*S[1]+C*S[0];x.values[D]=c}continue}if(l==="bilinear"){const P=Math.floor(V),$=Math.ceil(V),D=V-P;for(let W=0;W<m;W++){const G=m>1?T*(d-1)+W*A:.5*(T+O)*(d-1);if(G<0||G>d-1){for(let J=0;J<f;J++){const bt=J+W*S[2]+R*S[1]+C*S[0];x.values[bt]=c}continue}const X=Math.floor(G),it=Math.ceil(G),at=G-X;for(let J=0;J<f;J++){let bt=J+X*w[2]+P*w[1]+M*w[0];const xt=y[bt];bt=J+it*w[2]+P*w[1]+M*w[0];const vt=y[bt];bt=J+X*w[2]+$*w[1]+M*w[0];const pt=y[bt];bt=J+it*w[2]+$*w[1]+M*w[0];const At=y[bt],Rt=xt+(vt-xt)*at,It=pt+(At-pt)*at;bt=J+W*S[2]+R*S[1]+C*S[0],x.values[bt]=Rt+(It-Rt)*D}}}else for(let P=0;P<m;++P){const $=m>1?T*(d-1)+P*A:.5*(T+O)*(d-1);if($<0||$>d-1){for(let G=0;G<f;G++){const X=G+P*S[2]+R*S[1]+C*S[0];x.values[X]=c}continue}const D=Math.round($),W=Math.round(V);for(let G=0;G<f;G++){const X=G+D*w[2]+W*w[1]+M*w[0],it=G+P*S[2]+R*S[1]+C*S[0];x.values[it]=y[X]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const T7={kernelName:C0,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Wt(i,"cumprod");const l=nn([r],i.shape.length);let c=i;l!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=hn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Ts(c.dtype,"int32"),d=u0(ut(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,v)=>x+p-v-1:(x,v)=>x+v;for(let x=0;x<f.length;x+=p)for(let v=0;v<p;v++){const b=g(x,v);if(v===0)d[b]=o?1:f[b];else{const y=g(x,v-1);d[b]=o?f[y]*d[y]:f[b]*d[y]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=bo(l),v=gs({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),v}return m}const M7={kernelName:S0,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;Wt(i,"cumsum");const l=nn([r],i.shape.length);let c=i;l!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=hn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Ts(c.dtype,"int32"),d=Jn(ut(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,v)=>x+p-v-1:(x,v)=>x+v;for(let x=0;x<f.length;x+=p)for(let v=0;v<p;v++){const b=g(x,v);if(v===0)d[b]=o?0:f[b];else{const y=g(x,v-1);d[b]=o?f[y]+d[y]:f[b]+d[y]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=bo(l),v=gs({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),v}return m}const A7={kernelName:ip,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Wb(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=sM(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const R7={kernelName:I0,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n;F(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,f=u/(r*r),p=e.data.get(i.dataId).values,g=new Float32Array(a*h*d*f);let m=0;for(let x=0;x<a;++x)for(let v=0;v<h;++v){const b=Math.floor(v/r),y=v%r;for(let w=0;w<d;++w){const S=Math.floor(w/r),C=w%r,_=(y*r+C)*f;for(let I=0;I<f;++I){const N=I+_+u*(S+c*(b+l*x));g[m++]=p[N]}}}return e.makeTensorInfo([a,h,d,f],i.dtype,g)}const D7={kernelName:T0,backendName:"cpu",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;Wt([i,r],"depthwiseConv2DNative");const u=ee(i.shape),h=ee(r.shape);let d=l;d==null&&(d=[1,1]),F(Qn(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=qn(i.shape,r.shape,o,d,a,c,!0),{filterHeight:p,filterWidth:g,dilationHeight:m,dilationWidth:x,padInfo:v}=f,b=v.left,y=v.top,w=f.outChannels/f.inChannels,S=new Yn(f.outShape,i.dtype),C=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,I=S.values;for(let T=0;T<f.batchSize;++T){const N=T*u[0],O=T*S.strides[0];for(let M=0;M<f.outHeight;++M){const E=O+M*S.strides[1],A=M*f.strideHeight-y;for(let R=0;R<p;++R){const V=A+R*m;if(V<0||V>=f.inHeight)continue;const P=R*h[0],$=N+V*u[1];for(let D=0;D<f.outWidth;++D){const W=E+D*S.strides[2],G=D*f.strideWidth-b;for(let X=0;X<g;++X){const it=G+X*x;if(it<0||it>=f.inWidth)continue;const at=P+X*h[1],J=$+it*f.inChannels;let bt=W,xt=at;for(let vt=0;vt<f.inChannels;++vt){const pt=C[J+vt];for(let At=0;At<w;++At)I[bt+At]+=pt*_[xt+At];bt+=w,xt+=w}}}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const F7={kernelName:rp,backendName:"cpu",kernelFunc:tk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n;Wt([i,r],"depthwiseConv2dNativeBackpropFilter");const h=qn(i.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:g}=h,m=new Yn(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,b=h.outChannels/h.inChannels,y=e.data.get(i.dataId).values,w=new Yn(i.shape,i.dtype,y),S=e.data.get(r.dataId).values,C=new Yn(r.shape,r.dtype,S);for(let _=0;_<p;++_){const I=Math.max(0,Math.ceil((v-_)/d)),T=Math.min(h.outHeight,(h.inHeight+v-_)/d);for(let N=0;N<g;++N){const O=Math.max(0,Math.ceil((x-N)/f)),M=Math.min(h.outWidth,(h.inWidth+x-N)/f);for(let E=0;E<h.outChannels;++E){const A=Math.trunc(E/b),R=E%b;let V=0;for(let P=0;P<h.batchSize;++P)for(let $=I;$<T;++$){const D=_+$*d-v;for(let W=O;W<M;++W){const G=N+W*f-x;V+=w.get(P,D,G,A)*C.get(P,$,W,E)}}m.set(V,_,N,A,R)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const P7={kernelName:E0,backendName:"cpu",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n;Wt([i,r],"depthwiseConv2DNativeBackpropInput");const h=ee(i.shape),d=ee(r.shape),f=qn(u,r.shape,o,a,l,c,!0),p=new Yn(f.inShape,"float32"),g=p.values,[m,x,v]=p.strides,b=e.data.get(i.dataId).values,[y,w,S]=h,C=e.data.get(r.dataId).values,[_,I,T]=d,{batchSize:N,filterHeight:O,filterWidth:M,inChannels:E,inHeight:A,inWidth:R,outChannels:V,outHeight:P,outWidth:$,strideHeight:D,strideWidth:W}=f,G=O-1-f.padInfo.top,X=M-1-f.padInfo.left,it=V/E;for(let at=0;at<N;++at)for(let J=0;J<E;++J)for(let bt=0;bt<A;++bt){const xt=bt-G,vt=Math.max(0,Math.ceil(xt/D)),pt=Math.min(P,(O+xt)/D);for(let At=0;At<R;++At){const Rt=At-X,It=Math.max(0,Math.ceil(Rt/W)),jt=Math.min($,(M+Rt)/W);let Zt=0;for(let Ht=vt;Ht<pt;++Ht){const ue=Ht*D-xt;for(let ne=It;ne<jt;++ne){const ht=ne*W-Rt,Ft=y*at+w*Ht+S*ne,ze=_*(O-1-ue)+I*(M-1-ht)+T*J;for(let U=0;U<it;++U){const L=J*it+U,ct=b[Ft+L],wt=C[ze+U];Zt+=ct*wt}}}g[m*at+x*bt+v*At+J]=Zt}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const z7={kernelName:M0,backendName:"cpu",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(s){const{inputs:t,backend:e}=s,{x:n}=t,i=ut(n.shape),r=e.data.get(n.dataId).values,o=ge([i,i],n.dtype),a=o.values;for(let c=0;c<r.length;c++)a[c*i+c]=r[c];const l=[...n.shape,...n.shape];return e.makeTensorInfo(l,o.dtype,o.values)}const U7={kernelName:$C,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7={kernelName:op,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i}=s,{strides:r,pad:o,dilations:a}=e,l=t,c=l.data.get(n.dataId).values,u=n.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:f,inHeight:p,inWidth:g,inChannels:m,outHeight:x,outWidth:v,padInfo:b,strideHeight:y,strideWidth:w,filterHeight:S,filterWidth:C,dilationHeight:_,dilationWidth:I,outShape:T}=Sh(n.shape,i.shape,r,o,"NHWC",a),N=ut(T),O=T.length,M=pn(n.dtype,N);for(let A=0;A<f;++A)for(let R=0;R<x;++R){const V=R*y-b.top;for(let P=0;P<v;++P){const $=P*w-b.left;for(let D=0;D<m;++D){let W=Number.MIN_SAFE_INTEGER;for(let X=0;X<S;++X){const it=V+X*_;if(it>=0&&it<p)for(let at=0;at<C;++at){const J=$+at*I;if(J>=0&&J<g){const bt=nr([A,it,J,D],u,ee(n.shape)),xt=nr([X,at,D],d,ee(i.shape)),vt=c[bt]+h[xt];vt>W&&(W=vt)}}}const G=nr([A,R,P,D],O,ee(T));M[G]=W}}}return{dataId:l.write($a(M,n.dtype),T,n.dtype),shape:T,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7={kernelName:lx,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Ai(n.shape,c.data.get(n.dataId).values),h=Ai(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:v,strideHeight:b,strideWidth:y,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:I}=Sh(n.shape,i.shape,o,a,"NHWC",l);F(r.rank===I.length,()=>`Error in ${lx}, dy must have the same rank as output ${I.length}, but got ${r.rank}`);const T=Ai(I,c.data.get(r.dataId).values),N=MC(i.shape,i.dtype);for(let M=0;M<d;++M)for(let E=0;E<m;++E){const A=E*b-v.top;for(let R=0;R<x;++R){const V=R*y-v.left;for(let P=0;P<g;++P){let $=Number.MIN_SAFE_INTEGER,D=0,W=0;for(let G=0;G<w;++G){const X=A+G*C;if(X>=0&&X<f)for(let it=0;it<S;++it){const at=V+it*_;if(at>=0&&at<p){const J=u[M][X][at][P]+h[G][it][P];J>$&&($=J,D=G,W=it)}}}N[D][W][P]+=T[M][E][R][P]}}}return{dataId:c.write($a(N,n.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G7={kernelName:ax,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Ai(n.shape,c.data.get(n.dataId).values),h=Ai(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:v,strideHeight:b,strideWidth:y,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:I}=Sh(n.shape,i.shape,o,a,"NHWC",l);F(r.rank===I.length,()=>`Error in ${ax}, dy must have the same rank as output ${I.length}, but got ${r.rank}`);const T=Ai(I,c.data.get(r.dataId).values),N=MC(n.shape,n.dtype);for(let M=0;M<d;++M)for(let E=0;E<m;++E){const A=E*b-v.top;for(let R=0;R<x;++R){const V=R*y-v.left;for(let P=0;P<g;++P){let $=Number.MIN_SAFE_INTEGER,D=A<0?0:A,W=V<0?0:V;for(let G=0;G<w;++G){const X=A+G*C;if(X>=0&&X<f)for(let it=0;it<S;++it){const at=V+it*_;if(at>=0&&at<p){const J=u[M][X][at][P]+h[G][it][P];J>$&&($=J,D=X,W=at)}}}N[M][D][W][P]+=T[M][E][R][P]}}}return{dataId:c.write($a(N,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Wt(i,"sum");let a;i.dtype==="bool"?a=co({inputs:{x:i},backend:e,attrs:{dtype:"int32"}}):a=ar({inputs:{x:i},backend:e});const l=a.shape.length,c=xe(r,a.shape),u=nn(c,l);let h=c,d=a;u!=null&&(d=gs({inputs:{x:a},backend:e,attrs:{perm:u}}),h=hn(h.length,l)),Xn("sum",h,d.shape.length);const[f,p]=Ln(d.shape,h),g=Ts(d.dtype,"int32");let m=Cf(e,f,g);const x=ut(p),v=e.data.get(m.dataId).values,b=e.data.get(d.dataId).values;for(let y=0;y<v.length;++y){const w=y*x;let S=0;for(let C=0;C<x;++C)S+=b[w+C];v[y]=S}if(o){const y=un(m.shape,c),w=m;m=Ge({inputs:{x:m},backend:e,attrs:{shape:y}}),e.disposeIntermediateTensorInfo(w)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(d),m}const H7={kernelName:zp,backendName:"cpu",kernelFunc:Bh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=ub(i,r.length);db(o.length,l,r);const{path:c,steps:u}=fb(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:v}=hb(f,l[m]);let b;pb(x)?b=r[m]:(b=gs({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(b));const y=b.shape.slice();for(let w=0;w<v.length;++w)y.splice(v[w],0,1);Ae(b.shape,y)||(b=Ge({inputs:{x:b},backend:e,attrs:{shape:y}}),p.push(b)),d===null?d=b:(d=bm({inputs:{a:b,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=Bh({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const X7={kernelName:DC,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(s){const{inputs:t,backend:e}=s,{dy:n,y:i}=t;Wt([n,i],"eluGrad");const r=new Float32Array(ut(i.shape)),o=e.data.get(i.dataId).values,a=e.data.get(n.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=1?r[l]=a[l]:r[l]=a[l]*(c+1)}return e.makeTensorInfo(i.shape,"float32",r)}const K7={kernelName:k0,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=sb,Z7=ib,J7=rb,Q7=ob,t9=ab,e9=lb,n9=Pe(Uu,s=>{const t=Math.sign(s),e=Math.abs(s),n=1/(1+Y7*e);return t*(1-((((e9*n+t9)*n+Q7)*n+J7)*n+Z7)*n*Math.exp(-e*e))}),s9={kernelName:Uu,backendName:"cpu",kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(s){const{inputs:t,backend:e,attrs:n}=s,{input:i}=t,{dim:r}=n,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(F(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),Ge({inputs:{x:i},backend:e,attrs:{shape:a}})}const i9={kernelName:lp,backendName:"cpu",kernelFunc:Ef};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9=xn((s,t)=>s/t),Kb=Pn(zu,r9),Ox={kernelName:zu,backendName:"cpu",kernelFunc:Kb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(s,t,e){const n=s.shape,i=n[0],r=n[1],o=e.data.get(s.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[i,r],u=ut(c),h=Gn("float32",u),d=Gn("float32",u);for(let m=0;m<i;m++){const x=Ea({inputs:{x:a},backend:e,attrs:{begin:[m,0],size:[1,r]}}),v=Ea({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,r]}}),b=Ss({inputs:{real:x,imag:v},backend:e}),{real:y,imag:w}=o9(b,t,e),S=Rr(y,w);for(let C=0;C<r;C++){const _=cb(S,C);h[m*r+C]=_.real,d[m*r+C]=_.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(b)}const f=e.makeTensorInfo(c,"float32",h),p=e.makeTensorInfo(c,"float32",d),g=Ss({inputs:{real:f,imag:p},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}function o9(s,t,e){const n=ut(s.shape),i=e.data.get(s.dataId),r=e.data.get(i.complexTensorInfos.real.dataId).values,o=e.data.get(i.complexTensorInfos.imag.dataId).values;if(a9(n)){const a=zx(r,o,n,t,e),l=[s.shape[0],s.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",xo(n,"float32")),d=ar({inputs:{x:h},backend:e}),f=Ox.kernelFunc({inputs:{a:c,b:h},backend:e}),p=Ox.kernelFunc({inputs:{a:u,b:d},backend:e}),g=e.data.get(f.dataId).values,m=e.data.get(p.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),{real:g,imag:m}}return a}else{const a=Rr(r,o),l=l9(a,n,t);return xT(l)}}function a9(s){return(s&s-1)===0}function zx(s,t,e,n,i){if(e===1)return{real:s,imag:t};const r=Rr(s,t),o=e/2,a=vT(r),l=a.real,c=a.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),f=Ss({inputs:{real:h,imag:d},backend:i}),p=bT(r),g=p.real,m=p.imag,x=[g.length],v=i.makeTensorInfo(x,"float32",g),b=i.makeTensorInfo(x,"float32",m),y=Ss({inputs:{real:v,imag:b},backend:i}),w=zx(l,c,o,n,i),S=w.real,C=w.imag,_=[S.length],I=i.makeTensorInfo(_,"float32",S),T=i.makeTensorInfo(_,"float32",C),N=Ss({inputs:{real:I,imag:T},backend:i}),O=zx(g,m,o,n,i),M=O.real,E=O.imag,A=[M.length],R=i.makeTensorInfo(A,"float32",M),V=i.makeTensorInfo(A,"float32",E),P=Ss({inputs:{real:R,imag:V},backend:i}),$=wT(e,n),D=[$.real.length],W=i.makeTensorInfo(D,"float32",$.real),G=i.makeTensorInfo(D,"float32",$.imag),X=Ss({inputs:{real:W,imag:G},backend:i}),it=bm({inputs:{a:X,b:P},backend:i}),at=Ql({inputs:{a:N,b:it},backend:i}),J=Xb({inputs:{a:N,b:it},backend:i}),bt=Ta({inputs:{input:at},backend:i}),xt=Ta({inputs:{input:J},backend:i}),vt=tc({inputs:{input:at},backend:i}),pt=tc({inputs:{input:J},backend:i}),At=ec({inputs:[bt,xt],backend:i,attrs:{axis:0}}),Rt=ec({inputs:[vt,pt],backend:i,attrs:{axis:0}}),It=i.data.get(At.dataId).values,jt=i.data.get(Rt.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(X),i.disposeIntermediateTensorInfo(it),i.disposeIntermediateTensorInfo(at),i.disposeIntermediateTensorInfo(J),i.disposeIntermediateTensorInfo(bt),i.disposeIntermediateTensorInfo(vt),i.disposeIntermediateTensorInfo(xt),i.disposeIntermediateTensorInfo(pt),i.disposeIntermediateTensorInfo(At),i.disposeIntermediateTensorInfo(Rt),{real:It,imag:jt}}function l9(s,t,e){const n=new Float32Array(t*2);for(let i=0;i<t;i++){let r=0,o=0;for(let a=0;a<t;a++){const l=_T(i*a,t,e),c=cb(s,a);r+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}e&&(r/=t,o/=t),yT(n,r,o,i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(s){const{inputs:t,backend:e}=s,{input:n}=t,i=ut(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ge({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=ek(a,!1,e),c=Ge({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const u9={kernelName:A0,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(s){const{backend:t,attrs:e}=s,{shape:n,value:i,dtype:r}=e,o=r||Tu(i),a=pn(o,ut(n));return d9(a,i,o),t.makeTensorInfo(n,o,a)}const h9={kernelName:N0,backendName:"cpu",kernelFunc:Yb};function d9(s,t,e){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f9={kernelName:R0,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,i=e,r=Gn(n.dtype,ut(n.shape)),[o,a,l,c]=n.shape,u=i.data.get(n.dataId).values;for(let d=0;d<o;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const g=p*(l*c);for(let m=0;m<l;m++){const x=m*c;for(let v=0;v<c;v++){const b=Math.round(l-m-1),y=f+g+x+v;let w=u[y];if(b>=0&&b<l){const S=b*c,C=f+g+S+v;w=u[C]}r[y]=w}}}}return{dataId:i.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p9=xn((s,t)=>Math.floor(s/t)),m9=Pn(Hu,p9,null,"int32"),g9={kernelName:Hu,backendName:"cpu",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=QM({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=Ge({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=Ql({inputs:{a:g,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else g=Ql({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(f){const m=g;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Ge({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=Tf(e,g,f,x,p),e.disposeIntermediateTensorInfo(x)}else g=Tf(e,g,f,a,p);e.disposeIntermediateTensorInfo(m)}return g}const v9={kernelName:rf,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=tk({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=Ql({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(f){const m=g;g=Tf(e,g,f,a,p),e.disposeIntermediateTensorInfo(m)}return g}const y9={kernelName:HC,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=ut(n.shape),o=i.shape,a=o[o.length-1],[l,c,u,h]=hv(n,i);if(c===0)return e.makeTensorInfo(l,n.dtype,[]);const d=e.data.get(i.dataId).values,f=e.bufferSync(n),p=dM(d,f,n.dtype,c,a,u,h,n.shape,r);return e.makeTensorInfo(l,n.dtype,p.values)}const _9={kernelName:FC,backendName:"cpu",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n;Wt([i,r],"gatherV2");const l=xe(o,i.shape)[0],c=e.data.get(r.dataId).values,u=i.shape[l];for(let y=0;y<c.length;++y){const w=c[y];F(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=ut(r.shape),f=gb(i,r,l,h),p=Ge({inputs:{x:i},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Ge({inputs:{x:r},backend:e,attrs:{shape:[f.batchSize,d/f.batchSize]}}),m=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=e.bufferSync(g),v=e.bufferSync(p),b=fM(v,x,m);return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(f.outputShape,b.dtype,b.values)}const C9={kernelName:up,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(s){const{inputs:t,backend:e}=s,{input:n}=t,i=ut(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ge({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=ek(a,!0,e),c=Ge({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const T9={kernelName:$0,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E9=Pe(ju,s=>Number.isFinite(s)?1:0,"bool"),M9={kernelName:ju,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9=Pe(Ku,s=>Math.abs(s)===1/0?1:0,"bool"),A9={kernelName:Ku,backendName:"cpu",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N9=Pe(Yu,s=>Number.isNaN(s)?1:0,"bool"),R9={kernelName:Yu,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $9(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=vM(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const D9={kernelName:LC,backendName:"cpu",kernelFunc:$9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9=Pe(Ju,s=>Math.log1p(s)),L9={kernelName:Ju,backendName:"cpu",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9=xn((s,t)=>s&&t),O9=Pn(mp,P9,null,"bool"),z9={kernelName:mp,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=Pe(gp,s=>s?0:1,"bool"),U9={kernelName:gp,backendName:"cpu",kernelFunc:B9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=xn((s,t)=>s||t),W9=Pn(xp,V9,null,"bool"),G9={kernelName:xp,backendName:"cpu",kernelFunc:W9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n;Wt(i,"LRN");const c=i.shape[3],u=c-1,h=e.data.get(i.dataId).values,d=ut(i.shape),f=new Float32Array(d);function p(g){const m=g%c;let x=g-m+Math.max(0,m-r);const v=g-m+Math.min(m+r,u);let b=0;for(;x<=v;x++){const y=h[x];b+=y*y}return b}for(let g=0;g<d;g++){const m=p(g),x=h[g]*Math.pow(o+a*m,-l);f[g]=x}return e.makeTensorInfo(i.shape,i.dtype,f)}const q9={kernelName:vp,backendName:"cpu",kernelFunc:H9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n;Wt(o,"LRNGrad");const h=ut(o.shape),d=o.shape[3],f=e.data.get(o.dataId).values,p=e.data.get(i.dataId).values,g=e.data.get(r.dataId).values,m=new Float32Array(h),x=h;for(let v=0;v<x;v++){const b=v%d,y=v-b+Math.max(0,b-a),w=v-b+Math.min(d,b+a+1);let S=0;for(let C=y;C<w;C++)S+=Math.pow(p[C],2);S=c*S+l;for(let C=y;C<w;C++){let _=-2*c*u*p[C]*g[v]/S;v===C&&(_+=Math.pow(S,-u)),_*=f[v],m[C]+=_}}return e.makeTensorInfo(o.shape,i.dtype,m)}const j9={kernelName:F0,backendName:"cpu",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=e;let l=i.shape;const c=l.length,u=xe(r,l);let h=u;const d=nn(h,c);let f=a.data.get(i.dataId).values;if(d!=null){const y=new Array(c);for(let w=0;w<y.length;w++)y[w]=l[d[w]];f=Hb(f,l,i.dtype,d,y),h=hn(h.length,c),l=y}Wt(i,"max"),Xn("max",h,c);const[p,g]=Ln(l,h),m=ut(g),x=yM(f,m,p,i.dtype),v=a.write(x,p,i.dtype);let b=p;return o&&(b=un(p,u)),{dataId:v,shape:b,dtype:i.dtype}}const K9={kernelName:bp,backendName:"cpu",kernelFunc:nk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Wt(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(Qn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=pi(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Ae(u.inShape,u.outShape))h=ar({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=ee(i.shape),p=jb(d,i.shape,i.dtype,f,u,"max");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const Z9={kernelName:yp,backendName:"cpu",kernelFunc:Y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;Wt(i,"maxPool3d");const u=Dr(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=JM(h,i.shape,i.dtype,ee(i.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const Q9={kernelName:wp,backendName:"cpu",kernelFunc:J9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;Wt([i,r],"maxPool3DGrad");const u=Dr(r.shape,o,a,1,l,c),h=e.bufferSync(r),d=Uj(h,u),f=u.strideDepth,p=u.strideHeight,g=u.strideWidth,m=u.dilationDepth,x=u.dilationHeight,v=u.dilationWidth,b=u.effectiveFilterDepth,y=u.effectiveFilterHeight,w=u.effectiveFilterWidth,S=b-1-u.padInfo.front,C=w-1-u.padInfo.left,_=y-1-u.padInfo.top,I=ge(r.shape,"float32"),T=e.bufferSync(i);for(let N=0;N<u.batchSize;++N)for(let O=0;O<u.inChannels;++O)for(let M=0;M<u.inDepth;++M)for(let E=0;E<u.inHeight;++E)for(let A=0;A<u.inWidth;++A){const R=M-S,V=E-_,P=A-C;let $=0;for(let D=0;D<b;D+=m){const W=(R+D)/f;if(!(W<0||W>=u.outDepth||Math.floor(W)!==W))for(let G=0;G<y;G+=x){const X=(V+G)/p;if(!(X<0||X>=u.outHeight||Math.floor(X)!==X))for(let it=0;it<w;it+=v){const at=(P+it)/g;if(at<0||at>=u.outWidth||Math.floor(at)!==at)continue;const J=b*y*w-1-d.get(N,W,X,at,O),bt=D*y*w+G*w+it,xt=J===bt?1:0;if(xt===0)continue;const vt=T.get(N,W,X,at,O);$+=vt*xt}}}I.set($,N,M,E,A,O)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const eK={kernelName:P0,backendName:"cpu",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Wt([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=pi(a.shape,l,c,1,u,h),f=e.data.get(a.dataId).values,p=ge(d.outShape,a.dtype,ZM(f,a.shape,a.dtype,d).values),g=d.strideHeight,m=d.strideWidth,x=d.dilationHeight,v=d.dilationWidth,b=d.effectiveFilterHeight,y=d.effectiveFilterWidth,w=y-1-d.padInfo.left,S=b-1-d.padInfo.top,C=ge(a.shape,"float32"),_=e.data.get(i.dataId).values,I=ge(i.shape,"float32",_);for(let T=0;T<d.batchSize;++T)for(let N=0;N<d.inChannels;++N)for(let O=0;O<d.inHeight;++O)for(let M=0;M<d.inWidth;++M){const E=O-S,A=M-w;let R=0;for(let V=0;V<b;V+=x){const P=(E+V)/g;if(!(P<0||P>=d.outHeight||Math.floor(P)!==P))for(let $=0;$<y;$+=v){const D=(A+$)/m;if(D<0||D>=d.outWidth||Math.floor(D)!==D)continue;const W=b*y-1-p.get(T,P,D,N),G=V*y+$,X=W===G?1:0;if(X===0)continue;const it=I.get(T,P,D,N);R+=it*X}}C.set(R,T,O,M,N)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const sK={kernelName:L0,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(s,t,e,n,i){const r=ee(t),o=jb(s,t,e,r,i,"max"),a=ZM(s,t,e,i,!0,n);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rK={kernelName:PC,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;Wt(n,"MaxPoolWithArgmax");const c=l.data.get(n.dataId).values,u=pi(n.shape,i,r,[1,1],o),[h,d]=iK(c,n.shape,n.dtype,a,u),f=l.write(h,u.outShape,n.dtype),p=l.write(d,u.outShape,n.dtype);return[{dataId:f,shape:u.outShape,dtype:n.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=xe(r,i.shape),c=Ln(i.shape,a)[1],u=ut(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=co({inputs:{x:i},backend:e,attrs:{dtype:"float32"}});h.push(f);const p=Kb({inputs:{a:f,b:d},backend:e});h.push(p);const g=Bh({inputs:{x:p},backend:e,attrs:{axis:r,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}const aK={kernelName:_p,backendName:"cpu",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;Wt(i,"min");const a=xe(r,i.shape);let l=a;const c=nn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=hn(l.length,i.shape.length)),Xn("min",l,u.shape.length);const[h,d]=Ln(u.shape,l),f=ut(d),p=Jn(ut(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let b=g[v];for(let y=0;y<f;++y){const w=g[v+y];(Number.isNaN(w)||w<b)&&(b=w)}p[x]=b}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=un(h,a),v=Ge({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const cK={kernelName:Sp,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,mode:o}=n;Wt(i,"mirrorPad");const a=r.map((b,y)=>b[0]+i.shape[y]+b[1]),l=r.map(b=>b[0]),c=r.map((b,y)=>b[0]+i.shape[y]),u=o==="reflect"?0:1,h=e.data.get(i.dataId).values,d=i.shape.length,f=ee(i.shape),p=ut(a),g=a.length,m=ee(a),x=Gn(i.dtype,p);for(let b=0;b<p;b++){let y=cc(b,g,m);for(let S=0;S<g;S++)y[S]<l[S]?y[S]=l[S]*2-y[S]-u:y[S]>=c[S]&&(y[S]=(c[S]-1)*2-y[S]+u);y=y.map((S,C)=>S-l[C]);const w=nr(y,d,f);x[b]=h[w]}return{dataId:e.write(x,a,i.dtype),shape:a,dtype:i.dtype}}const hK={kernelName:Cp,backendName:"cpu",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK=xn((s,t)=>{const e=s%t;return s<0&&t<0||s>=0&&t>=0?e:(e+t)%t}),fK=Pn(eh,dK),pK={kernelName:eh,backendName:"cpu",kernelFunc:fK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=i.shape.length;let a=r;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=xe([a],i.shape),c=nk({inputs:{x:i},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=un(c.shape,l),h=Ge({inputs:{x:c},backend:e,attrs:{shape:u}}),d=Xb({inputs:{a:i,b:h},backend:e}),f=cM({inputs:{x:d},backend:e}),p=Bh({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),g=Ge({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Kb({inputs:{a:f,b:g},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const mK={kernelName:Vp,backendName:"cpu",kernelFunc:sk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n;Wt(i,"multinomial");const l=a?i:sk({inputs:{logits:i},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,r],f=Jn(ut(d),"int32");for(let p=0;p<c;++p){const g=p*u,m=new Float32Array(u-1);m[0]=h[g];for(let b=1;b<m.length;++b)m[b]=m[b-1]+h[g+b];const x=Th.alea(o.toString()),v=p*r;for(let b=0;b<r;++b){const y=x();f[v+b]=m.length;for(let w=0;w<m.length;w++)if(y<m[w]){f[v+b]=w;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",f)}const xK={kernelName:OC,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK=Vv;function bK(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n;Wt(i,"NonMaxSuppression");const c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,{selectedIndices:h}=vK(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const yK={kernelName:O0,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK=Wv;function _K(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n;Wt(i,"NonMaxSuppressionPadded");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,{selectedIndices:d,validOutputs:f}=wK(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const SK={kernelName:z0,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=Gv;function IK(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n;Wt(i,"NonMaxSuppressionWithScore");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=CK(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const TK={kernelName:B0,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n;Wt(i,"oneHot");const c=ut(i.shape),u=new Float32Array(c*o);u.fill(l);const h=e.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return e.makeTensorInfo([...i.shape,o],r,u)}const MK={kernelName:Mp,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){const i=Ta({inputs:{input:n},backend:e}),r=Mf({inputs:{x:i},backend:e}),o=tc({inputs:{input:n},backend:e}),a=Mf({inputs:{x:o},backend:e}),l=Ss({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Yb({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}const kK={kernelName:Hp,backendName:"cpu",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){const i=Ta({inputs:{input:n},backend:e}),r=ik({inputs:{x:i},backend:e}),o=tc({inputs:{input:n},backend:e}),a=Mf({inputs:{x:o},backend:e}),l=Ss({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Yb({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}const AK={kernelName:Ep,backendName:"cpu",kernelFunc:ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return Ef({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{fi(r,u.shape,"All tensors passed to stack must have matching shapes"),F(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Ef({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=ec({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const NK={kernelName:kp,backendName:"cpu",kernelFunc:rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;Wt(i,"pad");const a=r.map((v,b)=>v[0]+i.shape[b]+v[1]),l=r.map(v=>v[0]),c=e.data.get(i.dataId).values,u=ut(i.shape),h=i.shape.length,d=ee(i.shape),f=ut(a),p=a.length,g=ee(a),m=Gn(i.dtype,f);o!==0&&m.fill(o);for(let v=0;v<u;v++){const y=cc(v,h,d).map((S,C)=>S+l[C]),w=nr(y,p,g);m[w]=c[v]}return{dataId:e.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const ok={kernelName:Ap,backendName:"cpu",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=xn((s,t)=>Math.pow(s,t)),DK=Pn(sh,$K),FK={kernelName:sh,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,a=i.map(m=>e.data.get(m.dataId).values),l=i.map(m=>m.shape),c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[h,d,f]=TM(a,l,c,r.shape,r.dtype,u,o.shape),p=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(f,r.dtype,d);return p.concat([g])}const PK={kernelName:zC,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=EM(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const zK={kernelName:BC,backendName:"cpu",kernelFunc:OK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BK(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a.map(m=>e.data.get(m.dataId).values),f=a.map(m=>m.shape),[p,g]=MM(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const UK={kernelName:UC,backendName:"cpu",kernelFunc:BK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(s){const{backend:t,attrs:e}=s,{start:n,stop:i,dtype:r,step:o}=e,a=kM(n,i,o,r);return t.makeTensorInfo([a.length],r,a)}const WK={kernelName:U0,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK=Pe(ih,s=>1/s),HK={kernelName:ih,backendName:"cpu",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Wt(i,"resizeBilinear");const l=ee(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(ut([h,c,u,p])),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],v=[r&&c>1?c-1:c,r&&u>1?u-1:u];let b=0;const y=x[0]/v[0],w=x[1]/v[1];for(let S=0;S<h;S++)for(let C=0;C<c;C++){let _;o?_=y*(C+.5)-.5:_=y*C;const I=Math.max(0,Math.floor(_)),T=_-I,N=Math.min(d-1,Math.ceil(_)),O=S*l[0]+I*l[1],M=S*l[0]+N*l[1];for(let E=0;E<u;E++){let A;o?A=w*(E+.5)-.5:A=w*E;const R=Math.max(0,Math.floor(A)),V=A-R,P=Math.min(f-1,Math.ceil(A)),$=O+R*l[2],D=M+R*l[2],W=O+P*l[2],G=M+P*l[2];for(let X=0;X<p;X++){const it=g[$+X],at=g[D+X],J=g[W+X],bt=g[G+X],xt=it+(J-it)*V,vt=at+(bt-at)*V,pt=xt+(vt-xt)*T;m[b++]=pt}}}return e.makeTensorInfo([h,c,u,p],"float32",m)}const XK={kernelName:Fp,backendName:"cpu",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Wt([r,i],"resizeBilinearGrad");const a=ee(i.shape),[l,c,u,h]=i.shape,[,d,f]=r.shape,p=new Float32Array(l*c*u*h),g=[o&&d>1?c-1:c,o&&f>1?u-1:u],m=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=g[0]/m[0],v=g[1]/m[1],b=e.data.get(r.dataId).values;let y=0;for(let w=0;w<l;w++){const S=w*a[0];for(let C=0;C<d;C++){const _=C*x,I=Math.floor(_),T=Math.min(Math.ceil(_),c-1),N=S+I*a[1],O=S+T*a[1],M=_-I,E=1-M;for(let A=0;A<f;A++){const R=A*v,V=Math.floor(R),P=Math.min(Math.ceil(R),u-1),$=R-V,D=1-$,W=N+V*a[2],G=N+P*a[2],X=O+V*a[2],it=O+P*a[2],at=E*D,J=E*$,bt=M*D,xt=M*$;for(let vt=0;vt<h;vt++){const pt=b[y++];p[W+vt]+=pt*at,p[G+vt]+=pt*J,p[X+vt]+=pt*bt,p[it+vt]+=pt*xt}}}}return e.makeTensorInfo([l,u,c,h],"float32",p)}const KK={kernelName:G0,backendName:"cpu",kernelFunc:jK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;Wt(i,"resizeNearestNeighbor");const l=ee(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(h*c*u*p),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],v=[r&&c>1?c-1:c,r&&u>1?u-1:u],b=x[0]/v[0],y=x[1]/v[1];let w=0;for(let S=0;S<h;S++){const C=S*l[0];for(let _=0;_<c;_++){const I=o?b*(_+.5):b*_;let T=Math.min(d-1,r?Math.round(I):Math.floor(I));o&&(T=Math.max(0,T));const N=C+T*l[1];for(let O=0;O<u;O++){const M=o?y*(O+.5):y*O;let E=Math.min(f-1,r?Math.round(M):Math.floor(M));o&&(E=Math.max(0,E));const A=N+E*l[2];for(let R=0;R<p;R++){const V=g[A+R];m[w++]=V}}}}return e.makeTensorInfo([h,c,u,p],i.dtype,m)}const ZK={kernelName:Dp,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;Wt([r,i],"resizeNearestNeighborGrad");const a=ee(i.shape),l=ee(r.shape),[c,u,h,d]=i.shape,[,f,p]=r.shape,g=new Float32Array(c*u*h*d),m=e.data.get(r.dataId).values,x=[o&&f>1?u-1:u,o&&p>1?h-1:h],v=[o&&f>1?f-1:f,o&&p>1?p-1:p],b=x[0]/v[0],y=x[1]/v[1],w=1/b,S=1/y,C=Math.ceil(w)*2+2,_=Math.ceil(S)*2+2;for(let I=0;I<c;I++){const T=I*a[0];for(let N=0;N<u;N++){const O=T+N*a[1],M=Math.floor(N*w),E=Math.floor(M-C/2);for(let A=0;A<h;A++){const R=O+A*a[2],V=Math.floor(A*S),P=Math.floor(V-_/2);for(let $=0;$<d;$++){let D=0;for(let W=0;W<C;W++){const G=W+E;if(G<0||G>=f)continue;const X=T+G*l[1],it=G*b,at=Math.min(u-1,o?Math.round(it):Math.floor(it));if(N===at)for(let J=0;J<_;J++){const bt=J+P;if(bt<0||bt>=p)continue;const xt=X+bt*l[2],vt=bt*y,pt=Math.min(h-1,o?Math.round(vt):Math.floor(vt));A===pt&&(D+=m[xt+$])}}g[R+$]=D}}}}return e.makeTensorInfo(i.shape,i.dtype,g)}const QK={kernelName:W0,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n;Wt(i,"reverse");const o=i.shape.length,a=xe(r,i.shape);if(o===0)return ar({inputs:{x:i},backend:e});const l=new Yn(i.shape,i.dtype),c=e.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=i.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const eY={kernelName:Lp,backendName:"cpu",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nY={kernelName:sv,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=Gn(n.dtype,ut(n.shape)),[c,u,h,d]=n.shape,[f,p]=tb(o,u,h),g=255,m=Math.sin(i),x=Math.cos(i),v=a.data.get(n.dataId).values;for(let y=0;y<c;y++){const w=y*h*u*d;for(let S=0;S<u;S++){const C=S*(h*d);for(let _=0;_<h;_++){const I=_*d;for(let T=0;T<d;T++){const N=[c,S,_,T],O=N[2],M=N[1];let E=(O-f)*x-(M-p)*m,A=(O-f)*m+(M-p)*x;E=Math.round(E+f),A=Math.round(A+p);let R=r;if(typeof r!="number"&&(T===3?R=g:R=r[T]),E>=0&&E<h&&A>=0&&A<u){const P=A*(h*d),$=E*d,D=w+P+$+T;R=v[D]}const V=w+C+I+T;l[V]=R}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=Pe(ah,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2===0?t:t+1}),iY={kernelName:ah,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=_h(r,i,o),d=!0,f=e.bufferSync(i),p=e.bufferSync(r),g=Cl(f,p,o,h,c,l,a,u,0,d);return e.makeTensorInfo(o,g.dtype,g.values)}const oY={kernelName:VC,backendName:"cpu",kernelFunc:rY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<t?e=i+1:n=i;return n}function lY(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<=t?e=i+1:n=i;return n}function cY(s,t,e,n,i,r){const o=pn("int32",e*i);for(let a=0;a<e;++a){const l=s.slice(a*n,(a+1)*n),c=a*i;for(let u=0;u<i;++u)o[c+u]=r==="left"?aY(l,t[u+c]):lY(l,t[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=cY(a,l,i.shape[0],i.shape[1],r.shape[1],o);return e.makeTensorInfo(r.shape,"int32",c)}const hY={kernelName:WC,backendName:"cpu",kernelFunc:uY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t;Wt([n,i,r],"select");const o=n.shape.length,a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Ts(i.dtype,r.dtype),h=Jn(ut(i.shape),u);let d=0;const f=o===0||o>1||i.shape.length===1?1:ut(i.shape.slice(1));for(let p=0;p<a.length;p++)for(let g=0;g<f;g++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return e.makeTensorInfo(i.shape,u,h)}const fY={kernelName:Pp,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY=rm,mY=om,gY=Pe(ch,s=>s>=0?mY*s:pY*(Math.exp(s)-1)),xY={kernelName:ch,backendName:"cpu",kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY=Pe(dh,s=>s<0?-1:s>0?1:0),bY={kernelName:dh,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=Pe(uh,s=>Math.sin(s)),wY={kernelName:uh,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Y=Pe(hh,s=>Math.sinh(s)),SY={kernelName:hh,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CY=11920928955078125e-23,A_=Math.log(CY)+2,IY=Pe(ph,s=>{const t=s>-A_,e=s<A_,n=Math.exp(s);let i;return e?i=n:t?i=s:i=Math.log(1+n),i}),TY={kernelName:ph,backendName:"cpu",kernelFunc:IY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;Wt([i],"spaceToBatchND");const a=ut(r),l=[[0,0]];l.push(...o);for(let S=1+r.length;S<i.shape.length;++S)l.push([0,0]);const c=ok.kernelFunc({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),u=kh(c.shape,r,a,!1),h=Ah(u.length,r.length,!1),d=Nh(c.shape,r,a,!1),g=Ge({inputs:{x:c},backend:e,attrs:{shape:u}}),v=gs({inputs:{x:g},backend:e,attrs:{perm:h}}),w=Ge({inputs:{x:v},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(v),w}const MY={kernelName:Bp,backendName:"cpu",kernelFunc:EY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values[0],[h,d,f,p,g]=$M(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const AY={kernelName:H0,backendName:"cpu",kernelFunc:kY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.data.get(i.dataId).values),a=e.data.get(n.dataId).values,l=Array.from(e.data.get(r.dataId).values),[c,u,h]=DM(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const RY={kernelName:q0,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=qb(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const DY={kernelName:X0,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=qb(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const LY={kernelName:j0,backendName:"cpu",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PY(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=_h(r,i,a),f=!1,p=e.bufferSync(i);let g;switch(r.dtype){case"bool":{const m=e.bufferSync(r),x=Boolean(e.data.get(o.dataId).values[0]);g=Cl(p,m,a,d,u,c,l,h,x,f);break}case"float32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=Cl(p,m,a,d,u,c,l,h,x,f);break}case"int32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=Cl(p,m,a,d,u,c,l,h,x,f);break}case"string":{const m=e.bufferSync(r),x=no(e.data.get(o.dataId).values[0]);g=Cl(p,m,a,d,u,c,l,h,x,f);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}const OY={kernelName:GC,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=xe(o,i.shape)[0],l=mb(i,r,a),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=Ea({inputs:{x:i},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,f})}const BY={kernelName:Up,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY={kernelName:K0,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:e}=s,n=t;Wt(e,"square");const i=n.data.get(e.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const l=i[a];r[a]=l*l}return{dataId:n.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY=Pe(wh,(s,t)=>{const e=t;return isNaN(s)?NaN:s>0?1:e.alpha}),WY={kernelName:wh,backendName:"cpu",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n;Wt(i,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:v,end:b,strides:y}=gv(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Ge({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){F(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const S=fv(v,b,y),C=Ea({inputs:{x:i},backend:e,attrs:{begin:v,size:S}});w=Ge({inputs:{x:C},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(C)}else{const S=e.bufferSync(i),C=LM(f,S,y,v);w=e.makeTensorInfo(p,C.dtype,C.values)}return w}const HY={kernelName:Y0,backendName:"cpu",kernelFunc:GY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.data.get(u.dataId).values,f=e.data.get(h.dataId).values,[p,g]=PM(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const XY={kernelName:Z0,backendName:"cpu",kernelFunc:qY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values[0],[c,u,h]=OM(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const KY={kernelName:J0,backendName:"cpu",kernelFunc:jY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.data.get(r.dataId).values,a=zM(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const ZY={kernelName:Q0,backendName:"cpu",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=Pe(vh,s=>Math.tan(s)),QY={kernelName:vh,backendName:"cpu",kernelFunc:JY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tZ=Pe(bh,s=>Math.tanh(s)),eZ={kernelName:bh,backendName:"cpu",kernelFunc:tZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;Wt(i,"tile");const o=UM(e.bufferSync(i),r);return e.makeTensorInfo(o.shape,o.dtype,o.values)}const sZ={kernelName:yh,backendName:"cpu",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n;Wt(i,"topk");const a=e.data.get(i.dataId).values,[l,c]=WM(a,i.shape,i.dtype,r,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const rZ={kernelName:tv,backendName:"cpu",kernelFunc:iZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oZ(s){const{inputs:t,attrs:e,backend:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=e,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=ee(i.shape),v=x[0],b=x[1],y=x[2],w=ee(m),S=w[0],C=w[1],_=w[2],I=Gn(i.dtype,ut(m));I.fill(l);const T=n.data.get(i.dataId).values,N=n.data.get(r.dataId).values;for(let M=0;M<u;++M){const E=r.shape[0]===1?N:N.subarray(M*8,M*8+8);for(let A=0;A<p;++A)for(let R=0;R<g;++R)for(let V=0;V<f;++V){let P;const $=E[6]*R+E[7]*A+1;if($===0)continue;const D=(E[0]*R+E[1]*A+E[2])/$,W=(E[3]*R+E[4]*A+E[5])/$,G=N_(D,d,a),X=N_(W,h,a);switch(o){case"nearest":P=dZ(T,h,d,v,b,y,M,X,G,V,l);break;case"bilinear":P=fZ(T,h,d,v,b,y,M,X,G,V,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const it=M*S+A*C+R*_+V;I[it]=P}return n.makeTensorInfo(m,i.dtype,I)}return{dataId:n.write(I,m,i.dtype),shape:i.shape,dtype:i.dtype}}const aZ={kernelName:ev,backendName:"cpu",kernelFunc:oZ};function N_(s,t,e){switch(e){case"reflect":return lZ(s,t);case"wrap":return cZ(s,t);case"nearest":return hZ(s,t);case"constant":default:return uZ(s)}}function lZ(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{const n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return ga(0,e,t-1)}function cZ(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{const n=t-1;e-=t*Math.trunc(e/n)}return ga(0,e,t-1)}function uZ(s,t){return s}function hZ(s,t){return ga(0,s,t-1)}function Gc(s,t,e,n,i,r,o,a,l,c,u){const h=o*n+a*i+l*r+c;return 0<=a&&a<t&&0<=l&&l<e?s[h]:u}function dZ(s,t,e,n,i,r,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Gc(s,t,e,n,i,r,o,h,d,c,u)}function fZ(s,t,e,n,i,r,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,g=(p-l)*Gc(s,t,e,n,i,r,o,h,d,c,u)+(l-d)*Gc(s,t,e,n,i,r,o,h,p,c,u),m=(p-l)*Gc(s,t,e,n,i,r,o,f,d,c,u)+(l-d)*Gc(s,t,e,n,i,r,o,f,p,c,u);return(f-a)*g+(a-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Wt(r,"unique");const o=n.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=GM(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const mZ={kernelName:nv,backendName:"cpu",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gZ(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i.shape.length,a=i.shape[r],l=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==r&&(l[c++]=i.shape[f]);const u=new Array(o).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[r]=f;const p=Ea({inputs:{x:i},backend:e,attrs:{begin:u,size:h}});d[f]=Ge({inputs:{x:p},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(p)}return d}const xZ={kernelName:Wp,backendName:"cpu",kernelFunc:gZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n;Wt(i,"unsortedSegmentSum");const a=i.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let p=0;p<h;++p){const g=Ef({inputs:{input:d},backend:e,attrs:{dim:p+1}});d=g,u.push(g)}for(let p=0;p<o;++p){const g=xo(p,"int32"),m=e.makeTensorInfo([],"int32",g),x=aM({inputs:{a:m,b:d},backend:e}),v=co({inputs:{x},backend:e,attrs:{dtype:"float32"}}),b=bm({inputs:{a:v,b:i},backend:e}),y=Bh({inputs:{x:b},backend:e,attrs:{axis:0,keepDims:!1}});c.push(y),u.push(m),u.push(x),u.push(v),u.push(b),u.push(y)}const f=rk({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const bZ={kernelName:Gp,backendName:"cpu",kernelFunc:vZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yZ=[mj,eX,xj,bj,aX,wj,Sj,Ij,Ej,kj,Nj,$j,Fj,Oj,Bj,Wj,Hj,Xj,Kj,fj,Zj,Qj,e7,s7,rX,cX,r7,nX,a7,c7,u7,d7,p7,g7,v7,y7,_7,C7,T7,M7,A7,R7,D7,F7,P7,z7,U7,V7,W7,G7,X7,oj,K7,uX,s9,hX,i9,fX,u9,h9,f9,mX,g9,v9,y9,_9,C9,xX,bX,sX,T9,l7,M9,A9,R9,aj,wX,SX,D9,IX,L9,z9,U9,G9,q9,j9,K9,EX,Z9,Q9,eK,sK,rK,aK,cK,kX,hK,pK,xK,NX,$X,yK,SK,TK,FX,MK,AK,NK,ok,FK,cj,OX,PK,zK,UK,WK,iX,Ox,HK,uj,hj,dj,XK,KK,ZK,QK,eY,nY,iY,qX,oY,hY,fY,xY,jX,bY,wY,SY,KX,mK,TY,MY,AY,RY,DY,LY,OY,BY,JX,UY,tj,WY,HY,XY,KY,ZY,ij,H7,QY,eZ,sZ,rZ,aZ,LX,mZ,xZ,bZ,kK];for(const s of yZ)qC(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go={},Dd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function wZ(s,t){Go[s]=t}function Oi(s,t){if(!(s in Go)||t!=null){const n=SZ(s,t);if(n!==null)Go[s]=n;else return console.log("Could not get context for WebGL version",s),null}const e=Go[s];return e==null||e.isContextLost()?(delete Go[s],Oi(s)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Go[s])}function _Z(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function SZ(s,t){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t==null?_Z(s):t;return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Go[s]},!1),ot().getBool("SOFTWARE_WEBGL_ENABLED")&&(Dd.failIfMajorPerformanceCaveat=!1),s===1?e.getContext("webgl",Dd)||e.getContext("experimental-webgl",Dd):e.getContext("webgl2",Dd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pu;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(pu||(pu={}));var Ps;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(Ps||(Ps={}));var Bn;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Bn||(Bn={}));function Uh(s,t){return[t,s]}function CZ(s,t){return s*t}function Fd(s){const t=ut(s),e=Math.ceil(t/4);return nx(e)}function xc(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function IZ(s,t){const[e,n]=xc(s,t);return e*n*4}function Zb(s,t){const e=s;let n,i,r,o,a,l,c,u,h,d;return ot().getNumber("WEBGL_VERSION")===2?(n=e.R32F,i=e.R16F,r=e.RGBA16F,o=e.RGBA32F,a=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(n=s.RGBA,i=s.RGBA,r=s.RGBA,o=e.RGBA,a=s.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(s,t){const e=t();return ot().getBool("DEBUG")&&TZ(s),e}function TZ(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+AZ(s,t))}const EZ=596e-10,MZ=65504;function kZ(s){return!!(ot().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||EZ<Math.abs(s)&&Math.abs(s)<MZ)}function AZ(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Ld(s,t){return Pr(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function NZ(s,t){const e=Pr(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Gt(s,()=>s.shaderSource(e,t)),Gt(s,()=>s.compileShader(e)),s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function RZ(s,t){const e=Pr(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Gt(s,()=>s.shaderSource(e,t)),Gt(s,()=>s.compileShader(e)),ot().get("ENGINE_COMPILE_ONLY"))return e;if(s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw ak(t,s.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const $Z=/ERROR: [0-9]+:([0-9]+):/g;function ak(s,t){const e=$Z.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const n=+e[1],i=s.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>Ml((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,n-1),c=o.slice(n-1,n),u=o.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Ml(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function DZ(s){return Pr(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function FZ(s,t){if(Gt(s,()=>s.linkProgram(t)),!ot().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Ng(s,t){if(Gt(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function LZ(s,t){const e=Pr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Gt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),Gt(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function PZ(s,t){const e=Pr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Gt(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e)),Gt(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function OZ(s){return Pr(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function zZ(s,t){const e=ot().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const n=`[${s}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>e||t>e){const n=`[${s}x${t}]`,i=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function BZ(s){return Pr(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function R_(s,t,e,n,i,r,o){const a=s.getAttribLocation(t,e);return a===-1?!1:(Gt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),Gt(s,()=>s.vertexAttribPointer(a,i,s.FLOAT,!1,r,o)),Gt(s,()=>s.enableVertexAttribArray(a)),!0)}function UZ(s,t,e){qZ(s,e),Gt(s,()=>s.activeTexture(s.TEXTURE0+e)),Gt(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function VZ(s,t,e){return Pr(s,()=>s.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function WZ(s,t,e){return s.getUniformLocation(t,e)}function GZ(s,t,e,n){Gt(s,()=>UZ(s,t,n)),Gt(s,()=>s.uniform1i(e,n))}function Rg(s,t,e){Gt(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),Gt(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function $_(s,t){Gt(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),Gt(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function Pd(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+HZ(s,t))}function HZ(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Pr(s,t,e){const n=Gt(s,()=>t());if(n==null)throw new Error(e);return n}function qZ(s,t){const e=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+s.TEXTURE0;if(n<s.TEXTURE0||n>e){const i=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${i}.`)}}function nc(s,t=2){return ut(s.slice(0,s.length-t))}function sc(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function Od(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[nc(s),...sc(s)]),t}function XZ(s,t=!1){let e=ot().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=ot().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&ot().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,s=s.map((a,l)=>l>=s.length-2?c0(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=go(s).newShape);let i=ut(s),r=null;s.length<=1&&i<=e?r=[1,i]:s.length===2&&s[0]<=e&&s[1]<=e?r=s:s.length===3&&s[0]*s[1]<=e&&s[2]<=e?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=e&&s[1]*s[2]<=e?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=e&&s[3]<=e?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=e&&s[1]*s[2]*s[3]<=e&&(r=[s[0],s[1]*s[2]*s[3]]);const o=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||o)if(t){const a=nc(s);let l=2,c=2;s.length&&([l,c]=sc(s)),i=a*(l/2)*(c/2),r=nx(i).map(u=>u*2)}else r=nx(i);return r}function zd(s){return s%2===0}function kf(s,t){if(s=s.slice(-2),t=t.slice(-2),Ae(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const e=s.slice(-1)[0],n=t.slice(-1)[0];if(e===n||zd(e)&&zd(n)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&zd(s[0])&&zd(t[0])}let $g,Dg;function jZ(s){if($g==null){const t=Oi(s);$g=t.getParameter(t.MAX_TEXTURE_SIZE)}return $g}function KZ(s){if(Dg==null){const t=Oi(s);Dg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Dg)}function YZ(s){if(s===0)return 0;let t;const e=Oi(s);return ai(e,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:ai(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function ai(s,t){return s.getExtension(t)!=null}function D_(s){try{if(Oi(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function ZZ(s){if(s===0)return!1;const t=Oi(s);if(s===1){if(!ai(t,"OES_texture_float"))return!1}else if(!ai(t,"EXT_color_buffer_float"))return!1;return Bx(t)}function JZ(s){if(s===0)return!1;const t=Oi(s);if(s===1){if(!ai(t,"OES_texture_float")||!ai(t,"WEBGL_color_buffer_float"))return!1}else{if(ai(t,"EXT_color_buffer_float"))return Bx(t);const n="EXT_color_buffer_half_float";if(ai(t,n)){const i=t.getExtension(n);return QZ(t,i)}return!1}return Bx(t)}function Bx(s){const t=Zb(s),e=s.createTexture();s.bindTexture(s.TEXTURE_2D,e);const n=1,i=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,n,i,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0);const o=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(e),s.deleteFramebuffer(r),o}function QZ(s,t){const e=Zb(s,t),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const i=1,r=1;s.texImage2D(s.TEXTURE_2D,0,e.internalFormatHalfFloat,i,r,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(o),a}function tJ(s){return s!==2?!1:Oi(s).fenceSync!=null}function Vh(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&F(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kt=ot();Kt.registerFlag("HAS_WEBGL",()=>Kt.getNumber("WEBGL_VERSION")>0);Kt.registerFlag("WEBGL_VERSION",()=>D_(2)?2:D_(1)?1:0);Kt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Kt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Kt.get("WEBGL_VERSION")===2);Kt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Kt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Kt.registerFlag("WEBGL_PACK",()=>Kt.getBool("HAS_WEBGL"));Kt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_CLIP",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_PACK_REDUCE",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_CONV_IM2COL",()=>Kt.getBool("WEBGL_PACK"));Kt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>jZ(Kt.getNumber("WEBGL_VERSION")));Kt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>KZ(Kt.getNumber("WEBGL_VERSION")));Kt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=Kt.getNumber("WEBGL_VERSION");return s===0?0:YZ(s)});Kt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Kt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!sI());Kt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ZZ(Kt.getNumber("WEBGL_VERSION")));Kt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Kt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Kt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Kt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>JZ(Kt.getNumber("WEBGL_VERSION")));Kt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>tJ(Kt.getNumber("WEBGL_VERSION")));Kt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Kt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Kt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});Kt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>sI()?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});Kt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Kt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Kt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Kt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Kt.registerFlag("WEBGL_EXP_CONV",()=>!1);Kt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Kt.getBool("IS_TEST"));Kt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Kt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Kt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(){let s,t,e,n,i,r,o,a,l,c;return ot().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",e="out",n="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=ot().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",e="varying",n="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:e,varyingFs:n,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(s,t,e="index"){const n=ee(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / ${i}`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * ${i}`:`index -= ${s[r]} * ${i}`;return`${o}; ${a};`}).join("")}function ym(s,t,e="index"){const n=ee(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / outShapeStrides[${r}]`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function eJ(s,t){const e=s.length,n=s.map(r=>`${t}[${r}]`),i=new Array(e-1);i[e-2]=n[e-1];for(let r=e-3;r>=0;--r)i[r]=`(${i[r+1]} * ${n[r+1]})`;return i}function nJ(s,t,e="index"){const n=s.map((r,o)=>o),i=eJ(n,t);return i.map((r,o)=>{const a=`int ${s[o]} = ${e} / ${i[o]}`,l=o===i.length-1?`int ${s[o+1]} = ${e} - ${s[o]} * ${i[o]}`:`index -= ${s[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function Jb(s){const t=ee(s).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Qb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const lk=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:ck}=NH;function sJ(s,t,e){const n=[];if(s.forEach(f=>{const p=ut(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:g}=ty(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=n.join(`
`),r=s.map(f=>iJ(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),o=t.texShape,a=ls(),l=aJ(a);let c,u,h=uJ(a);return t.isPacked?(c=rJ(t.logicalShape,o,e.enableShapeUniforms),u=cJ(a)):(c=oJ(t.logicalShape,o,e.enableShapeUniforms),u=lJ(a)),e.packedInputs&&(h+=pJ),[h,l,u,i,c,r,e.userCode].join(`
`)}function vc(s,t=!1){const e=s.shapeInfo.logicalShape;switch(e.length){case 0:return TJ(s,t);case 1:return MJ(s,t);case 2:return AJ(s,t);case 3:return RJ(s,t);case 4:return DJ(s,t);case 5:return FJ(s);case 6:return LJ(s);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function uk(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return IJ(s);case 1:return EJ(s,t);case 2:return kJ(s,t);case 3:return NJ(s,t);default:return $J(s,t)}}function iJ(s,t,e=!1,n){let i="";e?i+=uk(s,n):i+=vc(s,n);const r=s.shapeInfo.logicalShape,o=t.logicalShape;return r.length<=o.length&&(e?i+=PJ(s,t):i+=OJ(s,t)),i}function rJ(s,t,e){switch(s.length){case 0:return hk();case 1:return mJ(s,t,e);case 2:return SJ(s,t,e);case 3:return xJ(s,t,e);default:return bJ(s,t,e)}}function oJ(s,t,e){switch(s.length){case 0:return hk();case 1:return gJ(s,t,e);case 2:return CJ(s,t,e);case 3:return vJ(s,t,e);case 4:return yJ(s,t,e);case 5:return wJ(s,t);case 6:return _J(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function aJ(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function lJ(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function cJ(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function uJ(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${hJ}
    ${dJ}
    ${fJ}
  `}const hJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,fJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,pJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function hk(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function mJ(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function gJ(s,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function xJ(s,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[2]/2),r=i*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function vJ(s,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ym(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=za(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function bJ(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[s.length-1]/2),r=i*Math.ceil(s[s.length-2]/2);let o=r,a="",l="b, r, c";for(let c=2;c<s.length-1;c++)o*=s[s.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${s.length}(${l});
    }
  `}function yJ(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ym(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=za(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function wJ(s,t){const e=za(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function _J(s,t){const e=za(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function SJ(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ae(s,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const i=Math.ceil(s[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function CJ(s,t,e){return Ae(s,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function Ba(s){return`offset${s}`}function IJ(s){const t=s.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=ls();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function TJ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[i,r]=s.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const o=Ba(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${e}, uv);
    }
  `}function EJ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=s.shapeInfo.texShape,r=ls();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function MJ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${bc(s)}
      }
    `;const i=s.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Ba(e);return o===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function kJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=r[0],a=r[1],l=ls();if(r!=null&&Ae(e,r))return t?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function AJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&Ae(e,r)){if(t)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:o,keptDims:a}=go(e),l=o;if(l.length<e.length){const d=yc(s,l),f=["row","col"];return`
      ${vc(d,t)}
      float ${i}(int row, int col) {
        return ${i}(${wc(f,a)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${bc(s)}
      }
    `;const c=r[0],u=r[1],h=Ba(n);return u===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `:c===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${n}, uv);
  }
`}function NJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],p=yc(s,d),g=["b","row","col"];return`
        ${uk(p,t)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${wc(g,f)});
        }
      `}const a=ls();if(t)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(e[2]/2),h=u*Math.ceil(e[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function RJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],o=e[2],{newShape:a,keptDims:l}=go(e),c=a;if(c.length<e.length){const g=yc(s,c),m=["row","col","depth"];return`
        ${vc(g,t)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${wc(m,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${bc(s)}
      }
    `;const u=s.shapeInfo.texShape,h=u[0],d=u[1],f=s.shapeInfo.flatOffset;if(d===r&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===o&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;const p=Ba(n);return t?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function $J(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=ls();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${e}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,o=r.length,a=s.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)f=`int b${g}, `+f,d*=r[o-g-1],p=`b${g} * ${d} + `+p;return`
    vec4 ${n}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${e}, uv);
    }
  `}function DJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:c}=go(e);if(l.length<e.length){const v=yc(s,l),b=["row","col","depth","depth2"];return`
      ${vc(v,t)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${wc(b,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${bc(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,m=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=Ba(n);return t?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function FJ(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=t[4],r=t[3]*i,o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:c}=go(t);if(l.length<t.length){const g=yc(s,l),m=["row","col","depth","depth2","depth3"];return`
      ${vc(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${wc(m,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${bc(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===i&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=Ba(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function LJ(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:i,keptDims:r}=go(t);if(i.length<t.length){const m=yc(s,i),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${vc(m)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${wc(x,r)});
      }
    `}const o=t[5],a=t[4]*o,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${bc(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const g=Ba(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function bc(s){const t=s.name,e=ut(s.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function PJ(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=ck(s.shapeInfo.logicalShape,t.logicalShape),l=He(o),c=o-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(v=>`coords.${h[v+c]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=s.shapeInfo.logicalShape.map((v,b)=>`coords.${h[b+c]}`).join(", ");let f="return outputValue;";const g=ut(s.shapeInfo.logicalShape)===1,x=ut(t.logicalShape)===1;if(r===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const v=r-2,b=r-1;a.indexOf(v)>-1&&a.indexOf(b)>-1?f="return vec4(outputValue.x);":a.indexOf(v)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(b)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${n}(${d});
      ${f}
    }
  `}function OJ(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=t.texShape,o=s.shapeInfo.texShape,a=s.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!s.shapeInfo.isUniform&&a===l&&s.shapeInfo.flatOffset==null&&Ae(o,r))return`
      float ${i}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=He(l),u=ck(s.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${f[g+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((g,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${n}(${p});
    }
  `}function He(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function ty(s,t,e){const{newShape:n,keptDims:i}=go(t),r=t.length,o=s&&r===3&&t[0]===1,a=o?t.slice(1):n,l=!s&&r>1&&!Ae(t,e)&&n.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:i}}function yc(s,t){const e=JSON.parse(JSON.stringify(s));return e.shapeInfo.logicalShape=t,e}function wc(s,t){return t.map(e=>s[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(s,t,e,n){const i=e.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),o={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=sJ(i,o,t),l=RZ(s.gl,a),c=s.createProgram(l);return ot().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o},dk(s,t,c))}function dk(s,t,e){const n={},i={},r={},o=[];let a,l,c,u=null,h=null;h=s.getUniformLocation(e,"NAN",!1),ot().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(e,"INFINITY",!1));const d=!1;for(let f=0;f<t.variableNames.length;f++){const p=t.variableNames[f];n[p]=s.getUniformLocation(e,p,d),n[`offset${p}`]=s.getUniformLocation(e,`offset${p}`,d),t.enableShapeUniforms&&(i[`${p}Shape`]=s.getUniformLocation(e,`${p}Shape`,d),r[`${p}TexShape`]=s.getUniformLocation(e,`${p}TexShape`,d))}return t.enableShapeUniforms&&(a=s.getUniformLocation(e,"outShape",d),c=s.getUniformLocation(e,"outShapeStrides",d),l=s.getUniformLocation(e,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((f,p)=>{o[p]=s.getUniformLocation(e,f.name,d)}),{uniformLocations:n,customUniformLocations:o,infLoc:u,nanLoc:h,inShapesLocations:i,inTexShapesLocations:r,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function F_(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((e,n)=>{const i=e.logicalShape,r=t[n],o=r.shape;if(!Ae(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,l=r.isUniform?null:r.texData.texShape;if(!Ae(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function BJ(s,t,e,n,i){t.program.enableShapeUniforms||(F_(t.inShapeInfos,e),F_([t.outShapeInfo],[n]));const r=n.texData.texture,o=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):s.setOutputMatrixTexture(r.texture,o[0],o[1]),s.setProgram(t.webGLProgram),ot().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,c)=>{const u=t.program.variableNames[c],h=t.uniformLocations[u],d=t.uniformLocations[`offset${u}`],f=t.inShapesLocations[`${u}Shape`],p=t.inTexShapesLocations[`${u}TexShape`];if(f){const{uniformShape:g}=ty(t.program.packedInputs,l.shape,l.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(p&&s.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(ut(l.shape)<2)s.gl.uniform1f(h,l.uniformValues[0]);else{let g=l.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(h,g)}return}l.texData.slice!=null&&d!=null&&s.gl.uniform1i(d,l.texData.slice.flatOffset),s.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:s.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(a,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){const l=ee(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach((l,c)=>{const u=t.customUniformLocations[c],h=i[c];if(l.type==="float")s.gl.uniform1fv(u,h);else if(l.type==="vec2")s.gl.uniform2fv(u,h);else if(l.type==="vec3")s.gl.uniform3fv(u,h);else if(l.type==="vec4")s.gl.uniform4fv(u,h);else if(l.type==="int")s.gl.uniform1iv(u,h);else if(l.type==="ivec2")s.gl.uniform2iv(u,h);else if(l.type==="ivec3")s.gl.uniform3iv(u,h);else if(l.type==="ivec4")s.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),s.executeProgram()}function UJ(s,t,e){let n="";t.concat(e).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=ty(s.packedInputs,o.shape,l);let d="",f="",p="";if(u.length===1&&s.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!s.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!s.packedInputs){const w=ee(u);p=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=o.shape.length,m=u.length===2&&Ae(o.shape,l),x=ut(o.shape)===1,v=Xl(o.shape,e.shape),b=!s.packedInputs&&g===e.shape.length&&Ae(l,e.texData.texShape),y=s.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${b}_${c?h:""}_${u.length}_${x}_${v}_${m}_${d}_${f}_${p}_${y}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;n+=`${o.shape}_${l}_${a}`}});const i=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+i+`${ot().getNumber("WEBGL_VERSION")}`,r}function cs(s){return ot().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VJ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=pu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ym(["r","c","d"],t):za(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=pu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ym(["r","c","d"],t):za(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GJ{constructor(t){this.variableNames=["A"],this.outTexUsage=Ps.DOWNLOAD;const e=ls();this.outputShape=t,this.userCode=`
      ${lk}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ps.DOWNLOAD;const e=ls();this.outputShape=t,this.userCode=`
      ${lk}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ={R:0,G:1,B:2,A:3};class L_{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<n.length;a++){const l=n[a];o+=`
          if(offset == ${a}) {
            result = values[${qJ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Qb():Jb(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XJ{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let i="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Qb():Jb(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jJ(s){const t=ls(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return NZ(s,e)}function KJ(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return LZ(s,t)}function YJ(s){const t=new Uint16Array([0,1,2,2,1,3]);return PZ(s,t)}function Wh(s,t,e,n,i,r){zZ(t,e);const o=OZ(s),a=s.TEXTURE_2D;return Gt(s,()=>s.bindTexture(a,o)),Gt(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),Gt(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),Gt(s,()=>s.texParameteri(a,s.TEXTURE_MIN_FILTER,s.NEAREST)),Gt(s,()=>s.texParameteri(a,s.TEXTURE_MAG_FILTER,s.NEAREST)),ot().getNumber("WEBGL_VERSION")===1?Gt(s,()=>s.texImage2D(a,0,n,t,e,0,i,r,null)):Gt(s,()=>s.texStorage2D(a,1,n,t,e)),Gt(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function fk(s){return s.internalFormatFloat}function ZJ(s,t,e,n){const[i,r]=Uh(t,e);return Wh(s,i,r,fk(n),n.textureFormatFloat,s.FLOAT)}function pk(s){return s.internalFormatHalfFloat}function JJ(s,t,e,n){const[i,r]=Uh(t,e);return Wh(s,i,r,pk(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function mk(s){return s.downloadTextureFormat}function QJ(s,t,e,n){const[i,r]=Uh(t,e);return Wh(s,i,r,mk(n),s.RGBA,s.UNSIGNED_BYTE)}function gk(s){return s.internalFormatPackedFloat}function tQ(s,t,e,n){const[i,r]=xc(t,e);return Wh(s,i,r,gk(n),s.RGBA,s.FLOAT)}function xk(s){return s.internalFormatPackedHalfFloat}function eQ(s,t,e,n){const[i,r]=xc(t,e);return Wh(s,i,r,xk(n),s.RGBA,n.textureTypeHalfFloat)}function nQ(s,t,e){return Gt(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),R_(s,t,"clipSpacePos",e,3,20,0)&&R_(s,t,"uv",e,2,20,12)}function sQ(s,t,e,n,i,r){Gt(s,()=>s.bindTexture(s.TEXTURE_2D,t));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(e*n*4),a=s.UNSIGNED_BYTE,l=s.RGBA):(o=new Float32Array(e*n*4),a=s.FLOAT,l=r.internalFormatPackedFloat),o.set(i),ot().getNumber("WEBGL_VERSION")===2?Gt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e,n,s.RGBA,a,o)):Gt(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,e,n,0,s.RGBA,a,o)),Gt(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function iQ(s,t,e){Gt(s,()=>s.bindTexture(s.TEXTURE_2D,t)),e.data instanceof Uint8Array?ot().getNumber("WEBGL_VERSION")===2?Gt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e.width,e.height,s.RGBA,s.UNSIGNED_BYTE,e.data)):Gt(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,e.width,e.height,0,s.RGBA,s.UNSIGNED_BYTE,e.data)):ot().getNumber("WEBGL_VERSION")===2?Gt(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,e)):Gt(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,e)),Gt(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function rQ(s,t,e,n){const i=s.createBuffer();Gt(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,i));const a=4*4*t*e;return Gt(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,a,s.STREAM_READ)),Gt(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,0)),Gt(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),i}function oQ(s,t,e){const n=s,i=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,i),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),i}function aQ(s,t,e,n){const[i,r]=Uh(t,e),o=4,a=new Uint8Array(CZ(t*e,o));return Gt(s,()=>s.readPixels(0,0,i,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function lQ(s,t,e,n,i,r,o,a){const l=s,c=new Float32Array(IZ(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function cQ(s,t,e){const n=new Float32Array(t*e*4);return Gt(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fg{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=ot().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,wZ(e,t)):this.gl=Oi(e);let n="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),ot().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Ld(this.gl,r),ai(this.gl,o))this.textureHalfFloatExtension=Ld(this.gl,o);else if(ot().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ai(this.gl,i))this.colorBufferHalfFloatExtension=Ld(this.gl,i);else if(ot().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ai(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(ai(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=KJ(this.gl),this.indexBuffer=YJ(this.gl),this.framebuffer=BZ(this.gl),this.textureConfig=Zb(this.gl,this.textureHalfFloatExtension)}get debug(){return ot().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Gt(t,()=>t.finish()),Gt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Gt(t,()=>t.deleteFramebuffer(this.framebuffer)),Gt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Gt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Gt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),ZJ(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),JJ(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),QJ(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),iQ(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,i){this.throwIfDisposed(),sQ(this.gl,t,e,n,i,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),eQ(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),tQ(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&($_(this.gl,this.framebuffer),this.outputTexture=null),Gt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>aQ(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,i,r,o){return lQ(this.gl,t,e,n,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return oQ(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const i=rQ(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(ot().getBool("WEBGL_FENCE_API_ENABLED")){const i=t,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},e=r}else ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>cQ(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=jJ(e));const n=DZ(e);return Gt(e,()=>e.attachShader(n,this.vertexShader)),Gt(e,()=>e.attachShader(n,t)),FZ(e,n),this.debug&&Ng(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=nQ(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Gt(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Ng(this.gl,this.program),Gt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?VZ(this.gl,t,e):WZ(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Gt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),GZ(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[i,r]=xc(e,n);this.setOutputMatrixTextureDriver(t,i,r)}setOutputMatrixWriteRegion(t,e,n,i){this.setOutputMatrixWriteRegionDriver(n,t,i,e)}setOutputPackedMatrixWriteRegion(t,e,n,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Ng(this.gl,this.program),Pd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Gt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Gt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ld(this.gl,ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(i.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await b1(()=>this.disposed||this.isQueryAvailable(t,ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),i=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=uQ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ot().platform&&(n=ot().platform.setTimeoutCustom.bind(ot().platform)),b1(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Rg(this.gl,t,this.framebuffer),this.debug&&Pd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Rg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Pd(this.gl)):$_(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const i=this.gl;Rg(i,t,this.framebuffer),this.debug&&Pd(i),this.outputTexture=t,Gt(i,()=>i.viewport(0,0,e,n)),Gt(i,()=>i.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,i){this.throwIfDisposed(),Gt(this.gl,()=>this.gl.scissor(t,e,n,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function uQ(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:hQ,bincountImpl:vk,bincountReduceImpl:dQ,castImpl:fQ,ceilImpl:pQ,concatImpl:mQ,equalImpl:gQ,expImpl:xQ,expm1Impl:vQ,floorImpl:bQ,gatherNdImpl:yQ,gatherV2Impl:wQ,greaterImpl:_Q,greaterEqualImpl:SQ,lessImpl:CQ,lessEqualImpl:IQ,linSpaceImpl:TQ,logImpl:EQ,maxImpl:MQ,maximumImpl:kQ,minimumImpl:AQ,multiplyImpl:NQ,negImpl:RQ,notEqualImpl:$Q,prodImpl:DQ,raggedGatherImpl:FQ,raggedRangeImpl:LQ,raggedTensorToTensorImpl:PQ,rangeImpl:OQ,rsqrtImpl:zQ,scatterImpl:BQ,sigmoidImpl:UQ,simpleAbsImpl:bk,sliceImpl:VQ,sparseFillEmptyRowsImpl:WQ,sparseReshapeImpl:GQ,sparseSegmentReductionImpl:yk,sqrtImpl:HQ,stridedSliceImpl:qQ,stringNGramsImpl:XQ,stringSplitImpl:jQ,stringToHashBucketFastImpl:KQ,subImpl:YQ,tileImpl:ZQ,topKImpl:JQ,transposeImpl:ey,uniqueImpl:QQ}=rj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(s,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${s}.${e}`)}function is(s,t){return t===1?[s]:wk(s,t)}function ttt(s,t){if(s===1)return"rc";let e="";for(let n=0;n<s;n++)e+=t[n],n<s-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ett{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=cs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=is("rc",this.rank),n=He(this.rank),i=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let i=0;i<=1;i++){let r=`${n===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${t[t.length-1-o]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${i};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _k{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let n="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${ntt(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Qb():Jb(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}}function ntt(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?nJ(["r","c","d"],"inputShape"):za(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class stt{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const i=O_(e,n),r=z_(t,i,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=P_(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let a;return i===Bn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===Bn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===Bn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===Bn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===Bn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,n,i){if(this.freeTextures==null)return;const r=O_(n,i),o=z_(e,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=P_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=ot().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function itt(s,t){const e=s;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function P_(s,t,e,n,i){const r=rtt(t,n);let o;if(i){const[l,c]=xc(s[0],s[1]);o=l*c}else{const[l,c]=Uh(s[0],s[1]);o=l*c}const a=itt(e,r);return o*a}function rtt(s,t){switch(s){case Bn.PACKED_2X2_FLOAT32:return gk(t);case Bn.PACKED_2X2_FLOAT16:return xk(t);case Bn.UNPACKED_FLOAT32:return fk(t);case Bn.UNPACKED_FLOAT16:return pk(t);case Bn.PACKED_4X1_UNSIGNED_BYTE:return mk(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function ott(s){return ot().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?Bn.PACKED_2X2_FLOAT32:Bn.UNPACKED_FLOAT32:s?Bn.PACKED_2X2_FLOAT16:Bn.UNPACKED_FLOAT16}function O_(s,t){if(s===Ps.UPLOAD)return Bn.PACKED_2X2_FLOAT32;if(s===Ps.RENDER||s==null)return ott(t);if(s===Ps.DOWNLOAD||s===Ps.PIXELS)return Bn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function z_(s,t,e){return`${s[0]}_${s[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tr{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const gi="if (isnan(x)) return x;",att="return x;",B_="return abs(x);",ltt="return (x >= 0.0) ? x : (exp(x) - 1.0);",ctt=gi+`
  return (x < 0.0) ? 0.0 : x;
`,utt=gi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,dl="return x;",htt="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dtt="return x;",ftt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ptt=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mtt=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gtt="return 1.0 / (1.0 + exp(-1.0 * x));";class Qo{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xtt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);const e=t.length,n=is("rc",e),i=He(e),r=ttt(e,n),o=n.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vtt=lT,btt=1e-7,ytt=1e-4,Bd={};function wtt(s){return s in Bd||(Bd[s]={}),Bd[s]}const _tt=ot().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Stt=600;function Ctt(){return ot().global.screen==null?1024:ot().global.screen.height*ot().global.screen.width*window.devicePixelRatio*Stt/1024/1024}class wm extends l0{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ot().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Fg)e=t;else{const n=Oi(ot().getNumber("WEBGL_VERSION"),t);e=new Fg(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=Oi(ot().getNumber("WEBGL_VERSION"));e=new Fg(n),this.binaryCache=wtt(ot().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new stt(this.gpgpu),this.numMBBeforeWarning=Ctt(),this.texData=new SC(this,ji())}nextDataId(){return wm.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,i,r,o){const a=this.makeTensorInfo(e,n),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[i,r]},l.texShape=[i,r];const c=Od(e),u=new L_(c,!1,o),h=this.runWebGLProgram(u,[a],n,[[i,r]]);return h.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,n){if((ot().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ot().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:e,dtype:n,values:t,usage:Ps.UPLOAD,refCount:1}),i}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,n,i,r){if(ot().getBool("DEBUG")&&this.checkNumericalProblems(e),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:i,values:e,usage:Ps.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=e;if(o!=null){let d;l?d=new Qo(a,dl):d=new Tr(a,dl);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(n!=null)return this.convertAndCacheOnCPU(t);if(i==="string")return n;const c=this.activeTimers!=null;let u;c&&(u=Kn());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=Rr(d,f)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Kn()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const p=this.pendingRead.get(t);return new Promise(g=>p.push(g))}const e=this.texData.get(t),{values:n,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=e;if(r!=null){let p;l?p=new Qo(i,dl):p=new Tr(i,dl);const g=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:o}],o),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(n!=null)return this.convertAndCacheOnCPU(t);if(ot().getBool("DEBUG")&&!ot().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&ot().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&ot().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...Fd(i))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=p[0],m=p[1];h=Rr(g,m)}else if(c==null)h=this.getValuesFromTexture(t);else{const p=ut(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;Gt(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(p=>p(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ji().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const n=this.texData.get(t),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:c}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new Qo(r,dl):f=new Tr(r,dl);const p=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.readToGPU(p,e);return this.disposeIntermediateTensorInfo(p),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=ji().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>no(i));return ge(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ge(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const n=t[e];if(!kZ(n))throw ot().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:i}=this.texData.get(t),r=ut(e);if(ot().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Fd(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const o=ot().getBool("WEBGL_PACK")&&i===!0,a=o?Od(e):e,l=o?new HJ(a):new GJ(a),c=this.runWebGLProgram(l,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=Vl(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=Vl(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=$z(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Kn(),endMs:null}}endTimer(t){return ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Kn(),t)}async getQueryTime(t){if(ot().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(e,i,r,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=_tt){return ot().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&ut(n.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ls("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return vtt(t.shape,e)}packedUnaryOp(t,e,n){const i=new Qo(t.shape,e),r=this.compileAndRun(i,[t],n);return ji().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const i=bk(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,i)}if(ot().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,B_,t.dtype);const e=new Tr(t.shape,B_),n=this.compileAndRun(e,[t]);return ji().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Iu(n[0])){const r=n.map(o=>Jr(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return this.texData.get(i).usage=null,{dataId:i,shape:t,dtype:e}}makeOutput(t,e,n){return ji().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new xtt(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new ett(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[nc(t.shape),...sc(t.shape)],i={dtype:t.dtype,shape:n,dataId:t.dataId},r=[nc(e),...sc(e)],o=new _k(r,n),a=!0,l=[n],c=this.runWebGLProgram(o,[i],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:i,shape:r,dtype:o}=n;if(e!=null){const d=ut(r),f=e[0]*e[1]*4;F(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Od(r);let l;i?l=new WJ(a):l=new VJ(a);const c=!0,u=[e!=null?e:Fd(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],o,u,c,e);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(t,e,n,i,r=!1,o){const a=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===pu.DENSE){const x=o!=null?o:Fd(t.outputShape);l.texShape=x.map(v=>v*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),ut(a.shape)===0)return l.values=Gn(a.dtype,0),a;const c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let v=this.texData.get(x.dataId);if(v.texture==null){if(!t.packedInputs&&ut(x.shape)<=ot().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:v.values};t.packedInputs&&(v.isPacked=!0,v.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!v.isPacked!=!!t.packedInputs)x=v.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),v=this.texData.get(x.dataId);else if(v.isPacked&&!kf(v.shape,x.shape)){const b=x,y=x.shape;x.shape=v.shape,x=this.packedReshape(x,y),c.push(x),v=this.texData.get(x.dataId),b.shape=y}return{shape:x.shape,texData:v,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=UJ(t,u,h),f=this.getAndSaveBinary(d,()=>zJ(this.gpgpu,t,u,h)),p=this.activeTimers!=null;let g;p&&(g=this.startTimer()),ot().get("ENGINE_COMPILE_ONLY")||BJ(this.gpgpu,f,u,h,i),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),p&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)}));const m=ot().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const x=Kn();x-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!ot().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,n,i,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,i,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ot().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=st(()=>{if(!ot().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=ot().getBool("DEBUG");ot().set("DEBUG",!1);const e=this.abs(ae(1e-8)).dataSync()[0];if(ot().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?btt:ytt}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:i,values:r,texture:o,usage:a,isPacked:l}=e;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Kn());let h=e.texShape;if(h==null&&(h=XZ(n,l),e.texShape=h),r!=null){const d=Od(n);let f,p=h[1],g=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([p,g]=xc(h[0],h[1])),l?f=new XJ(d,m):f=new L_(d,m);const x=m?[g,p]:h,v=this.makeTensorInfo(x,i),b=this.texData.get(v.dataId);m?b.usage=Ps.PIXELS:b.usage=Ps.UPLOAD,b.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),p,g,r);const y=[[g,p]],w=!0,S=this.runWebGLProgram(f,[v],i,y,w),C=this.texData.get(S.dataId);e.texShape=C.texShape,e.isPacked=C.isPacked,e.usage=C.usage,ot().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(e.texture=C.texture,e.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(v),c&&(this.uploadWaitMs+=Kn()-u)}else{const d=this.acquireTexture(h,a,i,l);e.texture=d}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:i}=n;return this.releaseGPUData(t),e!=null&&(n.values=Itt(e,i)),n.values}acquireTexture(t,e,n,i){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,i)}computeBytes(t,e){return t[0]*t[1]*sx(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(i=>{try{this.checkCompletion_(e),i(!0)}catch(r){throw r}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await dT(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(ak(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:i,nanLoc:r,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=dk(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=i,t.nanLoc=r,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}createTensorFromTexture(t,e,n){const{texture:i,height:r,width:o,channels:a}=t,l=ji().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,e,n,r,o,a);return ji().makeTensorFromDataId(c,e,n,l)}}wm.nextDataId=0;function Itt(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<e.length;++n)e[n]=Math.round(s[n]);return e}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */iI()&&xI("webgl",()=>new wm,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ny=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ic{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=he(e,n),this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gh=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Hh{constructor(t,e,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=he(e,n);const r=this.outputShape.length;this.enableShapeUniforms=cs(r);let o="";if(i)if(r===0||ut(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${He(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=is("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Ttt={kernelName:Xu,backendName:"webgl",kernelFunc:As};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function To(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.makeTensorInfo(n.shape,"complex64"),o=e.texData.get(r.dataId),a=As({inputs:{x:n},backend:e}),l=As({inputs:{x:i},backend:e});return o.complexTensorInfos={real:a,imag:l},r}const Ett={kernelName:b0,backendName:"webgl",kernelFunc:To};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk="return (a < 0.) ? b * a : a;",Ck=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Mtt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n,o=e.makeTensorInfo([],"float32",xo(r,"float32")),a=ot().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hh(Ck,i.shape,o.shape):new ic(Sk,i.shape,o.shape),l=e.runWebGLProgram(a,[i,o],"float32");return e.disposeIntermediateTensorInfo(o),l}const ktt={kernelName:dp,backendName:"webgl",kernelFunc:Mtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik="return (a < 0.) ? b * a : a;",Tk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Att(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t,r=ot().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hh(Tk,n.shape,i.shape):new ic(Ik,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],"float32")}const Ntt={kernelName:Np,backendName:"webgl",kernelFunc:Att};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c="if (isnan(x)) return x;";function Te({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const h=a.texData.get(o.dataId),d=e(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=ot().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new Qo(o.shape,t):u=new Tr(o.shape,s),a.runWebGLProgram(u,[o],l)}}function jn({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(n&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[m,x]=[[p.complexTensorInfos.real,g.complexTensorInfos.real],[p.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(b=>{const[y,w]=b,S={dataId:y.dataId,dtype:y.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:c.shape},_=new ic(s,l.shape,c.shape);return u.runWebGLProgram(_,[S,C],Ts(y.dtype,w.dtype))}),v=To({inputs:{real:m,imag:x},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(x),v}const h=r||Ts(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const p=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,m=l.dtype==="string"?Ca(p):p,x=l.dtype==="string"?Ca(g):g,[v,b]=i(l.shape,c.shape,m,x,h),y=u.makeTensorInfo(b,h),w=u.texData.get(y.dataId);return w.values=v,y}const d=ot().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return d?f=new Hh(t,l.shape,c.shape,e):f=new ic(s,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function mu(s,t=!1){if(s==="linear")return t?dtt:att;if(s==="relu")return t?ptt:ctt;if(s==="elu")return t?ftt:ltt;if(s==="relu6")return t?mtt:utt;if(s==="prelu")return t?Tk:Ik;if(s==="leakyrelu")return t?Ck:Sk;if(s==="sigmoid")return t?gtt:htt;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ek{constructor(t,e,n,i=!1,r=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=cs(this.outputShape.length);const u=i?t[1]:t[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",x="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const v=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",y="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${b};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${g[0]});
          result += (${p[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${v}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class V_{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=he(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_="return a * b;";function sy(s){const{inputs:t,backend:e}=s,{a:n,b:i}=t,r=Ts(n.dtype,i.dtype);if(n.dtype==="complex64"){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),c=new V_(U_.REAL,n.shape,i.shape),u=new V_(U_.IMAG,n.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=To({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}if(e.shouldExecuteOnCPU([n,i])){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),[c,u]=NQ(n.shape,i.shape,a.values,l.values,r),h=e.makeTensorInfo(u,r),d=e.texData.get(h.dataId);return d.values=c,h}let o;return ot().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Hh(W_,n.shape,i.shape):o=new ic(W_,n.shape,i.shape),e.runWebGLProgram(o,[n,i],r)}const Rtt={kernelName:nh,backendName:"webgl",kernelFunc:sy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $tt(s,t,e){const n=[nc(s.shape),...sc(s.shape)],i={dtype:s.dtype,shape:n,dataId:s.dataId},r=[nc(t),...sc(t)],o=new _k(r,n),a=!0,l=[n],c=e.runWebGLProgram(o,[i],s.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=e,a=ut(i.shape),l=IC(r,a),c=ut(l);F(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(i.dataId);return u.isPacked&&!kf(i.shape,l)&&!(u.texture!==null&&kf(u.shape,l))?$tt(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const Dtt={kernelName:$p,backendName:"webgl",kernelFunc:kt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G_{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];const a=Math.floor(n/4)*4,l=n%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Wl(h)?h.toPrecision(2):h}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ftt{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(n/4)*4,h=n%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ltt(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:s[1],n=im(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Ua(s,t,e,n){const i=Ltt(s.shape);let r=s;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:c}=i[o];let u,h;e==="mean"?u=o===0?new G_({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},a):new G_({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c}):u=new Ftt({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},e),h=r,r=n.runWebGLProgram(u,[r],t),h.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ptt{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const i=He(this.rank),r=Ott(e);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function Ott(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let i=0;i<s.length;i++)n[s[i]]=e[i];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ztt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=He(this.rank),r=wk("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=r[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _m(s,t,e){const n=ot().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ztt(s.shape,t):new Ptt(s.shape,t);return e.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Btt(s,t,e,n){const i=t,r=s.shape.length,o=xe(i,s.shape);let a=o;const l=nn(a,r),c=l!=null;let u=s;c&&(u=_m(s,l,n),a=hn(a.length,r)),Xn("sum",a,r);const[h,d]=Ln(u.shape,a);let f=h;e&&(f=un(h,o));const p=ut(d),m=ut(s.shape)/p,x=kt({inputs:{x:u},attrs:{shape:[m,p]},backend:n}),v=rv(s.dtype),b=Ua(x,v,"sum",n),y=kt({inputs:{x:b},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),c&&n.disposeIntermediateTensorInfo(u),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;return Btt(i,r,o,e)}const Utt={kernelName:zp,backendName:"webgl",kernelFunc:Sm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{perm:r}=n,o=e,a=i.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=ey(h,i.shape,i.dtype,r,l);c=o.makeTensorInfo(l,i.dtype);const f=o.texData.get(c.dataId);f.values=d}else c=_m(i,r,o);return c}const Vtt={kernelName:kl,backendName:"webgl",kernelFunc:as};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk=1e3;function Af({a:s,b:t,transposeA:e,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=s.shape.length,u=t.shape.length,h=e?s.shape[c-2]:s.shape[c-1],d=n?t.shape[u-1]:t.shape[u-2],f=e?s.shape[c-1]:s.shape[c-2],p=n?t.shape[u-2]:t.shape[u-1],g=s.shape.slice(0,-2),m=t.shape.slice(0,-2),x=ut(g),v=ut(m),y=he(s.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,p]);F(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);const w=e?[x,h,f]:[x,f,h],S=n?[v,p,d]:[v,d,p],C=kt({inputs:{x:s},backend:i,attrs:{shape:w}}),_=kt({inputs:{x:t},backend:i,attrs:{shape:S}}),I=[C,_],T=Math.max(x,v),N=e?C.shape[1]:C.shape[2],O=r!=null,M=o!=null,E=l==="leakyrelu",A=l!=null?mu(l,!0):null,R=O||M||E||A!=null;let V;if((f===1||p===1)&&N>Mk&&R===!1){let $=C,D=_;e&&($=as({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),I.push($)),n&&(D=as({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),I.push(D));const W=p!==1,G=p===1;let X=$;W&&(X=kt({inputs:{x:$},backend:i,attrs:{shape:[T,N,1]}}),I.push(X));const it=p===1?2:1;let at=D;G&&(at=kt({inputs:{x:D},backend:i,attrs:{shape:[T,1,N]}}),I.push(at));const J=sy({inputs:{a:X,b:at},backend:i});V=Sm({inputs:{x:J},backend:i,attrs:{axis:it,keepDims:!0}}),I.push(J)}else{const $=Ts(s.dtype,t.dtype),D=new Ek(w,S,[T,f,p],e,n,O,A,M,E),W=[C,_];if(r!=null&&W.push(r),M&&W.push(o),E){const G=i.makeTensorInfo([],"float32",xo(a,"float32"));W.push(G),I.push(G)}V=i.runWebGLProgram(D,W,$)}const P=kt({inputs:{x:V},backend:i,attrs:{shape:y}});I.push(V);for(const $ of I)i.disposeIntermediateTensorInfo($);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wtt(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;return Af({a:i,b:r,transposeA:l,transposeB:c,backend:e,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const Gtt={kernelName:sf,backendName:"webgl",kernelFunc:Wtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_="return abs(x);";function Htt(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=e.texData.get(n.dataId),o=bk(r.values);return e.makeTensorInfo(n.shape,n.dtype,o)}let i;return ot().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Qo(n.shape,H_):i=new Tr(n.shape,H_),e.runWebGLProgram(i,[n],n.dtype)}const qtt={kernelName:qf,backendName:"webgl",kernelFunc:Htt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xtt=gi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,jtt=Te({opSnippet:Xtt}),Ktt={kernelName:Eu,backendName:"webgl",kernelFunc:jtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ytt=gi+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Ztt=Te({opSnippet:Ytt}),Jtt={kernelName:Mu,backendName:"webgl",kernelFunc:Ztt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_="return a + b;",Qtt=jn({opSnippet:q_,packedOpSnippet:q_,supportsComplex:!0,cpuKernelImpl:hQ}),tet={kernelName:uc,backendName:"webgl",kernelFunc:Qtt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eet{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class net{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yd(s){const{inputs:t,backend:e}=s,n=t;if(n.length===1)return As({inputs:{x:n[0]},backend:e});if(n.length>ot().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),c=Yd({inputs:n.slice(0,l),backend:e}),u=Yd({inputs:n.slice(l),backend:e});return Yd({inputs:[c,u],backend:e})}const i=n.map(l=>l.dtype).reduce((l,c)=>Ts(l,c)),r=n.map(l=>l.shape),a=ot().getBool("WEBGL_PACK")?new net(n[0].shape,r):new eet(n[0].shape,r);return e.runWebGLProgram(a,n,i)}const set={kernelName:f0,backendName:"webgl",kernelFunc:Yd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=xe(r,i.shape);let c=l;const u=nn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=hn(c.length,a)),Xn("all",c,a);const[d,f]=Ln(h.shape,c),p=ut(f),g=kt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Ua(g,g.dtype,"all",e);let x;if(o){const v=un(d,l);x=kt({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=kt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const oet={kernelName:p0,backendName:"webgl",kernelFunc:iet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=xe(r,i.shape);let c=l;const u=nn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=hn(c.length,a)),Xn("any",c,a);const[d,f]=Ln(h.shape,c),p=ut(f),g=kt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Ua(g,g.dtype,"any",e);let x;if(o){const v=un(d,l);x=kt({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=kt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const cet={kernelName:m0,backendName:"webgl",kernelFunc:aet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uet{constructor(t,e,n){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=e==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class het{constructor(t,e,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=He(l),u=is("coords",l);let h,d;if(o===1){d=l+1;const _=He(d);h=`
        ${_} sourceLocR = ${_}(${u.join()}, 0);
        ++${u[l-1]};
        ${_} sourceLocG = ${_}(${u.join()}, 0);
        ++${u[l-2]};
        ${_} sourceLocA = ${_}(${u.join()}, 0);
        --${u[l-1]};
        ${_} sourceLocB = ${_}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],g=f.map(_=>"int "+_),m=is("sourceLocR",d-1).concat("inIdx.r"),x=is("sourceLocG",d-1).concat("inIdx.g"),v=is("sourceLocB",d-1).concat("inIdx.b"),b=is("sourceLocA",d-1).concat("inIdx.a"),y=n==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${b.join()})));`,S=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${v.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,C=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(s,t,e,n=null){let i=t.shape[0],r=t.shape[1];n!=null&&(i=n.shape[0],r=n.shape[1]);const o=im(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new uet(a,e,n==null),c=[t];n!=null&&c.push(n);const u=s.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=kk(s,t,e,u);return s.disposeIntermediateTensorInfo(u),h}function Ak(s,t,e,n=null){const i=n!=null?n.shape:t.shape,r=i[i.length-1],o=im(r),a=new het(i,o,e,n==null),l=n==null?[t]:[t,n],c=s.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=Ak(s,t,e,c);return s.disposeIntermediateTensorInfo(c),u}return c}function Nk(s,t,e,n){const i=[e];if(Xn("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,t.shape.length),!ot().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],o=s.texData.get(t.dataId),a=o!==null&&o.isPacked;let l=t;a&&(l=s.unpackTensor(t),r.push(l));const[c,u]=Ln(l.shape,i),h=ut(u),d=kt({inputs:{x:l},backend:s,attrs:{shape:[-1,h]}});r.push(d);const f=kk(s,d,n);r.push(f);const p=kt({inputs:{x:f},backend:s,attrs:{shape:c}});return r.forEach(g=>s.disposeIntermediateTensorInfo(g)),p}return Ak(s,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function det(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=xe(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=hn(o.length,l.shape.length)),Xn("argMax",[o[0]],l.shape.length);const u=Nk(e,l,o[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const fet={kernelName:Xf,backendName:"webgl",kernelFunc:det};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=xe(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=hn(o.length,l.shape.length)),Xn("argMin",[o[0]],l.shape.length);const u=Nk(e,l,o[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const met={kernelName:jf,backendName:"webgl",kernelFunc:pet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const get=gi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,xet=Te({opSnippet:get}),vet={kernelName:ku,backendName:"webgl",kernelFunc:xet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bet=gi+"return log(x + sqrt(x * x + 1.0));",yet=Te({opSnippet:bet}),wet={kernelName:Au,backendName:"webgl",kernelFunc:yet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _et=gi+`
  return atan(x);
`,Cet=Te({opSnippet:_et}),Iet={kernelName:Nu,backendName:"webgl",kernelFunc:Cet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tet=ny+`
  return atan(a, b);
`,Eet=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Gh+`
  return result;
`,Met=jn({opSnippet:Tet,packedOpSnippet:Eet}),ket={kernelName:$u,backendName:"webgl",kernelFunc:Met};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aet=gi+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Net=Te({opSnippet:Aet}),Ret={kernelName:Ru,backendName:"webgl",kernelFunc:Net};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gu{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const g=e==="avg",m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let v="0.0";if(g||(v="-1.0 / 1e-20"),n){const _=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?m:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(y="avgValue / count");const w=Math.floor(o/4)*4,S=o%4,C=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${w};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${y});
      }
    `}}class iy{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,p=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,x=t.padInfo.top,v=t.padInfo.left;this.outputShape=t.outShape;const b=e==="avg";let y="0.0";if(b||(y="-1.0 / 1e-20"),n){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${m}, ${x}, ${v});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let S=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(S="avgValue / count");const C=Math.floor(o/4)*4,_=o%4,I=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${m}, ${x}, ${v});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${I}
            }

            int xC = xCCorner + ${C};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${I}
            }
          }
          setOutput(${S});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $et(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Vh(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(Qn(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=pi(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Ae(u.inShape,u.outShape))return As({inputs:{x:i},backend:e});const h=new gu(u,"avg",!1);return e.runWebGLProgram(h,[i],"float32")}const Det={kernelName:Kf,backendName:"webgl",kernelFunc:$et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n,u=[1,1,1],h=Dr(i.shape,r,o,u,a,l,c),d=new iy(h,"avg",!1);return e.runWebGLProgram(d,[i],"float32")}const Let={kernelName:Yf,backendName:"webgl",kernelFunc:Fet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pet{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Oet{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=h-1-t.padInfo.front,g=d-1-t.padInfo.top,m=f-1-t.padInfo.left,x=1/(e*n*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${g}, ${m});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zet(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=Dr(o.shape,a,l,h,c,u),f=new Oet(d);return e.runWebGLProgram(f,[i],o.dtype)}const Bet={kernelName:x0,backendName:"webgl",kernelFunc:zet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uet(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Vh([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=pi(o.shape,a,l,1,c),h=new Pet(u);return e.runWebGLProgram(h,[i],o.dtype)}const Vet={kernelName:g0,backendName:"webgl",kernelFunc:Uet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wet(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;return Af({a:i,b:r,transposeA:o,transposeB:a,backend:e})}const Get={kernelName:Zf,backendName:"webgl",kernelFunc:Wet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Het{constructor(t,e,n,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],he(t,e),he(t,n);let a="0.0";i!=null&&(he(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(he(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qet{constructor(t,e,n,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],he(t,e),he(t,n);let a="vec4(0.0)";i!=null&&(he(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(he(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xet=({inputs:s,backend:t,attrs:e})=>{const{x:n,mean:i,variance:r,offset:o,scale:a}=s;F(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[n,i,r];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=ot().getBool("WEBGL_PACK_NORMALIZATION")?new qet(n.shape,i.shape,r.shape,u,h,l):new Het(n.shape,i.shape,r.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},jet={kernelName:cp,backendName:"webgl",kernelFunc:Xet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ket{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=He(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Yet(this.rank);let i;const r=t.map((o,a)=>`sourceLoc.${Ux[a]} = start[${a}] + coords.${Ux[a]};`);i=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${n}));
      }
    `}}const Ux=["x","y","z","w","u","v"];function Yet(s){if(s===1)return"sourceLoc";if(s<=6)return Ux.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zet{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=He(this.rank),n=is("coords",this.rank),i=is("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${i[h]} = ${n[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jet(s,t,e,n){const i=n.texData.get(s.dataId),r=n.makeTensorInfo(e,s.dtype),o=n.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=e,o.dtype=s.dtype;let a=mv(t,ee(s.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||s.dataId};const l=n.dataRefCount.get(o.slice.origDataId)||1;return n.dataRefCount.set(o.slice.origDataId,l+1),r}function Sc(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n,[a,l]=Yp(i,r,o);if(dv(i,a,l),ut(l)===0)return e.makeTensorInfo(l,i.dtype,[]);if(e.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=e.texData.get(i.dataId),d=VQ(h.values,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=e.texData.get(i.dataId),u=pv(i.shape,a,l);if(c||!u){const h=ot().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zet(l):new Ket(l),d=[a];return e.runWebGLProgram(h,[i],i.dtype,d)}return e.uploadToGPU(i.dataId),Jet(i,a,l,e)}const Qet={kernelName:Op,backendName:"webgl",kernelFunc:Sc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tnt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;F(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((v,b)=>v*b),l=kh(i.shape,r,a),c=Ah(l.length,r.length),u=Nh(i.shape,r,a),h=eb(o,r.length),d=nb(u,o,r.length),f=[],p=kt({inputs:{x:i},backend:e,attrs:{shape:l}}),g=as({inputs:{x:p},backend:e,attrs:{perm:c}}),m=kt({inputs:{x:g},backend:e,attrs:{shape:u}}),x=Sc({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return f.push(p),f.push(g),f.push(m),f.forEach(v=>e.disposeIntermediateTensorInfo(v)),x},ent={kernelName:Jf,backendName:"webgl",kernelFunc:tnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.readSync(i.dataId),l=e.readSync(r.dataId),c=vk(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const snt={kernelName:v0,backendName:"webgl",kernelFunc:nnt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function int(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.readSync(n.dataId),o=e.readSync(i.dataId),a=he(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const rnt={kernelName:RC,backendName:"webgl",kernelFunc:int};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ont="return float(a != b);",Rk=jn({opSnippet:ont,cpuKernelImpl:$Q,dtype:"bool"}),ant={kernelName:Tp,backendName:"webgl",kernelFunc:Rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qh(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return As({inputs:{x:i.complexTensorInfos.real},backend:e})}const lnt={kernelName:V0,backendName:"webgl",kernelFunc:qh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cnt="return float(int(x));";function unt(s,t){const e=new Tr(s.shape,cnt),n=t.runWebGLProgram(e,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vx(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return As({inputs:{x:i},backend:e});const o=Rn(i.shape),a=Vx({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),l=To({inputs:{real:a,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=qh({inputs:{input:i},backend:e}),a=Vx({inputs:{x:o},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(o),a}if(!TC(i.dtype,r)){const o=As({inputs:{x:i},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(e.shouldExecuteOnCPU([i])){const o=e.texData.get(i.dataId).values,[a,l,c]=fQ(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}if(r==="int32")return unt(i,e);if(r==="bool"){const o=e.makeTensorInfo([],"bool",Gn("bool",1)),l=Rk({inputs:{a:i,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const hnt={kernelName:Du,backendName:"webgl",kernelFunc:Vx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_="return ceil(x);",dnt=Te({opSnippet:X_,packedOpSnippet:X_,cpuKernelImpl:pQ}),fnt={kernelName:Fu,backendName:"webgl",kernelFunc:dnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pnt{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mnt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{clipValueMin:r,clipValueMax:o}=n;let a;ot().getBool("WEBGL_PACK_CLIP")?a=new mnt(i.shape):a=new pnt(i.shape);const l=[[r],[o]];return e.runWebGLProgram(a,[i],i.dtype,l)}const xnt={kernelName:Lu,backendName:"webgl",kernelFunc:gnt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vnt{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function bnt(s){const{inputs:t,backend:e}=s,{x:n}=t,i=e.texData.get(n.dataId),r=new vnt(n.shape),o=[j_(n,i.complexTensorInfos.real),j_(n,i.complexTensorInfos.imag)];return e.runWebGLProgram(r,o,o[0].dtype)}const ynt={kernelName:Qf,backendName:"webgl",kernelFunc:bnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wnt{constructor(t){this.outputShape=[],this.outputShape=sr(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const a=e[o-1];n.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=e.length,r=e[e.length-1];n.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _nt{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=sr(t,e);const n=this.outputShape,i=n.length,r=He(i),o=is("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const c=a[e],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${Ud(a,c,m)}),
            vec2(${Ud(u,c,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${Ud(a,c,p)}),
          vec2(${Ud(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${n[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${n[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${n[i-2]} &&
            ${o[i-1]} < ${n[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Ud(s,t,e){const n=s.indexOf(t);return s.map((r,o)=>o===n?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cm(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return As({inputs:{x:i.complexTensorInfos.imag},backend:e})}const Snt={kernelName:D0,backendName:"webgl",kernelFunc:Cm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hc(s,t,e){const n=s[0].dtype;if(n==="complex64"){const h=s.map(m=>qh({inputs:{input:m},backend:e})),d=s.map(m=>Cm({inputs:{input:m},backend:e})),f=Hc(h,t,e),p=Hc(d,t,e),g=To({inputs:{real:f,imag:p},backend:e});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),d.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}let i=e.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const h=s.map(v=>{const y=[-1,ut(v.shape.slice(t))];return kt({inputs:{x:v},backend:e,attrs:{shape:y}})}),d=h.map(v=>({vals:e.readSync(v.dataId),shape:v.shape})),f=sr(h.map(v=>v.shape),1),p=h[0].shape[0]===1,g=mQ(d,f,n,p),m=sr(s.map(v=>v.shape),t),x=e.makeTensorInfo(m,n,g);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const r=ot().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>r){const h=[];for(let f=0;f<s.length;f+=r){const p=s.slice(f,f+r);h.push(Hc(p,t,e))}const d=Hc(h,t,e);for(const f of h)e.disposeIntermediateTensorInfo(f);return d}if(ot().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new _nt(s.map(d=>d.shape),t);return e.runWebGLProgram(h,s,n)}const{tensors2D:o,outShape:a}=Cnt(s,t,e),l=new wnt(o.map(h=>h.shape)),c=e.runWebGLProgram(l,o,n);o.forEach(h=>e.disposeIntermediateTensorInfo(h));const u=kt({inputs:{x:c},attrs:{shape:a},backend:e});return e.disposeIntermediateTensorInfo(c),u}function Cnt(s,t,e){const n=sr(s.map(r=>r.shape),t);return{tensors2D:s.map(r=>kt({inputs:{x:r},attrs:{shape:[-1,ut(r.shape.slice(t))]},backend:e})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=xe(i,t[0].shape)[0],o=t.map(c=>c.shape);Jv(o,r);const a=sr(t.map(c=>c.shape),r);if(ut(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>ut(c.shape)>0);return l.length===1?As({inputs:{x:l[0]},backend:e}):Hc(l,r,e)}const Int={kernelName:tp,backendName:"webgl",kernelFunc:$k};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,m=t.dataFormat==="channelsLast",x=m?1:2,v=m?2:3,b=m?3:1;let y="",w="";n&&(i?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");const S=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${v}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${w}
        setOutput(result);
      }
    `}}class Tnt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,i=t.padInfo.left,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const x=m*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const v=o%2===0?c0(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${v};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):v===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${v};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";n&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ent{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);const{dataFormat:n}=e,i=ls(),r=n==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(s,t){const e=s.length;return e>=3?t?[...s.slice(0,-3),s[e-3]*s[e-2],s[e-1]]:[...s.slice(0,-3),s[e-3],s[e-2]*s[e-1]]:!t&&e===1&&s[0]>1?[s[0],1]:null}function Lk({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=s.shape,c=n.texData.get(s.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,f=e.dataFormat==="channelsLast",p=!1,g=!1;let m;const x=[];if(r!=null){const y=Nf(r.shape,f);y!=null&&(r=kt({inputs:{x:r},backend:n,attrs:{shape:y}}),x.push(r))}if(i!=null){const y=Nf(i.shape,f);y!=null&&(i=kt({inputs:{x:i},backend:n,attrs:{shape:y}}),x.push(i))}if(!((h===1||d===1)&&u>Mk)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&Ae(c.shape.slice(-3),l.slice(-3))){const y=l[0]*l[1]*(l[2]+1),w={dataId:s.dataId,shape:[1,y,e.inChannels],dtype:s.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,F(kf(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const C=kt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(C);const _=Af({a:w,b:C,backend:n,transposeA:p,transposeB:g,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),I=n.texData.get(_.dataId);F(I.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,I.shape=e.outShape,m=As({inputs:{x:_},backend:n}),m.shape=e.outShape,x.push(_)}else{const y=e.outHeight*e.outWidth,w=kt({inputs:{x:s},backend:n,attrs:{shape:f?[e.batchSize,y,e.inChannels]:[e.batchSize,e.inChannels,y]}}),S=kt({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),C=Af({a:f?w:S,b:f?S:w,transposeA:!f,transposeB:g,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});m=kt({inputs:{x:C},backend:n,attrs:{shape:e.outShape}}),x.push(w),x.push(S),x.push(C)}for(const y of x)n.disposeIntermediateTensorInfo(y);return m}function Pk({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=e,p=f==="channelsLast",g=l*c*u,m=d*h,x=[e.batchSize,g,m],v=!0,b=!1,y=[];if(r!=null){const P=Nf(r.shape,p);P!=null&&(r=kt({inputs:{x:r},backend:n,attrs:{shape:P}}),y.push(r))}if(i!=null){const P=Nf(i.shape,p);P!=null&&(i=kt({inputs:{x:i},backend:n,attrs:{shape:P}}),y.push(i))}const w=kt({inputs:{x:t},backend:n,attrs:{shape:[1,g,ut(t.shape)/g]}});y.push(w);const S=new Ent(x,e),C=[s.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],_=n.runWebGLProgram(S,[s],"float32",C),I=kt({inputs:{x:_},backend:n,attrs:{shape:x}});y.push(_),y.push(I);const T=i!=null,N=r!=null,O=a==="leakyrelu",M=a?mu(a,!0):null,E=new Ek(p?I.shape:w.shape,p?w.shape:I.shape,p?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],v,b,T,M,N,O),A=p?[I,w]:[w,I];if(i&&A.push(i),N&&A.push(r),O){const P=n.makeTensorInfo([],"float32",xo(o,"float32"));A.push(P),y.push(P)}const R=n.runWebGLProgram(E,A,"float32"),V=kt({inputs:{x:R},backend:n,attrs:{shape:e.outShape}});y.push(R);for(const P of y)n.disposeIntermediateTensorInfo(P);return V}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n,h=Fr(l),d=qn(i.shape,r.shape,o,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=Lk({x:i,filter:r,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&ot().getBool("WEBGL_EXP_CONV")){const g=new Fk(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=e.runWebGLProgram(g,[i,r],"float32",m)}else if(ot().getBool("WEBGL_CONV_IM2COL"))f=Pk({x:i,filter:r,convInfo:d,backend:e});else{const g=new Dk(d);f=e.runWebGLProgram(g,[i,r],"float32")}const p=kt({inputs:{x:f},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(f),p}const knt={kernelName:ep,backendName:"webgl",kernelFunc:Mnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ant{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Nnt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Rnt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class $nt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=i-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n,h=Fr(l),d=qn(i.shape,u,o,1,a,c,!1,h),f=new Ant(d);return e.runWebGLProgram(f,[i,r],"float32")}const Fnt={kernelName:y0,backendName:"webgl",kernelFunc:Dnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lnt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n,h=Fr(c),d=qn(o,r.shape,a,1,l,u,!1,h),f=new Nnt(d);return e.runWebGLProgram(f,[i,r],"float32")}const Pnt={kernelName:np,backendName:"webgl",kernelFunc:Lnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ont(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=vo(i.shape,r.shape,o,l,a),u=new Tnt(c);return e.runWebGLProgram(u,[i,r],"float32")}const znt={kernelName:sp,backendName:"webgl",kernelFunc:Ont};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n,c=vo(i.shape,l,o,1,a),u=new Rnt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Unt={kernelName:w0,backendName:"webgl",kernelFunc:Bnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vnt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n,c=vo(l,r.shape,a,1,o),u=new $nt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Wnt={kernelName:_0,backendName:"webgl",kernelFunc:Vnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gnt=_c+`
  return cos(x);
`,Hnt=Te({opSnippet:Gnt}),qnt={kernelName:Pu,backendName:"webgl",kernelFunc:Hnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xnt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,jnt=Te({opSnippet:Xnt}),Knt={kernelName:Ou,backendName:"webgl",kernelFunc:jnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ynt{constructor(t,e,n,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=t,[u]=e,[h,d]=n;this.outputShape=[u,h,d,c];const f=i==="bilinear"?1:0,[p,g]=[`${a-1}.0`,`${l-1}.0`],[m,x,v]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,y,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${v};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Znt=s=>{const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,u=new Ynt(i.shape,r.shape,a,l,c);return e.runWebGLProgram(u,[i,r,o],"float32")},Jnt={kernelName:C0,backendName:"webgl",kernelFunc:Znt};var xu;(function(s){s.Prod="*",s.Sum="+"})(xu||(xu={}));class K_{constructor(t,e,n,i){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===xu.Prod?"1.0":"0.0",a=n?o:`getX(${Y_(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${He(r)} coords = getOutputCoords();
        int end = ${Z_(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${Z_(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${Y_(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Y_(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}function Z_(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(s,t,e,n,i,r){const o=t.shape.length,a=nn([n],o);let l=t;a!=null&&(l=as({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=hn(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);const u=l.shape[c];let h=As({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new K_(s,l.shape,!1,r),p=[[d]],g=h;h=e.runWebGLProgram(f,[h],h.dtype,p),e.disposeIntermediateTensorInfo(g)}if(i){const d=new K_(s,l.shape,i,r),f=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const d=bo(a),f=as({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return Ok(xu.Prod,i,e,r,o,a)}const tst={kernelName:S0,backendName:"webgl",kernelFunc:Qnt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function est(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return Ok(xu.Sum,i,e,r,o,a)}const nst={kernelName:ip,backendName:"webgl",kernelFunc:est};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=vk(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=dQ(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const ist={kernelName:I0,backendName:"webgl",kernelFunc:sst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rst{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ost(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],c=o==="NHWC"?i.shape[2]:i.shape[3],u=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,f=u/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],g=new rst(p,r,o);return e.runWebGLProgram(g,[i],i.dtype)}const ast={kernelName:T0,backendName:"webgl",kernelFunc:ost};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";n&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const v=x*2;if(f+=`
          xC = xCCorner + ${v*c};
          `,l===1){if(v<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }
              `,c===1&&v>0?f+=`
                xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                  } else {
                    xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xC${v} = xTexelC${v};
                `,v+1<h)){const b=a%2===0?c0(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                    xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${v+1}.zw = vec2(0.0);
                    }
                    xTexelC${v+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                    } else {
                     xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                    }
                    `:f+=`
                    xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                    `):b===1?f+=`
                    xC${v+1} = xTexelC${v};
                    `:f+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                      xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${v+1}.zw = vec2(0.0);
                      }
                      xTexelC${v+1}Ready = 1;
                    }

                    xC${v+1} = xTexelC${v+1};
                    `}}else v<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.0);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
              `,v+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(
                  xTexelC${v}.xy, xTexelC${v+1}.xy);
              `,v+1<h&&(f+=`
                  xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                `)));v<h&&(f+=`
            wTexel = getW(r, ${v}, d1, q);
            dotProd += xC${v} * vec4(wTexel.xz, wTexel.xz);
          `,v+1<h&&(f+=`
              wTexel = getW(r, ${v+1}, d1, q);
              dotProd += xC${v+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",g="";n&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;let u=l;u==null&&(u=[1,1]),F(Qn(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=qn(i.shape,r.shape,o,u,a,c,!0);let d;ot().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new Bk(h):d=new zk(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[i,r],"float32",f)}const cst={kernelName:rp,backendName:"webgl",kernelFunc:lst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ust{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class hst{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n,h=qn(i.shape,u,o,a,l,c,!0),d=new ust(h);return e.runWebGLProgram(d,[i,r],"float32")}const fst={kernelName:E0,backendName:"webgl",kernelFunc:dst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pst(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n,h=qn(u,r.shape,o,a,l,c,!0),d=new hst(h);return e.runWebGLProgram(d,[i,r],"float32")}const mst={kernelName:M0,backendName:"webgl",kernelFunc:pst};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gst{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xst(s){const{inputs:t,backend:e}=s,{x:n}=t,i=[...n.shape,...n.shape],r=ut(n.shape),o=kt({inputs:{x:n},backend:e,attrs:{shape:[r]}}),a=new gst(r),l=e.runWebGLProgram(a,[o],o.dtype),c=kt({inputs:{x:l},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),c}const vst={kernelName:$C,backendName:"webgl",kernelFunc:xst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bst{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=Sh(i.shape,r.shape,o,a,"NHWC",l);let u;const h=new bst(c);u=e.runWebGLProgram(h,[i,r],"float32");const d=kt({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const wst={kernelName:op,backendName:"webgl",kernelFunc:yst};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _st(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=ub(i,r.length);db(o.length,l,r);const{path:c,steps:u}=fb(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:v}=hb(f,l[m]);let b;pb(x)?b=r[m]:(b=as({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(b));const y=b.shape.slice();for(let w=0;w<v.length;++w)y.splice(v[w],0,1);Ae(b.shape,y)||(b=kt({inputs:{x:b},backend:e,attrs:{shape:y}}),p.push(b)),d===null?d=b:(d=sy({inputs:{a:b,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=Sm({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const Sst={kernelName:DC,backendName:"webgl",kernelFunc:_st};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cst="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ist=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Tst=Te({opSnippet:Cst,packedOpSnippet:Ist}),Est={kernelName:Bu,backendName:"webgl",kernelFunc:Tst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mst="return (b >= 1.0) ? a : a * (b + 1.0);",kst=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Ast=s=>{const{inputs:t,backend:e}=s,{dy:n,y:i}=t,r=ot().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hh(kst,n.shape,i.shape):new ic(Mst,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],n.dtype)},Nst={kernelName:k0,backendName:"webgl",kernelFunc:Ast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rst=`
  return vec4(equal(a, b));
`,$st="return float(a == b);",Dst=jn({opSnippet:$st,packedOpSnippet:Rst,dtype:"bool",cpuKernelImpl:gQ}),Fst={kernelName:ap,backendName:"webgl",kernelFunc:Dst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lst=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${sb};
  float a1 = ${ib};
  float a2 = ${rb};
  float a3 = ${ob};
  float a4 = ${ab};
  float a5 = ${lb};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Pst=Te({opSnippet:Lst}),Ost={kernelName:Uu,backendName:"webgl",kernelFunc:Pst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zst=_c+`
  return exp(x);
`,Bst=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Uk=Te({opSnippet:zst,packedOpSnippet:Bst,cpuKernelImpl:xQ,dtype:"float32"}),Ust={kernelName:Vu,backendName:"webgl",kernelFunc:Uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wx(s){const{inputs:t,attrs:e,backend:n}=s,{dim:i}=e,{input:r}=t,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(F(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),kt({inputs:{x:r},backend:n,attrs:{shape:a}})}const Vst={kernelName:lp,backendName:"webgl",kernelFunc:Wx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_="return exp(x) - 1.0;",Wst=Te({opSnippet:J_,packedOpSnippet:J_,cpuKernelImpl:vQ}),Gst={kernelName:Wu,backendName:"webgl",kernelFunc:Wst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q_{constructor(t,e,n){this.variableNames=["real","imag"];const i=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${i}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(s,t,e){const n=e.texData.get(s.dataId),i=ut(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=kt({inputs:{x:s},backend:e,attrs:{shape:[o,r]}}),l=a.shape,c=new Q_("real",l,t),u=new Q_("imag",l,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=To({inputs:{real:d,imag:f},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f);const g=kt({inputs:{x:p},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hst(s){const{inputs:t,backend:e}=s,{input:n}=t;return Vk(n,!1,e)}const qst={kernelName:A0,backendName:"webgl",kernelFunc:Hst};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xst{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xh(s){const{backend:t,attrs:e}=s,{shape:n,value:i}=e;let{dtype:r}=e;if(r=r||Tu(i),r==="string"){const o=pn(r,ut(n));return o.fill(i),t.makeTensorInfo(n,r,o)}else{const o=new Xst(n,i),a=[[i]];return t.runWebGLProgram(o,[],r,a)}}const jst={kernelName:N0,backendName:"webgl",kernelFunc:Xh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kst{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yst={kernelName:R0,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:e}=s,n=t,i=new Kst(e.shape);return n.runWebGLProgram(i,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tS="return floor(x);",Zst=Te({opSnippet:tS,packedOpSnippet:tS,cpuKernelImpl:bQ}),Jst={kernelName:Gu,backendName:"webgl",kernelFunc:Zst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qst=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,tit=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,eit=jn({opSnippet:Qst,packedOpSnippet:tit,dtype:"int32"}),nit={kernelName:Hu,backendName:"webgl",kernelFunc:eit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sit{constructor(t){this.variableNames=["A"];const e=ls(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iit{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=ls(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rit={kernelName:qz,backendName:"webgl",kernelFunc:oit};let fl,Lg=ot().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function oit(s){const{inputs:t,backend:e,attrs:n}=s;let{pixels:i}=t;const{numChannels:r}=n,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(a||o){const g=ot().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(fl==null||g!==Lg)&&(Lg=g,fl=document.createElement("canvas").getContext("2d",{willReadFrequently:Lg})),fl.canvas.width=l,fl.canvas.height=c,fl.drawImage(i,0,0,l,c),i=fl.canvas}const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=Ps.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),i);const f=ot().getBool("WEBGL_PACK")?new iit(h):new sit(h),p=e.runWebGLProgram(f,[d],"int32");return e.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ait(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,g=Fr(u),m=qn(i.shape,r.shape,l,h,c,d,!1,g);let x;const v=[],b=o!=null,y=a!=null,w=f==="leakyrelu",S=()=>{const _=[i,r],I=(T,N)=>{if(N==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const O=kt({inputs:{x:T},backend:e,attrs:{shape:[T.shape[0],1,1]}});return v.push(O),O}return T};if(b&&_.push(I(o,u)),y&&_.push(I(a,u)),w){const T=e.makeTensorInfo([],"float32",xo(p,"float32"));_.push(T),v.push(T)}return _};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))x=Lk({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&g==="channelsLast"&&ot().getBool("WEBGL_EXP_CONV")){const _=f?mu(f,!0):null,I=new Fk(m,b,_,y,w),T=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],N=S();x=e.runWebGLProgram(I,N,"float32",T)}else if(ot().getBool("WEBGL_CONV_IM2COL"))x=Pk({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const _=f?mu(f,!1):null,I=new Dk(m,b,_,y,w),T=S();x=e.runWebGLProgram(I,T,"float32")}const C=kt({inputs:{x},backend:e,attrs:{shape:m.outShape}});return v.push(x),v.forEach(_=>e.disposeIntermediateTensorInfo(_)),C}const lit={kernelName:rf,backendName:"webgl",kernelFunc:ait};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n,p=[];let g=u;g==null&&(g=[1,1]),F(Qn(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=qn(i.shape,r.shape,l,g,c,h,!0),x=ot().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,v=d?mu(d,x):null,b=[i,r],y=o!=null,w=a!=null,S=d==="leakyrelu";if(y&&b.push(o),w&&b.push(a),S){const T=e.makeTensorInfo([],"float32",xo(f,"float32"));b.push(T),p.push(T)}let C;x?C=new Bk(m,y,v,w,S):C=new zk(m,y,v,w,S);const _=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],I=e.runWebGLProgram(C,b,"float32",_);return p.forEach(T=>e.disposeIntermediateTensorInfo(T)),I}const uit={kernelName:HC,backendName:"webgl",kernelFunc:cit};class hit{constructor(t,e,n,i){this.sliceDim=t,this.strides=e,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=n;const r=He(n.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dit(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=i.shape,o=r[r.length-1],a=ut(n.shape),[l,c,u,h]=hv(n,i),d=kt({inputs:{x:i},backend:e,attrs:{shape:[c,o]}}),f=kt({inputs:{x:n},backend:e,attrs:{shape:[ut(n.shape)/u,u]}});if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const x=e.readSync(i.dataId),v=e.bufferSync(n),b=yQ(x,v,n.dtype,c,o,u,h,n.shape,a);return e.makeTensorInfo(l,n.dtype,b.values)}const p=new hit(o,h,[c,u],n.shape),g=e.runWebGLProgram(p,[f,d],f.dtype),m=kt({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const fit={kernelName:FC,backendName:"webgl",kernelFunc:dit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pit{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=He(this.rank),i=mit(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function mit(s,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s.length;i++)i===2?n.push("index"):n.push(`${e[i]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n,l=xe(o,i.shape)[0];if(ot().get("DEBUG")){const v=e.readSync(r.dataId),b=i.shape[l];for(let y=0;y<v.length;++y){const w=v[y];F(w<=b-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${b-1}]`)}}const c=gb(i,r,l,a),u=ut(r.shape),h=[],d=kt({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=kt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const v=e.bufferSync(f),b=e.bufferSync(d),y=wQ(b,v,p);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(c.outputShape,y.dtype,y.values)}const g=new pit(d.shape,p),m=e.runWebGLProgram(g,[d,f],d.dtype);h.push(m);const x=kt({inputs:{x:m},backend:e,attrs:{shape:c.outputShape}});return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const git={kernelName:up,backendName:"webgl",kernelFunc:Wk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xit="return float(a > b);",vit=`
  return vec4(greaterThan(a, b));
`,bit=jn({opSnippet:xit,packedOpSnippet:vit,cpuKernelImpl:_Q,dtype:"bool"}),yit={kernelName:hp,backendName:"webgl",kernelFunc:bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wit="return float(a >= b);",_it=`
  return vec4(greaterThanEqual(a, b));
`,Sit=jn({opSnippet:wit,packedOpSnippet:_it,dtype:"bool",cpuKernelImpl:SQ}),Cit={kernelName:qu,backendName:"webgl",kernelFunc:Sit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iit(s){const{inputs:t,backend:e}=s,{input:n}=t;return Vk(n,!0,e)}const Tit={kernelName:$0,backendName:"webgl",kernelFunc:Iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eit="return float(!isnan(x) && !isinf(x));",Mit=Te({opSnippet:Eit,dtype:"bool"}),kit={kernelName:ju,backendName:"webgl",kernelFunc:Mit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ait="return float(isinf(x));",Nit=Te({opSnippet:Ait,dtype:"bool"}),Rit={kernelName:Ku,backendName:"webgl",kernelFunc:Nit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $it="return float(isnan(x));",Dit=Te({opSnippet:$it,dtype:"bool"}),Fit={kernelName:Yu,backendName:"webgl",kernelFunc:Dit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lit="return float(a < b);",Pit=`
  return vec4(lessThan(a, b));
`,Oit=jn({opSnippet:Lit,packedOpSnippet:Pit,cpuKernelImpl:CQ,dtype:"bool"}),zit={kernelName:fp,backendName:"webgl",kernelFunc:Oit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bit="return float(a <= b);",Uit=`
  return vec4(lessThanEqual(a, b));
`,Vit=jn({opSnippet:Bit,packedOpSnippet:Uit,cpuKernelImpl:IQ,dtype:"bool"}),Wit={kernelName:pp,backendName:"webgl",kernelFunc:Vit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Git(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=TQ(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const Hit={kernelName:LC,backendName:"webgl",kernelFunc:Git};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qit=_c+`
  return x < 0.0 ? 0./0. : log(x);
`,Xit=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,jit=Te({opSnippet:qit,packedOpSnippet:Xit,cpuKernelImpl:EQ}),Kit={kernelName:Zu,backendName:"webgl",kernelFunc:jit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yit=_c+`
  return log(1.0 + x);
`,Zit=Te({opSnippet:Yit}),Jit={kernelName:Ju,backendName:"webgl",kernelFunc:Zit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qit="return float(a >= 1.0 && b >= 1.0);",trt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,ert=jn({opSnippet:Qit,packedOpSnippet:trt,dtype:"bool"}),nrt={kernelName:mp,backendName:"webgl",kernelFunc:ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const srt="return float(!(x >= 1.0));",irt=Te({opSnippet:srt}),rrt={kernelName:gp,backendName:"webgl",kernelFunc:irt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ort="return float(a >= 1.0 || b >= 1.0);",art=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,lrt=jn({opSnippet:ort,packedOpSnippet:art,dtype:"bool"}),crt={kernelName:xp,backendName:"webgl",kernelFunc:lrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class urt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hrt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const drt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n,c=ot().getBool("WEBGL_PACK_NORMALIZATION")?new hrt(i.shape,r,o,a,l):new urt(i.shape,r,o,a,l);return e.runWebGLProgram(c,[i],i.dtype)},frt={kernelName:vp,backendName:"webgl",kernelFunc:drt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class prt{constructor(t,e,n,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mrt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n,h=new prt(i.shape,a,l,c,u);return e.runWebGLProgram(h,[i,r,o],i.dtype)},grt={kernelName:F0,backendName:"webgl",kernelFunc:mrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xrt(s,t,e,n){const i=ut(t),o=ut(s.shape)/i,a=kt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Ua(a,s.dtype,"max",n),c=kt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=i.shape.length,l=xe(r,i.shape);let c=l;const u=nn(c,a),h=u!=null,d=e.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const b=e.texData.get(f.dataId).values,y=new Array(a);for(let C=0;C<y.length;C++)y[C]=i.shape[u[C]];const w=ey(b,i.shape,i.dtype,u,y);f=e.makeTensorInfo(y,i.dtype);const S=e.texData.get(f.dataId);S.values=w}else f=_m(i,u,e);c=hn(c.length,a)}Xn("max",c,a);const[p,g]=Ln(f.shape,c);let m=p;o&&(m=un(p,l));let x;if(d){const b=e.texData.get(f.dataId).values,y=MQ(b,ut(g),m,i.dtype);x=e.makeTensorInfo(m,i.dtype);const w=e.texData.get(x.dataId);w.values=y}else x=xrt(f,g,m,e);return h&&e.disposeIntermediateTensorInfo(f),x}const vrt={kernelName:bp,backendName:"webgl",kernelFunc:Gk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const brt=ny+`
  return max(a, b);
`,yrt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Gh+`
  return result;
`,wrt=jn({opSnippet:brt,packedOpSnippet:yrt,cpuKernelImpl:kQ}),_rt={kernelName:Qu,backendName:"webgl",kernelFunc:wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Srt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Vh(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;F(Qn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=pi(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Ae(u.inShape,u.outShape))return As({inputs:{x:i},backend:e});const h=new gu(u,"max",!1);return e.runWebGLProgram(h,[i],i.dtype)}const Crt={kernelName:yp,backendName:"webgl",kernelFunc:Srt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Irt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=n,u=[1,1,1],h=Dr(i.shape,r,o,u,a,c,l),d=new iy(h,"max",!1);return e.runWebGLProgram(d,[i],i.dtype)}const Trt={kernelName:wp,backendName:"webgl",kernelFunc:Irt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ert{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,i=t.dilationHeight,r=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=r-1-t.padInfo.top,l=o-1-t.padInfo.left,c=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Mrt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,f=u-1-t.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function krt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=Dr(o.shape,a,l,h,c,u),f=new iy(d,"max",!0),p=e.runWebGLProgram(f,[o],o.dtype),g=new Mrt(d),m=e.runWebGLProgram(g,[i,p],o.dtype);return e.disposeIntermediateTensorInfo(p),m}const Art={kernelName:P0,backendName:"webgl",kernelFunc:krt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nrt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Vh([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=pi(a.shape,l,c,1,u,h),f=!0,p=new gu(d,"max",f),g=e.runWebGLProgram(p,[a],a.dtype),m=new Ert(d),x=e.runWebGLProgram(m,[i,g],a.dtype);return e.disposeIntermediateTensorInfo(g),x}const Rrt={kernelName:L0,backendName:"webgl",kernelFunc:Nrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $rt(s,t,e,n){let i=new gu(e,"max",!1);const r=n.runWebGLProgram(i,[s],"float32");i=new gu(e,"max",!0,!0,t);const o=n.runWebGLProgram(i,[s],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Drt={kernelName:PC,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;F(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const c=[1,1];F(Qn(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=pi(n.shape,i,r,c,o),[h,d]=$rt(n,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Frt(s,t,e,n){const i=ut(t),o=ut(s.shape)/i,a=kt({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Ua(a,"float32","mean",n),c=kt({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lrt={kernelName:_p,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{keepDims:i,axis:r}=t,o=e,a=n.shape.length,l=xe(r,n.shape);let c=l;const u=nn(c,a),h=u!=null,d=o.shouldExecuteOnCPU([n]),f=[];let p=n;if(h){if(d){const y=o.texData.get(p.dataId).values,w=new Array(a);for(let _=0;_<w.length;_++)w[_]=n.shape[u[_]];const S=ey(y,n.shape,n.dtype,u,w);p=o.makeTensorInfo(w,n.dtype);const C=o.texData.get(p.dataId);C.values=S}else p=_m(n,u,o);f.push(p),c=hn(c.length,a)}Xn("sum",c,a);const[g,m]=Ln(p.shape,c);let x=g;i&&(x=un(g,l));const v=Frt(p,m,x,o);for(const b of f)o.disposeIntermediateTensorInfo(b);return v}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Prt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=xe(r,i.shape);let c=l;const u=nn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=hn(c.length,i.shape.length)),Xn("min",c,a);const[d,f]=Ln(h.shape,c),p=ut(f),g=kt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Ua(g,g.dtype,"min",e);let x;if(o){const v=un(d,l);x=kt({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=kt({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const Ort={kernelName:Sp,backendName:"webgl",kernelFunc:Prt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zrt=ny+`
  return min(a, b);
`,Brt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Gh+`
  return result;
`,Urt=jn({opSnippet:zrt,packedOpSnippet:Brt,cpuKernelImpl:AQ}),Vrt={kernelName:th,backendName:"webgl",kernelFunc:Urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wrt{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const i=t.length,r=He(i),o=e.map(u=>u[0]).join(","),a=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=n==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Grt{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,g)=>p[0]+t[g]+p[1]);const i=t.length,r=He(i),o=e.map(p=>p[0]).join(","),a=e.map((p,g)=>p[0]+t[g]).join(","),l=is("rc",i),c=is("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1;let f="";if(i===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hrt=({inputs:s,backend:t,attrs:e})=>{const{x:n}=s,{paddings:i,mode:r}=e,o=ot().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Grt(n.shape,i,r):new Wrt(n.shape,i,r);return t.runWebGLProgram(o,[n],n.dtype)},qrt={kernelName:Cp,backendName:"webgl",kernelFunc:Hrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xrt=`if (b == 0.0) return NAN;
  return mod(a, b);`,jrt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Gh+`
  return result;
`,Krt=jn({opSnippet:Xrt,packedOpSnippet:jrt}),Yrt={kernelName:eh,backendName:"webgl",kernelFunc:Krt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zrt{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jrt=`
if (a == b) {
  return 1.0;
};
return a / b;`,Qrt=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Hk=jn({opSnippet:Jrt,packedOpSnippet:Qrt,checkOutOfBounds:!0}),tot={kernelName:zu,backendName:"webgl",kernelFunc:Hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS="return a - b;",qk=jn({opSnippet:eS,packedOpSnippet:eS,supportsComplex:!0,cpuKernelImpl:YQ}),eot={kernelName:xh,backendName:"webgl",kernelFunc:qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=xe([r],i.shape),a=Gk({inputs:{x:i},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=un(a.shape,o),c=kt({inputs:{x:a},backend:e,attrs:{shape:l}}),u=qk({inputs:{a:i,b:c},backend:e}),h=Uk({inputs:{x:u},backend:e}),d=Sm({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),f=kt({inputs:{x:d},backend:e,attrs:{shape:l}}),p=Hk({inputs:{a:h,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}const not={kernelName:Vp,backendName:"webgl",kernelFunc:Xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sot(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n,l=a?i:Xk({inputs:{logits:i},backend:e,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new Zrt(c,u,r),d=[[o]],f=e.runWebGLProgram(h,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),f}const iot={kernelName:OC,backendName:"webgl",kernelFunc:sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rot=gi+`
  return -x;
`,oot=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function aot(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])){const r=e.texData.get(n.dataId),[o,a]=RQ(r.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,o)}let i;return ot().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Qo(n.shape,oot):i=new Tr(n.shape,rot),e.runWebGLProgram(i,[n],n.dtype)}const lot={kernelName:Ip,backendName:"webgl",kernelFunc:aot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cot=Vv;function uot(s){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),{selectedIndices:h}=cot(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const hot={kernelName:O0,backendName:"webgl",kernelFunc:uot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dot=Wv;function fot(s){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=dot(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const pot={kernelName:z0,backendName:"webgl",kernelFunc:fot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mot=Gv;function got(s){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=mot(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const xot={kernelName:B0,backendName:"webgl",kernelFunc:got};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vot{constructor(t,e,n,i){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bot=s=>{const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n,c=ut(i.shape),u=new vot(c,o,a,l),h=kt({inputs:{x:i},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(u,[h],r);e.disposeIntermediateTensorInfo(h);const f=[...i.shape,o],p=kt({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(d),p},yot={kernelName:Mp,backendName:"webgl",kernelFunc:bot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="complex64"){const i=qh({inputs:{input:n},backend:e}),r=Rf({inputs:{x:i},backend:e}),o=Cm({inputs:{input:n},backend:e}),a=Rf({inputs:{x:o},backend:e}),l=To({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Xh({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}const wot={kernelName:Hp,backendName:"webgl",kernelFunc:Rf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=qh({inputs:{input:n},backend:e}),r=jk({inputs:{x:i},backend:e}),o=Cm({inputs:{input:n},backend:e}),a=Rf({inputs:{x:o},backend:e}),l=To({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Xh({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}const _ot={kernelName:Ep,backendName:"webgl",kernelFunc:jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sot(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return Wx({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{fi(r,u.shape,"All tensors passed to stack must have matching shapes"),F(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Wx({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=$k({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const Cot={kernelName:kp,backendName:"webgl",kernelFunc:Sot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iot{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const i=t.length,r=He(i),o=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tot{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const i=t.length,r=He(i),o=e.map(g=>g[0]).join(","),a=e.map((g,m)=>g[0]+t[m]).join(","),l=is("rc",i),c=is("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let g=0,m=i===1?2:4;g<m;g++)p+=`
        ${d[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kk=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;if(ut(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return Xh({backend:e,attrs:{shape:c,value:o,dtype:i.dtype}})}const a=ot().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tot(i.shape,r,o):new Iot(i.shape,r,o),l=[[o]];return e.runWebGLProgram(a,[i],i.dtype,l)},Eot={kernelName:Ap,backendName:"webgl",kernelFunc:Kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mot=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,kot=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Gh+`
  return result;
`,Aot=jn({opSnippet:Mot,packedOpSnippet:kot}),Not={kernelName:sh,backendName:"webgl",kernelFunc:Aot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=[],c=xe(r,i.shape);let u=c;const h=nn(u,a);let d=i;h!=null&&(d=as({inputs:{x:i},backend:e,attrs:{perm:h}}),u=hn(u.length,a),l.push(d)),Xn("prod",u,a);let f;if(e.shouldExecuteOnCPU([d])){const p=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:x}=DQ(d.shape,d.dtype,p,u);f=e.makeTensorInfo(m,x,g)}else{const[p,g]=Ln(d.shape,u),m=ut(g),x=kt({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),v=rv(i.dtype),b=Ua(x,v,"prod",e);f=kt({inputs:{x:b},backend:e,attrs:{shape:p}}),l.push(x),l.push(b)}if(o){l.push(f);const p=un(f.shape,c);f=kt({inputs:{x:f},backend:e,attrs:{shape:p}})}return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const $ot={kernelName:Rp,backendName:"webgl",kernelFunc:Rot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dot(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:a}=n,l=i.map(x=>e.readSync(x.dataId)),c=i.map(x=>x.shape),u=e.readSync(r.dataId),h=e.readSync(o.dataId),[d,f,p]=FQ(l,c,u,r.shape,r.dtype,h,o.shape,a),g=d.map(x=>e.makeTensorInfo([x.length],"int32",x)),m=e.makeTensorInfo(p,r.dtype,f);return g.concat([m])}const Fot={kernelName:zC,backendName:"webgl",kernelFunc:Dot};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lot(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=LQ(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const Pot={kernelName:BC,backendName:"webgl",kernelFunc:Lot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oot(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a.map(m=>e.readSync(m.dataId)),f=a.map(m=>m.shape),[p,g]=PQ(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const zot={kernelName:UC,backendName:"webgl",kernelFunc:Oot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yk=s=>{const{backend:t,attrs:e}=s,{start:n,stop:i,step:r,dtype:o}=e,a=OQ(n,i,r,o);return t.makeTensorInfo([a.length],o,a)},Bot={kernelName:U0,backendName:"webgl",kernelFunc:Yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uot="return 1.0 / x;",Vot=Te({opSnippet:Uot}),Wot={kernelName:ih,backendName:"webgl",kernelFunc:Vot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Got=gi+`
  return (x < 0.0) ? 0.0 : x;
`,Hot=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qot=Te({opSnippet:Got,packedOpSnippet:Hot}),Xot={kernelName:rh,backendName:"webgl",kernelFunc:qot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jot=gi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Kot=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Yot=Te({opSnippet:jot,packedOpSnippet:Kot}),Zot={kernelName:oh,backendName:"webgl",kernelFunc:Yot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jot{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qot{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=ot().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qot(i.shape,l,c,r,o):new Jot(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],"float32")}const eat={kernelName:Fp,backendName:"webgl",kernelFunc:tat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nat{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new nat(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const iat={kernelName:G0,backendName:"webgl",kernelFunc:sat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rat{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oat{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=ot().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new oat(i.shape,l,c,r,o):new rat(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],i.dtype)}const lat={kernelName:Dp,backendName:"webgl",kernelFunc:aat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cat{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new cat(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const hat={kernelName:W0,backendName:"webgl",kernelFunc:uat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dat{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const i=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,r=t.map((a,l)=>i(l)).join(","),o=He(n);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fat{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const i=is("rc",n),r=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,a=He(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${o}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function u(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function h(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){const g=t.map((v,b)=>f(b,p)),m=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${x}))`}function f(p,g){return e.indexOf(p)!==-1&&t[p]!==1?`${t[p]} - ${g[p]} - 1`:`${g[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n,o=i.shape.length,a=xe(r,i.shape);if(o===0)return As({inputs:{x:i},backend:e});const l=ot().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fat(i.shape,a):new dat(i.shape,a);return e.runWebGLProgram(l,[i],i.dtype)}const mat={kernelName:Lp,backendName:"webgl",kernelFunc:pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gat{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],i=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xat={kernelName:sv,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=new gat(n.shape,r),[c,u]=tb(o,n.shape[1],n.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vat=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,bat=Te({opSnippet:vat}),yat={kernelName:ah,backendName:"webgl",kernelFunc:bat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wat="return inversesqrt(x);",_at=Te({opSnippet:wat,cpuKernelImpl:zQ}),Sat={kernelName:lh,backendName:"webgl",kernelFunc:_at};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zk{constructor(t,e,n,i,r,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const l=He(r.length),c=He(o.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";i===1?d="i":i===2&&(d="i, coords[1]");const f=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cat(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=_h(r,i,o),d=[h/c,c];if(h===0)return e.makeTensorInfo(o,i.dtype);const f=kt({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),p=kt({inputs:{x:r},backend:e,attrs:{shape:[l,c]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),m=new Zk(l,a,f.shape.length,p.shape.length,u,d),x=e.runWebGLProgram(m,[p,f,g],p.dtype),v=kt({inputs:{x},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),v}const Iat={kernelName:VC,backendName:"webgl",kernelFunc:Cat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tat{constructor(t,e,n,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=ot().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eat(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=new Tat(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return e.runWebGLProgram(a,[i,r],"int32",l)}const Mat={kernelName:WC,backendName:"webgl",kernelFunc:Eat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kat{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let i,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);i=l.join(),r=c.join()}const o=He(n);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aat(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t,o=new kat(n.shape.length,i.shape,i.shape.length);return e.runWebGLProgram(o,[n,i,r],Ts(i.dtype,r.dtype))}const Nat={kernelName:Pp,backendName:"webgl",kernelFunc:Aat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rat=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${rm};
  float scale = ${om};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,$at=Te({opSnippet:Rat}),Dat={kernelName:ch,backendName:"webgl",kernelFunc:$at};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fat=_c+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Lat=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pat=Te({opSnippet:Fat,packedOpSnippet:Lat,cpuKernelImpl:UQ}),Oat={kernelName:fh,backendName:"webgl",kernelFunc:Pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zat=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Bat=Te({opSnippet:zat}),Uat={kernelName:dh,backendName:"webgl",kernelFunc:Bat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vat=_c+`
  return sin(x);
`,Wat=Te({opSnippet:Vat}),Gat={kernelName:uh,backendName:"webgl",kernelFunc:Wat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hat=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,qat=Te({opSnippet:Hat}),Xat={kernelName:hh,backendName:"webgl",kernelFunc:qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jat=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Kat=Te({opSnippet:jat}),Yat={kernelName:ph,backendName:"webgl",kernelFunc:Kat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zat=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;F(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,v)=>x*v),l=[[0,0]];l.push(...o);for(let x=1+r.length;x<i.shape.length;++x)l.push([0,0]);const c=[],u=Kk({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),h=kh(u.shape,r,a,!1),d=Ah(h.length,r.length,!1),f=Nh(u.shape,r,a,!1),p=kt({inputs:{x:u},backend:e,attrs:{shape:h}}),g=as({inputs:{x:p},backend:e,attrs:{perm:d}}),m=kt({inputs:{x:g},backend:e,attrs:{shape:f}});return c.push(u),c.push(p),c.push(g),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),m},Jat={kernelName:Bp,backendName:"webgl",kernelFunc:Zat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qat(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.readSync(n.dataId),l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=e.readSync(o.dataId)[0],[h,d,f,p,g]=WQ(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const tlt={kernelName:H0,backendName:"webgl",kernelFunc:Qat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elt(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.readSync(i.dataId)),a=e.readSync(n.dataId),l=Array.from(e.readSync(r.dataId)),[c,u,h]=GQ(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const nlt={kernelName:q0,backendName:"webgl",kernelFunc:elt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slt(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=yk(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const ilt={kernelName:X0,backendName:"webgl",kernelFunc:slt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rlt(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=yk(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const olt={kernelName:j0,backendName:"webgl",kernelFunc:rlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function alt(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=_h(r,i,a),f=!1;if(r.dtype==="string"){const x=e.bufferSync(i),v=e.bufferSync(r),b=no(e.readSync(o.dataId)[0]),y=BQ(x,v,a,d,u,c,l,h,b,f);return e.makeTensorInfo(a,y.dtype,y.values)}const p=new Zk(c,l,i.shape.length,r.shape.length,h,[d,1],f),g=e.runWebGLProgram(p,[r,i,o],r.dtype),m=kt({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),m}const llt={kernelName:GC,backendName:"webgl",kernelFunc:alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=xe(o,i.shape)[0],l=mb(i,r,a),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=Sc({inputs:{x:i},backend:e,attrs:{begin:u,size:f}});return u[a]+=d,p})}const ult={kernelName:Up,backendName:"webgl",kernelFunc:clt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nS="return sqrt(x);",hlt=Te({opSnippet:nS,packedOpSnippet:nS,cpuKernelImpl:HQ}),dlt={kernelName:mh,backendName:"webgl",kernelFunc:hlt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flt="return x * x;",plt=Te({opSnippet:flt}),mlt={kernelName:K0,backendName:"webgl",kernelFunc:plt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS="return (a - b) * (a - b);",glt=jn({opSnippet:sS,packedOpSnippet:sS}),xlt={kernelName:gh,backendName:"webgl",kernelFunc:glt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vlt({inputs:s,attrs:t,backend:e}){const{x:n}=s,i=gi+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Tr(n.shape,i);return e.runWebGLProgram(r,[n],n.dtype)}const blt={kernelName:wh,backendName:"webgl",kernelFunc:vlt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ylt{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const i=n.length,r=He(n.length),o=He(n.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=n.map((c,u)=>(l++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wlt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:v,end:b,strides:y}=gv(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=kt({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){F(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const C=fv(v,b,y),_=Sc({inputs:{x:i},backend:e,attrs:{begin:v,size:C}});w=kt({inputs:{x:_},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(_)}else if(e.shouldExecuteOnCPU([i])){const _=e.readSync(i.dataId),I=ge(i.shape,i.dtype,_),T=qQ(f,I,y,v);w=e.makeTensorInfo(p,i.dtype,T.values)}else{const _=new ylt(v,y,f);w=e.runWebGLProgram(_,[i],i.dtype)}const S=kt({inputs:{x:w},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(w),S}const _lt={kernelName:Y0,backendName:"webgl",kernelFunc:wlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Slt(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.readSync(u.dataId),f=e.readSync(h.dataId),[p,g]=XQ(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const Clt={kernelName:Z0,backendName:"webgl",kernelFunc:Slt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ilt(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.readSync(r.dataId),l=e.readSync(o.dataId)[0],[c,u,h]=jQ(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const Tlt={kernelName:J0,backendName:"webgl",kernelFunc:Ilt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Elt(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(r.dataId),a=KQ(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const Mlt={kernelName:Q0,backendName:"webgl",kernelFunc:Elt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const klt="return tan(x);",Alt=Te({opSnippet:klt}),Nlt={kernelName:vh,backendName:"webgl",kernelFunc:Alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rlt=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,$lt=Te({opSnippet:Rlt}),Dlt={kernelName:bh,backendName:"webgl",kernelFunc:$lt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Flt{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const i=He(this.rank),r=Llt(t);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Llt(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let i=0;i<s.length;i++)n.push(`imod(${e[i]}, ${s[i]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;if(i.dtype==="string"||i.shape.length>5){const l=e.readSync(i.dataId),c=i.dtype==="string"?l.map(d=>no(d)):l,u=ge(i.shape,i.dtype,c),h=ZQ(u,r);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new Flt(i.shape,r);return e.runWebGLProgram(o,[i],i.dtype)}const Plt={kernelName:yh,backendName:"webgl",kernelFunc:Jk};class Olt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class zlt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function iS(s){let t=1;for(;t<s;)t*=2;return t}function Blt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n,a=ot().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ot().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([i])||u<a||r>l){const T=e.readSync(i.dataId),[N,O]=JQ(T,c,i.dtype,r,o);return[e.makeTensorInfo(N.shape,N.dtype,N.values),e.makeTensorInfo(O.shape,O.dtype,O.values)]}if(r===0)return c[c.length-1]=0,[e.makeTensorInfo(c,i.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[i,Xh({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?e.unpackTensor(i):i,g=ut(c)/u,m=kt({inputs:{x:f},attrs:{shape:[g,u]},backend:e});d&&Lo(e,f);const x=iS(r),v=iS(u);let b=null;const y=()=>b===null?[m,m]:[m,b],w=(T,N,O)=>{const M=y(),E=new Olt(O),R=[[u],[b===null?1:0],[Number.NEGATIVE_INFINITY],[T],[N]],V=b;b=e.runWebGLProgram(E,M,"int32",R),Lo(e,V)};for(let T=1;T<x;T*=2){const N=T*2;for(let O=T;O>=1;O/=2)w(N,O,[g,v])}for(let T=v;T>x;T/=2){const N=y(),O=new zlt([g,T/2]),E=[[u],[b===null?1:0],[x]],A=b;b=e.runWebGLProgram(O,N,"int32",E),Lo(e,A);const R=x/2,V=R*2;for(let P=R;P>=1;P/=2)w(V,P,b.shape)}let S=b;b=Sc({inputs:{x:b},backend:e,attrs:{begin:0,size:[g,r]}}),Lo(e,S);let C=Wk({inputs:{x:m,indices:b},backend:e,attrs:{axis:1,batchDims:1}});Lo(e,m);const _=c.slice(0,-1);_.push(r),S=b,b=kt({inputs:{x:b},attrs:{shape:_},backend:e}),Lo(e,S);const I=C;return C=kt({inputs:{x:C},attrs:{shape:_},backend:e}),Lo(e,I),[C,b]}const Ult={kernelName:tv,backendName:"webgl",kernelFunc:Blt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vlt{constructor(t,e,n,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=n==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wlt(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=n,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=new Vlt(h,d,o,a,l,m);return e.runWebGLProgram(x,[i,r],"float32")}const Glt={kernelName:ev,backendName:"webgl",kernelFunc:Wlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hlt(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Vh(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=n.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=QQ(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const qlt={kernelName:nv,backendName:"webgl",kernelFunc:Hlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xlt(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],c=new Array(a-1);let u=0;for(let g=0;g<a;g++)g!==r&&(c[u++]=o.shape[g]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let g=0;g<p.length;g++){d[r]=g;const m=Sc({inputs:{x:o},backend:e,attrs:{begin:d,size:f}}),x=kt({inputs:{x:m},backend:e,attrs:{shape:c}});p[g]=x,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const jlt={kernelName:Wp,backendName:"webgl",kernelFunc:Xlt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Klt{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,i=t.batchSize,r=t.inSize,o=t.numSegments,a=o*Math.ceil(r/n);this.outputShape=[i,a];const l="0.0",c="sumValue",u=Math.floor(n/4)*4,h=n%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ylt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n,a=i.shape.length,l=[];let c=0;const u=nn([c],a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),l.push(h),c=hn(1,a)[0]);const d=FT(h.shape,c,o),f=ut([h.shape[c]]),p=kt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}});l.push(p);const g=rv(i.dtype),m=(y,w,S,C,_)=>{const I=y.shape[0],T=y.shape[1],N=DT(T,_),O={windowSize:N,inSize:T,batchSize:I,numSegments:_},M=new Klt(O,w),E=e.compileAndRun(M,[y,S],C);if(l.push(E),E.shape[1]===_)return E;const A=Yk({backend:e,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),R=Jk({inputs:{x:A},backend:e,attrs:{reps:[T/N]}});return l.push(A),l.push(R),m(E,w,R,C,_)},x=m(p,"unsortedSegmentSum",r,g,o),v=kt({inputs:{x},backend:e,attrs:{shape:d}});let b=v;if(u!=null){l.push(v);const y=bo(u);b=as({inputs:{x:b},backend:e,attrs:{perm:y}})}return l.forEach(y=>e.disposeIntermediateTensorInfo(y)),b}const Zlt={kernelName:Gp,backendName:"webgl",kernelFunc:Ylt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jlt=[Gtt,qtt,Ktt,Jtt,tet,set,oet,cet,fet,met,vet,wet,Iet,ket,Ret,Det,Let,Bet,Vet,Get,jet,ent,snt,rnt,hnt,fnt,xnt,Ett,ynt,Int,knt,Fnt,Pnt,znt,Unt,Wnt,qnt,Knt,Jnt,tst,nst,ist,ast,cst,fst,mst,vst,wst,Sst,Est,Nst,Fst,Ost,Ust,Vst,Gst,qst,jst,Yst,Jst,nit,rit,lit,uit,fit,git,yit,Cit,Ttt,Tit,Snt,kit,Rit,Fit,ktt,zit,Wit,Hit,Kit,Jit,nrt,rrt,crt,frt,grt,vrt,_rt,Crt,Trt,Art,Rrt,Drt,Lrt,Ort,Vrt,qrt,Yrt,iot,Rtt,lot,hot,pot,xot,ant,yot,_ot,Cot,Eot,Not,Ntt,$ot,Fot,Pot,zot,Bot,lnt,tot,Wot,Xot,Zot,Dtt,eat,iat,lat,hat,mat,xat,yat,Sat,Iat,Mat,Nat,Dat,Oat,Uat,Gat,Xat,Qet,not,Yat,Jat,tlt,nlt,ilt,olt,llt,ult,dlt,mlt,xlt,blt,_lt,Clt,Tlt,Mlt,eot,Utt,Nlt,Dlt,Plt,Ult,Glt,Vtt,qlt,jlt,Zlt,wot];for(const s of Jlt)qC(s);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */n4("cpu");var fs=(s=>(s[s.Teach=0]="Teach",s[s.Demonstrate=1]="Demonstrate",s[s.None=2]="None",s))(fs||{});const Qlt=wC,tct=5;class ect extends _C{constructor(e){super(e);le(this,"hiddenLayerSize",10);le(this,"inputSize");le(this,"model");le(this,"_state",2);le(this,"previousState",2);le(this,"recording",[]);le(this,"storedRecording",[]);this.inputSize=Qlt.sensorNumber+1,this.generateNetwork()}generateNetwork(){this.model=d8({layers:[w_({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"tanh"}),w_({units:tct,activation:"softmax"})]}),this.model.compile({optimizer:"adam",loss:"binaryCrossentropy"})}recordButtonPressed(){this.respawnCar(),this.state=0,this.recording=[],this.rerenderTeachPanel()}discardButtonPressed(){this.state=2,this.recording=[],this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}startAIDemonstration(){this.state=1,this.recording=[],this.respawnCar(),this.rerenderTeachPanel()}stopAIDemonstration(){this.state=2,this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}storeRecording(){this.storedRecording=[...this.storedRecording,...this.recording],this.recording=[],this.rerenderTeachPanel()}async trainFromStored(){const e=this.storedRecording.map(l=>[...l.sensordDistances,l.forwardVelocity]),n=this.storedRecording.map(l=>l.action),i=I_(e),r=I_(n),o=Y8({xs:i,ys:r}).batch(32),a=await this.model.fitDataset(o,{epochs:40});console.log(a.history.loss)}update(e){if(super.update(e),this.state===0&&this.car){const n=this.car.getPosition();this.gameWorld.raceTrack.isFinished(n.x,n.z)?(this.state=2,this.removeCar(),this.rerenderTeachPanel(),this.gameWorld.controls.reset()):(this.recording.push({sensordDistances:this.sensorData.map(i=>i.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}if(this.state===1&&this.car){const n=[[...this.sensorData.map(o=>o.distance),this.car.getForwardVelocity()]],r=this.model.predict(av(n)).arraySync()[0].map(o=>o>=.5);console.log(r),this.car.applyInput(...r),(this.W||this.A||this.S||this.D||this.SPACE)&&(this.car.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.recording.push({sensordDistances:this.sensorData.map(o=>o.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}}removeCar(){super.removeCar()}respawnCar(){super.respawnCar()}activate(){super.activate(),this.removeCar()}deactivate(){super.deactivate(),this.removeCar(),this.state=2,this.recording=[]}get state(){return this._state}set state(e){e!==this._state&&(this.previousState=this._state,this._state=e)}rerenderTeachPanel(){window.rerenderTeachPanel()}}function rS(s,t,e){const n=s.slice();return n[9]=t[e],n[11]=e,n}function oS(s){let t,e,n,i=s[0].recording.length+"",r,o,a=s[0].state===fs.Teach||s[0].previousState===fs.Teach?"inputs recorded":"corrections recorded",l;return{c(){t=Yt("div"),e=Yt("span"),n=Yt("span"),r=Un(i),o=Un(`
            \xA0`),l=Un(a),_t(n,"id","recorded-count-span"),_t(e,"class","text-base font-medium text-blue-700 dark:text-white"),$l(t,"display","hidden"),_t(t,"class","flex mt-4 mb-1")},m(c,u){Bt(c,t,u),re(t,e),re(e,n),re(n,r),re(t,o),re(t,l)},p(c,u){u&1&&i!==(i=c[0].recording.length+"")&&kr(r,i),u&1&&a!==(a=c[0].state===fs.Teach||c[0].previousState===fs.Teach?"inputs recorded":"corrections recorded")&&kr(l,a)},d(c){c&&Ot(t)}}}function aS(s){let t,e,n;return{c(){t=Yt("button"),t.innerHTML='<span class="relative py-1 px-2 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Store recording</span>',_t(t,"class","inline-flex items-center text-center justify-center p-0.5 mb-2 overflow-hidden text-xs font-medium text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-pink-300 group-hover:via-purple-300 group-hover:to-indigo-400 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400 block mx-auto")},m(i,r){Bt(i,t,r),e||(n=rs(t,"click",s[4]),e=!0)},p:Sn,d(i){i&&Ot(t),e=!1,n()}}}function lS(s){let t,e,n;return{c(){t=Yt("button"),t.textContent="Train from stored inputs",_t(t,"type","button"),_t(t,"class","block text-red-700 hover:text-white mx-auto border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-xs px-2 py-1 text-center mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900")},m(i,r){Bt(i,t,r),e||(n=rs(t,"click",s[5]),e=!0)},p:Sn,d(i){i&&Ot(t),e=!1,n()}}}function cS(s){let t,e,n=s[9].distance.toFixed(2)+"",i;return{c(){t=Yt("div"),e=Yt("div"),i=Un(n),_t(e,"id","arrow-length-indicator-"+s[11]),_t(e,"class","bg-blue-600 mb-px bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"),$l(e,"width",s[9].distance*100+"%"),_t(t,"class","w-full bg-gray-200 rounded-full dark:bg-gray-700")},m(r,o){Bt(r,t,o),re(t,e),re(e,i)},p(r,o){o&1&&n!==(n=r[9].distance.toFixed(2)+"")&&kr(i,n),o&1&&$l(e,"width",r[9].distance*100+"%")},d(r){r&&Ot(t)}}}function uS(s){let t,e,n=s[0].state==fs.None?"New recording":"Discard",i,r,o,a,l,c,u,h,d,f,p=s[0].storedRecording.length+"",g,m,x,v,b,y,w,S,C,_,I,T,N,O,M,E,A,R,V,P,$,D,W,G,X,it,at,J,bt,xt,vt,pt,At,Rt,It,jt=(s[0].state!=fs.None||s[0].recording.length>0)&&oS(s),Zt=s[0].state==fs.None&&s[0].recording.length>0&&aS(s),Ht=s[0].storedRecording.length>0&&lS(s),ue=s[0].sensorData,ne=[];for(let ht=0;ht<ue.length;ht+=1)ne[ht]=cS(rS(s,ue,ht));return pt=new yC({props:{gameWorld:s[0].gameWorld}}),{c(){t=Yt("div"),e=Yt("button"),i=Un(n),r=pe(),o=Yt("button"),o.textContent="Test AI car",a=pe(),jt&&jt.c(),l=pe(),Zt&&Zt.c(),c=pe(),u=Yt("hr"),h=pe(),d=Yt("div"),f=Yt("span"),g=Un(p),m=Un(" inputs stored."),x=pe(),Ht&&Ht.c(),v=pe(),b=Yt("hr"),y=pe(),w=Yt("label"),S=Yt("input"),C=pe(),_=Yt("div"),I=pe(),T=Yt("span"),T.textContent="Chase camera",N=pe(),O=Yt("br"),M=pe(),E=Yt("label"),A=Yt("input"),R=pe(),V=Yt("div"),P=pe(),$=Yt("span"),$.textContent="Visualize sensors",D=pe(),W=Yt("hr"),G=pe(),X=Yt("div"),X.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Sensors</span>',it=pe();for(let ht=0;ht<ne.length;ht+=1)ne[ht].c();at=pe(),J=Yt("div"),J.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Velocity: <span id="velocity-element"></span></span>',bt=pe(),xt=Yt("hr"),vt=pe(),Dl(pt.$$.fragment),_t(e,"type","button"),_t(e,"class","focus:outline-none text-white grow flex-1 transition py-1 px-2 text-sm focus:ring-red-300 font-bold rounded-l-lg border border-gray-200 focus:z-10 focus:ring-1 bg-red-600 border-gray-600 text-white hover:text-white hover:bg-red-700"),_t(o,"type","button"),_t(o,"class","text-purple-700 hover:text-white grow flex-1 transition border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-bold rounded-r-lg text-sm px-2 py-1 text-center dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900"),_t(t,"class","flex rounded-md shadow-sm"),_t(t,"role","group"),_t(u,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),_t(f,"class","text-base font-medium text-blue-700 dark:text-white"),$l(d,"display","hidden"),_t(d,"class","flex justify-between mt-4 mb-1"),_t(b,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),_t(S,"type","checkbox"),S.__value="",S.value=S.__value,_t(S,"id","chase-mode-toggle"),_t(S,"class","sr-only peer"),_t(_,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),_t(T,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),_t(w,"for","chase-mode-toggle"),_t(w,"class","inline-flex relative items-center cursor-pointer mb-4"),_t(A,"type","checkbox"),A.__value="",A.value=A.__value,_t(A,"id","show-sensors-toggle"),_t(A,"class","sr-only peer"),_t(V,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),_t($,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),_t(E,"for","show-sensors-toggle"),_t(E,"class","inline-flex relative items-center cursor-pointer"),_t(W,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),_t(X,"class","flex justify-between mb-1"),_t(J,"class","flex justify-between mt-4 mb-1"),_t(xt,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(ht,Ft){Bt(ht,t,Ft),re(t,e),re(e,i),re(t,r),re(t,o),Bt(ht,a,Ft),jt&&jt.m(ht,Ft),Bt(ht,l,Ft),Zt&&Zt.m(ht,Ft),Bt(ht,c,Ft),Bt(ht,u,Ft),Bt(ht,h,Ft),Bt(ht,d,Ft),re(d,f),re(f,g),re(f,m),Bt(ht,x,Ft),Ht&&Ht.m(ht,Ft),Bt(ht,v,Ft),Bt(ht,b,Ft),Bt(ht,y,Ft),Bt(ht,w,Ft),re(w,S),S.checked=s[0].chaseMode,re(w,C),re(w,_),re(w,I),re(w,T),re(w,N),Bt(ht,O,Ft),Bt(ht,M,Ft),Bt(ht,E,Ft),re(E,A),A.checked=s[0].showSensors,re(E,R),re(E,V),re(E,P),re(E,$),Bt(ht,D,Ft),Bt(ht,W,Ft),Bt(ht,G,Ft),Bt(ht,X,Ft),Bt(ht,it,Ft);for(let ze=0;ze<ne.length;ze+=1)ne[ze].m(ht,Ft);Bt(ht,at,Ft),Bt(ht,J,Ft),Bt(ht,bt,Ft),Bt(ht,xt,Ft),Bt(ht,vt,Ft),oa(pt,ht,Ft),At=!0,Rt||(It=[rs(e,"click",s[2]),rs(o,"click",s[3]),rs(S,"change",s[6]),rs(A,"change",s[7])],Rt=!0)},p(ht,Ft){if((!At||Ft&1)&&n!==(n=ht[0].state==fs.None?"New recording":"Discard")&&kr(i,n),ht[0].state!=fs.None||ht[0].recording.length>0?jt?jt.p(ht,Ft):(jt=oS(ht),jt.c(),jt.m(l.parentNode,l)):jt&&(jt.d(1),jt=null),ht[0].state==fs.None&&ht[0].recording.length>0?Zt?Zt.p(ht,Ft):(Zt=aS(ht),Zt.c(),Zt.m(c.parentNode,c)):Zt&&(Zt.d(1),Zt=null),(!At||Ft&1)&&p!==(p=ht[0].storedRecording.length+"")&&kr(g,p),ht[0].storedRecording.length>0?Ht?Ht.p(ht,Ft):(Ht=lS(ht),Ht.c(),Ht.m(v.parentNode,v)):Ht&&(Ht.d(1),Ht=null),Ft&1&&(S.checked=ht[0].chaseMode),Ft&1&&(A.checked=ht[0].showSensors),Ft&1){ue=ht[0].sensorData;let U;for(U=0;U<ue.length;U+=1){const L=rS(ht,ue,U);ne[U]?ne[U].p(L,Ft):(ne[U]=cS(L),ne[U].c(),ne[U].m(at.parentNode,at))}for(;U<ne.length;U+=1)ne[U].d(1);ne.length=ue.length}const ze={};Ft&1&&(ze.gameWorld=ht[0].gameWorld),pt.$set(ze)},i(ht){At||(Ar(pt.$$.fragment,ht),At=!0)},o(ht){eo(pt.$$.fragment,ht),At=!1},d(ht){ht&&Ot(t),ht&&Ot(a),jt&&jt.d(ht),ht&&Ot(l),Zt&&Zt.d(ht),ht&&Ot(c),ht&&Ot(u),ht&&Ot(h),ht&&Ot(d),ht&&Ot(x),Ht&&Ht.d(ht),ht&&Ot(v),ht&&Ot(b),ht&&Ot(y),ht&&Ot(w),ht&&Ot(O),ht&&Ot(M),ht&&Ot(E),ht&&Ot(D),ht&&Ot(W),ht&&Ot(G),ht&&Ot(X),ht&&Ot(it),Gx(ne,ht),ht&&Ot(at),ht&&Ot(J),ht&&Ot(bt),ht&&Ot(xt),ht&&Ot(vt),aa(pt,ht),Rt=!1,$r(It)}}}function nct(s){let t=s[1],e,n,i=uS(s);return{c(){i.c(),e=mS()},m(r,o){i.m(r,o),Bt(r,e,o),n=!0},p(r,[o]){o&2&&lr(t,t=r[1])?(xS(),eo(i,1,1,Sn),vS(),i=uS(r),i.c(),Ar(i,1),i.m(e.parentNode,e)):i.p(r,o)},i(r){n||(Ar(i),n=!0)},o(r){eo(i),n=!1},d(r){r&&Ot(e),i.d(r)}}}function sct(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTeachPanel=r;const o=()=>{n.state==fs.None?n.recordButtonPressed():n.state==fs.Teach&&n.discardButtonPressed()},a=()=>{n.state==fs.None?n.startAIDemonstration():n.state==fs.Demonstrate&&n.stopAIDemonstration()},l=()=>{n.storeRecording()},c=()=>{n.trainFromStored()};function u(){n.chaseMode=this.checked,e(0,n)}function h(){n.showSensors=this.checked,e(0,n)}return s.$$set=d=>{"mode"in d&&e(0,n=d.mode)},[n,i,o,a,l,c,u,h]}class ict extends ho{constructor(t){super(),uo(this,t,sct,nct,lr,{mode:0})}}const Zd=new Qx(.45,.5,32,1);Zd.rotateX(Math.PI/2);const ry=new ka({color:0,side:ei});ry.depthTest=!1;ry.depthWrite=!1;const oy=new ka({color:16753920,side:ei});oy.depthTest=!1;oy.depthWrite=!1;const Qk=new ka({color:65280,side:ei});Qk.depthTest=!1;Qk.depthWrite=!1;const ay=new ka({color:255,side:ei});ay.depthTest=!1;ay.depthWrite=!1;class rct{constructor(t){le(this,"gameWorld");le(this,"raycaster");le(this,"pointer");le(this,"ring");le(this,"brushSize",1);le(this,"onPointerMove");le(this,"onMouseUp");le(this,"onMouseDown");le(this,"mouseDown");le(this,"rings");le(this,"road");le(this,"roadPoints");this.gameWorld=t,this.roadPoints=[new Y(4,0,4),new Y(-4,0,4),new Y(-4,0,0),new Y(4,0,0),new Y(4,0,-4),new Y(-4,0,-4)],this.road=new p1(this.roadPoints,1),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road,this.raycaster=new JS,this.pointer=new Dt(0,0),this.onPointerMove=e=>{this.pointer.x=e.offsetX/this.gameWorld.canvas.offsetWidth*2-1,this.pointer.y=-(e.offsetY/this.gameWorld.canvas.offsetHeight)*2+1},this.ring=new sn(Zd,ry),this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.ring.castShadow=!1,this.ring.receiveShadow=!1,this.ring.renderOrder=999,this.rings=[],this.mouseDown=!1,this.onMouseUp=e=>{e.button===0&&this.endDrawing(),document.removeEventListener("mouseup",this.onMouseUp)},this.onMouseDown=e=>{e.button===0&&(this.startDrawing(),document.addEventListener("mouseup",this.onMouseUp))}}startDrawing(){this.mouseDown=!0;const t=new sn(Zd,oy);t.scale.set(this.brushSize,this.brushSize,this.brushSize),t.castShadow=!1,t.receiveShadow=!1,t.renderOrder=999,t.position.copy(this.ring.position),this.rings=[t],this.gameWorld.scene.add(t)}addDrawing(){if(this.rings.some(n=>this.ring.position.distanceTo(n.position)<this.brushSize))return;const e=new sn(Zd,ay);e.scale.set(this.brushSize,this.brushSize,this.brushSize),e.castShadow=!1,e.receiveShadow=!1,e.renderOrder=999,e.position.copy(this.ring.position),this.rings.push(e),this.gameWorld.scene.add(e)}endDrawing(){this.mouseDown=!1,this.rings.length>3&&(this.gameWorld.removeGameObject(this.road),this.roadPoints=this.rings.map(t=>t.position),this.road=new p1(this.roadPoints,this.brushSize),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road),this.rings.forEach(t=>{this.gameWorld.scene.remove(t)}),this.rings=[]}update(t){this.raycaster.setFromCamera(this.pointer,this.gameWorld.camera);const e=this.raycaster.intersectObjects([this.gameWorld.ground.mesh]);if(e.length>0){const n=e[0].point;this.ring.position.set(n.x,n.y,n.z),this.ring.visible=!0}else this.ring.visible=!1;this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.mouseDown&&this.addDrawing(),this.gameWorld.controls.target.set(0,0,0)}activate(){this.gameWorld.controls.maxPolarAngle=0,this.gameWorld.controls.minAzimuthAngle=0,this.gameWorld.controls.maxAzimuthAngle=0,this.gameWorld.controls.minDistance=8,this.gameWorld.controls.maxDistance=8,this.gameWorld.controls.target.set(0,0,0),this.ring.visible=!1,this.gameWorld.scene.add(this.ring),this.gameWorld.canvas.addEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.addEventListener("mousedown",this.onMouseDown)}deactivate(){this.gameWorld.controls.maxPolarAngle=Math.PI,this.gameWorld.controls.minAzimuthAngle=1/0,this.gameWorld.controls.maxAzimuthAngle=1/0,this.gameWorld.controls.minDistance=0,this.gameWorld.controls.maxDistance=50,this.gameWorld.controls.reset(),this.gameWorld.scene.remove(this.ring),this.gameWorld.canvas.removeEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.removeEventListener("mousedown",this.onMouseDown)}}class oct{constructor(t){le(this,"gameWorld");this.gameWorld=t}update(t){}activate(){this.gameWorld.controls.reset()}deactivate(){}}function hS(s,t,e){const n=s.slice();return n[7]=t[e],n[9]=e,n}function dS(s){let t,e=s[7]+"",n,i,r,o,a;function l(){return s[5](s[9])}return{c(){t=Yt("button"),n=Un(e),i=pe(),_t(t,"type","button"),_t(t,"class",r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")},m(c,u){Bt(c,t,u),re(t,n),re(t,i),o||(a=rs(t,"click",l),o=!0)},p(c,u){s=c,u&1&&r!==(r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")&&_t(t,"class",r)},d(c){c&&Ot(t),o=!1,a()}}}function act(s){let t,e,n,i,r,o=s[1],a=[];for(let u=0;u<o.length;u+=1)a[u]=dS(hS(s,o,u));var l=s[2][s[0]];function c(u){return{props:{mode:u[3][u[0]]}}}return l&&(i=hy(l,c(s))),{c(){t=Yt("div");for(let u=0;u<a.length;u+=1)a[u].c();e=pe(),n=Yt("div"),i&&Dl(i.$$.fragment),_t(t,"class","sticky top-0 z-50 inline-flex rounded-md shadow-sm w-full"),_t(t,"role","group"),_t(n,"class","p-4")},m(u,h){Bt(u,t,h);for(let d=0;d<a.length;d+=1)a[d].m(t,null);Bt(u,e,h),Bt(u,n,h),i&&oa(i,n,null),r=!0},p(u,[h]){if(h&19){o=u[1];let f;for(f=0;f<o.length;f+=1){const p=hS(u,o,f);a[f]?a[f].p(p,h):(a[f]=dS(p),a[f].c(),a[f].m(t,null))}for(;f<a.length;f+=1)a[f].d(1);a.length=o.length}const d={};if(h&1&&(d.mode=u[3][u[0]]),l!==(l=u[2][u[0]])){if(i){xS();const f=i;eo(f.$$.fragment,1,0,()=>{aa(f,1)}),vS()}l?(i=hy(l,c(u)),Dl(i.$$.fragment),Ar(i.$$.fragment,1),oa(i,n,null)):i=null}else l&&i.$set(d)},i(u){r||(i&&Ar(i.$$.fragment,u),r=!0)},o(u){i&&eo(i.$$.fragment,u),r=!1},d(u){u&&Ot(t),Gx(a,u),u&&Ot(e),u&&Ot(n),i&&aa(i)}}}const lct=2;function cct(s,t,e){const n=["Draw","Play","Train","Teach"],i=[bz,Cz,Ez,ict],r=[];let o=-1,a;bC.subscribe(u=>{u&&(a=u,r.push(new rct(a)),r.push(new _C(a)),r.push(new oct(a)),r.push(new ect(a)),l(lct))});function l(u){o!==u&&(o!==-1&&r[o].deactivate(),e(0,o=u),r[o].activate(),a.requestCallbackBeforeRender(r[o].update.bind(r[o])))}return[o,n,i,r,l,u=>l(u)]}class uct extends ho{constructor(t){super(),uo(this,t,cct,act,lr,{})}}function hct(s){let t,e,n,i,r,o,a;return n=new gz({}),o=new uct({}),{c(){t=Yt("main"),e=Yt("div"),Dl(n.$$.fragment),i=pe(),r=Yt("div"),Dl(o.$$.fragment),_t(e,"id","canvas-pane"),_t(e,"class","svelte-k4hl9j"),_t(r,"id","menu-pane"),_t(r,"class","overflow-y-scroll svelte-k4hl9j"),_t(t,"class","svelte-k4hl9j")},m(l,c){Bt(l,t,c),re(t,e),oa(n,e,null),re(t,i),re(t,r),oa(o,r,null),a=!0},p:Sn,i(l){a||(Ar(n.$$.fragment,l),Ar(o.$$.fragment,l),a=!0)},o(l){eo(n.$$.fragment,l),eo(o.$$.fragment,l),a=!1},d(l){l&&Ot(t),aa(n),aa(o)}}}class dct extends ho{constructor(t){super(),uo(this,t,null,hct,lr,{})}}new dct({target:document.getElementById("app")});
